#!/usr/bin/env python3

import csv
import ctypes
import enum
from multiprocessing import Lock, Pool
from multiprocessing.managers import SyncManager
import signal
import time

import enumerative
import normalized
import util

r"""Code for extracting tests from sygus benchmark files.

def spec_to_testcase(spec_filename):
    testcase = {}
    testcase['desc'] = os.path.basename(spec_filename)
    with open(spec_filename, 'r') as spec_file:
        spec_ = spec.Spec.from_sexp(sexp.scan(spec_file))
        testcase['master'] = spec_.funcs[-1].body
        testcase['ops'] = []
        testcase['vars'] = []
        for prod in spec_.grammar._rules['Start']:
            if type(prod) == tuple:
                testcase['ops'].append(prod[0])
            else:
                testcase['vars'].append(prod)
    return testcase

def test_number(test):
    m = re.match(r'hd-(\d+)-d(\d+)-prog.sl', test['desc'])
    if m == None:
        return None, None
    else:
        return 100 * int(m.group(2)) + int(m.group(1))

def extract_tests(test_dir):
    tests = []
    for filename in os.listdir(test_dir):
        if re.match(r'^hd', filename) is not None:
            tests.append(spec_to_testcase(os.path.join(test_dir, filename)))
    return sorted(tests, key=test_number)
"""

# Note that tests 10-12 and 18 are not used.
TESTCASES = [
    # {'desc': 'hd-01-d0-prog.sl',
    #  'master': ('bvand', 'x', ('bvsub', 'x', '#x00000001')),
    #  'ops': ['bvsub', 'bvand'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-02-d0-prog.sl',
    #  'master': ('bvand', 'x', ('bvadd', 'x', '#x00000001')),
    #  'ops': ['bvand', 'bvadd'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-03-d0-prog.sl',
    #  'master': ('bvand', 'x', ('bvneg', 'x')),
    #  'ops': ['bvneg', 'bvand'],
    #  'vars': ['x']},
    # {'desc': 'hd-04-d0-prog.sl',
    #  'master': ('bvxor', 'x', ('bvsub', 'x', '#x00000001')),
    #  'ops': ['bvsub', 'bvxor'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-05-d0-prog.sl',
    #  'master': ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
    #  'ops': ['bvsub', 'bvor'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-06-d0-prog.sl',
    #  'master': ('bvor', 'x', ('bvadd', 'x', '#x00000001')),
    #  'ops': ['bvor', 'bvadd'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-07-d0-prog.sl',
    #  'master': ('bvand', ('bvnot', 'x'), ('bvadd', 'x', '#x00000001')),
    #  'ops': ['bvnot', 'bvadd', 'bvand'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-08-d0-prog.sl',
    #  'master': ('bvand', ('bvnot', 'x'), ('bvsub', 'x', '#x00000001')),
    #  'ops': ['bvsub', 'bvnot', 'bvand'],
    #  'vars': ['x', '#x00000001']},
    # {'desc': 'hd-09-d0-prog.sl',
    #  'master': ('bvsub',
    #             ('bvxor', 'x', ('bvashr', 'x', '#x0000001F')),
    #             ('bvashr', 'x', '#x0000001F')),
    #  'ops': ['bvsub', 'bvashr', 'bvxor'],
    #  'vars': ['#x0000001F', 'x']},
    # # {'desc': 'hd-10-d0-prog.sl',
    # #  'master': ('bvule', ('bvand', 'x', 'y'), ('bvxor', 'x', 'y')),
    # #  'ops': ['bvule'],
    # #  'vars': []},
    # # {'desc': 'hd-11-d0-prog.sl',
    # #  'master': ('bvugt', ('bvand', 'x', ('bvnot', 'y')), 'y'),
    # #  'ops': ['bvugt'],
    # #  'vars': []},
    # # {'desc': 'hd-12-d0-prog.sl',
    # #  'master': ('bvule', ('bvand', 'x', ('bvnot', 'y')), 'y'),
    # #  'ops': ['bvule'],
    # #  'vars': []},
    # {'desc': 'hd-13-d0-prog.sl',
    #  'master': ('bvor',
    #             ('bvashr', 'x', '#x0000001F'),
    #             ('bvlshr', ('bvneg', 'x'), '#x0000001F')),
    #  'ops': ['bvor', 'bvlshr', 'bvashr', 'bvneg'],
    #  'vars': ['#x0000001F', 'x']},
    # {'desc': 'hd-14-d0-prog.sl',
    #  'master': ('bvadd',
    #             ('bvand', 'x', 'y'),
    #             ('bvlshr', ('bvxor', 'x', 'y'), '#x00000001')),
    #  'ops': ['bvlshr', 'bvadd', 'bvand', 'bvxor'],
    #  'vars': ['y', '#x00000001', 'x']},
    # {'desc': 'hd-15-d0-prog.sl',
    #  'master': ('bvsub',
    #             ('bvor', 'x', 'y'),
    #             ('bvlshr', ('bvxor', 'x', 'y'), '#x00000001')),
    #  'ops': ['bvsub', 'bvor', 'bvlshr', 'bvxor'],
    #  'vars': ['y', '#x00000001', 'x']},
    # {'desc': 'hd-17-d0-prog.sl',
    #  'master': ('bvand',
    #             ('bvadd',
    #              ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
    #              '#x00000001'),
    #             'x'),
    #  'ops': ['bvsub', 'bvor', 'bvadd', 'bvand'],
    #  'vars': ['#x00000001', 'x']},
    # # {'desc': 'hd-18-d0-prog.sl',
    # #  'master': ('and',
    # #             ('not',
    # #              ('bvredor', ('bvand', ('bvsub', 'x', '#x00000001'), 'x'))),
    # #             ('bvredor', 'x')),
    # #  'ops': ['bvredor', 'and', 'not'],
    # #  'vars': []},
    # {'desc': 'hd-19-d0-prog.sl',
    #  'master': ('bvxor',
    #             'x',
    #             ('bvxor',
    #              ('bvshl',
    #               ('bvand', ('bvxor', ('bvlshr', 'x', 'k'), 'x'), 'm'),
    #               'k'),
    #              ('bvand', ('bvxor', ('bvlshr', 'x', 'k'), 'x'), 'm'))),
    #  'ops': ['bvxor', 'bvlshr', 'bvand', 'bvshl'],
    #  'vars': ['k', 'x', 'm']},
    # {'desc': 'hd-20-d0-prog.sl',
    #  'master': ('bvor',
    #             ('bvadd', 'x', ('bvand', ('bvneg', 'x'), 'x')),
    #             ('bvudiv',
    #              ('bvlshr',
    #               ('bvxor', 'x', ('bvand', ('bvneg', 'x'), 'x')),
    #               '#x00000002'),
    #              ('bvand', ('bvneg', 'x'), 'x'))),
    #  'ops': ['bvor', 'bvlshr', 'bvadd', 'bvand', 'bvneg', 'bvudiv', 'bvxor'],
    #  'vars': ['#x00000002', 'x']},
    {'desc': 'hd-01-d1-prog.sl',
     'master': ('bvand', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvand', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-02-d1-prog.sl',
     'master': ('bvand', 'x', ('bvadd', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvand', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-03-d1-prog.sl',
     'master': ('bvand', 'x', ('bvneg', 'x')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvand', 'bvneg'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-04-d1-prog.sl',
     'master': ('bvxor', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvand', 'bvneg', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-05-d1-prog.sl',
     'master': ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvand', 'bvneg', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-06-d1-prog.sl',
     'master': ('bvor', 'x', ('bvadd', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvand', 'bvneg', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-07-d1-prog.sl',
     'master': ('bvand', ('bvnot', 'x'), ('bvadd', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvnot', 'bvand', 'bvneg', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-08-d1-prog.sl',
     'master': ('bvand', ('bvnot', 'x'), ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvnot', 'bvand', 'bvneg', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-09-d1-prog.sl',
     'master': ('bvsub',
                ('bvxor', 'x', ('bvashr', 'x', '#x0000001F')),
                ('bvashr', 'x', '#x0000001F')),
     'ops': ['bvsub', 'bvor', 'bvlshr', 'bvashr', 'bvadd', 'bvand', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    # {'desc': 'hd-10-d1-prog.sl',
    #  'master': ('bvule', ('bvand', 'x', 'y'), ('bvxor', 'x', 'y')),
    #  'ops': ['bvsle', 'bvule'],
    #  'vars': []},
    # {'desc': 'hd-11-d1-prog.sl',
    #  'master': ('bvugt', ('bvand', 'x', ('bvnot', 'y')), 'y'),
    #  'ops': ['bvugt', 'bvuge'],
    #  'vars': []},
    # {'desc': 'hd-12-d1-prog.sl',
    #  'master': ('bvule', ('bvand', 'x', ('bvnot', 'y')), 'y'),
    #  'ops': ['bvult', 'bvule'],
    #  'vars': []},
    {'desc': 'hd-13-d1-prog.sl',
     'master': ('bvor',
                ('bvashr', 'x', '#x0000001F'),
                ('bvlshr', ('bvneg', 'x'), '#x0000001F')),
     'ops': ['bvsub',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvadd',
             'bvnot',
             'bvand',
             'bvneg',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    {'desc': 'hd-14-d1-prog.sl',
     'master': ('bvadd',
                ('bvand', 'x', 'y'),
                ('bvlshr', ('bvxor', 'x', 'y'), '#x00000001')),
     'ops': ['bvsub',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvadd',
             'bvnot',
             'bvand',
             'bvneg',
             'bvxor'],
     'vars': ['#xFFFFFFFF', 'y', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-15-d1-prog.sl',
     'master': ('bvsub',
                ('bvor', 'x', 'y'),
                ('bvlshr', ('bvxor', 'x', 'y'), '#x00000001')),
     'ops': ['bvsub',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvadd',
             'bvnot',
             'bvand',
             'bvneg',
             'bvxor'],
     'vars': ['#xFFFFFFFF', 'y', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-17-d1-prog.sl',
     'master': ('bvand',
                ('bvadd',
                 ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
                 '#x00000001'),
                'x'),
     'ops': ['bvsub', 'bvor', 'bvadd', 'bvnot', 'bvand', 'bvneg', 'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    # {'desc': 'hd-18-d1-prog.sl',
    #  'master': ('and',
    #             ('not',
    #              ('bvredor', ('bvand', ('bvsub', 'x', '#x00000001'), 'x'))),
    #             ('bvredor', 'x')),
    #  'ops': ['bvredor', 'or', 'and', 'not'],
    #  'vars': []},
    {'desc': 'hd-19-d1-prog.sl',
     'master': ('bvxor',
                'x',
                ('bvxor',
                 ('bvshl',
                  ('bvand', ('bvxor', ('bvlshr', 'x', 'k'), 'x'), 'm'),
                  'k'),
                 ('bvand', ('bvxor', ('bvlshr', 'x', 'k'), 'x'), 'm'))),
     'ops': ['bvxor',
             'bvsub',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvnot',
             'bvand',
             'bvneg',
             'bvshl'],
     'vars': ['k', 'x', 'm']},
    {'desc': 'hd-20-d1-prog.sl',
     'master': ('bvor',
                ('bvadd', 'x', ('bvand', ('bvneg', 'x'), 'x')),
                ('bvudiv',
                 ('bvlshr',
                  ('bvxor', 'x', ('bvand', ('bvneg', 'x'), 'x')),
                  '#x00000002'),
                 ('bvand', ('bvneg', 'x'), 'x'))),
     'ops': ['bvsub',
             'bvor',
             'bvlshr',
             'bvadd',
             'bvnot',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#x00000002', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-01-d2-prog.sl',
     'master': ('bvand', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvor',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-01-d4-prog.sl',
     'master': ('bvand', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-02-d4-prog.sl',
     'master': ('bvand', 'x', ('bvadd', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-03-d4-prog.sl',
     'master': ('bvand', 'x', ('bvneg', 'x')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-04-d4-prog.sl',
     'master': ('bvxor', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-05-d4-prog.sl',
     'master': ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-06-d4-prog.sl',
     'master': ('bvor', 'x', ('bvadd', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-07-d4-prog.sl',
     'master': ('bvand', ('bvnot', 'x'), ('bvadd', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-08-d4-prog.sl',
     'master': ('bvand', ('bvnot', 'x'), ('bvsub', 'x', '#x00000001')),
     'ops': ['bvsub',
             'bvurem',
             'bvor',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-01-d5-prog.sl',
     'master': ('bvand', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-02-d5-prog.sl',
     'master': ('bvand', 'x', ('bvadd', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-03-d5-prog.sl',
     'master': ('bvand', 'x', ('bvneg', 'x')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-04-d5-prog.sl',
     'master': ('bvxor', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-05-d5-prog.sl',
     'master': ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', 'x']},
    {'desc': 'hd-06-d5-prog.sl',
     'master': ('bvor', 'x', ('bvadd', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-07-d5-prog.sl',
     'master': ('bvand', ('bvnot', 'x'), ('bvadd', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-08-d5-prog.sl',
     'master': ('bvand', ('bvnot', 'x'), ('bvsub', 'x', '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000000', '#x00000001', 'x']},
    {'desc': 'hd-09-d5-prog.sl',
     'master': ('bvsub',
                ('bvxor', 'x', ('bvashr', 'x', '#x0000001F')),
                ('bvashr', 'x', '#x0000001F')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    # {'desc': 'hd-10-d5-prog.sl',
    #  'master': ('bvule', ('bvand', 'x', 'y'), ('bvxor', 'x', 'y')),
    #  'ops': ['bvslt', 'bvsle', 'bvult', 'bvule', '='],
    #  'vars': []},
    # {'desc': 'hd-11-d5-prog.sl',
    #  'master': ('bvugt', ('bvand', 'x', ('bvnot', 'y')), 'y'),
    #  'ops': ['bvslt', 'bvsle', 'bvult', 'bvule', '='],
    #  'vars': []},
    # {'desc': 'hd-12-d5-prog.sl',
    #  'master': ('bvule', ('bvand', 'x', ('bvnot', 'y')), 'y'),
    #  'ops': ['bvslt', 'bvsle', 'bvult', 'bvule', '='],
    #  'vars': []},
    {'desc': 'hd-13-d5-prog.sl',
     'master': ('bvor',
                ('bvashr', 'x', '#x0000001F'),
                ('bvlshr', ('bvneg', 'x'), '#x0000001F')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    {'desc': 'hd-14-d5-prog.sl',
     'master': ('bvadd',
                ('bvand', 'x', 'y'),
                ('bvlshr', ('bvxor', 'x', 'y'), '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', 'y', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    {'desc': 'hd-15-d5-prog.sl',
     'master': ('bvsub',
                ('bvor', 'x', 'y'),
                ('bvlshr', ('bvxor', 'x', 'y'), '#x00000001')),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', 'y', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    {'desc': 'hd-17-d5-prog.sl',
     'master': ('bvand',
                ('bvadd',
                 ('bvor', 'x', ('bvsub', 'x', '#x00000001')),
                 '#x00000001'),
                'x'),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', '#x0000001F', 'x']},
    # {'desc': 'hd-18-d5-prog.sl',
    #  'master': ('and',
    #             ('not',
    #              ('bvredor', ('bvand', ('bvsub', 'x', '#x00000001'), 'x'))),
    #             ('bvredor', 'x')),
    #  'ops': ['bvslt', 'bvsle', 'bvult', 'bvule', '='],
    #  'vars': []},
    {'desc': 'hd-19-d5-prog.sl',
     'master': ('bvxor',
                'x',
                ('bvxor',
                 ('bvshl',
                  ('bvand', ('bvxor', ('bvlshr', 'x', 'k'), 'x'), 'm'),
                  'k'),
                 ('bvand', ('bvxor', ('bvlshr', 'x', 'k'), 'x'), 'm'))),
     'ops': ['bvor',
             'bvnot',
             'bvashr',
             'bvsrem',
             'bvmul',
             'bvshl',
             'bvurem',
             'bvsdiv',
             'bvneg',
             'bvxor',
             'bvsub',
             'bvlshr',
             'bvadd',
             'bvand',
             'bvudiv'],
     'vars': ['#x00000000',
              '#x0000001F',
              'm',
              'k',
              '#xFFFFFFFF',
              '#x00000001',
              'x']},
    {'desc': 'hd-20-d5-prog.sl',
     'master': ('bvor',
                ('bvadd', 'x', ('bvand', ('bvneg', 'x'), 'x')),
                ('bvudiv',
                 ('bvlshr',
                  ('bvxor', 'x', ('bvand', ('bvneg', 'x'), 'x')),
                  '#x00000002'),
                 ('bvand', ('bvneg', 'x'), 'x'))),
     'ops': ['bvshl',
             'bvsub',
             'bvurem',
             'bvor',
             'bvlshr',
             'bvashr',
             'bvsrem',
             'bvadd',
             'bvnot',
             'bvmul',
             'bvand',
             'bvsdiv',
             'bvneg',
             'bvudiv',
             'bvxor'],
     'vars': ['#xFFFFFFFF', '#x00000001', '#x00000000', '#x0000001F', 'x']}]

class TestStatus(enum.Enum):
    timeout = 0
    failed = 1
    ok = 2

# Create and register alarm signal handler.
def handler(*_):
    raise TimeoutError('Solve timed out.')
signal.signal(signal.SIGALRM, handler)

def benchmark_solver(testcase, solver, timeout=1200):
    oracle = util.Oracle()
    start = time.perf_counter()
    signal.alarm(timeout)
    try:
        result = solver(testcase['vars'], 
                        {op: util.ALL_OPERATORS[op] for op in testcase['ops']}, 
                        testcase['master'],
                        oracle)
    except (TimeoutError, ctypes.ArgumentError):
        print('Finished {}. Timed out. ({})'.format(testcase['desc'],
                                                    solver.__module__))
        return TestStatus.timeout, 0, 0, 0, 0
    finally:
        signal.alarm(0) # Cancel alarm
    end = time.perf_counter()

    solved, _ = oracle.check(util.expr_to_z3(result),
                             util.expr_to_z3(testcase['master']))
    if not solved:
        print('Finished {}. Failed. ({})'.format(testcase['desc'],
                                                 solver.__module__))
        return TestStatus.failed, 0, 0, 0, 0
    else:
        stats = oracle.get_stats()
        return (TestStatus.ok, end - start, 
                stats['solve_count'], stats['examine_count'], stats['max_mem'])

def try_sum(e1, e2):
    try:
        return e1 + e2
    except TypeError:
        return e1

def tuple_sum(t1, t2):
    if len(t1) != len(t2):
        raise ValueError
    else:
        return tuple(e1 + e2 \
                     if type(e1) in (int, float) and type(e2) in (int, float) \
                     else e1 for e1, e2 in zip(t1, t2))

def tuple_avg(tuples):
    total = (0,) * len(tuples[0])
    for t in tuples:
        total = tuple_sum(total, t)
    return tuple(e / len(tuples) if type(e) in (int, float) else e for e in total)

class TestcaseRunner(object):
    def __init__(self, writer):
        self.writer = writer

    def __call__(self, testcase):
        print('Starting {} (Enumerative)'.format(testcase['desc']))
        enum_times = [benchmark_solver(testcase, enumerative.solve) \
                      for _ in range(5)]
        enum_status, enum_time, enum_calls, enum_ex, enum_mem = tuple_avg(enum_times)

        print('Starting {} (Normalized)'.format(testcase['desc']))
        norm_times = [benchmark_solver(testcase, normalized.solve) \
                      for _ in range(5)]
        norm_status, norm_time, norm_calls, norm_ex, norm_mem = tuple_avg(norm_times)

        self.writer({
            'testcase-name': testcase['desc'],
            'enum-status': enum_status,
            'enum-time': enum_time,
            'enum-calls': enum_calls,
            'enum-examined': enum_ex,
            'enum-mem': enum_mem,
            'norm-status': norm_status,
            'norm-time': norm_time,
            'norm-calls': norm_calls,
            'norm-examined': norm_ex,
            'norm-mem': norm_mem,
        })

class LockedWriter(object):
    def __init__(self, filename, fieldnames, lock):
        self.filename = filename
        self.fieldnames = fieldnames
        self.lock = lock

    def __call__(self, row):
        self.lock.acquire()
        with open(self.filename, 'a', newline='') as f:
            csv.DictWriter(f, self.fieldnames).writerow(row)
        self.lock.release()

def test_hackersdelight(output_filename):
    p = Pool()

    fieldnames = ['testcase-name', 'enum-status', 'norm-status', 'enum-time',
                  'norm-time', 'enum-calls', 'norm-calls', 'enum-examined',
                  'norm-examined', 'enum-mem', 'norm-mem']

    with open(output_filename, 'a', newline='') as output_file:
        output_file.truncate()
        csv.DictWriter(output_file, fieldnames).writeheader()

    manager = SyncManager()
    manager.start()
    writer = LockedWriter(output_filename, fieldnames, manager.Lock())
    runner = TestcaseRunner(writer)
    p.map(runner, TESTCASES)

if __name__ == '__main__':
    test_hackersdelight('timing_p.csv')
