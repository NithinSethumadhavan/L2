{"name": "replacet", "time": 0.00062, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 3) -> {}", "(replacet {[8 2 8 1 8]} 3 1) -> {[8 2 8 1 8]}", "(replacet {} 9 5) -> {}", "(replacet {[7 7 5] {[] {[]}}} 6 4) -> {[7 7 5] {[] {[]}}}", "(replacet {} 2 7) -> {}", "(replacet {[7 0 5 5] {[3 4 5 7] {[7 8]}}} 9 1) -> {[7 0 5 5] {[3 4 5 7] {[7 8]}}}", "(replacet {} 1 3) -> {}"]}
{"name": "replacet", "time": 0.000549, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 4 9) -> {}", "(replacet {[2 1 1] {[3 6 4]}} 5 1) -> {[2 1 1] {[3 6 4]}}", "(replacet {[3 9] {[3 8 1 6]}} 7 6) -> {[3 9] {[3 8 1 6]}}", "(replacet {[9 7]} 5 6) -> {[9 7]}", "(replacet {[0]} 6 1) -> {[0]}", "(replacet {} 7 9) -> {}", "(replacet {} 6 0) -> {}"]}
{"name": "replacet", "time": 0.000937, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 1 7) -> {}", "(replacet {[] {[8 6]} {[1]}} 0 7) -> {[] {[8 6]} {[1]}}", "(replacet {} 0 1) -> {}", "(replacet {[9 4]} 8 0) -> {[9 4]}", "(replacet {} 9 8) -> {}", "(replacet {} 1 4) -> {}", "(replacet {[3 3 4]} 2 1) -> {[3 3 4]}"]}
{"name": "replacet", "time": 0.001054, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 5 5) -> {}", "(replacet {} 0 3) -> {}", "(replacet {} 0 7) -> {}", "(replacet {[3 2 0] {[0 1 1]} {[1 8 7]}} 4 2) -> {[3 2 0] {[0 1 1]} {[1 8 7]}}", "(replacet {[7 9 5 2 2] {[8 5]}} 4 7) -> {[7 9 5 2 2] {[8 5]}}", "(replacet {[8 7 5] {[8 9 0 6 9] {[0 8 5 2 6] {[]} {[0 1 3 3]}}}} 4 1) -> {[8 7 5] {[8 9 0 6 9] {[0 8 5 2 6] {[]} {[0 1 3 3]}}}}", "(replacet {[8 1] {[]} {[5 7 8 5]}} 9 8) -> {[8 1] {[]} {[5 7 8 5]}}"]}
{"name": "replacet", "time": 14.851763, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 6) -> {}", "(replacet {[2 6 5] {[7 3 5]}} 4 7) -> {[2 6 5] {[7 3 5]}}", "(replacet {} 8 9) -> {}", "(replacet {[] {[5 4 5]}} 5 1) -> {[] {[1 4 1]}}", "(replacet {[] {[5 4 1] {[] {[8 3 2 6]} {[1]}} {[4 1 9 8] {[2 1 1 9]}}} {[2 9 6] {[1 9 3 6] {[5 2 6 7]}}}} 7 9) -> {[] {[5 4 1] {[] {[8 3 2 6]} {[1]}} {[4 1 9 8] {[2 1 1 9]}}} {[2 9 6] {[1 9 3 6] {[5 2 6 9]}}}}", "(replacet {[] {[7 8 1 9]}} 4 9) -> {[] {[7 8 1 9]}}", "(replacet {[7 2 0 7] {[1] {[3 2 0]} {[5]}}} 1 1) -> {[7 2 0 7] {[1] {[3 2 0]} {[5]}}}"]}
{"name": "replacet", "time": 15.82298, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 4) -> {}", "(replacet {[6]} 4 1) -> {[6]}", "(replacet {} 1 0) -> {}", "(replacet {} 0 4) -> {}", "(replacet {[1 7] {[9]} {[7]}} 9 2) -> {[1 7] {[2]} {[7]}}", "(replacet {[7 3 4 4 8] {[4 9 5 9 2]}} 4 1) -> {[7 3 1 1 8] {[1 9 5 9 2]}}", "(replacet {} 9 2) -> {}"]}
{"name": "replacet", "time": 16.238181, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 2 2) -> {}", "(replacet {[1 5 6 9] {[5] {[1 9 4 2]} {[6 4 9 8 2]}}} 1 9) -> {[9 5 6 9] {[5] {[9 9 4 2]} {[6 4 9 8 2]}}}", "(replacet {[5 1 3 6]} 0 6) -> {[5 1 3 6]}", "(replacet {[3 7 4 9]} 6 9) -> {[3 7 4 9]}", "(replacet {[9] {[3 1 0]} {[3 3 5] {[]} {[7 9 0]}}} 3 1) -> {[9] {[1 1 0]} {[1 1 5] {[]} {[7 9 0]}}}", "(replacet {[3 1 7] {[] {[9 5 0 1 3] {[]}}}} 6 6) -> {[3 1 7] {[] {[9 5 0 1 3] {[]}}}}", "(replacet {[4] {[]}} 6 8) -> {[4] {[]}}"]}
{"name": "replacet", "time": 16.253322, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 7) -> {}", "(replacet {} 2 9) -> {}", "(replacet {} 2 5) -> {}", "(replacet {[8 0 1 2 4] {[5] {[]}}} 4 6) -> {[8 0 1 2 6] {[5] {[]}}}", "(replacet {[7 0] {[0 7]}} 3 1) -> {[7 0] {[0 7]}}", "(replacet {} 1 3) -> {}", "(replacet {[8] {[8 3 6 1]}} 4 7) -> {[8] {[8 3 6 1]}}"]}
{"name": "replacet", "time": 16.379749, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 2 3) -> {}", "(replacet {[]} 4 3) -> {[]}", "(replacet {[3 8] {[3 7 0]} {[] {[9]}}} 9 4) -> {[3 8] {[3 7 0]} {[] {[4]}}}", "(replacet {[2 6 7 1 6]} 8 8) -> {[2 6 7 1 6]}", "(replacet {[7 9]} 3 8) -> {[7 9]}", "(replacet {[]} 8 1) -> {[]}", "(replacet {[] {[9 8]} {[]}} 2 1) -> {[] {[9 8]} {[]}}"]}
{"name": "replacet", "time": 16.418822, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 9) -> {}", "(replacet {[6 7]} 2 1) -> {[6 7]}", "(replacet {[9 8] {[8 9 6 6 0]}} 0 8) -> {[9 8] {[8 9 6 6 8]}}", "(replacet {[] {[6] {[4 8]} {[5 6] {[9 1]} {[8 3 9 2]}}}} 0 3) -> {[] {[6] {[4 8]} {[5 6] {[9 1]} {[8 3 9 2]}}}}", "(replacet {[2 5 2 7 5]} 7 5) -> {[2 5 2 5 5]}", "(replacet {[1 0 3] {[5 3 9 0 3]} {[8 1]}} 7 8) -> {[1 0 3] {[5 3 9 0 3]} {[8 1]}}", "(replacet {[6 2 9] {[0]} {[3] {[2 4 7 5 2]}}} 3 5) -> {[6 2 9] {[0]} {[5] {[2 4 7 5 2]}}}"]}
{"name": "replacet", "time": 16.430089, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 3) -> {}", "(replacet {[] {[] {[3]}} {[7 7 4]}} 2 2) -> {[] {[] {[3]}} {[7 7 4]}}", "(replacet {} 4 3) -> {}", "(replacet {[] {[6 9 7 8 9] {[1 7]}} {[1 4] {[] {[]} {[5]}} {[7 7] {[5 6 2 3 2]}}}} 1 2) -> {[] {[6 9 7 8 9] {[2 7]}} {[2 4] {[] {[]} {[5]}} {[7 7] {[5 6 2 3 2]}}}}", "(replacet {[2] {[4]} {[7 9]}} 3 0) -> {[2] {[4]} {[7 9]}}", "(replacet {[3 1 5 1]} 2 4) -> {[3 1 5 1]}", "(replacet {} 5 6) -> {}"]}
{"name": "replacet", "time": 16.567648, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 5) -> {}", "(replacet {[3 1 2 0] {[5] {[]}} {[] {[9 6 9]}}} 9 4) -> {[3 1 2 0] {[5] {[]}} {[] {[4 6 4]}}}", "(replacet {[7]} 3 4) -> {[7]}", "(replacet {} 5 3) -> {}", "(replacet {[6] {[9 0 1]}} 5 3) -> {[6] {[9 0 1]}}", "(replacet {[5 3 5 1]} 9 5) -> {[5 3 5 1]}", "(replacet {[8 5 3 6 5]} 7 7) -> {[8 5 3 6 5]}"]}
{"name": "replacet", "time": 16.485632, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 4) -> {}", "(replacet {[9 6 0 9] {[3 3 6 2] {[9] {[4 3]}} {[3 0 8] {[]} {[7 3 4]}}}} 1 4) -> {[9 6 0 9] {[3 3 6 2] {[9] {[4 3]}} {[3 0 8] {[]} {[7 3 4]}}}}", "(replacet {[] {[6 4 5 7]}} 2 7) -> {[] {[6 4 5 7]}}", "(replacet {[2 8]} 6 2) -> {[2 8]}", "(replacet {[2 5 3] {[1 7 5 9] {[9]}}} 3 1) -> {[2 5 1] {[1 7 5 9] {[9]}}}", "(replacet {[4 2 8 0] {[2 5 8]} {[4 4]}} 8 1) -> {[4 2 1 0] {[2 5 1]} {[4 4]}}", "(replacet {[8] {[1 9 5 3]}} 6 3) -> {[8] {[1 9 5 3]}}"]}
{"name": "replacet", "time": 17.297692, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 3) -> {}", "(replacet {[8] {[6 4 1 7 3]} {[]}} 1 0) -> {[8] {[6 4 0 7 3]} {[]}}", "(replacet {[2 5 8]} 5 1) -> {[2 1 8]}", "(replacet {[1]} 8 9) -> {[1]}", "(replacet {} 8 5) -> {}", "(replacet {[3 2 5 0]} 9 7) -> {[3 2 5 0]}", "(replacet {[8]} 8 7) -> {[7]}"]}
{"name": "replacet", "time": 17.362642, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 8) -> {}", "(replacet {[]} 4 5) -> {[]}", "(replacet {[6 9 9 2 8] {[6 5 0]} {[6 3 0]}} 6 7) -> {[7 9 9 2 8] {[7 5 0]} {[7 3 0]}}", "(replacet {[7 1]} 0 9) -> {[7 1]}", "(replacet {[] {[2 4 2] {[2 0 1 0]}} {[1 6 0 8]}} 0 8) -> {[] {[2 4 2] {[2 8 1 8]}} {[1 6 8 8]}}", "(replacet {[] {[0 1]} {[1 9 5]}} 6 8) -> {[] {[0 1]} {[1 9 5]}}", "(replacet {[]} 8 0) -> {[]}"]}
{"name": "replacet", "time": 0.001025, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 6) -> {}", "(replacet {[7 8 2 1] {[5 8 4]}} 6 7) -> {[7 8 2 1] {[5 8 4]}}", "(replacet {[3]} 1 9) -> {[3]}", "(replacet {[9]} 4 7) -> {[9]}", "(replacet {[5 2 3 5 1]} 8 5) -> {[5 2 3 5 1]}", "(replacet {} 1 2) -> {}", "(replacet {[0 1 2 1] {[7 8 2]}} 9 7) -> {[0 1 2 1] {[7 8 2]}}"]}
{"name": "replacet", "time": 0.001245, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 7 5) -> {}", "(replacet {} 3 6) -> {}", "(replacet {[0] {[0 2 6 6] {[6 2 9 7 6]}}} 1 9) -> {[0] {[0 2 6 6] {[6 2 9 7 6]}}}", "(replacet {[3]} 2 6) -> {[3]}", "(replacet {[3]} 1 2) -> {[3]}", "(replacet {} 0 1) -> {}", "(replacet {[8]} 4 5) -> {[8]}"]}
{"name": "replacet", "time": 17.671692, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 4) -> {}", "(replacet {} 6 8) -> {}", "(replacet {[2 0 7] {[1 7 0 6]} {[0 5 1 3]}} 6 1) -> {[2 0 7] {[1 7 0 1]} {[0 5 1 3]}}", "(replacet {[7 1 8 5] {[2 9 8 8] {[2 8 1 7] {[]}} {[1 4 2 7 9]}}} 4 1) -> {[7 1 8 5] {[2 9 8 8] {[2 8 1 7] {[]}} {[1 1 2 7 9]}}}", "(replacet {[0 6 8 9 4] {[7]}} 1 5) -> {[0 6 8 9 4] {[7]}}", "(replacet {} 5 8) -> {}", "(replacet {[6 7]} 9 2) -> {[6 7]}"]}
{"name": "replacet", "time": 0.00098, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 9 9) -> {}", "(replacet {[9 7 3 9]} 6 2) -> {[9 7 3 9]}", "(replacet {[2 8]} 5 4) -> {[2 8]}", "(replacet {} 7 4) -> {}", "(replacet {[3 3 1] {[] {[4 8 5]} {[7 4 0]}}} 4 4) -> {[3 3 1] {[] {[4 8 5]} {[7 4 0]}}}", "(replacet {[9 8 1 9 9] {[]}} 4 0) -> {[9 8 1 9 9] {[]}}", "(replacet {[5]} 2 8) -> {[5]}"]}
{"name": "replacet", "time": 17.860925, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 9) -> {}", "(replacet {[7 4 8 8 6] {[9 5 2]} {[]}} 6 7) -> {[7 4 8 8 7] {[9 5 2]} {[]}}", "(replacet {[5 4 4 6 2]} 4 7) -> {[5 7 7 6 2]}", "(replacet {[0 4 4 0] {[8 1]}} 1 7) -> {[0 4 4 0] {[8 7]}}", "(replacet {[7 4] {[9] {[1 7 2 0 5]}} {[6 4]}} 0 9) -> {[7 4] {[9] {[1 7 2 9 5]}} {[6 4]}}", "(replacet {[7 5] {[5 6 8 7 2]} {[7 8]}} 4 1) -> {[7 5] {[5 6 8 7 2]} {[7 8]}}", "(replacet {} 6 0) -> {}"]}
{"name": "replacet", "time": 18.914535, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 5) -> {}", "(replacet {[]} 3 5) -> {[]}", "(replacet {[6 3 3 1] {[3 6] {[9 6 3 5]}} {[3 3 7 0 9] {[5 2 8 5 4]}}} 4 6) -> {[6 3 3 1] {[3 6] {[9 6 3 5]}} {[3 3 7 0 9] {[5 2 8 5 6]}}}", "(replacet {} 1 8) -> {}", "(replacet {} 7 6) -> {}", "(replacet {[7 2] {[]}} 4 6) -> {[7 2] {[]}}", "(replacet {[4] {[4]} {[]}} 5 6) -> {[4] {[4]} {[]}}"]}
{"name": "replacet", "time": 20.197757, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 9) -> {}", "(replacet {[4 5] {[6 6 7 5 8]} {[2 4 2]}} 1 1) -> {[4 5] {[6 6 7 5 8]} {[2 4 2]}}", "(replacet {} 2 5) -> {}", "(replacet {[]} 6 9) -> {[]}", "(replacet {[6 6]} 8 3) -> {[6 6]}", "(replacet {[2 9] {[0]} {[1] {[7 4 1]}}} 0 3) -> {[2 9] {[3]} {[1] {[7 4 1]}}}", "(replacet {[2 8] {[]}} 7 3) -> {[2 8] {[]}}"]}
{"name": "replacet", "time": 27.873247, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 5) -> {}", "(replacet {[4] {[8 7 9 2 8] {[2 8 3 9 7] {[8 4]}} {[3 1 1] {[]} {[3 0 5]}}} {[8 2 7 1] {[8] {[8 9]} {[3]}}}} 1 9) -> {[4] {[8 7 9 2 8] {[2 8 3 9 7] {[8 4]}} {[3 9 9] {[]} {[3 0 5]}}} {[8 2 7 9] {[8] {[8 9]} {[3]}}}}", "(replacet {[3 7]} 4 7) -> {[3 7]}", "(replacet {} 7 2) -> {}", "(replacet {} 5 5) -> {}", "(replacet {[7] {[] {[3 4 5]} {[7 4 9]}} {[9 7]}} 1 4) -> {[7] {[] {[3 4 5]} {[7 4 9]}} {[9 7]}}", "(replacet {[8] {[5 7] {[4 3 6 5 2] {[7 2]} {[2 5 1]}}} {[0 6] {[6] {[5 3 1 0 2]} {[]}} {[] {[8 0 3 4 1]}}}} 8 8) -> {[8] {[5 7] {[4 3 6 5 2] {[7 2]} {[2 5 1]}}} {[0 6] {[6] {[5 3 1 0 2]} {[]}} {[] {[8 0 3 4 1]}}}}"]}
{"name": "replacet", "time": 12.215966, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 4) -> {}", "(replacet {[7 3] {[8 9 8 3 8]}} 5 1) -> {[7 3] {[8 9 8 3 8]}}", "(replacet {[9 7 1 8] {[0 2 9 1]}} 9 8) -> {[8 7 1 8] {[0 2 8 1]}}", "(replacet {} 3 5) -> {}", "(replacet {[0 6 2] {[6 4 4 6 6]}} 8 4) -> {[0 6 2] {[6 4 4 6 6]}}", "(replacet {[0 5 1 6 6] {[4 0 6 4 0] {[5 1]}} {[7 8 8] {[5 9 9]} {[6 7 8]}}} 8 5) -> {[0 5 1 6 6] {[4 0 6 4 0] {[5 1]}} {[7 5 5] {[5 9 9]} {[6 7 5]}}}", "(replacet {[1 9 9 4 4]} 0 1) -> {[1 9 9 4 4]}"]}
{"name": "replacet", "time": 0.00134, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 2 0) -> {}", "(replacet {[]} 1 9) -> {[]}", "(replacet {[5]} 3 4) -> {[5]}", "(replacet {[0]} 5 2) -> {[0]}", "(replacet {} 1 3) -> {}", "(replacet {[2]} 2 2) -> {[2]}", "(replacet {[1 0 4 8]} 3 6) -> {[1 0 4 8]}"]}
{"name": "replacet", "time": 13.639447, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 2) -> {}", "(replacet {[9 7 2 3] {[7] {[]} {[3 9 4 3]}}} 4 9) -> {[9 7 2 3] {[7] {[]} {[3 9 9 3]}}}", "(replacet {[2 2] {[6] {[6 4] {[]}}} {[8] {[2 5 5 3]}}} 8 3) -> {[2 2] {[6] {[6 4] {[]}}} {[3] {[2 5 5 3]}}}", "(replacet {[1 1 5] {[9 7] {[1]} {[] {[0 0]} {[0 9]}}} {[9 7 5] {[] {[7 8 3]} {[4]}}}} 1 3) -> {[3 3 5] {[9 7] {[3]} {[] {[0 0]} {[0 9]}}} {[9 7 5] {[] {[7 8 3]} {[4]}}}}", "(replacet {[4 3 9 4]} 1 6) -> {[4 3 9 4]}", "(replacet {} 7 5) -> {}", "(replacet {[7 4] {[1] {[0 3 3 1] {[]} {[]}} {[9 2 2 4] {[]}}} {[3 6 6 7 6] {[6 0 1 9] {[]}}}} 7 9) -> {[9 4] {[1] {[0 3 3 1] {[]} {[]}} {[9 2 2 4] {[]}}} {[3 6 6 9 6] {[6 0 1 9] {[]}}}}"]}
{"name": "replacet", "time": 13.754479, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 7) -> {}", "(replacet {} 8 6) -> {}", "(replacet {[3 8 6] {[]}} 1 8) -> {[3 8 6] {[]}}", "(replacet {[3 7 6 5] {[7 9] {[0 8 1 4 5] {[1]}}} {[] {[6 9]}}} 2 8) -> {[3 7 6 5] {[7 9] {[0 8 1 4 5] {[1]}}} {[] {[6 9]}}}", "(replacet {[2] {[6 2 8] {[] {[5 0 8 4 9]} {[8 3 3 0 2]}} {[1]}} {[7 9 5] {[9 9 9 4 0] {[6 0 4 4]}}}} 6 1) -> {[2] {[1 2 8] {[] {[5 0 8 4 9]} {[8 3 3 0 2]}} {[1]}} {[7 9 5] {[9 9 9 4 0] {[1 0 4 4]}}}}", "(replacet {} 5 7) -> {}", "(replacet {[2 1 8 6] {[5 9] {[6 7] {[3 1 3]} {[7 6 4 4]}} {[3 9 2 8 7]}} {[6 7 9] {[5 4 2 7] {[2 6 6]} {[8 5 8]}}}} 0 4) -> {[2 1 8 6] {[5 9] {[6 7] {[3 1 3]} {[7 6 4 4]}} {[3 9 2 8 7]}} {[6 7 9] {[5 4 2 7] {[2 6 6]} {[8 5 8]}}}}"]}
{"name": "replacet", "time": 14.75171, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 7) -> {}", "(replacet {[2 1 0 9 4] {[1 4 5] {[4 2 4 6 1]}} {[8 2 8 8 3] {[2 5]}}} 1 5) -> {[2 5 0 9 4] {[5 4 5] {[4 2 4 6 5]}} {[8 2 8 8 3] {[2 5]}}}", "(replacet {[] {[3 1 6] {[1 0 0]}} {[6 8 1] {[8 3 9]} {[4]}}} 8 9) -> {[] {[3 1 6] {[1 0 0]}} {[6 9 1] {[9 3 9]} {[4]}}}", "(replacet {[7 3] {[5 7]} {[1 0]}} 5 2) -> {[7 3] {[2 7]} {[1 0]}}", "(replacet {[4]} 9 6) -> {[4]}", "(replacet {} 3 1) -> {}", "(replacet {} 4 3) -> {}"]}
{"name": "replacet", "time": 13.707382, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 3) -> {}", "(replacet {} 4 9) -> {}", "(replacet {[5 1]} 1 4) -> {[5 4]}", "(replacet {[4 3 7 1 0]} 7 7) -> {[4 3 7 1 0]}", "(replacet {[0 7 6 9 8] {[3 7 9 9] {[1]} {[0 7]}} {[5 0 3 5 1]}} 7 0) -> {[0 0 6 9 8] {[3 0 9 9] {[1]} {[0 0]}} {[5 0 3 5 1]}}", "(replacet {} 2 5) -> {}", "(replacet {} 1 4) -> {}"]}
{"name": "replacet", "time": 18.446718, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 2 9) -> {}", "(replacet {[6 9 8 7 4] {[]} {[1 3]}} 3 6) -> {[6 9 8 7 4] {[]} {[1 6]}}", "(replacet {[7 4 1 2] {[3] {[]} {[]}} {[5 7 5 2]}} 9 2) -> {[7 4 1 2] {[3] {[]} {[]}} {[5 7 5 2]}}", "(replacet {[7 6 4] {[4 8 0 8 7]}} 4 5) -> {[7 6 5] {[5 8 0 8 7]}}", "(replacet {} 2 5) -> {}", "(replacet {[]} 5 4) -> {[]}", "(replacet {[3 7] {[8 7 0]} {[]}} 7 0) -> {[3 0] {[8 0 0]} {[]}}"]}
{"name": "replacet", "time": 19.927561, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 3) -> {}", "(replacet {[1 0 9 1 2] {[5 7 1 8]} {[4 6 5 5 8]}} 3 0) -> {[1 0 9 1 2] {[5 7 1 8]} {[4 6 5 5 8]}}", "(replacet {[5 3 6 2 4]} 3 1) -> {[5 1 6 2 4]}", "(replacet {[3 9 6 6] {[6 4 3 9 0]} {[3 6 3 8]}} 9 0) -> {[3 0 6 6] {[6 4 3 0 0]} {[3 6 3 8]}}", "(replacet {[6] {[0 7] {[]}} {[8 9] {[6 6 6]}}} 7 0) -> {[6] {[0 0] {[]}} {[8 9] {[6 6 6]}}}", "(replacet {[4 2 7] {[] {[9 4] {[9]} {[4]}} {[2] {[7]}}} {[9 4] {[9 0 1 9] {[5 0 8]} {[4 6 5]}}}} 8 3) -> {[4 2 7] {[] {[9 4] {[9]} {[4]}} {[2] {[7]}}} {[9 4] {[9 0 1 9] {[5 0 3]} {[4 6 5]}}}}", "(replacet {[2] {[4 9 4]} {[3 8] {[0 7 8 4 6]} {[] {[5 1]} {[2 8 0 3 9]}}}} 6 2) -> {[2] {[4 9 4]} {[3 8] {[0 7 8 4 2]} {[] {[5 1]} {[2 8 0 3 9]}}}}"]}
{"name": "replacet", "time": 20.259689, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 7) -> {}", "(replacet {} 7 7) -> {}", "(replacet {} 6 9) -> {}", "(replacet {[5] {[]}} 8 8) -> {[5] {[]}}", "(replacet {[7 2 0 1 5]} 8 8) -> {[7 2 0 1 5]}", "(replacet {[7 8 7 8 3] {[5 5 2 8 3]}} 5 9) -> {[7 8 7 8 3] {[9 9 2 8 3]}}", "(replacet {} 8 3) -> {}"]}
{"name": "replacet", "time": 19.313094, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 6) -> {}", "(replacet {[0 0 9]} 5 2) -> {[0 0 9]}", "(replacet {[3] {[5]} {[7 2 3 2 0]}} 3 1) -> {[1] {[5]} {[7 2 1 2 0]}}", "(replacet {[]} 6 3) -> {[]}", "(replacet {} 0 2) -> {}", "(replacet {[] {[6] {[3 9]}} {[2]}} 8 4) -> {[] {[6] {[3 9]}} {[2]}}", "(replacet {[]} 3 6) -> {[]}"]}
{"name": "replacet", "time": 17.557387, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 4) -> {}", "(replacet {[3 7] {[9 9] {[1 9 8]} {[1 3 0 5 4]}}} 9 9) -> {[3 7] {[9 9] {[1 9 8]} {[1 3 0 5 4]}}}", "(replacet {[4 6 0]} 9 0) -> {[4 6 0]}", "(replacet {} 3 1) -> {}", "(replacet {[5 9] {[5] {[3 3 6 4] {[2]} {[2 0 4]}} {[8 9]}}} 1 7) -> {[5 9] {[5] {[3 3 6 4] {[2]} {[2 0 4]}} {[8 9]}}}", "(replacet {[5 5 2 3 4] {[9 8] {[5 3 6 8 2] {[7 0]}} {[0] {[6 6 1 7 8]} {[6]}}}} 5 9) -> {[9 9 2 3 4] {[9 8] {[9 3 6 8 2] {[7 0]}} {[0] {[6 6 1 7 8]} {[6]}}}}", "(replacet {[0 1 7 3] {[8]}} 0 1) -> {[1 1 7 3] {[8]}}"]}
{"name": "replacet", "time": 23.107575, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 5) -> {}", "(replacet {} 5 4) -> {}", "(replacet {[2 9 6 6 7] {[2 3 4] {[1 3]} {[4 5]}} {[2 6 3] {[0 2 3 6]}}} 8 7) -> {[2 9 6 6 7] {[2 3 4] {[1 3]} {[4 5]}} {[2 6 3] {[0 2 3 6]}}}", "(replacet {[0 0 0] {[6] {[9 3 9 1 9]} {[7 7 6] {[5 8 4]}}}} 3 8) -> {[0 0 0] {[6] {[9 8 9 1 9]} {[7 7 6] {[5 8 4]}}}}", "(replacet {[6 8 6 9] {[4 1 0 4 3]} {[8 0 1]}} 5 3) -> {[6 8 6 9] {[4 1 0 4 3]} {[8 0 1]}}", "(replacet {} 8 8) -> {}", "(replacet {[2 2 3 0 3] {[]} {[6 6]}} 2 1) -> {[1 1 3 0 3] {[]} {[6 6]}}"]}
{"name": "replacet", "time": 20.463895, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 6) -> {}", "(replacet {[1 3 6]} 7 6) -> {[1 3 6]}", "(replacet {[5 7] {[5] {[8 8 7 4] {[5 7 6 8]}} {[4 8 2]}} {[] {[]} {[6 1 3 4 0] {[]} {[3 7 2]}}}} 7 0) -> {[5 0] {[5] {[8 8 0 4] {[5 0 6 8]}} {[4 8 2]}} {[] {[]} {[6 1 3 4 0] {[]} {[3 0 2]}}}}", "(replacet {[9 8 3 5 1] {[9 2 8 5]}} 0 8) -> {[9 8 3 5 1] {[9 2 8 5]}}", "(replacet {} 4 1) -> {}", "(replacet {[6] {[]} {[5]}} 5 2) -> {[6] {[]} {[2]}}", "(replacet {[] {[3 7]} {[6 9 4 3]}} 3 3) -> {[] {[3 7]} {[6 9 4 3]}}"]}
{"name": "replacet", "time": 21.239233, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 5) -> {}", "(replacet {} 1 9) -> {}", "(replacet {[] {[9 2] {[2 9 1]} {[9]}} {[] {[8]} {[]}}} 4 6) -> {[] {[9 2] {[2 9 1]} {[9]}} {[] {[8]} {[]}}}", "(replacet {} 5 2) -> {}", "(replacet {[3 7 9 9 1]} 3 3) -> {[3 7 9 9 1]}", "(replacet {[6] {[0 2 1]}} 4 5) -> {[6] {[0 2 1]}}", "(replacet {[7 0 6 3 0]} 6 8) -> {[7 0 8 3 0]}"]}
{"name": "replacet", "time": 21.594918, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 6) -> {}", "(replacet {[1 4 8] {[9] {[8 5 9 0 1]} {[3]}} {[3 1 4 2 9] {[]}}} 0 2) -> {[1 4 8] {[9] {[8 5 9 2 1]} {[3]}} {[3 1 4 2 9] {[]}}}", "(replacet {[3 0 5 1]} 1 5) -> {[3 0 5 5]}", "(replacet {[6 9 0] {[6 0 8 7]}} 7 5) -> {[6 9 0] {[6 0 8 5]}}", "(replacet {[5 1 1] {[7 6]} {[7] {[9 3 8] {[4 9 5 1 5]}} {[6]}}} 4 0) -> {[5 1 1] {[7 6]} {[7] {[9 3 8] {[0 9 5 1 5]}} {[6]}}}", "(replacet {} 9 6) -> {}", "(replacet {[3 2 3 1 6] {[2 0] {[]}} {[4 4]}} 4 6) -> {[3 2 3 1 6] {[2 0] {[]}} {[6 6]}}"]}
{"name": "replacet", "time": 23.343243, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 0) -> {}", "(replacet {} 7 1) -> {}", "(replacet {[1 5 9] {[4 0 6 0] {[2 0] {[2 8 7 5]}}} {[9 1 4 2 1] {[] {[]}}}} 3 6) -> {[1 5 9] {[4 0 6 0] {[2 0] {[2 8 7 5]}}} {[9 1 4 2 1] {[] {[]}}}}", "(replacet {[] {[2 9 4 9]}} 3 4) -> {[] {[2 9 4 9]}}", "(replacet {[2 6] {[1]} {[0 5 2 1 6] {[0 3]} {[]}}} 0 7) -> {[2 6] {[1]} {[7 5 2 1 6] {[7 3]} {[]}}}", "(replacet {[5 6]} 4 3) -> {[5 6]}", "(replacet {[0 9 8 1]} 8 2) -> {[0 9 2 1]}"]}
{"name": "replacet", "time": 11.372197, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 0) -> {}", "(replacet {[] {[4]}} 2 3) -> {[] {[4]}}", "(replacet {[3 3 4 8 2] {[0 2 4]} {[]}} 4 2) -> {[3 3 2 8 2] {[0 2 2]} {[]}}", "(replacet {[2 0]} 4 7) -> {[2 0]}", "(replacet {[3 8 4 1] {[0 1 2 4]} {[]}} 2 2) -> {[3 8 4 1] {[0 1 2 4]} {[]}}", "(replacet {[1 7 6 3 9] {[0 2 3 6 7] {[7 3 7 7 7]}} {[7 8 9 0 6]}} 6 9) -> {[1 7 9 3 9] {[0 2 3 9 7] {[7 3 7 7 7]}} {[7 8 9 0 9]}}", "(replacet {} 2 4) -> {}"]}
{"name": "replacet", "time": 12.518318, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 4) -> {}", "(replacet {[5 9]} 1 6) -> {[5 9]}", "(replacet {[1 8 5 1] {[7 8 8]}} 8 4) -> {[1 4 5 1] {[7 4 4]}}", "(replacet {[8]} 4 7) -> {[8]}", "(replacet {[5 1 4 9 7] {[] {[8 2 5 6] {[0 4 2 6 9]} {[]}} {[7] {[7 3 4 2]} {[0 4 9 1]}}}} 7 0) -> {[5 1 4 9 0] {[] {[8 2 5 6] {[0 4 2 6 9]} {[]}} {[0] {[0 3 4 2]} {[0 4 9 1]}}}}", "(replacet {[7 3]} 4 8) -> {[7 3]}", "(replacet {[6 4 5 6] {[6 9 3]} {[2 2 6 2 4]}} 0 7) -> {[6 4 5 6] {[6 9 3]} {[2 2 6 2 4]}}"]}
{"name": "replacet", "time": 18.80332, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 0) -> {}", "(replacet {[8 4 1 1] {[7 6] {[3 5 9 5 2]}} {[5 2 0] {[8 5]}}} 4 0) -> {[8 0 1 1] {[7 6] {[3 5 9 5 2]}} {[5 2 0] {[8 5]}}}", "(replacet {} 0 1) -> {}", "(replacet {[1 0 5 6 2] {[3 7 5 3 4] {[]}}} 8 7) -> {[1 0 5 6 2] {[3 7 5 3 4] {[]}}}", "(replacet {[9] {[4 0 5 0]}} 3 0) -> {[9] {[4 0 5 0]}}", "(replacet {[] {[5]} {[4 8 8 7 4]}} 8 3) -> {[] {[5]} {[4 3 3 7 4]}}", "(replacet {[0 1] {[] {[]}} {[0 6 4] {[]} {[0 2]}}} 3 6) -> {[0 1] {[] {[]}} {[0 6 4] {[]} {[0 2]}}}"]}
{"name": "replacet", "time": 15.073893, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 8) -> {}", "(replacet {} 0 7) -> {}", "(replacet {[5 9 1 9]} 6 1) -> {[5 9 1 9]}", "(replacet {} 7 0) -> {}", "(replacet {[1 2]} 8 8) -> {[1 2]}", "(replacet {[] {[5 7 0 0 9] {[4]}} {[] {[7 9]}}} 4 5) -> {[] {[5 7 0 0 9] {[5]}} {[] {[7 9]}}}", "(replacet {[2 1 8 7 2] {[6 3 6 2 8] {[] {[2 7]}}}} 0 8) -> {[2 1 8 7 2] {[6 3 6 2 8] {[] {[2 7]}}}}"]}
{"name": "replacet", "time": 16.276001, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 3) -> {}", "(replacet {[4 1 7]} 9 2) -> {[4 1 7]}", "(replacet {[7 0 4 7] {[3 6 1 2] {[3 0 7 6]}}} 9 5) -> {[7 0 4 7] {[3 6 1 2] {[3 0 7 6]}}}", "(replacet {[]} 6 6) -> {[]}", "(replacet {[] {[7 5] {[4 4]}} {[] {[7 0 7 4] {[4]}}}} 4 9) -> {[] {[7 5] {[9 9]}} {[] {[7 0 7 9] {[9]}}}}", "(replacet {[9 6 6 9] {[4 2 2 0 9]} {[] {[2]}}} 1 2) -> {[9 6 6 9] {[4 2 2 0 9]} {[] {[2]}}}", "(replacet {[0 9 5]} 7 9) -> {[0 9 5]}"]}
{"name": "replacet", "time": 13.336338, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 8) -> {}", "(replacet {[8 8 0 5]} 9 5) -> {[8 8 0 5]}", "(replacet {[8 0 4]} 1 6) -> {[8 0 4]}", "(replacet {[1 9 2 4 5]} 9 0) -> {[1 0 2 4 5]}", "(replacet {} 7 6) -> {}", "(replacet {[] {[] {[0 4 8 8 5]}} {[]}} 6 6) -> {[] {[] {[0 4 8 8 5]}} {[]}}", "(replacet {[5 0] {[1 0] {[3 4 6 6]} {[2 0 4 3 8] {[3 4 1 9 5]} {[1 3 5 6 6]}}}} 5 1) -> {[1 0] {[1 0] {[3 4 6 6]} {[2 0 4 3 8] {[3 4 1 9 1]} {[1 3 1 6 6]}}}}"]}
{"name": "replacet", "time": 16.112595, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 4) -> {}", "(replacet {[0 6 5 4]} 7 9) -> {[0 6 5 4]}", "(replacet {[3 4 0 4 3] {[1] {[1 7 1 4]}} {[6] {[0 0 8 5 6]}}} 4 8) -> {[3 8 0 8 3] {[1] {[1 7 1 8]}} {[6] {[0 0 8 5 6]}}}", "(replacet {[5 2 1 9] {[7 8 0] {[1 2]}}} 6 9) -> {[5 2 1 9] {[7 8 0] {[1 2]}}}", "(replacet {[7 4 7 2] {[] {[0 4 5] {[]}} {[5 1 0 9 3]}}} 1 3) -> {[7 4 7 2] {[] {[0 4 5] {[]}} {[5 3 0 9 3]}}}", "(replacet {} 1 9) -> {}", "(replacet {[] {[6 9 6 4] {[1]}}} 4 9) -> {[] {[6 9 6 9] {[1]}}}"]}
{"name": "replacet", "time": 23.189861, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 6) -> {}", "(replacet {[] {[1 6 0 9 1] {[1 2 5 9] {[0 2 8 0 3]} {[4 6 9]}}} {[1 8 0] {[8 4]} {[] {[0 2]} {[2 6 5 0 7]}}}} 6 2) -> {[] {[1 2 0 9 1] {[1 2 5 9] {[0 2 8 0 3]} {[4 2 9]}}} {[1 8 0] {[8 4]} {[] {[0 2]} {[2 2 5 0 7]}}}}", "(replacet {[0 7 9 9 0] {[] {[9 1 9]} {[7 2 2 2 9]}} {[4]}} 7 8) -> {[0 8 9 9 0] {[] {[9 1 9]} {[8 2 2 2 9]}} {[4]}}", "(replacet {[1 6 5 9]} 8 7) -> {[1 6 5 9]}", "(replacet {[3 1 7] {[8 2]}} 3 6) -> {[6 1 7] {[8 2]}}", "(replacet {[9 1 4 3 4] {[0 3 9 4 8] {[2 9 5 2]}} {[2 6 0] {[2 3 8]} {[]}}} 2 3) -> {[9 1 4 3 4] {[0 3 9 4 8] {[3 9 5 3]}} {[3 6 0] {[3 3 8]} {[]}}}", "(replacet {[9 5 3 3] {[6 9 1 8 7] {[0 0 6]}}} 5 1) -> {[9 1 3 3] {[6 9 1 8 7] {[0 0 6]}}}"]}
{"name": "replacet", "time": 17.015178, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 9) -> {}", "(replacet {[4 1]} 9 0) -> {[4 1]}", "(replacet {[9 6 5 7] {[]}} 3 9) -> {[9 6 5 7] {[]}}", "(replacet {[0]} 5 0) -> {[0]}", "(replacet {[8 3] {[9 1 0 1] {[8] {[5]}}} {[1] {[] {[]}} {[4]}}} 8 6) -> {[6 3] {[9 1 0 1] {[6] {[5]}}} {[1] {[] {[]}} {[4]}}}", "(replacet {} 0 8) -> {}", "(replacet {} 8 7) -> {}"]}
{"name": "replacet", "time": 18.58, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 2 1) -> {}", "(replacet {[9 1 8] {[] {[7 1 6 2] {[]}}}} 3 4) -> {[9 1 8] {[] {[7 1 6 2] {[]}}}}", "(replacet {[0 8 3 0 6]} 0 1) -> {[1 8 3 1 6]}", "(replacet {[7 0 6 4 8] {[0]}} 2 3) -> {[7 0 6 4 8] {[0]}}", "(replacet {[6 0]} 5 6) -> {[6 0]}", "(replacet {[6 4] {[2 1] {[3 1 9 7] {[8]}} {[6 1 7]}} {[9] {[9 8 0] {[]} {[2 6 0 3 1]}}}} 6 4) -> {[4 4] {[2 1] {[3 1 9 7] {[8]}} {[4 1 7]}} {[9] {[9 8 0] {[]} {[2 4 0 3 1]}}}}", "(replacet {[9 8 3 2 2] {[] {[]} {[]}}} 6 3) -> {[9 8 3 2 2] {[] {[]} {[]}}}"]}
{"name": "replacet", "time": 15.003312, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 2) -> {}", "(replacet {[4 0 8 3 1]} 1 7) -> {[4 0 8 3 7]}", "(replacet {[]} 1 4) -> {[]}", "(replacet {[2] {[3] {[0 4 6]}} {[]}} 2 6) -> {[6] {[3] {[0 4 6]}} {[]}}", "(replacet {[1 6]} 9 0) -> {[1 6]}", "(replacet {[] {[5 0 2 0 2] {[4 7 9 8 3] {[8]}}}} 7 1) -> {[] {[5 0 2 0 2] {[4 1 9 8 3] {[8]}}}}", "(replacet {[4 8 7 3 7] {[]} {[9 4]}} 4 4) -> {[4 8 7 3 7] {[]} {[9 4]}}"]}
{"name": "replacet", "time": 16.967082, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 2) -> {}", "(replacet {[6 9 3 5 1] {[6 2 8]}} 3 9) -> {[6 9 9 5 1] {[6 2 8]}}", "(replacet {[2] {[6 9 7]} {[]}} 4 8) -> {[2] {[6 9 7]} {[]}}", "(replacet {[2 6 5] {[]} {[]}} 1 9) -> {[2 6 5] {[]} {[]}}", "(replacet {[1 0] {[2 9 2]}} 6 4) -> {[1 0] {[2 9 2]}}", "(replacet {[1 7 8 6]} 2 7) -> {[1 7 8 6]}", "(replacet {} 4 4) -> {}"]}
{"name": "replacet", "time": 17.32426, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 0) -> {}", "(replacet {[6 7 5] {[1 3 6 0 7] {[1]}}} 6 8) -> {[8 7 5] {[1 3 8 0 7] {[1]}}}", "(replacet {[4 3 5] {[5 4 6 2 8]} {[4]}} 8 2) -> {[4 3 5] {[5 4 6 2 2]} {[4]}}", "(replacet {[7 4 6] {[6 7 4 3 0] {[4 9 7]} {[6 7 5 2 6]}}} 0 1) -> {[7 4 6] {[6 7 4 3 1] {[4 9 7]} {[6 7 5 2 6]}}}", "(replacet {} 7 4) -> {}", "(replacet {[] {[0 9 4 9 6] {[5 0 0]}}} 4 2) -> {[] {[0 9 2 9 6] {[5 0 0]}}}", "(replacet {} 2 4) -> {}"]}
{"name": "replacet", "time": 14.238249, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 0) -> {}", "(replacet {[4 9 3 1 6] {[]}} 8 4) -> {[4 9 3 1 6] {[]}}", "(replacet {} 9 7) -> {}", "(replacet {[2]} 4 2) -> {[2]}", "(replacet {[]} 0 3) -> {[]}", "(replacet {[1 2 3 4 5]} 5 3) -> {[1 2 3 4 3]}", "(replacet {} 1 5) -> {}"]}
{"name": "replacet", "time": 19.411457, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 2 8) -> {}", "(replacet {[2 1 2 1 5] {[4 8 7 0] {[5 0]} {[]}}} 5 5) -> {[2 1 2 1 5] {[4 8 7 0] {[5 0]} {[]}}}", "(replacet {[8 4 5] {[0] {[7 9 9 7] {[2 7 8]} {[2 0]}}} {[4 3 6 1 8]}} 5 1) -> {[8 4 1] {[0] {[7 9 9 7] {[2 7 8]} {[2 0]}}} {[4 3 6 1 8]}}", "(replacet {[1 3 5 0 6] {[]} {[7 5]}} 9 8) -> {[1 3 5 0 6] {[]} {[7 5]}}", "(replacet {[5] {[1 1 8 6]} {[5 2 9] {[7]} {[]}}} 9 8) -> {[5] {[1 1 8 6]} {[5 2 8] {[7]} {[]}}}", "(replacet {[0 3 0 2] {[8 2 5 7]}} 9 6) -> {[0 3 0 2] {[8 2 5 7]}}", "(replacet {[6 3]} 2 8) -> {[6 3]}"]}
{"name": "replacet", "time": 19.338654, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 1) -> {}", "(replacet {[7 2 8] {[]} {[2 1 6] {[6] {[5 8 1]} {[2 1 0 3 6]}}}} 1 8) -> {[7 2 8] {[]} {[2 8 6] {[6] {[5 8 8]} {[2 8 0 3 6]}}}}", "(replacet {} 3 2) -> {}", "(replacet {[8] {[]}} 1 5) -> {[8] {[]}}", "(replacet {[] {[] {[3 4] {[9]}}} {[] {[] {[1]}}}} 4 0) -> {[] {[] {[3 0] {[9]}}} {[] {[] {[1]}}}}", "(replacet {[] {[9] {[7]} {[5]}} {[]}} 3 0) -> {[] {[9] {[7]} {[5]}} {[]}}", "(replacet {[0 0 2]} 7 3) -> {[0 0 2]}"]}
{"name": "replacet", "time": 21.3813, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 4) -> {}", "(replacet {[5 3 6 6] {[3 5]} {[5 4] {[]}}} 8 9) -> {[5 3 6 6] {[3 5]} {[5 4] {[]}}}", "(replacet {} 4 2) -> {}", "(replacet {[] {[]} {[1 9 7]}} 7 4) -> {[] {[]} {[1 9 4]}}", "(replacet {[1] {[9 0 7]}} 7 2) -> {[1] {[9 0 2]}}", "(replacet {} 7 1) -> {}", "(replacet {[8 0] {[8 6 6 2 2]}} 7 4) -> {[8 0] {[8 6 6 2 2]}}"]}
{"name": "replacet", "time": 17.089366, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 1) -> {}", "(replacet {[4] {[4 9]}} 1 7) -> {[4] {[4 9]}}", "(replacet {[3 1] {[6] {[] {[2 7 0 1 5]} {[]}}} {[4 0 2] {[] {[0 6 9 1 3]}} {[6 8] {[7 6 0 2]} {[8 0 3 6]}}}} 8 6) -> {[3 1] {[6] {[] {[2 7 0 1 5]} {[]}}} {[4 0 2] {[] {[0 6 9 1 3]}} {[6 6] {[7 6 0 2]} {[6 0 3 6]}}}}", "(replacet {[0]} 1 6) -> {[0]}", "(replacet {} 4 6) -> {}", "(replacet {[0] {[2 6 9 8 2]} {[8 8]}} 8 0) -> {[0] {[2 6 9 0 2]} {[0 0]}}", "(replacet {[0 4 3] {[5 9]}} 1 1) -> {[0 4 3] {[5 9]}}"]}
{"name": "replacet", "time": 25.062303, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 9) -> {}", "(replacet {[8 9 8 2 0] {[3 2 4] {[3 3 5 8] {[7 3]}} {[2 8 9 5 2]}} {[8 6 6 4] {[6 0 9 8 9] {[7 7 6 1 1]}}}} 6 7) -> {[8 9 8 2 0] {[3 2 4] {[3 3 5 8] {[7 3]}} {[2 8 9 5 2]}} {[8 7 7 4] {[7 0 9 8 9] {[7 7 7 1 1]}}}}", "(replacet {[1 1 6 3 7] {[6 1 2 9 5]} {[]}} 9 8) -> {[1 1 6 3 7] {[6 1 2 8 5]} {[]}}", "(replacet {[0 9 9 3] {[9 6]} {[8 7 2 8 4]}} 3 5) -> {[0 9 9 5] {[9 6]} {[8 7 2 8 4]}}", "(replacet {[] {[2] {[0 1]}} {[9 4] {[]}}} 2 4) -> {[] {[4] {[0 1]}} {[9 4] {[]}}}", "(replacet {[0 1 3] {[] {[9 9 9]}} {[] {[5 0] {[7 9 8]} {[]}}}} 7 4) -> {[0 1 3] {[] {[9 9 9]}} {[] {[5 0] {[4 9 8]} {[]}}}}", "(replacet {[8] {[8 9 7 9] {[2]}}} 7 3) -> {[8] {[8 9 3 9] {[2]}}}"]}
{"name": "replacet", "time": 18.459903, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 8) -> {}", "(replacet {[6 5 8 2] {[8 0 1 4]}} 2 4) -> {[6 5 8 4] {[8 0 1 4]}}", "(replacet {[2 7 9] {[]} {[]}} 3 8) -> {[2 7 9] {[]} {[]}}", "(replacet {} 9 7) -> {}", "(replacet {[3 6 4 2] {[1 8]} {[1 6 0 8 4]}} 8 0) -> {[3 6 4 2] {[1 0]} {[1 6 0 0 4]}}", "(replacet {[1 6 9] {[5]}} 5 8) -> {[1 6 9] {[8]}}", "(replacet {[9]} 1 4) -> {[9]}"]}
{"name": "replacet", "time": 17.199297, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 6) -> {}", "(replacet {[9 5 7 8 1] {[9] {[] {[0 1]}}}} 0 1) -> {[9 5 7 8 1] {[9] {[] {[1 1]}}}}", "(replacet {[0 6 8]} 2 4) -> {[0 6 8]}", "(replacet {} 1 4) -> {}", "(replacet {[3 2] {[3 1 6] {[7 7 9 6] {[9]}} {[6] {[5 5 0 4]} {[4 0 7 1 9]}}} {[] {[8 3 5]}}} 2 9) -> {[3 9] {[3 1 6] {[7 7 9 6] {[9]}} {[6] {[5 5 0 4]} {[4 0 7 1 9]}}} {[] {[8 3 5]}}}", "(replacet {} 5 0) -> {}", "(replacet {} 2 7) -> {}"]}
{"name": "replacet", "time": 18.324063, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 3) -> {}", "(replacet {} 4 4) -> {}", "(replacet {[2 1] {[7]} {[4]}} 6 5) -> {[2 1] {[7]} {[4]}}", "(replacet {[6 0 8 5 2]} 6 5) -> {[5 0 8 5 2]}", "(replacet {[5] {[5]} {[4 2 8] {[4 7 6 7]} {[8 0 7]}}} 4 3) -> {[5] {[5]} {[3 2 8] {[3 7 6 7]} {[8 0 7]}}}", "(replacet {[1 0 0] {[3 8 2]}} 4 3) -> {[1 0 0] {[3 8 2]}}", "(replacet {} 6 0) -> {}"]}
{"name": "replacet", "time": 17.585534, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 1) -> {}", "(replacet {[7 0] {[1 6 8 3]}} 3 0) -> {[7 0] {[1 6 8 0]}}", "(replacet {} 2 7) -> {}", "(replacet {[2 5] {[]}} 5 0) -> {[2 0] {[]}}", "(replacet {[3 2 4] {[3 5 0 5]}} 4 2) -> {[3 2 2] {[3 5 0 5]}}", "(replacet {[8 7]} 8 6) -> {[6 7]}", "(replacet {[9 3] {[] {[1 7]} {[8 3 8] {[7 6 0 7 3]} {[7 9 8 5 5]}}} {[4] {[4 5] {[4 5 0 1]}}}} 1 7) -> {[9 3] {[] {[7 7]} {[8 3 8] {[7 6 0 7 3]} {[7 9 8 5 5]}}} {[4] {[4 5] {[4 5 0 7]}}}}"]}
{"name": "replacet", "time": 21.336208, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 7) -> {}", "(replacet {[2 5 3] {[9 6 6 7 0]} {[5 1 2] {[8 9 1 4 2] {[3]}} {[0 4 2 0 5]}}} 6 1) -> {[2 5 3] {[9 1 1 7 0]} {[5 1 2] {[8 9 1 4 2] {[3]}} {[0 4 2 0 5]}}}", "(replacet {[1 2 7] {[2]}} 1 2) -> {[2 2 7] {[2]}}", "(replacet {[8 9 5] {[0 3 3 9]}} 4 6) -> {[8 9 5] {[0 3 3 9]}}", "(replacet {[3 9 6 9 5] {[2 5 2] {[3 5 4 5 3]}}} 7 6) -> {[3 9 6 9 5] {[2 5 2] {[3 5 4 5 3]}}}", "(replacet {} 0 1) -> {}", "(replacet {[1 9 7 9] {[4] {[5 1 4 9]} {[5 0 6 4 9]}}} 5 4) -> {[1 9 7 9] {[4] {[4 1 4 9]} {[4 0 6 4 9]}}}"]}
{"name": "replacet", "time": 17.614379, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 4) -> {}", "(replacet {} 7 3) -> {}", "(replacet {} 4 0) -> {}", "(replacet {} 4 1) -> {}", "(replacet {[3]} 1 3) -> {[3]}", "(replacet {[7 7 8] {[1 5 9] {[8 0 2 0] {[8]}}} {[9 2 9 3 9]}} 9 0) -> {[7 7 8] {[1 5 0] {[8 0 2 0] {[8]}}} {[0 2 0 3 0]}}", "(replacet {[9 6 6 2] {[4 3]} {[7 9]}} 6 7) -> {[9 7 7 2] {[4 3]} {[7 9]}}"]}
{"name": "replacet", "time": 18.628678, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 2) -> {}", "(replacet {[8 1 4 1 6] {[]}} 5 9) -> {[8 1 4 1 6] {[]}}", "(replacet {[1 9] {[3]}} 3 2) -> {[1 9] {[2]}}", "(replacet {[9 8 6 9 0] {[] {[5 4 5] {[7 6]}} {[]}}} 6 9) -> {[9 8 9 9 0] {[] {[5 4 5] {[7 9]}} {[]}}}", "(replacet {} 3 7) -> {}", "(replacet {[]} 0 0) -> {[]}", "(replacet {} 2 9) -> {}"]}
{"name": "replacet", "time": 14.906738, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 9) -> {}", "(replacet {} 8 7) -> {}", "(replacet {[5 6 6 1] {[7 6 4 6 4]} {[]}} 5 3) -> {[3 6 6 1] {[7 6 4 6 4]} {[]}}", "(replacet {[0 3 1] {[6 0]} {[2 9 2] {[9 2 7 8]} {[8 7 2] {[1 3]}}}} 2 2) -> {[0 3 1] {[6 0]} {[2 9 2] {[9 2 7 8]} {[8 7 2] {[1 3]}}}}", "(replacet {[] {[2 9]} {[]}} 1 2) -> {[] {[2 9]} {[]}}", "(replacet {[] {[3 1 6 2 2]}} 8 7) -> {[] {[3 1 6 2 2]}}", "(replacet {[7 4] {[]} {[8 9 9] {[5 6 7] {[1 3 1]}} {[] {[4 2 8]} {[8]}}}} 6 5) -> {[7 4] {[]} {[8 9 9] {[5 5 7] {[1 3 1]}} {[] {[4 2 8]} {[8]}}}}"]}
{"name": "replacet", "time": 17.640533, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 5) -> {}", "(replacet {[0 0 6 2 6] {[9 9 4 9 8]} {[] {[7 8 9]} {[0 2]}}} 7 6) -> {[0 0 6 2 6] {[9 9 4 9 8]} {[] {[6 8 9]} {[0 2]}}}", "(replacet {[4 2]} 3 3) -> {[4 2]}", "(replacet {} 1 3) -> {}", "(replacet {[] {[5 0 0 4]}} 7 7) -> {[] {[5 0 0 4]}}", "(replacet {[7 9]} 1 1) -> {[7 9]}", "(replacet {} 7 6) -> {}"]}
{"name": "replacet", "time": 24.947323, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 3) -> {}", "(replacet {[4 3 4] {[3 6 9 5] {[4 9] {[9 0 6]}} {[3 2] {[1]}}} {[1 7 8]}} 2 4) -> {[4 3 4] {[3 6 9 5] {[4 9] {[9 0 6]}} {[3 4] {[1]}}} {[1 7 8]}}", "(replacet {[7 4] {[3 4 8] {[5 7 2 0 0] {[2 6]} {[2 6 7 0]}}} {[]}} 3 5) -> {[7 4] {[5 4 8] {[5 7 2 0 0] {[2 6]} {[2 6 7 0]}}} {[]}}", "(replacet {[0 5]} 7 8) -> {[0 5]}", "(replacet {[4] {[2 1] {[2 7]}}} 4 1) -> {[1] {[2 1] {[2 7]}}}", "(replacet {[2 9 5 6 3] {[2 4]}} 3 7) -> {[2 9 5 6 7] {[2 4]}}", "(replacet {[9 4] {[3 0 1 0 2]} {[7]}} 1 0) -> {[9 4] {[3 0 0 0 2]} {[7]}}"]}
{"name": "replacet", "time": 18.866122, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 1) -> {}", "(replacet {} 0 0) -> {}", "(replacet {} 9 0) -> {}", "(replacet {[4 6 0 1]} 9 6) -> {[4 6 0 1]}", "(replacet {} 9 1) -> {}", "(replacet {[1] {[5]}} 8 3) -> {[1] {[5]}}", "(replacet {[2 9] {[] {[0 1 1 6]} {[]}} {[9] {[5 7 3 7]} {[]}}} 1 6) -> {[2 9] {[] {[0 6 6 6]} {[]}} {[9] {[5 7 3 7]} {[]}}}"]}
{"name": "replacet", "time": 18.635621, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 8) -> {}", "(replacet {} 0 6) -> {}", "(replacet {} 8 7) -> {}", "(replacet {[] {[1 7 2 6 7] {[6 0 0]}}} 2 3) -> {[] {[1 7 3 6 7] {[6 0 0]}}}", "(replacet {[7 9] {[7 1 8 5] {[7 2 0 8] {[1 9 9 3 9]} {[9 3 3 8]}} {[0 5 9 1 4]}} {[] {[2]}}} 0 9) -> {[7 9] {[7 1 8 5] {[7 2 9 8] {[1 9 9 3 9]} {[9 3 3 8]}} {[9 5 9 1 4]}} {[] {[2]}}}", "(replacet {} 2 2) -> {}", "(replacet {[4] {[8 8 0 6] {[3 7 1]} {[]}} {[5 0 6 1]}} 9 7) -> {[4] {[8 8 0 6] {[3 7 1]} {[]}} {[5 0 6 1]}}"]}
{"name": "replacet", "time": 21.574994, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 9) -> {}", "(replacet {[2 6 1]} 8 0) -> {[2 6 1]}", "(replacet {[6 1 5] {[5 9 1 5 8] {[6 0 8 6] {[]}} {[8 6] {[]} {[]}}} {[8 9 7 5] {[9 5 8]} {[] {[0 4 9]}}}} 5 4) -> {[6 1 4] {[4 9 1 4 8] {[6 0 8 6] {[]}} {[8 6] {[]} {[]}}} {[8 9 7 4] {[9 4 8]} {[] {[0 4 9]}}}}", "(replacet {[] {[7 4 7 1 8]}} 5 4) -> {[] {[7 4 7 1 8]}}", "(replacet {[2 1 0] {[4 7 8] {[5 0 5]} {[2 1 9 2 9]}} {[7] {[5]} {[2 0]}}} 6 0) -> {[2 1 0] {[4 7 8] {[5 0 5]} {[2 1 9 2 9]}} {[7] {[5]} {[2 0]}}}", "(replacet {} 5 5) -> {}", "(replacet {[7] {[7 3 4] {[4 2 7]} {[9 8 2 3]}} {[] {[0 1 3]} {[]}}} 1 3) -> {[7] {[7 3 4] {[4 2 7]} {[9 8 2 3]}} {[] {[0 3 3]} {[]}}}"]}
{"name": "replacet", "time": 14.129101, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 9) -> {}", "(replacet {[7] {[9 3 5 3 3] {[4 0 3 1 1] {[5 2 2 1]}}}} 7 8) -> {[8] {[9 3 5 3 3] {[4 0 3 1 1] {[5 2 2 1]}}}}", "(replacet {} 1 9) -> {}", "(replacet {[5 2 5 6 6] {[3 9 1 0] {[7]}} {[6] {[0 3]} {[8 6 2 1]}}} 1 5) -> {[5 2 5 6 6] {[3 9 5 0] {[7]}} {[6] {[0 3]} {[8 6 2 5]}}}", "(replacet {[] {[6 6 3 4 2] {[]}}} 5 0) -> {[] {[6 6 3 4 2] {[]}}}", "(replacet {[7 6 3 8] {[8]}} 4 8) -> {[7 6 3 8] {[8]}}", "(replacet {} 4 5) -> {}"]}
{"name": "replacet", "time": 0.001143, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 9 8) -> {}", "(replacet {[3 3 5 3]} 9 2) -> {[3 3 5 3]}", "(replacet {} 1 8) -> {}", "(replacet {[9 4 7 7] {[4 2 4 7] {[9] {[]} {[1 7 5 6]}}}} 8 4) -> {[9 4 7 7] {[4 2 4 7] {[9] {[]} {[1 7 5 6]}}}}", "(replacet {[0 9 6 1] {[1 0]} {[3 5 8 3 4] {[6] {[]}}}} 5 5) -> {[0 9 6 1] {[1 0]} {[3 5 8 3 4] {[6] {[]}}}}", "(replacet {[9]} 0 0) -> {[9]}", "(replacet {} 1 6) -> {}"]}
{"name": "replacet", "time": 15.489178, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 0) -> {}", "(replacet {} 4 6) -> {}", "(replacet {[4 2] {[5] {[7 5 9 9 3]} {[7 2 5 3 2]}} {[1 6] {[]}}} 4 8) -> {[8 2] {[5] {[7 5 9 9 3]} {[7 2 5 3 2]}} {[1 6] {[]}}}", "(replacet {[1 0 8] {[2 4 6 9 5] {[7]} {[4 0 1 2] {[]}}} {[]}} 1 7) -> {[7 0 8] {[2 4 6 9 5] {[7]} {[4 0 7 2] {[]}}} {[]}}", "(replacet {[1 9 5] {[7 6 9 1 6]}} 9 7) -> {[1 7 5] {[7 6 7 1 6]}}", "(replacet {[7 5 7 2 9] {[3 5 5]}} 5 4) -> {[7 4 7 2 9] {[3 4 4]}}", "(replacet {[9 6 9 3 8]} 1 1) -> {[9 6 9 3 8]}"]}
{"name": "replacet", "time": 20.39428, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 2) -> {}", "(replacet {[9 9 5 5 9] {[]} {[2 0]}} 9 5) -> {[5 5 5 5 5] {[]} {[2 0]}}", "(replacet {} 4 5) -> {}", "(replacet {[0 1 7] {[6 6]}} 4 9) -> {[0 1 7] {[6 6]}}", "(replacet {[9] {[6 6 8 9 9]}} 8 1) -> {[9] {[6 6 1 9 9]}}", "(replacet {[0 4 9 5 4] {[6 5 5 3]} {[6 8 2] {[4]}}} 8 7) -> {[0 4 9 5 4] {[6 5 5 3]} {[6 7 2] {[4]}}}", "(replacet {[7 5] {[5 0] {[7]} {[7] {[0]}}} {[]}} 7 3) -> {[3 5] {[5 0] {[3]} {[3] {[0]}}} {[]}}"]}
{"name": "replacet", "time": 21.431284, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 6) -> {}", "(replacet {} 7 1) -> {}", "(replacet {[]} 2 6) -> {[]}", "(replacet {[]} 7 3) -> {[]}", "(replacet {[7 3 1 3 9] {[6 4] {[]}} {[2 9 7 4 4]}} 7 2) -> {[2 3 1 3 9] {[6 4] {[]}} {[2 9 2 4 4]}}", "(replacet {[3 4 4] {[3 6 9] {[8]} {[]}}} 6 4) -> {[3 4 4] {[3 4 9] {[8]} {[]}}}", "(replacet {[6 6 8 5 3]} 3 9) -> {[6 6 8 5 9]}"]}
{"name": "replacet", "time": 14.20863, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 4) -> {}", "(replacet {[2 2 7 2 0]} 5 3) -> {[2 2 7 2 0]}", "(replacet {[6]} 2 1) -> {[6]}", "(replacet {[3 9 5 2 8] {[3 0 1 3 3] {[5 2 1 3 8]} {[5 5]}}} 3 0) -> {[0 9 5 2 8] {[0 0 1 0 0] {[5 2 1 0 8]} {[5 5]}}}", "(replacet {[4 8 7 2 7]} 5 7) -> {[4 8 7 2 7]}", "(replacet {[6 3] {[8 8 4]} {[7 7 1]}} 1 2) -> {[6 3] {[8 8 4]} {[7 7 2]}}", "(replacet {[5 2 9] {[]} {[1] {[5 0 8] {[1 9 2 9]} {[3 7 7 6 4]}}}} 5 7) -> {[7 2 9] {[]} {[1] {[7 0 8] {[1 9 2 9]} {[3 7 7 6 4]}}}}"]}
{"name": "replacet", "time": 14.177868, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 9) -> {}", "(replacet {[5] {[] {[3 2 8] {[7 5 9 6]} {[0]}}}} 0 8) -> {[5] {[] {[3 2 8] {[7 5 9 6]} {[8]}}}}", "(replacet {[6 4 1] {[5] {[7 1]}}} 3 4) -> {[6 4 1] {[5] {[7 1]}}}", "(replacet {[6 2] {[3 7 1 6]} {[3]}} 5 0) -> {[6 2] {[3 7 1 6]} {[3]}}", "(replacet {[7 1 0 8 3]} 2 3) -> {[7 1 0 8 3]}", "(replacet {[2 8 2 8 8]} 4 7) -> {[2 8 2 8 8]}", "(replacet {} 7 7) -> {}"]}
{"name": "replacet", "time": 14.868308, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 4) -> {}", "(replacet {[] {[2 8] {[5 0 8 7]} {[2 7 2 4 5]}}} 7 5) -> {[] {[2 8] {[5 0 8 5]} {[2 5 2 4 5]}}}", "(replacet {[] {[] {[] {[7 0 9]} {[0 0 4]}}} {[3] {[0 6 6] {[0 9]} {[0 0 8]}} {[7 6 4 0 9] {[0]} {[9]}}}} 2 3) -> {[] {[] {[] {[7 0 9]} {[0 0 4]}}} {[3] {[0 6 6] {[0 9]} {[0 0 8]}} {[7 6 4 0 9] {[0]} {[9]}}}}", "(replacet {[1 8 2]} 1 6) -> {[6 8 2]}", "(replacet {[7]} 4 5) -> {[7]}", "(replacet {[7] {[2 3 1 9] {[] {[]}}} {[1] {[4 3 6 7]} {[8 9 7 0] {[]} {[8]}}}} 8 7) -> {[7] {[2 3 1 9] {[] {[]}}} {[1] {[4 3 6 7]} {[7 9 7 0] {[]} {[7]}}}}", "(replacet {[2 2 0 4] {[4]}} 5 5) -> {[2 2 0 4] {[4]}}"]}
{"name": "replacet", "time": 16.977401, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 2) -> {}", "(replacet {[5 3 3] {[5 1 3]}} 0 3) -> {[5 3 3] {[5 1 3]}}", "(replacet {} 2 1) -> {}", "(replacet {} 0 6) -> {}", "(replacet {[0 2] {[3 0 3 1 1] {[9 1]}} {[2 4] {[]}}} 3 9) -> {[0 2] {[9 0 9 1 1] {[9 1]}} {[2 4] {[]}}}", "(replacet {} 0 3) -> {}", "(replacet {[5 5]} 5 6) -> {[6 6]}"]}
{"name": "replacet", "time": 17.139851, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 7) -> {}", "(replacet {[3 4 6] {[0 1]} {[]}} 4 7) -> {[3 7 6] {[0 1]} {[]}}", "(replacet {[9] {[7]} {[2 8 3]}} 8 0) -> {[9] {[7]} {[2 0 3]}}", "(replacet {[1] {[4 2] {[] {[4 8]}} {[8 3 8 5 3] {[3 4 0 4 3]} {[2 1 1 9]}}}} 3 1) -> {[1] {[4 2] {[] {[4 8]}} {[8 1 8 5 1] {[1 4 0 4 1]} {[2 1 1 9]}}}}", "(replacet {[] {[] {[1]}}} 6 7) -> {[] {[] {[1]}}}", "(replacet {[1 8] {[3 9 5 5]} {[]}} 2 9) -> {[1 8] {[3 9 5 5]} {[]}}", "(replacet {[7 1 1]} 2 1) -> {[7 1 1]}"]}
{"name": "replacet", "time": 24.178036, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 2) -> {}", "(replacet {} 7 0) -> {}", "(replacet {[8 7 3 8 9]} 2 3) -> {[8 7 3 8 9]}", "(replacet {[] {[1] {[] {[6 0 6 8 4]} {[0 5 0 5 8]}} {[2 9 6] {[7 6 0 2 4]} {[7 9]}}} {[4 3 0] {[5] {[4 4 0]} {[5 6 5]}}}} 6 4) -> {[] {[1] {[] {[4 0 4 8 4]} {[0 5 0 5 8]}} {[2 9 4] {[7 4 0 2 4]} {[7 9]}}} {[4 3 0] {[5] {[4 4 0]} {[5 4 5]}}}}", "(replacet {[0]} 0 4) -> {[4]}", "(replacet {[0 8] {[3]} {[4 9 0 8 9]}} 8 2) -> {[0 2] {[3]} {[4 9 0 2 9]}}", "(replacet {[2 8 9]} 7 8) -> {[2 8 9]}"]}
{"name": "replacet", "time": 18.045889, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 8) -> {}", "(replacet {[4 2 4 2 1]} 1 2) -> {[4 2 4 2 2]}", "(replacet {[8 1 0 2 6]} 9 2) -> {[8 1 0 2 6]}", "(replacet {[4] {[2 0 0]} {[1 2 3] {[9 0] {[6 3 7 0 1]} {[3 6 3 6]}} {[0] {[3]} {[]}}}} 2 6) -> {[4] {[6 0 0]} {[1 6 3] {[9 0] {[6 3 7 0 1]} {[3 6 3 6]}} {[0] {[3]} {[]}}}}", "(replacet {[3 4 2 9]} 5 8) -> {[3 4 2 9]}", "(replacet {[3 2] {[9] {[4 8 0]}}} 8 7) -> {[3 2] {[9] {[4 7 0]}}}", "(replacet {[6 3 5] {[1 2 0] {[7]}} {[0 8 3 6 7] {[]} {[9]}}} 5 0) -> {[6 3 0] {[1 2 0] {[7]}} {[0 8 3 6 7] {[]} {[9]}}}"]}
{"name": "replacet", "time": 22.465118, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 4) -> {}", "(replacet {} 9 3) -> {}", "(replacet {} 4 4) -> {}", "(replacet {[5]} 9 2) -> {[5]}", "(replacet {[1 3 4 7] {[5 3 1] {[0 8]}} {[]}} 5 4) -> {[1 3 4 7] {[4 3 1] {[0 8]}} {[]}}", "(replacet {[6 4 2 6] {[8 5]} {[9]}} 7 7) -> {[6 4 2 6] {[8 5]} {[9]}}", "(replacet {[3 0 8]} 1 6) -> {[3 0 8]}"]}
{"name": "replacet", "time": 22.53136, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 8) -> {}", "(replacet {[8 8 2] {[2] {[2 7]}}} 0 6) -> {[8 8 2] {[2] {[2 7]}}}", "(replacet {[2 3] {[6 8 8] {[]} {[9 2]}} {[0 9 2] {[2 8]}}} 3 2) -> {[2 2] {[6 8 8] {[]} {[9 2]}} {[0 9 2] {[2 8]}}}", "(replacet {[]} 1 7) -> {[]}", "(replacet {[6 8]} 3 0) -> {[6 8]}", "(replacet {[4 8 7 8] {[1 5 7 2 4]}} 4 0) -> {[0 8 7 8] {[1 5 7 2 0]}}", "(replacet {[9] {[7 9 0]} {[]}} 6 6) -> {[9] {[7 9 0]} {[]}}"]}
{"name": "replacet", "time": 18.020227, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 6) -> {}", "(replacet {} 4 7) -> {}", "(replacet {} 1 2) -> {}", "(replacet {} 9 6) -> {}", "(replacet {[6 2 8 9 0] {[5 9 8] {[1 3 9 7 8]}} {[1 7] {[3]} {[1 6]}}} 1 0) -> {[6 2 8 9 0] {[5 9 8] {[0 3 9 7 8]}} {[0 7] {[3]} {[0 6]}}}", "(replacet {[5 0] {[5 8 9 4 3] {[8 4 8 5 6]} {[]}} {[1 2 2 9 5]}} 7 6) -> {[5 0] {[5 8 9 4 3] {[8 4 8 5 6]} {[]}} {[1 2 2 9 5]}}", "(replacet {[4 7 8 1 3]} 5 5) -> {[4 7 8 1 3]}"]}
{"name": "replacet", "time": 18.55087, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 6) -> {}", "(replacet {[] {[6 4 1 7] {[3]} {[] {[6 6 2 3]}}}} 8 1) -> {[] {[6 4 1 7] {[3]} {[] {[6 6 2 3]}}}}", "(replacet {[9]} 2 3) -> {[9]}", "(replacet {} 2 9) -> {}", "(replacet {[2] {[3 6 6] {[] {[5 3 4]} {[9]}}} {[7]}} 5 6) -> {[2] {[3 6 6] {[] {[6 3 4]} {[9]}}} {[7]}}", "(replacet {[8 3 4] {[] {[]}}} 9 7) -> {[8 3 4] {[] {[]}}}", "(replacet {[6 8 9]} 3 0) -> {[6 8 9]}"]}
{"name": "replacet", "time": 20.295162, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 3 4) -> {}", "(replacet {[7 2 5 3 1]} 0 1) -> {[7 2 5 3 1]}", "(replacet {[5]} 4 1) -> {[5]}", "(replacet {[0 0 4 1] {[]} {[3] {[1 3 9 5 9]} {[7 0 7] {[8]} {[5 8]}}}} 3 4) -> {[0 0 4 1] {[]} {[4] {[1 4 9 5 9]} {[7 0 7] {[8]} {[5 8]}}}}", "(replacet {[2 5]} 5 3) -> {[2 3]}", "(replacet {[4 1]} 4 5) -> {[5 1]}", "(replacet {} 7 9) -> {}"]}
{"name": "replacet", "time": 11.750203, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 5) -> {}", "(replacet {[]} 1 5) -> {[]}", "(replacet {[4] {[0 2 7 2 6]}} 2 6) -> {[4] {[0 6 7 6 6]}}", "(replacet {[3] {[]} {[0 4 3]}} 7 2) -> {[3] {[]} {[0 4 3]}}", "(replacet {} 5 3) -> {}", "(replacet {[4 7 9]} 5 5) -> {[4 7 9]}", "(replacet {[8 3 8] {[8 4 4 2 2] {[6 0 2 5]}}} 2 0) -> {[8 3 8] {[8 4 4 0 0] {[6 0 0 5]}}}"]}
{"name": "replacet", "time": 24.253031, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 6) -> {}", "(replacet {[] {[4 3 7 5 2] {[8 2 8]}} {[6] {[4 2 0 7 7]} {[]}}} 8 6) -> {[] {[4 3 7 5 2] {[6 2 6]}} {[6] {[4 2 0 7 7]} {[]}}}", "(replacet {} 6 4) -> {}", "(replacet {[7 9 2 4]} 9 6) -> {[7 6 2 4]}", "(replacet {[3 2 4 2]} 7 5) -> {[3 2 4 2]}", "(replacet {[8 1 1 5] {[]}} 1 1) -> {[8 1 1 5] {[]}}", "(replacet {[0 0] {[3 6 1 9] {[7 3 1]}}} 9 7) -> {[0 0] {[3 6 1 7] {[7 3 1]}}}"]}
{"name": "replacet", "time": 10.868955, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 3) -> {}", "(replacet {[0 6 3 7]} 3 1) -> {[0 6 1 7]}", "(replacet {[9 1] {[] {[5 7]}}} 0 3) -> {[9 1] {[] {[5 7]}}}", "(replacet {[4 2 1] {[3]} {[2 2 5 7]}} 4 7) -> {[7 2 1] {[3]} {[2 2 5 7]}}", "(replacet {[2 4 1 9 1]} 9 2) -> {[2 4 1 2 1]}", "(replacet {[2 0 3] {[]}} 6 8) -> {[2 0 3] {[]}}", "(replacet {[8] {[3 0 8 4 1] {[4 6]}} {[2 1] {[1 9]}}} 3 2) -> {[8] {[2 0 8 4 1] {[4 6]}} {[2 1] {[1 9]}}}"]}
{"name": "replacet", "time": 14.19967, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 3) -> {}", "(replacet {[1 1 8]} 7 7) -> {[1 1 8]}", "(replacet {[1 1] {[5 2 7 5]}} 7 0) -> {[1 1] {[5 2 0 5]}}", "(replacet {[] {[1 6 9]}} 8 6) -> {[] {[1 6 9]}}", "(replacet {[6 2]} 0 3) -> {[6 2]}", "(replacet {[6 3 9] {[3 5 3] {[5 5 0 6 9]}}} 9 4) -> {[6 3 4] {[3 5 3] {[5 5 0 6 4]}}}", "(replacet {[2 3 4 8] {[] {[9 9 9 6]} {[1 1 1]}}} 9 7) -> {[2 3 4 8] {[] {[7 7 7 6]} {[1 1 1]}}}"]}
{"name": "replacet", "time": 19.745067, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 4) -> {}", "(replacet {[6 7 3 0 4] {[5 3 0 4]}} 8 0) -> {[6 7 3 0 4] {[5 3 0 4]}}", "(replacet {[3 9] {[1 4 3] {[]} {[0]}} {[0 6]}} 5 0) -> {[3 9] {[1 4 3] {[]} {[0]}} {[0 6]}}", "(replacet {[4 5] {[9 4 8] {[7 2 9 5 6]}} {[] {[4]} {[7 5]}}} 8 9) -> {[4 5] {[9 4 9] {[7 2 9 5 6]}} {[] {[4]} {[7 5]}}}", "(replacet {[]} 4 5) -> {[]}", "(replacet {[7 3 2 9] {[]}} 9 1) -> {[7 3 2 1] {[]}}", "(replacet {[3 2] {[2 8]}} 7 8) -> {[3 2] {[2 8]}}"]}
{"name": "replacet", "time": 16.340709, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 3) -> {}", "(replacet {[7 1] {[2 2 3 1]}} 9 5) -> {[7 1] {[2 2 3 1]}}", "(replacet {[8 2 0] {[0 4 9 9 6]}} 5 1) -> {[8 2 0] {[0 4 9 9 6]}}", "(replacet {[] {[9 1 6 3 5] {[1]}} {[] {[7 8 3]}}} 1 8) -> {[] {[9 8 6 3 5] {[8]}} {[] {[7 8 3]}}}", "(replacet {[] {[8 9]} {[0] {[]}}} 3 7) -> {[] {[8 9]} {[0] {[]}}}", "(replacet {[5] {[0 8 7 2]}} 7 9) -> {[5] {[0 8 9 2]}}", "(replacet {[4 4 8] {[1 8 0 1] {[9 3 6 8]}} {[9 0 2 5 4] {[7]}}} 0 4) -> {[4 4 8] {[1 8 4 1] {[9 3 6 8]}} {[9 4 2 5 4] {[7]}}}"]}
{"name": "replacet", "time": 13.040098, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 5) -> {}", "(replacet {[9 7 7 1] {[]} {[3]}} 7 6) -> {[9 6 6 1] {[]} {[3]}}", "(replacet {[9 7] {[4]} {[7 3 5 5 0]}} 2 3) -> {[9 7] {[4]} {[7 3 5 5 0]}}", "(replacet {[6 2 8] {[6 5]} {[3 3 7 2 8] {[0 8 6 8]}}} 4 8) -> {[6 2 8] {[6 5]} {[3 3 7 2 8] {[0 8 6 8]}}}", "(replacet {[6 9 6 5]} 3 8) -> {[6 9 6 5]}", "(replacet {[8 7] {[1 6]}} 8 3) -> {[3 7] {[1 6]}}", "(replacet {[5]} 3 3) -> {[5]}"]}
{"name": "replacet", "time": 13.806776, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 0) -> {}", "(replacet {[9 3 2 7 4]} 9 9) -> {[9 3 2 7 4]}", "(replacet {[8] {[] {[6 7]}}} 0 4) -> {[8] {[] {[6 7]}}}", "(replacet {[3 0] {[1 7 1 9 8]} {[] {[0 8 9 5 0] {[8 1 4 4]}} {[9 7 0 5] {[7]}}}} 2 2) -> {[3 0] {[1 7 1 9 8]} {[] {[0 8 9 5 0] {[8 1 4 4]}} {[9 7 0 5] {[7]}}}}", "(replacet {[0]} 0 3) -> {[3]}", "(replacet {} 7 6) -> {}", "(replacet {[2] {[1 1]}} 4 5) -> {[2] {[1 1]}}"]}
{"name": "replacet", "time": 11.595261, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 2) -> {}", "(replacet {[]} 0 6) -> {[]}", "(replacet {[8 1 1 0]} 0 7) -> {[8 1 1 7]}", "(replacet {[]} 8 4) -> {[]}", "(replacet {[4 4 7]} 2 7) -> {[4 4 7]}", "(replacet {[1 7 3 0] {[4 3 0]} {[1 2]}} 1 1) -> {[1 7 3 0] {[4 3 0]} {[1 2]}}", "(replacet {[6 3 6 3 7] {[]} {[]}} 5 0) -> {[6 3 6 3 7] {[]} {[]}}"]}
{"name": "replacet", "time": 12.913787, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 2) -> {}", "(replacet {[7 6] {[4 7]} {[8 1 3 0 1]}} 9 1) -> {[7 6] {[4 7]} {[8 1 3 0 1]}}", "(replacet {} 2 7) -> {}", "(replacet {[9 0 2 6] {[4 5 3 7]}} 5 9) -> {[9 0 2 6] {[4 9 3 7]}}", "(replacet {[3 7 7 8] {[1 4 7 8]}} 4 0) -> {[3 7 7 8] {[1 0 7 8]}}", "(replacet {[]} 8 2) -> {[]}", "(replacet {[1] {[6 8 3 7 4]} {[7 0 2 4 5]}} 0 9) -> {[1] {[6 8 3 7 4]} {[7 9 2 4 5]}}"]}
{"name": "replacet", "time": 11.405689, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 3) -> {}", "(replacet {[6 7]} 4 8) -> {[6 7]}", "(replacet {[]} 5 3) -> {[]}", "(replacet {[2 6 4]} 5 8) -> {[2 6 4]}", "(replacet {[3] {[5 7 7 6 2]} {[5 7 0 9]}} 6 0) -> {[3] {[5 7 7 0 2]} {[5 7 0 9]}}", "(replacet {} 5 8) -> {}", "(replacet {} 4 6) -> {}"]}
{"name": "replacet", "time": 10.173733, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 9 9) -> {}", "(replacet {[7] {[5 5 4 5 8]} {[0 8 8] {[4 6 1]} {[3 9 4]}}} 8 0) -> {[7] {[5 5 4 5 0]} {[0 0 0] {[4 6 1]} {[3 9 4]}}}", "(replacet {[] {[8 4 6 6 0]} {[5 0 1 8 5] {[9]} {[5 2]}}} 5 5) -> {[] {[8 4 6 6 0]} {[5 0 1 8 5] {[9]} {[5 2]}}}", "(replacet {[3 7 3 3 2] {[]} {[6]}} 5 6) -> {[3 7 3 3 2] {[]} {[6]}}", "(replacet {[5 6 6]} 3 8) -> {[5 6 6]}", "(replacet {[6 0 9 5]} 8 7) -> {[6 0 9 5]}", "(replacet {[0] {[2 6]} {[4 9 7]}} 1 0) -> {[0] {[2 6]} {[4 9 7]}}"]}
