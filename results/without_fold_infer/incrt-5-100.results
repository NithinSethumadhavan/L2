{"time": 0.028442, "examples": ["(incrt {}) -> {}", "(incrt {6 {2}}) -> {7 {3}}", "(incrt {}) -> {}", "(incrt {0 {5}}) -> {1 {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025614, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {}) -> {}", "(incrt {8 {3 {4 {8}} {1 {1} {9}}}}) -> {9 {4 {5 {9}} {2 {2} {10}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030006, "examples": ["(incrt {}) -> {}", "(incrt {5 {8}}) -> {6 {9}}", "(incrt {4 {4} {8 {0} {4}}}) -> {5 {5} {9 {1} {5}}}", "(incrt {4 {6} {0}}) -> {5 {7} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027892, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {7}) -> {8}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036395, "examples": ["(incrt {}) -> {}", "(incrt {2 {5 {2 {1}}}}) -> {3 {6 {3 {2}}}}", "(incrt {0}) -> {1}", "(incrt {9 {1 {7}}}) -> {10 {2 {8}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037602, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7 {7} {4}}) -> {8 {8} {5}}", "(incrt {9 {8} {1}}) -> {10 {9} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038574, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {5 {1} {9}}) -> {6 {2} {10}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027176, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5 {1 {4} {4}}}) -> {6 {2 {5} {5}}}", "(incrt {9 {7}}) -> {10 {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039247, "examples": ["(incrt {}) -> {}", "(incrt {4 {6} {7 {0}}}) -> {5 {7} {8 {1}}}", "(incrt {3 {4}}) -> {4 {5}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026375, "examples": ["(incrt {}) -> {}", "(incrt {0 {2}}) -> {1 {3}}", "(incrt {7}) -> {8}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039706, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {7 {0} {7}}) -> {8 {1} {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027125, "examples": ["(incrt {}) -> {}", "(incrt {8 {6} {6}}) -> {9 {7} {7}}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027137, "examples": ["(incrt {}) -> {}", "(incrt {7 {7}}) -> {8 {8}}", "(incrt {3 {8} {2}}) -> {4 {9} {3}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025948, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {}) -> {}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025036, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3 {3}}) -> {4 {4}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030692, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9 {4} {1}}) -> {10 {5} {2}}", "(incrt {8 {0}}) -> {9 {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024143, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {4} {5}}) -> {9 {5} {6}}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027032, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {3 {4}}) -> {4 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030722, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {8}) -> {9}", "(incrt {1 {6 {0} {5 {9} {7}}}}) -> {2 {7 {1} {6 {10} {8}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024853, "examples": ["(incrt {}) -> {}", "(incrt {2 {9} {3}}) -> {3 {10} {4}}", "(incrt {}) -> {}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027658, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {1 {0} {5}}) -> {2 {1} {6}}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025452, "examples": ["(incrt {}) -> {}", "(incrt {2 {9 {8} {5}} {5}}) -> {3 {10 {9} {6}} {6}}", "(incrt {9}) -> {10}", "(incrt {7 {1 {5}}}) -> {8 {2 {6}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030709, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {5 {8 {5 {2} {6}} {5 {4}}}}) -> {6 {9 {6 {3} {7}} {6 {5}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033058, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3 {3}}) -> {4 {4}}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025347, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {2 {8 {0}} {9 {4} {0}}}) -> {3 {9 {1}} {10 {5} {1}}}", "(incrt {4 {4}}) -> {5 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040601, "examples": ["(incrt {}) -> {}", "(incrt {1 {0 {7 {6} {8}} {5 {2}}} {4 {9} {9}}}) -> {2 {1 {8 {7} {9}} {6 {3}}} {5 {10} {10}}}", "(incrt {}) -> {}", "(incrt {9 {7 {6}}}) -> {10 {8 {7}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026732, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {3 {0 {0} {4}} {2 {1} {9}}}}) -> {9 {4 {1 {1} {5}} {3 {2} {10}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025792, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {}) -> {}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034399, "examples": ["(incrt {}) -> {}", "(incrt {2 {6 {4} {9}} {2 {0}}}) -> {3 {7 {5} {10}} {3 {1}}}", "(incrt {5}) -> {6}", "(incrt {3 {0 {8}} {0 {3 {4} {5}} {0 {1} {3}}}}) -> {4 {1 {9}} {1 {4 {5} {6}} {1 {2} {4}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031375, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {0 {2}}) -> {1 {3}}", "(incrt {4 {8}}) -> {5 {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024669, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033688, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {2}) -> {3}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035881, "examples": ["(incrt {}) -> {}", "(incrt {2 {7 {5} {5 {3}}} {3 {5} {7 {4}}}}) -> {3 {8 {6} {6 {4}}} {4 {6} {8 {5}}}}", "(incrt {4 {1 {2}}}) -> {5 {2 {3}}}", "(incrt {2 {3} {6}}) -> {3 {4} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02737, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028202, "examples": ["(incrt {}) -> {}", "(incrt {9 {5 {9}} {9 {3}}}) -> {10 {6 {10}} {10 {4}}}", "(incrt {8 {2 {2} {5}} {5 {0} {1}}}) -> {9 {3 {3} {6}} {6 {1} {2}}}", "(incrt {8 {0 {8 {4} {6}} {1 {7}}} {7 {4 {6}} {8 {7} {4}}}}) -> {9 {1 {9 {5} {7}} {2 {8}}} {8 {5 {7}} {9 {8} {5}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032838, "examples": ["(incrt {}) -> {}", "(incrt {7 {5}}) -> {8 {6}}", "(incrt {6}) -> {7}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.04273, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {3 {8 {4 {1}}}}) -> {4 {9 {5 {2}}}}", "(incrt {2 {5}}) -> {3 {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024931, "examples": ["(incrt {}) -> {}", "(incrt {8 {2} {9 {2}}}) -> {9 {3} {10 {3}}}", "(incrt {}) -> {}", "(incrt {8 {6}}) -> {9 {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028034, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030016, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036985, "examples": ["(incrt {}) -> {}", "(incrt {3 {8 {6 {7} {9}} {3}} {9 {1 {8}}}}) -> {4 {9 {7 {8} {10}} {4}} {10 {2 {9}}}}", "(incrt {3 {2}}) -> {4 {3}}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.043693, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {1 {3 {1} {5}} {8 {5} {6}}}) -> {2 {4 {2} {6}} {9 {6} {7}}}", "(incrt {0 {5 {3} {9}} {5 {3}}}) -> {1 {6 {4} {10}} {6 {4}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042573, "examples": ["(incrt {}) -> {}", "(incrt {7 {9} {8}}) -> {8 {10} {9}}", "(incrt {0}) -> {1}", "(incrt {3 {1 {8 {2} {5}} {5 {7} {7}}} {3 {2} {5 {3}}}}) -> {4 {2 {9 {3} {6}} {6 {8} {8}}} {4 {3} {6 {4}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040925, "examples": ["(incrt {}) -> {}", "(incrt {6 {2 {4 {2}} {4 {9}}}}) -> {7 {3 {5 {3}} {5 {10}}}}", "(incrt {}) -> {}", "(incrt {9 {3} {9 {0}}}) -> {10 {4} {10 {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025764, "examples": ["(incrt {}) -> {}", "(incrt {0 {4}}) -> {1 {5}}", "(incrt {}) -> {}", "(incrt {6 {3}}) -> {7 {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025363, "examples": ["(incrt {}) -> {}", "(incrt {6 {5} {2}}) -> {7 {6} {3}}", "(incrt {0}) -> {1}", "(incrt {6 {8}}) -> {7 {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032035, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036932, "examples": ["(incrt {}) -> {}", "(incrt {3 {7}}) -> {4 {8}}", "(incrt {0 {1} {9 {9 {3}} {3 {8} {5}}}}) -> {1 {2} {10 {10 {4}} {4 {9} {6}}}}", "(incrt {1 {1} {4 {3 {8} {1}} {6 {1}}}}) -> {2 {2} {5 {4 {9} {2}} {7 {2}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036601, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {3 {4}}) -> {4 {5}}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029361, "examples": ["(incrt {}) -> {}", "(incrt {8 {9 {9 {9}}}}) -> {9 {10 {10 {10}}}}", "(incrt {8 {8} {3}}) -> {9 {9} {4}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025865, "examples": ["(incrt {}) -> {}", "(incrt {8 {8} {0 {8 {5} {8}}}}) -> {9 {9} {1 {9 {6} {9}}}}", "(incrt {4}) -> {5}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029844, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.03192, "examples": ["(incrt {}) -> {}", "(incrt {4 {5} {8}}) -> {5 {6} {9}}", "(incrt {5 {9}}) -> {6 {10}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034381, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027523, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {4}) -> {5}", "(incrt {5 {4} {7}}) -> {6 {5} {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033553, "examples": ["(incrt {}) -> {}", "(incrt {5 {3}}) -> {6 {4}}", "(incrt {}) -> {}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024933, "examples": ["(incrt {}) -> {}", "(incrt {5 {7 {9}}}) -> {6 {8 {10}}}", "(incrt {1 {6} {2}}) -> {2 {7} {3}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025607, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {8 {7 {9 {3}} {9}}}) -> {9 {8 {10 {4}} {10}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031967, "examples": ["(incrt {}) -> {}", "(incrt {5 {1 {0} {6}} {7}}) -> {6 {2 {1} {7}} {8}}", "(incrt {9}) -> {10}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.041393, "examples": ["(incrt {}) -> {}", "(incrt {6 {0} {8 {7 {2} {7}} {7 {3} {4}}}}) -> {7 {1} {9 {8 {3} {8}} {8 {4} {5}}}}", "(incrt {}) -> {}", "(incrt {4 {7 {5 {6} {0}}} {4 {9 {0} {1}} {6 {5}}}}) -> {5 {8 {6 {7} {1}}} {5 {10 {1} {2}} {7 {6}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.043237, "examples": ["(incrt {}) -> {}", "(incrt {3 {1 {3 {6} {1}} {8 {5} {6}}} {1 {6 {5} {1}} {5 {4}}}}) -> {4 {2 {4 {7} {2}} {9 {6} {7}}} {2 {7 {6} {2}} {6 {5}}}}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028513, "examples": ["(incrt {}) -> {}", "(incrt {6 {3} {9}}) -> {7 {4} {10}}", "(incrt {3 {4}}) -> {4 {5}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025178, "examples": ["(incrt {}) -> {}", "(incrt {3 {5}}) -> {4 {6}}", "(incrt {9 {3} {9 {3 {5}} {9 {6} {8}}}}) -> {10 {4} {10 {4 {6}} {10 {7} {9}}}}", "(incrt {5 {2}}) -> {6 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040874, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {6}) -> {7}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039335, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027483, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {7 {3 {1 {1} {3}}}}) -> {8 {4 {2 {2} {4}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032352, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4 {7 {1} {1}} {9 {3}}}) -> {5 {8 {2} {2}} {10 {4}}}", "(incrt {3 {4 {3} {4}}}) -> {4 {5 {4} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.04097, "examples": ["(incrt {}) -> {}", "(incrt {1 {1} {7}}) -> {2 {2} {8}}", "(incrt {5 {3}}) -> {6 {4}}", "(incrt {8 {2} {5}}) -> {9 {3} {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033001, "examples": ["(incrt {}) -> {}", "(incrt {3 {1} {5}}) -> {4 {2} {6}}", "(incrt {1 {2} {5}}) -> {2 {3} {6}}", "(incrt {2 {6 {6 {9} {6}} {7 {7}}} {2 {4 {0}}}}) -> {3 {7 {7 {10} {7}} {8 {8}}} {3 {5 {1}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032002, "examples": ["(incrt {}) -> {}", "(incrt {8 {1}}) -> {9 {2}}", "(incrt {}) -> {}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039685, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {0} {2}}) -> {7 {1} {3}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038485, "examples": ["(incrt {}) -> {}", "(incrt {0 {6 {2}}}) -> {1 {7 {3}}}", "(incrt {4 {9 {4}} {7 {8} {6}}}) -> {5 {10 {5}} {8 {9} {7}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037276, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {1}) -> {2}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031817, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033582, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {}) -> {}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028513, "examples": ["(incrt {}) -> {}", "(incrt {5 {8} {9 {0}}}) -> {6 {9} {10 {1}}}", "(incrt {9 {6} {1 {5}}}) -> {10 {7} {2 {6}}}", "(incrt {5 {3 {1}}}) -> {6 {4 {2}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028269, "examples": ["(incrt {}) -> {}", "(incrt {9 {1} {2}}) -> {10 {2} {3}}", "(incrt {3}) -> {4}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027161, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0 {2 {0} {6}}}) -> {1 {3 {1} {7}}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033863, "examples": ["(incrt {}) -> {}", "(incrt {1 {5 {7}}}) -> {2 {6 {8}}}", "(incrt {3 {8}}) -> {4 {9}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.03607, "examples": ["(incrt {}) -> {}", "(incrt {1 {5 {9}}}) -> {2 {6 {10}}}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035415, "examples": ["(incrt {}) -> {}", "(incrt {7 {6}}) -> {8 {7}}", "(incrt {}) -> {}", "(incrt {2 {8} {1}}) -> {3 {9} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028327, "examples": ["(incrt {}) -> {}", "(incrt {2 {9} {9 {8} {2 {0} {8}}}}) -> {3 {10} {10 {9} {3 {1} {9}}}}", "(incrt {8 {6 {7}}}) -> {9 {7 {8}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026041, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4 {7 {0}}}) -> {5 {8 {1}}}", "(incrt {5 {1 {9}}}) -> {6 {2 {10}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.03962, "examples": ["(incrt {}) -> {}", "(incrt {5 {8} {5 {0} {5 {8}}}}) -> {6 {9} {6 {1} {6 {9}}}}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037122, "examples": ["(incrt {}) -> {}", "(incrt {4 {4 {9} {4}} {2}}) -> {5 {5 {10} {5}} {3}}", "(incrt {0 {5}}) -> {1 {6}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039913, "examples": ["(incrt {}) -> {}", "(incrt {9 {8} {7}}) -> {10 {9} {8}}", "(incrt {4 {0}}) -> {5 {1}}", "(incrt {0 {9}}) -> {1 {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026569, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {5} {5}}) -> {3 {6} {6}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023688, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {5 {6} {4}}) -> {6 {7} {5}}", "(incrt {7 {8}}) -> {8 {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027292, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {5 {5}}}) -> {3 {6 {6}}}", "(incrt {1 {8 {2} {2}}}) -> {2 {9 {3} {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026287, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5 {9} {3}}) -> {6 {10} {4}}", "(incrt {0 {4 {3} {4}}}) -> {1 {5 {4} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042539, "examples": ["(incrt {}) -> {}", "(incrt {6 {6 {5}} {5 {4} {8 {3} {6}}}}) -> {7 {7 {6}} {6 {5} {9 {4} {7}}}}", "(incrt {2 {7}}) -> {3 {8}}", "(incrt {4 {0 {4 {0} {3}}}}) -> {5 {1 {5 {1} {4}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034234, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {}) -> {}", "(incrt {2 {7 {7} {2}} {0}}) -> {3 {8 {8} {3}} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029045, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {}) -> {}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026197, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9 {9}}) -> {10 {10}}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039042, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023888, "examples": ["(incrt {}) -> {}", "(incrt {2 {2 {6 {0}} {2}}}) -> {3 {3 {7 {1}} {3}}}", "(incrt {0}) -> {1}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024175, "examples": ["(incrt {}) -> {}", "(incrt {6 {0}}) -> {7 {1}}", "(incrt {6 {0 {5 {4} {3}}} {1 {3 {0}}}}) -> {7 {1 {6 {5} {4}}} {2 {4 {1}}}}", "(incrt {8 {5}}) -> {9 {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024006, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023732, "examples": ["(incrt {}) -> {}", "(incrt {3 {3 {8} {3}}}) -> {4 {4 {9} {4}}}", "(incrt {}) -> {}", "(incrt {3 {6} {2}}) -> {4 {7} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023588, "examples": ["(incrt {}) -> {}", "(incrt {5 {5}}) -> {6 {6}}", "(incrt {6}) -> {7}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
