{"time": 0.000403, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.00038, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000722, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000667, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.029434, "examples": ["(incrt {}) -> {}", "(incrt {5 {8}}) -> {6 {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000634, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.026804, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.03106, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029565, "examples": ["(incrt {}) -> {}", "(incrt {4 {0}}) -> {5 {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.041761, "examples": ["(incrt {}) -> {}", "(incrt {5 {9}}) -> {6 {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032541, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000416, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.040089, "examples": ["(incrt {}) -> {}", "(incrt {1 {8 {9} {4}}}) -> {2 {9 {10} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025597, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028584, "examples": ["(incrt {}) -> {}", "(incrt {3 {4 {4}} {4}}) -> {4 {5 {5}} {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.020821, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)"}
{"time": 0.000458, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000392, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000706, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.035095, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000668, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000584, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.031318, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026447, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035503, "examples": ["(incrt {}) -> {}", "(incrt {0 {3 {7 {1} {9}} {1 {7} {0}}}}) -> {1 {4 {8 {2} {10}} {2 {8} {1}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038911, "examples": ["(incrt {}) -> {}", "(incrt {2 {9} {7 {2 {5}} {4}}}) -> {3 {10} {8 {3 {6}} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.020599, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)"}
{"time": 0.032409, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)"}
{"time": 0.030625, "examples": ["(incrt {}) -> {}", "(incrt {0 {5 {9}}}) -> {1 {6 {10}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.04099, "examples": ["(incrt {}) -> {}", "(incrt {7 {6 {5 {0} {6}}} {8 {9 {4}} {0}}}) -> {8 {7 {6 {1} {7}}} {9 {10 {5}} {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024117, "examples": ["(incrt {}) -> {}", "(incrt {9 {4 {0} {8}} {9 {0}}}) -> {10 {5 {1} {9}} {10 {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024003, "examples": ["(incrt {}) -> {}", "(incrt {2 {8} {2}}) -> {3 {9} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027666, "examples": ["(incrt {}) -> {}", "(incrt {9 {6} {2}}) -> {10 {7} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
