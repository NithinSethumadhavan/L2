{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [7]) -> [7]"], "time": 0.000531}
{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [4]) -> [4]"], "time": 0.000359}
{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [3]) -> [3]"], "time": 0.000403}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [0 8 4 0 5]) -> [0 0 0 0 0]"], "time": 0.021918}
{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [4]) -> [4]"], "time": 0.000472}
{"solution": "(let multfirst (let a (lambda (b) []) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"], "time": 0.000483}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [9 7]) -> [9 9]"], "time": 0.03295}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [2 1]) -> [2 2]"], "time": 0.032537}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [6 6 8 3]) -> [6 6 6 6]"], "time": 0.026934}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [9 5 5 3 6]) -> [9 9 9 9 9]"], "time": 0.033237}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [4 7 8 8 9]) -> [4 4 4 4 4]"], "time": 0.035526}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [1 3 9 3 3]) -> [1 1 1 1 1]"], "time": 0.034303}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [1 3 7 5 6]) -> [1 1 1 1 1]"], "time": 0.023089}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [2 5 1 6 1]) -> [2 2 2 2 2]"], "time": 0.022131}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [2 0]) -> [2 2]"], "time": 0.027472}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [8 1 4 2]) -> [8 8 8 8]"], "time": 0.031153}
{"solution": "(let multfirst (let a (lambda (b) []) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"], "time": 0.000373}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [3 1 7]) -> [3 3 3]"], "time": 0.028711}
{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [7]) -> [7]"], "time": 0.000307}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [9 0]) -> [9 9]"], "time": 0.027309}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [1 8 7]) -> [1 1 1]"], "time": 0.0274}
{"solution": "(let multfirst (let a (lambda (b) []) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"], "time": 0.000465}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [2 8 5 7 5]) -> [2 2 2 2 2]"], "time": 0.032194}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [9 7 0]) -> [9 9 9]"], "time": 0.024582}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [8 7 4 9 4]) -> [8 8 8 8 8]"], "time": 0.024198}
{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [0]) -> [0]"], "time": 0.000507}
{"solution": "(let multfirst (let a (lambda (b) b) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [2]) -> [2]"], "time": 0.000335}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [1 6 1 7 9]) -> [1 1 1 1 1]"], "time": 0.021387}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [5 5 8 4 0]) -> [5 5 5 5 5]"], "time": 0.021756}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [0 6]) -> [0 0]"], "time": 0.022239}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [6 5 1 5 6]) -> [6 6 6 6 6]"], "time": 0.027612}
{"solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "name": "multfirst", "examples": ["(multfirst []) -> []", "(multfirst [2 7]) -> [2 2]"], "time": 0.022328}
