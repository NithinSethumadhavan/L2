{"time": 0.000646, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.025468, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026233, "examples": ["(incrt {}) -> {}", "(incrt {5 {9 {7} {2}} {1}}) -> {6 {10 {8} {3}} {2}}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028604, "examples": ["(incrt {}) -> {}", "(incrt {7 {9 {2} {4}}}) -> {8 {10 {3} {5}}}", "(incrt {3 {6}}) -> {4 {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033673, "examples": ["(incrt {}) -> {}", "(incrt {8 {3 {5}}}) -> {9 {4 {6}}}", "(incrt {9 {7}}) -> {10 {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024967, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029235, "examples": ["(incrt {}) -> {}", "(incrt {8 {0 {1} {8 {6}}} {0}}) -> {9 {1 {2} {9 {7}}} {1}}", "(incrt {9 {9 {1} {6}}}) -> {10 {10 {2} {7}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031078, "examples": ["(incrt {}) -> {}", "(incrt {0 {6}}) -> {1 {7}}", "(incrt {9 {4} {8}}) -> {10 {5} {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035604, "examples": ["(incrt {}) -> {}", "(incrt {7 {1 {8}}}) -> {8 {2 {9}}}", "(incrt {6 {0 {7 {9} {5}}} {4 {9 {9} {4}}}}) -> {7 {1 {8 {10} {6}}} {5 {10 {10} {5}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.046393, "examples": ["(incrt {}) -> {}", "(incrt {4 {8 {2}} {0 {8}}}) -> {5 {9 {3}} {1 {9}}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038169, "examples": ["(incrt {}) -> {}", "(incrt {2 {3}}) -> {3 {4}}", "(incrt {1 {0} {0 {6} {7}}}) -> {2 {1} {1 {7} {8}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039191, "examples": ["(incrt {}) -> {}", "(incrt {4 {6 {4 {2} {0}} {3 {3}}}}) -> {5 {7 {5 {3} {1}} {4 {4}}}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031785, "examples": ["(incrt {}) -> {}", "(incrt {7 {8}}) -> {8 {9}}", "(incrt {7 {4 {9}} {3}}) -> {8 {5 {10}} {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.044587, "examples": ["(incrt {}) -> {}", "(incrt {7 {4}}) -> {8 {5}}", "(incrt {7 {5}}) -> {8 {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036914, "examples": ["(incrt {}) -> {}", "(incrt {5 {1}}) -> {6 {2}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032133, "examples": ["(incrt {}) -> {}", "(incrt {8 {4 {3} {6}} {0 {1} {9}}}) -> {9 {5 {4} {7}} {1 {2} {10}}}", "(incrt {7 {6 {9} {2}} {6 {8} {9}}}) -> {8 {7 {10} {3}} {7 {9} {10}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030264, "examples": ["(incrt {}) -> {}", "(incrt {1 {4} {0}}) -> {2 {5} {1}}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029265, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023872, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {5 {8 {6}} {2}}) -> {6 {9 {7}} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037045, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {1 {7}} {1 {1}}}) -> {9 {2 {8}} {2 {2}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029943, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031954, "examples": ["(incrt {}) -> {}", "(incrt {0 {6 {9}} {9 {4} {4}}}) -> {1 {7 {10}} {10 {5} {5}}}", "(incrt {0 {3 {4} {9}} {5}}) -> {1 {4 {5} {10}} {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035311, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {3 {5} {2}}) -> {4 {6} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000618, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.024023, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.046996, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {0 {0} {3 {3} {4}}} {4 {4 {0} {1}} {1 {2} {3}}}}) -> {9 {1 {1} {4 {4} {5}}} {5 {5 {1} {2}} {2 {3} {4}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042733, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {2 {0 {5}}}) -> {3 {1 {6}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029114, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {1 {2}}) -> {2 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038502, "examples": ["(incrt {}) -> {}", "(incrt {6 {3 {6 {6}}} {8 {8 {8}} {9}}}) -> {7 {4 {7 {7}}} {9 {9 {9}} {10}}}", "(incrt {7 {9}}) -> {8 {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.052396, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7 {6 {7 {1}}} {2 {2}}}) -> {8 {7 {8 {2}}} {3 {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033568, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {4 {1}}) -> {5 {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024589, "examples": ["(incrt {}) -> {}", "(incrt {9 {4 {4}} {4}}) -> {10 {5 {5}} {5}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024626, "examples": ["(incrt {}) -> {}", "(incrt {1 {1 {4} {7}} {5 {2} {1}}}) -> {2 {2 {5} {8}} {6 {3} {2}}}", "(incrt {0 {2} {0}}) -> {1 {3} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.043574, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {5 {1}} {3}}) -> {7 {6 {2}} {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024187, "examples": ["(incrt {}) -> {}", "(incrt {0 {3 {2}}}) -> {1 {4 {3}}}", "(incrt {2 {6} {5}}) -> {3 {7} {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.045089, "examples": ["(incrt {}) -> {}", "(incrt {5 {0 {6} {4 {0} {3}}} {3 {4 {4}}}}) -> {6 {1 {7} {5 {1} {4}}} {4 {5 {5}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024287, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000653, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000659, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.030845, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026438, "examples": ["(incrt {}) -> {}", "(incrt {9 {7}}) -> {10 {8}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026442, "examples": ["(incrt {}) -> {}", "(incrt {0 {7 {4} {2 {5} {4}}} {6 {1 {0} {9}} {0 {3} {0}}}}) -> {1 {8 {5} {3 {6} {5}}} {7 {2 {1} {10}} {1 {4} {1}}}}", "(incrt {7 {5} {1}}) -> {8 {6} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028266, "examples": ["(incrt {}) -> {}", "(incrt {1 {4 {3} {9}} {4}}) -> {2 {5 {4} {10}} {5}}", "(incrt {5 {9 {2}}}) -> {6 {10 {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035226, "examples": ["(incrt {}) -> {}", "(incrt {4 {1}}) -> {5 {2}}", "(incrt {0 {2}}) -> {1 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028028, "examples": ["(incrt {}) -> {}", "(incrt {5 {7} {3}}) -> {6 {8} {4}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023659, "examples": ["(incrt {}) -> {}", "(incrt {0 {8}}) -> {1 {9}}", "(incrt {6 {6} {0}}) -> {7 {7} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025451, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.041006, "examples": ["(incrt {}) -> {}", "(incrt {4 {8 {1 {1}} {6 {1} {6}}}}) -> {5 {9 {2 {2}} {7 {2} {7}}}}", "(incrt {3 {7}}) -> {4 {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000454, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.042088, "examples": ["(incrt {}) -> {}", "(incrt {3 {4 {3} {4 {2}}}}) -> {4 {5 {4} {5 {3}}}}", "(incrt {9 {2}}) -> {10 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030432, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {2 {3}} {2}}) -> {3 {3 {4}} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029026, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0 {9 {8}} {1 {2}}}) -> {1 {10 {9}} {2 {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000501, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.03222, "examples": ["(incrt {}) -> {}", "(incrt {0 {9 {3} {8}}}) -> {1 {10 {4} {9}}}", "(incrt {9 {4}}) -> {10 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030059, "examples": ["(incrt {}) -> {}", "(incrt {5 {0 {2}}}) -> {6 {1 {3}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024639, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {2 {6} {8}}) -> {3 {7} {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038297, "examples": ["(incrt {}) -> {}", "(incrt {6 {1 {4}} {5 {1}}}) -> {7 {2 {5}} {6 {2}}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025742, "examples": ["(incrt {}) -> {}", "(incrt {2 {8}}) -> {3 {9}}", "(incrt {6 {6}}) -> {7 {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039797, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033992, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {2 {9 {8}}} {8 {6} {7 {1}}}}) -> {9 {3 {10 {9}}} {9 {7} {8 {2}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037186, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {9 {7} {1}}) -> {10 {8} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032016, "examples": ["(incrt {}) -> {}", "(incrt {6 {5}}) -> {7 {6}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026208, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)"}
{"time": 0.024099, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027059, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {0 {3 {3} {3}} {3}} {8 {0}}}) -> {9 {1 {4 {4} {4}} {4}} {9 {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023439, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 1)))) _) _)"}
{"time": 0.035505, "examples": ["(incrt {}) -> {}", "(incrt {5 {1 {8} {6}}}) -> {6 {2 {9} {7}}}", "(incrt {9 {6 {2}} {7 {5} {4}}}) -> {10 {7 {3}} {8 {6} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000522, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.026528, "examples": ["(incrt {}) -> {}", "(incrt {4 {7}}) -> {5 {8}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023931, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042795, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {1 {4 {0 {0}}} {1 {1 {8} {8}}}}) -> {2 {5 {1 {1}}} {2 {2 {9} {9}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033943, "examples": ["(incrt {}) -> {}", "(incrt {1 {5 {9}}}) -> {2 {6 {10}}}", "(incrt {4 {6 {8 {9}} {8}}}) -> {5 {7 {9 {10}} {9}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.043784, "examples": ["(incrt {}) -> {}", "(incrt {7 {3 {5 {9}} {3 {9}}}}) -> {8 {4 {6 {10}} {4 {10}}}}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023909, "examples": ["(incrt {}) -> {}", "(incrt {5 {5}}) -> {6 {6}}", "(incrt {6 {4}}) -> {7 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.0258, "examples": ["(incrt {}) -> {}", "(incrt {1 {1 {7 {2} {4}} {5}} {9}}) -> {2 {2 {8 {3} {5}} {6}} {10}}", "(incrt {9 {1 {8} {8}}}) -> {10 {2 {9} {9}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042478, "examples": ["(incrt {}) -> {}", "(incrt {6 {3 {4} {4 {8}}}}) -> {7 {4 {5} {5 {9}}}}", "(incrt {9 {6 {9 {7}} {2 {0}}} {5 {5 {9} {8}}}}) -> {10 {7 {10 {8}} {3 {1}}} {6 {6 {10} {9}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025164, "examples": ["(incrt {}) -> {}", "(incrt {6 {1}}) -> {7 {2}}", "(incrt {9 {0 {6} {9}} {9}}) -> {10 {1 {7} {10}} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025532, "examples": ["(incrt {}) -> {}", "(incrt {0 {7} {4 {9}}}) -> {1 {8} {5 {10}}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040247, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039975, "examples": ["(incrt {}) -> {}", "(incrt {1 {0} {4}}) -> {2 {1} {5}}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032163, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {4 {8 {7 {8} {1}}} {5 {0 {0} {2}}}}) -> {5 {9 {8 {9} {2}}} {6 {1 {1} {3}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.041087, "examples": ["(incrt {}) -> {}", "(incrt {5 {7 {3}}}) -> {6 {8 {4}}}", "(incrt {8 {0} {7}}) -> {9 {1} {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025819, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {0 {6}}) -> {1 {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039045, "examples": ["(incrt {}) -> {}", "(incrt {7 {6}}) -> {8 {7}}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037307, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038633, "examples": ["(incrt {}) -> {}", "(incrt {7 {5} {5}}) -> {8 {6} {6}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024236, "examples": ["(incrt {}) -> {}", "(incrt {3 {6 {6}} {6}}) -> {4 {7 {7}} {7}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028046, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024087, "examples": ["(incrt {}) -> {}", "(incrt {2 {7}}) -> {3 {8}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02442, "examples": ["(incrt {}) -> {}", "(incrt {8 {5 {8}}}) -> {9 {6 {9}}}", "(incrt {9 {9} {9}}) -> {10 {10} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029486, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {2 {1}}) -> {3 {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037823, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {1 {4} {8}}) -> {2 {5} {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023743, "examples": ["(incrt {}) -> {}", "(incrt {8 {3} {9}}) -> {9 {4} {10}}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025638, "examples": ["(incrt {}) -> {}", "(incrt {3 {9}}) -> {4 {10}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025137, "examples": ["(incrt {}) -> {}", "(incrt {9 {1}}) -> {10 {2}}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028516, "examples": ["(incrt {}) -> {}", "(incrt {3 {2} {6}}) -> {4 {3} {7}}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023594, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {2 {4} {8}}) -> {3 {5} {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025684, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0 {6} {0}}) -> {1 {7} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023577, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023111, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {9 {9} {2}}) -> {10 {10} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
