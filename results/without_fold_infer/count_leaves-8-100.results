{"time": 0.405665, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (- 1 (sum d))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2 {3 {8} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 1.957662, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {4 {4} {2}} {1 {0}}}) -> 3", "(count_leaves {4 {6}}) -> 1", "(count_leaves {3 {5 {8}}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {9 {3}}) -> 1"]}
{"time": 1.97948, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {9} {0}}) -> 2"]}
{"time": 2.010688, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {1}}) -> 1", "(count_leaves {1 {9} {0 {3 {6}}}}) -> 2", "(count_leaves {9 {8 {4 {6} {1}}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1"]}
{"time": 2.062907, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {4}} {5}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {2 {0 {6} {6}} {7}}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 2.013868, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {3 {4 {0 {2}} {2 {9} {6}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {5} {8 {8}}} {3 {3 {9} {0}} {1 {2}}}}) -> 5"]}
{"time": 2.139234, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {8} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6 {2 {0}}}}) -> 1", "(count_leaves {7 {4}}) -> 1", "(count_leaves {6 {4}}) -> 1"]}
{"time": 2.079709, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {5} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {5 {7} {7}} {6 {5}}}) -> 3", "(count_leaves {4 {9} {6}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 2.149389, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {9} {8}}) -> 2", "(count_leaves {7 {7} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {5 {5}}}}) -> 1", "(count_leaves {6}) -> 1"]}
{"time": 2.151471, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2 {8}}) -> 1", "(count_leaves {7 {0} {6 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {6 {7} {2}} {5 {6}}}}) -> 3", "(count_leaves {8 {6}}) -> 1"]}
{"time": 2.052488, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {3 {8} {5 {3}}} {7 {9 {0} {5}} {9 {4}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {5 {6 {9 {7}} {0 {6}}}}) -> 2", "(count_leaves {5 {6} {2}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 2.224706, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {5} {8 {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 2.143148, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {3}}) -> 1", "(count_leaves {3 {1 {4} {2 {2}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1 {9} {6}}) -> 2"]}
{"time": 2.206429, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {1} {5}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {8 {2 {5} {2 {7}}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {9 {6 {8 {7}}} {9 {1 {7}}}}) -> 2"]}
{"time": 2.171562, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {9 {3} {7}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {6}}) -> 1"]}
{"time": 2.32029, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {7 {7 {2} {1}} {1 {0} {8}}}}) -> 4", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {1} {9}}) -> 2", "(count_leaves {0}) -> 1"]}
{"time": 1.655217, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {4} {3}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {9}}) -> 1", "(count_leaves {1}) -> 1"]}
{"time": 0.031599, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1"]}
{"time": 1.031838, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {8} {1 {4 {3} {1}} {0 {3} {0}}}}) -> 5", "(count_leaves {6 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6} {1 {8} {3}}}) -> 3", "(count_leaves {8 {8}}) -> 1", "(count_leaves {0 {3}}) -> 1"]}
{"time": 1.019508, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {4} {2}} {3}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 1.088299, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {8}}) -> 2", "(count_leaves {1 {8}}) -> 1", "(count_leaves {7 {2 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.993462, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {4}}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {5 {7 {3 {6} {8}} {7}}}) -> 3", "(count_leaves {6 {4 {8} {1}}}) -> 2"]}
{"time": 1.120758, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {0} {3}}) -> 2", "(count_leaves {2 {0 {1 {5}}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"]}
{"time": 1.185162, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {7 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3}}) -> 1", "(count_leaves {6 {2 {7} {8}}}) -> 2", "(count_leaves {6 {0 {2 {0} {5}}}}) -> 2", "(count_leaves {7 {8 {3} {8}}}) -> 2"]}
{"time": 2.14885, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {8 {7}}}) -> 1", "(count_leaves {3 {8} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {5 {5} {3 {9 {7} {5}}}}) -> 3"]}
{"time": 2.07544, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5} {4}}) -> 2", "(count_leaves {8 {2 {4} {6}}}) -> 2", "(count_leaves {1 {2 {0 {7}} {4}} {3 {9}}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 2.163558, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {2 {3} {5}}) -> 2", "(count_leaves {2 {6 {3}}}) -> 1", "(count_leaves {4 {7}}) -> 1", "(count_leaves {1 {4} {4}}) -> 2"]}
{"time": 1.011483, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {1} {6 {8}}}) -> 2", "(count_leaves {3 {4 {1}}}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {4 {8}}) -> 1"]}
{"time": 2.145334, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {6} {0}}) -> 2", "(count_leaves {3 {4} {0}}) -> 2", "(count_leaves {5 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {4 {0} {8}}}) -> 2"]}
{"time": 2.211082, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {8 {5} {8}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {2 {7 {4 {7} {8}} {0 {3}}}}) -> 3"]}
{"time": 1.936644, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {2 {2 {8} {8}}}) -> 2", "(count_leaves {8 {3 {1} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 2.230493, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {0 {2} {4 {8}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {8} {3 {0}}}) -> 2"]}
{"time": 1.115466, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {6 {8}} {1 {6}}}) -> 2", "(count_leaves {2 {9 {9} {8}}}) -> 2", "(count_leaves {5 {1}}) -> 1", "(count_leaves {6 {2 {4 {2} {4}}} {8 {7}}}) -> 3"]}
{"time": 1.022461, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {5 {2} {8}}) -> 2", "(count_leaves {8 {5}}) -> 1", "(count_leaves {5 {6}}) -> 1"]}
{"time": 2.017962, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {1} {0}}) -> 2", "(count_leaves {2 {6 {2} {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {0}} {0 {3} {2}}}) -> 3", "(count_leaves {8 {1}}) -> 1", "(count_leaves {2 {5 {8} {7}}}) -> 2"]}
{"time": 2.283871, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {3}}) -> 1", "(count_leaves {6 {9} {7 {7 {1} {1}}}}) -> 3", "(count_leaves {9 {9} {0}}) -> 2", "(count_leaves {4 {7 {5}} {2}}) -> 2", "(count_leaves {7 {5 {0}} {5}}) -> 2", "(count_leaves {5}) -> 1"]}
{"time": 0.046233, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 2.261577, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {6} {5}}) -> 2", "(count_leaves {0 {2 {9 {0} {5}} {4}}}) -> 3", "(count_leaves {8 {7} {1}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.525584, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {3 {9 {7 {1}}} {5 {4} {2}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {3 {1 {9} {3}} {1 {0} {8}}}) -> 4", "(count_leaves {6 {5} {8}}) -> 2"]}
{"time": 0.047546, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {3}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1"]}
{"time": 1.491161, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {1} {9 {8}}}) -> 2", "(count_leaves {4 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1"]}
{"time": 0.872248, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (/ 1 c))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {2}}) -> 1", "(count_leaves {1 {5 {9} {5}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {2 {3}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1"]}
{"time": 0.044265, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 1.567468, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {4 {7 {7} {2}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {2} {4}}) -> 2", "(count_leaves {3 {1} {5}}) -> 2"]}
{"time": 1.330671, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3 {1}}) -> 1"]}
{"time": 1.360624, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {0 {1 {2} {0}} {8 {2} {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {2 {2} {8}}) -> 2", "(count_leaves {4 {8} {9 {8 {0}}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.315546, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {2} {3}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2 {7 {8} {5}}}) -> 2"]}
{"time": 1.610169, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {2 {2} {9}}) -> 2", "(count_leaves {6 {6} {9}}) -> 2", "(count_leaves {6 {1}}) -> 1", "(count_leaves {4 {6}}) -> 1", "(count_leaves {5}) -> 1"]}
{"time": 1.744781, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {2 {8}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {1 {6 {9}}} {2 {0 {6} {9}}}}) -> 3", "(count_leaves {0 {0 {5 {5}} {1 {6}}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.324398, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5 {0}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {4 {7} {2 {4} {4}}}}) -> 3"]}
{"time": 1.437661, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5} {8}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {1 {6 {9} {2}} {5 {1}}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {7 {4} {7 {7}}}) -> 2"]}
{"time": 1.792863, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1}}) -> 1", "(count_leaves {5 {6} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1"]}
{"time": 0.048247, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {8 {8}}) -> 1", "(count_leaves {6 {4}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.692816, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {8 {3} {1}}}) -> 2", "(count_leaves {8 {2 {2} {3}} {6}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {5 {0} {0}}) -> 2", "(count_leaves {6 {0}}) -> 1", "(count_leaves {4 {7 {8} {0}}}) -> 2"]}
{"time": 1.754209, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {2 {0} {5}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {7 {4} {8}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.733073, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {1 {3 {2}} {1 {5}}}) -> 2", "(count_leaves {0 {8 {7 {0}} {9 {0}}}}) -> 2", "(count_leaves {6 {1} {7}}) -> 2"]}
{"time": 1.768798, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {3}}) -> 1", "(count_leaves {1 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {9} {6 {0 {8} {0}}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.344642, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {1} {3}}) -> 2", "(count_leaves {3 {7 {5} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {7}}}) -> 1", "(count_leaves {4 {8}}) -> 1"]}
{"time": 1.500756, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6 {2 {0} {8}} {4 {0} {8}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {6 {1}}) -> 1", "(count_leaves {9 {1 {8} {0}}}) -> 2", "(count_leaves {3 {2} {1}}) -> 2"]}
{"time": 1.367307, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8 {5} {3 {9} {7}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {9}}) -> 1"]}
{"time": 1.241047, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {0 {2 {7 {5}} {4 {3}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.033413, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {7 {6 {4}} {8 {3} {2}}} {8 {9 {6} {6}} {2 {2} {2}}}}) -> 7", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0} {8 {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 1.545964, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {8 {2 {7}} {1}} {0}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {8 {4} {7 {4} {3}}} {6 {5 {5}}}}) -> 4", "(count_leaves {8 {2 {1 {5}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {8}} {3}}) -> 2"]}
{"time": 1.17422, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7}}) -> 1", "(count_leaves {2 {5} {7}}) -> 2", "(count_leaves {1 {0}}) -> 1", "(count_leaves {0 {1} {0}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {7 {8 {3}}}) -> 1"]}
{"time": 1.636862, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {9 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4} {0 {8 {9} {4}} {2 {6}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {7 {4}}) -> 1"]}
{"time": 1.047612, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {7 {5 {6}} {3 {3} {9}}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {5}) -> 1"]}
{"time": 1.041221, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {8}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {7 {3 {8} {5}} {7 {9} {2}}}) -> 4", "(count_leaves {9 {1}}) -> 1"]}
{"time": 1.780706, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {5} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {7 {9 {8} {0}}}) -> 2", "(count_leaves {7 {9}}) -> 1"]}
{"time": 1.283376, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {9}}) -> 1", "(count_leaves {9 {9 {6 {2}}} {8}}) -> 2", "(count_leaves {1 {5 {1 {3}}}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"]}
{"time": 1.846902, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {5 {8}}) -> 1", "(count_leaves {1 {2} {5}}) -> 2", "(count_leaves {9 {4}}) -> 1", "(count_leaves {5 {0 {8}} {5}}) -> 2", "(count_leaves {4}) -> 1"]}
{"time": 1.774169, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {6 {8 {7} {3}}}) -> 2", "(count_leaves {8 {7 {2} {1}} {4}}) -> 3", "(count_leaves {0 {9} {4 {8 {9}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.067875, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 2.050853, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {5 {7} {1}} {6 {3} {9}}}) -> 4", "(count_leaves {8 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {9 {4}} {9 {6} {0}}} {0}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.917986, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8 {1 {9 {5} {1}} {4 {8} {6}}} {2 {7 {5}}}}) -> 5", "(count_leaves {7 {5} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {6}}) -> 1"]}
{"time": 1.95024, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {8} {6 {5}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.301312, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {4 {7} {1}} {6 {6} {5}}}) -> 4", "(count_leaves {1}) -> 1", "(count_leaves {4 {9 {6}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {6} {8}}) -> 2"]}
{"time": 1.990319, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {7 {8 {0 {8}} {0}} {1 {4 {2}}}}) -> 3", "(count_leaves {2 {6 {9} {3}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.170839, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {8 {8}} {9 {9 {6} {4}} {2 {5} {5}}}}) -> 5", "(count_leaves {2 {4} {5}}) -> 2", "(count_leaves {2 {6} {4}}) -> 2", "(count_leaves {5 {8}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.863887, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8} {2}}) -> 2", "(count_leaves {2 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.717792, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {5 {8 {2}} {3 {1} {3}}} {5 {5 {6}}}}) -> 4", "(count_leaves {6}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {0 {4 {5 {9}} {9}} {0 {8}}}) -> 3"]}
{"time": 1.279686, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {1} {9}}) -> 2", "(count_leaves {3 {9} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {7} {3}}) -> 2", "(count_leaves {3}) -> 1"]}
{"time": 1.74395, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9 {6} {4 {9}}}}) -> 2", "(count_leaves {8 {3 {1}}}) -> 1", "(count_leaves {4 {2} {1}}) -> 2", "(count_leaves {5 {3}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1"]}
{"time": 1.665938, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {9 {0 {9 {7} {4}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {0 {1 {8}}}}) -> 1"]}
{"time": 1.618734, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {4} {9 {4}}} {5}}) -> 3", "(count_leaves {1 {6} {7}}) -> 2", "(count_leaves {8 {4 {6}} {3}}) -> 2"]}
{"time": 1.382653, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1 {0} {0}}) -> 2"]}
{"time": 1.247481, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {1}} {9}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {3 {9} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {4}}}) -> 1"]}
{"time": 1.729217, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {8 {2}} {4 {8} {1}}}) -> 3", "(count_leaves {4 {0}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {8 {9} {3}}) -> 2"]}
{"time": 1.014433, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {0 {5} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"]}
{"time": 1.043284, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0} {4}}) -> 2"]}
{"time": 1.701392, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5 {3 {9} {5}} {1}}) -> 3", "(count_leaves {1 {6}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.071078, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {4 {3 {0} {5}} {7 {9}}} {6}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"]}
{"time": 1.655703, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {4 {9 {3}} {9 {2} {3}}}) -> 3", "(count_leaves {6 {4 {0}} {1 {3}}}) -> 2", "(count_leaves {2 {3}}) -> 1", "(count_leaves {0 {5 {4}}}) -> 1", "(count_leaves {1}) -> 1"]}
{"time": 1.721733, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0} {2 {7}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {8 {0 {0 {9} {5}} {4 {5} {9}}} {4 {4 {8} {4}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1"]}
{"time": 1.752362, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7 {8}}) -> 1", "(count_leaves {0 {3 {5} {6}} {1}}) -> 3", "(count_leaves {1 {6}}) -> 1"]}
{"time": 1.551126, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {5} {0}} {8}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {9} {7}} {9 {2}}}) -> 3", "(count_leaves {2 {3}}) -> 1", "(count_leaves {5 {6}}) -> 1"]}
{"time": 1.587935, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {6 {7} {8}} {3 {9 {9}}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {6 {0} {0}}) -> 2", "(count_leaves {9 {4} {0}}) -> 2", "(count_leaves {4 {9}}) -> 1"]}
{"time": 1.387219, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {5} {8}}) -> 2", "(count_leaves {6 {2}}) -> 1", "(count_leaves {3 {9} {3 {9}}}) -> 2", "(count_leaves {5 {5 {4}}}) -> 1"]}
{"time": 1.091035, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {9}} {8 {9 {5}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {0 {8}}) -> 1"]}
{"time": 1.15968, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {7 {5} {6}} {5}}) -> 3", "(count_leaves {8 {5} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {4 {3} {7}} {0 {3} {8}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {8 {4}}) -> 1"]}
{"time": 1.194071, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {9 {3 {4} {6}} {7 {1} {0}}} {2}}) -> 5", "(count_leaves {0 {5} {8}}) -> 2", "(count_leaves {}) -> 0"]}
