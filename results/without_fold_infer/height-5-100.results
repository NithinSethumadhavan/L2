{"solution": "(let height (let a (lambda (b) 0) _) _)", "name": "height", "time": 0.000602, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.032858, "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {}) -> 0", "(height {2}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.035442, "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {1}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "height", "time": 0.190191, "examples": ["(height {}) -> 0", "(height {0 {8} {1}}) -> 2", "(height {}) -> 0", "(height {5 {2}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (- c 1)) 0)) _) _)", "name": "height", "time": 0.204153, "examples": ["(height {}) -> 0", "(height {4 {3 {7} {1}} {5}}) -> 3", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "height", "time": 0.227767, "examples": ["(height {}) -> 0", "(height {4 {2} {5}}) -> 2", "(height {7 {3}}) -> 2", "(height {2 {0}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.327066, "examples": ["(height {}) -> 0", "(height {7 {7 {6 {0} {8}} {1 {7}}} {9 {2 {2}}}}) -> 4", "(height {}) -> 0", "(height {3 {1}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.348569, "examples": ["(height {}) -> 0", "(height {4 {8} {6}}) -> 2", "(height {4 {9 {9} {4}}}) -> 3", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.37014, "examples": ["(height {}) -> 0", "(height {6 {5 {5} {3}}}) -> 3", "(height {}) -> 0", "(height {4}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.336426, "examples": ["(height {}) -> 0", "(height {3 {4 {2 {3} {2}}} {5}}) -> 4", "(height {}) -> 0", "(height {2}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.37665, "examples": ["(height {}) -> 0", "(height {3 {0 {2}} {9 {0}}}) -> 3", "(height {3 {6} {9}}) -> 2", "(height {5 {8}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.352889, "examples": ["(height {}) -> 0", "(height {4 {6 {5}} {2}}) -> 3", "(height {3 {5 {1}} {9}}) -> 3", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.426464, "examples": ["(height {}) -> 0", "(height {1 {3} {8}}) -> 2", "(height {9}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.404672, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4 {6 {9} {3}} {9 {8}}}) -> 3", "(height {6}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.027226, "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {}) -> 0", "(height {0}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.403872, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {3}) -> 1", "(height {8 {7 {4 {7} {8}}} {9 {4 {3}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.038961, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {4}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.405194, "examples": ["(height {}) -> 0", "(height {5 {1 {7} {7 {0}}} {8 {1 {5} {0}} {4 {5} {1}}}}) -> 4", "(height {2 {4 {3}}}) -> 3", "(height {6}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.354083, "examples": ["(height {}) -> 0", "(height {1 {1 {8}} {5 {7}}}) -> 3", "(height {}) -> 0", "(height {2 {2} {0}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.354934, "examples": ["(height {}) -> 0", "(height {6 {4 {2}}}) -> 3", "(height {6}) -> 1", "(height {5 {3} {9}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.326475, "examples": ["(height {}) -> 0", "(height {4 {7 {7}}}) -> 3", "(height {9}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.048938, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {6}) -> 1", "(height {8}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.294633, "examples": ["(height {}) -> 0", "(height {7 {9}}) -> 2", "(height {8}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "name": "height", "time": 0.048628, "examples": ["(height {}) -> 0", "(height {2 {6}}) -> 2", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.044059, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {1}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.332382, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1 {5}}) -> 2", "(height {0 {5 {7}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.317395, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {4}) -> 1", "(height {2 {2} {5}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.34284, "examples": ["(height {}) -> 0", "(height {3 {5}}) -> 2", "(height {}) -> 0", "(height {0 {5 {7 {8} {3}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.031675, "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {}) -> 0", "(height {9}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.341636, "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {2 {9 {5} {8}} {0 {2} {6}}}) -> 3", "(height {3}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.350824, "examples": ["(height {}) -> 0", "(height {5 {1 {7}} {9 {6 {2}}}}) -> 4", "(height {}) -> 0", "(height {7 {6 {4}} {3 {0}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.332972, "examples": ["(height {}) -> 0", "(height {0 {1}}) -> 2", "(height {2 {2} {6 {2}}}) -> 3", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.301569, "examples": ["(height {}) -> 0", "(height {9 {5}}) -> 2", "(height {}) -> 0", "(height {4}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.320448, "examples": ["(height {}) -> 0", "(height {2 {9} {0}}) -> 2", "(height {2 {4 {7}} {6 {8}}}) -> 3", "(height {6}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.281184, "examples": ["(height {}) -> 0", "(height {0 {3 {5 {2} {0}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.313645, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4 {9}}) -> 2", "(height {9 {6 {7}} {9 {9}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.327203, "examples": ["(height {}) -> 0", "(height {3 {3} {4}}) -> 2", "(height {9}) -> 1", "(height {1}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.036241, "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {3}) -> 1", "(height {6}) -> 1"]}
