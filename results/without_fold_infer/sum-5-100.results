{"time": 0.174763, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 2]) -> 7", "(sum [1 3 4]) -> 8", "(sum [7 5]) -> 12"]}
{"time": 0.177259, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 8 6]) -> 21", "(sum []) -> 0", "(sum []) -> 0"]}
{"time": 0.187216, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum []) -> 0", "(sum [4 3 0 2]) -> 9"]}
{"time": 0.200274, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [3]) -> 3", "(sum []) -> 0", "(sum [9 1 7]) -> 17"]}
{"time": 0.189513, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [2 8 1]) -> 11", "(sum [0]) -> 0"]}
{"time": 0.178252, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum [2 4]) -> 6", "(sum [7]) -> 7"]}
{"time": 0.210401, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum [9 6]) -> 15", "(sum [1 1 9 1 3]) -> 15"]}
{"time": 0.190184, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 4 8 7]) -> 20", "(sum [3]) -> 3", "(sum [5 1 0 0 3]) -> 9"]}
{"time": 0.158394, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 0 0 2 5]) -> 12", "(sum [5 5]) -> 10", "(sum [7 4 8 0]) -> 19"]}
{"time": 0.192823, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 6]) -> 11", "(sum [9 4 3]) -> 16", "(sum [7 5 1]) -> 13"]}
{"time": 0.202097, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 1]) -> 9", "(sum [5]) -> 5", "(sum [6 8 7]) -> 21"]}
{"time": 0.215656, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 3 7 1 9]) -> 21", "(sum [5 8 4 0 3]) -> 20", "(sum []) -> 0"]}
{"time": 0.211143, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 6 3 0 9]) -> 22", "(sum [2 6 2]) -> 10", "(sum [6 2]) -> 8"]}
{"time": 0.145383, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum [7]) -> 7", "(sum [1 6]) -> 7"]}
{"time": 0.18671, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 5 7 7 7]) -> 28", "(sum [8 2 0 7]) -> 17", "(sum [7 9 8 1]) -> 25"]}
{"time": 0.210866, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [5 3 5 9]) -> 22", "(sum [3 0 0 8 9]) -> 20"]}
{"time": 0.040376, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [8]) -> 8", "(sum [1]) -> 1"]}
{"time": 0.165981, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [0 7 9 8 9]) -> 33", "(sum []) -> 0"]}
{"time": 0.16608, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 5 9 3 6]) -> 31", "(sum [0 2 2]) -> 4", "(sum [1 1 9 4 3]) -> 18"]}
{"time": 0.180021, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 3 7 6 8]) -> 26", "(sum [5 0 8 7 5]) -> 25", "(sum [2 1 7 8 5]) -> 23"]}
{"time": 0.158846, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum [0 9 6]) -> 15", "(sum [6 0 5 3 8]) -> 22"]}
{"time": 0.186408, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 9 5 0 6]) -> 29", "(sum [0]) -> 0", "(sum [0 1 5 3]) -> 9"]}
{"time": 0.201973, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum [3 0 8]) -> 11", "(sum [2]) -> 2"]}
{"time": 0.179372, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 2 3 4]) -> 11", "(sum [1 0 4 4 3]) -> 12", "(sum [1]) -> 1"]}
{"time": 0.154044, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 9 3 6]) -> 26", "(sum []) -> 0", "(sum [7 5 8 5]) -> 25"]}
{"time": 0.197292, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 3]) -> 8", "(sum [8 9 3 6]) -> 26", "(sum [2 2]) -> 4"]}
{"time": 0.164245, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [2]) -> 2", "(sum [6 6 7]) -> 19"]}
{"time": 0.210865, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 6]) -> 7", "(sum [4]) -> 4", "(sum [3 3 8 6]) -> 20"]}
{"time": 0.177202, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [5 2 5 1]) -> 13", "(sum [3 1 6 2]) -> 12"]}
{"time": 0.172296, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 8]) -> 12", "(sum [1 6]) -> 7", "(sum [9]) -> 9"]}
{"time": 0.170079, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8]) -> 8", "(sum [2 6]) -> 8", "(sum [3 7 2]) -> 12"]}
{"time": 0.161153, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6 3 0 5]) -> 14", "(sum [5 3 6]) -> 14", "(sum [0 1]) -> 1"]}
{"time": 0.148144, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 1]) -> 8", "(sum [8]) -> 8", "(sum [2 5 2 8 7]) -> 24"]}
{"time": 0.159439, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 6 2 9]) -> 18", "(sum []) -> 0", "(sum [1 0 9 9 3]) -> 22"]}
{"time": 0.141652, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [8 4 7 8]) -> 27", "(sum [1 4 7 0 9]) -> 21"]}
{"time": 0.158268, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 7 8 1 5]) -> 29", "(sum [8 5 6 6 5]) -> 30", "(sum [0 9 6 3 4]) -> 22"]}
{"time": 0.186405, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [7]) -> 7", "(sum [0 1 2 9 9]) -> 21"]}
{"time": 0.189706, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 5 2]) -> 16", "(sum [3 5 7 5 7]) -> 27", "(sum [5 1 9 2]) -> 17"]}
{"time": 0.15272, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 9 2]) -> 15", "(sum []) -> 0", "(sum []) -> 0"]}
{"time": 0.182032, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [4 7 6 7]) -> 24", "(sum [2 4]) -> 6"]}
{"time": 0.212912, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 1 8 2 0]) -> 11", "(sum [8 6]) -> 14", "(sum [5 3 1 4 3]) -> 16"]}
{"time": 0.159827, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 8]) -> 8", "(sum [7 9 5]) -> 21", "(sum [7 8 2 6 5]) -> 28"]}
{"time": 0.159774, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [3]) -> 3", "(sum [8 9]) -> 17", "(sum [0 7 4 4]) -> 15"]}
{"time": 0.172202, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 4]) -> 13", "(sum []) -> 0", "(sum [3]) -> 3"]}
{"time": 0.167848, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 2 2 8]) -> 12", "(sum [6 1 5 0 2]) -> 14", "(sum []) -> 0"]}
{"time": 0.164163, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 1]) -> 10", "(sum []) -> 0", "(sum [2]) -> 2"]}
{"time": 0.187915, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum [1 7 9 1 3]) -> 21", "(sum [5 0]) -> 5"]}
{"time": 0.183857, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum [8 9 3 6 5]) -> 31", "(sum [7 7 0]) -> 14"]}
{"time": 0.148885, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [0 3 9]) -> 12", "(sum [4 3]) -> 7"]}
{"time": 0.144397, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 7 3 2 8]) -> 28", "(sum [5 2]) -> 7", "(sum [9 9 7]) -> 25"]}
{"time": 0.165852, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 4 1 2 4]) -> 18", "(sum [8 0 1]) -> 9", "(sum [8 5 5 7 3]) -> 28"]}
{"time": 0.140127, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [3 7 3]) -> 13", "(sum [4 9 2 4 4]) -> 23", "(sum [4 1]) -> 5"]}
{"time": 0.154489, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 6 9]) -> 19", "(sum [2]) -> 2", "(sum []) -> 0"]}
{"time": 0.199681, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum []) -> 0", "(sum [1 5 5]) -> 11"]}
{"time": 0.17652, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [9 6 7 1]) -> 23", "(sum [7 4 3 7]) -> 21"]}
{"time": 0.179801, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 6 9 8]) -> 31", "(sum [0 7 0]) -> 7", "(sum [9]) -> 9"]}
{"time": 0.165948, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6 4 4 8 9]) -> 31", "(sum []) -> 0", "(sum [6 7 7 9 0]) -> 29"]}
{"time": 0.191405, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 3]) -> 11", "(sum [3 2 0]) -> 5", "(sum [2 5 2 0 6]) -> 15"]}
{"time": 0.153366, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum [6]) -> 6", "(sum [1 1]) -> 2"]}
{"time": 0.159886, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6 0 2 8]) -> 16", "(sum [1 8 1 9 7]) -> 26", "(sum []) -> 0"]}
{"time": 0.174439, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [0 4 8 0]) -> 12", "(sum [4 9 6 3]) -> 22"]}
{"time": 0.185855, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [0 6 3]) -> 9", "(sum [2 0 3 4 6]) -> 15"]}
{"time": 0.177144, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4]) -> 4", "(sum [7 1 4 1 3]) -> 16", "(sum []) -> 0"]}
{"time": 0.167695, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 6 4 3]) -> 22", "(sum [0 6 2]) -> 8", "(sum [7]) -> 7"]}
{"time": 0.168235, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 6]) -> 6", "(sum [7]) -> 7", "(sum [6 2 0 6]) -> 14"]}
{"time": 0.155147, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 3]) -> 8", "(sum [8 4 9]) -> 21", "(sum [3]) -> 3"]}
{"time": 0.139295, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [3]) -> 3", "(sum [5 4 0]) -> 9", "(sum [2 2 9]) -> 13"]}
{"time": 0.13899, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 6 0 9 9]) -> 25", "(sum [5 2 8]) -> 15", "(sum []) -> 0"]}
{"time": 0.158571, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8]) -> 8", "(sum [1 5]) -> 6", "(sum []) -> 0"]}
{"time": 0.186079, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 6 5 4 8]) -> 27", "(sum [4 6 0]) -> 10", "(sum []) -> 0"]}
{"time": 0.175706, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 2 6]) -> 8", "(sum [5 1 6 9 2]) -> 23", "(sum []) -> 0"]}
{"time": 0.172812, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 2 5]) -> 12", "(sum [1 9 9 8]) -> 27", "(sum [9 2 6]) -> 17"]}
{"time": 0.191278, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [8 9 4]) -> 21", "(sum [3 4]) -> 7"]}
{"time": 0.195798, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 1]) -> 9", "(sum [6 3 3 5 9]) -> 26", "(sum [6 1]) -> 7"]}
{"time": 0.160424, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [6 5]) -> 11", "(sum []) -> 0"]}
{"time": 0.188227, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5]) -> 5", "(sum [3 6]) -> 9", "(sum [0 6 3 1]) -> 10"]}
{"time": 0.202423, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 6 7]) -> 17", "(sum [9 5 5 1]) -> 20", "(sum [9 2 7 1 2]) -> 21"]}
{"time": 0.162403, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 8]) -> 16", "(sum [2 5 4 4]) -> 15", "(sum []) -> 0"]}
{"time": 0.182306, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 6]) -> 8", "(sum []) -> 0", "(sum [8 0]) -> 8"]}
{"time": 0.197737, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 1 8]) -> 18", "(sum []) -> 0", "(sum [1 0 3]) -> 4"]}
{"time": 0.106804, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 8 4 8 9]) -> 33", "(sum []) -> 0", "(sum [1]) -> 1"]}
{"time": 0.167994, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 2 9 2]) -> 21", "(sum [3 6 1 9 7]) -> 26", "(sum [1 7 0 9]) -> 17"]}
{"time": 0.164059, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 0]) -> 4", "(sum []) -> 0", "(sum [6 9]) -> 15"]}
{"time": 0.140657, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 2 5 5 5]) -> 22", "(sum [7 6 2 2]) -> 17", "(sum [9 2 9 7 5]) -> 32"]}
{"time": 0.178521, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 0 0 9]) -> 9", "(sum [6 2 9 9]) -> 26", "(sum [6 0 9 9 5]) -> 29"]}
{"time": 0.139092, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 9 9]) -> 22", "(sum [1 5 6 1 1]) -> 14", "(sum [8 1 6 1]) -> 16"]}
{"time": 0.175049, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [3]) -> 3", "(sum [5 8 1 5 3]) -> 22", "(sum [8 9 0 9 9]) -> 35"]}
{"time": 0.176537, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 1 5]) -> 10", "(sum [7]) -> 7", "(sum [5]) -> 5"]}
{"time": 0.170521, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 6]) -> 14", "(sum [4]) -> 4", "(sum [2 0]) -> 2"]}
{"time": 0.173913, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6 3 4]) -> 13", "(sum []) -> 0", "(sum [9 6 3 4]) -> 22"]}
{"time": 0.171926, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 5 9 5]) -> 26", "(sum [4 1 4 3 9]) -> 21", "(sum [9 8 0 3 7]) -> 27"]}
{"time": 0.188084, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 0 4]) -> 12", "(sum [0 9]) -> 9", "(sum [4 9 1 3]) -> 17"]}
{"time": 0.176322, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [7 7 6 9]) -> 29", "(sum [2 0 2]) -> 4"]}
{"time": 0.145829, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 4]) -> 4", "(sum [9 5 7 1 2]) -> 24", "(sum [1]) -> 1"]}
{"time": 0.191764, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 0 8 8 5]) -> 28", "(sum [7]) -> 7", "(sum [5]) -> 5"]}
{"time": 0.165982, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [8 1 8]) -> 17", "(sum [4 6]) -> 10"]}
{"time": 0.023492, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum [8]) -> 8", "(sum [0 2]) -> 2"]}
{"time": 0.088391, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 8]) -> 17", "(sum [7 5 0 5]) -> 17", "(sum [7]) -> 7"]}
{"time": 0.087516, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 1 3 0]) -> 6", "(sum [4 8 4 4 0]) -> 20", "(sum [2]) -> 2"]}
{"time": 0.095423, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [9 6 5]) -> 20", "(sum []) -> 0"]}
