{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.643912, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 0 0 7] {[1]} {[6 5 5]}}) -> {16 {1} {16}}", "(sumnodes {[6 7 0]}) -> {13}", "(sumnodes {[7] {[1 8 1 7]} {[9]}}) -> {7 {17} {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.664174, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[4 5]}) -> {9}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.64702, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}", "(sumnodes {[0] {[1 9 9 6 2] {[7 0 0 5]}} {[6] {[6 9] {[8 0 7]}} {[2]}}}) -> {0 {27 {12}} {6 {15 {15}} {2}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.621662, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 2 2 1] {[8] {[]} {[0 1]}} {[]}}) -> {12 {8 {0} {1}} {0}}", "(sumnodes {[] {[] {[5 6 9]} {[8 1 1]}} {[2 2 5 3 1] {[9 6 0 7]} {[3]}}}) -> {0 {0 {20} {10}} {13 {22} {3}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.674207, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[4 8 6 5]}) -> {23}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.622818, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 7 0 2 3]}) -> {21}", "(sumnodes {[8 7 8 7 7] {[7 2 4]}}) -> {37 {13}}", "(sumnodes {[] {[8 7] {[1 1 6 3 4] {[3 5 7 9]}} {[1 4 8] {[1 9]}}}}) -> {0 {15 {15 {24}} {13 {10}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.661473, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0]}) -> {0}", "(sumnodes {[6 9] {[] {[4]} {[4 7 8 3 1]}}}) -> {15 {0 {4} {23}}}", "(sumnodes {[5 3 1 0] {[2 0 9] {[8 7 8 1 5]} {[6]}}}) -> {9 {11 {29} {6}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (car c)))) _) _)", "time": 0.019992, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2]}) -> {2}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.821214, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 4]}) -> {11}", "(sumnodes {}) -> {}", "(sumnodes {[6 5 4 5] {[]} {[]}}) -> {20 {0} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.853364, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[] {[6 5 9] {[6 9 6 0 2]} {[6 0 3]}}}) -> {0 {20 {23} {9}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.79276, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 0]}) -> {3}", "(sumnodes {[1 1 8 8 9] {[5] {[5 3 5 6 0]}} {[1 0] {[0]}}}) -> {27 {5 {19}} {1 {0}}}", "(sumnodes {[5 3]}) -> {8}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.854728, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 5 0 6] {[7] {[3 1 3] {[7 6 3 6]} {[6]}}} {[1 7 0 4] {[7 5] {[2 2]} {[8 6]}} {[] {[6 4 9]}}}}) -> {11 {7 {7 {22} {6}}} {12 {12 {4} {14}} {0 {19}}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.796314, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[4 8 5 7 6] {[]}}}) -> {0 {30 {0}}}", "(sumnodes {}) -> {}", "(sumnodes {[1 7 0 5] {[7 8 4]}}) -> {13 {19}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.786901, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9] {[1 9 5] {[0 2]} {[2]}} {[5] {[7 0 1 2]}}}) -> {9 {15 {2} {2}} {5 {10}}}", "(sumnodes {[6 6 0 3 8] {[7 5 8]} {[1 7]}}) -> {23 {20} {8}}", "(sumnodes {[4 3 2] {[9 2] {[8 4] {[]}} {[]}}}) -> {9 {11 {12 {0}} {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.792314, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[] {[4 5 0 3 1]}}) -> {0 {13}}", "(sumnodes {[6 3 6 9]}) -> {24}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.815918, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 2 8 8] {[7]}}) -> {26 {7}}", "(sumnodes {[7 5 2] {[] {[3 3 3 4]} {[6 1 0 4 0]}} {[2]}}) -> {14 {0 {13} {11}} {2}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.826071, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 2] {[0 9 4 1 5]} {[2] {[8 0 7 4 0]} {[2 2 4]}}}) -> {4 {19} {2 {19} {8}}}", "(sumnodes {[0 9 6] {[1 9 2]} {[1 1 3] {[]}}}) -> {15 {12} {5 {0}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.538768, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 2 7 4]}) -> {22}", "(sumnodes {[7]}) -> {7}", "(sumnodes {[7 0] {[8 3 0]} {[6 6]}}) -> {7 {11} {12}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.537043, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[1 0 0 6 9]}}) -> {0 {16}}", "(sumnodes {[0] {[0] {[3] {[]} {[7 0 3 9]}} {[3 6 7 4]}}}) -> {0 {0 {3 {0} {19}} {20}}}", "(sumnodes {[2 0 5] {[]}}) -> {7 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.523361, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[9 2 1 0 4] {[8 3 9 1 1]} {[1 7 6]}}) -> {16 {22} {14}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.630758, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[]}}) -> {0 {0}}", "(sumnodes {}) -> {}", "(sumnodes {[4 2 4] {[]} {[8 7]}}) -> {10 {0} {15}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.598604, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[]} {[2]}}) -> {0 {0} {2}}", "(sumnodes {}) -> {}", "(sumnodes {[1 7 8 8 8]}) -> {32}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.584666, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 6] {[3 8 8] {[] {[5 9 0 6 3]}} {[7 1 2 3 7] {[2 1 5 9]} {[7 0 0]}}}}) -> {13 {19 {0 {23}} {20 {17} {7}}}}", "(sumnodes {}) -> {}", "(sumnodes {[3 8 6 5 0] {[9 4] {[6 3 4 0 6]} {[3 8 3 5]}}}) -> {22 {13 {19} {19}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.605767, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 9 0 9] {[9 2]}}) -> {18 {11}}", "(sumnodes {[9 4 9 9]}) -> {31}", "(sumnodes {[1 1]}) -> {2}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.517719, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 5 6 1 9]}) -> {29}", "(sumnodes {[] {[]} {[2 4 6 9 8]}}) -> {0 {0} {29}}", "(sumnodes {[5 0] {[3 2 4 9]}}) -> {5 {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.510418, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 7 4 6] {[5 6]} {[4 3 6 0 2]}}) -> {24 {11} {15}}", "(sumnodes {[1 3 0]}) -> {4}", "(sumnodes {[5 6 7 9 5] {[3 0 8 1 7]}}) -> {32 {19}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.558185, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[9 9] {[8 4 2] {[2 2 8]}}} {[8 4 5] {[8 9 0]} {[0 7 1 5] {[6 8 1]}}}}) -> {0 {18 {14 {12}}} {17 {17} {13 {15}}}}", "(sumnodes {}) -> {}", "(sumnodes {[3 2 8]}) -> {13}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.52363, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7] {[6 0 2]} {[4 6 9 0 8]}}) -> {7 {8} {27}}", "(sumnodes {[8 0 4 6] {[4 5 0 2 8] {[]}} {[3] {[5 0 5] {[6 0 3 0]}} {[] {[5 0 4 1]}}}}) -> {18 {19 {0}} {3 {10 {9}} {0 {10}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.587001, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 7 8]}) -> {22}", "(sumnodes {[8 8 0 4 9] {[] {[]} {[2]}}}) -> {29 {0 {0} {2}}}", "(sumnodes {[0] {[4 4]} {[1 5 9]}}) -> {0 {8} {15}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.647268, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0 3 2 7] {[1 0 1]} {[]}}) -> {12 {2} {0}}", "(sumnodes {[4 8 1 1 4] {[9 7]}}) -> {18 {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000522, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.609296, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 3 0 9]}) -> {16}", "(sumnodes {[] {[8 1] {[4 1 2]} {[6 0]}} {[]}}) -> {0 {9 {7} {6}} {0}}", "(sumnodes {[6 3 3 4 1] {[3 8 8 7] {[]}} {[] {[]}}}) -> {17 {26 {0}} {0 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.615022, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[1] {[1 5 8]} {[7 5 8 4 9] {[3 9 0 2 6]} {[3 3 8 4 8]}}}) -> {1 {14} {33 {20} {26}}}", "(sumnodes {[7 4 5]}) -> {16}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.638499, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[8] {[3 2 9 4]} {[0 1 5 0] {[9] {[5 8 2]} {[5]}} {[5] {[6 0 5 2 2]}}}}) -> {8 {18} {6 {9 {15} {5}} {5 {15}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.485098, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 5 5 1] {[9 8 2] {[9 2 9]}}}) -> {16 {19 {20}}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[5 0 0 8]}) -> {13}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.432412, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8]}) -> {8}", "(sumnodes {[8 7] {[] {[9 3] {[5 0 6]}}} {[1 4 6 0] {[3 2 4 9]} {[1] {[0 8 1]} {[9]}}}}) -> {15 {0 {12 {11}}} {11 {18} {1 {9} {9}}}}", "(sumnodes {[7 3 1 2 6] {[3 0 9 3] {[0]} {[] {[2 4 2]}}} {[4 8 5] {[3 8 2] {[9 1]} {[4 4 1 7 0]}}}}) -> {19 {15 {0} {0 {8}}} {17 {13 {10} {16}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.419609, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[5]}) -> {5}", "(sumnodes {[4 2 1 8 8] {[4] {[9] {[7]} {[2 3]}}}}) -> {23 {4 {9 {7} {5}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.391636, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 4]}) -> {4}", "(sumnodes {}) -> {}", "(sumnodes {[5 4 8 0 2] {[]} {[7 8 9]}}) -> {19 {0} {24}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.725945, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 8 2 9 0] {[4 0 0 1]} {[2 3] {[1]} {[8 3]}}}) -> {23 {5} {5 {1} {11}}}", "(sumnodes {[1 6 1 2 7] {[] {[4 5]} {[]}} {[1 3 0] {[1 4]} {[5 4 0]}}}) -> {17 {0 {9} {0}} {4 {5} {9}}}", "(sumnodes {[7] {[0 6 1] {[4 5 4]}}}) -> {7 {7 {13}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.434026, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 6] {[]} {[9 6 3 1]}}) -> {8 {0} {19}}", "(sumnodes {[2 5 7]}) -> {14}", "(sumnodes {[0 1 6 6] {[1 8 4 0 4]} {[7 9]}}) -> {13 {17} {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.703054, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 9 8 0]}) -> {18}", "(sumnodes {[] {[7 3 6]} {[7 6 3]}}) -> {0 {16} {16}}", "(sumnodes {[6 3 5 3 1] {[8 3 3 2] {[3]} {[9 4 2 4 1]}} {[] {[8]} {[1]}}}) -> {18 {16 {3} {20}} {0 {8} {1}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.38636, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 9 8] {[9 2 5] {[8] {[6]} {[6 7]}}}}) -> {19 {16 {8 {6} {13}}}}", "(sumnodes {[3 4 2 6 7] {[6 7 8] {[9 7] {[6 4]} {[2 6]}}}}) -> {22 {21 {16 {10} {8}}}}", "(sumnodes {[4 2 8 6 8]}) -> {28}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ (car c) (car (cdr c)))))) _) _)", "time": 0.595527, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3 7]}) -> {10}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.760314, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[6 3 1 0 2] {[1 1 0]} {[6 6 1 0 9]}}) -> {12 {2} {22}}", "(sumnodes {[9 5 1 7]}) -> {22}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.76467, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[7 4] {[5 6 1]} {[3 8 1 8 1]}}) -> {11 {12} {21}}", "(sumnodes {[2 8 1 9] {[9 5 9 8 9] {[4 8]} {[1 1] {[8]}}} {[8 7 1 5] {[0 9] {[3 4 4 8 8]} {[0 7 4]}}}}) -> {20 {40 {12} {2 {8}}} {21 {9 {27} {11}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.770353, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3]}) -> {3}", "(sumnodes {[5 2 3]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.404247, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[2]}) -> {2}", "(sumnodes {[9 4 5] {[0]}}) -> {18 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.7863, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 8 5 3] {[] {[0 0 1] {[7 9 8 4]} {[]}}}}) -> {17 {0 {1 {28} {0}}}}", "(sumnodes {}) -> {}", "(sumnodes {[5 8 9 6 6] {[6 6 2 3]}}) -> {34 {17}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.888033, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4] {[9 0 3] {[]} {[]}} {[1 9]}}) -> {4 {12 {0} {0}} {10}}", "(sumnodes {[4 5 8 6] {[9 0] {[8]} {[4]}} {[]}}) -> {23 {9 {8} {4}} {0}}", "(sumnodes {[6 8]}) -> {14}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.364824, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 1] {[7]}}) -> {7 {7}}", "(sumnodes {[] {[5 5]} {[6 0 9 5]}}) -> {0 {10} {20}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.786691, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 3 8 4 4]}) -> {22}", "(sumnodes {[] {[6 3 2]} {[7 2 1 3]}}) -> {0 {11} {13}}", "(sumnodes {[5]}) -> {5}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.834564, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[7]} {[6 0 2 0 8]}}) -> {0 {7} {16}}", "(sumnodes {[5 9 2] {[0 8] {[5]}} {[7 2 6 2]}}) -> {16 {8 {5}} {17}}", "(sumnodes {[7 5] {[4 8 0] {[5 0 8 9 9]}} {[5 4]}}) -> {12 {12 {31}} {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.33244, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 4 8]}) -> {16}", "(sumnodes {[]}) -> {0}", "(sumnodes {[4]}) -> {4}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.346919, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[6 9 4 1 0] {[1] {[3 2 7] {[9]} {[]}}} {[]}}) -> {20 {1 {12 {9} {0}}} {0}}", "(sumnodes {[0 2 2 7] {[1 6 3 8 8] {[2 3]} {[6 5 1 9]}}}) -> {11 {26 {5} {21}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.573995, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 6] {[6 6 0] {[]}} {[8 0 3 8]}}) -> {11 {12 {0}} {19}}", "(sumnodes {[6 0 8] {[2 9 3 2 6] {[3] {[6 2 2]}}}}) -> {14 {22 {3 {10}}}}", "(sumnodes {[6 9 1] {[5 7 3]} {[2 4 2 6 5]}}) -> {16 {15} {19}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.347487, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9] {[6] {[]}}}) -> {9 {6 {0}}}", "(sumnodes {[5 9 7] {[] {[7 8 4 8]} {[3 0 7 7] {[5 2]}}}}) -> {21 {0 {27} {17 {7}}}}", "(sumnodes {[2 9 0] {[9 7 5] {[8 9 7 4]} {[1 1 7 6]}}}) -> {11 {21 {28} {15}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.341513, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 1]}) -> {3}", "(sumnodes {}) -> {}", "(sumnodes {[8 1 7 0 9] {[9 2]}}) -> {25 {11}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.345508, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[7 1 6] {[]}}) -> {14 {0}}", "(sumnodes {[1 4 1 5 7] {[0 1 0]}}) -> {18 {1}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.702838, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3 3 9 8 4]}) -> {27}", "(sumnodes {[9] {[]}}) -> {9 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.340169, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 1 7 6] {[8 1 0 4] {[3]} {[4 8]}}}) -> {17 {13 {3} {12}}}", "(sumnodes {[1 4] {[1 5]}}) -> {5 {6}}", "(sumnodes {[9 9 4 4 1]}) -> {27}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.635054, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 2 8 7 7] {[6 6]}}) -> {25 {12}}", "(sumnodes {[9 4 9 6 1]}) -> {29}", "(sumnodes {[0 5 9 2 3] {[7 5 3 4] {[6 8] {[1 5 6 7]}} {[7 3 0 3 5]}} {[7 3 7]}}) -> {19 {19 {14 {19}} {18}} {17}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.657195, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[3 3 7] {[5] {[1 4]}} {[5 4 8 7 0] {[7 8 7 0]}}}}) -> {0 {13 {5 {5}} {24 {22}}}}", "(sumnodes {}) -> {}", "(sumnodes {[9 6] {[1 9 9 1]} {[0 4 0]}}) -> {15 {20} {4}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.689647, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 4 1 3 8] {[8] {[2 3 0 7]}}}) -> {17 {8 {12}}}", "(sumnodes {[0 5 6 5]}) -> {16}", "(sumnodes {[5 9 4 9] {[1]}}) -> {27 {1}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.721022, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 7 0] {[9 4 8] {[3 0] {[]}} {[5] {[3 5 0]}}} {[7 3 3 6] {[8 4 9 5] {[5 8 2 8 4]}}}}) -> {13 {21 {3 {0}} {5 {8}}} {19 {26 {27}}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.325363, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 3 8 8 8] {[]}}) -> {34 {0}}", "(sumnodes {[9 8 5 1] {[0 9 6 3]} {[1 3]}}) -> {23 {18} {4}}", "(sumnodes {[4 0] {[7 1 8 3 6] {[6] {[1 6 9]}} {[4]}}}) -> {4 {25 {6 {16}} {4}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.296165, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 5] {[4] {[0]}} {[1 5 6] {[5 1 8 1 2]}}}) -> {13 {4 {0}} {12 {17}}}", "(sumnodes {[0] {[1 2]}}) -> {0 {3}}", "(sumnodes {[7 4] {[2 2 2] {[5 5 1]} {[9 3 8]}} {[7 5 1 0 3] {[5 3 8 4 8]}}}) -> {11 {6 {11} {20}} {16 {28}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.604328, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[1 0] {[]} {[5 0 0 0 8]}}) -> {1 {0} {13}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.609194, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 2 9 6] {[1 8 3 4]} {[]}}) -> {26 {16} {0}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[8]}) -> {8}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.407755, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 0] {[8 7 3 9 8]}}) -> {2 {35}}", "(sumnodes {[3]}) -> {3}", "(sumnodes {[4] {[0 1 2]}}) -> {4 {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.494297, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[9 5 8] {[]}}) -> {22 {0}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.323036, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 9 5 2 7]}) -> {26}", "(sumnodes {[3 5 7 3] {[7 5 8 4] {[7]} {[5 2 4 4]}}}) -> {18 {24 {7} {15}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.367115, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[6 5 6]}) -> {17}", "(sumnodes {[1 0 0 0 3] {[4 0 1 0]}}) -> {4 {5}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.405415, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9]}) -> {9}", "(sumnodes {[7 3 9]}) -> {19}", "(sumnodes {[3 6 3 1 4] {[3 3 4 6 5]} {[2]}}) -> {17 {21} {2}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.37887, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 2 1 1] {[4 3 9 1]}}) -> {4 {17}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[6 3] {[5 6 4 9 1] {[6 5 8 5] {[5 1]}}} {[9 3 7 3] {[] {[4 2]} {[7 3]}}}}) -> {9 {25 {24 {6}}} {22 {0 {6} {10}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.400108, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 1] {[4 2]} {[4 4]}}) -> {10 {6} {8}}", "(sumnodes {[5 7]}) -> {12}", "(sumnodes {[3 8 2] {[7] {[1 8 0]}} {[] {[7 8 6] {[0 4 7 8]} {[]}}}}) -> {13 {7 {9}} {0 {21 {19} {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.42765, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 7 0] {[8 1 0] {[5 0 0]}}}) -> {16 {9 {5}}}", "(sumnodes {[] {[8 5] {[1 0 6 5]}}}) -> {0 {13 {12}}}", "(sumnodes {[7 0 2 0 7]}) -> {16}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.430226, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 0 2 0 3] {[2 5]}}) -> {11 {7}}", "(sumnodes {[0] {[]} {[6 2 5 2]}}) -> {0 {0} {15}}", "(sumnodes {[] {[8 4 8] {[2 0 9]} {[7 4 6]}}}) -> {0 {20 {11} {17}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.337839, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 6 8] {[8 2 6]}}) -> {17 {16}}", "(sumnodes {[8 4 2]}) -> {14}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.491456, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 4] {[1 2 4 9 8]} {[8 4 1 2 3] {[1 4 2]} {[8 8] {[7 5 9 2]} {[2 7]}}}}) -> {13 {24} {18 {7} {16 {23} {9}}}}", "(sumnodes {[5] {[]}}) -> {5 {0}}", "(sumnodes {[] {[4]} {[3 7 6 3 3]}}) -> {0 {4} {22}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ 1 (+ 1 1))))) _) _)", "time": 0.096321, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[1 1 1]}) -> {3}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.470548, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[8 6 2 7] {[8 9 5] {[8 4 6]} {[]}}}) -> {23 {22 {18} {0}}}", "(sumnodes {[8 7 7]}) -> {22}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.465116, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3 5 6 6] {[8 6 4 1 2] {[5 0] {[]} {[7 8]}}}}) -> {20 {21 {5 {0} {15}}}}", "(sumnodes {[6 7 8 5] {[2 1 1 8]} {[2 2 6 7 2] {[9] {[3 1]} {[1 6]}} {[8 1 9 9]}}}) -> {26 {12} {19 {9 {4} {7}} {27}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.505987, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 2 6] {[4 6 7 0]} {[7 2 4 6] {[0 7 9]} {[0 4 7 6]}}}) -> {13 {17} {19 {16} {17}}}", "(sumnodes {[3 0 0] {[3 0 0]} {[5]}}) -> {3 {3} {5}}", "(sumnodes {[9 7] {[1 2 2 9 2]} {[] {[7 5 0] {[]} {[3 9 4]}} {[2 6] {[5 4 4 9 9]} {[4 6 5 1]}}}}) -> {16 {16} {0 {12 {0} {16}} {8 {31} {16}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.329607, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1] {[7 6 6 9 8]} {[]}}) -> {1 {36} {0}}", "(sumnodes {[6 2 0 4] {[2 5]}}) -> {12 {7}}", "(sumnodes {[7 0 3] {[4 9 0 0 0]}}) -> {10 {13}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.337479, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[8 5 6]}}) -> {0 {19}}", "(sumnodes {[9 2 5] {[8 0 9]} {[6 9 2]}}) -> {16 {17} {17}}", "(sumnodes {[2 7 9 5]}) -> {23}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.326417, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[9 1 9]} {[9 5 1 1 0] {[]}}}) -> {0 {19} {16 {0}}}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.344957, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 4 4] {[6 3 4 8 0] {[2 3]}} {[9 9] {[7 3 8]} {[9 9 0 8]}}}) -> {11 {21 {5}} {18 {18} {26}}}", "(sumnodes {[3] {[]} {[2 5 7 8 6]}}) -> {3 {0} {28}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.395127, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[4 1] {[6] {[2 0] {[9 6]} {[1 3 5]}}}}) -> {5 {6 {2 {15} {9}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.459999, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 2 0]}) -> {6}", "(sumnodes {[1 0 8 5] {[] {[8] {[]}}} {[8 2] {[4]} {[9 8] {[6]}}}}) -> {14 {0 {8 {0}}} {10 {4} {17 {6}}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.458403, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 9] {[1 7 0 9 2]}}) -> {15 {19}}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.470132, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 3 3 9 2] {[0 7 6] {[4 9]} {[7 2 3 6 7]}} {[8]}}) -> {22 {13 {13} {25}} {8}}", "(sumnodes {[4 7 8]}) -> {19}", "(sumnodes {[8 6 1] {[9 2 8 2 9] {[2 4] {[2 0 3]} {[5 9 6]}} {[2 2] {[8 6 9 1]}}}}) -> {15 {30 {6 {5} {20}} {4 {24}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.366222, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[7 7]} {[2 4 0]}}) -> {0 {14} {6}}", "(sumnodes {[7]}) -> {7}", "(sumnodes {[8 4 5 5 1] {[]}}) -> {23 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.41833, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 1 0 4 2]}) -> {12}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.298706, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 9 8 7] {[0 9 2 0] {[2 2]}}}) -> {26 {11 {4}}}", "(sumnodes {[] {[5 6 3 5] {[9 2 0] {[4 2]} {[6 2 0 1 9]}}} {[1 7 5] {[2 1]} {[] {[3]} {[5]}}}}) -> {0 {19 {11 {6} {18}}} {13 {3} {0 {3} {5}}}}", "(sumnodes {[0 6 4] {[7]} {[6]}}) -> {10 {7} {6}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.271063, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[7 2]}}) -> {0 {9}}", "(sumnodes {[0 7] {[0]} {[] {[0 9 7]}}}) -> {7 {0} {0 {16}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.198336, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8]}) -> {8}", "(sumnodes {[9 2 3]}) -> {14}", "(sumnodes {[1 2] {[1 7] {[0 6 4]} {[7 0]}}}) -> {3 {8 {10} {7}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.234321, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 1 9 8] {[2]} {[3 8] {[3]} {[]}}}) -> {26 {2} {11 {3} {0}}}", "(sumnodes {[7 2 8]}) -> {17}", "(sumnodes {[0 5]}) -> {5}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.376043, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 6 4] {[7 1 6 6 8] {[9]} {[4 5 2 7 0]}} {[0 8 0] {[0 7 8 4 9]}}}) -> {13 {28 {9} {18}} {8 {28}}}", "(sumnodes {[4 0] {[] {[2 7 8]}} {[9 9] {[]} {[8 1 7]}}}) -> {4 {0 {17}} {18 {0} {16}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.632069, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 2 0 9 3]}) -> {23}", "(sumnodes {}) -> {}", "(sumnodes {[7 8 3 0] {[5 4 7]}}) -> {18 {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ (car c) (car (cdr c)))))) _) _)", "time": 0.535659, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 2] {[4 3]}}) -> {8 {7}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
