{"examples": ["(add [] 3) -> []", "(add [6 9 4 0] 0) -> [6 9 4 0]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000439}
{"examples": ["(add [] 4) -> []", "(add [] 4) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000513}
{"examples": ["(add [] 2) -> []", "(add [] 3) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000491}
{"examples": ["(add [] 3) -> []", "(add [6 5 1 6 1] 0) -> [6 5 1 6 1]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000375}
{"examples": ["(add [] 4) -> []", "(add [0 1] 2) -> [2 3]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.045618}
{"examples": ["(add [] 5) -> []", "(add [7] 4) -> [11]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.039953}
{"examples": ["(add [] 6) -> []", "(add [1 7 1 2] 1) -> [2 8 2 3]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.051904}
{"examples": ["(add [] 9) -> []", "(add [0 2] 8) -> [8 10]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.03692}
{"examples": ["(add [] 4) -> []", "(add [5 0] 5) -> [10 5]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.054689}
{"examples": ["(add [] 2) -> []", "(add [7] 5) -> [12]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.038571}
{"examples": ["(add [] 0) -> []", "(add [4 2 9 7 2] 3) -> [7 5 12 10 5]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.06235}
{"examples": ["(add [] 3) -> []", "(add [9 6 3 6] 9) -> [18 15 12 15]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.037679}
{"examples": ["(add [] 7) -> []", "(add [8] 3) -> [11]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.035661}
{"examples": ["(add [] 7) -> []", "(add [5 2 1] 8) -> [13 10 9]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.059478}
{"examples": ["(add [] 0) -> []", "(add [2 1] 9) -> [11 10]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.061187}
{"examples": ["(add [] 8) -> []", "(add [7 3 6 4 0] 3) -> [10 6 9 7 3]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.055987}
{"examples": ["(add [] 6) -> []", "(add [2] 0) -> [2]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000422}
{"examples": ["(add [] 9) -> []", "(add [5 9 0 2] 3) -> [8 12 3 5]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.04196}
{"examples": ["(add [] 6) -> []", "(add [2 4 5] 1) -> [3 5 6]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.035715}
{"examples": ["(add [] 8) -> []", "(add [] 5) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000476}
{"examples": ["(add [] 4) -> []", "(add [2] 8) -> [10]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.035951}
{"examples": ["(add [] 4) -> []", "(add [0] 0) -> [0]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000429}
{"examples": ["(add [] 1) -> []", "(add [] 8) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000615}
{"examples": ["(add [] 3) -> []", "(add [6 5 2] 3) -> [9 8 5]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.05316}
{"examples": ["(add [] 4) -> []", "(add [7 2] 7) -> [14 9]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.061108}
{"examples": ["(add [] 5) -> []", "(add [] 3) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000401}
{"examples": ["(add [] 7) -> []", "(add [] 6) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000526}
{"examples": ["(add [] 3) -> []", "(add [1] 4) -> [5]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b 1)))) _) _)", "name": "add", "time": 0.039178}
{"examples": ["(add [] 8) -> []", "(add [0 9 9 4 7] 3) -> [3 12 12 7 10]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.044487}
{"examples": ["(add [] 7) -> []", "(add [9 9] 8) -> [17 17]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.043714}
{"examples": ["(add [] 3) -> []", "(add [3 7] 8) -> [11 15]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.060565}
{"examples": ["(add [] 3) -> []", "(add [1 4] 5) -> [6 9]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.044918}
{"examples": ["(add [] 7) -> []", "(add [4 8] 0) -> [4 8]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000417}
{"examples": ["(add [] 8) -> []", "(add [] 0) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000445}
{"examples": ["(add [] 0) -> []", "(add [] 9) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.0006}
{"examples": ["(add [] 9) -> []", "(add [4 6 7 5] 0) -> [4 6 7 5]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000622}
{"examples": ["(add [] 6) -> []", "(add [4] 8) -> [12]"], "solution": "(let add (let a (lambda (c b) (map c (lambda (d) (+ b d)))) _) _)", "name": "add", "time": 0.051872}
{"examples": ["(add [] 3) -> []", "(add [8 6 1] 0) -> [8 6 1]"], "solution": "(let add (let a (lambda (c b) c) _) _)", "name": "add", "time": 0.000599}
{"examples": ["(add [] 6) -> []", "(add [] 3) -> []"], "solution": "(let add (let a (lambda (c b) []) _) _)", "name": "add", "time": 0.000424}
