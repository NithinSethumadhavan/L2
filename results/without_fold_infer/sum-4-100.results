{"time": 0.00049, "name": "sum", "solution": "(let sum (let a (lambda (b) 0) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum []) -> 0"]}
{"time": 0.028345, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (car b)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 0]) -> 7", "(sum [2]) -> 2"]}
{"time": 0.025391, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0]) -> 0", "(sum [3]) -> 3"]}
{"time": 0.192631, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 0 2 6]) -> 9", "(sum [1 4 7 8 5]) -> 25"]}
{"time": 0.130643, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 2 1]) -> 8", "(sum [7 4 3 3 4]) -> 21"]}
{"time": 0.221858, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 8 8 3 2]) -> 26", "(sum [5 3 6 7 7]) -> 28"]}
{"time": 0.171571, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8]) -> 8", "(sum [1 8]) -> 9"]}
{"time": 0.212, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 2]) -> 3", "(sum [6 9]) -> 15"]}
{"time": 0.201162, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 5 0]) -> 6", "(sum [2]) -> 2"]}
{"time": 0.202706, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 4 4 0]) -> 15", "(sum []) -> 0"]}
{"time": 0.16169, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 3]) -> 4", "(sum [2 7 6]) -> 15"]}
{"time": 0.205105, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 9 3 4]) -> 20", "(sum [7 6 2]) -> 15"]}
{"time": 0.201313, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 0]) -> 0", "(sum [5 7 5]) -> 17"]}
{"time": 0.137519, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 0 3 6 5]) -> 15", "(sum [0]) -> 0"]}
{"time": 0.160285, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 2]) -> 10", "(sum [4 2 3 6]) -> 15"]}
{"time": 0.198071, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 1 9 8 9]) -> 35", "(sum []) -> 0"]}
{"time": 0.136331, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 6 4 0]) -> 19", "(sum [6 1]) -> 7"]}
{"time": 0.000319, "name": "sum", "solution": "(let sum (let a (lambda (b) 0) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum []) -> 0"]}
{"time": 0.123823, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ 1 c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 0 9]) -> 10", "(sum []) -> 0"]}
{"time": 0.125877, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 7 1]) -> 12", "(sum [1 6]) -> 7"]}
{"time": 0.03471, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [3]) -> 3"]}
{"time": 0.134812, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1]) -> 1", "(sum [5 5 0]) -> 10"]}
{"time": 0.161573, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 0 1 5 3]) -> 18", "(sum [2 3 1]) -> 6"]}
{"time": 0.149079, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0]) -> 0", "(sum [5 5]) -> 10"]}
{"time": 0.155408, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 9]) -> 17", "(sum []) -> 0"]}
{"time": 0.141363, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 2 9 4 1]) -> 16", "(sum [6 5 5 2 1]) -> 19"]}
{"time": 0.173106, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6 0]) -> 6", "(sum [9 6 0]) -> 15"]}
{"time": 0.159908, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 5 3]) -> 16", "(sum [0]) -> 0"]}
{"time": 0.17577, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 9 3]) -> 13", "(sum [3 7 6 2 6]) -> 24"]}
{"time": 0.176174, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [1 4 8]) -> 13"]}
{"time": 0.16865, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [6 1 8]) -> 15", "(sum [9 7]) -> 16"]}
{"time": 0.151752, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8]) -> 8", "(sum [4 2 8 6 7]) -> 27"]}
{"time": 0.166764, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum [0 1 4 8 0]) -> 13"]}
{"time": 0.165538, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 7 7 5]) -> 24", "(sum [2 5 8 4]) -> 19"]}
{"time": 0.156565, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 2 6 6 3]) -> 21", "(sum []) -> 0"]}
{"time": 0.031757, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [5]) -> 5"]}
{"time": 0.152466, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 0 5 0]) -> 14", "(sum [0 6 9 0 3]) -> 18"]}
{"time": 0.147201, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 7 9 3]) -> 27", "(sum [1]) -> 1"]}
{"time": 0.159425, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [2 1 8]) -> 11"]}
{"time": 0.191847, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 4]) -> 11", "(sum [5 5]) -> 10"]}
{"time": 0.170252, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 9 7]) -> 20", "(sum [7]) -> 7"]}
{"time": 0.038726, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2]) -> 2", "(sum []) -> 0"]}
{"time": 0.131809, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 6 1]) -> 7", "(sum []) -> 0"]}
{"time": 0.176274, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5]) -> 5", "(sum [2 1 6 0]) -> 9"]}
{"time": 0.17775, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 8 6 3 9]) -> 35", "(sum [0 8 3]) -> 11"]}
{"time": 0.141772, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [6 4 9 5]) -> 24"]}
{"time": 0.171672, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [4 3 1 2 9]) -> 19", "(sum [8]) -> 8"]}
{"time": 0.180872, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [6 6 3 1]) -> 16"]}
{"time": 0.186614, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 5 4]) -> 16", "(sum [3 6 7 8 3]) -> 27"]}
{"time": 0.149607, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 2]) -> 4", "(sum []) -> 0"]}
{"time": 0.139191, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0]) -> 0", "(sum [2 3 7]) -> 12"]}
{"time": 0.157727, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 0 7]) -> 9", "(sum [1 8]) -> 9"]}
{"time": 0.163772, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [9 7 3]) -> 19"]}
{"time": 0.000459, "name": "sum", "solution": "(let sum (let a (lambda (b) 0) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum []) -> 0"]}
{"time": 0.144674, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 8 1]) -> 17", "(sum [6 1 8 2]) -> 17"]}
{"time": 0.031748, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum [1]) -> 1"]}
{"time": 0.035531, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (car b)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum [1 0]) -> 1"]}
{"time": 0.126371, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [1 2 0]) -> 3", "(sum []) -> 0"]}
{"time": 0.151062, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2]) -> 2", "(sum [7 7 5 7 5]) -> 31"]}
{"time": 0.119034, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [2 3]) -> 5", "(sum [9 3]) -> 12"]}
{"time": 0.110802, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 8 4 4 9]) -> 32", "(sum [6]) -> 6"]}
{"time": 0.152542, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [8 5 7]) -> 20"]}
{"time": 0.000325, "name": "sum", "solution": "(let sum (let a (lambda (b) 0) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum []) -> 0"]}
{"time": 0.161164, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [0 3 1 2 2]) -> 8", "(sum []) -> 0"]}
{"time": 0.145936, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 6 6]) -> 19", "(sum [7 2 8 2 9]) -> 28"]}
{"time": 0.150553, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9 5 7]) -> 21", "(sum [4 9 0]) -> 13"]}
{"time": 0.164665, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [7 8 6]) -> 21", "(sum [9 3 2 3]) -> 17"]}
{"time": 0.166998, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [1 7 5 7]) -> 20"]}
{"time": 0.144557, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [7 0 6 5 1]) -> 19"]}
{"time": 0.148627, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [5 5 3]) -> 13", "(sum []) -> 0"]}
{"time": 0.145469, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [8 8 0]) -> 16", "(sum []) -> 0"]}
{"time": 0.023278, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum []) -> 0"]}
{"time": 0.131002, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [4 5 9 5 5]) -> 28"]}
{"time": 0.136581, "name": "sum", "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [0 4 4 5]) -> 13"]}
