{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 52.37423, "examples": ["(evens []) -> []", "(evens [2 1]) -> [2]", "(evens [6 9 3 6]) -> [6 6]", "(evens [8 9 2 1 5]) -> [8 2]", "(evens [3 1 3 5]) -> []", "(evens [2]) -> [2]", "(evens [0 9 0 8 1]) -> [0 0 8]", "(evens [6 3 7 3 6]) -> [6 6]", "(evens [5 8 7]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 58.484905, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [3 3 1]) -> []", "(evens [2 3]) -> [2]", "(evens [3]) -> []", "(evens [4]) -> [4]", "(evens []) -> []", "(evens []) -> []", "(evens [6 7]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 61.09473, "examples": ["(evens []) -> []", "(evens [1 0 3 0]) -> [0 0]", "(evens [3]) -> []", "(evens [2 4]) -> [2 4]", "(evens [6 7 7 2]) -> [6 2]", "(evens [1 6 1]) -> [6]", "(evens [5]) -> []", "(evens [2 4 2]) -> [2 4 2]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 62.548018, "examples": ["(evens []) -> []", "(evens [7 0]) -> [0]", "(evens []) -> []", "(evens [1 2]) -> [2]", "(evens [9 4]) -> [4]", "(evens [9 1 2]) -> [2]", "(evens [7 2 8 7 9]) -> [2 8]", "(evens [9 7 2 5]) -> [2]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 63.370338, "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [7 9 3]) -> []", "(evens [3]) -> []", "(evens [9 1 0]) -> [0]", "(evens [0]) -> [0]", "(evens [2 7 4 1]) -> [2 4]", "(evens [2 5]) -> [2]", "(evens [1 4 0 2 7]) -> [4 0 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 65.959129, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [3 6 6]) -> [6 6]", "(evens []) -> []", "(evens [6]) -> [6]", "(evens [6 0 7 2 8]) -> [6 0 2 8]", "(evens [9 8 6 0 0]) -> [8 6 0 0]", "(evens [2 6 5]) -> [2 6]", "(evens [2 3 5]) -> [2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.63707, "examples": ["(evens []) -> []", "(evens [9 6 3 1 7]) -> [6]", "(evens [4 8]) -> [4 8]", "(evens [3]) -> []", "(evens [3 6 2]) -> [6 2]", "(evens [5 6 0 7 8]) -> [6 0 8]", "(evens [8 7 9 7 2]) -> [8 2]", "(evens []) -> []", "(evens [7 6 3 0]) -> [6 0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.37423, "examples": ["(evens []) -> []", "(evens [8]) -> [8]", "(evens [6]) -> [6]", "(evens []) -> []", "(evens []) -> []", "(evens [4 6 8]) -> [4 6 8]", "(evens [5 3 9]) -> []", "(evens [7 1 8]) -> [8]", "(evens [7 6 1]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.665272, "examples": ["(evens []) -> []", "(evens [8 4 2 0 9]) -> [8 4 2 0]", "(evens [2 6]) -> [2 6]", "(evens [3 9 1 7]) -> []", "(evens [9 0 0]) -> [0 0]", "(evens [9 2]) -> [2]", "(evens []) -> []", "(evens [4 8 0 7]) -> [4 8 0]", "(evens [3 0 5 2 5]) -> [0 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 69.346642, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [7 2]) -> [2]", "(evens [2 5 0 8 3]) -> [2 0 8]", "(evens [2 1 4 0 5]) -> [2 4 0]", "(evens [9 6 3 7 3]) -> [6]", "(evens [5 8 4 3 2]) -> [8 4 2]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= c (car b))))) _) _)", "time": 0.363863, "examples": ["(evens []) -> []", "(evens [4 9 1 1]) -> [4]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [4 5 5]) -> [4]", "(evens [8]) -> [8]", "(evens [0 3 5 5 0]) -> [0 0]", "(evens [0]) -> [0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 70.414961, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [1]) -> []", "(evens [7 0]) -> [0]", "(evens [0 1 7 1]) -> [0]", "(evens [7]) -> []", "(evens [5 3 5 4]) -> [4]", "(evens [3]) -> []", "(evens [5 3 6 7 4]) -> [6 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 71.201956, "examples": ["(evens []) -> []", "(evens [6 2 9 8]) -> [6 2 8]", "(evens [7 8 7 0]) -> [8 0]", "(evens [2 5 0 5]) -> [2 0]", "(evens [1 8 7 8 2]) -> [8 8 2]", "(evens [4 6 5 2 0]) -> [4 6 2 0]", "(evens []) -> []", "(evens [9 2]) -> [2]", "(evens [4 4 2]) -> [4 4 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 73.359735, "examples": ["(evens []) -> []", "(evens [7 1 7 1]) -> []", "(evens [7]) -> []", "(evens []) -> []", "(evens [0 8]) -> [0 8]", "(evens [4 5 9 3]) -> [4]", "(evens [4 8]) -> [4 8]", "(evens []) -> []", "(evens [7 5 8]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 74.209673, "examples": ["(evens []) -> []", "(evens [8 6 4 9]) -> [8 6 4]", "(evens [5]) -> []", "(evens [0]) -> [0]", "(evens [3 9 0]) -> [0]", "(evens [2 9 7 0]) -> [2 0]", "(evens [9 1 0 0 4]) -> [0 0 4]", "(evens [4 5 4]) -> [4 4]", "(evens [4]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 74.425739, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [9 9 2 7 4]) -> [2 4]", "(evens [8 5 5 6 7]) -> [8 6]", "(evens [5 8]) -> [8]", "(evens [3]) -> []", "(evens [0 3 7 9]) -> [0]", "(evens [8 1 9 5 2]) -> [8 2]", "(evens [4]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (foldl b (lambda (d c) (filter b (lambda (e) (< (car b) c)))) [])) _) _)", "time": 3.715902, "examples": ["(evens []) -> []", "(evens [4 6 6]) -> [4 6 6]", "(evens []) -> []", "(evens [3]) -> []", "(evens [1]) -> []", "(evens [0 2]) -> [0 2]", "(evens []) -> []", "(evens [7 1]) -> []", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 80.257353, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [5 2 5 3 2]) -> [2 2]", "(evens [0]) -> [0]", "(evens [6 8 6]) -> [6 8 6]", "(evens [8]) -> [8]", "(evens [7 8 8]) -> [8 8]", "(evens [0]) -> [0]", "(evens [3 0 7]) -> [0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 57.081178, "examples": ["(evens []) -> []", "(evens [1 0]) -> [0]", "(evens []) -> []", "(evens [4 6]) -> [4 6]", "(evens [3 5 8 5]) -> [8]", "(evens [5 8 4 4 8]) -> [8 4 4 8]", "(evens [3 0 3]) -> [0]", "(evens [4]) -> [4]", "(evens [0]) -> [0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 57.619045, "examples": ["(evens []) -> []", "(evens [2 6]) -> [2 6]", "(evens [7]) -> []", "(evens [7 5 8]) -> [8]", "(evens [6 1 1 7 8]) -> [6 8]", "(evens [5]) -> []", "(evens [4 2 3]) -> [4 2]", "(evens []) -> []", "(evens [3 3 3 7 5]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 54.104928, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [1 6]) -> [6]", "(evens [0 3]) -> [0]", "(evens [5]) -> []", "(evens [4 3 0 2]) -> [4 0 2]", "(evens [9 7 1 9 0]) -> [0]", "(evens [8 6 5 4]) -> [8 6 4]", "(evens [2]) -> [2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 53.399479, "examples": ["(evens []) -> []", "(evens [1 4 6]) -> [4 6]", "(evens [0 7 4]) -> [0 4]", "(evens [4 1 9 1]) -> [4]", "(evens [5 3]) -> []", "(evens [3]) -> []", "(evens [1 2 3]) -> [2]", "(evens [7 7 0]) -> [0]", "(evens [4 9 9 8]) -> [4 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 59.584404, "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [5 6 1 6]) -> [6 6]", "(evens [6 3 0]) -> [6 0]", "(evens [6 3 3]) -> [6]", "(evens [8 1 3 6]) -> [8 6]", "(evens [4 7]) -> [4]", "(evens [9 7 7 7]) -> []", "(evens [6 3]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 54.811528, "examples": ["(evens []) -> []", "(evens [1 4]) -> [4]", "(evens [6]) -> [6]", "(evens [6 6 9 2 3]) -> [6 6 2]", "(evens [8 1 7 0]) -> [8 0]", "(evens [2 4]) -> [2 4]", "(evens [4 6 4]) -> [4 6 4]", "(evens [5 8 8 1]) -> [8 8]", "(evens [7 7]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 69.078324, "examples": ["(evens []) -> []", "(evens [6 0]) -> [6 0]", "(evens [4 7 5]) -> [4]", "(evens [0 2 2 1 3]) -> [0 2 2]", "(evens [4 4 3 8 1]) -> [4 4 8]", "(evens [8 8 8 1 5]) -> [8 8 8]", "(evens []) -> []", "(evens [9 0]) -> [0]", "(evens [4 8 5 9]) -> [4 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 61.814119, "examples": ["(evens []) -> []", "(evens [3 0]) -> [0]", "(evens [3 5 3]) -> []", "(evens [3 9 7 8 1]) -> [8]", "(evens [7]) -> []", "(evens [8]) -> [8]", "(evens [2 3 6 7]) -> [2 6]", "(evens [2]) -> [2]", "(evens [4 2 1]) -> [4 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.588599, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [1]) -> []", "(evens [4 2]) -> [4 2]", "(evens [9 9 3 8 5]) -> [8]", "(evens [4]) -> [4]", "(evens [6 9]) -> [6]", "(evens [3 8]) -> [8]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 69.542446, "examples": ["(evens []) -> []", "(evens [5 2]) -> [2]", "(evens [3 7]) -> []", "(evens [8 3 4 8]) -> [8 4 8]", "(evens [8 4 4 3]) -> [8 4 4]", "(evens [0 7 8 2 2]) -> [0 8 2 2]", "(evens [3 2]) -> [2]", "(evens [7 4]) -> [4]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 70.508413, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [3 5 9 8 1]) -> [8]", "(evens [9 4 5 6]) -> [4 6]", "(evens [3 6]) -> [6]", "(evens [3 8 2]) -> [8 2]", "(evens [7]) -> []", "(evens []) -> []", "(evens [8 7 1 1 6]) -> [8 6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 64.622344, "examples": ["(evens []) -> []", "(evens [9 1 3]) -> []", "(evens [8 5 2 1]) -> [8 2]", "(evens [6 9 4]) -> [6 4]", "(evens []) -> []", "(evens [0 9]) -> [0]", "(evens [2]) -> [2]", "(evens [3 2 3]) -> [2]", "(evens [3 8 2 7]) -> [8 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 82.551034, "examples": ["(evens []) -> []", "(evens [3 5 7 6 2]) -> [6 2]", "(evens []) -> []", "(evens [5 5 5 4]) -> [4]", "(evens [5 7 9 2 9]) -> [2]", "(evens []) -> []", "(evens [2 6 0 4]) -> [2 6 0 4]", "(evens []) -> []", "(evens [4 5]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 70.108739, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [7 0 8]) -> [0 8]", "(evens [7]) -> []", "(evens [5 4 0]) -> [4 0]", "(evens [9 1 0 9 8]) -> [0 8]", "(evens [7 0 3]) -> [0]", "(evens []) -> []", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 76.705175, "examples": ["(evens []) -> []", "(evens [0 2 8]) -> [0 2 8]", "(evens [0 4 4]) -> [0 4 4]", "(evens []) -> []", "(evens [2 4 8 8 5]) -> [2 4 8 8]", "(evens [1 7 2 5]) -> [2]", "(evens [7 6 2 1 2]) -> [6 2 2]", "(evens []) -> []", "(evens [3 8 6]) -> [8 6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 66.823145, "examples": ["(evens []) -> []", "(evens [0 3 6 9 6]) -> [0 6 6]", "(evens [3 1 1 6]) -> [6]", "(evens [5 4]) -> [4]", "(evens [0 8]) -> [0 8]", "(evens [8 2 0]) -> [8 2 0]", "(evens [2 5 1 1 3]) -> [2]", "(evens [6]) -> [6]", "(evens [6 8 6 9]) -> [6 8 6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 46.206002, "examples": ["(evens []) -> []", "(evens [9]) -> []", "(evens []) -> []", "(evens [7 4]) -> [4]", "(evens []) -> []", "(evens [2 4 5 0 3]) -> [2 4 0]", "(evens [6]) -> [6]", "(evens []) -> []", "(evens [5 9 4]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 44.191864, "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [7 0]) -> [0]", "(evens [8 3]) -> [8]", "(evens []) -> []", "(evens [0 9]) -> [0]", "(evens [3 6]) -> [6]", "(evens [4 1]) -> [4]", "(evens [9 5 8 3 7]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 54.725481, "examples": ["(evens []) -> []", "(evens [3 2]) -> [2]", "(evens [6]) -> [6]", "(evens [6 6]) -> [6 6]", "(evens [0 6 3 1]) -> [0 6]", "(evens [5 3 5 4 1]) -> [4]", "(evens [7 4 8 9 8]) -> [4 8 8]", "(evens [7]) -> []", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 53.160385, "examples": ["(evens []) -> []", "(evens [9 1 8]) -> [8]", "(evens [8 8 5]) -> [8 8]", "(evens []) -> []", "(evens [9 7 7 2]) -> [2]", "(evens [6 2]) -> [6 2]", "(evens [4 8 9 8 0]) -> [4 8 8 0]", "(evens [9]) -> []", "(evens [9 6]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.829886, "examples": ["(evens []) -> []", "(evens [7 7 8 2 8]) -> [8 2 8]", "(evens []) -> []", "(evens [2]) -> [2]", "(evens [2 4]) -> [2 4]", "(evens []) -> []", "(evens [4]) -> [4]", "(evens [9]) -> []", "(evens [2 9]) -> [2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 78.382368, "examples": ["(evens []) -> []", "(evens [4 6 3 6 8]) -> [4 6 6 8]", "(evens []) -> []", "(evens []) -> []", "(evens [5 8 5 6]) -> [8 6]", "(evens [2 6 6]) -> [2 6 6]", "(evens [3]) -> []", "(evens [2 6 9 2]) -> [2 6 2]", "(evens [0 8 6 4 5]) -> [0 8 6 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 61.859141, "examples": ["(evens []) -> []", "(evens [8 0 9 3 9]) -> [8 0]", "(evens [3 1 4 6 0]) -> [4 6 0]", "(evens [8 4 6]) -> [8 4 6]", "(evens [1 8]) -> [8]", "(evens [4]) -> [4]", "(evens [8]) -> [8]", "(evens [5 5 8]) -> [8]", "(evens [7 6 7]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 53.114867, "examples": ["(evens []) -> []", "(evens [6 8 0 3]) -> [6 8 0]", "(evens [3 2]) -> [2]", "(evens [7 0]) -> [0]", "(evens [8]) -> [8]", "(evens []) -> []", "(evens [7 9 2]) -> [2]", "(evens [9 2]) -> [2]", "(evens [8 6 7]) -> [8 6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 59.672915, "examples": ["(evens []) -> []", "(evens [8 0 1 3 2]) -> [8 0 2]", "(evens [2]) -> [2]", "(evens [7 4 5]) -> [4]", "(evens []) -> []", "(evens [7 5 1 7 7]) -> []", "(evens [5 8 0 2 5]) -> [8 0 2]", "(evens [0 5]) -> [0]", "(evens [0 6 0 0 7]) -> [0 6 0 0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 60.856817, "examples": ["(evens []) -> []", "(evens [1 0 9]) -> [0]", "(evens [8]) -> [8]", "(evens [1]) -> []", "(evens [9 3 0 7 6]) -> [0 6]", "(evens [5]) -> []", "(evens [6 8 1]) -> [6 8]", "(evens [0 4 0 3]) -> [0 4 0]", "(evens [7 8]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 71.582425, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [0 1 7 0]) -> [0 0]", "(evens [3]) -> []", "(evens [3 6 5 4]) -> [6 4]", "(evens [1 4]) -> [4]", "(evens [9 6]) -> [6]", "(evens [4 1]) -> [4]", "(evens [5 8]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 71.038804, "examples": ["(evens []) -> []", "(evens [8 0 7 8 4]) -> [8 0 8 4]", "(evens [1 9 2 4]) -> [2 4]", "(evens []) -> []", "(evens [8]) -> [8]", "(evens []) -> []", "(evens [8]) -> [8]", "(evens [6 2 5]) -> [6 2]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 71.969749, "examples": ["(evens []) -> []", "(evens [1 2 7 3]) -> [2]", "(evens [6 0]) -> [6 0]", "(evens [4 5 5 0]) -> [4 0]", "(evens [1]) -> []", "(evens [0 7]) -> [0]", "(evens [5 5]) -> []", "(evens []) -> []", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 69.283513, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [0 7]) -> [0]", "(evens [8 4 5 5]) -> [8 4]", "(evens [0 6 1]) -> [0 6]", "(evens [4 3 1 2 2]) -> [4 2 2]", "(evens [3 1 0]) -> [0]", "(evens [4 2]) -> [4 2]", "(evens [4]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 77.914971, "examples": ["(evens []) -> []", "(evens [7 8 0 9]) -> [8 0]", "(evens [4 7 4 3]) -> [4 4]", "(evens []) -> []", "(evens [1 2 4]) -> [2 4]", "(evens [4 7 1]) -> [4]", "(evens [1 6]) -> [6]", "(evens []) -> []", "(evens [1 8 8]) -> [8 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 69.795482, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [9 6 2]) -> [6 2]", "(evens [3 0 1 0 3]) -> [0 0]", "(evens [8]) -> [8]", "(evens [4 0 9 1 1]) -> [4 0]", "(evens [5 8]) -> [8]", "(evens [1 0]) -> [0]", "(evens [6 7 2 3 2]) -> [6 2 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 86.92837, "examples": ["(evens []) -> []", "(evens [5 6 9 9 0]) -> [6 0]", "(evens [0 4 9 9]) -> [0 4]", "(evens [0 0 5]) -> [0 0]", "(evens [7 3 0]) -> [0]", "(evens [0 4 3 2 9]) -> [0 4 2]", "(evens [2 1]) -> [2]", "(evens [4 3 1 4 6]) -> [4 4 6]", "(evens [3 2 0]) -> [2 0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 47.960454, "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [0 1]) -> [0]", "(evens [6]) -> [6]", "(evens [7 4]) -> [4]", "(evens [0 5 9 0]) -> [0 0]", "(evens []) -> []", "(evens [0 6 6 3]) -> [0 6 6]", "(evens [4 4 9]) -> [4 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 69.379997, "examples": ["(evens []) -> []", "(evens [3 9 4 8 3]) -> [4 8]", "(evens [3 4 3 6 9]) -> [4 6]", "(evens [0 5 6 5]) -> [0 6]", "(evens []) -> []", "(evens [7 7 0]) -> [0]", "(evens [9 8 1 6 9]) -> [8 6]", "(evens [9 7 3 0 8]) -> [0 8]", "(evens [3]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.409732, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [6]) -> [6]", "(evens [1 2]) -> [2]", "(evens [3 8 1 4]) -> [8 4]", "(evens []) -> []", "(evens [4 1 1]) -> [4]", "(evens [5 2 3 1 9]) -> [2]", "(evens [8]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 80.151455, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [1 3 0]) -> [0]", "(evens [3 4 0]) -> [4 0]", "(evens [1 9 6 1 4]) -> [6 4]", "(evens [1 3 8 0]) -> [8 0]", "(evens [5 6 3]) -> [6]", "(evens [9 0]) -> [0]", "(evens [8 0 5 8 4]) -> [8 0 8 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 59.733022, "examples": ["(evens []) -> []", "(evens [3 0 8]) -> [0 8]", "(evens []) -> []", "(evens [4]) -> [4]", "(evens [0 3]) -> [0]", "(evens [6 4 6]) -> [6 4 6]", "(evens [6 8 9 6 9]) -> [6 8 6]", "(evens [3]) -> []", "(evens [7]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 59.151467, "examples": ["(evens []) -> []", "(evens [5 8 8]) -> [8 8]", "(evens [5 0 7]) -> [0]", "(evens [6 7 2]) -> [6 2]", "(evens []) -> []", "(evens [7]) -> []", "(evens [5]) -> []", "(evens [4 6 6 9 3]) -> [4 6 6]", "(evens [9 2 0]) -> [2 0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 54.394226, "examples": ["(evens []) -> []", "(evens [3]) -> []", "(evens [5 3 6 6]) -> [6 6]", "(evens [4 2]) -> [4 2]", "(evens [7 5]) -> []", "(evens []) -> []", "(evens [5 1 1 1]) -> []", "(evens []) -> []", "(evens [1 0 3 7]) -> [0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 49.324317, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [5]) -> []", "(evens [3 2 3]) -> [2]", "(evens [0 7 6 8]) -> [0 6 8]", "(evens [8]) -> [8]", "(evens [5 9 4]) -> [4]", "(evens [8]) -> [8]", "(evens [5 5 4 3 3]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 54.648665, "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [4 5 7]) -> [4]", "(evens [1 5 1 2 5]) -> [2]", "(evens [8 9 4 7]) -> [8 4]", "(evens [1 7 4 4 9]) -> [4 4]", "(evens [5 1]) -> []", "(evens [9 2 0]) -> [2 0]", "(evens [8 2 7]) -> [8 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 66.507303, "examples": ["(evens []) -> []", "(evens [8 8 8 6 1]) -> [8 8 8 6]", "(evens [2 3]) -> [2]", "(evens [1]) -> []", "(evens [5 2 9]) -> [2]", "(evens [2 8 0]) -> [2 8 0]", "(evens []) -> []", "(evens [9 0]) -> [0]", "(evens [6 4 2 7]) -> [6 4 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 72.454222, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [3]) -> []", "(evens [6 1 3 4]) -> [6 4]", "(evens []) -> []", "(evens []) -> []", "(evens [0 4]) -> [0 4]", "(evens [8 0 4 5]) -> [8 0 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 44.297815, "examples": ["(evens []) -> []", "(evens [1 8 4]) -> [8 4]", "(evens []) -> []", "(evens []) -> []", "(evens [7 4 5]) -> [4]", "(evens []) -> []", "(evens [2]) -> [2]", "(evens [8 3 9 8 8]) -> [8 8 8]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.73996, "examples": ["(evens []) -> []", "(evens [2 6 5 1 6]) -> [2 6 6]", "(evens [2 3 1 9 2]) -> [2 2]", "(evens [5 2 4 4]) -> [2 4 4]", "(evens [4 5 1 6]) -> [4 6]", "(evens [8 0 1]) -> [8 0]", "(evens [3 2 4 3]) -> [2 4]", "(evens [6 0 0 9 2]) -> [6 0 0 2]", "(evens [3]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 83.107039, "examples": ["(evens []) -> []", "(evens [9 1 3 4 8]) -> [4 8]", "(evens [3 8]) -> [8]", "(evens [6 6 5 2 4]) -> [6 6 2 4]", "(evens [4 4 5]) -> [4 4]", "(evens [8 9 2 9]) -> [8 2]", "(evens [2 3 3]) -> [2]", "(evens [9 2]) -> [2]", "(evens [8 1 4]) -> [8 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 63.471923, "examples": ["(evens []) -> []", "(evens [4 1 5]) -> [4]", "(evens []) -> []", "(evens [6 0]) -> [6 0]", "(evens []) -> []", "(evens [3 8]) -> [8]", "(evens [6]) -> [6]", "(evens [4]) -> [4]", "(evens [8 6 3 4 7]) -> [8 6 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 73.706811, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [8 7 9]) -> [8]", "(evens [7 2]) -> [2]", "(evens [8 5 8 8 3]) -> [8 8 8]", "(evens [6 9 4 8 1]) -> [6 4 8]", "(evens [4 1 6 4]) -> [4 6 4]", "(evens [8 6 1 7]) -> [8 6]", "(evens [5 6]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 56.691633, "examples": ["(evens []) -> []", "(evens [5 9 1 8]) -> [8]", "(evens [3 6]) -> [6]", "(evens []) -> []", "(evens [7 9 1 8]) -> [8]", "(evens [8]) -> [8]", "(evens [4 9]) -> [4]", "(evens [8 4 2 9]) -> [8 4 2]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (<= c (car b))))) _) _)", "time": 0.472189, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [0 5]) -> [0]", "(evens [6 4]) -> [6 4]", "(evens [8 6]) -> [8 6]", "(evens [4 5]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 65.723916, "examples": ["(evens []) -> []", "(evens [6 6 7 2 9]) -> [6 6 2]", "(evens [3 3 7 5]) -> []", "(evens [1 8 8 6 7]) -> [8 8 6]", "(evens []) -> []", "(evens [4 4]) -> [4 4]", "(evens [8 5]) -> [8]", "(evens [9]) -> []", "(evens [4 7 8 3 9]) -> [4 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 59.341058, "examples": ["(evens []) -> []", "(evens [5 7 1]) -> []", "(evens [7 2]) -> [2]", "(evens [7 2 9 6 9]) -> [2 6]", "(evens [3 9]) -> []", "(evens [2]) -> [2]", "(evens [9 6 0]) -> [6 0]", "(evens [5 1 3 0]) -> [0]", "(evens [0 0 8 8]) -> [0 0 8 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 52.579159, "examples": ["(evens []) -> []", "(evens [4 4]) -> [4 4]", "(evens [6 1 5 8 9]) -> [6 8]", "(evens [6 6 7]) -> [6 6]", "(evens [9 8]) -> [8]", "(evens [6 7]) -> [6]", "(evens [5 6 4]) -> [6 4]", "(evens []) -> []", "(evens [9]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 51.269581, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [1 2]) -> [2]", "(evens [0 8]) -> [0 8]", "(evens [6 9 9 8 4]) -> [6 8 4]", "(evens []) -> []", "(evens [8]) -> [8]", "(evens [7 0 3]) -> [0]", "(evens [6 1 4]) -> [6 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 56.658234, "examples": ["(evens []) -> []", "(evens [5 2 5 7]) -> [2]", "(evens [8]) -> [8]", "(evens [3 4]) -> [4]", "(evens [0]) -> [0]", "(evens [4 6]) -> [4 6]", "(evens [8]) -> [8]", "(evens [7 9 6 2 4]) -> [6 2 4]", "(evens [9]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 60.826413, "examples": ["(evens []) -> []", "(evens [7 8 5 5]) -> [8]", "(evens [6 5 4 4 4]) -> [6 4 4 4]", "(evens []) -> []", "(evens [2]) -> [2]", "(evens [7]) -> []", "(evens [1 2 8 0]) -> [2 8 0]", "(evens [1 5 3 8 5]) -> [8]", "(evens [5 4 3]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 79.526234, "examples": ["(evens []) -> []", "(evens [0 4 3 7 8]) -> [0 4 8]", "(evens [6 2 3 0 0]) -> [6 2 0 0]", "(evens []) -> []", "(evens []) -> []", "(evens [7 6 0]) -> [6 0]", "(evens [9 0 6 5]) -> [0 6]", "(evens [1 9 5 5 9]) -> []", "(evens [0 1 8]) -> [0 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 63.778296, "examples": ["(evens []) -> []", "(evens [5 6 7 4 5]) -> [6 4]", "(evens [6]) -> [6]", "(evens [2 5 2 3 5]) -> [2 2]", "(evens [4 2 9 9]) -> [4 2]", "(evens [6 1 4]) -> [6 4]", "(evens []) -> []", "(evens [5 9]) -> []", "(evens [9 8]) -> [8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 62.424704, "examples": ["(evens []) -> []", "(evens [3 7]) -> []", "(evens []) -> []", "(evens [5]) -> []", "(evens [0 3 7]) -> [0]", "(evens [3 0 5]) -> [0]", "(evens [7 6 6]) -> [6 6]", "(evens [0]) -> [0]", "(evens [6 8]) -> [6 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 62.892613, "examples": ["(evens []) -> []", "(evens [8 6]) -> [8 6]", "(evens [1 5 7 8]) -> [8]", "(evens [9 2 1 1 3]) -> [2]", "(evens [1 8]) -> [8]", "(evens [6]) -> [6]", "(evens [6 5]) -> [6]", "(evens [2 0 7 1]) -> [2 0]", "(evens [4]) -> [4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 68.86146, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [9 0]) -> [0]", "(evens [1 7 6 0]) -> [6 0]", "(evens [3 0 1]) -> [0]", "(evens [5 3 8 0 1]) -> [8 0]", "(evens [3 1 9]) -> []", "(evens [3 8 2 5 3]) -> [8 2]", "(evens [1 3 0 7 3]) -> [0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 55.335707, "examples": ["(evens []) -> []", "(evens [1]) -> []", "(evens []) -> []", "(evens [2 4 3]) -> [2 4]", "(evens []) -> []", "(evens [8 9 6 1 3]) -> [8 6]", "(evens [8 0]) -> [8 0]", "(evens [8]) -> [8]", "(evens [5 1 6 0 1]) -> [6 0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 58.160393, "examples": ["(evens []) -> []", "(evens [5 8 8 0 8]) -> [8 8 0 8]", "(evens [4 1 2 6]) -> [4 2 6]", "(evens [5]) -> []", "(evens [0 4]) -> [0 4]", "(evens [0 9 7]) -> [0]", "(evens [5 1 1 9]) -> []", "(evens [5 6 4 9 1]) -> [6 4]", "(evens [2]) -> [2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 46.357006, "examples": ["(evens []) -> []", "(evens [4 5]) -> [4]", "(evens [8 5 9]) -> [8]", "(evens [7 3 0 0]) -> [0 0]", "(evens [4]) -> [4]", "(evens [1 3 2 9 8]) -> [2 8]", "(evens [5]) -> []", "(evens [1]) -> []", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (foldr b (lambda (d c) (foldl d (lambda (f e) []) (cons c d))) [])) _) _)", "time": 2.804048, "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [0 9 1]) -> [0]", "(evens [6]) -> [6]", "(evens []) -> []", "(evens [2]) -> [2]", "(evens [2]) -> [2]", "(evens [8]) -> [8]", "(evens [9 9]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 66.492083, "examples": ["(evens []) -> []", "(evens [3 5 2 3 0]) -> [2 0]", "(evens [5 1 3 5 7]) -> []", "(evens []) -> []", "(evens [4 2 0]) -> [4 2 0]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [0 0 8 9 3]) -> [0 0 8]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 52.424021, "examples": ["(evens []) -> []", "(evens [0]) -> [0]", "(evens [2 8 7]) -> [2 8]", "(evens [2 2 2 6 0]) -> [2 2 2 6 0]", "(evens [5 3 1]) -> []", "(evens [2 9 6 9 0]) -> [2 6 0]", "(evens [6 3 9 4 7]) -> [6 4]", "(evens [3 1 3]) -> []", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 73.871156, "examples": ["(evens []) -> []", "(evens [5 7]) -> []", "(evens [4 1 6 8 4]) -> [4 6 8 4]", "(evens [3 5 0]) -> [0]", "(evens [4 6 5 1]) -> [4 6]", "(evens [2 9 1]) -> [2]", "(evens [2 4 0 1]) -> [2 4 0]", "(evens [4 0 3]) -> [4 0]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 56.150336, "examples": ["(evens []) -> []", "(evens [5 2 8]) -> [2 8]", "(evens [7]) -> []", "(evens [4 2 6 1 8]) -> [4 2 6 8]", "(evens [3]) -> []", "(evens [3 3]) -> []", "(evens [6 9]) -> [6]", "(evens []) -> []", "(evens [9 9 6 8 6]) -> [6 8 6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 60.156978, "examples": ["(evens []) -> []", "(evens [7 1 7 3 0]) -> [0]", "(evens [2 9 6]) -> [2 6]", "(evens [0 0 9]) -> [0 0]", "(evens [6]) -> [6]", "(evens [7 3 8]) -> [8]", "(evens [4]) -> [4]", "(evens [0 8 1 5 1]) -> [0 8]", "(evens [7 6 1]) -> [6]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 46.762967, "examples": ["(evens []) -> []", "(evens [8 3]) -> [8]", "(evens [6 9]) -> [6]", "(evens [7 9 2]) -> [2]", "(evens []) -> []", "(evens [7]) -> []", "(evens [6 8 8 0 9]) -> [6 8 8 0]", "(evens [5 9 6 3 4]) -> [6 4]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 60.215116, "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [1 2 9]) -> [2]", "(evens [3 8 4 5 7]) -> [8 4]", "(evens [4 0 8]) -> [4 0 8]", "(evens [6 6 7 2 8]) -> [6 6 2 8]", "(evens []) -> []", "(evens [5 6 3 0]) -> [6 0]", "(evens [3]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 55.435393, "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [4 5 8]) -> [4 8]", "(evens [4 2 2 5 1]) -> [4 2 2]", "(evens [7 7 2]) -> [2]", "(evens [0 4]) -> [0 4]", "(evens [1 0 1 8 6]) -> [0 8 6]", "(evens [6 8 4 9]) -> [6 8 4]", "(evens [3]) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 64.205345, "examples": ["(evens []) -> []", "(evens [9 1 2 6]) -> [2 6]", "(evens [6 6 1 1 7]) -> [6 6]", "(evens [2 1 4 5]) -> [2 4]", "(evens [6 8]) -> [6 8]", "(evens [6 0 9]) -> [6 0]", "(evens [6 0 6 1]) -> [6 0 6]", "(evens [4 3]) -> [4]", "(evens []) -> []"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 32.544781, "examples": ["(evens []) -> []", "(evens [9 4]) -> [4]", "(evens [8]) -> [8]", "(evens []) -> []", "(evens [6]) -> [6]", "(evens [6 3 1]) -> [6]", "(evens [6]) -> [6]", "(evens [2 7 9]) -> [2]", "(evens [0 4]) -> [0 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 46.005819, "examples": ["(evens []) -> []", "(evens [7 6]) -> [6]", "(evens [3]) -> []", "(evens [3]) -> []", "(evens [4]) -> [4]", "(evens [6 0]) -> [6 0]", "(evens [4 4 3 0]) -> [4 4 0]", "(evens [3 5 2 2 8]) -> [2 2 8]", "(evens [9 5 4 3 2]) -> [4 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 72.401019, "examples": ["(evens []) -> []", "(evens [3 2 1 2 5]) -> [2 2]", "(evens [0 8 0 9]) -> [0 8 0]", "(evens [0 0 8 1]) -> [0 0 8]", "(evens [8 5 0]) -> [8 0]", "(evens [3 3 7 9 6]) -> [6]", "(evens [0 6 7 3]) -> [0 6]", "(evens [8 9 1]) -> [8]", "(evens [6 8 4 3]) -> [6 8 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 38.075632, "examples": ["(evens []) -> []", "(evens [5 5 6]) -> [6]", "(evens [3 8 1 4 3]) -> [8 4]", "(evens [7 2]) -> [2]", "(evens [9 4]) -> [4]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [7 3 2 0 4]) -> [2 0 4]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 57.27668, "examples": ["(evens []) -> []", "(evens [5 5 9]) -> []", "(evens [6 3 8 5 8]) -> [6 8 8]", "(evens [7 1 0 4]) -> [0 4]", "(evens []) -> []", "(evens [9 7]) -> []", "(evens [1 8 8 8 9]) -> [8 8 8]", "(evens [7]) -> []", "(evens [8 3 6 0]) -> [8 6 0]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 52.684443, "examples": ["(evens []) -> []", "(evens [2 5 7 0 1]) -> [2 0]", "(evens [3]) -> []", "(evens [7 5 5 1]) -> []", "(evens [4 1 2 9]) -> [4 2]", "(evens [6 4 6 9 8]) -> [6 4 6 8]", "(evens [2 8 1]) -> [2 8]", "(evens []) -> []", "(evens [7 0 4 2]) -> [0 4 2]"], "name": "evens"}
{"solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)", "time": 58.420151, "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [4 6 2 4]) -> [4 6 2 4]", "(evens [0]) -> [0]", "(evens [3 5 4]) -> [4]", "(evens [1]) -> []", "(evens [1 1]) -> []", "(evens [8 6 3 6]) -> [8 6 6]", "(evens [0 0 4 8 2]) -> [0 0 4 8 2]"], "name": "evens"}
