{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {3 {3} {1}} {2}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {1 {4 {6 {2}}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.801432}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {5 {6} {0}} {7 {3} {9}}}) -> 7", "(count_nodes {5}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {0}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.076111}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {4 {1 {2 {2} {3}} {6 {1}}} {4}}) -> 8", "(count_nodes {7 {3 {5}}}) -> 3", "(count_nodes {5 {3 {7}} {1 {9} {8}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {8} {9}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.31137}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {2 {1}}}) -> 3", "(count_nodes {4 {8 {4} {9}} {4 {1}}}) -> 6", "(count_nodes {3 {9 {1}}}) -> 3", "(count_nodes {7 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {8} {0}}) -> 3", "(count_nodes {9 {7 {5} {2}}}) -> 4"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.152909}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {2 {3}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {4 {7} {3 {4}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0 {9}}) -> 2", "(count_nodes {2 {4} {0}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.806109}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {6 {4} {0 {8}}} {9 {1 {6}} {3}}}) -> 9", "(count_nodes {6}) -> 1", "(count_nodes {8 {1}}) -> 2", "(count_nodes {4 {7} {7}}) -> 3", "(count_nodes {3 {5}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.820005}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {5}}) -> 2", "(count_nodes {6 {8} {4}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {3}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 6.746328}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {3 {4 {5 {5}}} {0 {2 {4} {2}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {5 {5} {2}}) -> 3", "(count_nodes {2 {7} {1}}) -> 3", "(count_nodes {0 {2} {6}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 7.012814}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {6 {0}}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {1}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {3}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 e)) 1)) 0)) _) _)", "time": 7.062409}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {0 {0} {8}} {1 {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9 {3 {4 {3} {1}}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {0 {9}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 7.089604}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {5 {7} {7}}}) -> 4", "(count_nodes {4 {2 {9 {1} {5}}}}) -> 5", "(count_nodes {6 {1 {2 {7}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {4}}) -> 2", "(count_nodes {8 {0} {8 {6 {0} {3}} {0}}}) -> 7"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 7.196769}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {4 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0 {2}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {5} {5}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 7.176316}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {6} {9}}) -> 3", "(count_nodes {9 {6} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {1}}) -> 2", "(count_nodes {8 {4}}) -> 2", "(count_nodes {9}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 7.221707}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {4} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {6 {3}} {2 {4 {9}} {4 {0}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 7.26898}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {9 {8 {6} {4}} {5 {9} {4}}}) -> 7"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 7.520923}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {2 {8 {1} {0}} {5 {3}}} {7 {4}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {8 {3}}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 7.543602}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {2} {9}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {8 {2} {2}}) -> 3", "(count_nodes {7 {2 {4}} {3 {7} {0}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {1 {2} {9}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.825621}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {2 {4} {1}}) -> 3", "(count_nodes {8 {3}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {4 {8} {2}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {9 {6} {9}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 4.164186}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {2} {7 {1} {1 {3}}}}) -> 6", "(count_nodes {1 {0 {3} {2}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {7 {4} {9}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.034351}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {0 {5 {6} {9}} {2 {6}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {4} {7 {8} {9}}}) -> 5", "(count_nodes {1 {5} {9 {0} {5 {1} {1}}}}) -> 7"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.024205}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {5} {1}}) -> 3", "(count_nodes {6 {9}}) -> 2", "(count_nodes {8 {8} {2}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {7 {1}}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.208557}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {4 {3} {4}} {3}}) -> 5", "(count_nodes {9 {9} {0 {1} {6}}}) -> 5", "(count_nodes {5 {5} {2}}) -> 3", "(count_nodes {3 {8 {4}} {6}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9 {6}}) -> 2", "(count_nodes {9}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.074252}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {4 {7 {3 {8}} {6 {3} {0}}} {4 {6 {9} {5}}}}) -> 11", "(count_nodes {2 {9} {6 {8}}}) -> 4", "(count_nodes {6 {5 {2}}}) -> 3", "(count_nodes {2 {1 {1 {0}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.453923}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {2} {0}}) -> 3", "(count_nodes {7 {5 {6}} {9 {0} {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {0 {3} {1 {0}}}) -> 4", "(count_nodes {8 {1 {9}}}) -> 3", "(count_nodes {7 {2 {9}} {3 {3}}}) -> 5", "(count_nodes {3 {3 {4} {5}}}) -> 4"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.922052}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {2 {5}}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {5 {6} {6}}}) -> 4", "(count_nodes {8}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.213907}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {7}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {5 {5 {3 {1}} {3 {2} {9}}} {0}}) -> 8", "(count_nodes {0 {1} {6}}) -> 3", "(count_nodes {5 {2} {0}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.886005}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {9}}) -> 2", "(count_nodes {7 {5 {3 {5} {3}}} {9 {1}}}) -> 7", "(count_nodes {0 {4 {4 {3}}} {1 {1 {0} {0}} {8}}}) -> 9"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.916002}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {7 {0}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {6 {5}} {8 {0 {0}}}}) -> 6", "(count_nodes {4 {7} {1}}) -> 3", "(count_nodes {0 {2 {3 {6} {3}} {0 {5} {3}}} {8}}) -> 9", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.31432}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {7 {5} {8}}}) -> 4", "(count_nodes {0 {6} {9 {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {1 {4 {5} {3}} {7 {8} {5}}}) -> 7", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.772796}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {9} {1}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {7 {4}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 4.864918}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {7} {9}}) -> 3", "(count_nodes {4 {1 {9}} {7}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {3 {7} {6}}) -> 3", "(count_nodes {1 {9} {5}}) -> 3", "(count_nodes {2}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.0806}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {0}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {7 {0} {3}}) -> 3", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 4.870524}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {2}}) -> 2", "(count_nodes {3 {4 {2}}}) -> 3", "(count_nodes {5 {1 {0 {5} {8}} {3 {1} {6}}}}) -> 8", "(count_nodes {0 {7}}) -> 2", "(count_nodes {1 {8 {4} {9}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0 {5} {5}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.277717}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {6 {1}} {1 {9} {1}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {9 {0} {9}}) -> 3", "(count_nodes {7 {9 {7} {2}}}) -> 4", "(count_nodes {2}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.776009}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {5 {3}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {1} {5}}) -> 3", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 4.253835}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {8 {2 {0} {2}} {2 {5}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {9 {3}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {7 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {2}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.866767}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {9} {2 {6 {3} {9}} {0 {7}}}}) -> 8", "(count_nodes {0}) -> 1", "(count_nodes {1 {4 {2 {3}} {0 {8} {8}}} {4}}) -> 8"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.438692}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {1} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0 {9} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {6}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {4 {6}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 5.635999}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {6} {8}}) -> 3", "(count_nodes {6 {9 {0} {9}}}) -> 4", "(count_nodes {5}) -> 1", "(count_nodes {6 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.293875}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {1 {3}} {6 {8 {6}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {9}}}) -> 3", "(count_nodes {0 {2 {4} {4}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {9 {9} {6}}}) -> 4", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.784487}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {1} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {2 {2 {8}} {7 {7} {2}}}}) -> 7", "(count_nodes {2 {5 {7}}}) -> 3", "(count_nodes {9 {2}}) -> 2", "(count_nodes {5}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.834354}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {1 {0 {2} {3}}}) -> 4", "(count_nodes {7 {6}}) -> 2", "(count_nodes {1 {2 {4} {9}}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.038905}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {4} {3}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {3 {4 {8 {5}}} {2 {2} {1 {4}}}}) -> 8"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.217954}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {2 {8} {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0 {2} {1 {8}}}) -> 4", "(count_nodes {0 {3} {9}}) -> 3", "(count_nodes {9 {0 {8 {3}} {8}}}) -> 5", "(count_nodes {5}) -> 1", "(count_nodes {6 {9}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.092866}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.038107}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {3 {6} {4}} {1 {5} {3}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {7 {5 {8}}}) -> 3", "(count_nodes {2 {7} {8}}) -> 3", "(count_nodes {0 {7 {9}}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.105956}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {1 {2 {4} {5}} {3 {1}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {2}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.726597}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {7 {1 {6}}} {8 {5 {5} {2}}}}) -> 8", "(count_nodes {3 {6 {0}}}) -> 3", "(count_nodes {9 {4 {7} {4}} {8 {1} {3}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {3}} {6}}) -> 4", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.23659}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {3 {0}} {0 {4 {0} {6}} {2 {6} {0}}}}) -> 10", "(count_nodes {1 {3 {4} {0}} {5}}) -> 5", "(count_nodes {8 {9 {2} {7 {3}}} {0 {4 {3} {1}}}}) -> 9", "(count_nodes {2 {4}}) -> 2", "(count_nodes {7 {6 {3 {2} {8}} {0 {0} {0}}} {7}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {5 {5}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 6.372129}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {7 {6}} {2 {7}}}) -> 5", "(count_nodes {4 {1}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {1 {3 {8} {1}}}) -> 4", "(count_nodes {1 {4} {4 {0 {8}}}}) -> 5", "(count_nodes {7 {9} {2 {4} {2}}}) -> 5", "(count_nodes {1 {0 {2}} {2}}) -> 4"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.082505}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {4 {7 {0} {9}}}}) -> 5", "(count_nodes {8 {6 {5 {8} {5}} {8 {5} {3}}}}) -> 8", "(count_nodes {2}) -> 1", "(count_nodes {4 {1} {0}}) -> 3", "(count_nodes {7 {6 {0} {3 {8} {8}}}}) -> 6"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.507569}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {3 {9} {3}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {8 {4 {4} {1}} {6 {3} {8}}}) -> 7", "(count_nodes {4}) -> 1", "(count_nodes {6 {0} {5}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.230383}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {7 {3 {0}} {3 {2}}} {4 {9}}}) -> 8", "(count_nodes {1 {9} {8}}) -> 3", "(count_nodes {4 {3} {9}}) -> 3", "(count_nodes {7 {4 {1 {4} {8}}} {1 {3} {6 {3}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {4 {9 {6} {6}}}) -> 4", "(count_nodes {3 {0 {8} {7 {8} {3}}}}) -> 6"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.837169}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {7 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {2 {4} {3}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 5.10703}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {0}}) -> 2", "(count_nodes {6 {1 {8}} {7}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {4 {5} {9 {1}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {1} {7 {7 {8}}}}) -> 5"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.136098}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {9 {5 {8 {9} {3}}}}) -> 5", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.393649}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {0 {6 {4} {2}} {7 {9}}}) -> 6", "(count_nodes {9 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {0 {5}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.251125}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {8} {2}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {8 {8 {5 {1} {4}} {7}} {4}}) -> 7", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.2725}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {5 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5 {6 {7 {2} {5}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {0 {9 {5}}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.204277}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {9} {9}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {5} {6}}) -> 3", "(count_nodes {0 {3 {4} {1}} {9 {5} {6}}}) -> 7", "(count_nodes {1 {3} {7}}) -> 3", "(count_nodes {7 {3}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.109944}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {5 {9 {1} {1}}}) -> 4", "(count_nodes {0 {1} {5}}) -> 3", "(count_nodes {6 {8 {6} {6 {5} {3}}}}) -> 6", "(count_nodes {0 {1} {0 {9 {3}} {1}}}) -> 6", "(count_nodes {1 {9}}) -> 2", "(count_nodes {5 {9}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.811186}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {6} {2}}) -> 3", "(count_nodes {3 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0 {7} {7}}) -> 3", "(count_nodes {4 {6 {8}} {3 {7}}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.14857}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {2 {2}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {5 {8} {9 {1}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f f)) 1)) 0)) _) _)", "time": 5.414169}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {9 {2 {2} {9}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.095384}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {9 {3 {4}} {3}}) -> 4", "(count_nodes {5 {1}}) -> 2", "(count_nodes {1 {3}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f f)) 1)) 0)) _) _)", "time": 5.407401}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {0 {9} {8}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 4.762765}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {1 {9 {8} {6 {8} {6}}} {8 {6 {1}} {8}}}) -> 10", "(count_nodes {4}) -> 1", "(count_nodes {4 {6} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.808508}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {2 {7 {9} {6}}}) -> 4", "(count_nodes {6 {7} {7}}) -> 3", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.70907}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {4}}) -> 2", "(count_nodes {7 {7} {2}}) -> 3", "(count_nodes {4}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {5 {0 {7} {6}} {8}} {5 {1 {5} {9}} {9}}}) -> 11", "(count_nodes {6}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.536196}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {2 {3 {5}} {2 {8} {4}}} {4}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {6 {8} {3 {6} {6}}}}) -> 7", "(count_nodes {4 {1}}) -> 2", "(count_nodes {8 {6 {6 {2}} {1 {7} {5}}}}) -> 7"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.966219}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {2 {9 {9} {8}} {6 {8}}} {6 {7 {4} {0}}}}) -> 11", "(count_nodes {9 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {7 {5 {4} {1}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6 {1}}) -> 2", "(count_nodes {5 {4}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.42913}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2 {3} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {0 {5}}) -> 2", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 f)) 1)) 0)) _) _)", "time": 4.417268}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {4}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.033322}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {1}}) -> 2", "(count_nodes {5 {1} {9}}) -> 3", "(count_nodes {9 {4}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {4 {8} {8 {0 {1}}}}) -> 5", "(count_nodes {1 {0 {1 {0} {5}}}}) -> 5", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.48126}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4 {5} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {4 {5 {4} {7 {0} {5}}} {7 {3 {7}} {3 {8}}}}) -> 11", "(count_nodes {3}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.264279}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {2 {6}}) -> 2", "(count_nodes {2 {8 {1}}}) -> 3", "(count_nodes {5 {5 {7}}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 e)) 1)) 0)) _) _)", "time": 4.655799}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {2} {2}}) -> 3", "(count_nodes {6 {5}}) -> 2", "(count_nodes {1 {9 {4}} {1 {6}}}) -> 5", "(count_nodes {6 {1 {6 {3}} {1}}}) -> 5"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.274613}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {6 {5} {1}} {8}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {6} {5}} {8 {6}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.675069}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {9 {0}}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {8 {2}}) -> 2", "(count_nodes {9 {1 {8 {7} {6}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {7 {5 {6 {7}} {5 {2}}}}) -> 6"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.330531}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {3 {4 {2}}}) -> 3", "(count_nodes {4 {8 {6 {2}} {6}}}) -> 5", "(count_nodes {3 {9} {6}}) -> 3", "(count_nodes {8 {9 {9 {0} {9}}} {3 {6 {2} {7}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.569707}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {6 {1 {8}}}}) -> 4", "(count_nodes {9 {8 {2}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {3 {5}}}) -> 3", "(count_nodes {8 {2 {9 {2}}} {3 {5 {4}}}}) -> 7"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.079915}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {8 {5}}}}) -> 4"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 e)) 1)) 0)) _) _)", "time": 4.404139}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {8 {3 {8}}} {8}}) -> 5", "(count_nodes {6 {9 {9} {5}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.927316}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {8 {8}} {9}}) -> 4", "(count_nodes {6 {4 {3 {4}}} {9}}) -> 5", "(count_nodes {3 {9}}) -> 2", "(count_nodes {6 {8 {5}}}) -> 3", "(count_nodes {3 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.92779}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {2 {8}}) -> 2", "(count_nodes {3 {4}}) -> 2", "(count_nodes {8 {0 {4}}}) -> 3", "(count_nodes {2 {9 {6} {1}} {5 {1} {3}}}) -> 7", "(count_nodes {4 {1 {1}}}) -> 3", "(count_nodes {4 {9 {6} {6 {7} {3}}}}) -> 6"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.528082}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {8 {1 {8 {5} {7}}}}) -> 5", "(count_nodes {0}) -> 1", "(count_nodes {0 {1} {4}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {2}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.055663}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {4}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {0 {6 {5 {1}} {7 {4} {1}}} {5 {0} {0 {7}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 5.080347}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {6 {8}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {4}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ 1 1)) 1)) 0)) _) _)", "time": 3.685649}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {9 {6} {8}} {2 {5} {9}}}) -> 7", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {1}}) -> 2", "(count_nodes {7 {4 {7 {1}} {2}}}) -> 5", "(count_nodes {6 {3 {3 {8} {5}} {6 {7}}} {5}}) -> 8"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.786202}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {3} {4}}) -> 3", "(count_nodes {5 {6} {4 {7 {2}} {6 {7}}}}) -> 7", "(count_nodes {6}) -> 1", "(count_nodes {2 {9}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {8 {3}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.730488}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {9 {5}}) -> 2", "(count_nodes {8 {2} {7 {8 {0}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {3 {5}}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.957957}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {7 {2 {9} {3}} {9 {4}}}) -> 6", "(count_nodes {1 {8}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.772039}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {1}}) -> 2", "(count_nodes {2 {9} {6 {2} {3}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {9} {3 {9} {2}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.793901}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {0 {6}} {5}}) -> 4", "(count_nodes {2 {0} {6 {5 {9} {8}} {1}}}) -> 7", "(count_nodes {1 {6} {0}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {6 {7} {8}}) -> 3", "(count_nodes {9 {0}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.373846}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {5} {3}}) -> 3", "(count_nodes {9 {7}}) -> 2", "(count_nodes {4 {5}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {8 {4 {3} {2}}}) -> 4", "(count_nodes {5 {7}}) -> 2"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.211957}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {5 {6} {9 {8}}}) -> 4", "(count_nodes {1 {6 {3} {0}}}) -> 4", "(count_nodes {9 {7 {2}}}) -> 3", "(count_nodes {1 {9 {9}}}) -> 3", "(count_nodes {1 {8} {8}}) -> 3", "(count_nodes {6 {0} {5}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 4.069787}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {3 {9} {8}}}) -> 4", "(count_nodes {8 {1} {8}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {3 {8} {7}} {2}}) -> 5", "(count_nodes {6 {9 {8 {9}} {0}} {0 {2 {2}}}}) -> 8", "(count_nodes {}) -> 0"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.240785}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {3 {9 {4} {2}}} {1 {0}}}) -> 7", "(count_nodes {6 {5}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {5 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {1} {5}}) -> 3", "(count_nodes {4 {9} {5}}) -> 3"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 3.087041}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {4} {5}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {4 {2} {1 {1 {4}}}}) -> 5", "(count_nodes {7 {6 {8}} {8 {8}}}) -> 5", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 2.626753}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {7} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {9}}) -> 2", "(count_nodes {5 {6}}) -> 2", "(count_nodes {0 {1 {1}}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {3}) -> 1"], "name": "count_nodes", "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 2.011536}
