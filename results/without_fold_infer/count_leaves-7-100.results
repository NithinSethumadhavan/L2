{"time": 0.067681, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {4}) -> 1"]}
{"time": 0.09927, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"]}
{"time": 0.732495, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (- 1 (sum d))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {6 {6} {1}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {5 {3}}}) -> 1"]}
{"time": 1.987428, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) c) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {2 {6} {1}}) -> 2", "(count_leaves {8}) -> 1"]}
{"time": 2.11481, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {4 {5 {2} {6}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 2.142567, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {1} {7 {0}}}) -> 2", "(count_leaves {7 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2 {5} {3}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 2.17845, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {5 {7}} {6}}) -> 2", "(count_leaves {0}) -> 1"]}
{"time": 2.119504, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {2} {3}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {3 {2 {4}} {9}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {1 {7 {9}} {3 {3} {2}}}) -> 3"]}
{"time": 1.471923, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {3 {8 {8 {7} {7}}} {6 {8 {0} {6}}}}) -> 4", "(count_leaves {5 {3}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6 {7 {7}} {3}}) -> 2"]}
{"time": 1.551953, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {9 {2 {1} {2}} {6 {6}}} {5}}) -> 4", "(count_leaves {4 {0 {7}} {2 {4 {8} {2}} {6 {4} {0}}}}) -> 5", "(count_leaves {9}) -> 1", "(count_leaves {8 {5} {9}}) -> 2", "(count_leaves {4 {2 {4}} {5}}) -> 2"]}
{"time": 0.294107, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {6} {2 {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {8} {1 {9}}}) -> 2", "(count_leaves {7 {7} {2}}) -> 2", "(count_leaves {1 {1} {4}}) -> 2"]}
{"time": 2.548829, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {7} {7}} {9 {5} {6}}}) -> 4", "(count_leaves {8 {4 {5 {1}} {5 {5}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0 {9 {6}}}) -> 1"]}
{"time": 0.111667, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {7} {2}}) -> 2", "(count_leaves {6 {4 {8}} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {7} {2}}) -> 2"]}
{"time": 2.575333, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {3 {1 {0 {1} {9}}} {8 {5 {7} {1}} {9 {0}}}}) -> 5", "(count_leaves {0 {8}}) -> 1", "(count_leaves {1 {5} {5 {1 {4}}}}) -> 2"]}
{"time": 2.589914, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {7 {1}} {1}}) -> 2", "(count_leaves {3 {7} {3 {6}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"]}
{"time": 2.585026, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {5 {0} {9}}}}) -> 2", "(count_leaves {1 {2 {4} {7}}}) -> 2", "(count_leaves {0 {2}}) -> 1"]}
{"time": 2.638312, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3 {8 {8} {2}}}) -> 2", "(count_leaves {5 {9 {0 {2} {7}}} {5 {0 {0} {2}} {6 {2} {9}}}}) -> 6", "(count_leaves {9 {6 {9 {9}}}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 2.592349, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {4 {4}}}) -> 1", "(count_leaves {2 {5} {9}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {4 {1} {5}}) -> 2"]}
{"time": 1.408599, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {5 {1 {3}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {0} {0 {1} {7}}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 2.636607, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {0 {6 {2 {6} {4}}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3 {6} {2}}}) -> 2"]}
{"time": 2.658337, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8 {9 {5 {4}}}}) -> 1", "(count_leaves {5 {3} {1}}) -> 2", "(count_leaves {8 {6 {7 {8} {8}}}}) -> 2"]}
{"time": 0.023234, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.176675, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {4} {0}}) -> 2", "(count_leaves {9 {1 {8} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {7} {4 {9 {0}}}}) -> 2"]}
{"time": 1.278085, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {4} {3}}) -> 2", "(count_leaves {1 {9} {0}}) -> 2", "(count_leaves {2 {4 {9} {7}} {7 {0} {3}}}) -> 4"]}
{"time": 1.749233, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {1 {1} {4}} {4 {5}}}) -> 3", "(count_leaves {6}) -> 1"]}
{"time": 1.444713, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {0} {0}}) -> 2", "(count_leaves {2 {1} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {9}} {8 {4}}}) -> 2", "(count_leaves {1 {6}}) -> 1"]}
{"time": 1.522553, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3 {9 {2 {0}}} {0 {0 {1}} {0 {3} {1}}}}) -> 4", "(count_leaves {3 {4}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.493458, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {7} {1 {4 {0}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {8}} {2 {1 {0} {1}} {4 {9} {0}}}}) -> 5", "(count_leaves {5 {0}}) -> 1"]}
{"time": 1.536651, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {8 {3} {8}}}) -> 2", "(count_leaves {3 {2} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {0 {6} {2}} {6 {7}}}) -> 3", "(count_leaves {6}) -> 1"]}
{"time": "timeout", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {2 {7}} {3 {7} {3}}}) -> 3", "(count_leaves {4 {3 {2 {0}}}}) -> 1", "(count_leaves {6 {2} {8}}) -> 2", "(count_leaves {0 {1} {1}}) -> 2", "(count_leaves {6}) -> 1"]}
{"time": 1.479335, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9}}) -> 1", "(count_leaves {0 {2 {0}} {9 {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {4}) -> 1"]}
{"time": 1.635224, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {8 {5 {2}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {9} {9 {1} {5}}} {1}}) -> 4", "(count_leaves {8}) -> 1"]}
{"time": 1.496461, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {8} {6}}) -> 2", "(count_leaves {2 {7} {3}}) -> 2", "(count_leaves {6 {1} {0}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {1 {6}}) -> 1"]}
{"time": 1.452146, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {1 {9 {6} {1}} {7 {0}}}}) -> 3", "(count_leaves {0 {0} {7 {9}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.522306, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4 {2 {2}} {6 {1} {1}}} {7 {5}}}) -> 4", "(count_leaves {8 {8}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.65654, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {1 {1 {2}}} {5 {5 {6}}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3 {9 {2 {5}}}}) -> 1", "(count_leaves {9 {4} {9}}) -> 2"]}
{"time": 1.657285, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {0 {6 {1 {2} {9}} {4 {7}}} {1 {9 {0}}}}) -> 4", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1"]}
{"time": 1.572691, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {1} {1}}) -> 2", "(count_leaves {6 {8} {5}}) -> 2", "(count_leaves {3}) -> 1"]}
{"time": 1.447835, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {1 {3}} {6 {9}}}) -> 2", "(count_leaves {1 {0} {8}}) -> 2", "(count_leaves {6 {6} {3 {0}}}) -> 2", "(count_leaves {4 {6 {3} {5}} {5 {8 {4}}}}) -> 3", "(count_leaves {1 {1 {8} {5}}}) -> 2"]}
{"time": 1.136777, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {0} {9 {3} {0}}} {1 {4 {4}} {9}}}) -> 5"]}
{"time": 1.176944, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {1 {8 {0} {6}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {7 {2 {5 {2} {3}}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {1}) -> 1"]}
{"time": 0.989785, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {6 {1} {3}}}) -> 2", "(count_leaves {6 {0 {4} {4}} {4}}) -> 3", "(count_leaves {4 {4 {5} {9}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.050895, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {8 {3}} {0 {2} {0}}}) -> 3", "(count_leaves {4 {4}}) -> 1", "(count_leaves {8 {0} {9 {1 {4}} {6 {1} {9}}}}) -> 4", "(count_leaves {0}) -> 1"]}
{"time": 1.065208, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {2 {4 {0}}} {5 {0 {0} {3}} {8}}}) -> 4", "(count_leaves {7 {7} {5}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {5} {2}}) -> 2"]}
{"time": 0.020239, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {9}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"]}
{"time": 1.745238, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {3}}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {2 {1 {5} {2}} {1 {2} {4}}}) -> 4", "(count_leaves {2 {0 {2 {7} {2}} {2 {0}}} {1 {1}}}) -> 4", "(count_leaves {}) -> 0"]}
{"time": 0.076497, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {8}}) -> 1", "(count_leaves {9 {8}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {3 {4 {3}}}}) -> 1", "(count_leaves {8 {8}}) -> 1"]}
{"time": 0.030043, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {2}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"]}
{"time": 0.089087, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {4 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1"]}
{"time": 2.039534, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {7 {3 {0} {2}}}) -> 2"]}
{"time": 0.588065, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (/ 1 c))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {1 {4} {1}}) -> 2"]}
{"time": 2.145028, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {0 {1 {5}}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {0 {9 {4} {3}} {2 {3}}}}) -> 3"]}
{"time": 2.148836, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {9} {5 {1} {7}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {9 {4 {0} {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"]}
{"time": 2.257719, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {7} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1"]}
{"time": 2.268105, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {7} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {4 {7}} {1 {7} {8}}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1"]}
{"time": 2.301954, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7 {8 {9}} {5 {7} {3}}} {6 {1 {3} {5}}}}) -> 5", "(count_leaves {5 {1 {8} {4}}}) -> 2", "(count_leaves {6 {9 {2 {0} {6}} {1 {2} {8}}} {1}}) -> 5", "(count_leaves {5}) -> 1", "(count_leaves {0 {7}}) -> 1"]}
{"time": 2.31034, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {1 {5 {6}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4}}) -> 1", "(count_leaves {3 {3 {1 {5} {8}} {8}} {3}}) -> 4", "(count_leaves {3 {1} {3}}) -> 2"]}
{"time": 2.302929, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {9 {4} {8}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"]}
{"time": 2.425778, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) c) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {0 {5}} {7 {7} {7}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {0}) -> 1"]}
{"time": 1.010945, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (car d)) c)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {3} {9 {7} {4}}}) -> 3", "(count_leaves {8 {1}}) -> 1"]}
{"time": 2.223855, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {6 {0} {5}} {1}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {2 {2 {0 {0} {7}}} {4}}) -> 3", "(count_leaves {1 {4} {6}}) -> 2", "(count_leaves {8}) -> 1"]}
{"time": 1.056982, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {3} {9}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"]}
{"time": 1.01858, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) c) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {7} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.032142, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {0 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"]}
{"time": 2.534668, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {5}}) -> 1", "(count_leaves {7 {6 {0} {5 {1}}}}) -> 2", "(count_leaves {4 {6 {7} {2}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 2.210581, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {1 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {1 {1} {1}}} {6 {0}}}) -> 3"]}
{"time": 2.067009, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {6 {6} {5}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {7 {0} {6 {2 {7}}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {9 {2}}) -> 1"]}
