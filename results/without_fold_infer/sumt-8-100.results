{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "time": 0.042063}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {8}}) -> 12", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 3.958489}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {3} {6}}) -> 11", "(sumt {7 {0 {8}} {8}}) -> 23", "(sumt {}) -> 0", "(sumt {9 {6}}) -> 15", "(sumt {5 {0 {9}}}) -> 14", "(sumt {2}) -> 2"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.992403}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {6 {4} {7}}) -> 17", "(sumt {5}) -> 5", "(sumt {2 {9}}) -> 11"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.964101}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {3}}) -> 7", "(sumt {5}) -> 5", "(sumt {9}) -> 9", "(sumt {6 {3}}) -> 9", "(sumt {}) -> 0", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 4.01694}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {1}}) -> 2", "(sumt {3 {4 {7} {4}}}) -> 18", "(sumt {9}) -> 9", "(sumt {9 {3} {5 {9 {2}} {1 {7} {0}}}}) -> 36", "(sumt {0 {3 {2} {7 {4}}}}) -> 16"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.294495}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {4}}) -> 9", "(sumt {1 {2} {8 {1}}}) -> 12", "(sumt {0 {9}}) -> 9", "(sumt {3}) -> 3", "(sumt {3 {5}}) -> 8", "(sumt {0 {0} {8 {5 {5}} {8}}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.278821}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {3 {9}}) -> 12", "(sumt {5 {8 {5 {2}} {4 {6} {4}}} {6}}) -> 40", "(sumt {2 {6}}) -> 8", "(sumt {1 {3} {5}}) -> 9", "(sumt {0 {9 {7 {6} {3}} {1}}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.514509}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {5} {9}}) -> 15", "(sumt {2 {9 {6}} {7 {5 {8}}}}) -> 37", "(sumt {5}) -> 5", "(sumt {0 {2} {1}}) -> 3", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.109821}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {3 {7} {0}}}) -> 16", "(sumt {3 {7}}) -> 10", "(sumt {7}) -> 7", "(sumt {8}) -> 8", "(sumt {4}) -> 4", "(sumt {4 {6 {4 {1} {0}} {0 {0}}}}) -> 15"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.256992}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {9} {4}}) -> 15", "(sumt {1 {3} {6}}) -> 10", "(sumt {2 {6} {5}}) -> 13", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.26309}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {4 {6 {0} {4}}} {5 {9}}}) -> 34", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {4 {0 {4 {4}}}}) -> 12", "(sumt {3 {1} {9}}) -> 13", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.421718}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {1 {2} {4}}) -> 7", "(sumt {2 {7 {6}}}) -> 15", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.210814}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {0 {3} {5}}) -> 8", "(sumt {4 {1} {6 {2} {3}}}) -> 16", "(sumt {5 {1}}) -> 6", "(sumt {8}) -> 8", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.503235}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {7 {1} {5}}) -> 13", "(sumt {5 {4 {2 {8} {9}} {5 {0}}} {9 {9 {4} {3}}}}) -> 58", "(sumt {}) -> 0", "(sumt {1 {1 {5} {9 {6} {8}}} {0 {3 {5} {3}} {9 {7}}}}) -> 57", "(sumt {0 {7 {5 {2} {9}}} {8 {4} {0}}}) -> 35"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.437469}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {9 {5} {4 {0} {0}}}}) -> 25", "(sumt {8 {3}}) -> 11", "(sumt {1 {9 {5}} {6 {8}}}) -> 29", "(sumt {7}) -> 7", "(sumt {5 {9 {7}}}) -> 21", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.504996}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {2 {2} {7}}) -> 11"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.581884}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {6}}) -> 8", "(sumt {4}) -> 4", "(sumt {1}) -> 1", "(sumt {7 {3 {2}} {3 {6}}}) -> 21", "(sumt {2 {1} {6}}) -> 9", "(sumt {3 {7 {9}}}) -> 19"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.277143}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {7 {6} {2 {8} {0}}}) -> 23", "(sumt {}) -> 0", "(sumt {1 {3 {7 {5}} {8 {9}}} {4 {5 {3}} {7 {4} {3}}}}) -> 59", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.836782}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3 {1}}) -> 4", "(sumt {4 {3 {6 {8} {2}} {8 {1}}}}) -> 32", "(sumt {6 {7} {9}}) -> 22", "(sumt {0}) -> 0", "(sumt {2 {8}}) -> 10"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.817312}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {6} {9}}) -> 21", "(sumt {4 {7 {2 {8}} {4 {3} {7}}}}) -> 35", "(sumt {0 {8 {2} {6}}}) -> 16", "(sumt {9 {8 {1} {1}}}) -> 19", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.765838}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0 {2 {3} {6}} {1 {5}}}) -> 17", "(sumt {0 {7}}) -> 7", "(sumt {6 {3}}) -> 9", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {7 {4}}) -> 11"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.784335}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {3} {7 {2} {5}}}) -> 21", "(sumt {7 {2} {7 {7} {9}}}) -> 32", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {2}}) -> 4", "(sumt {0 {0}}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.288654}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {2 {5}}) -> 7", "(sumt {7 {9}}) -> 16", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {8 {1 {8}}}) -> 17"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 4.831663}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {2}) -> 2", "(sumt {7 {4} {1}}) -> 12"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.937601}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {0 {0} {8}} {4 {3}}}) -> 24", "(sumt {1 {8}}) -> 9", "(sumt {0 {6 {8 {6}}}}) -> 20", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.13934}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {2} {7}}) -> 13", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {2} {6}}) -> 10", "(sumt {1}) -> 1", "(sumt {8}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.021311}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {5} {3}}) -> 10", "(sumt {5 {6 {0}}}) -> 11", "(sumt {7 {4}}) -> 11", "(sumt {8 {1} {9}}) -> 18"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.08113}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {7 {8 {6 {2}}}}) -> 23", "(sumt {1}) -> 1", "(sumt {4 {8}}) -> 12", "(sumt {8 {3 {9} {4}}}) -> 24", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.204575}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3 {9}}) -> 12", "(sumt {6 {1 {5}}}) -> 12", "(sumt {7 {4 {7 {9}}}}) -> 27", "(sumt {7 {7} {2}}) -> 16", "(sumt {7 {5}}) -> 12", "(sumt {6}) -> 6"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.410943}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {9} {0}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.593328}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {2 {9 {8 {5}}} {9 {4 {2}} {4 {7}}}}) -> 50", "(sumt {2 {3 {1}}}) -> 6", "(sumt {}) -> 0", "(sumt {2 {2 {5 {8} {8}} {1 {0}}} {0}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.499571}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {6 {9} {8}}}) -> 24", "(sumt {5 {4}}) -> 9", "(sumt {0}) -> 0", "(sumt {2 {7 {6 {6} {7}} {4}}}) -> 32", "(sumt {}) -> 0", "(sumt {7}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.66343}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {2} {9}}) -> 18", "(sumt {4 {3 {3} {8}}}) -> 18", "(sumt {0}) -> 0", "(sumt {3 {8} {9}}) -> 20", "(sumt {4 {6 {1 {2} {3}} {3}}}) -> 19", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.777383}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {2}}) -> 4", "(sumt {8 {8}}) -> 16", "(sumt {}) -> 0", "(sumt {7 {0 {1}} {1 {9} {5}}}) -> 23", "(sumt {7 {7} {7}}) -> 21", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.733347}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {0 {1} {2}}}) -> 9", "(sumt {2 {0}}) -> 2", "(sumt {2 {0} {7}}) -> 9", "(sumt {0 {4 {3} {5}} {8 {9} {2}}}) -> 31", "(sumt {6}) -> 6", "(sumt {9 {9} {5 {8} {7 {0}}}}) -> 38"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.844754}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {5 {2} {3}}}) -> 19", "(sumt {6 {5}}) -> 11", "(sumt {8 {9} {7 {9 {9} {5}}}}) -> 47", "(sumt {6 {3 {9 {3}} {8}}}) -> 29", "(sumt {}) -> 0", "(sumt {7}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.521543}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {1}}) -> 10", "(sumt {7 {5 {0 {3}}}}) -> 15", "(sumt {5 {9 {0}}}) -> 14", "(sumt {}) -> 0", "(sumt {1 {0}}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 4.255414}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {6}}) -> 15", "(sumt {7 {6 {3} {4}} {8 {9}}}) -> 37", "(sumt {5}) -> 5", "(sumt {0 {1} {6 {2}}}) -> 9", "(sumt {1}) -> 1", "(sumt {9 {4 {4} {7}}}) -> 24"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.178202}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {3 {8}} {9 {1}}}) -> 22", "(sumt {3 {7} {1}}) -> 11", "(sumt {6 {0 {2} {5}} {5 {8} {8}}}) -> 34", "(sumt {7}) -> 7", "(sumt {5 {1}}) -> 6", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.821668}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {3}) -> 3", "(sumt {4 {1}}) -> 5", "(sumt {3}) -> 3", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c 1)) c)) 0)) _) _)", "time": 3.752437}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {7 {8}} {6 {4} {4}}}) -> 31", "(sumt {5 {3 {4 {2}} {0 {5} {5}}} {6 {6} {6}}}) -> 42", "(sumt {8 {0 {5}} {3 {9}}}) -> 25", "(sumt {7 {7} {6}}) -> 20", "(sumt {8 {8} {7}}) -> 23"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.373907}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {6 {5 {5}} {7 {2}}} {5 {7 {3} {9}}}}) -> 53", "(sumt {2 {0 {4} {2}} {8 {3} {4}}}) -> 23", "(sumt {6}) -> 6", "(sumt {4}) -> 4", "(sumt {7 {4}}) -> 11"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.170628}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {8 {0 {1} {8}} {9 {1} {6}}}) -> 33", "(sumt {6 {3 {5}}}) -> 14", "(sumt {3 {1 {9}} {8 {2} {4}}}) -> 27", "(sumt {2 {7} {9}}) -> 18", "(sumt {2}) -> 2"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.252475}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {9}) -> 9", "(sumt {0 {1 {9}}}) -> 10", "(sumt {0 {9 {6}} {3 {5} {5}}}) -> 28", "(sumt {5 {4}}) -> 9", "(sumt {1 {3} {8}}) -> 12"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.189349}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {6}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {1}) -> 1", "(sumt {5 {9}}) -> 14"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 5.333741}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {3 {5} {9}}) -> 17", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {4 {3}}) -> 7", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.534942}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {3 {6} {7}}) -> 16", "(sumt {0 {3 {3 {7} {2}} {9 {8} {1}}}}) -> 33", "(sumt {1 {5}}) -> 6", "(sumt {}) -> 0", "(sumt {7 {5}}) -> 12"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.995459}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {5} {8 {9} {7}}}) -> 35", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {8}) -> 8", "(sumt {0 {4}}) -> 4", "(sumt {0 {2 {9 {6} {0}} {4 {5}}}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.065616}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {9 {5}} {0 {7}}}) -> 30", "(sumt {3 {2}}) -> 5", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {6}}) -> 15", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.449368}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {4 {6 {7} {6}} {1 {7}}} {4}}) -> 41", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {8 {1 {1} {2}} {1}}) -> 13", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.424678}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {0} {8 {1}}}) -> 11", "(sumt {1}) -> 1", "(sumt {8 {6 {0} {3 {3}}} {4 {7}}}) -> 31", "(sumt {6 {2 {5} {2}} {0 {4} {6}}}) -> 25"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.906983}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "time": 0.058902}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {8} {2}}) -> 18", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {1}) -> 1", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 2.954744}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {1}}) -> 8", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c 1)) c)) 0)) _) _)", "time": 4.405276}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8 {2}}) -> 10", "(sumt {7 {8} {7}}) -> 22", "(sumt {5 {1} {7}}) -> 13", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {5}) -> 5"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.589224}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "time": 0.089131}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {2 {8}} {2 {3}}}) -> 20", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {7}) -> 7", "(sumt {8 {3 {6} {8}}}) -> 25"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.507074}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "time": 0.051047}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {4 {7}}) -> 11", "(sumt {9 {5 {2 {5}}}}) -> 21", "(sumt {7 {9} {8}}) -> 24", "(sumt {1 {7 {3}} {3}}) -> 14", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.062851}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {8 {7 {1}}}) -> 16", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c c)) c)) 0)) _) _)", "time": 3.926223}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {1 {9 {4} {0}} {6 {5} {3}}} {0 {8 {2} {3}} {5}}}) -> 52", "(sumt {8 {1} {0}}) -> 9", "(sumt {}) -> 0", "(sumt {1 {1}}) -> 2", "(sumt {4}) -> 4", "(sumt {4 {1} {6}}) -> 11"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.320159}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {0}}) -> 2", "(sumt {6 {1 {1}} {7 {0 {2}} {4}}}) -> 21", "(sumt {}) -> 0", "(sumt {0 {9 {7}}}) -> 16", "(sumt {8}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.953326}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {3 {1 {7}} {3 {3 {1}}}}) -> 18", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {8} {7}}) -> 17"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.535072}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0 {1} {6 {8 {7}} {0 {8}}}}) -> 30", "(sumt {0 {3 {8} {5}}}) -> 16", "(sumt {4 {9}}) -> 13", "(sumt {3 {0}}) -> 3", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.907781}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {9} {5 {9} {2}}}) -> 33", "(sumt {5 {8} {9}}) -> 22", "(sumt {4 {5} {8}}) -> 17", "(sumt {0 {6 {2}}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.711416}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {6 {5}}}) -> 12", "(sumt {0 {9} {8}}) -> 17"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.983687}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {2 {8 {5} {4}}}) -> 19", "(sumt {}) -> 0", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.890942}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {4}) -> 4", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "time": 0.050748}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {2 {9}}}) -> 13", "(sumt {4 {7 {4 {7}}} {5}}) -> 27", "(sumt {5}) -> 5", "(sumt {7 {7} {8}}) -> 22", "(sumt {5}) -> 5", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.41707}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {9 {0 {6}} {5}}) -> 20", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {0 {6} {0}}) -> 6", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.681568}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {8 {6}}}) -> 23", "(sumt {1 {6 {3} {3 {5} {3}}} {2}}) -> 23", "(sumt {8}) -> 8", "(sumt {3 {5 {4}}}) -> 12", "(sumt {5 {3 {3 {6} {7}}}}) -> 24", "(sumt {5 {3 {1 {6} {5}}}}) -> 20"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.110847}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {8 {2} {4}}) -> 14", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {0}}) -> 9", "(sumt {1 {5 {8}} {6 {6}}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.656295}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {5}) -> 5", "(sumt {3 {1}}) -> 4", "(sumt {5 {2 {9 {5} {6}}}}) -> 27", "(sumt {1 {3} {4}}) -> 8", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.820562}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {1 {9 {3}}}}) -> 22", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {7 {6 {4}} {7}}) -> 24", "(sumt {5 {5 {0}} {2 {2}}}) -> 14", "(sumt {7 {5} {0}}) -> 12"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.150002}
