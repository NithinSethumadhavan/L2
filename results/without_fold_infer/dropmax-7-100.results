{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.199401, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 3 2 5]) -> [3 2 5]", "(dropmax [5 4]) -> [4]", "(dropmax [0]) -> []", "(dropmax [6 1 6 1]) -> [1 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.202305, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 4]) -> [4]", "(dropmax [8 6 4]) -> [6 4]", "(dropmax [2 5 7]) -> [2 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.217236, "examples": ["(dropmax []) -> []", "(dropmax [7 2 9 9]) -> [7 2]", "(dropmax [4 9 4]) -> [4 4]", "(dropmax [4]) -> []", "(dropmax [8 3 3]) -> [3 3]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.196413, "examples": ["(dropmax []) -> []", "(dropmax [8 6 4 8]) -> [6 4]", "(dropmax [0 7 9 7 0]) -> [0 7 7 0]", "(dropmax [6 5 7 3]) -> [6 5 3]", "(dropmax [5 3 6 0 3]) -> [5 3 0 3]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.240799, "examples": ["(dropmax []) -> []", "(dropmax [2 7 7]) -> [2]", "(dropmax [9 3 3]) -> [3 3]", "(dropmax [5 4 8 7]) -> [5 4 7]", "(dropmax [1 3 3 3 3]) -> [1]", "(dropmax [6 5 9 0]) -> [6 5 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.207506, "examples": ["(dropmax []) -> []", "(dropmax [7 3 7 2 5]) -> [3 2 5]", "(dropmax [5 6 9 9]) -> [5 6]", "(dropmax [5 3 5 3]) -> [3 3]", "(dropmax [9 0 9 5 2]) -> [0 5 2]", "(dropmax [5 6]) -> [5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.217178, "examples": ["(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [9 4 3]) -> [4 3]", "(dropmax [4 4]) -> []", "(dropmax [1]) -> []", "(dropmax [9 2 0 3]) -> [2 0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.207487, "examples": ["(dropmax []) -> []", "(dropmax [7 4 1 2]) -> [4 1 2]", "(dropmax []) -> []", "(dropmax [9 9 6]) -> [6]", "(dropmax [6]) -> []", "(dropmax [5 0 8]) -> [5 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184667, "examples": ["(dropmax []) -> []", "(dropmax [5 8 1 0 5]) -> [5 1 0 5]", "(dropmax [6 8 2 8 1]) -> [6 2 1]", "(dropmax [4 1 2]) -> [1 2]", "(dropmax [9 4 4 3 5]) -> [4 4 3 5]", "(dropmax [2 7 9]) -> [2 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.201395, "examples": ["(dropmax []) -> []", "(dropmax [1 7]) -> [1]", "(dropmax [2 5]) -> [2]", "(dropmax [7 1]) -> [1]", "(dropmax [3 3]) -> []", "(dropmax [2 7]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.223699, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [6 2]) -> [2]", "(dropmax [6 4 6 8]) -> [6 4 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.21872, "examples": ["(dropmax []) -> []", "(dropmax [5 9 8 8 0]) -> [5 8 8 0]", "(dropmax []) -> []", "(dropmax [0 8 9 0 8]) -> [0 8 0 8]", "(dropmax [7 7 6]) -> [6]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.22969, "examples": ["(dropmax []) -> []", "(dropmax [0 3]) -> [0]", "(dropmax []) -> []", "(dropmax [5 8 2 0 3]) -> [5 2 0 3]", "(dropmax [8 1]) -> [1]", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.203053, "examples": ["(dropmax []) -> []", "(dropmax [4 6]) -> [4]", "(dropmax [5 3 1]) -> [3 1]", "(dropmax []) -> []", "(dropmax [4 5]) -> [4]", "(dropmax [6 3 6 0]) -> [3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.202604, "examples": ["(dropmax []) -> []", "(dropmax [7 9]) -> [7]", "(dropmax [2 7 3]) -> [2 3]", "(dropmax [1 8 3]) -> [1 3]", "(dropmax [4 4]) -> []", "(dropmax [6 3]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.224773, "examples": ["(dropmax []) -> []", "(dropmax [1 0 8 6 0]) -> [1 0 6 0]", "(dropmax [1 0 8 9 8]) -> [1 0 8 8]", "(dropmax [9 0 2]) -> [0 2]", "(dropmax [4 5 2]) -> [4 2]", "(dropmax [2 0 4 0]) -> [2 0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.044626, "examples": ["(dropmax []) -> []", "(dropmax [6 3 0]) -> [3 0]", "(dropmax []) -> []", "(dropmax [6 0]) -> [0]", "(dropmax [7]) -> []", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187115, "examples": ["(dropmax []) -> []", "(dropmax [2 6 9]) -> [2 6]", "(dropmax []) -> []", "(dropmax [6 4 6]) -> [4]", "(dropmax [3 0]) -> [0]", "(dropmax [8 8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.234711, "examples": ["(dropmax []) -> []", "(dropmax [9 3 1 9 5]) -> [3 1 5]", "(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [2 7 8]) -> [2 7]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.209646, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 7]) -> [7]", "(dropmax [9]) -> []", "(dropmax [4 8 4 7]) -> [4 4 7]", "(dropmax [3 9 1]) -> [3 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.240767, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [1 1 7 6 3]) -> [1 1 6 3]", "(dropmax [5 0 5 6]) -> [5 0 5]", "(dropmax [8 3]) -> [3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.191997, "examples": ["(dropmax []) -> []", "(dropmax [0 0 5 3]) -> [0 0 3]", "(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [2 3 5 8]) -> [2 3 5]", "(dropmax [1 0 6 6 4]) -> [1 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.257636, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [2 8 3 4 7]) -> [2 3 4 7]", "(dropmax [8 0 2 3]) -> [0 2 3]", "(dropmax [1]) -> []", "(dropmax [6 5 1 0]) -> [5 1 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.21721, "examples": ["(dropmax []) -> []", "(dropmax [8 8 3 1 1]) -> [3 1 1]", "(dropmax [1 1 8]) -> [1 1]", "(dropmax []) -> []", "(dropmax [9 7]) -> [7]", "(dropmax [6 1 8 7 2]) -> [6 1 7 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.237719, "examples": ["(dropmax []) -> []", "(dropmax [3 8 5 3 3]) -> [3 5 3 3]", "(dropmax [4 2 2 8 4]) -> [4 2 2 4]", "(dropmax [4 9 7 8]) -> [4 7 8]", "(dropmax [6 8]) -> [6]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.244999, "examples": ["(dropmax []) -> []", "(dropmax [0 2 7]) -> [0 2]", "(dropmax [0 2 1]) -> [0 1]", "(dropmax []) -> []", "(dropmax [0 1]) -> [0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.212973, "examples": ["(dropmax []) -> []", "(dropmax [1 8]) -> [1]", "(dropmax []) -> []", "(dropmax [3 3]) -> []", "(dropmax [5 0 9 6 5]) -> [5 0 6 5]", "(dropmax [9 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.251871, "examples": ["(dropmax []) -> []", "(dropmax [4 3 8 2]) -> [4 3 2]", "(dropmax [3 5 4 7]) -> [3 5 4]", "(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax [6 1 2 2 3]) -> [1 2 2 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.247965, "examples": ["(dropmax []) -> []", "(dropmax [1 2 7]) -> [1 2]", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [1 9 3 9]) -> [1 3]", "(dropmax [2 3 6 6 7]) -> [2 3 6 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.246559, "examples": ["(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [7]) -> []", "(dropmax []) -> []", "(dropmax [1 2 9 7]) -> [1 2 7]", "(dropmax [1 3 8]) -> [1 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.235311, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [8 5 8 6]) -> [5 6]", "(dropmax [3]) -> []", "(dropmax [9 8 2 9 0]) -> [8 2 0]", "(dropmax [3 0 6 7 6]) -> [3 0 6 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.255462, "examples": ["(dropmax []) -> []", "(dropmax [3 0 2 3 2]) -> [0 2 2]", "(dropmax [2 1]) -> [1]", "(dropmax [8 5]) -> [5]", "(dropmax [1 6]) -> [1]", "(dropmax [4 1 8]) -> [4 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184339, "examples": ["(dropmax []) -> []", "(dropmax [3 3 1 9 7]) -> [3 3 1 7]", "(dropmax []) -> []", "(dropmax [5 2 6 4 2]) -> [5 2 4 2]", "(dropmax [7 7 2 1]) -> [2 1]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 1 c)))) _) _)", "name": "dropmax", "time": 0.05925, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [0]) -> []", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [4 1 4]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185365, "examples": ["(dropmax []) -> []", "(dropmax [6 8]) -> [6]", "(dropmax [8]) -> []", "(dropmax [6 0 6]) -> [0]", "(dropmax [9 9 8]) -> [8]", "(dropmax [1 9 8 4]) -> [1 8 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.188325, "examples": ["(dropmax []) -> []", "(dropmax [5 1]) -> [1]", "(dropmax [4 8 5]) -> [4 5]", "(dropmax []) -> []", "(dropmax [2 7 7 5 2]) -> [2 5 2]", "(dropmax [2 3 9 7]) -> [2 3 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185685, "examples": ["(dropmax []) -> []", "(dropmax [3 1]) -> [1]", "(dropmax [2 8 9]) -> [2 8]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 6 4 8 4]) -> [3 6 4 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.206731, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [1 9]) -> [1]", "(dropmax [6 4 2 9]) -> [6 4 2]", "(dropmax [6 8 4 5]) -> [6 4 5]", "(dropmax [2 6 7]) -> [2 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.232828, "examples": ["(dropmax []) -> []", "(dropmax [9 2 8 1]) -> [2 8 1]", "(dropmax [6 8 2 8]) -> [6 2]", "(dropmax []) -> []", "(dropmax [7 8 3 8 9]) -> [7 8 3 8]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.204636, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 1 7]) -> [0 1]", "(dropmax [9 4 5 2]) -> [4 5 2]", "(dropmax []) -> []", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.198795, "examples": ["(dropmax []) -> []", "(dropmax [1 2 6]) -> [1 2]", "(dropmax [1 3 6]) -> [1 3]", "(dropmax [1 8 2 1 6]) -> [1 2 1 6]", "(dropmax [3 6 6]) -> [3]", "(dropmax [8 2 7 5]) -> [2 7 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.207346, "examples": ["(dropmax []) -> []", "(dropmax [2 5 1 2 1]) -> [2 1 2 1]", "(dropmax [9 8 2 0]) -> [8 2 0]", "(dropmax [1]) -> []", "(dropmax [9 4]) -> [4]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.232685, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 3 1 4 7]) -> [2 3 1 4]", "(dropmax [7 8]) -> [7]", "(dropmax [9 2]) -> [2]", "(dropmax [5 8 1 5 8]) -> [5 1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.216782, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [8 5 0]) -> [5 0]", "(dropmax []) -> []", "(dropmax [8 0 6 5 3]) -> [0 6 5 3]", "(dropmax [4 5 4]) -> [4 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.234974, "examples": ["(dropmax []) -> []", "(dropmax [8 3 9 1]) -> [8 3 1]", "(dropmax [0 4 3 2]) -> [0 3 2]", "(dropmax [0 0 3 5 1]) -> [0 0 3 1]", "(dropmax []) -> []", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.241923, "examples": ["(dropmax []) -> []", "(dropmax [3 2 9 2]) -> [3 2 2]", "(dropmax [5 8]) -> [5]", "(dropmax [3 8 5 0]) -> [3 5 0]", "(dropmax []) -> []", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.236647, "examples": ["(dropmax []) -> []", "(dropmax [1 7 0 4]) -> [1 0 4]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 0 0]) -> [0 0]", "(dropmax [3 7 6 1]) -> [3 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.212334, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [3]) -> []", "(dropmax [1 5 0 4]) -> [1 0 4]", "(dropmax [6 2 5]) -> [2 5]", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.171413, "examples": ["(dropmax []) -> []", "(dropmax [5 9 9 2]) -> [5 2]", "(dropmax [3 1 3]) -> [1]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185461, "examples": ["(dropmax []) -> []", "(dropmax [1 9 5]) -> [1 5]", "(dropmax [0 0 1 1 2]) -> [0 0 1 1]", "(dropmax [0 8]) -> [0]", "(dropmax []) -> []", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.042644, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [9 7 7 5]) -> [7 7 5]", "(dropmax []) -> []", "(dropmax [8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.281374, "examples": ["(dropmax []) -> []", "(dropmax [4 7 9 9 4]) -> [4 7 4]", "(dropmax [1 5 9 7]) -> [1 5 7]", "(dropmax [2]) -> []", "(dropmax [8 0 1 6 1]) -> [0 1 6 1]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.249273, "examples": ["(dropmax []) -> []", "(dropmax [4 3 6]) -> [4 3]", "(dropmax [1 4 0 8]) -> [1 4 0]", "(dropmax [3 8]) -> [3]", "(dropmax [4 8]) -> [4]", "(dropmax [2 9 6 5 2]) -> [2 6 5 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.18923, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [7 3]) -> [3]", "(dropmax []) -> []", "(dropmax [4 9 3 5 9]) -> [4 3 5]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.197769, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [7 1 5 9 9]) -> [7 1 5]", "(dropmax [9]) -> []", "(dropmax [8 1 6 3]) -> [1 6 3]", "(dropmax [4 9 5]) -> [4 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.242537, "examples": ["(dropmax []) -> []", "(dropmax [2 7 4 2]) -> [2 4 2]", "(dropmax []) -> []", "(dropmax [7 5 4 9]) -> [7 5 4]", "(dropmax [7 2 8 4]) -> [7 2 4]", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.268603, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [9 5]) -> [5]", "(dropmax [2 1 2 8]) -> [2 1 2]", "(dropmax [6 4 5 3 5]) -> [4 5 3 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.199774, "examples": ["(dropmax []) -> []", "(dropmax [2 2 1]) -> [1]", "(dropmax [4 6 0 3]) -> [4 0 3]", "(dropmax [2]) -> []", "(dropmax [1 7 8 4]) -> [1 7 4]", "(dropmax [5 6 1 8 5]) -> [5 6 1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.270246, "examples": ["(dropmax []) -> []", "(dropmax [3 3 8 8 4]) -> [3 3 4]", "(dropmax [5]) -> []", "(dropmax [8 5 6 7]) -> [5 6 7]", "(dropmax [6]) -> []", "(dropmax [4 1 4 7]) -> [4 1 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.251913, "examples": ["(dropmax []) -> []", "(dropmax [7 5 6 6 3]) -> [5 6 6 3]", "(dropmax [0 6 7 3]) -> [0 6 3]", "(dropmax [8 0]) -> [0]", "(dropmax [7 6 9]) -> [7 6]", "(dropmax [4 3 3 0 4]) -> [3 3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.267357, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 0 1 4 8]) -> [0 1 4]", "(dropmax [3 0 1 5 9]) -> [3 0 1 5]", "(dropmax [6 1]) -> [1]", "(dropmax [0 7 5 8]) -> [0 7 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.266748, "examples": ["(dropmax []) -> []", "(dropmax [4 5 8 1]) -> [4 5 1]", "(dropmax []) -> []", "(dropmax [8 5]) -> [5]", "(dropmax []) -> []", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.252008, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [5]) -> []", "(dropmax [8 9 5]) -> [8 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187077, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [7 0 7]) -> [0]", "(dropmax [2 1 8 8]) -> [2 1]", "(dropmax [8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.20324, "examples": ["(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax [7]) -> []", "(dropmax [1 6 4 5 8]) -> [1 6 4 5]", "(dropmax [4 4 1]) -> [1]", "(dropmax [9 7 0 7]) -> [7 0 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.18702, "examples": ["(dropmax []) -> []", "(dropmax [0 0 1 0]) -> [0 0 0]", "(dropmax [2 9 7 8 9]) -> [2 7 8]", "(dropmax [3 9 2 2]) -> [3 2 2]", "(dropmax [5 3]) -> [3]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000807, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [6]) -> []", "(dropmax [0]) -> []", "(dropmax []) -> []", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.030721, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [7 0 6 1]) -> [0 6 1]", "(dropmax [7 6 3]) -> [6 3]", "(dropmax [7]) -> []", "(dropmax [7 3]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.168226, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 2 0 7]) -> [2 2 0]", "(dropmax [4 8]) -> [4]", "(dropmax []) -> []", "(dropmax [3 3 0 2]) -> [0 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.190532, "examples": ["(dropmax []) -> []", "(dropmax [2 7 4 2]) -> [2 4 2]", "(dropmax [8 6]) -> [6]", "(dropmax [1]) -> []", "(dropmax [7 6 4]) -> [6 4]", "(dropmax [4 9 2 0]) -> [4 2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.215077, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [6 7 5]) -> [6 5]", "(dropmax [6]) -> []", "(dropmax [2 6]) -> [2]", "(dropmax [4 6 2 7 1]) -> [4 6 2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.198196, "examples": ["(dropmax []) -> []", "(dropmax [3 2 3]) -> [2]", "(dropmax [4 5 2 8 2]) -> [4 5 2 2]", "(dropmax [7]) -> []", "(dropmax []) -> []", "(dropmax [2 0 2]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.219372, "examples": ["(dropmax []) -> []", "(dropmax [3 1]) -> [1]", "(dropmax [2 5 0]) -> [2 0]", "(dropmax [8]) -> []", "(dropmax [8 7 1]) -> [7 1]", "(dropmax [2 2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.241561, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [2 4]) -> [2]", "(dropmax [5 2 0 9 2]) -> [5 2 0 2]", "(dropmax [1]) -> []", "(dropmax [2 1 9 4]) -> [2 1 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.236295, "examples": ["(dropmax []) -> []", "(dropmax [5 9 7 7 3]) -> [5 7 7 3]", "(dropmax [4 5 1 2]) -> [4 1 2]", "(dropmax [9 5 9]) -> [5]", "(dropmax [8 5]) -> [5]", "(dropmax [8 1 8 5]) -> [1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189759, "examples": ["(dropmax []) -> []", "(dropmax [0 0]) -> []", "(dropmax [6 9 0]) -> [6 0]", "(dropmax [2 7 8 1]) -> [2 7 1]", "(dropmax [0 3 4 9 7]) -> [0 3 4 7]", "(dropmax [1 4 2 2 3]) -> [1 2 2 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.20376, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [7 5 0]) -> [5 0]", "(dropmax [1 7 9 1 5]) -> [1 7 1 5]", "(dropmax [0]) -> []", "(dropmax [4 6 4 9]) -> [4 6 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.22898, "examples": ["(dropmax []) -> []", "(dropmax [6 6 7 7 1]) -> [6 6 1]", "(dropmax [3 1]) -> [1]", "(dropmax []) -> []", "(dropmax [7 0 9 9]) -> [7 0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.236018, "examples": ["(dropmax []) -> []", "(dropmax [9 1 4 5 5]) -> [1 4 5 5]", "(dropmax [0 8 6]) -> [0 6]", "(dropmax [9]) -> []", "(dropmax [8 4 4 0]) -> [4 4 0]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.199956, "examples": ["(dropmax []) -> []", "(dropmax [1 2 7 3 8]) -> [1 2 7 3]", "(dropmax [0]) -> []", "(dropmax [7]) -> []", "(dropmax [5 5]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.231489, "examples": ["(dropmax []) -> []", "(dropmax [8 1 3 2 8]) -> [1 3 2]", "(dropmax [6]) -> []", "(dropmax [1 1 4 9]) -> [1 1 4]", "(dropmax [6]) -> []", "(dropmax [6 4 3 0]) -> [4 3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.202278, "examples": ["(dropmax []) -> []", "(dropmax [9 4]) -> [4]", "(dropmax [2]) -> []", "(dropmax [0 7]) -> [0]", "(dropmax [2 3 6]) -> [2 3]", "(dropmax [3 0 1 4]) -> [3 0 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.211858, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 2 9 1 7]) -> [0 2 1 7]", "(dropmax [3 8 3 4 6]) -> [3 3 4 6]", "(dropmax [5 9 4 1 2]) -> [5 4 1 2]", "(dropmax [6 4 3]) -> [4 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.222038, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 3 6 5]) -> [3 6 5]", "(dropmax [1 7 9 8 3]) -> [1 7 8 3]", "(dropmax [9 5 5 0 0]) -> [5 5 0 0]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000608, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000778, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax [6 6]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178292, "examples": ["(dropmax []) -> []", "(dropmax [1 3]) -> [1]", "(dropmax [6 6 2 0 8]) -> [6 6 2 0]", "(dropmax [6 7]) -> [6]", "(dropmax [9 9 3 0 7]) -> [3 0 7]", "(dropmax [5 9 5]) -> [5 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.183671, "examples": ["(dropmax []) -> []", "(dropmax [4 4 7 7]) -> [4 4]", "(dropmax [7]) -> []", "(dropmax [3 2 4 5 0]) -> [3 2 4 0]", "(dropmax [2 5 7 7]) -> [2 5]", "(dropmax [2 8 2]) -> [2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.186472, "examples": ["(dropmax []) -> []", "(dropmax [0 3 5]) -> [0 3]", "(dropmax [3]) -> []", "(dropmax [9]) -> []", "(dropmax [3 9 3]) -> [3 3]", "(dropmax [8 8 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.20813, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [2 3 4 9]) -> [2 3 4]", "(dropmax [9]) -> []", "(dropmax [7 9 4]) -> [7 4]", "(dropmax [3 8]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167095, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [3 3 6 7]) -> [3 3 6]", "(dropmax [6 5 2]) -> [5 2]", "(dropmax [5 6 0 5 1]) -> [5 0 5 1]", "(dropmax [3 0 5]) -> [3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185271, "examples": ["(dropmax []) -> []", "(dropmax [3 6]) -> [3]", "(dropmax [5 9 5 6]) -> [5 5 6]", "(dropmax []) -> []", "(dropmax [0 4 3 8]) -> [0 4 3]", "(dropmax [0 5]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.193956, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [1 3 6]) -> [1 3]", "(dropmax [9 0 7]) -> [0 7]", "(dropmax []) -> []", "(dropmax [4 9 9 8 9]) -> [4 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.169294, "examples": ["(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax []) -> []", "(dropmax [0 1 9 5 9]) -> [0 1 5]", "(dropmax []) -> []", "(dropmax [1 2]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.186065, "examples": ["(dropmax []) -> []", "(dropmax [5 9]) -> [5]", "(dropmax [5 3 3 2]) -> [3 3 2]", "(dropmax [6 4 0 4]) -> [4 0 4]", "(dropmax [8 7 6 3]) -> [7 6 3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.204843, "examples": ["(dropmax []) -> []", "(dropmax [0 8 2]) -> [0 2]", "(dropmax [0 0]) -> []", "(dropmax [6]) -> []", "(dropmax []) -> []", "(dropmax [2 5 0 2 8]) -> [2 5 0 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179267, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [5 1 5 4]) -> [1 4]", "(dropmax [7 7 1]) -> [1]", "(dropmax [0 6]) -> [0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.126554, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [6 4 7 2]) -> [6 4 2]", "(dropmax [7 0 9]) -> [7 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.123184, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [4 7 9 6]) -> [4 7 6]", "(dropmax [3 9 1]) -> [3 1]", "(dropmax [6 0 8 2 0]) -> [6 0 2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.115423, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [5]) -> []", "(dropmax [1 6 4 5 9]) -> [1 6 4 5]", "(dropmax [5 4 8]) -> [5 4]", "(dropmax [7 5 1 9]) -> [7 5 1]"]}
