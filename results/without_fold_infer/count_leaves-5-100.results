{"time": 0.036615, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {9 {7}}) -> 1"]}
{"time": 0.04537, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.036803, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.032193, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {7 {5}}) -> 1"]}
{"time": 0.052894, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1"]}
{"time": 0.034528, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {1 {0 {3} {1}}} {5}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.046067, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.184786, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {4} {1}}) -> 2", "(count_leaves {9 {6 {7} {1}}}) -> 2", "(count_leaves {5 {5} {4}}) -> 2"]}
{"time": 0.330056, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (value (car (children b)))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2 {2}} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {9 {7} {2}} {6 {9}}} {5 {4 {8} {1}}}}) -> 5"]}
{"time": 0.201823, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {9 {2} {9 {3}}}}) -> 2"]}
{"time": 0.190186, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 c)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {6 {0 {4} {9}} {4 {6}}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.055423, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.032822, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (% 1 c))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {4 {7 {4}} {5 {2}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.494777, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {4 {0} {7}}} {6 {7 {5}} {3 {0}}}}) -> 4", "(count_leaves {}) -> 0"]}
{"time": 1.479441, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {5} {9}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.532164, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {5}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {6} {7}}) -> 2"]}
{"time": 0.053955, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"]}
{"time": 1.735331, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {5}}) -> 1", "(count_leaves {7 {1 {6} {0 {4}}} {3 {0 {6} {6}} {9 {4} {5}}}}) -> 6", "(count_leaves {8 {9}}) -> 1"]}
{"time": 1.833387, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {2} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"]}
{"time": 0.062258, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.842379, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {5 {7} {2}} {9 {7} {7}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {5 {9} {3}}) -> 2"]}
{"time": 1.499691, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (+ 1 1))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {4 {6}}} {0 {5} {3 {8}}}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 0.031256, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2}) -> 1"]}
{"time": 0.030044, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {0 {8}}}) -> 1", "(count_leaves {8 {0}}) -> 1", "(count_leaves {5 {3}}) -> 1"]}
{"time": 0.034817, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 0.022847, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.030055, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7}) -> 1"]}
{"time": 0.035035, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1"]}
{"time": 1.992884, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2 {9}} {7 {0} {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {5} {3}}) -> 2"]}
{"time": 2.089804, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {2} {8 {6} {4}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {8 {5}}) -> 1"]}
{"time": 1.22534, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {8 {3 {2 {2} {4}} {0}}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 2.024973, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {3 {7} {7}} {8 {8 {8} {8}}}}) -> 4", "(count_leaves {1 {2}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.044456, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.046844, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {9}}) -> 1", "(count_leaves {1 {7}}) -> 1", "(count_leaves {8}) -> 1"]}
{"time": 1.212312, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {7} {3 {0}}}) -> 2", "(count_leaves {3 {0 {8 {6} {3}}} {8}}) -> 3", "(count_leaves {3 {0 {3} {0 {5}}} {5}}) -> 3"]}
{"time": 0.037688, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {9}) -> 1"]}
{"time": 1.939148, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {3} {8 {8 {5} {8}}}}) -> 3", "(count_leaves {9 {4}}) -> 1", "(count_leaves {5 {7 {4} {7}} {6 {1}}}) -> 3"]}
{"time": 0.050059, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1"]}
{"time": 0.195659, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3 {8 {8} {3}}}}) -> 2", "(count_leaves {5 {4} {5}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.709032, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {4 {4 {3} {5}} {9}}) -> 3", "(count_leaves {1 {4} {3}}) -> 2"]}
{"time": 2.129026, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {1} {9 {5} {6 {7} {9}}}}) -> 4", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.326785, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (value (car (children b)))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {5} {2 {4 {6} {3}} {5 {2} {0}}}}) -> 5", "(count_leaves {}) -> 0"]}
{"time": 1.237276, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {2 {7} {5}} {9}}) -> 3", "(count_leaves {5 {6} {2}}) -> 2", "(count_leaves {5 {0} {3}}) -> 2"]}
