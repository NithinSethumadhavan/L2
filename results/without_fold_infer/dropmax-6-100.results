{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.049156, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [5]) -> []", "(dropmax [6 5]) -> [5]", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.228566, "examples": ["(dropmax []) -> []", "(dropmax [6 1 3]) -> [1 3]", "(dropmax [1 2]) -> [1]", "(dropmax [9]) -> []", "(dropmax [6]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187742, "examples": ["(dropmax []) -> []", "(dropmax [5 2 7]) -> [5 2]", "(dropmax [6 3 6 0]) -> [3 0]", "(dropmax [5 2 0 7 3]) -> [5 2 0 3]", "(dropmax [1 5]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.21658, "examples": ["(dropmax []) -> []", "(dropmax [8 6 8 7]) -> [6 7]", "(dropmax [3 1 0]) -> [1 0]", "(dropmax [9 9]) -> []", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.26048, "examples": ["(dropmax []) -> []", "(dropmax [6 2 5 4 0]) -> [2 5 4 0]", "(dropmax [9 3 9 6]) -> [3 6]", "(dropmax [9 7]) -> [7]", "(dropmax [3 2 0 1]) -> [2 0 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.195592, "examples": ["(dropmax []) -> []", "(dropmax [3 2 4 1 8]) -> [3 2 4 1]", "(dropmax [7 7 0 6]) -> [0 6]", "(dropmax [5 1 2 4 9]) -> [5 1 2 4]", "(dropmax [1 4 0]) -> [1 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.208673, "examples": ["(dropmax []) -> []", "(dropmax [9 9 4 0]) -> [4 0]", "(dropmax [3 6 5 3]) -> [3 5 3]", "(dropmax [8 4 8 2 1]) -> [4 2 1]", "(dropmax [3 6]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.229936, "examples": ["(dropmax []) -> []", "(dropmax [1 8 0 2 0]) -> [1 0 2 0]", "(dropmax [7 2]) -> [2]", "(dropmax [4 3 0]) -> [3 0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.216044, "examples": ["(dropmax []) -> []", "(dropmax [1 7]) -> [1]", "(dropmax [3]) -> []", "(dropmax [5 3 7 8]) -> [5 3 7]", "(dropmax [7 3]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.246668, "examples": ["(dropmax []) -> []", "(dropmax [4 9 5 3 1]) -> [4 5 3 1]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 0 3]) -> [0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.226461, "examples": ["(dropmax []) -> []", "(dropmax [3 0 6]) -> [3 0]", "(dropmax []) -> []", "(dropmax [6 1 9]) -> [6 1]", "(dropmax [8 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.2382, "examples": ["(dropmax []) -> []", "(dropmax [9 4 3 7 9]) -> [4 3 7]", "(dropmax [2 0 5 0]) -> [2 0 0]", "(dropmax [9 6]) -> [6]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.224747, "examples": ["(dropmax []) -> []", "(dropmax [5 9 9 7 1]) -> [5 7 1]", "(dropmax [2]) -> []", "(dropmax [1]) -> []", "(dropmax [3 1 7]) -> [3 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.216402, "examples": ["(dropmax []) -> []", "(dropmax [4 6]) -> [4]", "(dropmax [7 1 6]) -> [1 6]", "(dropmax [3 5 9 3 2]) -> [3 5 3 2]", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.214405, "examples": ["(dropmax []) -> []", "(dropmax [5 1 9 6 6]) -> [5 1 6 6]", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [6 3 1]) -> [3 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.216248, "examples": ["(dropmax []) -> []", "(dropmax [6 0]) -> [0]", "(dropmax [3 9 1]) -> [3 1]", "(dropmax []) -> []", "(dropmax [3 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000765, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [8]) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.041252, "examples": ["(dropmax []) -> []", "(dropmax [5 3 3]) -> [3 3]", "(dropmax [9]) -> []", "(dropmax []) -> []", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.190753, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [8 6 8 9]) -> [8 6 8]", "(dropmax [1 0 5 8]) -> [1 0 5]", "(dropmax [6]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.190964, "examples": ["(dropmax []) -> []", "(dropmax [5 6 1 8]) -> [5 6 1]", "(dropmax [2 4 2]) -> [2 2]", "(dropmax [6 7 3]) -> [6 3]", "(dropmax [8 6]) -> [6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.25487, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [1 8 6]) -> [1 6]", "(dropmax []) -> []", "(dropmax [3 4 2 8]) -> [3 4 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.225682, "examples": ["(dropmax []) -> []", "(dropmax [7 0]) -> [0]", "(dropmax [9 9 8 6]) -> [8 6]", "(dropmax [7 3 6 0 4]) -> [3 6 0 4]", "(dropmax [0 8 5 0 3]) -> [0 5 0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.242724, "examples": ["(dropmax []) -> []", "(dropmax [9 7 5 4]) -> [7 5 4]", "(dropmax [5 0 9]) -> [5 0]", "(dropmax [2 9]) -> [2]", "(dropmax [0 1 1]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.256177, "examples": ["(dropmax []) -> []", "(dropmax [4 0 7 2 8]) -> [4 0 7 2]", "(dropmax [1 6]) -> [1]", "(dropmax [2 3 6 6 4]) -> [2 3 4]", "(dropmax [5 4]) -> [4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.244461, "examples": ["(dropmax []) -> []", "(dropmax [0 4 1]) -> [0 1]", "(dropmax [6]) -> []", "(dropmax [8 1]) -> [1]", "(dropmax [4 8 9 0 3]) -> [4 8 0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.220579, "examples": ["(dropmax []) -> []", "(dropmax [5 8 4]) -> [5 4]", "(dropmax [6 0 7 9 6]) -> [6 0 7 6]", "(dropmax [0 0]) -> []", "(dropmax [1 2]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.200865, "examples": ["(dropmax []) -> []", "(dropmax [4 9 7 2]) -> [4 7 2]", "(dropmax []) -> []", "(dropmax [1 3 6 1 8]) -> [1 3 6 1]", "(dropmax [8 4]) -> [4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.198964, "examples": ["(dropmax []) -> []", "(dropmax [7 2]) -> [2]", "(dropmax []) -> []", "(dropmax [5 3]) -> [3]", "(dropmax [2 7 8]) -> [2 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.222417, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [6 4 8 0 5]) -> [6 4 0 5]", "(dropmax [6 0]) -> [0]", "(dropmax [1 7 4 9 6]) -> [1 7 4 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.245629, "examples": ["(dropmax []) -> []", "(dropmax [8 3 5 1 2]) -> [3 5 1 2]", "(dropmax [9 2 1]) -> [2 1]", "(dropmax [3 3 1 9]) -> [3 3 1]", "(dropmax [0 9 4 3]) -> [0 4 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.241503, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [4 4 3 1]) -> [3 1]", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.22141, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [6 8 0 7 8]) -> [6 0 7]", "(dropmax [9]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.221893, "examples": ["(dropmax []) -> []", "(dropmax [6 0 0 7 5]) -> [6 0 0 5]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185328, "examples": ["(dropmax []) -> []", "(dropmax [5 4 3 6]) -> [5 4 3]", "(dropmax [9]) -> []", "(dropmax [5 6 6 4]) -> [5 4]", "(dropmax [2 5 4 1 9]) -> [2 5 4 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.057842, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 0]) -> [0]", "(dropmax [8 4 2]) -> [4 2]", "(dropmax [9 0 7 1]) -> [0 7 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.215591, "examples": ["(dropmax []) -> []", "(dropmax [4 5]) -> [4]", "(dropmax [4 8 1 3 7]) -> [4 1 3 7]", "(dropmax [5 3 2 7 5]) -> [5 3 2 5]", "(dropmax [8 3 7 6 1]) -> [3 7 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.159448, "examples": ["(dropmax []) -> []", "(dropmax [7 8 2]) -> [7 2]", "(dropmax [3 2]) -> [2]", "(dropmax [0 7 8 9]) -> [0 7 8]", "(dropmax [2 3 2 5]) -> [2 3 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.211369, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 2 2 3]) -> [2 2 3]", "(dropmax [2]) -> []", "(dropmax [0 3 6]) -> [0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.212561, "examples": ["(dropmax []) -> []", "(dropmax [6 3]) -> [3]", "(dropmax [1]) -> []", "(dropmax [4 5 8 2]) -> [4 5 2]", "(dropmax [1 7 6 3 9]) -> [1 7 6 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.213232, "examples": ["(dropmax []) -> []", "(dropmax [0 9 4]) -> [0 4]", "(dropmax [4 3]) -> [3]", "(dropmax [4 2 8 6]) -> [4 2 6]", "(dropmax [6 3 4 4 1]) -> [3 4 4 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.222284, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [2 0 6 2 7]) -> [2 0 6 2]", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.227753, "examples": ["(dropmax []) -> []", "(dropmax [4 6 0 5 3]) -> [4 0 5 3]", "(dropmax [0 1]) -> [0]", "(dropmax []) -> []", "(dropmax [8 6 0]) -> [6 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.175203, "examples": ["(dropmax []) -> []", "(dropmax [3 6]) -> [3]", "(dropmax [2 0]) -> [0]", "(dropmax [2 9 8 0]) -> [2 8 0]", "(dropmax [8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.216094, "examples": ["(dropmax []) -> []", "(dropmax [7 8 8 9 6]) -> [7 8 8 6]", "(dropmax [3 3]) -> []", "(dropmax [8 8 4]) -> [4]", "(dropmax [8 2 2 1 0]) -> [2 2 1 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.200937, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax []) -> []", "(dropmax [4 5]) -> [4]", "(dropmax [8 8 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.220157, "examples": ["(dropmax []) -> []", "(dropmax [0 4 0 6]) -> [0 4 0]", "(dropmax [4 6 6 6 1]) -> [4 1]", "(dropmax [1 1 2 5]) -> [1 1 2]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.194809, "examples": ["(dropmax []) -> []", "(dropmax [0 5]) -> [0]", "(dropmax [3 2 8]) -> [3 2]", "(dropmax []) -> []", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.249613, "examples": ["(dropmax []) -> []", "(dropmax [4 2 6 8 6]) -> [4 2 6 6]", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.24388, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 0 5]) -> [0 0]", "(dropmax [0 4 9]) -> [0 4]", "(dropmax [5 8 4]) -> [5 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.225757, "examples": ["(dropmax []) -> []", "(dropmax [8 4]) -> [4]", "(dropmax [3 9 4 8 2]) -> [3 4 8 2]", "(dropmax []) -> []", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179665, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 6 0]) -> [5 0]", "(dropmax []) -> []", "(dropmax [6 9]) -> [6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.13961, "examples": ["(dropmax []) -> []", "(dropmax [5 1 9 6 8]) -> [5 1 6 8]", "(dropmax [3 0 1 1 2]) -> [0 1 1 2]", "(dropmax [3]) -> []", "(dropmax [2 3]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.160909, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 8 0]) -> [4 0]", "(dropmax [3 9 0]) -> [3 0]", "(dropmax [6 9 6 5]) -> [6 6 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179793, "examples": ["(dropmax []) -> []", "(dropmax [2 6 2 4 4]) -> [2 2 4 4]", "(dropmax [8 4 3 5]) -> [4 3 5]", "(dropmax [0 6 4]) -> [0 4]", "(dropmax [4 3 7]) -> [4 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.196233, "examples": ["(dropmax []) -> []", "(dropmax [1 2 6 3]) -> [1 2 3]", "(dropmax [8]) -> []", "(dropmax [8 3 9 1 9]) -> [8 3 1]", "(dropmax [6]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.19189, "examples": ["(dropmax []) -> []", "(dropmax [0 4 1 9]) -> [0 4 1]", "(dropmax [4 3 5]) -> [4 3]", "(dropmax [6]) -> []", "(dropmax [8 1 4 7]) -> [1 4 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.214027, "examples": ["(dropmax []) -> []", "(dropmax [5 7]) -> [5]", "(dropmax [5 6 5 6 2]) -> [5 5 2]", "(dropmax [5 1 6]) -> [5 1]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.234532, "examples": ["(dropmax []) -> []", "(dropmax [0 1 8 5 6]) -> [0 1 5 6]", "(dropmax [2 5]) -> [2]", "(dropmax [6 5]) -> [5]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.21716, "examples": ["(dropmax []) -> []", "(dropmax [8 2 7 0 0]) -> [2 7 0 0]", "(dropmax [6]) -> []", "(dropmax [7 1 0 8]) -> [7 1 0]", "(dropmax [5 5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.193704, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [6 0]) -> [0]", "(dropmax [3 3 5]) -> [3 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.18243, "examples": ["(dropmax []) -> []", "(dropmax [1 4]) -> [1]", "(dropmax [9 9 3 7 0]) -> [3 7 0]", "(dropmax []) -> []", "(dropmax [6 6 7 0 0]) -> [6 6 0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.202203, "examples": ["(dropmax []) -> []", "(dropmax [6 2 7 8 4]) -> [6 2 7 4]", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [8 2 3]) -> [2 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.207813, "examples": ["(dropmax []) -> []", "(dropmax [6 4 4]) -> [4 4]", "(dropmax [8]) -> []", "(dropmax [7 3]) -> [3]", "(dropmax [3 2 9 5 1]) -> [3 2 5 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.15592, "examples": ["(dropmax []) -> []", "(dropmax [6 8 8 1]) -> [6 1]", "(dropmax [5 6]) -> [5]", "(dropmax [7 4 8 7 1]) -> [7 4 7 1]", "(dropmax [9 4 0 6]) -> [4 0 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.202747, "examples": ["(dropmax []) -> []", "(dropmax [1 3]) -> [1]", "(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [5 7 8 6 1]) -> [5 7 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.206636, "examples": ["(dropmax []) -> []", "(dropmax [0 3 7]) -> [0 3]", "(dropmax [7 9]) -> [7]", "(dropmax [8 1 8]) -> [1]", "(dropmax [9 4]) -> [4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 0 c)))) _) _)", "name": "dropmax", "time": 0.032565, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [0 2]) -> [0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167986, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [6 2]) -> [2]", "(dropmax [9 1 2]) -> [1 2]", "(dropmax [1 3 5 9 6]) -> [1 3 5 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.181856, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [7 4 5]) -> [4 5]", "(dropmax [0 9 4 4]) -> [0 4 4]", "(dropmax [8 3 2 0]) -> [3 2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.180805, "examples": ["(dropmax []) -> []", "(dropmax [4 8 3 6 1]) -> [4 3 6 1]", "(dropmax [9 6]) -> [6]", "(dropmax [5 2]) -> [2]", "(dropmax [0 3 2 7]) -> [0 3 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.155764, "examples": ["(dropmax []) -> []", "(dropmax [0 4]) -> [0]", "(dropmax [5 0 8]) -> [5 0]", "(dropmax [8]) -> []", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.214564, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [1 0 3]) -> [1 0]", "(dropmax [5 8 6 6]) -> [5 6 6]", "(dropmax [1 5 7 1 2]) -> [1 5 1 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.203351, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 2]) -> [2]", "(dropmax [1 3 1 8]) -> [1 3 1]", "(dropmax [4 7 2 0]) -> [4 2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.186083, "examples": ["(dropmax []) -> []", "(dropmax [1 5]) -> [1]", "(dropmax [4 6 3 1]) -> [4 3 1]", "(dropmax [5 3 1 1 4]) -> [3 1 1 4]", "(dropmax [8 9]) -> [8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.200408, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [6 2 9 0 4]) -> [6 2 0 4]", "(dropmax [2 6 6]) -> [2]", "(dropmax [3 8 6]) -> [3 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.221192, "examples": ["(dropmax []) -> []", "(dropmax [9 9]) -> []", "(dropmax [9 7 0 5 3]) -> [7 0 5 3]", "(dropmax [5 0 3 4 8]) -> [5 0 3 4]", "(dropmax [0 0 3]) -> [0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184676, "examples": ["(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax [0 6 1 3]) -> [0 1 3]", "(dropmax [8 7 3]) -> [7 3]", "(dropmax [3 7]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.181096, "examples": ["(dropmax []) -> []", "(dropmax [6 7 7 4]) -> [6 4]", "(dropmax [2 6 0 8]) -> [2 6 0]", "(dropmax [5 4 3 0 8]) -> [5 4 3 0]", "(dropmax [7 8 6 1]) -> [7 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.212806, "examples": ["(dropmax []) -> []", "(dropmax [1 0 4]) -> [1 0]", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [1 4 7 8 1]) -> [1 4 7 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.214007, "examples": ["(dropmax []) -> []", "(dropmax [1 6 3]) -> [1 3]", "(dropmax [4 1 0 1 4]) -> [1 0 1]", "(dropmax [6 6 7 5]) -> [6 6 5]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.244207, "examples": ["(dropmax []) -> []", "(dropmax [8 0 0]) -> [0 0]", "(dropmax [8 6 6 0]) -> [6 6 0]", "(dropmax [1 1 3 7 0]) -> [1 1 3 0]", "(dropmax [9 3 8]) -> [3 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.209698, "examples": ["(dropmax []) -> []", "(dropmax [4 3 8 2]) -> [4 3 2]", "(dropmax [8]) -> []", "(dropmax [0 7]) -> [0]", "(dropmax [1 6 5 6]) -> [1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189112, "examples": ["(dropmax []) -> []", "(dropmax [5 1 4 0 6]) -> [5 1 4 0]", "(dropmax [5 8 3 9 3]) -> [5 8 3 3]", "(dropmax [7]) -> []", "(dropmax [4 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.023498, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 4 7]) -> [4 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) b)) _) _)", "name": "dropmax", "time": 0.031576, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 1]) -> [1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184324, "examples": ["(dropmax []) -> []", "(dropmax [8 9]) -> [8]", "(dropmax []) -> []", "(dropmax [7 4 3 3]) -> [4 3 3]", "(dropmax [5 7]) -> [5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.192714, "examples": ["(dropmax []) -> []", "(dropmax [1 6]) -> [1]", "(dropmax [2 8 9 8]) -> [2 8 8]", "(dropmax [1 1 2 2]) -> [1 1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172957, "examples": ["(dropmax []) -> []", "(dropmax [0 6 8 6 2]) -> [0 6 6 2]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.151276, "examples": ["(dropmax []) -> []", "(dropmax [0 4 6]) -> [0 4]", "(dropmax [3 3 6 8]) -> [3 3 6]", "(dropmax [4 1 1]) -> [1 1]", "(dropmax [2 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.176026, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [8 6 8 8]) -> [6]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.184218, "examples": ["(dropmax []) -> []", "(dropmax [6 2 6 6]) -> [2]", "(dropmax [6 0]) -> [0]", "(dropmax [5 3]) -> [3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172959, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 9 2 6]) -> [2 2 6]", "(dropmax [5 7 1 0]) -> [5 1 0]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179303, "examples": ["(dropmax []) -> []", "(dropmax [2 8 9]) -> [2 8]", "(dropmax [7]) -> []", "(dropmax [5 5 7 5]) -> [5 5 5]", "(dropmax [3 0 8]) -> [3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172832, "examples": ["(dropmax []) -> []", "(dropmax [3 4 3 4]) -> [3 3]", "(dropmax [3 7 8 7 2]) -> [3 7 7 2]", "(dropmax [4 9 4]) -> [4 4]", "(dropmax [0 2]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.169721, "examples": ["(dropmax []) -> []", "(dropmax [1 8 3 9 4]) -> [1 8 3 4]", "(dropmax [9 5 1 7 5]) -> [5 1 7 5]", "(dropmax []) -> []", "(dropmax [7 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173722, "examples": ["(dropmax []) -> []", "(dropmax [5 8 7]) -> [5 7]", "(dropmax [9 7]) -> [7]", "(dropmax []) -> []", "(dropmax [2 1 5]) -> [2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.159466, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [2 3]) -> [2]", "(dropmax [9 6 7]) -> [6 7]", "(dropmax [3 3 4]) -> [3 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.171328, "examples": ["(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [1 0 8 6]) -> [1 0 6]", "(dropmax [2]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.125829, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 8 3 1 5]) -> [7 3 1 5]", "(dropmax []) -> []", "(dropmax [4 1 6 8 6]) -> [4 1 6 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.113627, "examples": ["(dropmax []) -> []", "(dropmax [0 7]) -> [0]", "(dropmax [6 9 1 1]) -> [6 1 1]", "(dropmax [1 3 6]) -> [1 3]", "(dropmax [9 4 5 3 7]) -> [4 5 3 7]"]}
