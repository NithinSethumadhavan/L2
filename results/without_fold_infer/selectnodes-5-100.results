{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {4 {7}}) -> [4]", "(selectnodes {2}) -> [2]"], "time": 0.078436, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {0}) -> [0]", "(selectnodes {6}) -> [6]"], "time": 0.097128, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {5}) -> [5]"], "time": 0.09223, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {1}) -> [1]"], "time": 0.112347, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) e) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {9 {5 {7}} {0}}) -> [0]", "(selectnodes {7}) -> [7]"], "time": 0.685329, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) e) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {6}}) -> [6]", "(selectnodes {0}) -> [0]"], "time": 0.859023, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) e) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {1 {1 {1} {2}}}) -> [2]", "(selectnodes {8}) -> [8]"], "time": 0.732555, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons (value b) []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {7} {4}}) -> [4 4]", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []"], "time": 2.311696, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) []) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {7 {7 {5} {9}}}) -> []"], "time": 1.016515, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {8}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]"], "time": 0.121357, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {1}) -> [1]", "(selectnodes {6 {0 {6}} {8 {4}}}) -> [6 0 6 8 4]"], "time": 0.11108, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) []) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 0.000563, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (foldl e (lambda (h g) []) f)) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {5 {7}}}) -> [2]", "(selectnodes {3}) -> [3]", "(selectnodes {9 {9}}) -> []"], "time": 20.127986, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (map d (lambda (g) (car e)))) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {8}}) -> [8]", "(selectnodes {9}) -> [9]", "(selectnodes {8 {3} {8}}) -> [8 8]"], "time": 24.808255, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {9 {4 {2 {5} {6}}}}) -> [4 2 6]"], "time": 56.030732, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {4 {6 {7} {0}} {9 {3} {0}}}) -> [4 6 0 0]"], "time": 60.25904, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {4} {2}}) -> [6 4 2]", "(selectnodes {4 {9}}) -> [4]", "(selectnodes {0 {4 {0 {3} {3}}} {4 {9 {1} {7}}}}) -> [0 4 0 4]"], "time": 63.791963, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {8} {8}}) -> [8 8]", "(selectnodes {9}) -> [9]", "(selectnodes {8 {3 {0 {5} {5}} {3 {5}}} {9}}) -> [8 0]"], "time": 64.902103, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {1}}) -> []", "(selectnodes {0 {0 {4}}}) -> [0 0 4]", "(selectnodes {1 {0} {3}}) -> [0]"], "time": 66.740444, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) e) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {0}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]"], "time": 0.885414, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {1}}) -> [0]", "(selectnodes {3 {4}}) -> [4]", "(selectnodes {9}) -> [9]"], "time": 70.190829, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {3}}) -> []", "(selectnodes {3 {3 {8 {0} {1}} {8}}}) -> [8 0 8]"], "time": 73.002451, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred c)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {4} {4}}) -> [2 4 4]", "(selectnodes {1 {3}}) -> []"], "time": 72.147289, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {6} {4}}) -> [0 6 4]", "(selectnodes {}) -> []"], "time": 0.156618, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {8} {4}}) -> [8 4]", "(selectnodes {1 {0 {3 {0}}}}) -> [0 0]", "(selectnodes {0}) -> [0]"], "time": 73.403859, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {8} {1 {6}}}) -> [8 6]", "(selectnodes {9 {6}}) -> [6]", "(selectnodes {3}) -> [3]"], "time": 1.141572, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {8 {2}}}) -> [8 8 2]", "(selectnodes {}) -> []", "(selectnodes {0 {3}}) -> [0]"], "time": 69.939259, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {5 {5} {3 {5} {8}}}}) -> [6 8]", "(selectnodes {0 {2 {0}} {1}}) -> [0 2 0]", "(selectnodes {3 {2 {1} {8}} {4 {5}}}) -> [2 8 4]"], "time": 76.405924, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) []) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {7 {9} {1}}}) -> []"], "time": 0.000608, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {2}}) -> [0 2]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]"], "time": 0.206677, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {7 {1 {3} {4}} {9}}}) -> [0 4]", "(selectnodes {}) -> []", "(selectnodes {1 {3} {0}}) -> [0]"], "time": 76.986534, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {6}}) -> [4 6]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []"], "time": 0.184424, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]"], "time": 0.155075, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {7 {6} {2}}) -> [6 2]", "(selectnodes {}) -> []"], "time": 1.065654, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {0} {1 {2}}}) -> [0 2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 1.063261, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {7 {1 {4} {0}}} {7 {0}}}) -> [2 4 0 0]", "(selectnodes {0}) -> [0]", "(selectnodes {3 {9}}) -> []"], "time": 81.789766, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {1 {5} {8}} {1 {2 {5} {4}} {5}}}) -> [8 2 4]", "(selectnodes {1 {6}}) -> [6]"], "time": 96.016178, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {9 {0} {2}} {1}}) -> [0 2]", "(selectnodes {1 {9 {9} {3}}}) -> []", "(selectnodes {2 {1} {8 {2} {2}}}) -> [2 8 2 2]"], "time": 74.437614, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {9 {8} {2}}) -> [8 2]", "(selectnodes {8 {0 {6}}}) -> [8 0 6]"], "time": 57.341729, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {9 {2 {0}} {8}}) -> [2 0 8]", "(selectnodes {5 {9 {6 {6}}} {3}}) -> [6 6]"], "time": 55.652354, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (cons c e)) [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {5 {9 {5}}} {0 {4 {9}}}}) -> [4 0 4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 0.975739, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons (value b) []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {0 {3} {0}}) -> [0 0]", "(selectnodes {2}) -> [2]"], "time": 1.900757, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {9 {9 {5} {7}}} {3 {7 {5}}}}) -> []", "(selectnodes {9 {8}}) -> [8]", "(selectnodes {5 {3} {7 {9 {4}} {4}}}) -> [4 4]"], "time": 98.801072, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) []) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {1 {7}}) -> []"], "time": 0.653291, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {0}}) -> [0 0]", "(selectnodes {6 {3 {5 {3}} {7 {4}}} {4 {6} {8}}}) -> [6 4 4 6 8]", "(selectnodes {4}) -> [4]"], "time": 59.353443, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {2 {7}}) -> [2]", "(selectnodes {4 {6}}) -> [4 6]"], "time": 61.648194, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {4}}) -> [0 4]", "(selectnodes {7}) -> [7]"], "time": 0.148932, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {9 {2 {6} {7}} {1}}) -> [2 6]", "(selectnodes {0}) -> [0]"], "time": 64.028617, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {9 {4} {6 {5} {8 {4} {0}}}}) -> [4 6 8 4 0]", "(selectnodes {}) -> []"], "time": 59.341293, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) []) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {7 {3 {7}}}) -> []", "(selectnodes {}) -> []"], "time": 0.69261, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 0.168486, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {7} {7}}) -> []", "(selectnodes {3 {4 {7} {3}}}) -> [4]", "(selectnodes {}) -> []"], "time": 65.686251, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []"], "time": 0.107939, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {0} {0}}) -> [0 0]", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]"], "time": 0.903756, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {2 {7} {7}}}) -> [0 2]", "(selectnodes {7 {2} {8}}) -> [2 8]"], "time": 68.255121, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {0 {7 {6}}}}) -> [0 6]", "(selectnodes {2}) -> [2]"], "time": 73.536723, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {1 {5} {2}} {4 {4}}}) -> [4 2 4 4]", "(selectnodes {2 {5}}) -> [2]", "(selectnodes {}) -> []"], "time": 74.228147, "name": "selectnodes"}
