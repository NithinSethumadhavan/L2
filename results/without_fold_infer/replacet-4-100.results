{"name": "replacet", "time": 0.000516, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 1 0) -> {}", "(replacet {} 1 2) -> {}", "(replacet {[7 8 6] {[7 2]}} 3 0) -> {[7 8 6] {[7 2]}}"]}
{"name": "replacet", "time": 0.000288, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 6 9) -> {}", "(replacet {[7 9 0 4] {[4 5] {[7] {[7 3 7 0]}}}} 2 7) -> {[7 9 0 4] {[4 5] {[7] {[7 3 7 0]}}}}", "(replacet {[4 2 9 9 9]} 9 9) -> {[4 2 9 9 9]}"]}
{"name": "replacet", "time": 0.00031, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 5 7) -> {}", "(replacet {[0]} 4 0) -> {[0]}", "(replacet {[8] {[8]}} 3 5) -> {[8] {[8]}}"]}
{"name": "replacet", "time": 0.000378, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 4 0) -> {}", "(replacet {} 5 2) -> {}", "(replacet {[5 7] {[4] {[0 5]}}} 9 8) -> {[5 7] {[4] {[0 5]}}}"]}
{"name": "replacet", "time": 0.000482, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 5 8) -> {}", "(replacet {} 6 9) -> {}", "(replacet {} 1 0) -> {}"]}
{"name": "replacet", "time": 0.000764, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 0 8) -> {}", "(replacet {[8 6] {[4 2 1]} {[8 0]}} 9 1) -> {[8 6] {[4 2 1]} {[8 0]}}", "(replacet {[9]} 6 4) -> {[9]}"]}
{"name": "replacet", "time": 0.000699, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 4 8) -> {}", "(replacet {[2 6]} 1 1) -> {[2 6]}", "(replacet {} 3 9) -> {}"]}
{"name": "replacet", "time": 0.000567, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 6 6) -> {}", "(replacet {} 3 1) -> {}", "(replacet {[9]} 8 9) -> {[9]}"]}
{"name": "replacet", "time": 0.000758, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 9 0) -> {}", "(replacet {} 4 2) -> {}", "(replacet {} 7 3) -> {}"]}
{"name": "replacet", "time": 0.000705, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 2) -> {}", "(replacet {[6 6 7 3]} 8 7) -> {[6 6 7 3]}", "(replacet {} 2 4) -> {}"]}
{"name": "replacet", "time": 0.0008, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 1) -> {}", "(replacet {} 0 2) -> {}", "(replacet {[]} 1 0) -> {[]}"]}
{"name": "replacet", "time": 0.000949, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 7 2) -> {}", "(replacet {} 6 4) -> {}", "(replacet {[] {[]} {[2] {[4 6 4]}}} 5 0) -> {[] {[]} {[2] {[4 6 4]}}}"]}
{"name": "replacet", "time": 0.0009, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 1) -> {}", "(replacet {} 8 7) -> {}", "(replacet {[9 1] {[1 1 2] {[3 4 5]} {[6 9 4 1 9]}} {[]}} 7 2) -> {[9 1] {[1 1 2] {[3 4 5]} {[6 9 4 1 9]}} {[]}}"]}
{"name": "replacet", "time": 0.000462, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 3) -> {}", "(replacet {[] {[7 4 1]} {[1 3 4 6 3]}} 0 4) -> {[] {[7 4 1]} {[1 3 4 6 3]}}", "(replacet {[6 2] {[1 2 0 2]} {[7 6 6]}} 2 2) -> {[6 2] {[1 2 0 2]} {[7 6 6]}}"]}
{"name": "replacet", "time": 0.000829, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 1) -> {}", "(replacet {[6 7 8] {[1 0] {[1 7]} {[0 9 6 0] {[0 4 0 6 5]}}}} 2 4) -> {[6 7 8] {[1 0] {[1 7]} {[0 9 6 0] {[0 4 0 6 5]}}}}", "(replacet {[7 3 2] {[3]}} 1 4) -> {[7 3 2] {[3]}}"]}
{"name": "replacet", "time": 0.000847, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 0 5) -> {}", "(replacet {[]} 7 3) -> {[]}", "(replacet {[0 6] {[4 2 7] {[7 6 2 3]}} {[2] {[6 7 2 4 5]} {[5 0 3 5]}}} 1 4) -> {[0 6] {[4 2 7] {[7 6 2 3]}} {[2] {[6 7 2 4 5]} {[5 0 3 5]}}}"]}
{"name": "replacet", "time": 0.00076, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 4) -> {}", "(replacet {[8 3] {[]}} 7 5) -> {[8 3] {[]}}", "(replacet {[8 2 4 5 4]} 6 9) -> {[8 2 4 5 4]}"]}
{"name": "replacet", "time": 0.0007, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 8) -> {}", "(replacet {[5 7]} 9 7) -> {[5 7]}", "(replacet {[0]} 6 8) -> {[0]}"]}
{"name": "replacet", "time": 0.000681, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 0 5) -> {}", "(replacet {[1 9 5 7 0] {[3 1 8 5 2] {[2 4 0]}}} 6 4) -> {[1 9 5 7 0] {[3 1 8 5 2] {[2 4 0]}}}", "(replacet {[4 3 3]} 1 5) -> {[4 3 3]}"]}
{"name": "replacet", "time": 0.000774, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 4 6) -> {}", "(replacet {[9] {[2 4 6 1 6] {[3 6 1 7 5]} {[]}}} 5 5) -> {[9] {[2 4 6 1 6] {[3 6 1 7 5]} {[]}}}", "(replacet {[4 7] {[0 2]} {[9]}} 7 7) -> {[4 7] {[0 2]} {[9]}}"]}
{"name": "replacet", "time": 0.000703, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 2 6) -> {}", "(replacet {[] {[1]}} 4 1) -> {[] {[1]}}", "(replacet {[8 9 4 6]} 5 8) -> {[8 9 4 6]}"]}
{"name": "replacet", "time": 0.000783, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 0) -> {}", "(replacet {[4 7 0 3 7] {[]} {[8] {[8 7 7 0 9]}}} 2 9) -> {[4 7 0 3 7] {[]} {[8] {[8 7 7 0 9]}}}", "(replacet {[8 4 4 5]} 3 2) -> {[8 4 4 5]}"]}
{"name": "replacet", "time": 0.000703, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 6 2) -> {}", "(replacet {[8 0]} 5 1) -> {[8 0]}", "(replacet {[]} 4 4) -> {[]}"]}
{"name": "replacet", "time": 0.000916, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 8) -> {}", "(replacet {[3 9] {[5 1 2]} {[1] {[7 5]}}} 8 3) -> {[3 9] {[5 1 2]} {[1] {[7 5]}}}", "(replacet {[4 0 2 0]} 1 4) -> {[4 0 2 0]}"]}
{"name": "replacet", "time": 0.000766, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 8) -> {}", "(replacet {} 0 6) -> {}", "(replacet {[9 7 6 0]} 3 1) -> {[9 7 6 0]}"]}
{"name": "replacet", "time": 0.001264, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 2 3) -> {}", "(replacet {} 4 1) -> {}", "(replacet {} 3 6) -> {}"]}
{"name": "replacet", "time": 2.930935, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (+ f (/ 1 f))))))) _) _)", "examples": ["(replacet {} 3 7) -> {}", "(replacet {[7] {[4 3 9 4]} {[1]}} 1 2) -> {[7] {[4 3 9 4]} {[2]}}", "(replacet {} 6 9) -> {}"]}
{"name": "replacet", "time": 0.000766, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 7 1) -> {}", "(replacet {[6 6 3 2 6] {[0 3 6]}} 4 4) -> {[6 6 3 2 6] {[0 3 6]}}", "(replacet {} 6 8) -> {}"]}
{"name": "replacet", "time": 15.109346, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 1) -> {}", "(replacet {[2]} 8 9) -> {[2]}", "(replacet {[0 7 4 2 5]} 5 4) -> {[0 7 4 2 4]}"]}
{"name": "replacet", "time": 15.658428, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 6 7) -> {}", "(replacet {[6 7 3] {[0 9 7 5 5]}} 6 0) -> {[0 7 3] {[0 9 7 5 5]}}", "(replacet {[4] {[3 6 5] {[] {[8]} {[3 4 1]}}}} 6 1) -> {[4] {[3 1 5] {[] {[8]} {[3 4 1]}}}}"]}
{"name": "replacet", "time": 15.634846, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 1 5) -> {}", "(replacet {[3 9 2 9]} 9 5) -> {[3 5 2 5]}", "(replacet {[8 5 2] {[0 0 2] {[6 5] {[7]}} {[5 0] {[3 7 3]}}}} 9 1) -> {[8 5 2] {[0 0 2] {[6 5] {[7]}} {[5 0] {[3 7 3]}}}}"]}
{"name": "replacet", "time": 16.555487, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 2 1) -> {}", "(replacet {[5 4] {[7 3]}} 7 7) -> {[5 4] {[7 3]}}", "(replacet {[6 5 6 2] {[9 6 3 0]}} 3 9) -> {[6 5 6 2] {[9 6 9 0]}}"]}
{"name": "replacet", "time": 0.000587, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 2 2) -> {}", "(replacet {[1] {[5 2 6 5] {[3]} {[3 3]}}} 4 3) -> {[1] {[5 2 6 5] {[3]} {[3 3]}}}", "(replacet {[]} 9 1) -> {[]}"]}
{"name": "replacet", "time": 0.000635, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 0 5) -> {}", "(replacet {} 2 7) -> {}", "(replacet {[4 7]} 0 4) -> {[4 7]}"]}
{"name": "replacet", "time": 16.897002, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 5) -> {}", "(replacet {[3 6 7] {[2]} {[5 9 9 3]}} 4 6) -> {[3 6 7] {[2]} {[5 9 9 3]}}", "(replacet {[1] {[9 8 2] {[0 5]} {[9]}}} 9 4) -> {[1] {[4 8 2] {[0 5]} {[4]}}}"]}
{"name": "replacet", "time": 0.000769, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 4) -> {}", "(replacet {[] {[] {[9 4 6] {[3 4 1]}}} {[9 0 4] {[4 9 7] {[]}}}} 5 0) -> {[] {[] {[9 4 6] {[3 4 1]}}} {[9 0 4] {[4 9 7] {[]}}}}", "(replacet {[6 4 7 6] {[]}} 1 9) -> {[6 4 7 6] {[]}}"]}
{"name": "replacet", "time": 0.000654, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 1 5) -> {}", "(replacet {[6 7 8 4] {[2 4 3 2 6]}} 9 8) -> {[6 7 8 4] {[2 4 3 2 6]}}", "(replacet {[2 7 1] {[4 6 4 0]} {[4 2] {[] {[]}} {[6 1]}}} 5 7) -> {[2 7 1] {[4 6 4 0]} {[4 2] {[] {[]}} {[6 1]}}}"]}
{"name": "replacet", "time": 19.024851, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 8) -> {}", "(replacet {} 8 4) -> {}", "(replacet {[6 5 6 4 6] {[2 4 5 0] {[0 2 0 1] {[4 4 3]}}}} 0 3) -> {[6 5 6 4 6] {[2 4 5 3] {[3 2 3 1] {[4 4 3]}}}}"]}
{"name": "replacet", "time": 0.000636, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 0 1) -> {}", "(replacet {} 6 7) -> {}", "(replacet {[1 0]} 6 5) -> {[1 0]}"]}
{"name": "replacet", "time": 0.000666, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 8 8) -> {}", "(replacet {[0 1]} 7 5) -> {[0 1]}", "(replacet {[]} 1 4) -> {[]}"]}
{"name": "replacet", "time": 18.962466, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 0 0) -> {}", "(replacet {[8 0 1 7 7] {[3 1 7]} {[8 9 6]}} 0 0) -> {[8 0 1 7 7] {[3 1 7]} {[8 9 6]}}", "(replacet {[9 2 9 0]} 0 5) -> {[9 2 9 5]}"]}
{"name": "replacet", "time": 19.7047, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 8) -> {}", "(replacet {[] {[5 6 9 5 5] {[5 2 8] {[]}}}} 6 3) -> {[] {[5 3 9 5 5] {[5 2 8] {[]}}}}", "(replacet {[] {[]}} 5 8) -> {[] {[]}}"]}
{"name": "replacet", "time": 19.165163, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 7 6) -> {}", "(replacet {[5 6] {[9 1 9 9 9] {[4 3 4]}}} 2 7) -> {[5 6] {[9 1 9 9 9] {[4 3 4]}}}", "(replacet {[5 6 0 8] {[6 6 6 6]} {[1 7]}} 1 9) -> {[5 6 0 8] {[6 6 6 6]} {[9 7]}}"]}
{"name": "replacet", "time": 0.001156, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 1 2) -> {}", "(replacet {} 9 7) -> {}", "(replacet {} 9 7) -> {}"]}
{"name": "replacet", "time": 20.540026, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 1) -> {}", "(replacet {[8 7 5 1 1] {[9]} {[0 7 0 9]}} 5 9) -> {[8 7 9 1 1] {[9]} {[0 7 0 9]}}", "(replacet {[8] {[]} {[0 2 7]}} 0 8) -> {[8] {[]} {[8 2 7]}}"]}
{"name": "replacet", "time": 17.607524, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 2) -> {}", "(replacet {[7 9 4 3 7] {[7 6] {[1 5 0 3 9]} {[8 0]}} {[8]}} 4 0) -> {[7 9 0 3 7] {[7 6] {[1 5 0 3 9]} {[8 0]}} {[8]}}", "(replacet {[8 7] {[2]} {[1 6 5 1 9]}} 8 3) -> {[3 7] {[2]} {[1 6 5 1 9]}}"]}
{"name": "replacet", "time": 21.082232, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 4 7) -> {}", "(replacet {[3 7 7] {[0 5 7 6]} {[5 4 0]}} 5 3) -> {[3 7 7] {[0 3 7 6]} {[3 4 0]}}", "(replacet {[9 0 5 3 3] {[1]} {[9 8 9 1] {[3]} {[4 7 1]}}} 8 8) -> {[9 0 5 3 3] {[1]} {[9 8 9 1] {[3]} {[4 7 1]}}}"]}
{"name": "replacet", "time": 0.00078, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 3 0) -> {}", "(replacet {[7 5 3 6 5] {[0 2 6]} {[2 0 0 6] {[7 3]} {[1 8 5]}}} 9 0) -> {[7 5 3 6 5] {[0 2 6]} {[2 0 0 6] {[7 3]} {[1 8 5]}}}", "(replacet {} 9 2) -> {}"]}
{"name": "replacet", "time": 0.000646, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 6 2) -> {}", "(replacet {} 9 1) -> {}", "(replacet {[5 7 2]} 4 3) -> {[5 7 2]}"]}
{"name": "replacet", "time": 0.000928, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 1 4) -> {}", "(replacet {[4] {[7 6] {[]}}} 1 0) -> {[4] {[7 6] {[]}}}", "(replacet {[7 9 7]} 1 5) -> {[7 9 7]}"]}
{"name": "replacet", "time": 20.661261, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 1) -> {}", "(replacet {[6 8 6] {[] {[]}} {[9 3 2 9] {[2 5 7 3 4]}}} 6 7) -> {[7 8 7] {[] {[]}} {[9 3 2 9] {[2 5 7 3 4]}}}", "(replacet {} 5 8) -> {}"]}
{"name": "replacet", "time": 0.000588, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 0 9) -> {}", "(replacet {[] {[8 2 9 8 8]} {[4]}} 6 0) -> {[] {[8 2 9 8 8]} {[4]}}", "(replacet {[4 3 4 5]} 0 6) -> {[4 3 4 5]}"]}
{"name": "replacet", "time": 0.000511, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 7 6) -> {}", "(replacet {} 5 8) -> {}", "(replacet {} 6 5) -> {}"]}
{"name": "replacet", "time": 21.659845, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 5 8) -> {}", "(replacet {[] {[3 0 5 6 6] {[5 8]} {[6 6 3] {[6]} {[3 4 2 1]}}}} 6 4) -> {[] {[3 0 5 4 4] {[5 8]} {[4 4 3] {[4]} {[3 4 2 1]}}}}", "(replacet {[4]} 5 4) -> {[4]}"]}
{"name": "replacet", "time": 0.000845, "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "examples": ["(replacet {} 4 9) -> {}", "(replacet {} 9 4) -> {}", "(replacet {} 4 4) -> {}"]}
{"name": "replacet", "time": 25.728923, "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "examples": ["(replacet {} 8 7) -> {}", "(replacet {[4 5 1 4 6] {[1 4] {[5 6] {[7 7]}}} {[2] {[3 6] {[9 7 4 8 6]}} {[5 1 3 1] {[3]}}}} 4 1) -> {[1 5 1 1 6] {[1 1] {[5 6] {[7 7]}}} {[2] {[3 6] {[9 7 1 8 6]}} {[5 1 3 1] {[3]}}}}", "(replacet {} 1 3) -> {}"]}
