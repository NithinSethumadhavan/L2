{"name": "last", "examples": ["(last [6 6 9 1]) -> 1", "(last [2]) -> 2", "(last [9]) -> 9"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.030524}
{"name": "last", "examples": ["(last [5]) -> 5", "(last [4 7 5 9 6]) -> 6", "(last [5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038059}
{"name": "last", "examples": ["(last [6 4 4]) -> 4", "(last [9 0]) -> 0", "(last [4 9 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.028322}
{"name": "last", "examples": ["(last [2]) -> 2", "(last [3 9]) -> 9", "(last [4 0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02829}
{"name": "last", "examples": ["(last [1 8 3 1 5]) -> 5", "(last [3 3 1]) -> 1", "(last [6 2 9 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026087}
{"name": "last", "examples": ["(last [3 8 0 7]) -> 7", "(last [7 5 8 3 0]) -> 0", "(last [5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026381}
{"name": "last", "examples": ["(last [7]) -> 7", "(last [1 7 4 2 2]) -> 2", "(last [8 3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02874}
{"name": "last", "examples": ["(last [4 7]) -> 7", "(last [3]) -> 3", "(last [6 5 1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.042044}
{"name": "last", "examples": ["(last [5]) -> 5", "(last [1 0 6 9 0]) -> 0", "(last [6 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.041156}
{"name": "last", "examples": ["(last [5]) -> 5", "(last [6]) -> 6", "(last [9 3 7 3 0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.033991}
{"name": "last", "examples": ["(last [7 0]) -> 0", "(last [6 7 7 5 2]) -> 2", "(last [6 6 5 5 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.041111}
{"name": "last", "examples": ["(last [4 4 1 9]) -> 9", "(last [0 0 4 2]) -> 2", "(last [0 5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.04095}
{"name": "last", "examples": ["(last [3 2]) -> 2", "(last [0 5 6 0 1]) -> 1", "(last [1 1 7 0 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.032462}
{"name": "last", "examples": ["(last [4 1 2 2 2]) -> 2", "(last [6 9 3 1]) -> 1", "(last [3 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.032045}
{"name": "last", "examples": ["(last [3 8 5]) -> 5", "(last [7 0]) -> 0", "(last [5 9 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.041757}
{"name": "last", "examples": ["(last [7 1 3 1 8]) -> 8", "(last [0 6 0]) -> 0", "(last [0 6 4 4 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.036194}
{"name": "last", "examples": ["(last [0 8 3]) -> 3", "(last [6 1 2 0]) -> 0", "(last [2 4 2 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026021}
{"name": "last", "examples": ["(last [8 1 5]) -> 5", "(last [8 7 3 5]) -> 5", "(last [5 6 6 0 9]) -> 9"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.037196}
{"name": "last", "examples": ["(last [7 0 2 2]) -> 2", "(last [2 3 1 7]) -> 7", "(last [6 1 5 0]) -> 0"], "solution": "(let last (let a (lambda (b) (car (cdr (cdr (cdr b))))) _) _)", "time": 0.025871}
{"name": "last", "examples": ["(last [8 4]) -> 4", "(last [6 8 6 4 8]) -> 8", "(last [2 4 3 0 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.027698}
{"name": "last", "examples": ["(last [0 3 7 2 3]) -> 3", "(last [5 7 2 4 7]) -> 7", "(last [4 5]) -> 5"], "solution": "(let last (let a (lambda (b) (car (cdr b))) _) _)", "time": 0.004609}
{"name": "last", "examples": ["(last [8]) -> 8", "(last [3 2 0 9]) -> 9", "(last [0 8 7 5 0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.028021}
{"name": "last", "examples": ["(last [3]) -> 3", "(last [7 7]) -> 7", "(last [8 7 1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.03279}
{"name": "last", "examples": ["(last [5 4 1 4 0]) -> 0", "(last [7 3]) -> 3", "(last [0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.025664}
{"name": "last", "examples": ["(last [1 5 1]) -> 1", "(last [2 5 7 6 7]) -> 7", "(last [9 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.032894}
{"name": "last", "examples": ["(last [7 4 7 8]) -> 8", "(last [5 9 3 8 2]) -> 2", "(last [2 5 5 4 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.03389}
{"name": "last", "examples": ["(last [9 2]) -> 2", "(last [4]) -> 4", "(last [7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.04736}
{"name": "last", "examples": ["(last [6 3 8]) -> 8", "(last [5 1 6 6 3]) -> 3", "(last [2 1 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038955}
{"name": "last", "examples": ["(last [7 4 1 3 7]) -> 7", "(last [4 4 1 8]) -> 8", "(last [4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038121}
{"name": "last", "examples": ["(last [5 3 0 9 0]) -> 0", "(last [0 4 6 7]) -> 7", "(last [8 9 6 6 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.041222}
{"name": "last", "examples": ["(last [7 1]) -> 1", "(last [9 8 7 6 2]) -> 2", "(last [0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038329}
{"name": "last", "examples": ["(last [8 5 8 3 8]) -> 8", "(last [2 8 3 9]) -> 9", "(last [3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.037851}
{"name": "last", "examples": ["(last [4 0]) -> 0", "(last [4]) -> 4", "(last [6 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.040563}
{"name": "last", "examples": ["(last [5 8 8]) -> 8", "(last [5 6 2 2]) -> 2", "(last [9 2 6 6 3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.029876}
{"name": "last", "examples": ["(last [7 8 9 8 5]) -> 5", "(last [5 9 9]) -> 9", "(last [8 3 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02476}
{"name": "last", "examples": ["(last [4 4 1 8 0]) -> 0", "(last [6 1 4 4]) -> 4", "(last [3 2 8 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.04025}
{"name": "last", "examples": ["(last [7]) -> 7", "(last [6 2 1]) -> 1", "(last [6 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024755}
{"name": "last", "examples": ["(last [0 4]) -> 4", "(last [5 5 2]) -> 2", "(last [2 5 5 3 5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.042691}
{"name": "last", "examples": ["(last [0]) -> 0", "(last [6 1 0]) -> 0", "(last [9 3 4 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026523}
{"name": "last", "examples": ["(last [0 5 2 2 8]) -> 8", "(last [2 5 8 5]) -> 5", "(last [1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.037648}
{"name": "last", "examples": ["(last [1 5]) -> 5", "(last [9]) -> 9", "(last [1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.041367}
{"name": "last", "examples": ["(last [9 3 9]) -> 9", "(last [4 9 2]) -> 2", "(last [9 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.027248}
{"name": "last", "examples": ["(last [4 3 2 6 9]) -> 9", "(last [7 4]) -> 4", "(last [0 7 6 2 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.027019}
{"name": "last", "examples": ["(last [8 2 6 8 7]) -> 7", "(last [4]) -> 4", "(last [0 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.04176}
{"name": "last", "examples": ["(last [5 3 0]) -> 0", "(last [6 0]) -> 0", "(last [1 2 0 8 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.039493}
{"name": "last", "examples": ["(last [0 2 2 4]) -> 4", "(last [8]) -> 8", "(last [7 3 5 6 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024725}
{"name": "last", "examples": ["(last [4 7]) -> 7", "(last [4 4]) -> 4", "(last [0 0 9 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.03185}
{"name": "last", "examples": ["(last [0 9]) -> 9", "(last [4 7 9 8 1]) -> 1", "(last [8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.025535}
{"name": "last", "examples": ["(last [6 2]) -> 2", "(last [8]) -> 8", "(last [0 5 6 1 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026354}
{"name": "last", "examples": ["(last [7]) -> 7", "(last [9 4]) -> 4", "(last [3 4 5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024622}
{"name": "last", "examples": ["(last [4 5 8]) -> 8", "(last [8 4 9 1]) -> 1", "(last [6 2 0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.034714}
{"name": "last", "examples": ["(last [7 0 2 1]) -> 1", "(last [2]) -> 2", "(last [9 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.029429}
{"name": "last", "examples": ["(last [9 5 4 5 2]) -> 2", "(last [0 9 7 6 5]) -> 5", "(last [9 3 2 5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.04448}
{"name": "last", "examples": ["(last [4 3 2 8 0]) -> 0", "(last [7]) -> 7", "(last [6 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02598}
{"name": "last", "examples": ["(last [9 0 1 3]) -> 3", "(last [2 4 9 3 7]) -> 7", "(last [1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.028695}
{"name": "last", "examples": ["(last [9 7]) -> 7", "(last [6 5 3 7]) -> 7", "(last [4 4 5 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.042158}
{"name": "last", "examples": ["(last [7 8 3 6 2]) -> 2", "(last [3 9 1 8 8]) -> 8", "(last [5 0 7 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.039467}
{"name": "last", "examples": ["(last [2 2 5]) -> 5", "(last [1 2 2 9 6]) -> 6", "(last [7 7 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026214}
{"name": "last", "examples": ["(last [6 7 2]) -> 2", "(last [0 2 8 7]) -> 7", "(last [4 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.035268}
{"name": "last", "examples": ["(last [7 4]) -> 4", "(last [5 4]) -> 4", "(last [8 5 9 8 3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026193}
{"name": "last", "examples": ["(last [3 7 2 6 1]) -> 1", "(last [2]) -> 2", "(last [4 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.035341}
{"name": "last", "examples": ["(last [5]) -> 5", "(last [0 1 0]) -> 0", "(last [2 2 5 1 1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026601}
{"name": "last", "examples": ["(last [0 0 9]) -> 9", "(last [7 0]) -> 0", "(last [7 1 4 2 3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.033044}
{"name": "last", "examples": ["(last [9 4 2 7]) -> 7", "(last [4]) -> 4", "(last [5 9 0 5 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038339}
{"name": "last", "examples": ["(last [0 0 9]) -> 9", "(last [2 6 9 4]) -> 4", "(last [5 9]) -> 9"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.027186}
{"name": "last", "examples": ["(last [2 3]) -> 3", "(last [0 5]) -> 5", "(last [1 8]) -> 8"], "solution": "(let last (let a (lambda (b) (car (cdr b))) _) _)", "time": 0.004358}
{"name": "last", "examples": ["(last [6]) -> 6", "(last [1 3 4 5]) -> 5", "(last [6 4 1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.0255}
{"name": "last", "examples": ["(last [4 5]) -> 5", "(last [4 7 3 0]) -> 0", "(last [4 6 7 0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024925}
{"name": "last", "examples": ["(last [9 6 0 2]) -> 2", "(last [5 4 6 0]) -> 0", "(last [5 8 5 1]) -> 1"], "solution": "(let last (let a (lambda (b) (car (cdr (cdr (cdr b))))) _) _)", "time": 0.037017}
{"name": "last", "examples": ["(last [2 5]) -> 5", "(last [6 9]) -> 9", "(last [4 4]) -> 4"], "solution": "(let last (let a (lambda (b) (car (cdr b))) _) _)", "time": 0.007109}
{"name": "last", "examples": ["(last [8]) -> 8", "(last [2 8 0]) -> 0", "(last [8 0 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.036635}
{"name": "last", "examples": ["(last [1]) -> 1", "(last [6 0]) -> 0", "(last [2 5 7 3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02536}
{"name": "last", "examples": ["(last [1 0 7 4]) -> 4", "(last [4 2 5 7]) -> 7", "(last [0 4 3 6 5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026725}
{"name": "last", "examples": ["(last [5 1 7]) -> 7", "(last [9 1]) -> 1", "(last [9 5 3 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.037131}
{"name": "last", "examples": ["(last [5 7 1 6]) -> 6", "(last [7 5 4 7]) -> 7", "(last [9]) -> 9"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026885}
{"name": "last", "examples": ["(last [9 9 3 9]) -> 9", "(last [4 5 9]) -> 9", "(last [3 8 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038545}
{"name": "last", "examples": ["(last [6 5 9]) -> 9", "(last [5 7 8 8]) -> 8", "(last [4 9 0 6 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.029709}
{"name": "last", "examples": ["(last [3 4]) -> 4", "(last [0 0 9 6 0]) -> 0", "(last [5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024872}
{"name": "last", "examples": ["(last [6 5]) -> 5", "(last [4 9 3 2]) -> 2", "(last [3 6 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02472}
{"name": "last", "examples": ["(last [7 9 1]) -> 1", "(last [0 8 1 7 3]) -> 3", "(last [0 5 7]) -> 7"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.031759}
{"name": "last", "examples": ["(last [5 6 6 7]) -> 7", "(last [3 8]) -> 8", "(last [2 2 4 8 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024303}
{"name": "last", "examples": ["(last [9 0]) -> 0", "(last [9 6 5 4 9]) -> 9", "(last [7 9 4 3 5]) -> 5"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038455}
{"name": "last", "examples": ["(last [5 7 4]) -> 4", "(last [4]) -> 4", "(last [9 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.036695}
{"name": "last", "examples": ["(last [9 4 9 1 8]) -> 8", "(last [4 2 6 6 7]) -> 7", "(last [1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026173}
{"name": "last", "examples": ["(last [2 0]) -> 0", "(last [6 9 5 1 6]) -> 6", "(last [6 8 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.039423}
{"name": "last", "examples": ["(last [1 8 3 7]) -> 7", "(last [9 1 9 5 8]) -> 8", "(last [6 2 9 3 6]) -> 6"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.031793}
{"name": "last", "examples": ["(last [1 5 5 9 1]) -> 1", "(last [8 0 2 7]) -> 7", "(last [0 9 0 7 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.039593}
{"name": "last", "examples": ["(last [1 6 4 2]) -> 2", "(last [0 1]) -> 1", "(last [4 5 1 5 5]) -> 5"], "solution": "(let last (let a (lambda (b) (+ 1 (car b))) _) _)", "time": 0.011514}
{"name": "last", "examples": ["(last [9 1 0]) -> 0", "(last [7]) -> 7", "(last [1 8]) -> 8"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.025162}
{"name": "last", "examples": ["(last [7 4 2]) -> 2", "(last [4]) -> 4", "(last [2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.030751}
{"name": "last", "examples": ["(last [4 3 9 1 5]) -> 5", "(last [9 9 9]) -> 9", "(last [9 9 7 3]) -> 3"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.038367}
{"name": "last", "examples": ["(last [1 9]) -> 9", "(last [6 4]) -> 4", "(last [5 0 1 9 1]) -> 1"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026366}
{"name": "last", "examples": ["(last [7 8]) -> 8", "(last [8 1 0]) -> 0", "(last [7 4 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.033109}
{"name": "last", "examples": ["(last [5]) -> 5", "(last [2 0 6]) -> 6", "(last [5 2 9 9]) -> 9"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024787}
{"name": "last", "examples": ["(last [6]) -> 6", "(last [9 7 4]) -> 4", "(last [4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.026479}
{"name": "last", "examples": ["(last [8 9 9]) -> 9", "(last [8 3 8 4]) -> 4", "(last [3 0]) -> 0"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.02449}
{"name": "last", "examples": ["(last [3 2 8]) -> 8", "(last [2 5 2]) -> 2", "(last [5 9 4]) -> 4"], "solution": "(let last (let a (lambda (b) (car (cdr (cdr b)))) _) _)", "time": 0.007821}
{"name": "last", "examples": ["(last [3 5 2 1 2]) -> 2", "(last [0 4]) -> 4", "(last [7 5 3 2]) -> 2"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.024035}
{"name": "last", "examples": ["(last [3 3 1 7 7]) -> 7", "(last [6]) -> 6", "(last [8 3 7 9]) -> 9"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.023997}
{"name": "last", "examples": ["(last [8]) -> 8", "(last [2 6 1 5]) -> 5", "(last [7 9 4 4]) -> 4"], "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "time": 0.023997}
