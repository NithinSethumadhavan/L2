{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) 0) _) _)", "time": 0.000705}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {2}}) -> 11", "(sumt {6 {2 {1}} {0}}) -> 9", "(sumt {1 {4} {1 {7}}}) -> 13", "(sumt {}) -> 0", "(sumt {9 {7} {4}}) -> 20", "(sumt {}) -> 0", "(sumt {5 {9} {0 {7}}}) -> 21"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.843759}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {9}) -> 9", "(sumt {7 {3} {8}}) -> 18", "(sumt {1 {0 {0}} {1 {6} {8}}}) -> 16", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.814077}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {5 {7}} {3 {4} {5}}}) -> 30", "(sumt {0 {0 {7}}}) -> 7", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {3 {0 {0 {5} {9}} {8 {8}}}}) -> 33", "(sumt {0}) -> 0", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.330284}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {7 {5}}}) -> 19", "(sumt {8 {5} {7}}) -> 20", "(sumt {0 {7 {6 {1}} {1}}}) -> 15", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {0 {3 {8} {7}} {4}} {4 {7} {9 {9} {3}}}}) -> 58", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.614616}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {6}}) -> 14", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {7} {3}}) -> 12", "(sumt {}) -> 0", "(sumt {8 {8} {9}}) -> 25"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.618977}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {9} {4}}) -> 19", "(sumt {5 {6} {3}}) -> 14", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {2 {3}}) -> 5", "(sumt {3}) -> 3", "(sumt {3 {4} {1}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.755906}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {6 {4 {4}}}) -> 14", "(sumt {1 {3} {9 {1}}}) -> 14", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.156803}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {4 {1 {8}}}}) -> 15", "(sumt {5 {1 {9 {4} {2}}}}) -> 21", "(sumt {}) -> 0", "(sumt {0 {6}}) -> 6", "(sumt {0 {7} {7}}) -> 14", "(sumt {}) -> 0", "(sumt {4 {3 {3 {4} {3}}} {1 {8}}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.174981}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {0}}) -> 6", "(sumt {7 {1}}) -> 8", "(sumt {9}) -> 9", "(sumt {4 {0} {3 {9}}}) -> 16", "(sumt {8 {3} {7}}) -> 18", "(sumt {0}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.197109}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {9 {8}}) -> 17", "(sumt {8}) -> 8", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {4 {8} {4 {7}}} {2 {0 {2}} {6}}}) -> 35"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.300644}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {2}}) -> 11", "(sumt {0 {2 {3 {9} {9}}} {5 {5}}}) -> 33", "(sumt {9 {3 {5} {4}} {0}}) -> 21", "(sumt {6}) -> 6", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {6}) -> 6"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.932615}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {5 {4 {3}}}) -> 12", "(sumt {6}) -> 6", "(sumt {9}) -> 9", "(sumt {2}) -> 2", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 5.492937}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {5 {6}} {9 {2} {6}}}) -> 35", "(sumt {9}) -> 9", "(sumt {8 {2}}) -> 10", "(sumt {7}) -> 7", "(sumt {0 {2} {2}}) -> 4", "(sumt {5}) -> 5", "(sumt {6}) -> 6"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.665994}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {8}}) -> 13", "(sumt {7 {1 {5}}}) -> 13", "(sumt {9 {9}}) -> 18", "(sumt {5 {4 {1}}}) -> 10", "(sumt {0 {0} {0}}) -> 0", "(sumt {}) -> 0", "(sumt {9 {5 {0}} {4}}) -> 18"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.546429}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {5 {8 {6}} {1 {8} {5}}} {9 {9}}}) -> 59", "(sumt {1 {8 {9} {3}}}) -> 21", "(sumt {4 {7} {0}}) -> 11", "(sumt {1 {1}}) -> 2", "(sumt {7}) -> 7", "(sumt {0}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.733648}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {8 {1 {4}} {7 {9} {1}}} {7 {1 {0}}}}) -> 45", "(sumt {4}) -> 4", "(sumt {1 {3 {2} {1}}}) -> 7", "(sumt {}) -> 0", "(sumt {8 {9 {1} {4}} {2}}) -> 24", "(sumt {8}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.915117}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {0 {2}}}) -> 6", "(sumt {4 {7}}) -> 11", "(sumt {7 {0}}) -> 7", "(sumt {4 {7} {7}}) -> 18", "(sumt {4}) -> 4", "(sumt {2}) -> 2", "(sumt {0 {8 {9} {1}} {2 {9} {7}}}) -> 36"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.866073}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {8} {0}}) -> 14", "(sumt {9 {3}}) -> 12", "(sumt {6 {0 {1 {5}}}}) -> 12", "(sumt {6 {1} {3}}) -> 10", "(sumt {4 {2 {3 {0} {8}} {0 {3}}} {8 {6 {5}} {5 {9}}}}) -> 53", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.695054}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {6 {6} {5 {6}}}) -> 23", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {3 {8} {2}}) -> 13"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.349226}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {7}}) -> 8", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {6 {7} {7 {1}}}) -> 21", "(sumt {7 {2 {5} {5}} {4 {5} {6}}}) -> 34", "(sumt {5 {1}}) -> 6"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.81243}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {2 {8}}}) -> 12", "(sumt {}) -> 0", "(sumt {2 {5} {0 {2}}}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {3 {7}}}) -> 15", "(sumt {0 {7 {1} {0}} {0}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.276796}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {9 {3}}) -> 12", "(sumt {}) -> 0", "(sumt {9 {2} {4}}) -> 15", "(sumt {8 {0 {7} {4}} {4}}) -> 23", "(sumt {5 {9} {3}}) -> 17", "(sumt {5 {3 {1}} {8}}) -> 17"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.245874}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {1} {7}}) -> 17", "(sumt {}) -> 0", "(sumt {4}) -> 4"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.847443}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {7} {9}}) -> 23", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {9} {5}}) -> 23", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.545901}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {5} {9}}) -> 21", "(sumt {}) -> 0", "(sumt {2 {5 {1} {8}} {1 {6} {1}}}) -> 24", "(sumt {}) -> 0", "(sumt {2 {7} {4}}) -> 13", "(sumt {4 {1 {1 {1}} {4 {2} {2}}} {1}}) -> 16", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.239892}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {0 {5 {5}}}) -> 10", "(sumt {6 {7 {1}} {4}}) -> 18", "(sumt {}) -> 0", "(sumt {7 {0 {5}} {7}}) -> 19", "(sumt {3 {1}}) -> 4", "(sumt {4 {2 {1} {2}} {5 {0} {4}}}) -> 18"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.028044}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {5} {6}}) -> 13", "(sumt {4 {1 {0} {8}}}) -> 13", "(sumt {1}) -> 1", "(sumt {7 {8}}) -> 15", "(sumt {0 {5} {2 {4}}}) -> 11", "(sumt {3}) -> 3", "(sumt {6 {4}}) -> 10"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.18279}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {8 {7} {8 {4}}}}) -> 29", "(sumt {}) -> 0", "(sumt {4 {7}}) -> 11", "(sumt {0}) -> 0", "(sumt {1 {6}}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.953424}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {3 {0 {8 {9}}} {9}}) -> 29", "(sumt {2 {9}}) -> 11", "(sumt {3 {1 {4}}}) -> 8", "(sumt {8 {2} {9}}) -> 19", "(sumt {5}) -> 5", "(sumt {6 {9 {8 {9}}}}) -> 32"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.472948}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {1} {6}}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {5 {4 {4 {2} {8}}}}) -> 23", "(sumt {0 {6} {9 {1}}}) -> 16"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.57514}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {9} {9}}) -> 23", "(sumt {9}) -> 9", "(sumt {8 {2} {3 {4 {4}} {3}}}) -> 24", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {2 {2 {9}} {5}}) -> 18", "(sumt {4 {2 {2} {8}}}) -> 16"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.560147}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {6} {3 {1} {5}}}) -> 19", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {2}}) -> 8", "(sumt {3 {6}}) -> 9", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.702701}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {8}}) -> 14", "(sumt {8 {7 {9 {2}} {5 {9} {7}}}}) -> 47", "(sumt {3 {4 {1}}}) -> 8", "(sumt {7 {7}}) -> 14", "(sumt {0 {3} {3}}) -> 6", "(sumt {}) -> 0", "(sumt {0 {9}}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.693587}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {0 {9}}}) -> 15", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {1 {5 {8} {2}} {3}} {8 {9 {5}}}}) -> 42", "(sumt {9 {3}}) -> 12", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.65282}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {0 {4 {9}}}}) -> 14", "(sumt {8}) -> 8", "(sumt {4}) -> 4", "(sumt {2}) -> 2", "(sumt {7 {7} {3}}) -> 17", "(sumt {6}) -> 6", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.670593}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {8 {3} {1}}}) -> 20", "(sumt {0 {2} {4}}) -> 6", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {9} {2 {4} {0 {9} {1}}}}) -> 30"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.570855}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8 {1} {3}}) -> 12", "(sumt {2 {4}}) -> 6", "(sumt {}) -> 0", "(sumt {0 {5}}) -> 5", "(sumt {6 {4 {9}} {7}}) -> 26", "(sumt {6 {2 {2}} {0 {1} {9}}}) -> 20", "(sumt {5 {6 {8 {9} {2}} {5 {7}}}}) -> 42"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.552981}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0 {0}}) -> 0", "(sumt {9 {5 {8}} {9}}) -> 31", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {2 {6} {1}}) -> 9", "(sumt {}) -> 0", "(sumt {6 {5 {3}} {8 {1} {6}}}) -> 29"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.754651}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3 {3} {5}}) -> 11", "(sumt {6}) -> 6", "(sumt {8}) -> 8", "(sumt {1 {6 {1 {1}}} {1 {2}}}) -> 12", "(sumt {8}) -> 8", "(sumt {7 {9 {8}}}) -> 24", "(sumt {8 {7}}) -> 15"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.573251}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {4 {9 {7} {2}}}) -> 22", "(sumt {4}) -> 4", "(sumt {2 {6} {1}}) -> 9", "(sumt {}) -> 0", "(sumt {0 {2 {2} {5}} {1}}) -> 10"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.980112}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4 {9 {0}}}) -> 13", "(sumt {7 {2} {7 {8}}}) -> 24", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {3 {7}} {1}}) -> 20", "(sumt {8 {4 {1} {2}} {3 {2}}}) -> 20"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.462732}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {6}}) -> 6", "(sumt {4 {6} {1}}) -> 11", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {5 {7}}) -> 12"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.075983}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {1} {4}}) -> 6", "(sumt {4 {1 {1} {8}}}) -> 14", "(sumt {7 {3} {8}}) -> 18", "(sumt {4 {8} {4}}) -> 16", "(sumt {1 {6} {9}}) -> 16", "(sumt {2 {3} {9 {3} {5 {9} {3}}}}) -> 34", "(sumt {2}) -> 2"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.614092}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0 {6 {4 {0}} {5 {0} {0}}}}) -> 15", "(sumt {}) -> 0", "(sumt {8 {3 {2} {0}}}) -> 13", "(sumt {5 {6} {5}}) -> 16", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {4 {0}}) -> 4"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.581441}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {9 {7 {2}} {3}} {2 {3 {1}} {5 {2}}}}) -> 42", "(sumt {}) -> 0", "(sumt {4 {4 {6 {3} {8}} {5}}}) -> 30", "(sumt {2 {0} {2}}) -> 4", "(sumt {1 {2}}) -> 3", "(sumt {7}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.712204}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0 {7} {1 {5}}}) -> 13", "(sumt {}) -> 0", "(sumt {6 {2} {3}}) -> 11", "(sumt {8 {5 {2}} {9 {9}}}) -> 33", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.944055}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {4 {6}}) -> 10", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {1 {4 {8 {0} {8}} {2 {4} {2}}}}) -> 29", "(sumt {4}) -> 4", "(sumt {3 {7} {6}}) -> 16"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.798599}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {9}) -> 9", "(sumt {5 {3}}) -> 8", "(sumt {7 {0 {0}}}) -> 7", "(sumt {2}) -> 2", "(sumt {8 {2 {6} {5 {8}}} {2 {8}}}) -> 39", "(sumt {6 {6} {4}}) -> 16"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.985816}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3 {3 {7} {6}}}) -> 19", "(sumt {9 {6} {6}}) -> 21", "(sumt {3 {9} {4}}) -> 16", "(sumt {8 {8}}) -> 16", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {4}) -> 4"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 6.15451}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3 {6 {2 {5} {6}} {0 {9} {0}}}}) -> 31", "(sumt {}) -> 0", "(sumt {4 {8 {0}} {6 {6 {6} {7}} {2 {2}}}}) -> 41", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {0 {7}}) -> 7", "(sumt {3 {5}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.035455}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {3 {8} {0}} {5 {4}}}) -> 24", "(sumt {2}) -> 2", "(sumt {0}) -> 0", "(sumt {7}) -> 7", "(sumt {7 {8}}) -> 15", "(sumt {2}) -> 2"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.831574}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {0}}) -> 2", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {6}}) -> 10", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (+ c (value (car (children b))))) 0)) _) _)", "time": 4.517417}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {0 {8} {4}}) -> 12", "(sumt {2}) -> 2", "(sumt {2 {9 {7 {5} {6}}}}) -> 29", "(sumt {8}) -> 8", "(sumt {6 {2} {0}}) -> 8", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.264237}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {4}}) -> 5", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {8} {4}}) -> 20", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.684221}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {4 {8}}) -> 12", "(sumt {9 {3} {1 {4} {6}}}) -> 23", "(sumt {0 {3 {0 {3} {8}}} {8}}) -> 22"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.750495}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {3 {0 {0} {0}}}}) -> 9", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {5 {3 {7}}}) -> 15", "(sumt {7}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 5.229174}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {7} {2 {3}}}) -> 12", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {2}) -> 2", "(sumt {1 {6 {9}} {2}}) -> 18"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.507701}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {5 {0}}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {0} {6}}) -> 12", "(sumt {5}) -> 5", "(sumt {3 {5 {2} {0}} {7 {3}}}) -> 20", "(sumt {5 {2}}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.753492}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {1 {9}}) -> 10", "(sumt {}) -> 0", "(sumt {9 {1}}) -> 10", "(sumt {1 {7} {0 {7} {1 {7} {9}}}}) -> 32", "(sumt {1 {8} {7}}) -> 16", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.131699}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {3 {4} {1}} {4 {1} {4}}}) -> 19", "(sumt {5 {3}}) -> 8", "(sumt {5 {9} {6}}) -> 20", "(sumt {5}) -> 5", "(sumt {3 {8} {9}}) -> 20", "(sumt {}) -> 0", "(sumt {0 {5}}) -> 5"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.894304}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {3 {8}}}) -> 13", "(sumt {0}) -> 0", "(sumt {2 {4 {2 {1} {7}} {9 {3}}} {6 {1 {2}} {1}}}) -> 38", "(sumt {}) -> 0", "(sumt {4 {9 {9}} {0 {1} {9}}}) -> 32", "(sumt {9 {2} {0 {8} {2 {7}}}}) -> 28"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.753968}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0 {6} {8}}) -> 14", "(sumt {6}) -> 6", "(sumt {6 {6}}) -> 12", "(sumt {3 {2} {1 {1}}}) -> 7", "(sumt {0}) -> 0", "(sumt {8 {1}}) -> 9", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.68437}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8 {1 {2}} {8 {2 {4}}}}) -> 25", "(sumt {4 {5 {8} {7}} {7}}) -> 31", "(sumt {5 {8}}) -> 13", "(sumt {2 {3 {1} {0}} {6 {3} {9}}}) -> 24", "(sumt {9 {3 {2}} {4}}) -> 18", "(sumt {2 {3 {3 {3} {9}}} {4 {0}}}) -> 24", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.176173}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {7} {9}}) -> 22", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {0 {8 {3} {7}} {3 {0 {8} {4}}}}) -> 33", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {9}) -> 9"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.79723}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {0 {2 {9} {0 {2}}}}) -> 13", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {6}) -> 6", "(sumt {6 {7 {5}}}) -> 18"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.640552}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {3 {2}}) -> 5", "(sumt {0 {5} {5}}) -> 10", "(sumt {7}) -> 7", "(sumt {6 {2 {5 {4}}}}) -> 17", "(sumt {0 {8 {7}}}) -> 15", "(sumt {7}) -> 7"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.720323}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {1 {3}} {1 {0}}}) -> 11", "(sumt {2}) -> 2", "(sumt {2 {4} {4 {1}}}) -> 11", "(sumt {8 {7}}) -> 15", "(sumt {4 {5} {5 {1} {1}}}) -> 16", "(sumt {5 {4 {6}} {1 {3}}}) -> 19", "(sumt {3 {1 {2}}}) -> 6"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.675033}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {9 {0 {0}} {8 {5} {5}}}) -> 27", "(sumt {7 {7} {6 {5 {2}}}}) -> 27", "(sumt {}) -> 0", "(sumt {8 {8}}) -> 16"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.307149}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8 {2} {1}}) -> 11", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {5 {9 {2}} {9 {3}}}) -> 28", "(sumt {}) -> 0", "(sumt {0 {7 {2} {6}} {7}}) -> 22", "(sumt {2 {8 {2}} {8 {3}}}) -> 23"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.737284}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {5 {3 {9} {1}}} {5}}) -> 28", "(sumt {4}) -> 4", "(sumt {6}) -> 6", "(sumt {2 {3 {5}}}) -> 10", "(sumt {5 {5} {4}}) -> 14", "(sumt {3 {7} {4}}) -> 14", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.579395}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {1} {4 {3} {0}}}) -> 15", "(sumt {9 {8 {2}} {7 {6}}}) -> 32", "(sumt {4 {4}}) -> 8", "(sumt {6 {1 {6 {5}}}}) -> 18", "(sumt {3 {0}}) -> 3", "(sumt {9}) -> 9", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.216038}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {0 {5 {7} {7 {6} {0}}} {5 {7 {5} {8}}}}) -> 50", "(sumt {0}) -> 0", "(sumt {0 {6}}) -> 6", "(sumt {2 {9 {7 {0} {6}} {3 {4} {3}}}}) -> 34", "(sumt {}) -> 0", "(sumt {1 {2 {5}}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.02476}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {3 {9} {4}} {0 {2}}}) -> 27", "(sumt {2}) -> 2", "(sumt {7 {8 {0 {3} {2}}} {6 {0 {7}} {2}}}) -> 35", "(sumt {8 {2 {2}} {2 {3}}}) -> 17", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.305456}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {4} {2}}) -> 15", "(sumt {1 {4}}) -> 5", "(sumt {0 {6} {7}}) -> 13", "(sumt {8 {3} {8}}) -> 19", "(sumt {8 {1} {5}}) -> 14", "(sumt {6 {6 {1}}}) -> 13", "(sumt {9 {2 {5} {5}} {5}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.410083}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {1}}) -> 6", "(sumt {}) -> 0", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c 1)) c)) 0)) _) _)", "time": 4.834591}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {9 {9}}) -> 18", "(sumt {3 {6} {4}}) -> 13", "(sumt {7}) -> 7", "(sumt {8 {5}}) -> 13", "(sumt {4}) -> 4", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.541206}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {3 {3}} {3}}) -> 15", "(sumt {9}) -> 9", "(sumt {6 {9}}) -> 15", "(sumt {6 {1}}) -> 7", "(sumt {}) -> 0", "(sumt {9 {1} {7}}) -> 17", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.861711}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {1 {9 {6}}}}) -> 18", "(sumt {3}) -> 3", "(sumt {5}) -> 5", "(sumt {9}) -> 9", "(sumt {0 {3 {7} {8}} {3 {3}}}) -> 24", "(sumt {}) -> 0", "(sumt {7 {7}}) -> 14"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.976314}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {0 {4 {1} {2}}} {5}}) -> 17", "(sumt {6 {9} {2 {9 {5}} {6 {2}}}}) -> 39", "(sumt {1 {8}}) -> 9", "(sumt {0 {3}}) -> 3", "(sumt {}) -> 0", "(sumt {6 {4 {6}}}) -> 16", "(sumt {5}) -> 5"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.27941}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {7 {6 {2 {1}}} {1}}) -> 17", "(sumt {0}) -> 0", "(sumt {3 {1}}) -> 4", "(sumt {4 {4 {3 {5} {0}}}}) -> 16", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.273662}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {7 {2}}) -> 9", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {7 {8} {5}}) -> 20", "(sumt {9 {9} {8}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.294139}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {4 {5} {9}} {3 {1 {2}}}}) -> 31", "(sumt {7 {7 {6} {3}}}) -> 23", "(sumt {4 {8 {4} {9}} {7 {7 {0} {2}} {5 {1} {9}}}}) -> 56", "(sumt {9 {5 {9} {6}}}) -> 29", "(sumt {4 {4}}) -> 8", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.515527}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {3 {2}} {6 {1}}}) -> 13", "(sumt {}) -> 0", "(sumt {6 {9} {0}}) -> 15", "(sumt {}) -> 0", "(sumt {2 {8 {7 {5} {9}} {9 {8} {8}}} {4}}) -> 60", "(sumt {3}) -> 3", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.813835}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {3} {3 {2} {3}}}) -> 20", "(sumt {4 {5} {6 {7} {5}}}) -> 27", "(sumt {9 {3}}) -> 12", "(sumt {3}) -> 3", "(sumt {4}) -> 4", "(sumt {9}) -> 9", "(sumt {7 {1}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 5.326021}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {2}) -> 2", "(sumt {5 {8 {9} {9}} {1}}) -> 32", "(sumt {6 {8}}) -> 14", "(sumt {0 {0 {3} {1}} {9}}) -> 13"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.83833}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {1 {2} {4}}) -> 7", "(sumt {}) -> 0", "(sumt {8 {9}}) -> 17", "(sumt {}) -> 0", "(sumt {9 {9 {9} {2}} {4 {6}}}) -> 39", "(sumt {2 {7 {4}} {8 {6}}}) -> 27", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.067048}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {3 {1}} {5}}) -> 18", "(sumt {0 {7}}) -> 7", "(sumt {0 {8} {3 {0} {5}}}) -> 16", "(sumt {5}) -> 5", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {9 {0 {1} {7}} {9}}) -> 26"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.875053}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {7 {3} {3}}) -> 13", "(sumt {9 {4} {4}}) -> 17", "(sumt {7 {4 {9}} {9 {6}}}) -> 35", "(sumt {4 {6 {4 {4}}} {8 {2}}}) -> 28", "(sumt {2 {0 {8 {6}} {1}}}) -> 17", "(sumt {5 {3 {0}} {7 {1} {1}}}) -> 17", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.662071}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {2 {5 {4}}}) -> 11", "(sumt {1 {0} {9}}) -> 10", "(sumt {7 {8 {1} {6}} {0 {3} {2}}}) -> 27", "(sumt {4 {5 {4}} {1 {5} {4}}}) -> 23"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.836932}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3 {3}}) -> 6", "(sumt {0 {8 {0} {3 {7}}} {9}}) -> 27", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {8 {8 {5 {0}} {6 {0} {8}}} {1}}) -> 36", "(sumt {3}) -> 3", "(sumt {9 {2}}) -> 11"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.467016}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {9 {5 {4}} {6}}) -> 24", "(sumt {9 {2}}) -> 11", "(sumt {8 {7} {1 {1}}}) -> 17", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {7 {5 {5}}}) -> 17", "(sumt {1 {6 {2} {6}} {8}}) -> 23"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.897776}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {1 {0} {9}} {2 {2} {8}}}) -> 22", "(sumt {9 {7}}) -> 16", "(sumt {8}) -> 8", "(sumt {7 {1} {3}}) -> 11", "(sumt {5 {8 {2}}}) -> 15", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.423864}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {2 {7} {1}}) -> 10", "(sumt {9 {2} {2}}) -> 13", "(sumt {7 {7} {9 {5}}}) -> 28", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {1 {3} {4}}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.958183}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {6 {2 {3 {1}}}}) -> 12", "(sumt {4}) -> 4", "(sumt {7}) -> 7", "(sumt {5}) -> 5", "(sumt {5 {1 {8}}}) -> 14", "(sumt {3 {5} {1}}) -> 9", "(sumt {}) -> 0"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.304662}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {5 {0}}) -> 5", "(sumt {8}) -> 8", "(sumt {8 {0 {7 {6}}} {7 {7}}}) -> 35", "(sumt {3 {3} {5}}) -> 11", "(sumt {9 {6} {7}}) -> 22", "(sumt {8}) -> 8", "(sumt {8}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 4.35333}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {4 {5}}) -> 9", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {9 {6} {3}}) -> 18", "(sumt {1}) -> 1"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.765514}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {7 {3} {2 {7}}}}) -> 21", "(sumt {5 {3 {3}} {4 {3 {3}} {2 {6} {0}}}}) -> 29", "(sumt {1 {2} {6}}) -> 9", "(sumt {6 {3} {9 {1} {6}}}) -> 25", "(sumt {6}) -> 6", "(sumt {8}) -> 8"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.629168}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {3 {5} {2 {1} {9}}}) -> 20", "(sumt {6 {5} {5}}) -> 16", "(sumt {2 {7 {6} {1}} {8 {0} {7}}}) -> 31", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {8}}) -> 17"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.299893}
{"name": "sumt", "examples": ["(sumt {}) -> 0", "(sumt {2 {8} {6 {6} {1 {3} {7}}}}) -> 33", "(sumt {0 {3 {0} {3}} {7}}) -> 13", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {6} {8}}) -> 19", "(sumt {3 {2}}) -> 5", "(sumt {6 {0} {7 {6}}}) -> 19"], "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 3.484746}
