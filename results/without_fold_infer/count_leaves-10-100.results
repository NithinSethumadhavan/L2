{"time": 1.706871, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {1 {3 {8}} {5 {1}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {5} {0 {4}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {8 {0} {4}}) -> 2", "(count_leaves {0 {2 {4}} {8}}) -> 2"]}
{"time": 1.733078, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {7 {6} {6 {5}}}) -> 2"]}
{"time": 1.738586, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {0 {6}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {3 {0 {3} {3}} {1}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 1.728874, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {0 {6} {3 {7} {3}}}) -> 3", "(count_leaves {3 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9}) -> 1"]}
{"time": 1.699699, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {1} {7}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.751145, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {1}}) -> 1", "(count_leaves {2 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {1 {5}} {0 {1}}}) -> 2", "(count_leaves {8 {6 {5}}}) -> 1", "(count_leaves {6 {7 {2}} {1 {7} {4}}}) -> 3", "(count_leaves {3 {6 {5} {6}}}) -> 2"]}
{"time": 1.899877, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {2 {3 {1} {7}} {0 {6}}} {3}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {4} {6 {2}}} {7 {4 {4} {9}}}}) -> 4"]}
{"time": 1.829246, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {2 {0} {1}}}) -> 2", "(count_leaves {1 {9}}) -> 1", "(count_leaves {7 {0} {1}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {1} {5}}}) -> 2"]}
{"time": 1.936199, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {8 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {4 {1 {7 {5}} {8 {5}}}}) -> 2", "(count_leaves {7 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9 {8 {6}}}) -> 1"]}
{"time": 1.978231, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7 {4 {3} {5}} {4 {8 {8}}}}) -> 3", "(count_leaves {7 {7 {7 {5}} {2}} {1}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {4 {3}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {4} {2}}) -> 2"]}
{"time": 2.040675, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1"]}
{"time": 2.016507, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {0 {5 {5}} {2}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {3 {3 {7 {5}} {9 {8}}} {7 {8 {4} {5}}}}) -> 4", "(count_leaves {5}) -> 1", "(count_leaves {8 {9 {3 {4} {6}}}}) -> 2"]}
{"time": 2.002598, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {4}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {7 {6} {6 {7} {9}}}) -> 3", "(count_leaves {4 {8} {9 {3} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {3 {0}} {6}}) -> 2", "(count_leaves {3 {4 {4}} {8}}) -> 2", "(count_leaves {3 {6} {9}}) -> 2"]}
{"time": 2.046434, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {4 {9}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {6 {2 {9}}} {3 {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1"]}
{"time": 2.087011, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {1 {3 {8}} {3 {5} {4}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {1 {5} {0}}) -> 2", "(count_leaves {3 {0} {1 {5} {5}}}) -> 3", "(count_leaves {2 {9} {4}}) -> 2", "(count_leaves {9}) -> 1"]}
{"time": 2.161551, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1 {3}}}) -> 1", "(count_leaves {0 {1 {4}}}) -> 1", "(count_leaves {7 {8} {5}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8 {4 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.249769, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {5} {9}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1} {9 {5 {2} {9}}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.313377, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {7} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6 {0} {0}}) -> 2", "(count_leaves {1 {3} {5}}) -> 2", "(count_leaves {2 {2}}) -> 1", "(count_leaves {3 {7}}) -> 1"]}
{"time": 1.367246, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0 {9} {9}} {2 {5} {0}}}) -> 4", "(count_leaves {6 {4}}) -> 1"]}
{"time": 1.343686, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {8} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6} {5}}) -> 2"]}
{"time": 1.35413, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {7 {2 {8}} {3}} {9 {3}}}) -> 3", "(count_leaves {7 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {0} {7}}}) -> 2", "(count_leaves {3 {0} {0}}) -> 2", "(count_leaves {8 {5 {0} {8 {2} {5}}} {7 {9 {5}} {9 {4} {5}}}}) -> 6", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.190869, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {2 {0} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {0 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 1.387916, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {9} {9}}) -> 2", "(count_leaves {5 {4} {4 {6 {7} {2}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3 {8 {5 {9} {9}}} {4}}) -> 3", "(count_leaves {6 {6} {2 {3 {7}} {3 {2} {7}}}}) -> 4", "(count_leaves {9 {9 {6 {6} {2}} {2 {7} {9}}}}) -> 4", "(count_leaves {4 {1} {5}}) -> 2"]}
{"time": 1.902874, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {7} {4}}) -> 2", "(count_leaves {1 {1} {9}}) -> 2", "(count_leaves {1 {5 {3 {1} {4}} {9 {6} {8}}}}) -> 4", "(count_leaves {0 {3 {8 {2} {9}} {5 {2} {8}}} {0 {3 {5} {8}}}}) -> 6", "(count_leaves {8}) -> 1"]}
{"time": 1.896731, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {0 {2} {8}} {1}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {9 {7} {9}}) -> 2", "(count_leaves {3 {0 {9}} {6 {6}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {1 {1}} {8 {3}}}) -> 2"]}
{"time": 1.939328, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {2} {9}}) -> 2", "(count_leaves {2 {3}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {3 {3 {7}} {8 {3} {2}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {6 {7} {7 {6 {3}} {0 {1} {6}}}}) -> 4", "(count_leaves {2 {6} {7}}) -> 2"]}
{"time": 1.735714, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {8 {2} {2 {6 {9} {9}}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {1} {3}}) -> 2", "(count_leaves {9 {2}}) -> 1"]}
{"time": 0.418948, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (- 1 (sum d))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0 {5} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1"]}
{"time": 1.964462, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4 {8} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {1 {6}}) -> 1"]}
{"time": 1.925631, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7 {9 {5 {7} {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {1} {8 {1 {6}} {4 {4}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {8 {4}}) -> 1"]}
{"time": 1.938101, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4} {8}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {0} {5 {7} {0}}}) -> 3", "(count_leaves {5 {1 {7 {6} {5}}} {2}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.8414, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {5 {7} {9 {5}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {9 {0}}) -> 1"]}
{"time": 1.853097, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {3 {5} {9 {3 {4}} {7 {5} {5}}}}) -> 4", "(count_leaves {6}) -> 1", "(count_leaves {5 {8 {9 {5}} {8}} {9 {1 {8} {0}}}}) -> 4", "(count_leaves {5 {7 {4}} {5 {6}}}) -> 2", "(count_leaves {6 {3 {8}} {3}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {2 {9 {1}} {7 {3}}}) -> 2"]}
{"time": 1.043477, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {8 {5 {4} {3}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {6 {5} {8}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {2 {3} {8}}) -> 2"]}
{"time": 1.248804, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {8} {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {5} {3}}}) -> 2", "(count_leaves {4 {8} {8 {0 {0} {3}} {7}}}) -> 4", "(count_leaves {0}) -> 1", "(count_leaves {8}) -> 1"]}
{"time": 1.356602, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {8}}) -> 1", "(count_leaves {7 {7 {2}}}) -> 1", "(count_leaves {6 {0} {3}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9} {5}}) -> 2", "(count_leaves {9 {2}}) -> 1", "(count_leaves {6 {0}}) -> 1"]}
{"time": 0.043954, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {5}}) -> 1", "(count_leaves {9 {8 {8}}}) -> 1", "(count_leaves {7 {0 {6}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2}}) -> 1"]}
{"time": 1.415732, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {9}}) -> 1", "(count_leaves {1 {5 {2 {8}}}}) -> 1", "(count_leaves {6 {0 {9 {7}}}}) -> 1", "(count_leaves {4 {8}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {9} {6}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.55497, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {0}} {3}}) -> 2", "(count_leaves {7 {0 {9} {9}} {5 {3}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6 {1 {3 {7}}} {0 {3 {0} {5}} {5 {0} {7}}}}) -> 5"]}
{"time": 1.574047, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {6}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {6} {7}}) -> 2", "(count_leaves {2 {5 {4 {3}}} {3 {7}}}) -> 2"]}
{"time": 1.342931, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {1 {4}}}) -> 1", "(count_leaves {5 {5 {5} {2}}}) -> 2", "(count_leaves {1 {5 {6}}}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {1 {4} {2}}) -> 2", "(count_leaves {0 {8 {6}} {0 {2} {6}}}) -> 3", "(count_leaves {6 {7}}) -> 1", "(count_leaves {3 {2 {8} {0}}}) -> 2"]}
{"time": 1.378036, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4 {8 {3} {7}} {2 {3} {8}}}}) -> 4", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {5} {6}}) -> 2", "(count_leaves {2 {6} {8}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.586872, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3} {5 {4} {3 {5}}}}) -> 3", "(count_leaves {8 {1}}) -> 1", "(count_leaves {2 {8 {8} {0 {7}}}}) -> 2", "(count_leaves {4 {0 {7} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {5} {2}}) -> 2", "(count_leaves {1 {5 {2} {1}}}) -> 2"]}
{"time": 1.301301, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {0 {4}}}) -> 1", "(count_leaves {3 {6 {9 {1}} {6 {7}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {9 {3} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {7 {1 {9}} {2 {6}}}) -> 2"]}
{"time": 1.492184, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {4} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {7} {7 {4} {5}}} {8}}) -> 4", "(count_leaves {9 {0 {8}} {5 {1 {8}} {1 {6}}}}) -> 3", "(count_leaves {3 {2 {6} {0 {7} {8}}}}) -> 3"]}
{"time": 1.775121, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {4 {2 {0}} {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6 {9} {8}} {8 {7} {9}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3 {7 {1}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {6}}) -> 1"]}
{"time": 1.401778, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {2}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {0 {4}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4 {1} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {5} {1 {0 {0}} {0}}}) -> 3"]}
{"time": 1.567932, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {6} {6}}) -> 2", "(count_leaves {0 {3} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {4} {9}}) -> 2", "(count_leaves {8 {8}}) -> 1", "(count_leaves {3 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8}}) -> 1"]}
{"time": 1.751668, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1 {0 {7}} {9 {8} {1}}}}) -> 3", "(count_leaves {2 {1 {2 {1} {5}} {3 {8}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {5 {9 {9 {6} {0}} {2 {1}}}}) -> 3"]}
{"time": 1.009701, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {3 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6 {8} {9 {8 {0} {1}}}}) -> 3", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1"]}
{"time": 1.774471, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {1 {2 {6}}} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {9} {1}}) -> 2", "(count_leaves {9 {3} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {7}}) -> 1"]}
{"time": 0.057756, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.679604, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {2} {2}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {0 {8}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"]}
{"time": 1.078801, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {4 {3} {5}}) -> 2", "(count_leaves {7 {9 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {3} {0 {2}}} {7 {6 {7} {1}} {0 {1} {8}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {9 {3}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.110641, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {4} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {3 {1 {8}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {7 {8} {5}}}) -> 2"]}
{"time": 1.898156, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {6}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2 {0 {6}}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {6} {0}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {6}) -> 1"]}
{"time": 1.229966, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {0}} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {4} {9}}}) -> 2", "(count_leaves {2 {1} {9 {5 {0}}}}) -> 2", "(count_leaves {6 {2}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {2 {5} {8}}}) -> 2"]}
{"time": 1.982996, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {7 {4 {0} {1}}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {1 {3}}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2} {4}}) -> 2", "(count_leaves {3 {6 {4 {6}} {7}}}) -> 2"]}
{"time": 1.256592, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5 {7 {2} {0}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {3}}) -> 1"]}
{"time": 1.775299, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1 {2 {7 {2} {6}} {5 {8} {3}}}}) -> 4", "(count_leaves {6 {4 {9}} {0 {3 {2} {6}} {0 {3}}}}) -> 4", "(count_leaves {2 {4 {6} {2}}}) -> 2", "(count_leaves {3 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {0}}}) -> 1"]}
{"time": 1.911756, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8 {1} {5 {3}}}) -> 2", "(count_leaves {1 {6} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {7 {8} {6 {3}}}}) -> 2", "(count_leaves {8 {0 {7}} {9 {1}}}) -> 2"]}
{"time": 1.966929, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {4} {5}}) -> 2", "(count_leaves {4 {4 {4}}}) -> 1", "(count_leaves {9 {9} {4}}) -> 2", "(count_leaves {4 {4 {7 {8}}} {1 {9 {6}}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0 {1 {0 {0}} {0}}}) -> 2"]}
{"time": 1.780043, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {1 {5 {0} {8}} {9}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {2} {3 {3}}}) -> 2", "(count_leaves {3 {6} {1}}) -> 2"]}
{"time": 0.03946, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0 {5}}) -> 1"]}
{"time": 1.299306, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {1 {6 {8} {2}}} {1 {1}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {7 {9 {4 {4}}}}) -> 1"]}
{"time": 1.253977, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0 {5} {2}}) -> 2", "(count_leaves {9 {4 {3} {3}}}) -> 2", "(count_leaves {7 {1 {3 {2} {2}}} {1 {5 {0}}}}) -> 3", "(count_leaves {7 {2} {9}}) -> 2", "(count_leaves {3 {0} {6}}) -> 2", "(count_leaves {7 {1}}) -> 1", "(count_leaves {8 {4} {5}}) -> 2"]}
{"time": 1.233333, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1 {8 {4}}}) -> 1", "(count_leaves {9 {5}}) -> 1", "(count_leaves {9 {1} {1 {7 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {4 {7}}) -> 1"]}
{"time": 1.965608, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {8 {0}} {2 {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {4 {6 {7} {9}} {3}} {5 {6 {4}} {6 {9}}}}) -> 5", "(count_leaves {4 {7} {0}}) -> 2", "(count_leaves {2 {3 {7} {5 {2}}}}) -> 2", "(count_leaves {}) -> 0"]}
{"time": 1.982452, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {4 {3 {0} {0}} {8}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {6 {9 {3}}} {8}}) -> 2", "(count_leaves {7 {9 {3}}}) -> 1", "(count_leaves {0 {6 {7} {3 {6} {8}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {3 {1} {4}}) -> 2"]}
{"time": 1.70252, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {1}}) -> 1", "(count_leaves {6 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {8 {5 {6} {5}}} {2 {9} {2 {5}}}}) -> 4", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3 {3}}) -> 1"]}
{"time": 1.118873, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {5}}) -> 1", "(count_leaves {5 {7} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {9 {6 {5}} {7 {6} {0}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {5 {9}}}) -> 1", "(count_leaves {5 {2} {0 {5}}}) -> 2"]}
{"time": 1.113736, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {2}}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {2 {5} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"]}
{"time": 1.81582, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4 {9 {2 {2} {0}} {3}}}) -> 3", "(count_leaves {5 {0 {0}} {4 {8}}}) -> 2", "(count_leaves {3 {8} {0 {2} {4}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {0}) -> 1"]}
{"time": 1.378938, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {2 {2}} {3 {7}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3 {3} {3}} {0}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 1.844649, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {4}}) -> 1", "(count_leaves {5 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {3}}}) -> 1"]}
{"time": 1.143383, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {7} {0}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {4 {1 {5} {1}} {8}}) -> 3", "(count_leaves {0 {2 {8} {6}} {8 {8} {7}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {4 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1"]}
{"time": 0.017517, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {2}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 1.204345, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {0} {1}}) -> 2", "(count_leaves {3 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {2 {9 {0} {6}}}}) -> 2"]}
{"time": 1.140258, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {0}}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {1 {8 {7} {7}} {2 {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2 {4} {9}}) -> 2", "(count_leaves {6 {6}}) -> 1", "(count_leaves {5 {7} {3}}) -> 2", "(count_leaves {9 {2 {2}} {9}}) -> 2"]}
{"time": 1.178999, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {5 {4 {0} {7}}} {8}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1"]}
{"time": 1.842095, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {5} {5}}) -> 2", "(count_leaves {8 {3 {1} {9}}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"]}
{"time": 1.977135, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {2} {6}}) -> 2", "(count_leaves {1 {4 {6 {9}}}}) -> 1"]}
{"time": 1.887554, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {3 {8} {9}}) -> 2", "(count_leaves {8 {7 {6} {8}} {7 {5} {3}}}) -> 4", "(count_leaves {6}) -> 1"]}
{"time": 2.057601, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {7 {5}} {4 {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {7}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {5 {3 {7} {2}} {3}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {6 {8}}}) -> 1"]}
{"time": 1.104157, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {9 {1}} {8 {7}}}) -> 2", "(count_leaves {3 {3 {3}}}) -> 1", "(count_leaves {4 {9} {2 {2} {1}}}) -> 3", "(count_leaves {3 {9} {5}}) -> 2", "(count_leaves {1 {6}}) -> 1", "(count_leaves {3 {0 {6} {1}} {0 {6} {1}}}) -> 4", "(count_leaves {8}) -> 1", "(count_leaves {0 {9 {5 {3} {7}}}}) -> 2"]}
{"time": 1.972846, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2 {9 {8}} {5 {6} {7}}} {3}}) -> 4", "(count_leaves {1 {3 {4 {5}}} {8 {5}}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {1 {3}} {6 {1} {4}}} {9 {9 {4}} {7 {0} {1}}}}) -> 6"]}
{"time": 1.904774, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {9 {0} {0}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {7 {0}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1"]}
{"time": 0.040352, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {3}}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.214249, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (- 1 (sum d))) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {1} {9}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1"]}
{"time": 1.771845, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {9 {1 {4}}} {3 {6 {2}} {0 {2}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {8 {1} {2}}) -> 2", "(count_leaves {9 {9} {1}}) -> 2"]}
{"time": 1.001725, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {6 {6}} {4}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4 {2}}}) -> 1", "(count_leaves {5}) -> 1"]}
{"time": 1.524469, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {9} {6}}) -> 2", "(count_leaves {2 {8 {2} {7 {2}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {2 {3} {4}} {2}}) -> 3", "(count_leaves {2 {2}}) -> 1", "(count_leaves {6 {7 {1 {7} {2}} {3 {7}}} {8 {7 {0}}}}) -> 4", "(count_leaves {9 {3}}) -> 1"]}
{"time": 0.790814, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5 {2} {6}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {1} {1}}}) -> 2", "(count_leaves {6 {5 {9} {3}} {5}}) -> 3", "(count_leaves {}) -> 0"]}
{"time": 1.32371, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {3 {4 {4}} {4}}) -> 2", "(count_leaves {4 {1} {4}}) -> 2", "(count_leaves {0 {8 {1} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {2} {3}}) -> 2", "(count_leaves {0 {1}}) -> 1", "(count_leaves {4 {6} {9}}) -> 2"]}
{"time": 1.224917, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6 {3} {6 {6 {8} {5}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {0}}) -> 1", "(count_leaves {4 {6} {3}}) -> 2", "(count_leaves {5 {3}}) -> 1", "(count_leaves {7 {8}}) -> 1"]}
{"time": 0.743021, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {6}}) -> 1", "(count_leaves {1 {9 {1 {2}} {5}} {4}}) -> 3", "(count_leaves {0 {3 {4}} {3}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {8 {3}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {1}) -> 1"]}
{"time": 0.948356, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3} {0}}) -> 2", "(count_leaves {5 {5 {5} {7}} {3 {7}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0"]}
{"time": 0.826967, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {8 {0} {7}}}}) -> 2", "(count_leaves {0 {0}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {4 {4} {8}}) -> 2", "(count_leaves {8 {8}}) -> 1", "(count_leaves {9}) -> 1"]}
{"time": 0.869496, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {9 {4}} {6}}) -> 2", "(count_leaves {1 {6 {9}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6 {7}}) -> 1"]}
{"time": 0.678501, "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {8} {7}}) -> 2", "(count_leaves {7 {5}}) -> 1", "(count_leaves {1 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {5}}) -> 1", "(count_leaves {6 {7 {2}} {2}}) -> 2"]}
