{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000238, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000283, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000633, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000652, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000707, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ (car c) (car (cdr c)))))) _) _)", "time": 0.44764, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 8]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.591279, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 5 7 2]}) -> {15}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ (car c) (car (cdr c)))))) _) _)", "time": 0.523138, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 8]}) -> {17}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.625274, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 2 4] {[1 5 6] {[]}}}) -> {7 {12 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.628129, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3] {[9 3 7]} {[7 5 8 1 7]}}) -> {3 {19} {28}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ (car c) (car (cdr c)))))) _) _)", "time": 0.552375, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 9 0]}) -> {14}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.632025, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 5 1 3 3] {[4 4 3 8 4] {[9] {[3 0 6 2 1]}} {[3 9 6] {[]}}}}) -> {21 {23 {9 {12}} {18 {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.63734, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 0 1] {[3 1 8 0]} {[5 0 3 5 3]}}) -> {5 {12} {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.640537, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 0 7 4 8]}) -> {27}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.676497, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 7] {[6 9 0] {[9 3 1 6] {[2 5 0 1]} {[2 2 5 7]}}}}) -> {10 {15 {19 {8} {16}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.655131, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 7 4 3 1] {[3]} {[2 1 0]}}) -> {19 {3} {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.571923, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 7 9 0 3]}) -> {19}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.681491, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 8 9 0] {[0 3 5] {[]}} {[6 7 1 9 8] {[4 4 0]} {[2 5 3 9 8]}}}) -> {22 {8 {0}} {31 {8} {27}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.00028, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000522, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) 0))) _) _)", "time": 0.021101, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.673846, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 4 7] {[]} {[] {[1] {[1 4 4 1]}} {[] {[2 6]}}}}) -> {15 {0} {0 {1 {10}} {0 {8}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.675826, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 1] {[7 7] {[4 9]} {[1 7]}} {[7 1 8 0 8] {[6 3]} {[4 0 2 8]}}}) -> {8 {14 {13} {8}} {24 {9} {14}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.00057, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.480253, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 1 5]}) -> {13}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000643, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000592, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000559, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ (car c) (car (cdr c)))))) _) _)", "time": 0.352021, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 6]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000624, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.49223, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 2 2 3 9]}) -> {17}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000489, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.483429, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 9 2] {[4] {[]} {[3 5 7 8 2]}} {[0 0]}}) -> {20 {4 {0} {25}} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.563385, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7] {[0 8 1] {[5 8 9] {[9 0]} {[1 4]}}} {[6 5 4 1] {[9 3] {[8 8 0]} {[7 2 9 5 5]}} {[1]}}}) -> {7 {9 {22 {9} {5}}} {16 {12 {16} {28}} {1}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ 1 (+ 1 (car c)))))) _) _)", "time": 0.401967, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 2 0]}) -> {7}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.614748, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 5 7 0] {[0] {[1]}} {[7 7 7 3 1]}}) -> {16 {0 {1}} {25}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.6676, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 9 6 1] {[6 7] {[] {[0 1 5]}} {[0 2 9]}} {[4] {[6 7 2 3]} {[] {[0 3 6]} {[0 3 0 9 1]}}}}) -> {23 {13 {0 {6}} {11}} {4 {18} {0 {9} {13}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.618759, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 9 6] {[4 7 2]}}) -> {19 {13}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ 1 d)) 0)))) _) _)", "time": 0.630083, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[1 4]}}) -> {0 {5}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.615057, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 8 9] {[9 5]}}) -> {18 {14}}"]}
