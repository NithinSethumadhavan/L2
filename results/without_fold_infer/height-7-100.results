{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.044049, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {6}) -> 1", "(height {0}) -> 1", "(height {}) -> 0", "(height {6}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.327449, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {8}}) -> 2", "(height {5 {5 {6} {8}}}) -> 3", "(height {4}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.321447, "examples": ["(height {}) -> 0", "(height {7 {8}}) -> 2", "(height {1 {7}}) -> 2", "(height {}) -> 0", "(height {0}) -> 1", "(height {6 {2 {2} {1}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.317838, "examples": ["(height {}) -> 0", "(height {8}) -> 1", "(height {}) -> 0", "(height {4 {9 {0 {0} {4}}}}) -> 4", "(height {1}) -> 1", "(height {2 {1}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.309802, "examples": ["(height {}) -> 0", "(height {3 {4}}) -> 2", "(height {4 {4}}) -> 2", "(height {0 {8} {4 {0} {8}}}) -> 3", "(height {1 {8 {6 {4} {8}}} {6 {5 {4} {3}}}}) -> 4", "(height {2 {7} {9}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.33568, "examples": ["(height {}) -> 0", "(height {4 {1 {9}} {6 {5}}}) -> 3", "(height {0 {5}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.353019, "examples": ["(height {}) -> 0", "(height {0 {9} {7 {4 {9}} {9}}}) -> 4", "(height {9 {9 {7 {4}} {2 {3} {7}}} {4}}) -> 4", "(height {}) -> 0", "(height {9}) -> 1", "(height {5 {3 {2}} {9 {2 {1} {7}} {2}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.409726, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {9}) -> 1", "(height {}) -> 0", "(height {7 {3}}) -> 2", "(height {9}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.396306, "examples": ["(height {}) -> 0", "(height {7 {3}}) -> 2", "(height {7 {1 {4 {8}} {2 {7} {8}}} {3 {7 {5}}}}) -> 4", "(height {1}) -> 1", "(height {6 {6}}) -> 2", "(height {7 {1} {2}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.390498, "examples": ["(height {}) -> 0", "(height {6 {4} {5}}) -> 2", "(height {9 {3} {5}}) -> 2", "(height {}) -> 0", "(height {8 {4 {0 {8}}}}) -> 4", "(height {7 {1 {6}} {0 {8} {4}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.397062, "examples": ["(height {}) -> 0", "(height {2 {5}}) -> 2", "(height {3 {4 {9} {4}} {8 {6}}}) -> 3", "(height {}) -> 0", "(height {6}) -> 1", "(height {1}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "height", "time": 0.140687, "examples": ["(height {}) -> 0", "(height {6 {8}}) -> 2", "(height {7 {1} {4}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {3 {4}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.418779, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7 {3} {2}}) -> 2", "(height {3}) -> 1", "(height {6 {1} {0 {4}}}) -> 3", "(height {3 {2} {6}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.425603, "examples": ["(height {}) -> 0", "(height {6 {9} {2}}) -> 2", "(height {1 {4} {9 {0 {7}} {5 {5} {0}}}}) -> 4", "(height {7}) -> 1", "(height {9}) -> 1", "(height {5}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.454311, "examples": ["(height {}) -> 0", "(height {5 {9 {3 {3}} {9 {7} {3}}} {7}}) -> 4", "(height {3 {9} {6}}) -> 2", "(height {0}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.415593, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {9}) -> 1", "(height {0 {4}}) -> 2", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.427271, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {0 {4} {6}}}) -> 3", "(height {0 {7 {4} {0}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.036216, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {}) -> 0", "(height {7}) -> 1", "(height {2}) -> 1", "(height {7}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.269427, "examples": ["(height {}) -> 0", "(height {5 {6 {0}} {2}}) -> 3", "(height {}) -> 0", "(height {1 {8} {8}}) -> 2", "(height {6}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.303909, "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {8 {8 {1}} {1 {7}}}) -> 3", "(height {3 {8}}) -> 2", "(height {9 {5}}) -> 2", "(height {8 {4} {5 {0 {2}} {7 {4} {0}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.275181, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {1}) -> 1", "(height {7 {8 {0} {3}}}) -> 3", "(height {7}) -> 1", "(height {6}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.278402, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {8}) -> 1", "(height {1 {4} {2 {5}}}) -> 3", "(height {8 {3} {6}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.289335, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {6} {2}}) -> 2", "(height {9 {7} {2}}) -> 2", "(height {2}) -> 1", "(height {9}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.309948, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {1 {8} {8}}) -> 2", "(height {3}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.304447, "examples": ["(height {}) -> 0", "(height {0 {2 {6}}}) -> 3", "(height {0}) -> 1", "(height {2 {6}}) -> 2", "(height {7 {7} {5}}) -> 2", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.282208, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {8 {1}}) -> 2", "(height {}) -> 0", "(height {1 {5}}) -> 2", "(height {8}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.328591, "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {}) -> 0", "(height {7 {1} {8}}) -> 2", "(height {4 {3}}) -> 2", "(height {7 {8}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.279722, "examples": ["(height {}) -> 0", "(height {0 {0} {5}}) -> 2", "(height {0}) -> 1", "(height {7 {6}}) -> 2", "(height {}) -> 0", "(height {0 {8 {8 {3}}} {0 {1 {5} {3}} {9 {9} {5}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.322995, "examples": ["(height {}) -> 0", "(height {6 {5 {0 {3}} {2 {5}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.239989, "examples": ["(height {}) -> 0", "(height {0 {0 {0} {9 {8}}}}) -> 4", "(height {1 {3} {3}}) -> 2", "(height {7 {3} {9}}) -> 2", "(height {}) -> 0", "(height {4 {6}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.334667, "examples": ["(height {}) -> 0", "(height {8}) -> 1", "(height {2 {3 {5}} {9 {0} {5}}}) -> 3", "(height {}) -> 0", "(height {3 {0} {1}}) -> 2", "(height {3}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.30396, "examples": ["(height {}) -> 0", "(height {9 {1}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {3 {4} {7 {2} {3}}}) -> 3", "(height {9}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.300631, "examples": ["(height {}) -> 0", "(height {8 {3}}) -> 2", "(height {6 {1 {2}}}) -> 3", "(height {3 {9}}) -> 2", "(height {4 {1}}) -> 2", "(height {5 {1} {9}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.219818, "examples": ["(height {}) -> 0", "(height {9 {8 {8 {8} {2}} {9}} {4 {5 {3} {2}} {2}}}) -> 4", "(height {4 {6 {0 {3} {6}} {9 {4}}}}) -> 4", "(height {2 {3 {4} {9 {5}}}}) -> 4", "(height {7 {5 {3} {3 {8} {0}}} {1 {5 {7}} {9 {0} {8}}}}) -> 4", "(height {3}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.216401, "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {7 {2} {1}}) -> 2", "(height {1 {7 {0 {1} {2}} {7}} {8 {2} {6 {6} {0}}}}) -> 4", "(height {7}) -> 1", "(height {0 {4 {7}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.29188, "examples": ["(height {}) -> 0", "(height {0 {3}}) -> 2", "(height {9}) -> 1", "(height {}) -> 0", "(height {3 {9 {1} {0}}}) -> 3", "(height {0}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.279595, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {5} {2}}) -> 2", "(height {}) -> 0", "(height {1 {2}}) -> 2", "(height {1 {9 {3 {8}}} {6}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.294522, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3 {6 {3}}}) -> 3", "(height {}) -> 0", "(height {1 {0 {4}}}) -> 3", "(height {8 {3 {8 {8}} {6}} {3}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.323474, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0 {9 {7}} {4 {5} {1}}}) -> 3", "(height {4 {2}}) -> 2", "(height {2 {4 {7 {6} {6}} {6 {9} {2}}} {0 {4 {2}} {4 {9}}}}) -> 4", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.301901, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {1 {4} {9 {2 {3}} {2}}}) -> 4", "(height {1}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.309678, "examples": ["(height {}) -> 0", "(height {5 {1 {5}}}) -> 3", "(height {6 {9 {3 {4}}} {5}}) -> 4", "(height {4}) -> 1", "(height {0 {1}}) -> 2", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.306769, "examples": ["(height {}) -> 0", "(height {4 {7 {5}} {6 {8} {6 {7} {5}}}}) -> 4", "(height {9 {1 {7} {2 {5} {7}}} {1 {8} {8}}}) -> 4", "(height {2 {4 {4 {6} {2}}} {7 {7} {2}}}) -> 4", "(height {1 {5 {2}}}) -> 3", "(height {2}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.273184, "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {7 {2 {6} {4}} {4 {7}}}) -> 3", "(height {}) -> 0", "(height {9}) -> 1", "(height {0 {1 {9}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.289428, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {6} {7 {7} {2}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {3 {5 {7}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.315087, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {4 {7}}) -> 2", "(height {2 {8} {4}}) -> 2", "(height {7}) -> 1", "(height {9 {5}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.297128, "examples": ["(height {}) -> 0", "(height {1 {3} {1}}) -> 2", "(height {}) -> 0", "(height {2}) -> 1", "(height {7 {8 {2}}}) -> 3", "(height {5}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.269208, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {2 {7 {1} {4}}}) -> 3", "(height {3}) -> 1", "(height {}) -> 0", "(height {9}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.320406, "examples": ["(height {}) -> 0", "(height {2 {4 {0 {7}} {8 {0}}} {1}}) -> 4", "(height {8 {3 {7}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.247003, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3 {9 {5} {9}} {2 {0}}}) -> 3", "(height {6 {4} {6}}) -> 2", "(height {}) -> 0", "(height {8 {9} {8}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.263587, "examples": ["(height {}) -> 0", "(height {1 {5}}) -> 2", "(height {}) -> 0", "(height {4 {9 {9}} {7}}) -> 3", "(height {1 {6 {3} {8}}}) -> 3", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.243666, "examples": ["(height {}) -> 0", "(height {5 {9} {6}}) -> 2", "(height {7}) -> 1", "(height {7}) -> 1", "(height {8}) -> 1", "(height {9 {4}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "height", "time": 0.14845, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1 {8}}) -> 2", "(height {}) -> 0", "(height {7 {2}}) -> 2", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.211658, "examples": ["(height {}) -> 0", "(height {2 {2} {9}}) -> 2", "(height {}) -> 0", "(height {2 {8 {6 {8}}} {3}}) -> 4", "(height {0}) -> 1", "(height {6 {5} {6 {9} {3}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.251358, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {8}) -> 1", "(height {0}) -> 1", "(height {4 {1}}) -> 2", "(height {5}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.305782, "examples": ["(height {}) -> 0", "(height {6 {6}}) -> 2", "(height {7}) -> 1", "(height {1 {9} {7 {2 {0} {1}} {2 {3} {7}}}}) -> 4", "(height {5}) -> 1", "(height {6 {1} {9}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.278279, "examples": ["(height {}) -> 0", "(height {5 {0} {8}}) -> 2", "(height {4}) -> 1", "(height {0 {1} {3 {1}}}) -> 3", "(height {6 {6}}) -> 2", "(height {0 {3 {7}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.300595, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4 {9 {5}} {4 {7}}}) -> 3", "(height {9 {9} {0}}) -> 2", "(height {7}) -> 1", "(height {3 {3}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.305504, "examples": ["(height {}) -> 0", "(height {4 {7 {2 {1}} {8 {5}}} {8 {8 {0} {7}}}}) -> 4", "(height {}) -> 0", "(height {5 {5}}) -> 2", "(height {3 {9} {4}}) -> 2", "(height {0}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.294731, "examples": ["(height {}) -> 0", "(height {4 {2} {1 {6}}}) -> 3", "(height {4 {4} {4}}) -> 2", "(height {7 {4 {3 {4}}} {9}}) -> 4", "(height {}) -> 0", "(height {3 {3}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.28367, "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {3 {3} {7}}) -> 2", "(height {9 {6 {6 {4} {6}} {3 {6}}} {7 {5} {5 {4} {2}}}}) -> 4", "(height {}) -> 0", "(height {4 {7} {0}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.28709, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7 {6} {6}}) -> 2", "(height {1 {2} {6}}) -> 2", "(height {8 {3} {1 {9 {3}} {1}}}) -> 4", "(height {4}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.26657, "examples": ["(height {}) -> 0", "(height {5}) -> 1", "(height {9 {0 {8} {1}}}) -> 3", "(height {5 {5 {1} {6}}}) -> 3", "(height {}) -> 0", "(height {6 {1} {4}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.278489, "examples": ["(height {}) -> 0", "(height {4 {5} {9}}) -> 2", "(height {9 {7}}) -> 2", "(height {1}) -> 1", "(height {}) -> 0", "(height {8 {7} {1}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.272468, "examples": ["(height {}) -> 0", "(height {7}) -> 1", "(height {9}) -> 1", "(height {3 {2}}) -> 2", "(height {6 {5}}) -> 2", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.278282, "examples": ["(height {}) -> 0", "(height {3 {6} {4 {7}}}) -> 3", "(height {8}) -> 1", "(height {2 {6} {6}}) -> 2", "(height {6}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.222824, "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {}) -> 0", "(height {6}) -> 1", "(height {}) -> 0", "(height {9 {0}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.203644, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {7 {7}}) -> 2", "(height {5 {2 {4} {8 {3}}}}) -> 4", "(height {0 {3}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.282318, "examples": ["(height {}) -> 0", "(height {2 {7 {3 {8} {9}}}}) -> 4", "(height {6 {8}}) -> 2", "(height {8}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.209858, "examples": ["(height {}) -> 0", "(height {6 {5 {8} {8}}}) -> 3", "(height {6}) -> 1", "(height {6 {6 {8 {7}}}}) -> 4", "(height {8 {0} {6}}) -> 2", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.178439, "examples": ["(height {}) -> 0", "(height {7 {0} {2}}) -> 2", "(height {9}) -> 1", "(height {}) -> 0", "(height {9}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.225915, "examples": ["(height {}) -> 0", "(height {7 {4}}) -> 2", "(height {5 {9}}) -> 2", "(height {}) -> 0", "(height {7 {4 {0} {0}} {0 {9}}}) -> 3", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.29319, "examples": ["(height {}) -> 0", "(height {6 {4}}) -> 2", "(height {2}) -> 1", "(height {4 {4 {0} {6 {0} {4}}}}) -> 4", "(height {6 {0 {1 {6}}}}) -> 4", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.241525, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3 {0} {4 {6}}}) -> 3", "(height {5 {1} {2}}) -> 2", "(height {0 {4} {5}}) -> 2", "(height {4 {8}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.207213, "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {5 {5} {6}}) -> 2", "(height {4 {7 {1 {2}} {5}} {6}}) -> 4", "(height {6 {9} {5 {6 {7}} {1 {0} {5}}}}) -> 4", "(height {0 {3}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.381409, "examples": ["(height {}) -> 0", "(height {4 {8} {8 {0} {3}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {6 {2}}) -> 2", "(height {3}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.369979, "examples": ["(height {}) -> 0", "(height {7 {6}}) -> 2", "(height {3 {2}}) -> 2", "(height {}) -> 0", "(height {6 {1 {3} {3}} {9}}) -> 3", "(height {4 {6} {7 {2}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.374116, "examples": ["(height {}) -> 0", "(height {9 {8 {7}}}) -> 3", "(height {8 {9}}) -> 2", "(height {3 {6}}) -> 2", "(height {}) -> 0", "(height {8 {7 {2}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.348114, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {1 {8 {7}}}) -> 3", "(height {1}) -> 1", "(height {8}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.361117, "examples": ["(height {}) -> 0", "(height {2 {3} {5}}) -> 2", "(height {2}) -> 1", "(height {4 {7 {1}} {2}}) -> 3", "(height {2}) -> 1", "(height {5 {4} {4}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.370896, "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {1 {2 {5}} {9 {4} {4}}}) -> 3", "(height {}) -> 0", "(height {2}) -> 1", "(height {7 {4 {6 {0} {7}} {9 {8} {5}}} {3 {5 {9} {0}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.211286, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {8}) -> 1", "(height {7}) -> 1", "(height {4 {7}}) -> 2", "(height {8 {2} {2}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.338749, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {2 {1} {0}}}) -> 3", "(height {8 {9 {5 {8}} {9 {7}}}}) -> 4", "(height {3}) -> 1", "(height {0 {6 {4}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "time": 0.028145, "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {}) -> 0", "(height {8}) -> 1", "(height {4}) -> 1", "(height {5}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.318945, "examples": ["(height {}) -> 0", "(height {1 {9}}) -> 2", "(height {8 {4 {5} {6}} {3}}) -> 3", "(height {5 {3} {0 {8} {6 {9}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.205725, "examples": ["(height {}) -> 0", "(height {9 {9 {1 {8}} {3 {7} {4}}}}) -> 4", "(height {}) -> 0", "(height {6 {0} {8}}) -> 2", "(height {}) -> 0", "(height {5 {0 {2 {0}} {1 {7} {9}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.223099, "examples": ["(height {}) -> 0", "(height {1 {6 {1 {5}} {5 {9}}}}) -> 4", "(height {}) -> 0", "(height {2 {0 {9} {2 {6}}} {0 {9 {2} {6}}}}) -> 4", "(height {3 {4} {3}}) -> 2", "(height {2 {7 {1 {2}} {5 {8} {5}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.219626, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3 {9 {8}}}) -> 3", "(height {8 {2} {4 {3 {5} {7}}}}) -> 4", "(height {9 {3}}) -> 2", "(height {8 {9}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.261662, "examples": ["(height {}) -> 0", "(height {0 {3 {2} {1}}}) -> 3", "(height {0 {8}}) -> 2", "(height {3 {4} {9 {3} {4 {9}}}}) -> 4", "(height {5 {7 {3}} {4 {6}}}) -> 3", "(height {8 {5 {8}} {8}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.188139, "examples": ["(height {}) -> 0", "(height {4 {8 {6} {1 {4}}}}) -> 4", "(height {9 {3}}) -> 2", "(height {0}) -> 1", "(height {9 {6 {4}} {3}}) -> 3", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.162245, "examples": ["(height {}) -> 0", "(height {7}) -> 1", "(height {8}) -> 1", "(height {4}) -> 1", "(height {7 {7 {7 {2} {0}} {3}}}) -> 4", "(height {5 {6} {4}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.176602, "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {7 {9} {9 {0}}}) -> 3", "(height {1 {7 {5}} {7 {8} {2}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.155576, "examples": ["(height {}) -> 0", "(height {1 {2} {5}}) -> 2", "(height {0 {8 {6} {9 {7} {0}}} {4}}) -> 4", "(height {}) -> 0", "(height {4 {4 {2} {6 {0} {4}}} {6 {4 {9}}}}) -> 4", "(height {8}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.260975, "examples": ["(height {}) -> 0", "(height {9 {6}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.267106, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {2 {7}}) -> 2", "(height {0 {0 {7}} {2 {8}}}) -> 3", "(height {}) -> 0", "(height {7 {2}}) -> 2"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.271646, "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {}) -> 0", "(height {2}) -> 1", "(height {9}) -> 1", "(height {7 {9 {3} {6}} {6 {1}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.255736, "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {3 {9 {2} {7}}}) -> 3", "(height {0 {8}}) -> 2", "(height {}) -> 0", "(height {1}) -> 1"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.308124, "examples": ["(height {}) -> 0", "(height {6 {7 {2} {6}} {7 {7} {6}}}) -> 3", "(height {4 {1}}) -> 2", "(height {6 {6 {7} {5}} {6 {6} {2}}}) -> 3", "(height {4}) -> 1", "(height {}) -> 0"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.257305, "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {3}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {3 {2}}}) -> 3"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.262671, "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1", "(height {7 {2 {2 {7}}}}) -> 4", "(height {5 {2}}) -> 2", "(height {6 {9 {0 {1}} {3 {7}}}}) -> 4"]}
{"solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "time": 0.249814, "examples": ["(height {}) -> 0", "(height {1 {1 {1} {7 {2} {2}}}}) -> 4", "(height {}) -> 0", "(height {7 {7 {4 {8} {0}}}}) -> 4", "(height {3}) -> 1", "(height {4 {5 {6} {4}}}) -> 3"]}
