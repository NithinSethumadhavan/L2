{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {1}}) -> [0]", "(selectnodes {0}) -> [0]", "(selectnodes {2}) -> [2]", "(selectnodes {0 {9}}) -> [0]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []"], "time": 0.208773, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter e (lambda (g) (pred g)))) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {1 {9 {7}}}) -> []", "(selectnodes {3 {3 {4}}}) -> [4]", "(selectnodes {7 {7 {3}}}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []"], "time": 26.784834, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []", "(selectnodes {2 {9}}) -> [2]", "(selectnodes {2 {6 {3}} {4}}) -> [2 6 4]", "(selectnodes {0 {6}}) -> [0 6]", "(selectnodes {9 {8 {7 {0} {9}}} {6 {8}}}) -> [8 0 6 8]", "(selectnodes {}) -> []"], "time": 52.909493, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {4 {7}}) -> [4]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {0 {6}}) -> [0 6]", "(selectnodes {4 {8 {5}} {9 {4}}}) -> [4 8 4]", "(selectnodes {5 {6 {6 {8}} {7}} {5 {6 {6} {8}} {5}}}) -> [6 6 8 6 6 8]"], "time": 54.24232, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {0 {1 {4} {9}}}) -> [0 4]", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {1 {7}}) -> []", "(selectnodes {4 {3} {5 {6 {1} {6}} {7 {3} {7}}}}) -> [4 6 6]", "(selectnodes {7 {4 {6}}}) -> [4 6]"], "time": 55.884701, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {0}}) -> [0]", "(selectnodes {9 {4 {8}}}) -> [4 8]", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]"], "time": 56.425043, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {3 {0}}) -> [0]", "(selectnodes {3 {6 {0} {1}}}) -> [6 0]", "(selectnodes {9 {0} {2}}) -> [0 2]", "(selectnodes {3 {9 {8} {5}} {1 {1}}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {4 {4} {7}}) -> [4 4]"], "time": 60.521623, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {4 {7} {3 {6} {4}}}) -> [4 6 4]", "(selectnodes {3}) -> [3]", "(selectnodes {8 {6} {7 {1}}}) -> [8 6]", "(selectnodes {}) -> []"], "time": 62.973143, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {8 {5} {4 {0}}}) -> [8 4 0]", "(selectnodes {6 {4 {6} {9}} {1}}) -> [6 4 6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {4}) -> [4]"], "time": 66.055076, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {7}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {5 {3 {0} {9}}}) -> [0]", "(selectnodes {5 {1 {1 {2} {4}}} {9 {2}}}) -> [2 4 2]", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {2 {8 {5} {3}}}) -> [2 8]"], "time": 67.467106, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {0} {5}}) -> [4 0]", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []", "(selectnodes {4 {3}}) -> [4]", "(selectnodes {9}) -> [9]", "(selectnodes {9 {6} {3}}) -> [6]", "(selectnodes {4 {6} {5 {4 {7}} {8 {0} {0}}}}) -> [4 6 4 8 0 0]"], "time": 70.012873, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {3 {4}} {3 {0}}}) -> [2 4 0]", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {2 {2 {8} {2}} {6 {1 {2}} {2}}}) -> [2 2 8 2 6 2 2]", "(selectnodes {4}) -> [4]", "(selectnodes {4}) -> [4]", "(selectnodes {7 {8} {7}}) -> [8]"], "time": 70.449154, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {4}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {6 {4 {3}}}) -> [6 4]", "(selectnodes {4 {7}}) -> [4]", "(selectnodes {7 {1} {2}}) -> [2]"], "time": 71.629827, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {4 {1 {2} {9}} {4 {2}}}}) -> [4 2 4 2]", "(selectnodes {2 {2}}) -> [2 2]", "(selectnodes {3 {2 {8 {3}} {8 {1} {8}}} {1 {4}}}) -> [2 8 8 8 4]", "(selectnodes {5}) -> [5]", "(selectnodes {4}) -> [4]", "(selectnodes {4 {0 {5}}}) -> [4 0]", "(selectnodes {}) -> []"], "time": 75.446846, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {6} {3 {8} {9}}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {1 {3 {6} {5}} {9 {2} {3}}}) -> [6 2]", "(selectnodes {9 {9 {4} {3 {6} {0}}}}) -> [4 6 0]", "(selectnodes {1 {6} {3}}) -> [6]", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []"], "time": 78.689271, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter e (lambda (g) (pred g)))) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {6}) -> [6]", "(selectnodes {5 {1} {5}}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {9 {3} {8}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]"], "time": 26.25946, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {5 {2 {9} {3}}} {5 {7 {1}}}}) -> [0 2]", "(selectnodes {5}) -> [5]", "(selectnodes {5 {6}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {6 {3 {6}}}) -> [6 6]", "(selectnodes {1}) -> [1]", "(selectnodes {2 {5 {6} {7}} {5 {8}}}) -> [2 6 8]"], "time": 94.204865, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {9 {8} {8}}}) -> [8 8 8]", "(selectnodes {6 {7 {6 {0}} {6 {1} {7}}} {4 {9 {7}}}}) -> [6 6 0 6 4]", "(selectnodes {5 {6 {0}}}) -> [6 0]", "(selectnodes {4 {7}}) -> [4]", "(selectnodes {2}) -> [2]", "(selectnodes {1 {1}}) -> []", "(selectnodes {8}) -> [8]"], "time": 70.961009, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {3 {7 {5} {4}}} {3 {8 {3}} {4 {7}}}}) -> [4 8 4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {5} {7}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {0 {8} {8}}) -> [0 8 8]", "(selectnodes {5}) -> [5]"], "time": 103.026996, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {6}}) -> [4 6]", "(selectnodes {}) -> []", "(selectnodes {0 {0}}) -> [0 0]", "(selectnodes {9 {4}}) -> [4]", "(selectnodes {8 {4}}) -> [8 4]", "(selectnodes {4 {5 {8}}}) -> [4 8]", "(selectnodes {2 {1} {7}}) -> [2]"], "time": 61.866401, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {3 {6} {5}}}) -> [6]", "(selectnodes {2 {7} {7 {5}}}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {4} {8}}) -> [0 4 8]", "(selectnodes {0 {9}}) -> [0]", "(selectnodes {3}) -> [3]"], "time": 68.373459, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {2 {7 {5}}}}) -> [0 2]", "(selectnodes {4 {0 {5} {1}} {9 {6}}}) -> [4 0 6]", "(selectnodes {2 {0} {6}}) -> [2 0 6]", "(selectnodes {7 {8} {7}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]"], "time": 78.374454, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {9} {7}}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {8 {7 {0} {2}}}) -> [8 0 2]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {7}) -> [7]"], "time": 64.234625, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4 {3} {4 {7}}}) -> [4 4]", "(selectnodes {1 {8 {3}} {5}}) -> [8]", "(selectnodes {7 {3 {0}} {4}}) -> [0 4]", "(selectnodes {4 {2 {9}} {4 {5}}}) -> [4 2 4]", "(selectnodes {3 {2}}) -> [2]", "(selectnodes {0 {3 {4} {6 {2} {7}}} {6}}) -> [0 4 6 2 6]"], "time": 68.684062, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {6 {2} {3}} {0 {1} {3}}}) -> [4 6 2 0]", "(selectnodes {9 {0}}) -> [0]", "(selectnodes {6 {7 {1 {5} {9}}} {1 {1 {5}}}}) -> [6]", "(selectnodes {0 {2 {9} {7}} {6}}) -> [0 2 6]", "(selectnodes {1 {8}}) -> [8]", "(selectnodes {1 {1 {0}}}) -> [0]", "(selectnodes {8 {0 {5 {9} {8}} {7 {1} {7}}} {6}}) -> [8 0 8 6]"], "time": 82.443904, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {2 {2} {9}} {7}}) -> [2 2 2]", "(selectnodes {4}) -> [4]", "(selectnodes {1}) -> [1]", "(selectnodes {8}) -> [8]", "(selectnodes {6 {0 {3}} {1}}) -> [6 0]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 77.833471, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {9 {5} {5}} {1}}) -> []", "(selectnodes {9 {5} {9}}) -> []", "(selectnodes {5 {3 {2} {5 {0} {8}}}}) -> [2 0 8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {8 {3}}) -> [8]"], "time": 89.96458, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {6} {3 {2}}}) -> [8 6 2]", "(selectnodes {5 {3}}) -> []", "(selectnodes {6 {3 {6}} {5}}) -> [6 6]", "(selectnodes {4 {7} {8}}) -> [4 8]", "(selectnodes {9 {7} {6}}) -> [6]", "(selectnodes {8 {5 {8} {9}} {3}}) -> [8 8]"], "time": 75.615196, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {5 {9} {8}}}) -> [8]", "(selectnodes {5 {4 {4 {0} {2}}}}) -> [4 4 0 2]", "(selectnodes {8 {3 {3} {9}}}) -> [8]", "(selectnodes {7 {2} {3}}) -> [2]", "(selectnodes {6 {4 {6}} {7}}) -> [6 4 6]", "(selectnodes {7}) -> [7]"], "time": 73.3425, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {1}}) -> []", "(selectnodes {5 {6 {9 {9} {9}} {5}} {8}}) -> [6 8]", "(selectnodes {2}) -> [2]", "(selectnodes {1 {2}}) -> [2]", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 79.920487, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {9}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {5 {6}}) -> [6]", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {5 {3}}) -> []", "(selectnodes {8 {7}}) -> [8]"], "time": 62.541868, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {7} {2 {4}}}) -> [2 2 4]", "(selectnodes {0}) -> [0]", "(selectnodes {3 {6 {8} {3}} {9}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {2 {0} {7}}) -> [2 0]", "(selectnodes {}) -> []", "(selectnodes {7 {2}}) -> [2]"], "time": 68.201862, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {0} {8 {0 {5} {7}}}}) -> [0 8 0]", "(selectnodes {9 {8} {4}}) -> [8 4]", "(selectnodes {}) -> []", "(selectnodes {5 {8} {0}}) -> [8 0]", "(selectnodes {8 {9 {0 {8}}} {0}}) -> [8 0 8 0]", "(selectnodes {8 {0}}) -> [8 0]"], "time": 82.767344, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {1 {7} {8}}) -> [8]", "(selectnodes {6 {6} {7}}) -> [6 6]", "(selectnodes {7 {5 {9} {2}} {2}}) -> [2 2]", "(selectnodes {5}) -> [5]", "(selectnodes {6 {7}}) -> [6]", "(selectnodes {7}) -> [7]"], "time": 52.197511, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {0 {2 {9} {3}}} {0 {1}}}) -> [0 2 0]", "(selectnodes {}) -> []", "(selectnodes {2 {6} {6}}) -> [2 6 6]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]"], "time": 86.202705, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {6 {7 {4} {4}}}}) -> [4 6 4 4]", "(selectnodes {0}) -> [0]", "(selectnodes {3}) -> [3]", "(selectnodes {3 {3 {7 {1} {6}}} {2 {3}}}) -> [6 2]", "(selectnodes {9 {4 {5}}}) -> [4]", "(selectnodes {4}) -> [4]", "(selectnodes {6 {6}}) -> [6 6]"], "time": 83.538141, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {5 {6} {2}}) -> [6 2]", "(selectnodes {0 {7 {5 {8}}}}) -> [0 8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {0}}) -> [0]"], "time": 51.468462, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {6}}) -> [6 6]", "(selectnodes {0 {2 {1}}}) -> [0 2]", "(selectnodes {}) -> []", "(selectnodes {1 {3}}) -> []", "(selectnodes {0 {2 {4}}}) -> [0 2 4]"], "time": 58.910057, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons (value b) []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {0}) -> [0]", "(selectnodes {8 {9 {8 {5}} {7}}}) -> [8 8]", "(selectnodes {3}) -> [3]", "(selectnodes {4 {1}}) -> [4]"], "time": 2.284406, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {8 {1 {8}}} {8 {1 {4}} {4 {1}}}}) -> [8 8 8 4 4]", "(selectnodes {7 {4} {1}}) -> [4]", "(selectnodes {7}) -> [7]", "(selectnodes {3 {5}}) -> []"], "time": 50.857267, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {2 {9}} {8 {3} {8}}}) -> [2 8 8]", "(selectnodes {}) -> []", "(selectnodes {9 {6}}) -> [6]", "(selectnodes {8 {5 {6}} {7 {7} {1}}}) -> [8 6]", "(selectnodes {7}) -> [7]", "(selectnodes {6}) -> [6]"], "time": 70.102904, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {4 {0 {7}}}) -> [4 0]", "(selectnodes {2 {3 {1} {2 {5}}}}) -> [2 2]", "(selectnodes {6 {3 {1} {8}}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {3 {5}}) -> []", "(selectnodes {}) -> []"], "time": 60.835077, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {6 {4 {9}}}}) -> [6 4]", "(selectnodes {6 {1}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {2 {9 {4 {6} {4}}} {4}}) -> [2 4 6 4 4]"], "time": 85.536054, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {8} {7 {0 {9} {3}} {5}}}) -> [2 8 0]", "(selectnodes {1 {4 {8}} {7 {7} {6}}}) -> [4 8 6]", "(selectnodes {1 {9 {2} {4}} {6 {4}}}) -> [2 4 6 4]", "(selectnodes {3 {9}}) -> []", "(selectnodes {7 {3} {0}}) -> [0]", "(selectnodes {7}) -> [7]", "(selectnodes {4}) -> [4]"], "time": 101.010208, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {5}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {1 {0} {2}}) -> [0 2]", "(selectnodes {9 {5 {0 {7} {2}}}}) -> [0 2]", "(selectnodes {0 {9}}) -> [0]", "(selectnodes {0}) -> [0]", "(selectnodes {0}) -> [0]"], "time": 81.057914, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {2 {0 {9} {9}} {2 {1}}} {3}}) -> [6 2 0 2]", "(selectnodes {}) -> []", "(selectnodes {9 {1 {7 {1} {3}}} {0 {3 {2}}}}) -> [0 2]", "(selectnodes {7 {6 {9 {1}}} {6 {5 {3}} {7 {2}}}}) -> [6 6 2]", "(selectnodes {}) -> []", "(selectnodes {2 {6 {1}}}) -> [2 6]"], "time": 110.927496, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {9 {7 {0}}}) -> [0]", "(selectnodes {8}) -> [8]", "(selectnodes {0 {3}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {3 {3} {3}} {6 {1} {0}}}) -> [2 6 0]"], "time": 76.069096, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {3 {8} {1}}}) -> [8]", "(selectnodes {3}) -> [3]", "(selectnodes {6 {8}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {7 {9 {4} {1}} {8}}) -> [4 8]", "(selectnodes {2}) -> [2]"], "time": 88.683709, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {9}}) -> [4]", "(selectnodes {5 {1} {0}}) -> [0]", "(selectnodes {2 {3 {9} {5 {5}}} {3}}) -> [2]", "(selectnodes {9}) -> [9]", "(selectnodes {0 {0}}) -> [0 0]", "(selectnodes {4 {9} {1}}) -> [4]", "(selectnodes {}) -> []"], "time": 81.412286, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {1 {1 {9} {0}}}}) -> [0]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {2 {3 {3}} {4 {5}}}) -> [2 4]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]"], "time": 93.346143, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {5} {6 {0 {3} {0}}}}) -> [2 6 0 0]", "(selectnodes {7 {3 {0} {0 {3} {4}}}}) -> [0 0 4]", "(selectnodes {5 {3 {0 {3}} {2 {7} {4}}} {4 {1 {6}}}}) -> [0 2 4 4 6]", "(selectnodes {}) -> []", "(selectnodes {8 {3 {6}}}) -> [8 6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 67.330906, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {8} {5}}) -> [0 8]", "(selectnodes {4 {9} {8}}) -> [4 8]", "(selectnodes {1}) -> [1]", "(selectnodes {9 {4}}) -> [4]", "(selectnodes {4 {1} {4}}) -> [4 4]", "(selectnodes {}) -> []", "(selectnodes {0 {4 {8}} {2 {8} {3}}}) -> [0 4 8 2 8]"], "time": 69.693626, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {2}}) -> [2]", "(selectnodes {5}) -> [5]", "(selectnodes {3}) -> [3]", "(selectnodes {4 {6}}) -> [4 6]", "(selectnodes {6}) -> [6]", "(selectnodes {5 {1} {8}}) -> [8]", "(selectnodes {}) -> []"], "time": 60.163146, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {0 {7} {2}}}) -> [0 2]", "(selectnodes {3 {0 {2} {6}}}) -> [0 2 6]", "(selectnodes {}) -> []", "(selectnodes {6 {6} {7 {0 {7} {3}} {5 {3}}}}) -> [6 6 0]", "(selectnodes {1 {9 {4 {5} {0}}}}) -> [4 0]", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []"], "time": 78.661161, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {5}) -> [5]", "(selectnodes {0}) -> [0]", "(selectnodes {5 {2}}) -> [2]", "(selectnodes {8 {8}}) -> [8 8]"], "time": 64.525149, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {7 {3} {3}}) -> []", "(selectnodes {8 {6} {3}}) -> [8 6]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {5}) -> [5]"], "time": 72.042276, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {7}) -> [7]", "(selectnodes {4}) -> [4]", "(selectnodes {0 {5 {5} {7}} {6 {0 {6} {0}}}}) -> [0 6 0 6 0]", "(selectnodes {2 {9 {6}}}) -> [2 6]", "(selectnodes {4}) -> [4]", "(selectnodes {7 {5 {8} {3}}}) -> [8]"], "time": 69.7085, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {8 {0} {7}}) -> [8 0]", "(selectnodes {9}) -> [9]", "(selectnodes {9 {6 {6 {0}}}}) -> [6 6 0]", "(selectnodes {1 {0}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {6 {2} {5 {4} {7}}}) -> [6 2 4]"], "time": 61.63466, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {2 {0 {1} {3}}}}) -> [4 2 0]", "(selectnodes {}) -> []", "(selectnodes {1 {5}}) -> []", "(selectnodes {6 {7 {1 {6} {6}} {0}}}) -> [6 6 6 0]", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {7 {2}}) -> [2]"], "time": 76.296674, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {7 {4}} {2 {1}}}) -> [8 4 2]", "(selectnodes {2 {6} {2}}) -> [2 6 2]", "(selectnodes {5 {9} {4 {1} {1}}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 68.381179, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {3}}) -> []", "(selectnodes {4 {5} {5}}) -> [4]", "(selectnodes {6 {1}}) -> [6]", "(selectnodes {0}) -> [0]", "(selectnodes {6}) -> [6]", "(selectnodes {3 {9}}) -> []", "(selectnodes {3 {5 {0 {3} {7}} {5}} {6 {9} {6}}}) -> [0 6 6]"], "time": 64.988307, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {0 {9} {4}}) -> [0 4]", "(selectnodes {1 {0 {1}}}) -> [0]", "(selectnodes {6 {1}}) -> [6]", "(selectnodes {8 {7 {6 {9}} {7 {5} {7}}}}) -> [8 6]", "(selectnodes {1 {1 {9 {0} {4}}}}) -> [0 4]", "(selectnodes {7 {5}}) -> []"], "time": 61.696631, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {0} {6}}) -> [0 6]", "(selectnodes {6 {9} {3 {1 {0} {9}}}}) -> [6 0]", "(selectnodes {2 {8 {6}} {9}}) -> [2 8 6]", "(selectnodes {0 {1}}) -> [0]", "(selectnodes {6 {4 {5 {0}}} {9 {0} {9 {4}}}}) -> [6 4 0 0 4]", "(selectnodes {8 {1 {2} {0}} {0 {5}}}) -> [8 2 0 0]", "(selectnodes {9 {0} {4 {8 {3} {8}}}}) -> [0 4 8 8]"], "time": 63.953417, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {8}}) -> [8]", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {4}}) -> [4]", "(selectnodes {8 {4}}) -> [8 4]", "(selectnodes {5 {9} {4 {6 {8}} {1 {3} {7}}}}) -> [4 6 8]"], "time": 65.281935, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {3 {3}}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {3 {0} {3}}) -> [0]", "(selectnodes {4}) -> [4]", "(selectnodes {5 {3}}) -> []"], "time": 67.569409, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []", "(selectnodes {4 {3 {0}} {3}}) -> [4 0]", "(selectnodes {7 {9 {0}}}) -> [0]", "(selectnodes {0 {8 {2}} {9 {1}}}) -> [0 8 2]", "(selectnodes {7 {3 {2}}}) -> [2]", "(selectnodes {9 {0} {6 {2} {1 {8} {0}}}}) -> [0 6 2 8 0]"], "time": 63.640649, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {2}) -> [2]", "(selectnodes {8 {2 {8}}}) -> [8 2 8]", "(selectnodes {4 {3 {8} {6}} {7 {2} {1}}}) -> [4 8 6 2]", "(selectnodes {}) -> []"], "time": 53.625377, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {8}}) -> [8]", "(selectnodes {2 {6} {4}}) -> [2 6 4]", "(selectnodes {9 {3} {2}}) -> [2]", "(selectnodes {0 {1}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {5 {0}}) -> [0]", "(selectnodes {9 {0 {2} {0}} {8 {4} {2}}}) -> [0 2 0 8 4 2]"], "time": 70.583157, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {5}) -> [5]", "(selectnodes {4 {0} {5 {2 {9}} {1 {8} {0}}}}) -> [4 0 2 8 0]", "(selectnodes {0}) -> [0]", "(selectnodes {5}) -> [5]", "(selectnodes {3 {5} {9}}) -> []"], "time": 69.836255, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {3 {2} {2}} {8}}) -> [2 2 8]", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {4 {5 {0} {9 {5} {6}}}}) -> [4 0 6]", "(selectnodes {0 {6}}) -> [0 6]", "(selectnodes {1 {2 {6}} {6 {6} {4}}}) -> [2 6 6 6 4]", "(selectnodes {2 {3 {5 {7}} {4 {0} {2}}} {2}}) -> [2 4 0 2 2]"], "time": 76.920483, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {2 {4 {6 {3} {5}} {8 {6}}} {0 {6 {5}} {1 {3} {4}}}}) -> [2 4 6 8 6 0 6 4]", "(selectnodes {9}) -> [9]", "(selectnodes {0 {0} {1}}) -> [0 0]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 70.047673, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) []) (cons c []))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {1 {5 {1}}}) -> []", "(selectnodes {7 {5 {7}}}) -> []", "(selectnodes {1 {1}}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []"], "time": 0.651417, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {3 {2}}) -> [2]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {1 {5}} {1 {8 {8} {6}} {7 {6}}}}) -> [2 8 8 6 6]"], "time": 53.407575, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4 {1}}) -> [4]", "(selectnodes {0 {4} {0}}) -> [0 4 0]", "(selectnodes {}) -> []", "(selectnodes {5 {3 {7 {0} {8}} {1}}}) -> [0 8]", "(selectnodes {}) -> []", "(selectnodes {7 {9}}) -> []"], "time": 57.165783, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {6}}) -> [0 6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {1}) -> [1]"], "time": 0.116986, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {3}}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {2}) -> [2]", "(selectnodes {1}) -> [1]", "(selectnodes {2 {8 {5} {0}} {8 {9} {9}}}) -> [2 8 0 8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 72.019383, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {2 {2}} {9}}) -> [2 2]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {5 {8} {1 {1 {4} {4}}}}) -> [8 4 4]", "(selectnodes {9 {1 {6}} {3 {5} {8}}}) -> [6 8]", "(selectnodes {7 {7}}) -> []", "(selectnodes {8 {3}}) -> [8]"], "time": 80.217985, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {6 {2} {3}}}) -> [6 2]", "(selectnodes {}) -> []", "(selectnodes {0 {1 {5}}}) -> [0]", "(selectnodes {3 {9} {1}}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 61.504142, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {5}}) -> []", "(selectnodes {0 {7 {8 {4} {1}}} {7 {6 {2}} {0 {0}}}}) -> [0 8 4 6 2 0 0]", "(selectnodes {}) -> []", "(selectnodes {4 {8}}) -> [4 8]", "(selectnodes {8}) -> [8]", "(selectnodes {9 {3 {5 {4}}}}) -> [4]", "(selectnodes {9}) -> [9]"], "time": 92.729356, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {6 {2 {8} {7}}} {5 {3 {0}} {6 {3}}}}) -> [0 6 2 8 0 6]", "(selectnodes {9}) -> [9]", "(selectnodes {8 {2}}) -> [8 2]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []"], "time": 114.939581, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {8}}) -> [8]", "(selectnodes {2 {1 {6 {3} {3}}}}) -> [2 6]", "(selectnodes {3 {0} {7}}) -> [0]", "(selectnodes {1 {2 {6} {1}}}) -> [2 6]"], "time": 75.241719, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {5 {9}}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {3 {9} {9}}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {1 {7} {0}} {6}}) -> [0 6]", "(selectnodes {3 {6 {4}}}) -> [6 4]"], "time": 60.206192, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {2} {0}}) -> [8 2 0]", "(selectnodes {4 {8} {0}}) -> [4 8 0]", "(selectnodes {5 {7 {8 {8} {3}} {8 {6}}} {7}}) -> [8 8 8 6]", "(selectnodes {9 {6 {0}}}) -> [6 0]", "(selectnodes {4 {4 {5} {6 {5}}} {0 {0} {4 {2}}}}) -> [4 4 6 0 0 4 2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 73.019567, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {0} {0}}) -> [0 0]", "(selectnodes {}) -> []", "(selectnodes {7 {0}}) -> [0]", "(selectnodes {1 {8 {6} {5}}}) -> [8 6]", "(selectnodes {5 {9} {0 {0} {6}}}) -> [0 0 6]", "(selectnodes {2}) -> [2]", "(selectnodes {5 {8}}) -> [8]"], "time": 60.627577, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {3 {2} {6}} {4 {4}}}) -> [2 2 6 4 4]", "(selectnodes {0 {2 {0} {0}}}) -> [0 2 0 0]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {5 {8 {2} {4}} {7}}) -> [8 2 4]", "(selectnodes {4 {3 {5} {6}}}) -> [4 6]"], "time": 85.274632, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {1 {1 {9} {9}}}}) -> [8]", "(selectnodes {2 {6 {0} {9 {1}}}}) -> [2 6 0]", "(selectnodes {5 {3} {9}}) -> []", "(selectnodes {7 {7}}) -> []", "(selectnodes {7 {6 {3} {8}}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {7 {0} {3 {0}}}) -> [0 0]"], "time": 74.344492, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {8 {6 {8} {7}}} {2 {9 {7}}}}) -> [8 6 8 2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "time": 69.424748, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {9 {6}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {6 {2 {5}}}) -> [6 2]", "(selectnodes {2}) -> [2]", "(selectnodes {0}) -> [0]"], "time": 61.653021, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {8}}) -> [0 8]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {9 {8}}) -> [8]", "(selectnodes {4 {4}}) -> [4 4]", "(selectnodes {2 {3}}) -> [2]"], "time": 53.858414, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {5 {0 {4 {1} {9}} {2}} {5}}) -> [0 4 2]", "(selectnodes {}) -> []", "(selectnodes {7 {3 {0}}}) -> [0]", "(selectnodes {2 {2}}) -> [2 2]"], "time": 61.656725, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {7 {2}}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {2} {1}}) -> [2 2]", "(selectnodes {1 {3 {6} {2}}}) -> [6 2]", "(selectnodes {7}) -> [7]"], "time": 46.758814, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {1}}) -> []", "(selectnodes {8 {6 {5} {2}}}) -> [8 6 2]", "(selectnodes {4 {8 {1} {3}}}) -> [4 8]", "(selectnodes {8 {6 {7}}}) -> [8 6]", "(selectnodes {9 {4 {9}} {4}}) -> [4 4]", "(selectnodes {2 {1 {0 {5}}}}) -> [2 0]", "(selectnodes {}) -> []"], "time": 65.483685, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {3}) -> [3]", "(selectnodes {5}) -> [5]", "(selectnodes {1 {5}}) -> []", "(selectnodes {9 {9} {0}}) -> [0]", "(selectnodes {7 {1}}) -> []", "(selectnodes {4 {5}}) -> [4]"], "time": 52.824621, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {4 {4 {0 {7}}}}) -> [4 4 0]", "(selectnodes {2}) -> [2]", "(selectnodes {2}) -> [2]", "(selectnodes {9}) -> [9]", "(selectnodes {2}) -> [2]"], "time": 50.080313, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {8 {3}} {2 {0}}}) -> [6 8 2 0]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {1}) -> [1]", "(selectnodes {6 {1 {5} {8}}}) -> [6 8]", "(selectnodes {}) -> []"], "time": 71.825098, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {2 {9}}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {3 {0} {5}}) -> [0]", "(selectnodes {7 {7 {4} {8}} {5 {2} {6}}}) -> [4 8 2 6]", "(selectnodes {}) -> []", "(selectnodes {1 {8} {6}}) -> [8 6]"], "time": 48.565638, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {2 {9 {6}} {6 {0}}}) -> [2 6 6 0]", "(selectnodes {4 {4}}) -> [4 4]", "(selectnodes {4}) -> [4]", "(selectnodes {1}) -> [1]", "(selectnodes {6 {3}}) -> [6]", "(selectnodes {8}) -> [8]"], "time": 36.241729, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {4} {4}}) -> [4 4]", "(selectnodes {4 {5 {5} {3}}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {8 {9} {1}}) -> [8]", "(selectnodes {}) -> []"], "time": 49.305121, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {1 {2 {7} {3}} {5 {0} {7}}}}) -> [2 2 0]", "(selectnodes {5 {6 {9 {4}} {8}}}) -> [6 4 8]", "(selectnodes {}) -> []", "(selectnodes {4 {6 {8} {9}} {1 {7}}}) -> [4 6 8]", "(selectnodes {}) -> []", "(selectnodes {6 {8} {5 {6 {8} {2}} {2 {9} {4}}}}) -> [6 8 6 8 2 2 4]", "(selectnodes {9 {0 {0} {6}}}) -> [0 0 6]"], "time": 62.140624, "name": "selectnodes"}
{"solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {6 {1 {4}} {9 {1} {7}}} {5 {7 {6}} {4}}}) -> [6 4 6 4]", "(selectnodes {}) -> []", "(selectnodes {6 {0 {4 {6} {5}} {4}} {7 {0 {8} {6}}}}) -> [6 0 4 6 4 0 8 6]", "(selectnodes {2 {4}}) -> [2 4]", "(selectnodes {4 {3} {0}}) -> [4 0]", "(selectnodes {}) -> []", "(selectnodes {3 {2 {4} {8}} {6 {9}}}) -> [2 4 8 6]"], "time": 63.654391, "name": "selectnodes"}
