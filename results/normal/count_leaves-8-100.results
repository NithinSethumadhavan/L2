{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {6}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.025018}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {6}}) -> 1", "(count_leaves {4 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.042312}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {4 {2}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.039898}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5 {4}}) -> 1", "(count_leaves {2 {7}}) -> 1", "(count_leaves {4 {0}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.043109}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {8 {7 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.051973}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {6}}) -> 2", "(count_leaves {6 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {6} {2}} {1 {1} {2}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.685201}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {9} {6}}) -> 2", "(count_leaves {1 {5} {1}}) -> 2", "(count_leaves {7 {5}}) -> 1", "(count_leaves {7 {4 {9} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.708485}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {7 {1 {7}}}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {8 {5 {6}} {9 {3 {3}} {4 {2} {0}}}}) -> 4", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.692476}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {0 {1} {5}}) -> 2", "(count_leaves {4 {8 {7 {6}} {1 {2}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {0 {3} {7}}) -> 2", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.8006}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0 {3 {9} {1}} {6 {0}}} {0}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {0 {8 {0}}} {5}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.748129}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {7 {5 {7}} {8}} {2 {2 {4}}}}) -> 3", "(count_leaves {0 {3 {5} {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {7 {6} {3 {5}}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.787138}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {1 {0} {2 {4}}}}) -> 2", "(count_leaves {6 {3}}) -> 1", "(count_leaves {9 {5}}) -> 1", "(count_leaves {6 {8 {0 {5} {9}} {8 {6} {0}}} {7 {7}}}) -> 5", "(count_leaves {0 {2 {4 {3}} {6 {3}}}}) -> 2", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.771551}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7} {1 {2} {4}}}) -> 3", "(count_leaves {9 {7}}) -> 1", "(count_leaves {1 {5 {7}}}) -> 1", "(count_leaves {3 {1} {0}}) -> 2", "(count_leaves {1 {0 {9}} {5 {6} {6}}}) -> 3", "(count_leaves {5 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.764864}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {4 {5}} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3} {7}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {7 {0} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.719648}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {0 {5}} {3 {8 {0}} {6 {3} {6}}}}) -> 4", "(count_leaves {7 {0} {9 {7} {7 {3} {7}}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.795209}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {9} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {8} {6 {6}}}) -> 2", "(count_leaves {5 {2}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.710935}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {9 {7} {7 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {9} {9 {5}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.812502}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {0 {8 {8}}}}) -> 1", "(count_leaves {7 {2} {2}}) -> 2", "(count_leaves {0 {8} {2 {4 {4}} {5 {0} {5}}}}) -> 4", "(count_leaves {8 {8} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.812781}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {1 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {7 {9}}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.021473}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {4}}) -> 1", "(count_leaves {4 {1} {0}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.68999}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8 {9} {3 {8}}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {8 {6}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {6} {6}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.738673}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {1 {6 {5} {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (- 1 (sum d))) 0)) _) _)", "time": 0.204244}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9 {6 {9}} {0}} {2}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {7 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.582113}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {5 {2 {1 {8}} {1 {1}}} {4 {3 {5}} {9 {7}}}}) -> 4", "(count_leaves {1 {1 {3}}}) -> 1", "(count_leaves {5 {8} {4}}) -> 2", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.611727}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {1 {7 {0} {6 {9} {8}}} {1 {3}}}) -> 4", "(count_leaves {2 {2 {5}}}) -> 1", "(count_leaves {1 {2 {7} {4}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.635713}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {1} {2 {9}}}) -> 2", "(count_leaves {6 {6 {6} {4}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.649869}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8} {4}}) -> 2", "(count_leaves {9 {1} {9}}) -> 2", "(count_leaves {8 {0} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.678896}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {7 {1} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {4 {0}} {5 {9} {7}}} {6 {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9 {3 {9}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.685036}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {1} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {7} {6}} {9}}) -> 3", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.679901}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {1 {1 {4}} {0}}}) -> 2", "(count_leaves {9 {5} {4 {7} {4}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {1}}) -> 1", "(count_leaves {2 {5 {9}} {5 {7}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.714628}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {5 {0 {0 {7}} {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {4 {2} {7}} {3 {5}}}) -> 3", "(count_leaves {4 {8 {4} {1}} {0 {0} {0}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.647047}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {0}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {9} {9}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) c) 1)) 0)) _) _)", "time": 0.683142}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {8} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {9}}) -> 2", "(count_leaves {8 {3 {4}}}) -> 1", "(count_leaves {7 {2}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.692237}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {9}}) -> 1", "(count_leaves {5 {4} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {1} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.750762}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {1 {1} {8}}) -> 2", "(count_leaves {8 {5} {6}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.684458}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.033932}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.039463}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {4 {5}} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6} {0}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.701014}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0} {1}}) -> 2", "(count_leaves {9 {3 {4 {6} {1}}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {3 {6} {7}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.716765}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {9}}) -> 1", "(count_leaves {4 {3 {3 {1}} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {8} {3 {8} {7}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.670702}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {7}} {3 {5}}}) -> 2", "(count_leaves {5 {7} {2 {7 {3} {5}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.748749}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {8 {9 {5} {4}} {3}}}) -> 3", "(count_leaves {4 {6} {3}}) -> 2", "(count_leaves {6 {6 {0} {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.634876}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {7 {3} {0}}) -> 2", "(count_leaves {1 {5}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {1} {7}}) -> 2", "(count_leaves {1 {5 {7 {9}}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.578174}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {3} {7 {7 {3}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6 {4} {3}}) -> 2", "(count_leaves {5 {6 {3} {5}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.603926}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7} {4}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {9 {1} {5}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.504942}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {0 {0 {9}} {1 {2}}}}) -> 2", "(count_leaves {9 {4 {1}}}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {1 {2 {8} {9}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.529427}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {1} {2 {7 {5}} {8 {7} {5}}}}) -> 4", "(count_leaves {5 {8 {7} {7 {5} {8}}} {2 {2}}}) -> 4", "(count_leaves {4 {4}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.826703}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {4 {5} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {4} {1}}) -> 2", "(count_leaves {4 {0} {2}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.472463}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {9 {5}} {1}}) -> 2", "(count_leaves {7 {0 {0 {5}} {7 {3} {0}}}}) -> 3", "(count_leaves {3 {8 {2}} {4 {4} {3 {1}}}}) -> 3", "(count_leaves {6 {8} {9 {7 {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {0 {0} {0}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.768517}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {2} {3 {1 {4} {0}} {0}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.80655}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {8} {4}}) -> 2", "(count_leaves {6 {7}}) -> 1", "(count_leaves {6 {7 {2}} {4 {2} {7}}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {9 {6 {6} {7}}}) -> 2", "(count_leaves {1 {9 {9} {7}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.791196}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {2 {7}}}) -> 1", "(count_leaves {3 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {3 {5} {4}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.809579}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3 {8}} {1 {2} {1}}}) -> 3", "(count_leaves {9 {0 {0} {8 {7}}}}) -> 2", "(count_leaves {5 {0}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4 {8}}) -> 1", "(count_leaves {8 {0} {5}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.811188}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {4}}) -> 1", "(count_leaves {9 {3 {7} {2}}}) -> 2", "(count_leaves {5}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.711239}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {6}}) -> 1", "(count_leaves {6 {0 {4} {1}} {2 {3} {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {2 {4 {9}} {6}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.443602}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {3 {4 {4}}} {4}}) -> 2", "(count_leaves {2 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {6 {0}}}) -> 1", "(count_leaves {2 {1} {0 {3} {6}}}) -> 3", "(count_leaves {5 {9} {9}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.393282}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2 {1 {5 {4} {8}} {3}} {1}}) -> 4", "(count_leaves {7 {2} {2}}) -> 2", "(count_leaves {6 {0 {7 {9}}} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.844146}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3 {5 {0}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.076016}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4}}) -> 1", "(count_leaves {6 {6} {0}}) -> 2", "(count_leaves {0 {6} {7 {2}}}) -> 2", "(count_leaves {9 {9}}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.901026}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {8 {6} {5}} {5 {1}}} {0 {4 {8}} {7}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.92777}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {9} {2}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {6 {0} {5}}) -> 2", "(count_leaves {9 {8} {6}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.440327}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8 {1}} {1 {1} {6}}}) -> 3", "(count_leaves {7 {1} {5}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.481529}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3} {7}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.074646}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {8 {5}} {1 {9}}}) -> 2", "(count_leaves {6 {6}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {3 {7 {4}} {9 {2 {0} {5}} {2}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.510662}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {6 {9} {4 {5} {4}}} {9 {8 {7}} {0 {6} {2}}}}) -> 6", "(count_leaves {1 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.48354}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {6 {5 {8} {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {1} {9 {5} {3}}} {8}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.863305}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2} {8}}) -> 2", "(count_leaves {6 {2} {9}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {4 {6} {6}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.031568}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6 {2} {0}}) -> 2", "(count_leaves {4 {1} {6}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9 {3}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.996335}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {6 {8 {8} {7 {7}}}}) -> 2", "(count_leaves {4 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {1 {2}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.504797}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {2}}) -> 1", "(count_leaves {5 {5 {3} {8}} {0}}) -> 3", "(count_leaves {3 {6} {9 {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {5 {7 {7 {0}} {4 {5}}} {8 {1} {3 {8}}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.066887}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {3} {0}}) -> 2", "(count_leaves {9 {3 {4 {6} {3}}} {8 {9}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {5 {5 {7} {4}} {3 {1}}}}) -> 3", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.471688}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4} {1}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {9} {6 {1} {8}}}) -> 3", "(count_leaves {0 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.040694}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {5}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.044394}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {9} {0}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {8 {0}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {4 {6}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.02562}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.050143}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {5} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (/ 1 c))) 0)) _) _)", "time": 0.222112}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {3} {5 {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {4} {3 {6}}}}) -> 2", "(count_leaves {1 {8} {8}}) -> 2", "(count_leaves {8 {0 {6} {2}}}) -> 2", "(count_leaves {8 {4}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.084552}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {0 {6 {5}} {8 {4} {6}}} {3 {2 {2}} {5 {2}}}}) -> 5", "(count_leaves {1 {1}}) -> 1", "(count_leaves {0 {9} {7}}) -> 2", "(count_leaves {8 {3 {5}} {5 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.07481}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {0 {6}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.030701}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {4 {2}} {9 {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.668284}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {6} {9}} {2 {6} {9}}}) -> 4", "(count_leaves {3 {4 {4 {3}}}}) -> 1", "(count_leaves {8 {2 {4} {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.702583}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {9}}) -> 1", "(count_leaves {9 {8} {6}}) -> 2", "(count_leaves {3 {8 {6} {4}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.582644}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {7 {2}}}}) -> 1", "(count_leaves {1 {2 {8} {6}} {3}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {7} {9 {5 {0}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.633667}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4} {8}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {8 {9} {6}}) -> 2", "(count_leaves {0 {2} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.635572}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9 {0} {1 {7}}} {9 {4} {4 {0}}}}) -> 4", "(count_leaves {9 {5}}) -> 1", "(count_leaves {4 {8} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {9 {7}} {6 {7 {7} {8}}}}) -> 3", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.601821}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {3}}) -> 1", "(count_leaves {4 {8 {3 {5} {4}}} {2 {8} {5 {1} {6}}}}) -> 5", "(count_leaves {3 {6} {4 {3}}}) -> 2", "(count_leaves {6 {9 {6 {6}} {1}} {4}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.562758}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {2}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {5 {8 {2 {0} {9}}}}) -> 2", "(count_leaves {0 {4 {2} {0}}}) -> 2", "(count_leaves {6 {4 {8} {5}} {7 {3} {2}}}) -> 4", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.646567}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {4}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {0 {4 {9}} {7}} {5 {1 {1} {4}} {7}}}) -> 5", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.598104}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {6} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.629546}
