{"time": 0.000303, "examples": ["(sum []) -> 0", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) 0) _) _)", "name": "sum"}
{"time": 0.000378, "examples": ["(sum []) -> 0", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) 0) _) _)", "name": "sum"}
{"time": 0.034809, "examples": ["(sum []) -> 0", "(sum [8 0 4 9]) -> 21"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.052869, "examples": ["(sum []) -> 0", "(sum [6 9 7 5 7]) -> 34"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.05259, "examples": ["(sum []) -> 0", "(sum [7 9]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.031281, "examples": ["(sum []) -> 0", "(sum [9]) -> 9"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.052041, "examples": ["(sum []) -> 0", "(sum [4 0 3 6]) -> 13"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.034711, "examples": ["(sum []) -> 0", "(sum [3]) -> 3"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.049352, "examples": ["(sum []) -> 0", "(sum [4 2 1 8 0]) -> 15"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03421, "examples": ["(sum []) -> 0", "(sum [0 6]) -> 6"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.038518, "examples": ["(sum []) -> 0", "(sum [0 6]) -> 6"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.024656, "examples": ["(sum []) -> 0", "(sum [5]) -> 5"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.037259, "examples": ["(sum []) -> 0", "(sum [8]) -> 8"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.039887, "examples": ["(sum []) -> 0", "(sum [7 7 3]) -> 17"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.049697, "examples": ["(sum []) -> 0", "(sum [6 8 2 2 8]) -> 26"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.035822, "examples": ["(sum []) -> 0", "(sum [8 5]) -> 13"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.000543, "examples": ["(sum []) -> 0", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) 0) _) _)", "name": "sum"}
{"time": 0.02848, "examples": ["(sum []) -> 0", "(sum [5 8 3]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03588, "examples": ["(sum []) -> 0", "(sum [4 1 3 3]) -> 11"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.000305, "examples": ["(sum []) -> 0", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) 0) _) _)", "name": "sum"}
{"time": 0.030214, "examples": ["(sum []) -> 0", "(sum [8 3 4 3 7]) -> 25"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.000425, "examples": ["(sum []) -> 0", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) 0) _) _)", "name": "sum"}
{"time": 0.047995, "examples": ["(sum []) -> 0", "(sum [7 2 7]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030124, "examples": ["(sum []) -> 0", "(sum [1 2 7]) -> 10"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028701, "examples": ["(sum []) -> 0", "(sum [8]) -> 8"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.046663, "examples": ["(sum []) -> 0", "(sum [4 6 4]) -> 14"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.042232, "examples": ["(sum []) -> 0", "(sum [2 5 0]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.036019, "examples": ["(sum []) -> 0", "(sum [2 5 1]) -> 8"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.026461, "examples": ["(sum []) -> 0", "(sum [6]) -> 6"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.039564, "examples": ["(sum []) -> 0", "(sum [1 9 0 6]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.033484, "examples": ["(sum []) -> 0", "(sum [1 9 7]) -> 17"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.040942, "examples": ["(sum []) -> 0", "(sum [8 9]) -> 17"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.033878, "examples": ["(sum []) -> 0", "(sum [5 9 6 5 9]) -> 34"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028862, "examples": ["(sum []) -> 0", "(sum [4 7 9 8]) -> 28"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028972, "examples": ["(sum []) -> 0", "(sum [9 5 8]) -> 22"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
