{"time": 1.98718, "examples": ["(appendt {} 9) -> {}", "(appendt {[]} 3) -> {[3]}", "(appendt {[6] {[5 2 3] {[0 6 2 0] {[1 0 7 3]}}}} 3) -> {[6 3] {[5 2 3 3] {[0 6 2 0 3] {[1 0 7 3 3]}}}}", "(appendt {[9 3] {[]} {[3 7 0 5] {[7 9] {[]}} {[6 0 1]}}} 8) -> {[9 3 8] {[8]} {[3 7 0 5 8] {[7 9 8] {[8]}} {[6 0 1 8]}}}", "(appendt {[9 1 1 8 9]} 8) -> {[9 1 1 8 9 8]}", "(appendt {} 4) -> {}", "(appendt {[8 7 1 4] {[3]}} 0) -> {[8 7 1 4 0] {[3 0]}}", "(appendt {[] {[7]}} 7) -> {[7] {[7 7]}}", "(appendt {[5 9]} 9) -> {[5 9 9]}", "(appendt {} 3) -> {}", "(appendt {[]} 4) -> {[4]}", "(appendt {[4 3 9 2 6]} 4) -> {[4 3 9 2 6 4]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.066939, "examples": ["(appendt {} 5) -> {}", "(appendt {[1 0 3] {[]}} 6) -> {[1 0 3 6] {[6]}}", "(appendt {[2 9 3 1]} 7) -> {[2 9 3 1 7]}", "(appendt {} 5) -> {}", "(appendt {[7 3 4]} 5) -> {[7 3 4 5]}", "(appendt {[]} 6) -> {[6]}", "(appendt {} 5) -> {}", "(appendt {[5 5 9 8]} 5) -> {[5 5 9 8 5]}", "(appendt {[3 0 5 7] {[4 8]}} 6) -> {[3 0 5 7 6] {[4 8 6]}}", "(appendt {[2 4 9] {[4] {[0 0 6 1 7]} {[4]}} {[4 1] {[]} {[8 3 5]}}} 6) -> {[2 4 9 6] {[4 6] {[0 0 6 1 7 6]} {[4 6]}} {[4 1 6] {[6]} {[8 3 5 6]}}}", "(appendt {[0 1 7]} 9) -> {[0 1 7 9]}", "(appendt {[7 9 6] {[]} {[0 5] {[]} {[]}}} 2) -> {[7 9 6 2] {[2]} {[0 5 2] {[2]} {[2]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.197862, "examples": ["(appendt {} 7) -> {}", "(appendt {} 6) -> {}", "(appendt {[1 0] {[7 4]}} 8) -> {[1 0 8] {[7 4 8]}}", "(appendt {} 0) -> {}", "(appendt {[]} 8) -> {[8]}", "(appendt {[0 9]} 6) -> {[0 9 6]}", "(appendt {[6 1 0 7]} 8) -> {[6 1 0 7 8]}", "(appendt {[4 1] {[1 2 9 6]} {[7 8 1]}} 3) -> {[4 1 3] {[1 2 9 6 3]} {[7 8 1 3]}}", "(appendt {[] {[4 5 3 9 8] {[7]}} {[] {[0 3 8]}}} 9) -> {[9] {[4 5 3 9 8 9] {[7 9]}} {[9] {[0 3 8 9]}}}", "(appendt {[] {[9 1] {[6 5 8]}} {[3 8 1 2 7] {[2 9]}}} 2) -> {[2] {[9 1 2] {[6 5 8 2]}} {[3 8 1 2 7 2] {[2 9 2]}}}", "(appendt {} 4) -> {}", "(appendt {[3 7]} 8) -> {[3 7 8]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.116386, "examples": ["(appendt {} 2) -> {}", "(appendt {[5 7] {[4 2 1]}} 4) -> {[5 7 4] {[4 2 1 4]}}", "(appendt {[] {[6] {[2 0 5]} {[]}} {[]}} 9) -> {[9] {[6 9] {[2 0 5 9]} {[9]}} {[9]}}", "(appendt {[8 3 0] {[0]} {[]}} 4) -> {[8 3 0 4] {[0 4]} {[4]}}", "(appendt {[0 0 4] {[9 3 0 3]}} 9) -> {[0 0 4 9] {[9 3 0 3 9]}}", "(appendt {[8 4] {[]}} 2) -> {[8 4 2] {[2]}}", "(appendt {[1 0]} 8) -> {[1 0 8]}", "(appendt {[2 8] {[6]}} 7) -> {[2 8 7] {[6 7]}}", "(appendt {[] {[8 9 4] {[4 1 0]} {[6 1 5]}} {[1 4]}} 7) -> {[7] {[8 9 4 7] {[4 1 0 7]} {[6 1 5 7]}} {[1 4 7]}}", "(appendt {[4] {[] {[6] {[]}}} {[]}} 6) -> {[4 6] {[6] {[6 6] {[6]}}} {[6]}}", "(appendt {[] {[5 2 0]} {[4 0]}} 2) -> {[2] {[5 2 0 2]} {[4 0 2]}}", "(appendt {[2] {[5 5 5 9 0] {[0 6 2] {[5 1 3 0 4]}}}} 0) -> {[2 0] {[5 5 5 9 0 0] {[0 6 2 0] {[5 1 3 0 4 0]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.157279, "examples": ["(appendt {} 8) -> {}", "(appendt {[] {[8] {[1 1]} {[5 8 8]}}} 0) -> {[0] {[8 0] {[1 1 0]} {[5 8 8 0]}}}", "(appendt {[4 6 0 4 9] {[6 1]}} 7) -> {[4 6 0 4 9 7] {[6 1 7]}}", "(appendt {[1] {[] {[7 3] {[]}} {[3 2 3 4] {[7]}}} {[5] {[3 3 5 4] {[4 2 6]}}}} 1) -> {[1 1] {[1] {[7 3 1] {[1]}} {[3 2 3 4 1] {[7 1]}}} {[5 1] {[3 3 5 4 1] {[4 2 6 1]}}}}", "(appendt {} 0) -> {}", "(appendt {[2 8]} 8) -> {[2 8 8]}", "(appendt {[9 0 5 5 0] {[8 3 5 8] {[8 0] {[6]}}}} 3) -> {[9 0 5 5 0 3] {[8 3 5 8 3] {[8 0 3] {[6 3]}}}}", "(appendt {[2 9 4] {[4 7 4 9]} {[]}} 9) -> {[2 9 4 9] {[4 7 4 9 9]} {[9]}}", "(appendt {[5 8 0 9] {[3 5 4]} {[4 3 3 7 1]}} 0) -> {[5 8 0 9 0] {[3 5 4 0]} {[4 3 3 7 1 0]}}", "(appendt {[5 7 8]} 9) -> {[5 7 8 9]}", "(appendt {[3 3 0 3 4] {[5 4]} {[8 8 5 2]}} 9) -> {[3 3 0 3 4 9] {[5 4 9]} {[8 8 5 2 9]}}", "(appendt {} 6) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.330647, "examples": ["(appendt {} 8) -> {}", "(appendt {[3 4 6 1] {[2 1] {[6]}}} 1) -> {[3 4 6 1 1] {[2 1 1] {[6 1]}}}", "(appendt {[9 8 6] {[5] {[0 6 5]}}} 4) -> {[9 8 6 4] {[5 4] {[0 6 5 4]}}}", "(appendt {[4 3 9] {[3 8 0 8]} {[5]}} 6) -> {[4 3 9 6] {[3 8 0 8 6]} {[5 6]}}", "(appendt {} 1) -> {}", "(appendt {[0 2 9] {[1]} {[2 3 3]}} 0) -> {[0 2 9 0] {[1 0]} {[2 3 3 0]}}", "(appendt {} 1) -> {}", "(appendt {[0] {[4 1 6 4 1]} {[6 5 7] {[4]}}} 2) -> {[0 2] {[4 1 6 4 1 2]} {[6 5 7 2] {[4 2]}}}", "(appendt {[]} 1) -> {[1]}", "(appendt {} 2) -> {}", "(appendt {[] {[]}} 1) -> {[1] {[1]}}", "(appendt {[] {[3 7 4 9 0]}} 8) -> {[8] {[3 7 4 9 0 8]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.73619, "examples": ["(appendt {} 5) -> {}", "(appendt {} 7) -> {}", "(appendt {[4 3] {[6 4 2]} {[7 3 4]}} 5) -> {[4 3 5] {[6 4 2 5]} {[7 3 4 5]}}", "(appendt {[] {[] {[5]}}} 3) -> {[3] {[3] {[5 3]}}}", "(appendt {[]} 6) -> {[6]}", "(appendt {} 6) -> {}", "(appendt {} 4) -> {}", "(appendt {[4 9 5]} 0) -> {[4 9 5 0]}", "(appendt {[0 6 7] {[2]} {[8 2]}} 3) -> {[0 6 7 3] {[2 3]} {[8 2 3]}}", "(appendt {[8] {[5] {[8 6]} {[8]}} {[7 4 5] {[0 2]} {[7]}}} 3) -> {[8 3] {[5 3] {[8 6 3]} {[8 3]}} {[7 4 5 3] {[0 2 3]} {[7 3]}}}", "(appendt {[2 0 3 6] {[7 1 7 4 5]}} 8) -> {[2 0 3 6 8] {[7 1 7 4 5 8]}}", "(appendt {[6 7 5 0] {[7 1 0 4]}} 4) -> {[6 7 5 0 4] {[7 1 0 4 4]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.908092, "examples": ["(appendt {} 2) -> {}", "(appendt {[1 6]} 6) -> {[1 6 6]}", "(appendt {} 6) -> {}", "(appendt {[7]} 5) -> {[7 5]}", "(appendt {[2 0 2] {[4 4]} {[7]}} 5) -> {[2 0 2 5] {[4 4 5]} {[7 5]}}", "(appendt {[9 6 9]} 2) -> {[9 6 9 2]}", "(appendt {} 2) -> {}", "(appendt {} 6) -> {}", "(appendt {[3 9 2 5 2] {[8]}} 3) -> {[3 9 2 5 2 3] {[8 3]}}", "(appendt {[9 5 4] {[]} {[0 1 1 3]}} 0) -> {[9 5 4 0] {[0]} {[0 1 1 3 0]}}", "(appendt {[9] {[]}} 2) -> {[9 2] {[2]}}", "(appendt {} 2) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.04461, "examples": ["(appendt {} 8) -> {}", "(appendt {[1]} 6) -> {[1 6]}", "(appendt {[5] {[]}} 0) -> {[5 0] {[0]}}", "(appendt {[2 4 4 0 9]} 8) -> {[2 4 4 0 9 8]}", "(appendt {[9 6 4 9]} 1) -> {[9 6 4 9 1]}", "(appendt {[] {[3 5] {[6 4 9 8 7]}}} 7) -> {[7] {[3 5 7] {[6 4 9 8 7 7]}}}", "(appendt {[2 6 0]} 5) -> {[2 6 0 5]}", "(appendt {[3 4 3 6 9] {[0 5 7 8] {[8 1 9]}}} 2) -> {[3 4 3 6 9 2] {[0 5 7 8 2] {[8 1 9 2]}}}", "(appendt {[7 7]} 1) -> {[7 7 1]}", "(appendt {[7 5] {[8 2 7 2 8]} {[6 2 0]}} 7) -> {[7 5 7] {[8 2 7 2 8 7]} {[6 2 0 7]}}", "(appendt {[7 6] {[0] {[5 0 6 4]} {[1 7 9]}}} 1) -> {[7 6 1] {[0 1] {[5 0 6 4 1]} {[1 7 9 1]}}}", "(appendt {[1 3 2]} 9) -> {[1 3 2 9]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.098998, "examples": ["(appendt {} 3) -> {}", "(appendt {[1 1]} 4) -> {[1 1 4]}", "(appendt {[9 7 4]} 3) -> {[9 7 4 3]}", "(appendt {} 2) -> {}", "(appendt {[4 5 4 5 0] {[7 1 6 4 5]} {[1 2 9 6 2]}} 8) -> {[4 5 4 5 0 8] {[7 1 6 4 5 8]} {[1 2 9 6 2 8]}}", "(appendt {} 4) -> {}", "(appendt {[]} 3) -> {[3]}", "(appendt {[7 7] {[2 0 8 4]}} 0) -> {[7 7 0] {[2 0 8 4 0]}}", "(appendt {[6 8 5] {[9 1 7]}} 0) -> {[6 8 5 0] {[9 1 7 0]}}", "(appendt {[6] {[8 7 2 6] {[9 0 1] {[]}}}} 8) -> {[6 8] {[8 7 2 6 8] {[9 0 1 8] {[8]}}}}", "(appendt {} 6) -> {}", "(appendt {[1 6 4 0]} 2) -> {[1 6 4 0 2]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.125548, "examples": ["(appendt {} 8) -> {}", "(appendt {[7]} 2) -> {[7 2]}", "(appendt {[7 8 8 3] {[3 8 0] {[3 0 3 9 7]}}} 5) -> {[7 8 8 3 5] {[3 8 0 5] {[3 0 3 9 7 5]}}}", "(appendt {[7 3] {[0 3]}} 9) -> {[7 3 9] {[0 3 9]}}", "(appendt {[0 4]} 1) -> {[0 4 1]}", "(appendt {[8] {[8 1 4]} {[]}} 7) -> {[8 7] {[8 1 4 7]} {[7]}}", "(appendt {[9 7]} 7) -> {[9 7 7]}", "(appendt {[0 6]} 7) -> {[0 6 7]}", "(appendt {[4 3 6] {[7 6 7 6]}} 4) -> {[4 3 6 4] {[7 6 7 6 4]}}", "(appendt {[] {[4 1 8 0 0]} {[4 7 0 7]}} 4) -> {[4] {[4 1 8 0 0 4]} {[4 7 0 7 4]}}", "(appendt {} 3) -> {}", "(appendt {[0 3 8] {[9 7 5 8] {[9]} {[]}} {[8 8 6] {[4]} {[]}}} 7) -> {[0 3 8 7] {[9 7 5 8 7] {[9 7]} {[7]}} {[8 8 6 7] {[4 7]} {[7]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.114503, "examples": ["(appendt {} 6) -> {}", "(appendt {[2 7 4]} 0) -> {[2 7 4 0]}", "(appendt {[4] {[]} {[3 8 7]}} 7) -> {[4 7] {[7]} {[3 8 7 7]}}", "(appendt {[4 5]} 8) -> {[4 5 8]}", "(appendt {[5 7 6 6 2] {[4]}} 1) -> {[5 7 6 6 2 1] {[4 1]}}", "(appendt {[3 6]} 5) -> {[3 6 5]}", "(appendt {[3 6 9 3]} 1) -> {[3 6 9 3 1]}", "(appendt {[8 7]} 0) -> {[8 7 0]}", "(appendt {} 8) -> {}", "(appendt {[1]} 5) -> {[1 5]}", "(appendt {[2] {[]} {[1] {[1]} {[] {[6 9]}}}} 0) -> {[2 0] {[0]} {[1 0] {[1 0]} {[0] {[6 9 0]}}}}", "(appendt {[5 4 3 6] {[9]}} 1) -> {[5 4 3 6 1] {[9 1]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.467409, "examples": ["(appendt {} 9) -> {}", "(appendt {} 6) -> {}", "(appendt {[8] {[1 5 3]}} 3) -> {[8 3] {[1 5 3 3]}}", "(appendt {[9 6 2 1 7]} 6) -> {[9 6 2 1 7 6]}", "(appendt {[6 0 8 9 1] {[7 5 6]} {[]}} 6) -> {[6 0 8 9 1 6] {[7 5 6 6]} {[6]}}", "(appendt {[5 0 4] {[3 4 6]}} 9) -> {[5 0 4 9] {[3 4 6 9]}}", "(appendt {[0 1 4 2 3]} 2) -> {[0 1 4 2 3 2]}", "(appendt {[5 8 8] {[]}} 9) -> {[5 8 8 9] {[9]}}", "(appendt {[1 6] {[8 8] {[2]} {[5]}}} 3) -> {[1 6 3] {[8 8 3] {[2 3]} {[5 3]}}}", "(appendt {[1 0 0 1 3]} 8) -> {[1 0 0 1 3 8]}", "(appendt {} 0) -> {}", "(appendt {[5 5] {[8 1 4 5 9]} {[3] {[9 5 7 2 4]}}} 1) -> {[5 5 1] {[8 1 4 5 9 1]} {[3 1] {[9 5 7 2 4 1]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.531981, "examples": ["(appendt {} 5) -> {}", "(appendt {} 8) -> {}", "(appendt {[7]} 6) -> {[7 6]}", "(appendt {} 2) -> {}", "(appendt {[6 4 2] {[5 3]} {[] {[]}}} 8) -> {[6 4 2 8] {[5 3 8]} {[8] {[8]}}}", "(appendt {} 3) -> {}", "(appendt {} 2) -> {}", "(appendt {[] {[6]} {[5 1 5 7 5] {[5 9] {[9 0]}}}} 8) -> {[8] {[6 8]} {[5 1 5 7 5 8] {[5 9 8] {[9 0 8]}}}}", "(appendt {} 5) -> {}", "(appendt {[] {[2 9 3]} {[]}} 9) -> {[9] {[2 9 3 9]} {[9]}}", "(appendt {[7] {[9 9 9 0] {[9 8 9]} {[] {[6 3 7]} {[]}}}} 1) -> {[7 1] {[9 9 9 0 1] {[9 8 9 1]} {[1] {[6 3 7 1]} {[1]}}}}", "(appendt {[2 7 9]} 5) -> {[2 7 9 5]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.825002, "examples": ["(appendt {} 9) -> {}", "(appendt {[8] {[7] {[2 8 0 4]} {[4 3]}} {[2] {[1 6 4 6]} {[9 5 4 5 6]}}} 2) -> {[8 2] {[7 2] {[2 8 0 4 2]} {[4 3 2]}} {[2 2] {[1 6 4 6 2]} {[9 5 4 5 6 2]}}}", "(appendt {[0 3 8 0] {[2 0 5 7 6] {[3] {[]} {[4 9 3 4]}}}} 5) -> {[0 3 8 0 5] {[2 0 5 7 6 5] {[3 5] {[5]} {[4 9 3 4 5]}}}}", "(appendt {[9 2]} 2) -> {[9 2 2]}", "(appendt {[1 5 2] {[0 8 4 2] {[6 5]} {[5 9]}}} 1) -> {[1 5 2 1] {[0 8 4 2 1] {[6 5 1]} {[5 9 1]}}}", "(appendt {[7] {[6 2 8 3 2]}} 2) -> {[7 2] {[6 2 8 3 2 2]}}", "(appendt {[6 8 1 1]} 1) -> {[6 8 1 1 1]}", "(appendt {[8 8 2 9 8] {[8 2]}} 0) -> {[8 8 2 9 8 0] {[8 2 0]}}", "(appendt {[4 4 6 9 9]} 9) -> {[4 4 6 9 9 9]}", "(appendt {[] {[0]} {[]}} 9) -> {[9] {[0 9]} {[9]}}", "(appendt {[4 1 4 3 9] {[4 2 2 8]} {[] {[9 3 6] {[]} {[9 0 5 2 9]}} {[4 5 5 2 7]}}} 1) -> {[4 1 4 3 9 1] {[4 2 2 8 1]} {[1] {[9 3 6 1] {[1]} {[9 0 5 2 9 1]}} {[4 5 5 2 7 1]}}}", "(appendt {[4 6 5]} 2) -> {[4 6 5 2]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.677782, "examples": ["(appendt {} 5) -> {}", "(appendt {[4 7] {[]}} 3) -> {[4 7 3] {[3]}}", "(appendt {[1 4 8 0 6] {[4 7 1]} {[9 8 7 8 0]}} 3) -> {[1 4 8 0 6 3] {[4 7 1 3]} {[9 8 7 8 0 3]}}", "(appendt {} 4) -> {}", "(appendt {} 0) -> {}", "(appendt {[2 8]} 3) -> {[2 8 3]}", "(appendt {[8 4 9 7 4]} 2) -> {[8 4 9 7 4 2]}", "(appendt {} 7) -> {}", "(appendt {[] {[3 0 1]} {[3 3]}} 5) -> {[5] {[3 0 1 5]} {[3 3 5]}}", "(appendt {[]} 0) -> {[0]}", "(appendt {[] {[7 3 0 4 8]} {[5 4 7 3 6]}} 1) -> {[1] {[7 3 0 4 8 1]} {[5 4 7 3 6 1]}}", "(appendt {} 1) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.045104, "examples": ["(appendt {} 7) -> {}", "(appendt {[4 2 2 3 2] {[6 0 7 1 9]} {[5 2] {[8 2]}}} 8) -> {[4 2 2 3 2 8] {[6 0 7 1 9 8]} {[5 2 8] {[8 2 8]}}}", "(appendt {[6 2 7 0] {[8] {[2]}} {[5 0 5]}} 7) -> {[6 2 7 0 7] {[8 7] {[2 7]}} {[5 0 5 7]}}", "(appendt {} 2) -> {}", "(appendt {[9]} 7) -> {[9 7]}", "(appendt {} 9) -> {}", "(appendt {[]} 7) -> {[7]}", "(appendt {[3] {[] {[2 4]}} {[5 2 5 0] {[2 2 4]} {[4 2 9]}}} 1) -> {[3 1] {[1] {[2 4 1]}} {[5 2 5 0 1] {[2 2 4 1]} {[4 2 9 1]}}}", "(appendt {} 2) -> {}", "(appendt {[7]} 0) -> {[7 0]}", "(appendt {[9 7 1 1 5] {[]} {[6 0 2]}} 8) -> {[9 7 1 1 5 8] {[8]} {[6 0 2 8]}}", "(appendt {[7 6 3 9] {[3 4 2 5 8] {[2] {[0]}}} {[2 7] {[0 9] {[]} {[0 2]}}}} 7) -> {[7 6 3 9 7] {[3 4 2 5 8 7] {[2 7] {[0 7]}}} {[2 7 7] {[0 9 7] {[7]} {[0 2 7]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.798464, "examples": ["(appendt {} 6) -> {}", "(appendt {[4 1 3] {[]} {[8 8 1]}} 8) -> {[4 1 3 8] {[8]} {[8 8 1 8]}}", "(appendt {} 6) -> {}", "(appendt {[]} 5) -> {[5]}", "(appendt {[1 1 3 8] {[]} {[]}} 4) -> {[1 1 3 8 4] {[4]} {[4]}}", "(appendt {[5 9 9 4] {[3 4 0]} {[1 8 1]}} 7) -> {[5 9 9 4 7] {[3 4 0 7]} {[1 8 1 7]}}", "(appendt {[6 1 1 9]} 9) -> {[6 1 1 9 9]}", "(appendt {} 9) -> {}", "(appendt {[8 5] {[6 9 2 3 8] {[9 0 6 9]} {[8 7 6 3]}}} 0) -> {[8 5 0] {[6 9 2 3 8 0] {[9 0 6 9 0]} {[8 7 6 3 0]}}}", "(appendt {[4 0 7]} 2) -> {[4 0 7 2]}", "(appendt {[3 9 3] {[9 4 8]}} 4) -> {[3 9 3 4] {[9 4 8 4]}}", "(appendt {[2 7 1 2 6] {[1 2 9 6] {[4 0 3]} {[6]}}} 6) -> {[2 7 1 2 6 6] {[1 2 9 6 6] {[4 0 3 6]} {[6 6]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.787202, "examples": ["(appendt {} 7) -> {}", "(appendt {} 1) -> {}", "(appendt {[] {[1 6 7 0 9]}} 2) -> {[2] {[1 6 7 0 9 2]}}", "(appendt {[0 1 9 9 7] {[8 3]}} 4) -> {[0 1 9 9 7 4] {[8 3 4]}}", "(appendt {[7 8] {[3 4]}} 5) -> {[7 8 5] {[3 4 5]}}", "(appendt {[2 5 8 0] {[] {[]}} {[] {[0]}}} 7) -> {[2 5 8 0 7] {[7] {[7]}} {[7] {[0 7]}}}", "(appendt {[8 6 2] {[1] {[4 1] {[2]} {[5 8 8]}} {[3 7 5 5 1] {[2]}}} {[6 2 8 9 1] {[]} {[] {[8 5 4]}}}} 5) -> {[8 6 2 5] {[1 5] {[4 1 5] {[2 5]} {[5 8 8 5]}} {[3 7 5 5 1 5] {[2 5]}}} {[6 2 8 9 1 5] {[5]} {[5] {[8 5 4 5]}}}}", "(appendt {} 1) -> {}", "(appendt {[8] {[2 3 3 7]} {[]}} 1) -> {[8 1] {[2 3 3 7 1]} {[1]}}", "(appendt {[9 9 5 9 7] {[]}} 5) -> {[9 9 5 9 7 5] {[5]}}", "(appendt {[2 3 2 3 7] {[3]}} 9) -> {[2 3 2 3 7 9] {[3 9]}}", "(appendt {[] {[9] {[7 8 9 3]}}} 2) -> {[2] {[9 2] {[7 8 9 3 2]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.311868, "examples": ["(appendt {} 7) -> {}", "(appendt {[]} 0) -> {[0]}", "(appendt {[1 2 3] {[7 7 2 0 5] {[6 4 4 7]} {[8 0]}} {[0 2]}} 2) -> {[1 2 3 2] {[7 7 2 0 5 2] {[6 4 4 7 2]} {[8 0 2]}} {[0 2 2]}}", "(appendt {[4 8 7]} 5) -> {[4 8 7 5]}", "(appendt {[5 4 3] {[8 4 5 2 4]} {[8]}} 7) -> {[5 4 3 7] {[8 4 5 2 4 7]} {[8 7]}}", "(appendt {[9 4] {[3 4]}} 2) -> {[9 4 2] {[3 4 2]}}", "(appendt {[4 3] {[] {[7] {[7 5]} {[6 4]}} {[4 6 2 1] {[7 7 3]}}}} 5) -> {[4 3 5] {[5] {[7 5] {[7 5 5]} {[6 4 5]}} {[4 6 2 1 5] {[7 7 3 5]}}}}", "(appendt {} 7) -> {}", "(appendt {[]} 4) -> {[4]}", "(appendt {} 0) -> {}", "(appendt {} 8) -> {}", "(appendt {[1]} 5) -> {[1 5]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.259899, "examples": ["(appendt {} 0) -> {}", "(appendt {} 6) -> {}", "(appendt {} 2) -> {}", "(appendt {[9 1 1 0 2]} 2) -> {[9 1 1 0 2 2]}", "(appendt {[5 9] {[]} {[9 8]}} 6) -> {[5 9 6] {[6]} {[9 8 6]}}", "(appendt {[1 1] {[] {[3 2]} {[5]}}} 3) -> {[1 1 3] {[3] {[3 2 3]} {[5 3]}}}", "(appendt {[7 0 0 0 4] {[6] {[7 7 0 4 2] {[]}}}} 0) -> {[7 0 0 0 4 0] {[6 0] {[7 7 0 4 2 0] {[0]}}}}", "(appendt {[9 3 8 8 5] {[1 8]} {[0]}} 7) -> {[9 3 8 8 5 7] {[1 8 7]} {[0 7]}}", "(appendt {[9]} 3) -> {[9 3]}", "(appendt {[9 0] {[0 9 8 5] {[6]}}} 6) -> {[9 0 6] {[0 9 8 5 6] {[6 6]}}}", "(appendt {[7 1]} 8) -> {[7 1 8]}", "(appendt {[8 3 7]} 3) -> {[8 3 7 3]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.76429, "examples": ["(appendt {} 7) -> {}", "(appendt {[6 6 1 3]} 8) -> {[6 6 1 3 8]}", "(appendt {[9 3 8] {[1 9 0 0] {[3 8 5 7 2]}}} 2) -> {[9 3 8 2] {[1 9 0 0 2] {[3 8 5 7 2 2]}}}", "(appendt {[2 7]} 2) -> {[2 7 2]}", "(appendt {[7 4 0 8] {[3]} {[5 6]}} 7) -> {[7 4 0 8 7] {[3 7]} {[5 6 7]}}", "(appendt {[] {[1 7 2 9]} {[1 8 5 4 2] {[3 5]} {[7 3]}}} 1) -> {[1] {[1 7 2 9 1]} {[1 8 5 4 2 1] {[3 5 1]} {[7 3 1]}}}", "(appendt {[6 9] {[6 4 0]} {[4 1 0] {[8 1 9 9]}}} 9) -> {[6 9 9] {[6 4 0 9]} {[4 1 0 9] {[8 1 9 9 9]}}}", "(appendt {[6 4] {[2 8 6 1 4]}} 7) -> {[6 4 7] {[2 8 6 1 4 7]}}", "(appendt {[6] {[4 4 5 5]}} 2) -> {[6 2] {[4 4 5 5 2]}}", "(appendt {[] {[4 4 8 7] {[3]} {[]}} {[] {[6 4 9 5]} {[8 3 0 9]}}} 0) -> {[0] {[4 4 8 7 0] {[3 0]} {[0]}} {[0] {[6 4 9 5 0]} {[8 3 0 9 0]}}}", "(appendt {} 5) -> {}", "(appendt {[]} 6) -> {[6]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.896581, "examples": ["(appendt {} 0) -> {}", "(appendt {[6 4 8] {[9 3 6]} {[2]}} 4) -> {[6 4 8 4] {[9 3 6 4]} {[2 4]}}", "(appendt {[8 3 9 7] {[2 6 5 0] {[9 2 5 5]} {[6 6]}}} 8) -> {[8 3 9 7 8] {[2 6 5 0 8] {[9 2 5 5 8]} {[6 6 8]}}}", "(appendt {} 0) -> {}", "(appendt {[]} 8) -> {[8]}", "(appendt {[8 2 5 2] {[9 5]} {[8 6 4]}} 2) -> {[8 2 5 2 2] {[9 5 2]} {[8 6 4 2]}}", "(appendt {[3] {[2 0 4 3 1]}} 4) -> {[3 4] {[2 0 4 3 1 4]}}", "(appendt {} 1) -> {}", "(appendt {} 5) -> {}", "(appendt {[] {[5] {[7]} {[5 8]}}} 5) -> {[5] {[5 5] {[7 5]} {[5 8 5]}}}", "(appendt {[3 9 0 2] {[8 9 9]}} 0) -> {[3 9 0 2 0] {[8 9 9 0]}}", "(appendt {[]} 0) -> {[0]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.830328, "examples": ["(appendt {} 5) -> {}", "(appendt {[1 9] {[0 9] {[7]} {[1]}} {[9 3 9 5] {[3 6 7 8 0]} {[0 5 3]}}} 5) -> {[1 9 5] {[0 9 5] {[7 5]} {[1 5]}} {[9 3 9 5 5] {[3 6 7 8 0 5]} {[0 5 3 5]}}}", "(appendt {} 1) -> {}", "(appendt {[2 1 6] {[6 1 7 9 7]}} 0) -> {[2 1 6 0] {[6 1 7 9 7 0]}}", "(appendt {[1 3] {[3 4] {[6 6 8]} {[0 3] {[3]} {[3 7 9 3]}}}} 8) -> {[1 3 8] {[3 4 8] {[6 6 8 8]} {[0 3 8] {[3 8]} {[3 7 9 3 8]}}}}", "(appendt {[9 5 2 3 9]} 2) -> {[9 5 2 3 9 2]}", "(appendt {} 1) -> {}", "(appendt {[3 2]} 5) -> {[3 2 5]}", "(appendt {[1 2 1 0 9] {[5 7] {[]}} {[1]}} 0) -> {[1 2 1 0 9 0] {[5 7 0] {[0]}} {[1 0]}}", "(appendt {[8 3 2] {[5 1 7]} {[3 8 2 3 4] {[4 1 5 3 4]} {[5]}}} 6) -> {[8 3 2 6] {[5 1 7 6]} {[3 8 2 3 4 6] {[4 1 5 3 4 6]} {[5 6]}}}", "(appendt {[6 0] {[2 1 0 0 0] {[4 6 1]} {[2 9 3]}} {[]}} 9) -> {[6 0 9] {[2 1 0 0 0 9] {[4 6 1 9]} {[2 9 3 9]}} {[9]}}", "(appendt {[6 0 2 9] {[8 8 5]}} 4) -> {[6 0 2 9 4] {[8 8 5 4]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.902069, "examples": ["(appendt {} 8) -> {}", "(appendt {[9 3 3] {[6 2 7 8]}} 3) -> {[9 3 3 3] {[6 2 7 8 3]}}", "(appendt {} 5) -> {}", "(appendt {[2] {[4] {[0 3 1] {[0 4 2]} {[1 7 4 1 0]}} {[6 9 2 9] {[4 0 7 6]} {[]}}}} 7) -> {[2 7] {[4 7] {[0 3 1 7] {[0 4 2 7]} {[1 7 4 1 0 7]}} {[6 9 2 9 7] {[4 0 7 6 7]} {[7]}}}}", "(appendt {[6 5 4 9 2] {[] {[9 2 5 2] {[6 7 8 0]} {[]}} {[6 3] {[]}}}} 3) -> {[6 5 4 9 2 3] {[3] {[9 2 5 2 3] {[6 7 8 0 3]} {[3]}} {[6 3 3] {[3]}}}}", "(appendt {[2 6 4 9] {[8 4 2 3 3]} {[0 6 6]}} 4) -> {[2 6 4 9 4] {[8 4 2 3 3 4]} {[0 6 6 4]}}", "(appendt {} 9) -> {}", "(appendt {} 1) -> {}", "(appendt {[2 4 1 2]} 7) -> {[2 4 1 2 7]}", "(appendt {[5 3 5 6]} 7) -> {[5 3 5 6 7]}", "(appendt {[6 9 8 7 4]} 3) -> {[6 9 8 7 4 3]}", "(appendt {} 9) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.962101, "examples": ["(appendt {} 1) -> {}", "(appendt {[1 1 5 3 4] {[8 3]}} 3) -> {[1 1 5 3 4 3] {[8 3 3]}}", "(appendt {[8 8 8 9 5] {[1 7 4 4]}} 2) -> {[8 8 8 9 5 2] {[1 7 4 4 2]}}", "(appendt {[1 5 0 9 3] {[8 3 7] {[2 6 8 1] {[0 5 6 7]} {[3 4 8]}} {[4 3 8] {[]}}} {[4 6]}} 2) -> {[1 5 0 9 3 2] {[8 3 7 2] {[2 6 8 1 2] {[0 5 6 7 2]} {[3 4 8 2]}} {[4 3 8 2] {[2]}}} {[4 6 2]}}", "(appendt {[1 4 8 9 1]} 6) -> {[1 4 8 9 1 6]}", "(appendt {[6 7] {[4] {[] {[2 0 2 2]} {[7 6 7]}}}} 6) -> {[6 7 6] {[4 6] {[6] {[2 0 2 2 6]} {[7 6 7 6]}}}}", "(appendt {} 7) -> {}", "(appendt {[0 9 7] {[3 0 4 9 7] {[3 6]}} {[6 3 2 1] {[8 1 7 3]}}} 1) -> {[0 9 7 1] {[3 0 4 9 7 1] {[3 6 1]}} {[6 3 2 1 1] {[8 1 7 3 1]}}}", "(appendt {[] {[] {[6 2 4]} {[7 6 4 9]}}} 8) -> {[8] {[8] {[6 2 4 8]} {[7 6 4 9 8]}}}", "(appendt {} 9) -> {}", "(appendt {[2 9 5 0]} 9) -> {[2 9 5 0 9]}", "(appendt {} 8) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.647731, "examples": ["(appendt {} 8) -> {}", "(appendt {} 2) -> {}", "(appendt {} 1) -> {}", "(appendt {} 8) -> {}", "(appendt {[4 4]} 7) -> {[4 4 7]}", "(appendt {[] {[0 3] {[4 9 9 7 7]} {[9 9 9 6 6]}}} 5) -> {[5] {[0 3 5] {[4 9 9 7 7 5]} {[9 9 9 6 6 5]}}}", "(appendt {[7 3 4 0] {[2 5 7]}} 0) -> {[7 3 4 0 0] {[2 5 7 0]}}", "(appendt {[8 4]} 1) -> {[8 4 1]}", "(appendt {[7 2 7 6] {[1 0 3] {[9]} {[4 2 0]}} {[]}} 3) -> {[7 2 7 6 3] {[1 0 3 3] {[9 3]} {[4 2 0 3]}} {[3]}}", "(appendt {} 9) -> {}", "(appendt {} 6) -> {}", "(appendt {[4 1 9 2] {[0 6 1]}} 8) -> {[4 1 9 2 8] {[0 6 1 8]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.66388, "examples": ["(appendt {} 1) -> {}", "(appendt {[5 6 5 8 5]} 6) -> {[5 6 5 8 5 6]}", "(appendt {} 6) -> {}", "(appendt {[5] {[3 2 0 1 9]} {[6 3]}} 2) -> {[5 2] {[3 2 0 1 9 2]} {[6 3 2]}}", "(appendt {[5 0 5 7 0] {[2 5 7 7 1] {[2 2]}}} 2) -> {[5 0 5 7 0 2] {[2 5 7 7 1 2] {[2 2 2]}}}", "(appendt {[0 5]} 4) -> {[0 5 4]}", "(appendt {} 0) -> {}", "(appendt {[9] {[9]}} 7) -> {[9 7] {[9 7]}}", "(appendt {[3 4 9 3] {[3 7 3 7 8] {[1 0 2 4]} {[] {[4 0 8 2 8]}}} {[2 4 2 1] {[0 8 0]} {[3 0 8]}}} 2) -> {[3 4 9 3 2] {[3 7 3 7 8 2] {[1 0 2 4 2]} {[2] {[4 0 8 2 8 2]}}} {[2 4 2 1 2] {[0 8 0 2]} {[3 0 8 2]}}}", "(appendt {[6] {[9] {[]} {[7 9]}} {[4 2 4]}} 7) -> {[6 7] {[9 7] {[7]} {[7 9 7]}} {[4 2 4 7]}}", "(appendt {[8 3 5 8]} 0) -> {[8 3 5 8 0]}", "(appendt {[0] {[]}} 9) -> {[0 9] {[9]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.674991, "examples": ["(appendt {} 5) -> {}", "(appendt {} 7) -> {}", "(appendt {[9] {[8 3 6 7 6] {[9 8]}} {[0 8] {[9]} {[9 1]}}} 3) -> {[9 3] {[8 3 6 7 6 3] {[9 8 3]}} {[0 8 3] {[9 3]} {[9 1 3]}}}", "(appendt {} 7) -> {}", "(appendt {} 7) -> {}", "(appendt {[]} 6) -> {[6]}", "(appendt {[8 8 4 0] {[4 2] {[7] {[8 6 1 3]} {[1 0 5 5]}}}} 3) -> {[8 8 4 0 3] {[4 2 3] {[7 3] {[8 6 1 3 3]} {[1 0 5 5 3]}}}}", "(appendt {[1 8] {[] {[] {[7]} {[6 6 3 8 0]}} {[5 6]}}} 9) -> {[1 8 9] {[9] {[9] {[7 9]} {[6 6 3 8 0 9]}} {[5 6 9]}}}", "(appendt {[7] {[]} {[8]}} 2) -> {[7 2] {[2]} {[8 2]}}", "(appendt {} 8) -> {}", "(appendt {[4] {[0 4 5 3 4] {[4 4 0]} {[]}} {[4 2 1 3 7] {[2 4 5 0 1]} {[9 7]}}} 8) -> {[4 8] {[0 4 5 3 4 8] {[4 4 0 8]} {[8]}} {[4 2 1 3 7 8] {[2 4 5 0 1 8]} {[9 7 8]}}}", "(appendt {[4 1 1 8 3]} 2) -> {[4 1 1 8 3 2]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.35501, "examples": ["(appendt {} 4) -> {}", "(appendt {[2 0 9]} 8) -> {[2 0 9 8]}", "(appendt {} 6) -> {}", "(appendt {[]} 3) -> {[3]}", "(appendt {[0 7]} 5) -> {[0 7 5]}", "(appendt {[6 6 8] {[3 5 5 9]}} 2) -> {[6 6 8 2] {[3 5 5 9 2]}}", "(appendt {[7 7] {[6]} {[2 9 5]}} 9) -> {[7 7 9] {[6 9]} {[2 9 5 9]}}", "(appendt {[]} 7) -> {[7]}", "(appendt {} 0) -> {}", "(appendt {} 6) -> {}", "(appendt {} 8) -> {}", "(appendt {} 8) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.72841, "examples": ["(appendt {} 3) -> {}", "(appendt {[6 4 8] {[] {[5]} {[0 4 6 3 9]}} {[8 5] {[5 8 9 8]}}} 9) -> {[6 4 8 9] {[9] {[5 9]} {[0 4 6 3 9 9]}} {[8 5 9] {[5 8 9 8 9]}}}", "(appendt {[] {[7 5 5 8 8]}} 0) -> {[0] {[7 5 5 8 8 0]}}", "(appendt {[7]} 9) -> {[7 9]}", "(appendt {[1] {[4 0] {[0 0 2 9]}}} 2) -> {[1 2] {[4 0 2] {[0 0 2 9 2]}}}", "(appendt {[6 1 2 1 3] {[6 5 7 2]}} 5) -> {[6 1 2 1 3 5] {[6 5 7 2 5]}}", "(appendt {} 1) -> {}", "(appendt {[7 0 1 9 1]} 1) -> {[7 0 1 9 1 1]}", "(appendt {[]} 6) -> {[6]}", "(appendt {[8 4] {[7 9 6 0 4]}} 5) -> {[8 4 5] {[7 9 6 0 4 5]}}", "(appendt {[3]} 3) -> {[3 3]}", "(appendt {[3 4 4 1] {[9 5 8] {[5] {[2 0 1 9]}}}} 4) -> {[3 4 4 1 4] {[9 5 8 4] {[5 4] {[2 0 1 9 4]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 4.077431, "examples": ["(appendt {} 1) -> {}", "(appendt {[] {[3 7 3 2 2]} {[] {[2 8 7 0]}}} 0) -> {[0] {[3 7 3 2 2 0]} {[0] {[2 8 7 0 0]}}}", "(appendt {[9 8 1 9] {[7 9 0 3]}} 0) -> {[9 8 1 9 0] {[7 9 0 3 0]}}", "(appendt {[3 2 7 4] {[8 4 2 0] {[6 2 5 0 7] {[5]}} {[8 1] {[0]} {[]}}}} 7) -> {[3 2 7 4 7] {[8 4 2 0 7] {[6 2 5 0 7 7] {[5 7]}} {[8 1 7] {[0 7]} {[7]}}}}", "(appendt {} 2) -> {}", "(appendt {[7 3 2 1] {[7 5]}} 7) -> {[7 3 2 1 7] {[7 5 7]}}", "(appendt {[6] {[8 1 0]}} 1) -> {[6 1] {[8 1 0 1]}}", "(appendt {} 4) -> {}", "(appendt {} 6) -> {}", "(appendt {[7 7 9 0] {[3 3 6]} {[3 2 3 0]}} 3) -> {[7 7 9 0 3] {[3 3 6 3]} {[3 2 3 0 3]}}", "(appendt {[0 4 8 4] {[6 7 8] {[8 3 4 6]} {[0 1]}} {[4 0 7 5 0] {[0]} {[9 6 8]}}} 1) -> {[0 4 8 4 1] {[6 7 8 1] {[8 3 4 6 1]} {[0 1 1]}} {[4 0 7 5 0 1] {[0 1]} {[9 6 8 1]}}}", "(appendt {} 9) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 4.772357, "examples": ["(appendt {} 8) -> {}", "(appendt {[0 0 7 2 7] {[6 6 1 8] {[9 5]} {[5 9 4]}} {[0 3] {[2 3 7 3]}}} 6) -> {[0 0 7 2 7 6] {[6 6 1 8 6] {[9 5 6]} {[5 9 4 6]}} {[0 3 6] {[2 3 7 3 6]}}}", "(appendt {} 6) -> {}", "(appendt {[0 4 6 5 5]} 5) -> {[0 4 6 5 5 5]}", "(appendt {[4 2 2 1 0] {[]} {[4 5 7] {[4 3 9] {[]}}}} 8) -> {[4 2 2 1 0 8] {[8]} {[4 5 7 8] {[4 3 9 8] {[8]}}}}", "(appendt {} 4) -> {}", "(appendt {[3 7 8] {[]} {[]}} 5) -> {[3 7 8 5] {[5]} {[5]}}", "(appendt {} 3) -> {}", "(appendt {[2 5 8 4 1]} 2) -> {[2 5 8 4 1 2]}", "(appendt {[0 6 4 7] {[8 8 3 1]}} 8) -> {[0 6 4 7 8] {[8 8 3 1 8]}}", "(appendt {[0 1 0 4] {[9 3 5 8 4]}} 9) -> {[0 1 0 4 9] {[9 3 5 8 4 9]}}", "(appendt {[2 5] {[9 9 4]} {[]}} 0) -> {[2 5 0] {[9 9 4 0]} {[0]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.496079, "examples": ["(appendt {} 0) -> {}", "(appendt {[4 6]} 7) -> {[4 6 7]}", "(appendt {[]} 3) -> {[3]}", "(appendt {} 9) -> {}", "(appendt {[9]} 4) -> {[9 4]}", "(appendt {[0 0 8] {[6]} {[] {[]}}} 5) -> {[0 0 8 5] {[6 5]} {[5] {[5]}}}", "(appendt {[1 3]} 3) -> {[1 3 3]}", "(appendt {[1 5 6 2 8]} 5) -> {[1 5 6 2 8 5]}", "(appendt {[3]} 9) -> {[3 9]}", "(appendt {[8 1]} 3) -> {[8 1 3]}", "(appendt {[]} 0) -> {[0]}", "(appendt {[] {[6 7 8 8 5] {[]} {[]}}} 1) -> {[1] {[6 7 8 8 5 1] {[1]} {[1]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.55773, "examples": ["(appendt {} 4) -> {}", "(appendt {[3] {[5 4 6]}} 9) -> {[3 9] {[5 4 6 9]}}", "(appendt {[4 5]} 4) -> {[4 5 4]}", "(appendt {[8 9 5 1 3] {[4 7]}} 2) -> {[8 9 5 1 3 2] {[4 7 2]}}", "(appendt {[] {[5 6 2 0]}} 8) -> {[8] {[5 6 2 0 8]}}", "(appendt {[8 9 9 1]} 8) -> {[8 9 9 1 8]}", "(appendt {} 8) -> {}", "(appendt {[0 0 0] {[4 1]}} 1) -> {[0 0 0 1] {[4 1 1]}}", "(appendt {[7 3 1 4] {[3 3 0]} {[]}} 0) -> {[7 3 1 4 0] {[3 3 0 0]} {[0]}}", "(appendt {[] {[5 5 0]}} 7) -> {[7] {[5 5 0 7]}}", "(appendt {[9 0] {[7 6 9] {[2]}} {[6 1] {[2 4]}}} 2) -> {[9 0 2] {[7 6 9 2] {[2 2]}} {[6 1 2] {[2 4 2]}}}", "(appendt {[7 3 2 0] {[]}} 6) -> {[7 3 2 0 6] {[6]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.975861, "examples": ["(appendt {} 4) -> {}", "(appendt {[3 4]} 5) -> {[3 4 5]}", "(appendt {[0 7]} 9) -> {[0 7 9]}", "(appendt {[] {[4 4 4 3]}} 8) -> {[8] {[4 4 4 3 8]}}", "(appendt {[3 0 1]} 7) -> {[3 0 1 7]}", "(appendt {[9] {[8 4 8 5 4]}} 0) -> {[9 0] {[8 4 8 5 4 0]}}", "(appendt {[8 4 8 7 6] {[8 8 4 9]} {[7]}} 5) -> {[8 4 8 7 6 5] {[8 8 4 9 5]} {[7 5]}}", "(appendt {} 2) -> {}", "(appendt {[4 0 9 2] {[4 0 7] {[5 6 6 8 9]}} {[3]}} 5) -> {[4 0 9 2 5] {[4 0 7 5] {[5 6 6 8 9 5]}} {[3 5]}}", "(appendt {[] {[2 3 8] {[9 2 2 8 2]} {[9]}} {[7] {[]}}} 6) -> {[6] {[2 3 8 6] {[9 2 2 8 2 6]} {[9 6]}} {[7 6] {[6]}}}", "(appendt {[4]} 1) -> {[4 1]}", "(appendt {[2 0 3 4]} 0) -> {[2 0 3 4 0]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.45155, "examples": ["(appendt {} 2) -> {}", "(appendt {[8] {[8 0 8 2 8] {[9]} {[7]}}} 0) -> {[8 0] {[8 0 8 2 8 0] {[9 0]} {[7 0]}}}", "(appendt {[] {[9 9 7 7 9]}} 6) -> {[6] {[9 9 7 7 9 6]}}", "(appendt {[4 6 7]} 0) -> {[4 6 7 0]}", "(appendt {[2] {[4 3] {[4 3 8]} {[7 9 2]}}} 0) -> {[2 0] {[4 3 0] {[4 3 8 0]} {[7 9 2 0]}}}", "(appendt {} 0) -> {}", "(appendt {[7 4 8 6 9] {[2 2 9 3]}} 7) -> {[7 4 8 6 9 7] {[2 2 9 3 7]}}", "(appendt {[3 7 3 8] {[2 0 5 4] {[5 1 5]}}} 5) -> {[3 7 3 8 5] {[2 0 5 4 5] {[5 1 5 5]}}}", "(appendt {[8] {[1 2 0 1]} {[]}} 4) -> {[8 4] {[1 2 0 1 4]} {[4]}}", "(appendt {[0 4 5 7 2] {[5 4 6 3 9] {[6 7 2 5 7]}} {[7 4 0]}} 9) -> {[0 4 5 7 2 9] {[5 4 6 3 9 9] {[6 7 2 5 7 9]}} {[7 4 0 9]}}", "(appendt {[] {[8]}} 9) -> {[9] {[8 9]}}", "(appendt {[8] {[8 3] {[]} {[1 2 1 9 7] {[8 1 1]}}} {[1 7 2 6 3] {[9 1 8 1 4] {[3 5 3]} {[4 7 3]}} {[9 4] {[8 2 5 7 7]}}}} 3) -> {[8 3] {[8 3 3] {[3]} {[1 2 1 9 7 3] {[8 1 1 3]}}} {[1 7 2 6 3 3] {[9 1 8 1 4 3] {[3 5 3 3]} {[4 7 3 3]}} {[9 4 3] {[8 2 5 7 7 3]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.978063, "examples": ["(appendt {} 8) -> {}", "(appendt {[4 9 8 7] {[] {[7 7 3 4 5]}}} 6) -> {[4 9 8 7 6] {[6] {[7 7 3 4 5 6]}}}", "(appendt {[9 9 8 1] {[7] {[6 6] {[3 5 7 3]} {[5]}} {[0 9 7 2 2] {[5]} {[5 1 3 8]}}} {[5 9 5 2 4]}} 5) -> {[9 9 8 1 5] {[7 5] {[6 6 5] {[3 5 7 3 5]} {[5 5]}} {[0 9 7 2 2 5] {[5 5]} {[5 1 3 8 5]}}} {[5 9 5 2 4 5]}}", "(appendt {[1] {[7]}} 0) -> {[1 0] {[7 0]}}", "(appendt {[2 3 8] {[0 5 3 8] {[7 9 9 0 3] {[]} {[4 5 0 3]}}}} 5) -> {[2 3 8 5] {[0 5 3 8 5] {[7 9 9 0 3 5] {[5]} {[4 5 0 3 5]}}}}", "(appendt {} 8) -> {}", "(appendt {[0 3 6 3 4] {[3 1 7 0]} {[]}} 3) -> {[0 3 6 3 4 3] {[3 1 7 0 3]} {[3]}}", "(appendt {} 8) -> {}", "(appendt {[9 3 6] {[] {[]}} {[9 8 9] {[4 4 7 6] {[2 2 2 7 5]} {[6 5]}}}} 3) -> {[9 3 6 3] {[3] {[3]}} {[9 8 9 3] {[4 4 7 6 3] {[2 2 2 7 5 3]} {[6 5 3]}}}}", "(appendt {[8 5] {[0] {[]} {[9 3 1 5]}}} 4) -> {[8 5 4] {[0 4] {[4]} {[9 3 1 5 4]}}}", "(appendt {} 1) -> {}", "(appendt {} 2) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.534768, "examples": ["(appendt {} 2) -> {}", "(appendt {} 5) -> {}", "(appendt {[7 0 4] {[2 2 2 6 4] {[4]} {[8 6 4 1]}}} 4) -> {[7 0 4 4] {[2 2 2 6 4 4] {[4 4]} {[8 6 4 1 4]}}}", "(appendt {} 0) -> {}", "(appendt {[9 3 6] {[] {[0 3 1 2 0]}}} 7) -> {[9 3 6 7] {[7] {[0 3 1 2 0 7]}}}", "(appendt {} 1) -> {}", "(appendt {[7 2 8 9 0]} 8) -> {[7 2 8 9 0 8]}", "(appendt {[2] {[7 4] {[]} {[0 9 0]}} {[9 9 5] {[2 1 6]}}} 3) -> {[2 3] {[7 4 3] {[3]} {[0 9 0 3]}} {[9 9 5 3] {[2 1 6 3]}}}", "(appendt {} 2) -> {}", "(appendt {[9 4 1]} 4) -> {[9 4 1 4]}", "(appendt {[6 9 6]} 4) -> {[6 9 6 4]}", "(appendt {[] {[]}} 4) -> {[4] {[4]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.61616, "examples": ["(appendt {} 5) -> {}", "(appendt {} 7) -> {}", "(appendt {} 3) -> {}", "(appendt {} 5) -> {}", "(appendt {[1] {[1 0 4 1 7]} {[1 0 9] {[4 9 4 8]}}} 0) -> {[1 0] {[1 0 4 1 7 0]} {[1 0 9 0] {[4 9 4 8 0]}}}", "(appendt {[0 8 7 2] {[0 8] {[0 1]}} {[2 5 8] {[5 8 3 8]}}} 6) -> {[0 8 7 2 6] {[0 8 6] {[0 1 6]}} {[2 5 8 6] {[5 8 3 8 6]}}}", "(appendt {} 7) -> {}", "(appendt {[8 3] {[5 7 1]}} 9) -> {[8 3 9] {[5 7 1 9]}}", "(appendt {} 8) -> {}", "(appendt {[9 6 0 2 0]} 3) -> {[9 6 0 2 0 3]}", "(appendt {[7 9 5]} 9) -> {[7 9 5 9]}", "(appendt {[6] {[8 2 0] {[1 3 7 2]}} {[3 7 7] {[7 9 1 6]}}} 7) -> {[6 7] {[8 2 0 7] {[1 3 7 2 7]}} {[3 7 7 7] {[7 9 1 6 7]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.835756, "examples": ["(appendt {} 6) -> {}", "(appendt {[]} 9) -> {[9]}", "(appendt {[9]} 0) -> {[9 0]}", "(appendt {} 7) -> {}", "(appendt {} 3) -> {}", "(appendt {[]} 7) -> {[7]}", "(appendt {} 4) -> {}", "(appendt {[] {[0 4 6 4]} {[8] {[6 1 4 5]} {[1 7 6]}}} 2) -> {[2] {[0 4 6 4 2]} {[8 2] {[6 1 4 5 2]} {[1 7 6 2]}}}", "(appendt {[0 7]} 2) -> {[0 7 2]}", "(appendt {[3 6] {[7 1 9 6]} {[4 1 8 1 0] {[8 9 0 4 8]} {[] {[8 3 2 9 0]} {[5 7]}}}} 8) -> {[3 6 8] {[7 1 9 6 8]} {[4 1 8 1 0 8] {[8 9 0 4 8 8]} {[8] {[8 3 2 9 0 8]} {[5 7 8]}}}}", "(appendt {[3]} 5) -> {[3 5]}", "(appendt {[0 5 8 6 4] {[3 0 8]} {[4 1 0]}} 4) -> {[0 5 8 6 4 4] {[3 0 8 4]} {[4 1 0 4]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.291167, "examples": ["(appendt {} 8) -> {}", "(appendt {[0 3] {[2] {[8]}}} 7) -> {[0 3 7] {[2 7] {[8 7]}}}", "(appendt {[6 5 5 9 7] {[6 4] {[4 2 3 4 3]} {[3 7] {[3 6 9 1]}}}} 4) -> {[6 5 5 9 7 4] {[6 4 4] {[4 2 3 4 3 4]} {[3 7 4] {[3 6 9 1 4]}}}}", "(appendt {} 8) -> {}", "(appendt {[0]} 5) -> {[0 5]}", "(appendt {[4 7 5 8] {[] {[3]} {[3 0 8 4 0]}}} 6) -> {[4 7 5 8 6] {[6] {[3 6]} {[3 0 8 4 0 6]}}}", "(appendt {} 8) -> {}", "(appendt {} 7) -> {}", "(appendt {} 9) -> {}", "(appendt {[7 4 4] {[]} {[0]}} 7) -> {[7 4 4 7] {[7]} {[0 7]}}", "(appendt {[1 1 0] {[4] {[9 6 8 8]}} {[]}} 7) -> {[1 1 0 7] {[4 7] {[9 6 8 8 7]}} {[7]}}", "(appendt {[4 5 9 7 4]} 7) -> {[4 5 9 7 4 7]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.502874, "examples": ["(appendt {} 8) -> {}", "(appendt {[8 6 1 5] {[8 2 3 1]}} 3) -> {[8 6 1 5 3] {[8 2 3 1 3]}}", "(appendt {[7 7]} 7) -> {[7 7 7]}", "(appendt {} 1) -> {}", "(appendt {[] {[0] {[3 2]}} {[] {[1 2 1 0 7]} {[6 3 2 7]}}} 9) -> {[9] {[0 9] {[3 2 9]}} {[9] {[1 2 1 0 7 9]} {[6 3 2 7 9]}}}", "(appendt {[5 2 2]} 5) -> {[5 2 2 5]}", "(appendt {} 5) -> {}", "(appendt {} 2) -> {}", "(appendt {[8 4 3 2] {[1 4]}} 9) -> {[8 4 3 2 9] {[1 4 9]}}", "(appendt {} 7) -> {}", "(appendt {[] {[3]}} 3) -> {[3] {[3 3]}}", "(appendt {} 7) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.25003, "examples": ["(appendt {} 5) -> {}", "(appendt {[2]} 4) -> {[2 4]}", "(appendt {[2 4 3 3 7] {[0]}} 2) -> {[2 4 3 3 7 2] {[0 2]}}", "(appendt {[3] {[] {[4 0 6]}} {[4 8 5]}} 3) -> {[3 3] {[3] {[4 0 6 3]}} {[4 8 5 3]}}", "(appendt {} 6) -> {}", "(appendt {[8 8] {[]} {[8 7 1]}} 0) -> {[8 8 0] {[0]} {[8 7 1 0]}}", "(appendt {} 2) -> {}", "(appendt {[2] {[9 5 6 4 3] {[2 6 9] {[5 8 0 3]}}}} 4) -> {[2 4] {[9 5 6 4 3 4] {[2 6 9 4] {[5 8 0 3 4]}}}}", "(appendt {[3 9 8 6] {[] {[4 3]} {[8]}}} 7) -> {[3 9 8 6 7] {[7] {[4 3 7]} {[8 7]}}}", "(appendt {} 7) -> {}", "(appendt {[3 2 7]} 4) -> {[3 2 7 4]}", "(appendt {[] {[8 2]}} 8) -> {[8] {[8 2 8]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.203004, "examples": ["(appendt {} 3) -> {}", "(appendt {[]} 2) -> {[2]}", "(appendt {[4 9 3 5 0] {[0 4] {[]} {[]}} {[5 7 7 6]}} 3) -> {[4 9 3 5 0 3] {[0 4 3] {[3]} {[3]}} {[5 7 7 6 3]}}", "(appendt {[9 3] {[1 7 4 4 2]} {[1 9] {[5 1 0 7]} {[5 9 9 6] {[3 4 9]}}}} 9) -> {[9 3 9] {[1 7 4 4 2 9]} {[1 9 9] {[5 1 0 7 9]} {[5 9 9 6 9] {[3 4 9 9]}}}}", "(appendt {[7 2 1 7] {[2 0 9] {[1 0]}} {[6 9 1 7] {[0 8 4 6 7]}}} 8) -> {[7 2 1 7 8] {[2 0 9 8] {[1 0 8]}} {[6 9 1 7 8] {[0 8 4 6 7 8]}}}", "(appendt {[] {[8 8]} {[1 1 6 2] {[] {[9 4 9 4 9]}} {[0 6 1] {[6 3 5]} {[3 8 2]}}}} 1) -> {[1] {[8 8 1]} {[1 1 6 2 1] {[1] {[9 4 9 4 9 1]}} {[0 6 1 1] {[6 3 5 1]} {[3 8 2 1]}}}}", "(appendt {[8 6 9 0]} 5) -> {[8 6 9 0 5]}", "(appendt {} 5) -> {}", "(appendt {[] {[8 6]}} 9) -> {[9] {[8 6 9]}}", "(appendt {} 5) -> {}", "(appendt {} 6) -> {}", "(appendt {[0 8 5 6]} 7) -> {[0 8 5 6 7]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.809013, "examples": ["(appendt {} 6) -> {}", "(appendt {[] {[6 8 9 4 4] {[3 9 3 4] {[]}}}} 0) -> {[0] {[6 8 9 4 4 0] {[3 9 3 4 0] {[0]}}}}", "(appendt {[7 8 7 4 0] {[0]} {[4 2]}} 9) -> {[7 8 7 4 0 9] {[0 9]} {[4 2 9]}}", "(appendt {[7] {[6] {[]}}} 4) -> {[7 4] {[6 4] {[4]}}}", "(appendt {} 1) -> {}", "(appendt {[3 1]} 7) -> {[3 1 7]}", "(appendt {[] {[]}} 2) -> {[2] {[2]}}", "(appendt {[3] {[6 3 3 5]} {[9]}} 9) -> {[3 9] {[6 3 3 5 9]} {[9 9]}}", "(appendt {[7 5 0 0]} 9) -> {[7 5 0 0 9]}", "(appendt {} 9) -> {}", "(appendt {[6]} 0) -> {[6 0]}", "(appendt {[4 7 9 3] {[9]}} 4) -> {[4 7 9 3 4] {[9 4]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.699732, "examples": ["(appendt {} 8) -> {}", "(appendt {[2 7 2 7 3]} 4) -> {[2 7 2 7 3 4]}", "(appendt {[0 5 9 2] {[9 8]} {[]}} 4) -> {[0 5 9 2 4] {[9 8 4]} {[4]}}", "(appendt {} 1) -> {}", "(appendt {[8 6 2 2 5] {[0]} {[5 1 4 5 1] {[0 3]} {[1 3 8 2 5]}}} 3) -> {[8 6 2 2 5 3] {[0 3]} {[5 1 4 5 1 3] {[0 3 3]} {[1 3 8 2 5 3]}}}", "(appendt {[6 3 6 4 3] {[7 4 5] {[8 8]}} {[5 8 5] {[4 8 1 3]}}} 8) -> {[6 3 6 4 3 8] {[7 4 5 8] {[8 8 8]}} {[5 8 5 8] {[4 8 1 3 8]}}}", "(appendt {[6 3 6 0 0] {[7 4]} {[3 5] {[]} {[]}}} 2) -> {[6 3 6 0 0 2] {[7 4 2]} {[3 5 2] {[2]} {[2]}}}", "(appendt {[7 3 8 0]} 8) -> {[7 3 8 0 8]}", "(appendt {[1 2] {[]} {[7 3 6]}} 3) -> {[1 2 3] {[3]} {[7 3 6 3]}}", "(appendt {[2]} 1) -> {[2 1]}", "(appendt {[7 6] {[] {[9 9 5 3 1] {[3]}}}} 5) -> {[7 6 5] {[5] {[9 9 5 3 1 5] {[3 5]}}}}", "(appendt {[1 4] {[7 3]} {[6]}} 5) -> {[1 4 5] {[7 3 5]} {[6 5]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.779923, "examples": ["(appendt {} 5) -> {}", "(appendt {} 4) -> {}", "(appendt {[3 1]} 3) -> {[3 1 3]}", "(appendt {[]} 3) -> {[3]}", "(appendt {[1 5 7]} 9) -> {[1 5 7 9]}", "(appendt {[4] {[1 2 3 5]} {[2 4 6 9] {[1 5 0 3] {[8]} {[]}} {[3 4]}}} 2) -> {[4 2] {[1 2 3 5 2]} {[2 4 6 9 2] {[1 5 0 3 2] {[8 2]} {[2]}} {[3 4 2]}}}", "(appendt {[4 4]} 0) -> {[4 4 0]}", "(appendt {[6 4] {[]}} 2) -> {[6 4 2] {[2]}}", "(appendt {[2 6 5] {[2 9 3]} {[3]}} 6) -> {[2 6 5 6] {[2 9 3 6]} {[3 6]}}", "(appendt {[8 2] {[0 1 1 2 9]}} 8) -> {[8 2 8] {[0 1 1 2 9 8]}}", "(appendt {[9 1 6] {[2 8 3]} {[4]}} 6) -> {[9 1 6 6] {[2 8 3 6]} {[4 6]}}", "(appendt {} 6) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.67326, "examples": ["(appendt {} 9) -> {}", "(appendt {[7 1] {[2]}} 2) -> {[7 1 2] {[2 2]}}", "(appendt {[1 5] {[1 0 6 9 2]} {[4 1 6] {[6 7 1 9 4] {[0 5 0 2 2]} {[1 8 4 9]}} {[3] {[5 3 8 5 5]} {[9]}}}} 0) -> {[1 5 0] {[1 0 6 9 2 0]} {[4 1 6 0] {[6 7 1 9 4 0] {[0 5 0 2 2 0]} {[1 8 4 9 0]}} {[3 0] {[5 3 8 5 5 0]} {[9 0]}}}}", "(appendt {[]} 6) -> {[6]}", "(appendt {[3]} 8) -> {[3 8]}", "(appendt {[] {[4 1 3]}} 7) -> {[7] {[4 1 3 7]}}", "(appendt {} 7) -> {}", "(appendt {[5 0 9 9 8]} 0) -> {[5 0 9 9 8 0]}", "(appendt {} 4) -> {}", "(appendt {[6 8 0 9 3] {[7 9] {[1]}}} 5) -> {[6 8 0 9 3 5] {[7 9 5] {[1 5]}}}", "(appendt {} 4) -> {}", "(appendt {[0 8 7 8] {[1 5 7 7 2] {[6 9] {[9 0 5 3]}}} {[7] {[1 9]}}} 9) -> {[0 8 7 8 9] {[1 5 7 7 2 9] {[6 9 9] {[9 0 5 3 9]}}} {[7 9] {[1 9 9]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.620282, "examples": ["(appendt {} 2) -> {}", "(appendt {[] {[3 6 6]} {[4 6 8 1]}} 4) -> {[4] {[3 6 6 4]} {[4 6 8 1 4]}}", "(appendt {[5] {[1 2 2 5 7] {[1]}}} 3) -> {[5 3] {[1 2 2 5 7 3] {[1 3]}}}", "(appendt {[0 0 0] {[2 6 2]}} 8) -> {[0 0 0 8] {[2 6 2 8]}}", "(appendt {[9 4 0 8 4] {[]}} 7) -> {[9 4 0 8 4 7] {[7]}}", "(appendt {[4 6 1]} 9) -> {[4 6 1 9]}", "(appendt {[4] {[7 0] {[] {[1 5 1 2 8]} {[4]}}}} 6) -> {[4 6] {[7 0 6] {[6] {[1 5 1 2 8 6]} {[4 6]}}}}", "(appendt {[9 0] {[] {[0 3 0 4 5]} {[]}} {[0 4 8] {[0 2]}}} 2) -> {[9 0 2] {[2] {[0 3 0 4 5 2]} {[2]}} {[0 4 8 2] {[0 2 2]}}}", "(appendt {[]} 7) -> {[7]}", "(appendt {[3 0] {[9] {[5 4] {[4]} {[3 7 6 1 0]}} {[7]}} {[3 6 6 3 3] {[4 2]} {[8 6 2 7]}}} 0) -> {[3 0 0] {[9 0] {[5 4 0] {[4 0]} {[3 7 6 1 0 0]}} {[7 0]}} {[3 6 6 3 3 0] {[4 2 0]} {[8 6 2 7 0]}}}", "(appendt {[2 1 0 1 1]} 9) -> {[2 1 0 1 1 9]}", "(appendt {[] {[9 6 7 5] {[9 8 2 5 9]} {[2 8]}} {[] {[]}}} 6) -> {[6] {[9 6 7 5 6] {[9 8 2 5 9 6]} {[2 8 6]}} {[6] {[6]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.63695, "examples": ["(appendt {} 7) -> {}", "(appendt {[0 1 8 4] {[5 3 6 4 6]} {[6] {[3 3 3 2 4]}}} 7) -> {[0 1 8 4 7] {[5 3 6 4 6 7]} {[6 7] {[3 3 3 2 4 7]}}}", "(appendt {[9 8 9 5] {[7 5 2 8 6]}} 1) -> {[9 8 9 5 1] {[7 5 2 8 6 1]}}", "(appendt {} 4) -> {}", "(appendt {[9 6] {[4 1 7 8 2]}} 0) -> {[9 6 0] {[4 1 7 8 2 0]}}", "(appendt {[1 3 9 8] {[] {[1]} {[1 6 5 9]}} {[5 1 1 0] {[4]}}} 3) -> {[1 3 9 8 3] {[3] {[1 3]} {[1 6 5 9 3]}} {[5 1 1 0 3] {[4 3]}}}", "(appendt {} 3) -> {}", "(appendt {[4] {[8 5]} {[6 6 2 3 2] {[6]}}} 3) -> {[4 3] {[8 5 3]} {[6 6 2 3 2 3] {[6 3]}}}", "(appendt {[5 2 1] {[8 0 1 8]} {[5]}} 7) -> {[5 2 1 7] {[8 0 1 8 7]} {[5 7]}}", "(appendt {[6 2 6 6]} 4) -> {[6 2 6 6 4]}", "(appendt {[3 1 9] {[7 7 8 6 9]}} 3) -> {[3 1 9 3] {[7 7 8 6 9 3]}}", "(appendt {[]} 0) -> {[0]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.35017, "examples": ["(appendt {} 6) -> {}", "(appendt {[9 6]} 6) -> {[9 6 6]}", "(appendt {[5] {[3 5] {[9 1 9 6] {[8]}} {[8 6 2] {[8 9]}}} {[2 3 5 3 8] {[] {[6 7 5]} {[6 5 7]}} {[1 6] {[]}}}} 8) -> {[5 8] {[3 5 8] {[9 1 9 6 8] {[8 8]}} {[8 6 2 8] {[8 9 8]}}} {[2 3 5 3 8 8] {[8] {[6 7 5 8]} {[6 5 7 8]}} {[1 6 8] {[8]}}}}", "(appendt {[] {[5 7] {[6 5 7 3]}}} 6) -> {[6] {[5 7 6] {[6 5 7 3 6]}}}", "(appendt {[] {[]}} 4) -> {[4] {[4]}}", "(appendt {[9 9 8] {[1 4 2 7 0] {[6 4 2 8]}} {[5]}} 3) -> {[9 9 8 3] {[1 4 2 7 0 3] {[6 4 2 8 3]}} {[5 3]}}", "(appendt {[6 4]} 7) -> {[6 4 7]}", "(appendt {} 9) -> {}", "(appendt {[4] {[]} {[7 6 0]}} 8) -> {[4 8] {[8]} {[7 6 0 8]}}", "(appendt {[] {[] {[4 3 6 0 7] {[]}} {[0 2] {[]} {[]}}} {[]}} 5) -> {[5] {[5] {[4 3 6 0 7 5] {[5]}} {[0 2 5] {[5]} {[5]}}} {[5]}}", "(appendt {[8 4 6 4 7] {[0 6 0 3] {[0 9]} {[0 0 1 5 8]}} {[2 6 9] {[7 6]}}} 2) -> {[8 4 6 4 7 2] {[0 6 0 3 2] {[0 9 2]} {[0 0 1 5 8 2]}} {[2 6 9 2] {[7 6 2]}}}", "(appendt {} 3) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.512348, "examples": ["(appendt {} 0) -> {}", "(appendt {} 9) -> {}", "(appendt {[] {[7 7 7 9 2] {[6 6 0] {[1 3]}}} {[0] {[9]} {[]}}} 4) -> {[4] {[7 7 7 9 2 4] {[6 6 0 4] {[1 3 4]}}} {[0 4] {[9 4]} {[4]}}}", "(appendt {[0]} 5) -> {[0 5]}", "(appendt {[8 7 1] {[5 9 2] {[5 3 2 1]} {[3 8 8 6 7]}} {[4 6 0 7] {[3 0 1 2 8]}}} 1) -> {[8 7 1 1] {[5 9 2 1] {[5 3 2 1 1]} {[3 8 8 6 7 1]}} {[4 6 0 7 1] {[3 0 1 2 8 1]}}}", "(appendt {} 5) -> {}", "(appendt {[9] {[1 1 5 6 5]} {[8 2 1 8 0] {[4 1 7 2 4]} {[6 5 5] {[0 0 0]} {[0 8 4]}}}} 2) -> {[9 2] {[1 1 5 6 5 2]} {[8 2 1 8 0 2] {[4 1 7 2 4 2]} {[6 5 5 2] {[0 0 0 2]} {[0 8 4 2]}}}}", "(appendt {[7 0 6] {[0 4] {[4 3]} {[]}}} 8) -> {[7 0 6 8] {[0 4 8] {[4 3 8]} {[8]}}}", "(appendt {} 4) -> {}", "(appendt {[3 6]} 9) -> {[3 6 9]}", "(appendt {} 3) -> {}", "(appendt {[]} 9) -> {[9]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.99345, "examples": ["(appendt {} 6) -> {}", "(appendt {[7] {[8 2 2]}} 5) -> {[7 5] {[8 2 2 5]}}", "(appendt {[] {[3 4 8 8] {[2 2]} {[]}}} 4) -> {[4] {[3 4 8 8 4] {[2 2 4]} {[4]}}}", "(appendt {[3] {[0 6]} {[6 8 9]}} 3) -> {[3 3] {[0 6 3]} {[6 8 9 3]}}", "(appendt {[5 6 6] {[0] {[]} {[8 6 7 0 9]}}} 7) -> {[5 6 6 7] {[0 7] {[7]} {[8 6 7 0 9 7]}}}", "(appendt {[2 0 1 8] {[8 7]} {[5 4 4 0 2] {[6 7 5 0]}}} 6) -> {[2 0 1 8 6] {[8 7 6]} {[5 4 4 0 2 6] {[6 7 5 0 6]}}}", "(appendt {} 3) -> {}", "(appendt {[7 9 0 6 4]} 9) -> {[7 9 0 6 4 9]}", "(appendt {[0 7] {[4 5 0]}} 6) -> {[0 7 6] {[4 5 0 6]}}", "(appendt {} 7) -> {}", "(appendt {} 9) -> {}", "(appendt {} 5) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.3523, "examples": ["(appendt {} 8) -> {}", "(appendt {[2] {[7 9 2 7]} {[4 6 7 7] {[1 0]}}} 4) -> {[2 4] {[7 9 2 7 4]} {[4 6 7 7 4] {[1 0 4]}}}", "(appendt {[2 1] {[7] {[] {[2 8 3 4]}} {[] {[2 4 9]} {[8 9 7]}}} {[6 8]}} 2) -> {[2 1 2] {[7 2] {[2] {[2 8 3 4 2]}} {[2] {[2 4 9 2]} {[8 9 7 2]}}} {[6 8 2]}}", "(appendt {[9 5 5] {[5] {[9] {[8 4 3 2 8]} {[3 0 9 6 8]}}}} 8) -> {[9 5 5 8] {[5 8] {[9 8] {[8 4 3 2 8 8]} {[3 0 9 6 8 8]}}}}", "(appendt {[7 0] {[3 6 1 9] {[5 1]}} {[4 7 5] {[9 5]}}} 4) -> {[7 0 4] {[3 6 1 9 4] {[5 1 4]}} {[4 7 5 4] {[9 5 4]}}}", "(appendt {[5 7 0 5 1] {[9]} {[0 9] {[3]} {[1 6]}}} 9) -> {[5 7 0 5 1 9] {[9 9]} {[0 9 9] {[3 9]} {[1 6 9]}}}", "(appendt {} 5) -> {}", "(appendt {[]} 9) -> {[9]}", "(appendt {[6] {[7 4 5 6]}} 8) -> {[6 8] {[7 4 5 6 8]}}", "(appendt {[9 8 5] {[4 7 9 8 2]}} 0) -> {[9 8 5 0] {[4 7 9 8 2 0]}}", "(appendt {[3 5 1]} 3) -> {[3 5 1 3]}", "(appendt {[5] {[9 9 2 7] {[5]} {[4 4 8 9 5]}} {[4] {[1 8 7 3]} {[6]}}} 4) -> {[5 4] {[9 9 2 7 4] {[5 4]} {[4 4 8 9 5 4]}} {[4 4] {[1 8 7 3 4]} {[6 4]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.497115, "examples": ["(appendt {} 9) -> {}", "(appendt {} 5) -> {}", "(appendt {[3 2 1] {[6 7 8 9 1] {[1 7]}}} 7) -> {[3 2 1 7] {[6 7 8 9 1 7] {[1 7 7]}}}", "(appendt {} 6) -> {}", "(appendt {[9] {[7 2]} {[9 2]}} 9) -> {[9 9] {[7 2 9]} {[9 2 9]}}", "(appendt {[2 3] {[3 5] {[3 3]} {[0 4 9 0 0] {[3]} {[8 4]}}}} 1) -> {[2 3 1] {[3 5 1] {[3 3 1]} {[0 4 9 0 0 1] {[3 1]} {[8 4 1]}}}}", "(appendt {[] {[6 1 2 8 9]} {[5 9 6 0]}} 6) -> {[6] {[6 1 2 8 9 6]} {[5 9 6 0 6]}}", "(appendt {[] {[0] {[6 5]}}} 0) -> {[0] {[0 0] {[6 5 0]}}}", "(appendt {[1 1 2 4 8] {[6 0] {[2 6 5]} {[]}}} 8) -> {[1 1 2 4 8 8] {[6 0 8] {[2 6 5 8]} {[8]}}}", "(appendt {[2 8 5] {[0 1 7]} {[5 7]}} 2) -> {[2 8 5 2] {[0 1 7 2]} {[5 7 2]}}", "(appendt {[9 5 6 6 7] {[6 7 6]}} 3) -> {[9 5 6 6 7 3] {[6 7 6 3]}}", "(appendt {[5 1 5 0] {[] {[2 4 7 3 6]} {[3 1 2 8 0] {[7 5]}}}} 3) -> {[5 1 5 0 3] {[3] {[2 4 7 3 6 3]} {[3 1 2 8 0 3] {[7 5 3]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.395395, "examples": ["(appendt {} 5) -> {}", "(appendt {} 2) -> {}", "(appendt {[7 6 8 7]} 1) -> {[7 6 8 7 1]}", "(appendt {[3 7 2 0] {[0] {[1 3 0 2 2]} {[0] {[0 8 1 2]}}}} 1) -> {[3 7 2 0 1] {[0 1] {[1 3 0 2 2 1]} {[0 1] {[0 8 1 2 1]}}}}", "(appendt {[7 0 9] {[8] {[9]}}} 1) -> {[7 0 9 1] {[8 1] {[9 1]}}}", "(appendt {[7 2 3 0] {[5 9]} {[5 3 5 0]}} 5) -> {[7 2 3 0 5] {[5 9 5]} {[5 3 5 0 5]}}", "(appendt {} 3) -> {}", "(appendt {} 7) -> {}", "(appendt {[3 7 6] {[4 9 6] {[0 9]}} {[0 7] {[6]} {[0 3 6 1]}}} 8) -> {[3 7 6 8] {[4 9 6 8] {[0 9 8]}} {[0 7 8] {[6 8]} {[0 3 6 1 8]}}}", "(appendt {[3 1 7]} 1) -> {[3 1 7 1]}", "(appendt {[3] {[8 0 1]} {[1]}} 8) -> {[3 8] {[8 0 1 8]} {[1 8]}}", "(appendt {} 0) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.723914, "examples": ["(appendt {} 0) -> {}", "(appendt {[]} 9) -> {[9]}", "(appendt {[1 2 4]} 2) -> {[1 2 4 2]}", "(appendt {} 3) -> {}", "(appendt {[]} 7) -> {[7]}", "(appendt {} 0) -> {}", "(appendt {[]} 2) -> {[2]}", "(appendt {[9 0 3 8] {[4 4]}} 6) -> {[9 0 3 8 6] {[4 4 6]}}", "(appendt {} 0) -> {}", "(appendt {[1 4 1 4 5] {[5 4 4]} {[]}} 9) -> {[1 4 1 4 5 9] {[5 4 4 9]} {[9]}}", "(appendt {[]} 1) -> {[1]}", "(appendt {} 4) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.149098, "examples": ["(appendt {} 5) -> {}", "(appendt {[9 2 4 9 1]} 6) -> {[9 2 4 9 1 6]}", "(appendt {[]} 3) -> {[3]}", "(appendt {[8 7 5] {[7 1 1] {[]} {[3 7]}} {[]}} 5) -> {[8 7 5 5] {[7 1 1 5] {[5]} {[3 7 5]}} {[5]}}", "(appendt {[2 7 3 1]} 4) -> {[2 7 3 1 4]}", "(appendt {[8] {[] {[0 0] {[2 2 1 0 9]} {[]}} {[0 3 5]}}} 7) -> {[8 7] {[7] {[0 0 7] {[2 2 1 0 9 7]} {[7]}} {[0 3 5 7]}}}", "(appendt {} 4) -> {}", "(appendt {[] {[0 1 2 7]}} 4) -> {[4] {[0 1 2 7 4]}}", "(appendt {} 6) -> {}", "(appendt {[1 3 1]} 6) -> {[1 3 1 6]}", "(appendt {} 1) -> {}", "(appendt {[5 1 4 5 8] {[] {[] {[9 2 2]}} {[2 4 3] {[7]}}} {[2 3 6] {[9 8 9 2 3] {[8 7 1 5]} {[3 8]}}}} 8) -> {[5 1 4 5 8 8] {[8] {[8] {[9 2 2 8]}} {[2 4 3 8] {[7 8]}}} {[2 3 6 8] {[9 8 9 2 3 8] {[8 7 1 5 8]} {[3 8 8]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.775822, "examples": ["(appendt {} 0) -> {}", "(appendt {[9 9 0 5] {[2 0 3 0 7] {[5 1 4] {[0 5 8 2 9]}} {[6 3 3 5] {[4 5 8 2]}}}} 4) -> {[9 9 0 5 4] {[2 0 3 0 7 4] {[5 1 4 4] {[0 5 8 2 9 4]}} {[6 3 3 5 4] {[4 5 8 2 4]}}}}", "(appendt {[1 1 8 1 0] {[3]} {[8 8 2 2]}} 7) -> {[1 1 8 1 0 7] {[3 7]} {[8 8 2 2 7]}}", "(appendt {[] {[7 5 0 7 7]} {[5 1 8 0]}} 8) -> {[8] {[7 5 0 7 7 8]} {[5 1 8 0 8]}}", "(appendt {} 7) -> {}", "(appendt {[1 4]} 4) -> {[1 4 4]}", "(appendt {[7]} 2) -> {[7 2]}", "(appendt {[3 3 6 3]} 1) -> {[3 3 6 3 1]}", "(appendt {[9 8] {[0 2 4 9]}} 5) -> {[9 8 5] {[0 2 4 9 5]}}", "(appendt {[] {[6 2 5 5] {[4 5]} {[9 8 6 7] {[9 2 4 3 4]} {[6 4 9]}}} {[6 9 8 7] {[7] {[2 1]} {[]}}}} 2) -> {[2] {[6 2 5 5 2] {[4 5 2]} {[9 8 6 7 2] {[9 2 4 3 4 2]} {[6 4 9 2]}}} {[6 9 8 7 2] {[7 2] {[2 1 2]} {[2]}}}}", "(appendt {} 3) -> {}", "(appendt {[8 2 2] {[] {[2 7 0 2]}}} 6) -> {[8 2 2 6] {[6] {[2 7 0 2 6]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.349331, "examples": ["(appendt {} 2) -> {}", "(appendt {[3] {[7 1 1 0] {[8 7]}} {[8 6 2] {[0 0 0 1]} {[2 2]}}} 7) -> {[3 7] {[7 1 1 0 7] {[8 7 7]}} {[8 6 2 7] {[0 0 0 1 7]} {[2 2 7]}}}", "(appendt {} 8) -> {}", "(appendt {[9 6 6]} 9) -> {[9 6 6 9]}", "(appendt {[8] {[7 7 9] {[5 1 8 3 6]}} {[9 5 2 6 8] {[]}}} 4) -> {[8 4] {[7 7 9 4] {[5 1 8 3 6 4]}} {[9 5 2 6 8 4] {[4]}}}", "(appendt {} 5) -> {}", "(appendt {[9 6 3] {[5 9 1 6 6]} {[2 4 3 8 2] {[6 8]}}} 9) -> {[9 6 3 9] {[5 9 1 6 6 9]} {[2 4 3 8 2 9] {[6 8 9]}}}", "(appendt {[3 2 7] {[4 8] {[9]} {[] {[9 8 5 2]}}}} 7) -> {[3 2 7 7] {[4 8 7] {[9 7]} {[7] {[9 8 5 2 7]}}}}", "(appendt {} 8) -> {}", "(appendt {[1 8 4 7 7] {[2 7 0]}} 6) -> {[1 8 4 7 7 6] {[2 7 0 6]}}", "(appendt {[3 2 3]} 6) -> {[3 2 3 6]}", "(appendt {[3] {[5 0 0]}} 2) -> {[3 2] {[5 0 0 2]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.306852, "examples": ["(appendt {} 6) -> {}", "(appendt {[8 8 8] {[9 8 3 1 1] {[]}} {[5 7 3 8 7] {[]} {[3 9 5]}}} 1) -> {[8 8 8 1] {[9 8 3 1 1 1] {[1]}} {[5 7 3 8 7 1] {[1]} {[3 9 5 1]}}}", "(appendt {[2] {[]}} 8) -> {[2 8] {[8]}}", "(appendt {[3 0] {[3 7 9] {[7 5 2 1]}} {[0 8 4] {[1 5 1]} {[1 6 5] {[9 3 9]} {[2]}}}} 2) -> {[3 0 2] {[3 7 9 2] {[7 5 2 1 2]}} {[0 8 4 2] {[1 5 1 2]} {[1 6 5 2] {[9 3 9 2]} {[2 2]}}}}", "(appendt {} 6) -> {}", "(appendt {[7 7 3 6 0] {[1 3 6] {[0 6 6 4 6] {[]} {[3 1 9 6]}} {[2 1] {[6 4 3]} {[9 4 7 2 0]}}} {[8 8 4] {[3 9 9] {[0 5 7]} {[6 9]}}}} 4) -> {[7 7 3 6 0 4] {[1 3 6 4] {[0 6 6 4 6 4] {[4]} {[3 1 9 6 4]}} {[2 1 4] {[6 4 3 4]} {[9 4 7 2 0 4]}}} {[8 8 4 4] {[3 9 9 4] {[0 5 7 4]} {[6 9 4]}}}}", "(appendt {} 8) -> {}", "(appendt {[8 9 7 7] {[] {[7 5 7 7 7] {[8]}} {[2]}}} 8) -> {[8 9 7 7 8] {[8] {[7 5 7 7 7 8] {[8 8]}} {[2 8]}}}", "(appendt {[3 0 0] {[9 5 9 2] {[9 6]} {[]}} {[1 5 2 6 5] {[5 7 0 0 8]}}} 1) -> {[3 0 0 1] {[9 5 9 2 1] {[9 6 1]} {[1]}} {[1 5 2 6 5 1] {[5 7 0 0 8 1]}}}", "(appendt {} 9) -> {}", "(appendt {[5 3 9 7 9]} 4) -> {[5 3 9 7 9 4]}", "(appendt {[3 5 8]} 1) -> {[3 5 8 1]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.719628, "examples": ["(appendt {} 3) -> {}", "(appendt {[3 4 5] {[5 9 1 0] {[3 7 8 2] {[2 7 1]}}}} 1) -> {[3 4 5 1] {[5 9 1 0 1] {[3 7 8 2 1] {[2 7 1 1]}}}}", "(appendt {} 5) -> {}", "(appendt {[7 0 6 8]} 4) -> {[7 0 6 8 4]}", "(appendt {[3 7]} 1) -> {[3 7 1]}", "(appendt {[] {[4] {[5 7 0]}} {[1 3 9 6 1] {[]} {[3]}}} 1) -> {[1] {[4 1] {[5 7 0 1]}} {[1 3 9 6 1 1] {[1]} {[3 1]}}}", "(appendt {[3 3 4 6 5]} 0) -> {[3 3 4 6 5 0]}", "(appendt {[1] {[5 3]} {[1 2 3]}} 1) -> {[1 1] {[5 3 1]} {[1 2 3 1]}}", "(appendt {[9 8 2]} 4) -> {[9 8 2 4]}", "(appendt {[7] {[]}} 2) -> {[7 2] {[2]}}", "(appendt {[]} 8) -> {[8]}", "(appendt {[5] {[3]}} 8) -> {[5 8] {[3 8]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.619104, "examples": ["(appendt {} 6) -> {}", "(appendt {} 7) -> {}", "(appendt {} 5) -> {}", "(appendt {[]} 7) -> {[7]}", "(appendt {[6 1] {[9 0 5 0] {[1 8 6 6]} {[7 9 2 6 7] {[]} {[9 2 5 8 3]}}}} 3) -> {[6 1 3] {[9 0 5 0 3] {[1 8 6 6 3]} {[7 9 2 6 7 3] {[3]} {[9 2 5 8 3 3]}}}}", "(appendt {} 5) -> {}", "(appendt {} 7) -> {}", "(appendt {} 7) -> {}", "(appendt {[4] {[1 1 6 6 1] {[3] {[]} {[1]}} {[7 7 1]}} {[6 5 5 3]}} 5) -> {[4 5] {[1 1 6 6 1 5] {[3 5] {[5]} {[1 5]}} {[7 7 1 5]}} {[6 5 5 3 5]}}", "(appendt {[2 8 3 8 2] {[]}} 6) -> {[2 8 3 8 2 6] {[6]}}", "(appendt {[0 6 9 5] {[0 0 1 0]}} 9) -> {[0 6 9 5 9] {[0 0 1 0 9]}}", "(appendt {} 9) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.873349, "examples": ["(appendt {} 9) -> {}", "(appendt {[1 3 2 9 7] {[]}} 5) -> {[1 3 2 9 7 5] {[5]}}", "(appendt {} 7) -> {}", "(appendt {[3 8] {[6 2] {[4 1]} {[9]}}} 8) -> {[3 8 8] {[6 2 8] {[4 1 8]} {[9 8]}}}", "(appendt {[] {[4]}} 1) -> {[1] {[4 1]}}", "(appendt {[5 4 4] {[8 7 1]}} 1) -> {[5 4 4 1] {[8 7 1 1]}}", "(appendt {[]} 1) -> {[1]}", "(appendt {[] {[5 2 3 0 9] {[4 6]} {[2 4 8]}}} 5) -> {[5] {[5 2 3 0 9 5] {[4 6 5]} {[2 4 8 5]}}}", "(appendt {[1 8]} 2) -> {[1 8 2]}", "(appendt {[4 1 7 9 0] {[1 5]} {[9 3]}} 8) -> {[4 1 7 9 0 8] {[1 5 8]} {[9 3 8]}}", "(appendt {[4 8 0 5 1] {[3 2 1] {[8 6]} {[1 7 2 1]}} {[5]}} 5) -> {[4 8 0 5 1 5] {[3 2 1 5] {[8 6 5]} {[1 7 2 1 5]}} {[5 5]}}", "(appendt {} 0) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 4.14519, "examples": ["(appendt {} 3) -> {}", "(appendt {} 6) -> {}", "(appendt {[0] {[8] {[] {[]} {[1 3]}} {[3] {[]} {[2 8 5 9]}}}} 6) -> {[0 6] {[8 6] {[6] {[6]} {[1 3 6]}} {[3 6] {[6]} {[2 8 5 9 6]}}}}", "(appendt {[7 7 1 6] {[3]}} 5) -> {[7 7 1 6 5] {[3 5]}}", "(appendt {} 6) -> {}", "(appendt {[1 8 0 4 7]} 7) -> {[1 8 0 4 7 7]}", "(appendt {[2 8 0 1 5] {[] {[4 3 2 2]}}} 2) -> {[2 8 0 1 5 2] {[2] {[4 3 2 2 2]}}}", "(appendt {[]} 0) -> {[0]}", "(appendt {[4 7] {[2]} {[]}} 9) -> {[4 7 9] {[2 9]} {[9]}}", "(appendt {[] {[]}} 4) -> {[4] {[4]}}", "(appendt {[1 0 0] {[8 4 9 3 9]}} 6) -> {[1 0 0 6] {[8 4 9 3 9 6]}}", "(appendt {[1 4 6 4] {[0 2 6 0]}} 0) -> {[1 4 6 4 0] {[0 2 6 0 0]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.510267, "examples": ["(appendt {} 7) -> {}", "(appendt {} 8) -> {}", "(appendt {[4 3 6 1] {[9 9 2 7 0]}} 7) -> {[4 3 6 1 7] {[9 9 2 7 0 7]}}", "(appendt {} 6) -> {}", "(appendt {[2 6 7 4] {[9 4] {[6 8]}} {[9 6 5] {[1 3 0 8 5]} {[2 0 8]}}} 2) -> {[2 6 7 4 2] {[9 4 2] {[6 8 2]}} {[9 6 5 2] {[1 3 0 8 5 2]} {[2 0 8 2]}}}", "(appendt {[0 1] {[7]} {[7]}} 4) -> {[0 1 4] {[7 4]} {[7 4]}}", "(appendt {[] {[4 8 2]} {[] {[6]}}} 8) -> {[8] {[4 8 2 8]} {[8] {[6 8]}}}", "(appendt {} 1) -> {}", "(appendt {[] {[2 7 5 6 4] {[9]}} {[9 0 9 0] {[] {[3 8 3]}} {[6 1 1]}}} 1) -> {[1] {[2 7 5 6 4 1] {[9 1]}} {[9 0 9 0 1] {[1] {[3 8 3 1]}} {[6 1 1 1]}}}", "(appendt {[1 0 1] {[5 6] {[2 5 0 6 0]} {[2 6 5]}} {[6 2]}} 7) -> {[1 0 1 7] {[5 6 7] {[2 5 0 6 0 7]} {[2 6 5 7]}} {[6 2 7]}}", "(appendt {} 1) -> {}", "(appendt {} 5) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.630505, "examples": ["(appendt {} 2) -> {}", "(appendt {[7 8] {[4 2]} {[2 7 9 8]}} 3) -> {[7 8 3] {[4 2 3]} {[2 7 9 8 3]}}", "(appendt {[2]} 0) -> {[2 0]}", "(appendt {[9 9 7 5]} 5) -> {[9 9 7 5 5]}", "(appendt {[]} 0) -> {[0]}", "(appendt {} 1) -> {}", "(appendt {} 2) -> {}", "(appendt {[5 9 0 4 3] {[3 0 6 4]} {[4 4 8 4] {[]}}} 0) -> {[5 9 0 4 3 0] {[3 0 6 4 0]} {[4 4 8 4 0] {[0]}}}", "(appendt {} 5) -> {}", "(appendt {[8 3 6 5] {[]}} 2) -> {[8 3 6 5 2] {[2]}}", "(appendt {[1]} 9) -> {[1 9]}", "(appendt {} 7) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.913864, "examples": ["(appendt {} 0) -> {}", "(appendt {[] {[3]}} 9) -> {[9] {[3 9]}}", "(appendt {[7 5] {[]}} 0) -> {[7 5 0] {[0]}}", "(appendt {[1 5] {[7 1] {[] {[7 5 0]}} {[8 1 1 8 6] {[1]}}} {[5 8 2 2 4] {[3] {[]}} {[1 4 4]}}} 1) -> {[1 5 1] {[7 1 1] {[1] {[7 5 0 1]}} {[8 1 1 8 6 1] {[1 1]}}} {[5 8 2 2 4 1] {[3 1] {[1]}} {[1 4 4 1]}}}", "(appendt {[]} 6) -> {[6]}", "(appendt {[1] {[7 9] {[]}} {[]}} 4) -> {[1 4] {[7 9 4] {[4]}} {[4]}}", "(appendt {[0 2 0]} 2) -> {[0 2 0 2]}", "(appendt {} 0) -> {}", "(appendt {[0]} 9) -> {[0 9]}", "(appendt {[5] {[4 8 9 2 2]} {[8 4]}} 9) -> {[5 9] {[4 8 9 2 2 9]} {[8 4 9]}}", "(appendt {[4 2 7 2 8]} 5) -> {[4 2 7 2 8 5]}", "(appendt {[8 5 2] {[8 1 6 1]}} 6) -> {[8 5 2 6] {[8 1 6 1 6]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.059822, "examples": ["(appendt {} 6) -> {}", "(appendt {[6 1 3 7 4]} 8) -> {[6 1 3 7 4 8]}", "(appendt {[0 4 3 7] {[]} {[9] {[6 6]} {[4 0 5 7]}}} 5) -> {[0 4 3 7 5] {[5]} {[9 5] {[6 6 5]} {[4 0 5 7 5]}}}", "(appendt {[6]} 3) -> {[6 3]}", "(appendt {[9 7] {[1 8 9 8 4] {[3 0 4 3] {[6 1]}}} {[7 9 7 2 5] {[2 5 2 2 5]}}} 2) -> {[9 7 2] {[1 8 9 8 4 2] {[3 0 4 3 2] {[6 1 2]}}} {[7 9 7 2 5 2] {[2 5 2 2 5 2]}}}", "(appendt {[9 6 6] {[2 0 7 5]}} 8) -> {[9 6 6 8] {[2 0 7 5 8]}}", "(appendt {} 5) -> {}", "(appendt {} 7) -> {}", "(appendt {} 1) -> {}", "(appendt {[]} 0) -> {[0]}", "(appendt {} 1) -> {}", "(appendt {} 6) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.046176, "examples": ["(appendt {} 6) -> {}", "(appendt {[0]} 0) -> {[0 0]}", "(appendt {[2 2 3 0]} 3) -> {[2 2 3 0 3]}", "(appendt {[5 9 9 5]} 1) -> {[5 9 9 5 1]}", "(appendt {[4 5]} 6) -> {[4 5 6]}", "(appendt {[7 1]} 6) -> {[7 1 6]}", "(appendt {[0] {[6] {[9 5 5 2]}}} 8) -> {[0 8] {[6 8] {[9 5 5 2 8]}}}", "(appendt {} 4) -> {}", "(appendt {[0 0 0] {[]}} 0) -> {[0 0 0 0] {[0]}}", "(appendt {[0 6 4 4 2] {[6 7 0]}} 5) -> {[0 6 4 4 2 5] {[6 7 0 5]}}", "(appendt {[8 2 1 5 9] {[] {[9] {[0 9 2]} {[9 8 4]}}} {[]}} 3) -> {[8 2 1 5 9 3] {[3] {[9 3] {[0 9 2 3]} {[9 8 4 3]}}} {[3]}}", "(appendt {[7 5 0]} 9) -> {[7 5 0 9]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.97746, "examples": ["(appendt {} 4) -> {}", "(appendt {} 8) -> {}", "(appendt {[9 1 9 4] {[1 8 2 2] {[5]}} {[8 7 7] {[6]} {[5 7 3 3]}}} 5) -> {[9 1 9 4 5] {[1 8 2 2 5] {[5 5]}} {[8 7 7 5] {[6 5]} {[5 7 3 3 5]}}}", "(appendt {[1 8 2]} 6) -> {[1 8 2 6]}", "(appendt {[0]} 3) -> {[0 3]}", "(appendt {[0 8 6]} 7) -> {[0 8 6 7]}", "(appendt {[8 8 1 3 2] {[2 2 2 0 1] {[]} {[2] {[2 6 6]} {[0]}}}} 1) -> {[8 8 1 3 2 1] {[2 2 2 0 1 1] {[1]} {[2 1] {[2 6 6 1]} {[0 1]}}}}", "(appendt {[] {[0 3 8 8 7] {[7 7 4 2 0] {[5 8 3]} {[4]}} {[1 4 7 0]}} {[7]}} 2) -> {[2] {[0 3 8 8 7 2] {[7 7 4 2 0 2] {[5 8 3 2]} {[4 2]}} {[1 4 7 0 2]}} {[7 2]}}", "(appendt {[] {[5]}} 8) -> {[8] {[5 8]}}", "(appendt {} 7) -> {}", "(appendt {[4 9 5 1 9] {[] {[]} {[9 4 5]}}} 2) -> {[4 9 5 1 9 2] {[2] {[2]} {[9 4 5 2]}}}", "(appendt {} 0) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.561802, "examples": ["(appendt {} 8) -> {}", "(appendt {} 7) -> {}", "(appendt {[3 2] {[7 5]} {[1 2 9]}} 8) -> {[3 2 8] {[7 5 8]} {[1 2 9 8]}}", "(appendt {} 5) -> {}", "(appendt {[3 9 2 6] {[9 6 1 1 4]}} 1) -> {[3 9 2 6 1] {[9 6 1 1 4 1]}}", "(appendt {[4] {[] {[9 5 8]}}} 3) -> {[4 3] {[3] {[9 5 8 3]}}}", "(appendt {[3 9 2 4 0] {[7 9 7 8 5]} {[0 2 5]}} 7) -> {[3 9 2 4 0 7] {[7 9 7 8 5 7]} {[0 2 5 7]}}", "(appendt {[8] {[]}} 9) -> {[8 9] {[9]}}", "(appendt {} 8) -> {}", "(appendt {[3 6]} 7) -> {[3 6 7]}", "(appendt {[0 9 0 6 8] {[1 5 2 4] {[1 8 0 1 0]} {[8 4 6]}} {[9 3] {[5 3 6]}}} 2) -> {[0 9 0 6 8 2] {[1 5 2 4 2] {[1 8 0 1 0 2]} {[8 4 6 2]}} {[9 3 2] {[5 3 6 2]}}}", "(appendt {[7 9 6]} 0) -> {[7 9 6 0]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.75324, "examples": ["(appendt {} 1) -> {}", "(appendt {} 0) -> {}", "(appendt {[4 4 2] {[8]}} 2) -> {[4 4 2 2] {[8 2]}}", "(appendt {[7 9] {[6]} {[6 8 6]}} 1) -> {[7 9 1] {[6 1]} {[6 8 6 1]}}", "(appendt {[4 7] {[0 2 1 4 4] {[8 5 2 1 2]}}} 7) -> {[4 7 7] {[0 2 1 4 4 7] {[8 5 2 1 2 7]}}}", "(appendt {[9 2] {[9] {[8] {[6 0 4 2 3]}} {[0 9] {[8 6 0 4 7]}}} {[1 9 5] {[2 0 3 8] {[4 2 9 9 4]} {[2 5 2 4 0]}}}} 2) -> {[9 2 2] {[9 2] {[8 2] {[6 0 4 2 3 2]}} {[0 9 2] {[8 6 0 4 7 2]}}} {[1 9 5 2] {[2 0 3 8 2] {[4 2 9 9 4 2]} {[2 5 2 4 0 2]}}}}", "(appendt {[8 9 1 6 1]} 7) -> {[8 9 1 6 1 7]}", "(appendt {[5 5 7] {[6 3 1 3 6]}} 7) -> {[5 5 7 7] {[6 3 1 3 6 7]}}", "(appendt {[5]} 8) -> {[5 8]}", "(appendt {[8 7 0 3 6]} 6) -> {[8 7 0 3 6 6]}", "(appendt {[7 6 7]} 5) -> {[7 6 7 5]}", "(appendt {[0]} 9) -> {[0 9]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.134816, "examples": ["(appendt {} 7) -> {}", "(appendt {[9 5] {[]} {[9 5] {[]}}} 4) -> {[9 5 4] {[4]} {[9 5 4] {[4]}}}", "(appendt {} 4) -> {}", "(appendt {[2 2 4 0] {[] {[5 6 5 9 3] {[7 6 0]}} {[1]}}} 4) -> {[2 2 4 0 4] {[4] {[5 6 5 9 3 4] {[7 6 0 4]}} {[1 4]}}}", "(appendt {} 2) -> {}", "(appendt {[] {[] {[5 4 0 7]}} {[] {[8] {[5 1 0 3]} {[7 1 8 6]}} {[2 4 7 8] {[8 1 7]} {[4]}}}} 3) -> {[3] {[3] {[5 4 0 7 3]}} {[3] {[8 3] {[5 1 0 3 3]} {[7 1 8 6 3]}} {[2 4 7 8 3] {[8 1 7 3]} {[4 3]}}}}", "(appendt {} 7) -> {}", "(appendt {[5 6 4] {[]} {[9 5]}} 3) -> {[5 6 4 3] {[3]} {[9 5 3]}}", "(appendt {} 7) -> {}", "(appendt {[] {[0 3 3 5 2] {[9]}}} 2) -> {[2] {[0 3 3 5 2 2] {[9 2]}}}", "(appendt {} 8) -> {}", "(appendt {[9]} 4) -> {[9 4]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.517011, "examples": ["(appendt {} 2) -> {}", "(appendt {[6 6 7] {[6 0 8 2]}} 7) -> {[6 6 7 7] {[6 0 8 2 7]}}", "(appendt {} 1) -> {}", "(appendt {} 8) -> {}", "(appendt {[9 1 3 5 4]} 8) -> {[9 1 3 5 4 8]}", "(appendt {[] {[] {[7 1 4]}}} 6) -> {[6] {[6] {[7 1 4 6]}}}", "(appendt {} 1) -> {}", "(appendt {[6 1 7] {[5 8 5 9 8]} {[9 7 0]}} 9) -> {[6 1 7 9] {[5 8 5 9 8 9]} {[9 7 0 9]}}", "(appendt {[0 5] {[4 4 2] {[4]} {[]}} {[7 5 6 3 2] {[]}}} 7) -> {[0 5 7] {[4 4 2 7] {[4 7]} {[7]}} {[7 5 6 3 2 7] {[7]}}}", "(appendt {[9 9 0 5 0] {[6 1 8 2]} {[9]}} 1) -> {[9 9 0 5 0 1] {[6 1 8 2 1]} {[9 1]}}", "(appendt {[]} 7) -> {[7]}", "(appendt {[6]} 8) -> {[6 8]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 1.742055, "examples": ["(appendt {} 2) -> {}", "(appendt {[7]} 7) -> {[7 7]}", "(appendt {[6] {[7 5 1 8 9]}} 9) -> {[6 9] {[7 5 1 8 9 9]}}", "(appendt {} 9) -> {}", "(appendt {} 0) -> {}", "(appendt {} 8) -> {}", "(appendt {[3 3 2 3 7] {[6 8 5 9]}} 6) -> {[3 3 2 3 7 6] {[6 8 5 9 6]}}", "(appendt {[] {[4 7 9 5 4] {[]}}} 5) -> {[5] {[4 7 9 5 4 5] {[5]}}}", "(appendt {[1 2 1 2 2] {[5 5 7] {[4]} {[5 6 2] {[8 0 6]}}} {[3 5 3]}} 6) -> {[1 2 1 2 2 6] {[5 5 7 6] {[4 6]} {[5 6 2 6] {[8 0 6 6]}}} {[3 5 3 6]}}", "(appendt {} 0) -> {}", "(appendt {[3] {[] {[]} {[7 3 4]}} {[4 6 0 5]}} 3) -> {[3 3] {[3] {[3]} {[7 3 4 3]}} {[4 6 0 5 3]}}", "(appendt {[2 1 0] {[2 0] {[2] {[7]} {[]}} {[4] {[0]}}} {[] {[9 9] {[]}} {[9 7] {[3]} {[]}}}} 0) -> {[2 1 0 0] {[2 0 0] {[2 0] {[7 0]} {[0]}} {[4 0] {[0 0]}}} {[0] {[9 9 0] {[0]}} {[9 7 0] {[3 0]} {[0]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.395194, "examples": ["(appendt {} 1) -> {}", "(appendt {[8 7] {[9 9 0 7] {[1 7 5]}} {[9 2] {[3 4]}}} 2) -> {[8 7 2] {[9 9 0 7 2] {[1 7 5 2]}} {[9 2 2] {[3 4 2]}}}", "(appendt {[] {[] {[3 0]} {[8 4 3 6] {[3 6 3 8]}}}} 5) -> {[5] {[5] {[3 0 5]} {[8 4 3 6 5] {[3 6 3 8 5]}}}}", "(appendt {[5 5 4 9 1]} 0) -> {[5 5 4 9 1 0]}", "(appendt {[9]} 6) -> {[9 6]}", "(appendt {[5 4 4 2 5] {[2 4 2 9 1]} {[7 8 7 3 6]}} 2) -> {[5 4 4 2 5 2] {[2 4 2 9 1 2]} {[7 8 7 3 6 2]}}", "(appendt {} 6) -> {}", "(appendt {[7 1 3 2 4] {[2 5 9 3 3]}} 0) -> {[7 1 3 2 4 0] {[2 5 9 3 3 0]}}", "(appendt {[4 8] {[8 1 3 7]}} 7) -> {[4 8 7] {[8 1 3 7 7]}}", "(appendt {[9 4]} 9) -> {[9 4 9]}", "(appendt {} 1) -> {}", "(appendt {[7 7 7 2 4] {[8] {[2 8 5]}} {[] {[]}}} 7) -> {[7 7 7 2 4 7] {[8 7] {[2 8 5 7]}} {[7] {[7]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 2.067533, "examples": ["(appendt {} 4) -> {}", "(appendt {[]} 5) -> {[5]}", "(appendt {[8]} 2) -> {[8 2]}", "(appendt {[] {[2 2] {[9 7 4]} {[3 5 1 7 5]}} {[7] {[1]} {[4 4]}}} 3) -> {[3] {[2 2 3] {[9 7 4 3]} {[3 5 1 7 5 3]}} {[7 3] {[1 3]} {[4 4 3]}}}", "(appendt {[7 6 0] {[8 5 7]} {[]}} 5) -> {[7 6 0 5] {[8 5 7 5]} {[5]}}", "(appendt {} 9) -> {}", "(appendt {[5] {[1 6]} {[9 8 4 2 6]}} 3) -> {[5 3] {[1 6 3]} {[9 8 4 2 6 3]}}", "(appendt {[2 8 2] {[]}} 4) -> {[2 8 2 4] {[4]}}", "(appendt {[1 6 8] {[4 8 6 5] {[]} {[6 4 1 8 0]}}} 4) -> {[1 6 8 4] {[4 8 6 5 4] {[4]} {[6 4 1 8 0 4]}}}", "(appendt {[5 8 8 0 4] {[9 7 6 0 0]}} 6) -> {[5 8 8 0 4 6] {[9 7 6 0 0 6]}}", "(appendt {[] {[5 8 8 0 6]}} 7) -> {[7] {[5 8 8 0 6 7]}}", "(appendt {[8]} 0) -> {[8 0]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 3.23579, "examples": ["(appendt {} 7) -> {}", "(appendt {[3]} 6) -> {[3 6]}", "(appendt {} 8) -> {}", "(appendt {} 8) -> {}", "(appendt {[9 2 6] {[7] {[9 7 5]} {[7 9 0 5]}} {[5 5 4 4]}} 5) -> {[9 2 6 5] {[7 5] {[9 7 5 5]} {[7 9 0 5 5]}} {[5 5 4 4 5]}}", "(appendt {[0 9] {[8]}} 1) -> {[0 9 1] {[8 1]}}", "(appendt {[6 1 8 4] {[2 0 8 4] {[]} {[5]}} {[3] {[0 5 3 9]} {[8 5 5 1 8]}}} 0) -> {[6 1 8 4 0] {[2 0 8 4 0] {[0]} {[5 0]}} {[3 0] {[0 5 3 9 0]} {[8 5 5 1 8 0]}}}", "(appendt {[0 5 8 9]} 0) -> {[0 5 8 9 0]}", "(appendt {[]} 7) -> {[7]}", "(appendt {[0 6 3 6 6]} 0) -> {[0 6 3 6 6 0]}", "(appendt {[1 1] {[9 8 7 8] {[7 7 4 7 7]}}} 6) -> {[1 1 6] {[9 8 7 8 6] {[7 7 4 7 7 6]}}}", "(appendt {[4 0]} 1) -> {[4 0 1]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 52.754188, "examples": ["(appendt {} 8) -> {}", "(appendt {[5 9 2 9 1]} 0) -> {[5 9 2 9 1 0]}", "(appendt {[6 8 0] {[]} {[]}} 0) -> {[6 8 0 0] {[0]} {[0]}}", "(appendt {} 6) -> {}", "(appendt {} 5) -> {}", "(appendt {[1 5 4 4 3]} 7) -> {[1 5 4 4 3 7]}", "(appendt {[2]} 1) -> {[2 1]}", "(appendt {[3 2]} 7) -> {[3 2 7]}", "(appendt {[1 5]} 7) -> {[1 5 7]}", "(appendt {[1 8 8 5 8] {[9 4 0 5]} {[3]}} 9) -> {[1 8 8 5 8 9] {[9 4 0 5 9]} {[3 9]}}", "(appendt {} 6) -> {}", "(appendt {} 2) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [0])))) _) _)"}
{"time": 3.072896, "examples": ["(appendt {} 6) -> {}", "(appendt {[8]} 1) -> {[8 1]}", "(appendt {[8 2 0 6 9] {[2 0 8 2 4] {[6 1] {[8 2 7 4]}}} {[] {[5] {[]}} {[7 5 1 9 7]}}} 9) -> {[8 2 0 6 9 9] {[2 0 8 2 4 9] {[6 1 9] {[8 2 7 4 9]}}} {[9] {[5 9] {[9]}} {[7 5 1 9 7 9]}}}", "(appendt {} 8) -> {}", "(appendt {[] {[1 1]} {[3]}} 5) -> {[5] {[1 1 5]} {[3 5]}}", "(appendt {[3 4] {[0]} {[] {[3 5 0 3] {[]} {[5 1]}}}} 0) -> {[3 4 0] {[0 0]} {[0] {[3 5 0 3 0] {[0]} {[5 1 0]}}}}", "(appendt {[0 5] {[2 2 7 6]} {[1]}} 0) -> {[0 5 0] {[2 2 7 6 0]} {[1 0]}}", "(appendt {[0] {[9 7]} {[8 9 0 8]}} 2) -> {[0 2] {[9 7 2]} {[8 9 0 8 2]}}", "(appendt {} 3) -> {}", "(appendt {} 5) -> {}", "(appendt {} 0) -> {}", "(appendt {} 8) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 4.145378, "examples": ["(appendt {} 2) -> {}", "(appendt {[2 7] {[4 5 0 5]} {[4 1 6 1 8] {[1] {[]} {[1 7]}} {[4 7 8 6]}}} 1) -> {[2 7 1] {[4 5 0 5 1]} {[4 1 6 1 8 1] {[1 1] {[1]} {[1 7 1]}} {[4 7 8 6 1]}}}", "(appendt {} 7) -> {}", "(appendt {[9 9 2 1 9]} 0) -> {[9 9 2 1 9 0]}", "(appendt {[9 2] {[1 0 4 9] {[4 0 9 4] {[1 5]}}} {[1 8 9] {[] {[8]}} {[9 9 9 4] {[3]} {[1 6 4 3 9]}}}} 1) -> {[9 2 1] {[1 0 4 9 1] {[4 0 9 4 1] {[1 5 1]}}} {[1 8 9 1] {[1] {[8 1]}} {[9 9 9 4 1] {[3 1]} {[1 6 4 3 9 1]}}}}", "(appendt {} 8) -> {}", "(appendt {} 6) -> {}", "(appendt {[6] {[1 8]} {[]}} 7) -> {[6 7] {[1 8 7]} {[7]}}", "(appendt {} 4) -> {}", "(appendt {[7]} 5) -> {[7 5]}", "(appendt {[2 7 2 9 9] {[2 3]}} 2) -> {[2 7 2 9 9 2] {[2 3 2]}}", "(appendt {[6 3 8 2] {[6 1 3]}} 9) -> {[6 3 8 2 9] {[6 1 3 9]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 56.370879, "examples": ["(appendt {} 3) -> {}", "(appendt {[4 9 7] {[3 2 3 1 1]}} 0) -> {[4 9 7 0] {[3 2 3 1 1 0]}}", "(appendt {[5 7 0 2 8] {[3 7] {[7 5]}} {[7 9 6]}} 7) -> {[5 7 0 2 8 7] {[3 7 7] {[7 5 7]}} {[7 9 6 7]}}", "(appendt {[0 7 1 1] {[4 8 3 9 5]}} 2) -> {[0 7 1 1 2] {[4 8 3 9 5 2]}}", "(appendt {[5 4 0 0 6]} 3) -> {[5 4 0 0 6 3]}", "(appendt {} 7) -> {}", "(appendt {[1 1 3] {[2]}} 0) -> {[1 1 3 0] {[2 0]}}", "(appendt {[0 4 7] {[4]}} 8) -> {[0 4 7 8] {[4 8]}}", "(appendt {} 7) -> {}", "(appendt {[7] {[] {[0 9 2 9 5] {[9 4 7 7 0]}}}} 7) -> {[7 7] {[7] {[0 9 2 9 5 7] {[9 4 7 7 0 7]}}}}", "(appendt {[0 5 9]} 8) -> {[0 5 9 8]}", "(appendt {[1 6 3 1 0] {[2]}} 9) -> {[1 6 3 1 0 9] {[2 9]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [7])))) _) _)"}
{"time": 56.551557, "examples": ["(appendt {} 3) -> {}", "(appendt {[4 4 5 2 0] {[9 2 6]}} 1) -> {[4 4 5 2 0 1] {[9 2 6 1]}}", "(appendt {[0 6 1 5]} 1) -> {[0 6 1 5 1]}", "(appendt {[0 7 1] {[6 3 9 5] {[5 8 0 4 8]} {[0 5 4 8]}}} 4) -> {[0 7 1 4] {[6 3 9 5 4] {[5 8 0 4 8 4]} {[0 5 4 8 4]}}}", "(appendt {} 6) -> {}", "(appendt {} 0) -> {}", "(appendt {[0 2 4] {[0 3]}} 2) -> {[0 2 4 2] {[0 3 2]}}", "(appendt {[9] {[0 2] {[9 7 2]} {[4 5]}}} 9) -> {[9 9] {[0 2 9] {[9 7 2 9]} {[4 5 9]}}}", "(appendt {[7 5]} 1) -> {[7 5 1]}", "(appendt {[8] {[3 8 2 4]}} 2) -> {[8 2] {[3 8 2 4 2]}}", "(appendt {[]} 5) -> {[5]}", "(appendt {[4 7 0] {[0 2]} {[3 1 7 8 5]}} 4) -> {[4 7 0 4] {[0 2 4]} {[3 1 7 8 5 4]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [5])))) _) _)"}
{"time": 3.434365, "examples": ["(appendt {} 8) -> {}", "(appendt {} 3) -> {}", "(appendt {[8 2 7 7 7] {[8 1 6 7 5] {[9 1 5 1 1] {[7 4 4 2]}} {[6] {[]} {[2 9 3]}}}} 9) -> {[8 2 7 7 7 9] {[8 1 6 7 5 9] {[9 1 5 1 1 9] {[7 4 4 2 9]}} {[6 9] {[9]} {[2 9 3 9]}}}}", "(appendt {} 6) -> {}", "(appendt {[1 9 3 1 3] {[0] {[]} {[1 5 6 5 8]}}} 0) -> {[1 9 3 1 3 0] {[0 0] {[0]} {[1 5 6 5 8 0]}}}", "(appendt {[0]} 6) -> {[0 6]}", "(appendt {} 4) -> {}", "(appendt {[3 5]} 1) -> {[3 5 1]}", "(appendt {[0]} 6) -> {[0 6]}", "(appendt {[3 1 0 9 5]} 3) -> {[3 1 0 9 5 3]}", "(appendt {[8 7] {[2]}} 6) -> {[8 7 6] {[2 6]}}", "(appendt {[3 4 3 2] {[]} {[6 6 3 1]}} 8) -> {[3 4 3 2 8] {[8]} {[6 6 3 1 8]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 57.616711, "examples": ["(appendt {} 1) -> {}", "(appendt {[]} 3) -> {[3]}", "(appendt {[6 1 7 3] {[1 8 9]}} 3) -> {[6 1 7 3 3] {[1 8 9 3]}}", "(appendt {} 2) -> {}", "(appendt {[6 3 8 9 4] {[5 1]} {[3 0]}} 6) -> {[6 3 8 9 4 6] {[5 1 6]} {[3 0 6]}}", "(appendt {[7 2] {[6 0] {[6] {[8 9 4 0 2]}}}} 4) -> {[7 2 4] {[6 0 4] {[6 4] {[8 9 4 0 2 4]}}}}", "(appendt {[6 9 9 2 0] {[5]}} 0) -> {[6 9 9 2 0 0] {[5 0]}}", "(appendt {} 5) -> {}", "(appendt {[9 2 9 8]} 0) -> {[9 2 9 8 0]}", "(appendt {[7 8 2] {[4 1 0 0 0]}} 2) -> {[7 8 2 2] {[4 1 0 0 0 2]}}", "(appendt {} 0) -> {}", "(appendt {[3 8 7 4 1]} 2) -> {[3 8 7 4 1 2]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [3])))) _) _)"}
{"time": 1.230348, "examples": ["(appendt {} 1) -> {}", "(appendt {[9 1]} 2) -> {[9 1 2]}", "(appendt {[2]} 2) -> {[2 2]}", "(appendt {[] {[6] {[]}} {[3 8 2 5 9] {[0 1] {[0 0 5 2]} {[9 5 6]}}}} 4) -> {[4] {[6 4] {[4]}} {[3 8 2 5 9 4] {[0 1 4] {[0 0 5 2 4]} {[9 5 6 4]}}}}", "(appendt {} 6) -> {}", "(appendt {} 8) -> {}", "(appendt {[6 0] {[6 5] {[9 2]}} {[0] {[7] {[]}} {[0 3 7 2] {[1 0 5]}}}} 3) -> {[6 0 3] {[6 5 3] {[9 2 3]}} {[0 3] {[7 3] {[3]}} {[0 3 7 2 3] {[1 0 5 3]}}}}", "(appendt {[6 6 7 7] {[1]}} 7) -> {[6 6 7 7 7] {[1 7]}}", "(appendt {} 7) -> {}", "(appendt {} 3) -> {}", "(appendt {} 5) -> {}", "(appendt {[] {[]} {[7 7 3 6] {[5] {[2 1 6 4]} {[4 7]}} {[6 7 8 1 9] {[2]}}}} 3) -> {[3] {[3]} {[7 7 3 6 3] {[5 3] {[2 1 6 4 3]} {[4 7 3]}} {[6 7 8 1 9 3] {[2 3]}}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldr d (lambda (f e) (cons e f)) (cons b []))))) _) _)"}
{"time": 60.491608, "examples": ["(appendt {} 3) -> {}", "(appendt {[6 1 6 3 9]} 9) -> {[6 1 6 3 9 9]}", "(appendt {} 7) -> {}", "(appendt {[8 5 4 1]} 7) -> {[8 5 4 1 7]}", "(appendt {[8 8 4 5 1]} 9) -> {[8 8 4 5 1 9]}", "(appendt {[0 9 0 5 8] {[3] {[1 6 1 5 0]}}} 6) -> {[0 9 0 5 8 6] {[3 6] {[1 6 1 5 0 6]}}}", "(appendt {[9 3]} 1) -> {[9 3 1]}", "(appendt {[7 4 0 3 0]} 9) -> {[7 4 0 3 0 9]}", "(appendt {[4] {[]} {[] {[5 2 9]} {[7 6]}}} 3) -> {[4 3] {[3]} {[3] {[5 2 9 3]} {[7 6 3]}}}", "(appendt {[2]} 8) -> {[2 8]}", "(appendt {[6 7 3 4 4]} 3) -> {[6 7 3 4 4 3]}", "(appendt {[6 2 4 7 3]} 3) -> {[6 2 4 7 3 3]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [3])))) _) _)"}
{"time": 55.944189, "examples": ["(appendt {} 9) -> {}", "(appendt {[8 0 0 9 7]} 1) -> {[8 0 0 9 7 1]}", "(appendt {[1] {[7 3 3 3 1] {[3 6 3 8 5]} {[7 5 9 5 2]}}} 4) -> {[1 4] {[7 3 3 3 1 4] {[3 6 3 8 5 4]} {[7 5 9 5 2 4]}}}", "(appendt {} 6) -> {}", "(appendt {} 1) -> {}", "(appendt {} 3) -> {}", "(appendt {} 7) -> {}", "(appendt {} 2) -> {}", "(appendt {[1] {[8]} {[]}} 9) -> {[1 9] {[8 9]} {[9]}}", "(appendt {[6 6 2]} 1) -> {[6 6 2 1]}", "(appendt {[9 5] {[8 5 5 2]}} 0) -> {[9 5 0] {[8 5 5 2 0]}}", "(appendt {[3 8 0]} 3) -> {[3 8 0 3]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [9])))) _) _)"}
{"time": 46.447921, "examples": ["(appendt {} 9) -> {}", "(appendt {[9]} 7) -> {[9 7]}", "(appendt {[5 6 0 4 6] {[1 7 9]} {[]}} 1) -> {[5 6 0 4 6 1] {[1 7 9 1]} {[1]}}", "(appendt {[4]} 2) -> {[4 2]}", "(appendt {[4 6 4]} 3) -> {[4 6 4 3]}", "(appendt {[5 8 9 9 2] {[3 1 0]} {[6]}} 9) -> {[5 8 9 9 2 9] {[3 1 0 9]} {[6 9]}}", "(appendt {[3 0 5] {[2]} {[1 8 8]}} 5) -> {[3 0 5 5] {[2 5]} {[1 8 8 5]}}", "(appendt {[2 5 7]} 3) -> {[2 5 7 3]}", "(appendt {[4 8 0 2]} 3) -> {[4 8 0 2 3]}", "(appendt {} 8) -> {}", "(appendt {} 2) -> {}", "(appendt {} 4) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [1])))) _) _)"}
{"time": 63.869016, "examples": ["(appendt {} 2) -> {}", "(appendt {} 8) -> {}", "(appendt {[4 5 9] {[6 7 8 1]}} 8) -> {[4 5 9 8] {[6 7 8 1 8]}}", "(appendt {} 2) -> {}", "(appendt {} 0) -> {}", "(appendt {[6 3]} 3) -> {[6 3 3]}", "(appendt {[8] {[]} {[]}} 2) -> {[8 2] {[2]} {[2]}}", "(appendt {[2 6 3 4 4] {[4 0 2] {[]}}} 2) -> {[2 6 3 4 4 2] {[4 0 2 2] {[2]}}}", "(appendt {[0 8] {[5 4]}} 3) -> {[0 8 3] {[5 4 3]}}", "(appendt {} 4) -> {}", "(appendt {} 8) -> {}", "(appendt {[7]} 0) -> {[7 0]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [2])))) _) _)"}
{"time": 61.086994, "examples": ["(appendt {} 0) -> {}", "(appendt {[2 3 6 9]} 4) -> {[2 3 6 9 4]}", "(appendt {[9 2 9 8 6]} 0) -> {[9 2 9 8 6 0]}", "(appendt {[8 5]} 1) -> {[8 5 1]}", "(appendt {[7 4 9 8 9]} 9) -> {[7 4 9 8 9 9]}", "(appendt {[8 5]} 1) -> {[8 5 1]}", "(appendt {[5 8]} 9) -> {[5 8 9]}", "(appendt {[] {[2 9 1]} {[2 3 4 1] {[5 8 0]} {[]}}} 1) -> {[1] {[2 9 1 1]} {[2 3 4 1 1] {[5 8 0 1]} {[1]}}}", "(appendt {[] {[3 4 5 4]} {[0 1 7 8] {[3 9 8]}}} 1) -> {[1] {[3 4 5 4 1]} {[0 1 7 8 1] {[3 9 8 1]}}}", "(appendt {} 8) -> {}", "(appendt {} 6) -> {}", "(appendt {} 6) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [1])))) _) _)"}
{"time": 68.228095, "examples": ["(appendt {} 0) -> {}", "(appendt {[1 0 5 3 0] {[8 5 4] {[2 1 0 2 3] {[1 1]}} {[]}}} 8) -> {[1 0 5 3 0 8] {[8 5 4 8] {[2 1 0 2 3 8] {[1 1 8]}} {[8]}}}", "(appendt {} 4) -> {}", "(appendt {} 9) -> {}", "(appendt {} 4) -> {}", "(appendt {[6 5 0] {[9 0 2 9]}} 0) -> {[6 5 0 0] {[9 0 2 9 0]}}", "(appendt {} 2) -> {}", "(appendt {[1 9 9]} 8) -> {[1 9 9 8]}", "(appendt {[7]} 3) -> {[7 3]}", "(appendt {[3 6] {[4 1 4 3 8]}} 5) -> {[3 6 5] {[4 1 4 3 8 5]}}", "(appendt {[3 4 6] {[6 1]} {[4 6 8 0 2]}} 9) -> {[3 4 6 9] {[6 1 9]} {[4 6 8 0 2 9]}}", "(appendt {} 4) -> {}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [8])))) _) _)"}
{"time": 50.387492, "examples": ["(appendt {} 3) -> {}", "(appendt {[4 9 8] {[4 6] {[8 2 3]}}} 2) -> {[4 9 8 2] {[4 6 2] {[8 2 3 2]}}}", "(appendt {[0] {[]} {[7 7 3 2 4] {[5]} {[6 9 7]}}} 5) -> {[0 5] {[5]} {[7 7 3 2 4 5] {[5 5]} {[6 9 7 5]}}}", "(appendt {[8 9 4 5]} 6) -> {[8 9 4 5 6]}", "(appendt {} 2) -> {}", "(appendt {[3 3] {[5 4 7]} {[6 2 6 7 0]}} 8) -> {[3 3 8] {[5 4 7 8]} {[6 2 6 7 0 8]}}", "(appendt {[0 3] {[1 2 3] {[]} {[9 5 8 9]}} {[9 8 7]}} 5) -> {[0 3 5] {[1 2 3 5] {[5]} {[9 5 8 9 5]}} {[9 8 7 5]}}", "(appendt {[1 4] {[8 2] {[] {[2 1 7 9 2]} {[2]}}}} 5) -> {[1 4 5] {[8 2 5] {[5] {[2 1 7 9 2 5]} {[2 5]}}}}", "(appendt {} 6) -> {}", "(appendt {} 3) -> {}", "(appendt {[] {[8 4 8 6 7] {[7 6 0]} {[0 5 1 0]}} {[7 7 0] {[6]}}} 5) -> {[5] {[8 4 8 6 7 5] {[7 6 0 5]} {[0 5 1 0 5]}} {[7 7 0 5] {[6 5]}}}", "(appendt {[3 6 5 3] {[9 3 9 4 1] {[7 5 4 1] {[2 1 0]} {[5 2 2]}} {[3 8 0 0 6] {[1 1 3 5 9]} {[9 5 2 3]}}} {[4 7]}} 2) -> {[3 6 5 3 2] {[9 3 9 4 1 2] {[7 5 4 1 2] {[2 1 0 2]} {[5 2 2 2]}} {[3 8 0 0 6 2] {[1 1 3 5 9 2]} {[9 5 2 3 2]}}} {[4 7 2]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [5])))) _) _)"}
{"time": 34.311582, "examples": ["(appendt {} 2) -> {}", "(appendt {[3 3 0 3 1]} 8) -> {[3 3 0 3 1 8]}", "(appendt {[9 9 4]} 3) -> {[9 9 4 3]}", "(appendt {[3 5 4] {[7 6]}} 3) -> {[3 5 4 3] {[7 6 3]}}", "(appendt {} 1) -> {}", "(appendt {[4 7 1 8] {[] {[3 7 4 6] {[]} {[4 0]}} {[2] {[8 0 7]}}}} 5) -> {[4 7 1 8 5] {[5] {[3 7 4 6 5] {[5]} {[4 0 5]}} {[2 5] {[8 0 7 5]}}}}", "(appendt {[3 8] {[9]} {[3 7 0 0]}} 4) -> {[3 8 4] {[9 4]} {[3 7 0 0 4]}}", "(appendt {[9 6]} 1) -> {[9 6 1]}", "(appendt {[3 8 9 4 1]} 5) -> {[3 8 9 4 1 5]}", "(appendt {[7 1 0 5]} 4) -> {[7 1 0 5 4]}", "(appendt {} 2) -> {}", "(appendt {[7 7 8 8 3]} 1) -> {[7 7 8 8 3 1]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [5])))) _) _)"}
{"time": 45.791954, "examples": ["(appendt {} 4) -> {}", "(appendt {} 6) -> {}", "(appendt {[6 9 9 8] {[3]} {[7 8 7 3] {[4 1 2 1]}}} 8) -> {[6 9 9 8 8] {[3 8]} {[7 8 7 3 8] {[4 1 2 1 8]}}}", "(appendt {} 5) -> {}", "(appendt {[0 1 7 9] {[9 3 4]} {[5 6 9 3]}} 2) -> {[0 1 7 9 2] {[9 3 4 2]} {[5 6 9 3 2]}}", "(appendt {[]} 2) -> {[2]}", "(appendt {[0 6 1] {[1 9 4] {[5 3 8] {[8 4]}} {[3 5 3] {[0 3 7 6 3]} {[4 4]}}}} 8) -> {[0 6 1 8] {[1 9 4 8] {[5 3 8 8] {[8 4 8]}} {[3 5 3 8] {[0 3 7 6 3 8]} {[4 4 8]}}}}", "(appendt {[5 4 0 4 5] {[]} {[5 0 1 6 9]}} 2) -> {[5 4 0 4 5 2] {[2]} {[5 0 1 6 9 2]}}", "(appendt {} 4) -> {}", "(appendt {} 6) -> {}", "(appendt {} 0) -> {}", "(appendt {[7 1 0] {[9 2] {[1 5 1 8]}}} 1) -> {[7 1 0 1] {[9 2 1] {[1 5 1 8 1]}}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [2])))) _) _)"}
{"time": 27.404246, "examples": ["(appendt {} 3) -> {}", "(appendt {} 1) -> {}", "(appendt {[8 7 1 7] {[6 7 4 6 5]}} 0) -> {[8 7 1 7 0] {[6 7 4 6 5 0]}}", "(appendt {[6 8 0 9] {[4 3 8 6]} {[0 2 1]}} 3) -> {[6 8 0 9 3] {[4 3 8 6 3]} {[0 2 1 3]}}", "(appendt {[7 1 7 9] {[1 4 7 9 4] {[4 4]}}} 1) -> {[7 1 7 9 1] {[1 4 7 9 4 1] {[4 4 1]}}}", "(appendt {[2 5 7 1] {[0]}} 8) -> {[2 5 7 1 8] {[0 8]}}", "(appendt {} 6) -> {}", "(appendt {[8 6 8]} 6) -> {[8 6 8 6]}", "(appendt {[3 5 2 2] {[1 9]}} 8) -> {[3 5 2 2 8] {[1 9 8]}}", "(appendt {[6 7 1 2]} 0) -> {[6 7 1 2 0]}", "(appendt {[6 6 3 1 3] {[2 8 1 0]}} 8) -> {[6 6 3 1 3 8] {[2 8 1 0 8]}}", "(appendt {[8 3 0] {[1 1 9] {[] {[1 0 1 0 1]} {[3 4 5 1]}} {[] {[0 9]}}} {[1 4 7 9 9]}} 1) -> {[8 3 0 1] {[1 1 9 1] {[1] {[1 0 1 0 1 1]} {[3 4 5 1 1]}} {[1] {[0 9 1]}}} {[1 4 7 9 9 1]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [1])))) _) _)"}
{"time": 56.313088, "examples": ["(appendt {} 0) -> {}", "(appendt {[] {[3 1 9 4] {[7 7 3 4]} {[] {[3 6 8]}}} {[9 7 0]}} 6) -> {[6] {[3 1 9 4 6] {[7 7 3 4 6]} {[6] {[3 6 8 6]}}} {[9 7 0 6]}}", "(appendt {[2 6 5]} 9) -> {[2 6 5 9]}", "(appendt {[6 8 2 3] {[1 0]}} 4) -> {[6 8 2 3 4] {[1 0 4]}}", "(appendt {[7] {[0 0 9 7 3] {[4 6 6] {[1 7 5 5 0]}}}} 8) -> {[7 8] {[0 0 9 7 3 8] {[4 6 6 8] {[1 7 5 5 0 8]}}}}", "(appendt {} 1) -> {}", "(appendt {} 6) -> {}", "(appendt {} 2) -> {}", "(appendt {[] {[9 4 1]} {[6 6 2]}} 6) -> {[6] {[9 4 1 6]} {[6 6 2 6]}}", "(appendt {[9] {[3 6 1 3 1]} {[2 7 4 0 2]}} 7) -> {[9 7] {[3 6 1 3 1 7]} {[2 7 4 0 2 7]}}", "(appendt {} 1) -> {}", "(appendt {[4 1 2 3 3]} 4) -> {[4 1 2 3 3 4]}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [6])))) _) _)"}
{"time": 96.706798, "examples": ["(appendt {} 2) -> {}", "(appendt {} 6) -> {}", "(appendt {[1 7 3 4] {[7 6 2 8 9] {[6 5 3 3 8]}} {[] {[7 9 7 6 9]} {[3] {[7 7 1 4 2]} {[2 7 1]}}}} 5) -> {[1 7 3 4 5] {[7 6 2 8 9 5] {[6 5 3 3 8 5]}} {[5] {[7 9 7 6 9 5]} {[3 5] {[7 7 1 4 2 5]} {[2 7 1 5]}}}}", "(appendt {[5] {[7 7 4] {[9]}} {[6 0]}} 3) -> {[5 3] {[7 7 4 3] {[9 3]}} {[6 0 3]}}", "(appendt {} 0) -> {}", "(appendt {[5 4 8]} 5) -> {[5 4 8 5]}", "(appendt {[5 1 3]} 3) -> {[5 1 3 3]}", "(appendt {[0 8] {[9 9] {[1 0]}}} 7) -> {[0 8 7] {[9 9 7] {[1 0 7]}}}", "(appendt {[4 7 1 1 6]} 7) -> {[4 7 1 1 6 7]}", "(appendt {[3 0 7 6 2] {[0] {[8 6 1] {[3 4 0]}} {[7] {[4]}}}} 4) -> {[3 0 7 6 2 4] {[0 4] {[8 6 1 4] {[3 4 0 4]}} {[7 4] {[4 4]}}}}", "(appendt {[8 7 8] {[4 4 4] {[1 6 2 3]}}} 9) -> {[8 7 8 9] {[4 4 4 9] {[1 6 2 3 9]}}}", "(appendt {[9 2 8 8 7] {[5 2 8 1 8]} {[0 7 4]}} 1) -> {[9 2 8 8 7 1] {[5 2 8 1 8 1]} {[0 7 4 1]}}"], "name": "appendt", "solution": "(let appendt (let a (lambda (c b) (mapt c (lambda (d) (foldl d (lambda (f e) (foldr d (lambda (h g) (cons g h)) (cons b []))) [5])))) _) _)"}
