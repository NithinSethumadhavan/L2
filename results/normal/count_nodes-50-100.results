{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {7 {6} {8}} {3}}) -> 5", "(count_nodes {3 {6 {9 {9}}} {5}}) -> 5", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {7 {3} {6 {5 {7} {6}}}}) -> 6", "(count_nodes {8 {1 {2}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {5 {2}}) -> 2", "(count_nodes {3 {4}}) -> 2", "(count_nodes {5 {8 {1} {3}}}) -> 4", "(count_nodes {8 {4 {5 {4} {3}} {7 {0} {9}}} {3 {0 {6}} {1 {6} {4}}}}) -> 14", "(count_nodes {5 {2} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {9} {4 {2}}}) -> 4", "(count_nodes {5 {9 {2}} {1 {2} {9}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {3 {9 {1}} {0 {0} {6}}}) -> 6", "(count_nodes {1 {0 {6}} {9 {3 {6}} {2 {4} {6}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {0 {6 {7} {3}} {8 {9} {0}}} {6 {0}}}) -> 10", "(count_nodes {}) -> 0", "(count_nodes {5 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {8}}) -> 2", "(count_nodes {4 {1 {0} {2}} {9 {9}}}) -> 6", "(count_nodes {6 {5 {3} {3}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {0 {9} {7}} {1 {2}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {1 {2 {9}}}) -> 3", "(count_nodes {9 {4 {3} {7}}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.206246, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {3} {0 {3 {1}}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {6} {6}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {7 {0} {1}}) -> 3", "(count_nodes {1 {1 {1 {1} {0}}} {6 {9 {3}} {3}}}) -> 9", "(count_nodes {0}) -> 1", "(count_nodes {5 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {9}}) -> 2", "(count_nodes {3 {7}}) -> 2", "(count_nodes {2 {0} {9 {3 {8} {9}}}}) -> 6", "(count_nodes {3 {4 {1}} {7 {3} {4}}}) -> 6", "(count_nodes {2}) -> 1", "(count_nodes {1 {3} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {7 {6 {3 {6} {1}} {0 {9}}}}) -> 7", "(count_nodes {8 {6 {8} {8}} {0 {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {7 {5} {6}}) -> 3", "(count_nodes {1 {4}}) -> 2", "(count_nodes {8 {3 {1}} {3 {3}}}) -> 5", "(count_nodes {0 {5}}) -> 2", "(count_nodes {8 {5 {0 {9}}} {3 {2}}}) -> 6", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {6} {8 {2} {4}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {8 {2} {3}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {4 {4 {7 {2}}} {0}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {8} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5 {0} {7}}) -> 3", "(count_nodes {9 {7} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {5 {0} {5}}}) -> 4", "(count_nodes {8 {7} {2 {5}}}) -> 4", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.284003, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {7 {6} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {2 {8}}) -> 2", "(count_nodes {6 {7 {5 {4}}}}) -> 4", "(count_nodes {3 {0} {3 {7} {3}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {5 {7} {1 {4} {5}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {9 {4} {5}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {9 {0 {6} {6}} {9 {7} {5}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {3 {7 {4}} {2 {3}}} {5 {9 {0}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {6} {2}}) -> 3", "(count_nodes {9 {7 {4}} {5}}) -> 4", "(count_nodes {9}) -> 1", "(count_nodes {1 {9 {2 {2} {9}} {7 {5} {8}}} {6 {5 {5} {1}} {1 {7}}}}) -> 14", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {5 {9} {3}}) -> 3", "(count_nodes {7 {2} {8}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {0 {6 {2} {1}} {7 {4}}}) -> 6", "(count_nodes {4}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {9 {1} {7}}) -> 3", "(count_nodes {5 {5} {9}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {1 {8 {1} {3 {2}}}}) -> 5", "(count_nodes {0 {7} {4}}) -> 3", "(count_nodes {4 {9}}) -> 2", "(count_nodes {5 {2}}) -> 2", "(count_nodes {2 {4 {8 {8}}}}) -> 4", "(count_nodes {6 {2 {8 {9}} {4}} {9 {4 {8}} {8}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {9 {9}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {2 {7} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {5} {6}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.225402, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {7 {1 {1 {3} {4}}} {6 {9} {8}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {3 {9 {4}} {5}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {6 {4} {1}}) -> 3", "(count_nodes {8 {9} {9 {7}}}) -> 4", "(count_nodes {9 {1} {7}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {9 {3}}) -> 2", "(count_nodes {5 {9 {6} {6}} {0 {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {7 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {5 {7} {5 {0} {6}}}}) -> 6", "(count_nodes {3 {9} {3 {0 {1} {0}}}}) -> 6", "(count_nodes {2 {7 {4} {1}} {0}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {9 {4 {4 {0} {8}}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {3 {3 {1 {3} {9}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {5 {5}}) -> 2", "(count_nodes {3 {5 {1}} {6}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {2 {4 {8}}}) -> 3", "(count_nodes {8 {7} {4}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {8 {3} {0}}}) -> 4", "(count_nodes {2 {5 {6} {1}} {2}}) -> 5", "(count_nodes {0}) -> 1", "(count_nodes {6 {8} {0 {0}}}) -> 4", "(count_nodes {5}) -> 1", "(count_nodes {7 {0 {0}} {0}}) -> 4", "(count_nodes {9 {1 {3 {9}}}}) -> 4", "(count_nodes {0 {7}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {6 {9 {9} {2}} {4}}) -> 5", "(count_nodes {2 {9 {6}}}) -> 3", "(count_nodes {4 {0}}) -> 2", "(count_nodes {6 {5 {5} {4}} {5 {9}}}) -> 6", "(count_nodes {9 {5 {3}}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.28717, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {4}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {4 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {7} {1}}) -> 3", "(count_nodes {2 {4 {9}} {4 {0 {1}}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {1 {0 {8} {3}}}) -> 4", "(count_nodes {4 {6} {2}}) -> 3", "(count_nodes {1 {3 {0} {1}} {7 {3}}}) -> 6", "(count_nodes {6 {7 {6}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {4 {5}}}}) -> 4", "(count_nodes {5}) -> 1", "(count_nodes {5 {6 {9}}}) -> 3", "(count_nodes {9 {4 {8}}}) -> 3", "(count_nodes {7 {0} {0}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {9 {2}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {9}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {7 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {9}}) -> 2", "(count_nodes {5 {2}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {3}}) -> 2", "(count_nodes {0 {8}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {2 {6 {0} {9}}}) -> 4", "(count_nodes {7 {9}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {0 {6 {3 {5}} {9}} {6}}) -> 6", "(count_nodes {8 {8 {3 {1}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.282408, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {2 {8} {2 {1}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {7 {8 {9} {7}}}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {1 {2}}) -> 2", "(count_nodes {5 {1 {4}} {2 {7 {6} {4}} {0}}}) -> 8", "(count_nodes {4 {8 {5} {8}} {2}}) -> 5", "(count_nodes {7 {9 {3 {4} {1}} {8 {0}}}}) -> 7", "(count_nodes {7 {8} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1 {1 {9} {1}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9 {4}}) -> 2", "(count_nodes {6 {5}}) -> 2", "(count_nodes {6 {6 {8} {4 {6}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {4 {3 {5} {1}} {0 {7}}}}) -> 7", "(count_nodes {4 {0} {8 {2} {7}}}) -> 5", "(count_nodes {0}) -> 1", "(count_nodes {3 {2} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5 {1}}) -> 2", "(count_nodes {3 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {6}}) -> 2", "(count_nodes {3 {9 {6} {0}} {7}}) -> 5", "(count_nodes {6 {4}}) -> 2", "(count_nodes {5 {0 {2} {3}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {4 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0 {5} {9 {9}}}) -> 4", "(count_nodes {6 {9 {8}}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {1 {2 {3}} {0 {6}}}) -> 5", "(count_nodes {1 {1} {5}}) -> 3", "(count_nodes {1 {9} {0}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.243159, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {4 {4}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {1 {2} {1}}) -> 3", "(count_nodes {4 {0}}) -> 2", "(count_nodes {2 {8 {3}} {2}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {6 {6}}) -> 2", "(count_nodes {0 {7}}) -> 2", "(count_nodes {8 {8 {7}} {5}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9 {8 {5} {5 {5}}} {9}}) -> 6", "(count_nodes {8 {3 {3 {7} {2}} {6 {5} {5}}}}) -> 8", "(count_nodes {8 {3} {0 {3}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {2 {0} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {4} {6}}) -> 3", "(count_nodes {9 {7 {4}} {5}}) -> 4", "(count_nodes {1 {5 {4} {0}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {8 {0 {4}} {6 {7}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {4 {3 {1 {0}} {6}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {2}}) -> 2", "(count_nodes {8 {6 {7 {1} {2}} {5}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {5 {6 {1} {4}}} {0 {9 {1} {2}} {7 {6} {8}}}}) -> 12", "(count_nodes {1 {2}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {7 {2} {6}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {7 {6 {9} {3 {4}}}}) -> 5", "(count_nodes {6 {8} {9}}) -> 3", "(count_nodes {3 {6}}) -> 2", "(count_nodes {4 {9}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {0 {2} {6 {4 {7}} {2}}}) -> 6", "(count_nodes {5 {5 {2 {8} {3}} {0 {2} {9}}} {6}}) -> 9", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.249069, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {5}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {4 {8} {6 {0 {7}} {5}}}) -> 6", "(count_nodes {1 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {2 {0 {3} {3}} {7 {0}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {9 {1 {1}} {1 {9}}}) -> 5", "(count_nodes {4 {0}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {4 {9}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {0 {8} {5 {1}}}}) -> 5", "(count_nodes {5 {0} {0}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {2 {0}}}) -> 3", "(count_nodes {7 {3}}) -> 2", "(count_nodes {2 {3 {7}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {1}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {6 {2 {0}} {7}}) -> 4", "(count_nodes {4 {7}}) -> 2", "(count_nodes {6 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {3 {8 {5} {2}} {6 {9}}}}) -> 7", "(count_nodes {0 {4 {6 {5} {9}}}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {3 {6 {9 {3} {2}} {8 {3} {0}}}}) -> 8", "(count_nodes {5 {2} {2 {4} {2}}}) -> 5", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {4 {7} {0}} {4 {2}}} {4}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {1 {4}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.190764, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {3}}) -> 2", "(count_nodes {6 {8} {4 {5 {7} {2}} {8 {1} {9}}}}) -> 9", "(count_nodes {8 {7 {9} {8}}}) -> 4", "(count_nodes {9}) -> 1", "(count_nodes {1 {8}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {4}}) -> 2", "(count_nodes {5 {8 {9 {6} {5}}} {5 {0}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {3 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0 {1 {1 {6}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {3 {0} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1 {0 {6} {3}} {2 {0} {4}}}) -> 7", "(count_nodes {7 {3 {5 {8} {3}} {7 {7} {2}}}}) -> 8", "(count_nodes {2}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {5}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {8 {2} {0}} {1 {8} {3}}}) -> 7", "(count_nodes {9}) -> 1", "(count_nodes {9 {6 {5}} {2 {6}}}) -> 5", "(count_nodes {9 {9 {1}} {6 {1} {0}}}) -> 6", "(count_nodes {4 {0 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {6 {7}}) -> 2", "(count_nodes {8 {6 {1} {4}}}) -> 4", "(count_nodes {3 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0 {7}}) -> 2", "(count_nodes {1 {2} {3 {6} {6}}}) -> 5", "(count_nodes {7}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.293844, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {2}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {9 {3}}) -> 2", "(count_nodes {0 {4} {9}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {0 {1 {9 {0} {9}} {2 {4}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {1 {8 {3} {2}}}) -> 4", "(count_nodes {6 {1} {9 {0} {2}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {5 {8} {4}}) -> 3", "(count_nodes {4 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {0} {6 {4}}}) -> 4", "(count_nodes {8 {5} {9}}) -> 3", "(count_nodes {0 {1} {3 {2 {1}}}}) -> 5", "(count_nodes {2 {6}}) -> 2", "(count_nodes {2 {5 {7 {0} {0}} {5 {7} {9}}} {8}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {4 {8}} {9 {0} {2}}}) -> 6", "(count_nodes {2 {6 {6} {7 {2} {7}}} {6}}) -> 7", "(count_nodes {5 {7 {9}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7 {5 {1}} {1}}) -> 4", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {6 {0}} {7}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {0 {7 {1}}}) -> 3", "(count_nodes {7 {0} {4}}) -> 3", "(count_nodes {4 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {2} {9}}) -> 3", "(count_nodes {1 {1 {9} {0}}}) -> 4", "(count_nodes {1 {1} {4}}) -> 3", "(count_nodes {8 {7 {5}} {7}}) -> 4", "(count_nodes {4 {6} {0 {2} {6}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {0 {9}} {1 {5}}}) -> 5", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.295125, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {6 {2 {9}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8 {6 {0} {8}}}) -> 4", "(count_nodes {3 {4 {5 {0} {3}} {1}}}) -> 6", "(count_nodes {2 {9 {9 {0}}} {1 {4} {8 {2} {7}}}}) -> 9", "(count_nodes {9 {9}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {4}}) -> 2", "(count_nodes {1 {1 {4 {3} {9}}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {7 {7 {6} {4 {4}}} {0}}) -> 6", "(count_nodes {1 {3 {0} {1}}}) -> 4", "(count_nodes {2 {4} {0 {4}}}) -> 4", "(count_nodes {5 {5} {3}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {4 {7} {8 {2}}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {4 {8}}) -> 2", "(count_nodes {6 {4} {3 {1 {5}}}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {4 {6 {4} {1}} {0 {2} {3}}} {0 {9}}}) -> 10", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {1}}) -> 2", "(count_nodes {8 {0 {2}}}) -> 3", "(count_nodes {1 {8 {7 {7}}}}) -> 4", "(count_nodes {8 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {8 {2} {0}} {3 {3} {2}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {6 {3} {0 {0}}}) -> 4", "(count_nodes {2 {6 {7}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.28204, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {4 {4}} {5}}) -> 4", "(count_nodes {9 {5 {8 {5} {4}}} {7 {6} {0 {7}}}}) -> 9", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {1}}) -> 2", "(count_nodes {7 {7} {5}}) -> 3", "(count_nodes {4 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {2 {2}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {0 {4}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {4 {3 {5 {2} {0}} {8 {9}}}}) -> 7", "(count_nodes {7}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {4 {5}}) -> 2", "(count_nodes {7 {6 {0} {9}}}) -> 4", "(count_nodes {0 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {5 {5}} {8 {4}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {7 {9 {9}} {5 {0} {5}}}) -> 6", "(count_nodes {2 {2} {8}}) -> 3", "(count_nodes {6 {0} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0 {0} {4}}) -> 3", "(count_nodes {3 {3} {5}}) -> 3", "(count_nodes {6 {2} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {1 {3 {1}}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {5 {2}}) -> 2", "(count_nodes {9 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {4}}) -> 3", "(count_nodes {5 {7}}) -> 2", "(count_nodes {0 {3} {2 {5 {5}} {7}}}) -> 6", "(count_nodes {8 {9 {0}}}) -> 3", "(count_nodes {6 {7 {1} {5}}}) -> 4"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.32232, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {0 {7} {4}} {4 {5}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {5 {9} {3 {8} {2}}} {9 {5 {5}}}}) -> 9", "(count_nodes {7 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {5} {2 {0}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {0 {3 {1}} {8 {7 {9}} {8 {4}}}}) -> 8", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {0} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {8 {6 {4} {6}} {2 {4 {4}} {3}}}) -> 8", "(count_nodes {6 {8} {6}}) -> 3", "(count_nodes {6 {3}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {9 {8} {6}}) -> 3", "(count_nodes {0 {2 {1} {6}} {3 {3} {1}}}) -> 7", "(count_nodes {2 {6} {1 {4 {7}} {9}}}) -> 6", "(count_nodes {8}) -> 1", "(count_nodes {1 {6}}) -> 2", "(count_nodes {2 {8} {3}}) -> 3", "(count_nodes {2 {2} {2 {0}}}) -> 4", "(count_nodes {1}) -> 1", "(count_nodes {7 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {1} {3 {8 {0}}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {2 {3 {3 {9}} {1 {2} {6}}}}) -> 7", "(count_nodes {1}) -> 1", "(count_nodes {6 {1 {3}}}) -> 3", "(count_nodes {6 {6} {3}}) -> 3", "(count_nodes {8 {3 {9 {9}} {5 {2} {5}}} {4 {3} {1 {1}}}}) -> 11", "(count_nodes {9 {5} {2}}) -> 3", "(count_nodes {8 {2 {5} {4}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {0 {0 {4} {1}}}) -> 4", "(count_nodes {5}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.326248, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {5}}) -> 2", "(count_nodes {1 {2} {3 {9} {9}}}) -> 5", "(count_nodes {7 {5 {1 {0} {4}}} {8}}) -> 6", "(count_nodes {3 {5} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5 {5} {2}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {6 {5 {0} {2}} {5 {4} {3}}}) -> 7", "(count_nodes {2}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {4 {8 {3}} {0 {6} {2}}}) -> 6", "(count_nodes {1 {7 {9}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {7} {4}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {6 {1}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {2 {9 {5} {1}} {6}}) -> 5", "(count_nodes {2 {4} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {7} {6}}) -> 3", "(count_nodes {6 {5} {4}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {8 {3 {7} {3}} {0}}) -> 5", "(count_nodes {4}) -> 1", "(count_nodes {4 {1}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {6 {3} {3}}) -> 3", "(count_nodes {3 {9 {0 {9}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {3} {8}}) -> 3", "(count_nodes {2 {9 {0}}}) -> 3", "(count_nodes {9 {5}}) -> 2", "(count_nodes {3 {4} {3}}) -> 3", "(count_nodes {1 {3 {8 {3} {8}} {8 {8}}}}) -> 7", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {6}}) -> 3", "(count_nodes {1 {3}}) -> 2", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.350865, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {7 {5}} {4 {7}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {3 {8}} {6}}) -> 4", "(count_nodes {0 {6 {5}} {7 {5 {2}} {5 {9}}}}) -> 8", "(count_nodes {4 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {9}}) -> 2", "(count_nodes {0 {2 {2} {4}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {0 {5}}) -> 2", "(count_nodes {2 {4} {4 {2}}}) -> 4", "(count_nodes {2 {6} {5}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {7 {1 {4} {4}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {9 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {8}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {9}}) -> 2", "(count_nodes {7 {9} {2 {1}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {1}}) -> 2", "(count_nodes {8 {4} {8 {0} {2}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {8} {5 {9 {3} {3}} {0}}}) -> 7", "(count_nodes {2 {8} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0 {7}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {2 {6} {2}}) -> 3", "(count_nodes {1 {7 {9}} {7 {8}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {0 {3 {1}} {4 {6} {5}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {9 {6 {4}} {7 {9}}}) -> 5"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.361746, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {3 {6} {0}}}) -> 4", "(count_nodes {9 {2}}) -> 2", "(count_nodes {4 {8 {4} {8 {6}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {0 {6 {0 {4} {8}} {3 {7} {2}}} {0}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {5 {3 {7}}}) -> 3", "(count_nodes {5 {0 {7}}}) -> 3", "(count_nodes {4 {3 {3}} {1}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {5 {6} {7}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {8 {5 {4 {4} {7}} {3 {8} {2}}} {4 {2} {4}}}) -> 11", "(count_nodes {6 {9} {7 {8} {2}}}) -> 5", "(count_nodes {8 {4 {5}} {2 {8} {0}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {2} {1}}) -> 3", "(count_nodes {9 {3 {4}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {1 {3} {8}}) -> 3", "(count_nodes {2 {1 {1}} {7 {6}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {9 {2} {9}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {4 {6} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1 {7}}) -> 2", "(count_nodes {0 {3} {2}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {2}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {8 {5 {9}} {4 {0}}}) -> 5", "(count_nodes {5}) -> 1", "(count_nodes {4 {1 {4 {6} {1}} {0 {4} {1}}} {5}}) -> 9", "(count_nodes {3}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.373427, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {9 {5} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {5 {6 {7} {7}} {0 {3} {5}}}}) -> 8", "(count_nodes {2 {5} {0 {8 {0} {7}} {3 {3}}}}) -> 8", "(count_nodes {4}) -> 1", "(count_nodes {0 {7}}) -> 2", "(count_nodes {1 {4 {8}} {3 {8} {1}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9 {6 {1 {5} {8}} {4 {4} {9}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {3 {8 {0} {4 {4}}} {9}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {3 {3 {9}}}) -> 3", "(count_nodes {8 {8}}) -> 2", "(count_nodes {2 {3 {4}} {3 {7} {7}}}) -> 6", "(count_nodes {9 {8} {4}}) -> 3", "(count_nodes {5 {6 {4} {6}} {0 {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3 {1}}) -> 2", "(count_nodes {1 {5}}) -> 2", "(count_nodes {8 {7}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {1 {3} {7 {8} {7}}}) -> 5", "(count_nodes {0 {5}}) -> 2", "(count_nodes {8 {3 {1}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {3}}) -> 2", "(count_nodes {4 {9}}) -> 2", "(count_nodes {6 {4 {4} {0}} {0}}) -> 5", "(count_nodes {2 {7 {2} {1}}}) -> 4", "(count_nodes {2 {0 {4}}}) -> 3", "(count_nodes {2 {5 {6 {7}} {6 {8} {1}}} {9 {8} {9 {8} {5}}}}) -> 12", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {8} {4 {1} {2}}}) -> 5", "(count_nodes {3 {2} {6 {5} {8}}}) -> 5", "(count_nodes {9 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {3 {1}} {8 {0} {0}}}) -> 6", "(count_nodes {4}) -> 1", "(count_nodes {6 {1} {8}}) -> 3", "(count_nodes {0 {9}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.042393, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {1}}) -> 2", "(count_nodes {9 {4}}) -> 2", "(count_nodes {3 {1} {0}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {8 {3 {6} {7}}}) -> 4", "(count_nodes {0 {5 {9} {3}}}) -> 4", "(count_nodes {6 {4}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {2 {0}}) -> 2", "(count_nodes {8 {4}}) -> 2", "(count_nodes {4 {1 {0 {5}} {4 {8}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {3 {3}} {3 {1 {8} {1}} {3 {2}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {2 {6} {2 {1} {9 {3} {5}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {2 {9}}) -> 2", "(count_nodes {3 {8 {5} {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {8 {3} {1 {9 {4} {8}} {5}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {3 {2} {6}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {5 {5 {7}} {6 {1}}}}) -> 6", "(count_nodes {2 {0 {2} {0}} {2 {0}}}) -> 6", "(count_nodes {0 {7}}) -> 2", "(count_nodes {5 {7} {5}}) -> 3", "(count_nodes {2 {9 {2} {4}}}) -> 4", "(count_nodes {9 {0 {7}} {7 {0}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {5} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {6 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {1} {3 {4} {9}}}) -> 5", "(count_nodes {9 {1} {6 {0} {1}}}) -> 5", "(count_nodes {0 {1 {1 {0}} {1 {5} {1}}} {3}}) -> 8", "(count_nodes {1}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {7 {5 {4}} {4 {2} {6}}}) -> 6"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.015624, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {3}}) -> 2", "(count_nodes {8 {4 {1}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {9 {4 {3}}}) -> 3", "(count_nodes {4}) -> 1", "(count_nodes {4 {3 {0 {8} {8}}} {3 {0 {7}} {0 {0} {5}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {5 {0 {8} {0}}}) -> 4", "(count_nodes {2 {3}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {2 {7 {0} {9}}}) -> 4", "(count_nodes {8 {9}}) -> 2", "(count_nodes {9 {2 {5} {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {5 {0} {8}}) -> 3", "(count_nodes {1 {1 {5} {0}}}) -> 4", "(count_nodes {3 {3} {1}}) -> 3", "(count_nodes {8 {8}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {5 {1 {0 {3}}} {4 {5 {5}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {5 {3 {4} {3}} {9 {5} {7}}}) -> 7", "(count_nodes {5}) -> 1", "(count_nodes {0 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {3}}) -> 2", "(count_nodes {0 {6 {3}}}) -> 3", "(count_nodes {9 {0}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {3 {2 {3 {2} {4}}}}) -> 5", "(count_nodes {9}) -> 1", "(count_nodes {3 {1 {9}} {4}}) -> 4", "(count_nodes {5 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {9} {3 {9 {5} {0}}}}) -> 6", "(count_nodes {3 {6} {0}}) -> 3", "(count_nodes {0 {6}}) -> 2", "(count_nodes {9}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.076932, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {9 {6}}}) -> 3", "(count_nodes {4 {1 {3}}}) -> 3", "(count_nodes {4 {7 {8}}}) -> 3", "(count_nodes {3 {4} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {9 {6} {6}}) -> 3", "(count_nodes {4 {4 {7}}}) -> 3", "(count_nodes {0 {0} {0}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {5 {4 {9} {1}} {3}}) -> 5", "(count_nodes {9 {9} {6}}) -> 3", "(count_nodes {0 {0}}) -> 2", "(count_nodes {8 {9} {3}}) -> 3", "(count_nodes {5 {1 {8 {0} {7}} {3 {3} {0}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {5 {8} {0}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {1 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {9}}) -> 2", "(count_nodes {1 {0} {0}}) -> 3", "(count_nodes {5 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {4}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {2 {0 {8} {1}}}}) -> 5", "(count_nodes {7 {9 {6}} {3 {0} {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3 {5 {0 {5} {1}}}}) -> 5", "(count_nodes {8 {9 {4} {1}}}) -> 4", "(count_nodes {5 {4} {0}}) -> 3", "(count_nodes {8 {8}}) -> 2", "(count_nodes {3 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {5} {9}}) -> 3", "(count_nodes {7 {5} {4 {4}}}) -> 4", "(count_nodes {1 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {1 {5}}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.103574, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {8 {2} {0}}) -> 3", "(count_nodes {7 {1 {4}}}) -> 3", "(count_nodes {8 {9} {6}}) -> 3", "(count_nodes {8 {6}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {0 {2}}) -> 2", "(count_nodes {4 {8}}) -> 2", "(count_nodes {4 {3} {0 {8 {1}} {3}}}) -> 6", "(count_nodes {4 {7}}) -> 2", "(count_nodes {8 {2 {9}}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {3 {7}}}) -> 3", "(count_nodes {7 {6 {5}}}) -> 3", "(count_nodes {5 {2 {7}}}) -> 3", "(count_nodes {3 {2}}) -> 2", "(count_nodes {5 {2 {3}}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {1 {0 {7}}}) -> 3", "(count_nodes {4 {7} {8 {8 {1} {1}}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {4 {6 {3} {3}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {5 {5}}) -> 2", "(count_nodes {2 {0}}) -> 2", "(count_nodes {5 {4 {4 {9}}} {6 {6}}}) -> 6", "(count_nodes {2 {8} {1 {0 {3}}}}) -> 5", "(count_nodes {2 {2} {8 {5} {7}}}) -> 5", "(count_nodes {2 {2 {7} {8}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {1 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {4 {8} {4}}) -> 3", "(count_nodes {5 {9} {9}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {3 {2} {9 {0}}}) -> 4", "(count_nodes {7 {6 {5}} {4 {2}}}) -> 5", "(count_nodes {6 {4}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.01422, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {9}}) -> 2", "(count_nodes {5 {3 {9 {6} {0}} {4}}}) -> 6", "(count_nodes {6 {4} {4}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {9 {0 {7} {0}} {4 {3}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {8 {9} {0}}) -> 3", "(count_nodes {0 {4 {6 {3}} {7 {9} {4}}} {9 {4 {0}} {4}}}) -> 11", "(count_nodes {8 {2 {0 {6} {8}}}}) -> 5", "(count_nodes {1 {0 {1 {5}}} {7 {9 {3} {1}} {0 {7} {8}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {4 {9} {0 {6} {6}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {6 {9} {7}}) -> 3", "(count_nodes {5 {7} {3}}) -> 3", "(count_nodes {4 {0 {4 {5}} {6 {9}}} {6}}) -> 7", "(count_nodes {6 {7 {9} {9}} {5 {9} {4}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {5 {3}}) -> 2", "(count_nodes {7 {9} {1}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {0 {5 {6 {1} {8}}} {8 {2} {8 {6} {3}}}}) -> 10", "(count_nodes {4 {8}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {0 {3} {9 {1}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {0 {9 {0} {1}} {5 {6}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {0 {3 {3} {2}}}) -> 4", "(count_nodes {1 {8}}) -> 2", "(count_nodes {7 {2 {4}} {3}}) -> 4"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.082563, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {0 {9} {1}}) -> 3", "(count_nodes {1 {9 {8 {1}} {0}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {8 {4}}) -> 2", "(count_nodes {9 {4 {8} {1 {6} {0}}}}) -> 6", "(count_nodes {8}) -> 1", "(count_nodes {8 {1} {8 {6 {3}}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {2 {7} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {9} {1}}) -> 3", "(count_nodes {5 {3 {3}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {7 {3 {4}} {0 {8} {7}}} {1 {6 {5}} {5}}}) -> 11", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {5}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {6} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {4 {6 {8 {9}} {9}} {7 {3 {2} {6}} {9 {4} {5}}}}) -> 12", "(count_nodes {9}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {8}}) -> 2", "(count_nodes {5 {0}}) -> 2", "(count_nodes {1 {1 {7} {6}}}) -> 4", "(count_nodes {4 {0 {0 {7}}}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {5 {5 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {7 {1 {0 {6}}}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {3 {8 {9}}}) -> 3", "(count_nodes {4}) -> 1", "(count_nodes {0 {9} {3}}) -> 3", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.048947, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {8 {2 {7 {0}}}}) -> 4", "(count_nodes {7 {7} {2}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {5 {5 {6} {8}}}) -> 4", "(count_nodes {3 {3 {4} {6}}}) -> 4", "(count_nodes {9 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {9 {6 {1} {6}}} {2 {5 {2}} {1 {3}}}}) -> 10", "(count_nodes {8 {0}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {0}}) -> 2", "(count_nodes {3 {3 {4 {4}}} {1 {2}}}) -> 6", "(count_nodes {6}) -> 1", "(count_nodes {9 {9} {6}}) -> 3", "(count_nodes {8 {4 {3 {5} {8}} {2}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {9 {5} {8 {7} {1}}}) -> 5", "(count_nodes {9 {8}}) -> 2", "(count_nodes {8 {5 {7}}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {1 {6} {0}}) -> 3", "(count_nodes {6 {1 {6} {2 {1} {0}}}}) -> 6", "(count_nodes {6 {4 {7} {9}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {8 {2 {8}} {4}}) -> 4", "(count_nodes {1 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {7} {9}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {7 {3} {7}}) -> 3", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.048353, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {4 {2} {5 {2 {3}} {8 {3} {1}}}}) -> 8", "(count_nodes {2}) -> 1", "(count_nodes {9 {0 {1 {6} {9}}}}) -> 5", "(count_nodes {3 {5 {1 {8} {7}}}}) -> 5", "(count_nodes {8 {9} {4}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {9 {5}}) -> 2", "(count_nodes {6 {1 {5}}}) -> 3", "(count_nodes {2 {0}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {2 {7} {4}}) -> 3", "(count_nodes {7 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {7 {3 {4 {4}}} {0}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {3 {1}}) -> 2", "(count_nodes {2 {7}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {3 {7}}) -> 2", "(count_nodes {5 {9}}) -> 2", "(count_nodes {9 {5}}) -> 2", "(count_nodes {3 {3} {2}}) -> 3", "(count_nodes {0 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {2 {5 {5} {0}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {4 {5} {2}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {3 {6 {3} {4}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {3 {5} {5}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {1 {7}}) -> 2", "(count_nodes {1 {2 {9} {5}} {3 {1} {7}}}) -> 7", "(count_nodes {7 {6}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {0 {3 {3} {8}} {1 {7} {7}}}) -> 7", "(count_nodes {9}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {9 {5 {9}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {5}}) -> 2", "(count_nodes {5 {3 {7} {6}} {0 {7}}}) -> 6"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.030322, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {3 {5}}) -> 2", "(count_nodes {5 {1 {6} {4}}}) -> 4", "(count_nodes {1 {5} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {5} {9}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {2 {1}}) -> 2", "(count_nodes {6 {9 {0 {8}} {8 {8}}} {7 {9 {8}} {7 {3}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {6 {8 {8} {3}}} {7}}) -> 6", "(count_nodes {6 {6} {0}}) -> 3", "(count_nodes {7 {5 {4 {1}} {2 {2} {3}}}}) -> 7", "(count_nodes {6}) -> 1", "(count_nodes {5 {0} {2}}) -> 3", "(count_nodes {7 {7 {2 {2} {5}} {0 {6}}}}) -> 7", "(count_nodes {6 {6}}) -> 2", "(count_nodes {3 {4 {2 {3} {3}}}}) -> 5", "(count_nodes {7 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {0}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {6 {3} {3}}) -> 3", "(count_nodes {7 {3} {7}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {3}}) -> 2", "(count_nodes {1 {6} {2}}) -> 3", "(count_nodes {1 {4} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {7 {3}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {7 {3}}) -> 2", "(count_nodes {4 {2 {4}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {9}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {6 {4}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {8 {0} {0 {6} {3}}}) -> 5"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.016682, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {8 {7}}}) -> 3", "(count_nodes {6 {4} {4 {2}}}) -> 4", "(count_nodes {5 {2} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {7} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {6}}) -> 2", "(count_nodes {6 {3 {9} {6 {5}}}}) -> 5", "(count_nodes {2 {5}}) -> 2", "(count_nodes {1 {2 {9 {9}} {2 {8} {8}}}}) -> 7", "(count_nodes {7 {5}}) -> 2", "(count_nodes {4 {1 {9} {0}}}) -> 4", "(count_nodes {6 {4}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {0}}) -> 2", "(count_nodes {8 {0} {2 {3} {6}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {2} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {5}}) -> 2", "(count_nodes {8 {4 {5}}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {1 {6} {2}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {4}}) -> 2", "(count_nodes {7 {8} {4}}) -> 3", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.120223, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {6} {1}}) -> 3", "(count_nodes {2 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {5} {6}}) -> 3", "(count_nodes {8 {2 {8} {9}} {4}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {5 {0}} {8 {7}}}) -> 5", "(count_nodes {9 {1} {1}}) -> 3", "(count_nodes {3 {0}}) -> 2", "(count_nodes {4 {7} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {6} {7}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {3 {9} {6}}) -> 3", "(count_nodes {2 {8 {5} {8}}}) -> 4", "(count_nodes {5 {0 {3}}}) -> 3", "(count_nodes {4 {3 {6} {6 {3} {7}}}}) -> 6", "(count_nodes {8 {3 {8} {0}}}) -> 4", "(count_nodes {8 {1 {1}}}) -> 3", "(count_nodes {0 {4 {5 {9}}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {5} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1 {2 {7} {0 {5}}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {1 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {9}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {8 {9} {7}}) -> 3", "(count_nodes {5 {6}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {4 {0}}) -> 2", "(count_nodes {1 {7} {7}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {9}}) -> 2", "(count_nodes {7 {3}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.208935, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {9 {4} {3}}}) -> 4", "(count_nodes {0 {8}}) -> 2", "(count_nodes {4 {9} {1}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {0 {3}}) -> 2", "(count_nodes {9 {7 {7}}}) -> 3", "(count_nodes {4 {0 {4}} {5 {3}}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {1 {4} {4}}) -> 3", "(count_nodes {3 {6 {8}}}) -> 3", "(count_nodes {0 {1} {5}}) -> 3", "(count_nodes {3 {4} {9}}) -> 3", "(count_nodes {4 {4} {5}}) -> 3", "(count_nodes {2 {0 {2 {7}} {2 {2}}}}) -> 6", "(count_nodes {6}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {5 {6 {5}} {7 {5} {4}}}) -> 6", "(count_nodes {9 {8 {8 {4}} {6 {7}}} {5 {5 {3}}}}) -> 9", "(count_nodes {8 {7} {4}}) -> 3", "(count_nodes {6 {5} {0 {6} {1 {4} {0}}}}) -> 7", "(count_nodes {8 {1}}) -> 2", "(count_nodes {5 {8}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {6} {7}}) -> 3", "(count_nodes {0 {2 {7 {4}} {5}}}) -> 5", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {0}}) -> 2", "(count_nodes {3 {0 {1 {5}} {0 {3}}}}) -> 6", "(count_nodes {1 {1}}) -> 2", "(count_nodes {6 {4 {9}} {2 {1 {9} {9}}}}) -> 7", "(count_nodes {1}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {9 {2 {8}}}) -> 3", "(count_nodes {7 {8 {1}} {5}}) -> 4", "(count_nodes {8 {3} {4 {6} {9}}}) -> 5", "(count_nodes {2 {1 {3}} {2 {6} {3}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {2 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {6 {4 {3}}}) -> 3", "(count_nodes {1 {8}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.286325, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {0} {4}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {5}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {6 {2}}) -> 2", "(count_nodes {0 {2 {8} {8}} {8 {3}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {4 {3} {0 {8} {1}}}) -> 5", "(count_nodes {2 {2 {5} {3 {1} {2}}} {0 {3 {4} {1}} {0 {2} {5}}}}) -> 13", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {0} {0}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {3 {7 {7 {3}} {0}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {5 {6} {8 {7 {3} {0}}}}) -> 6", "(count_nodes {5 {5 {2}} {8 {2 {6}}}}) -> 6", "(count_nodes {2 {2 {4} {4}}}) -> 4", "(count_nodes {1 {7 {5}} {5 {6} {1}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {6 {3 {9 {0} {7}}}}) -> 5", "(count_nodes {7 {5} {5}}) -> 3", "(count_nodes {6 {0 {9 {6}} {6}}}) -> 5", "(count_nodes {5 {4} {5}}) -> 3", "(count_nodes {2 {2} {3}}) -> 3", "(count_nodes {2 {7} {7}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {3 {5} {9}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {6 {6 {2} {3}}} {0}}) -> 6", "(count_nodes {1 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {1 {3}}) -> 2", "(count_nodes {6 {1} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {9}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {8}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.161508, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {0 {2 {9} {7}} {7 {7} {4}}} {2 {7 {3}}}}) -> 11", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {8 {8}}) -> 2", "(count_nodes {8 {8} {0}}) -> 3", "(count_nodes {5 {2 {4}} {7 {0} {5}}}) -> 6", "(count_nodes {0 {6 {0 {0}}} {0 {8}}}) -> 6", "(count_nodes {9 {7} {5}}) -> 3", "(count_nodes {1 {0}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {9 {8} {8}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {1 {0 {3 {9}}} {2 {8 {3} {0}} {4 {0} {8}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {8 {9 {0} {0}}}) -> 4", "(count_nodes {3 {8}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {4 {8 {6} {9 {3} {4}}}}) -> 6", "(count_nodes {0 {7}}) -> 2", "(count_nodes {8 {5 {6} {9}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {0 {6}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {3} {5 {3} {9}}}) -> 5", "(count_nodes {3 {7 {9} {1}} {2 {5} {8}}}) -> 7", "(count_nodes {1 {2}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {9 {5 {1}} {8 {9}}}) -> 5", "(count_nodes {7 {0 {0}} {3}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {3 {5} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {7} {8 {7}}}) -> 4", "(count_nodes {0 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {8 {1 {7} {1}} {1}}) -> 5", "(count_nodes {2 {2 {5 {7}} {7 {3}}} {1 {9 {9}}}}) -> 9", "(count_nodes {1 {4} {3 {1}}}) -> 4", "(count_nodes {4 {7}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {6 {4}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.484106, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {6 {6 {8}} {8 {3}}} {4 {3} {7 {0} {7}}}}) -> 11", "(count_nodes {5}) -> 1", "(count_nodes {4 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4 {2 {6} {8 {8} {0}}} {4}}) -> 7", "(count_nodes {4 {8} {7}}) -> 3", "(count_nodes {7 {5 {3}} {6 {4}}}) -> 5", "(count_nodes {6 {8} {2 {4 {9} {6}} {4 {0} {0}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {5 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {5} {4}}) -> 3", "(count_nodes {2 {8 {7}} {2 {6} {6}}}) -> 6", "(count_nodes {6}) -> 1", "(count_nodes {1 {7}}) -> 2", "(count_nodes {8 {6} {5}}) -> 3", "(count_nodes {6 {4 {6 {2} {0}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {8 {2}}) -> 2", "(count_nodes {2 {1 {5} {2}}}) -> 4", "(count_nodes {5 {0 {8 {1}}} {6}}) -> 5", "(count_nodes {5 {1}}) -> 2", "(count_nodes {5 {9 {3 {2} {6}} {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {0 {7 {6 {3}}}}) -> 4", "(count_nodes {2 {7}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {2 {7}}) -> 2", "(count_nodes {9 {8 {9}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {3 {4}} {3 {4} {1}}}) -> 6", "(count_nodes {7 {6 {1 {1} {7}} {2 {7} {1}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1 {9 {8}}}) -> 3", "(count_nodes {9 {1 {9} {8 {9}}} {6 {6} {9 {7} {8}}}}) -> 10", "(count_nodes {4 {3} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {2 {1 {0 {1} {6}}} {6 {1 {5} {8}}}}) -> 9"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.466675, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {5} {6}}) -> 3", "(count_nodes {9 {2 {0}}}) -> 3", "(count_nodes {6 {2}}) -> 2", "(count_nodes {6 {2} {4 {6 {2}}}}) -> 5", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {4 {6 {5} {3}}} {0 {4 {8}} {1 {5}}}}) -> 10", "(count_nodes {3 {6}}) -> 2", "(count_nodes {8 {5}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {4 {8 {6}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {7 {4 {0}} {6 {2} {8}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {8 {5} {0}} {2 {8}}}) -> 6", "(count_nodes {1 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {8 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {4} {2 {7}}}) -> 4", "(count_nodes {7 {7} {4}}) -> 3", "(count_nodes {2 {0} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {6}}) -> 2", "(count_nodes {1 {3} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1 {3} {1}}) -> 3", "(count_nodes {0 {1}}) -> 2", "(count_nodes {5 {6 {7 {7} {7}} {4 {9}}} {4 {6 {0} {2}} {5}}}) -> 12", "(count_nodes {2}) -> 1", "(count_nodes {8 {2 {2} {6}} {0 {6}}}) -> 6", "(count_nodes {9 {5 {9}} {4 {9}}}) -> 5", "(count_nodes {8 {5 {3 {2}} {0 {6} {5}}}}) -> 7", "(count_nodes {8 {7 {7}} {0 {0}}}) -> 5", "(count_nodes {8 {2 {2 {7}}}}) -> 4", "(count_nodes {8 {6}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {9 {0 {4} {8}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0 {6} {5}}) -> 3", "(count_nodes {6 {3}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.724769, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {1 {1 {8}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {4 {3}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {2 {4 {7}}} {7 {2 {7}} {3 {0}}}}) -> 9", "(count_nodes {7}) -> 1", "(count_nodes {0 {6}}) -> 2", "(count_nodes {6 {9 {3 {8}} {5 {5}}} {6 {2 {5} {3}}}}) -> 10", "(count_nodes {}) -> 0", "(count_nodes {0 {7}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {1 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {0} {4}}) -> 3", "(count_nodes {3 {9}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {5 {1} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {8 {2} {8}}) -> 3", "(count_nodes {2 {0}}) -> 2", "(count_nodes {6 {0 {6} {7}}}) -> 4", "(count_nodes {6 {6 {4 {9}}} {9}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {8 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {1 {2 {1}} {2 {6} {7}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {6 {9} {7}}) -> 3", "(count_nodes {0 {5 {3 {3}} {5 {0} {0}}} {1 {7 {4} {8}} {3 {0} {4}}}}) -> 14", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {2 {1 {9}} {4 {5} {2}}}) -> 6", "(count_nodes {7 {4}}) -> 2", "(count_nodes {1 {5}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.670157, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {4} {2}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {9 {1 {3} {8}}}) -> 4", "(count_nodes {3 {3 {3} {0}}}) -> 4", "(count_nodes {1 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {9 {1}}) -> 2", "(count_nodes {9 {4} {5}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {6 {8} {9}}) -> 3", "(count_nodes {8 {1 {1} {0 {7}}} {7 {1 {6} {8}}}}) -> 9", "(count_nodes {5 {3 {3} {6}} {8}}) -> 5", "(count_nodes {5 {0} {8}}) -> 3", "(count_nodes {7 {8 {8} {1}} {2}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6 {9 {7}}}) -> 3", "(count_nodes {7 {0 {2 {4}}}}) -> 4", "(count_nodes {7 {0 {1 {1}} {5 {2}}} {2 {7}}}) -> 8", "(count_nodes {0 {9 {7} {7 {7} {0}}} {1 {7 {5} {9}}}}) -> 10", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {5 {7 {9} {1}}}) -> 4", "(count_nodes {1 {3} {3}}) -> 3", "(count_nodes {7 {0 {0}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {8}}) -> 2", "(count_nodes {1 {0}}) -> 2", "(count_nodes {0 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.78947, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {5 {4} {0}}}) -> 4", "(count_nodes {2 {8}}) -> 2", "(count_nodes {5 {6 {6} {8}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {5} {6}}) -> 3", "(count_nodes {3 {2}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {3 {8 {3 {5} {9}}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {1} {6}}) -> 3", "(count_nodes {6 {1} {4 {5 {3}}}}) -> 5", "(count_nodes {0 {3 {0}}}) -> 3", "(count_nodes {2 {1 {8} {1 {1}}} {2}}) -> 6", "(count_nodes {2 {0}}) -> 2", "(count_nodes {0 {2 {7}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {9 {2}}) -> 2", "(count_nodes {5 {6 {0}}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {7 {3}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {7 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {0}}) -> 2", "(count_nodes {4 {0} {7}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {0 {1}}) -> 2", "(count_nodes {0 {6 {3}}}) -> 3", "(count_nodes {3 {7 {3} {9 {2}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {9}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {3 {2} {4 {5} {7 {1}}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {0 {6} {3}}}) -> 4", "(count_nodes {3 {8 {5} {8 {0}}} {2 {0}}}) -> 7", "(count_nodes {1}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {8 {5}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {7 {4 {6 {1}}}}) -> 4", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.816298, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {5}}) -> 2", "(count_nodes {6 {4 {9} {5 {7} {1}}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {9 {8}}) -> 2", "(count_nodes {8 {5 {2}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {4} {9}}) -> 3", "(count_nodes {1 {6 {0}}}) -> 3", "(count_nodes {9 {6}}) -> 2", "(count_nodes {7 {8 {3} {4}} {1 {9 {2} {3}} {4 {5} {9}}}}) -> 11", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {2} {8}}) -> 3", "(count_nodes {6 {6 {5 {2}} {3 {1}}} {7 {7 {4}}}}) -> 9", "(count_nodes {1}) -> 1", "(count_nodes {2 {7} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {7} {5 {9 {3}} {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {0}}}) -> 3", "(count_nodes {7 {1} {5}}) -> 3", "(count_nodes {0 {0 {6 {5}}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {5 {5 {2}} {7 {5} {2}}} {3 {7 {0} {2}} {5 {1}}}}) -> 13", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {5}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {3 {2 {1} {7}} {3 {0}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {0}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.782468, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {7} {3 {4} {5}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {8 {3 {4 {6}} {0 {4} {8}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {3 {6 {0} {7}}}) -> 4", "(count_nodes {0 {0} {6 {0 {4} {2}} {8}}}) -> 7", "(count_nodes {4 {1}}) -> 2", "(count_nodes {7 {6}}) -> 2", "(count_nodes {8 {2 {0 {9} {0}} {6 {0} {2}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {6 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {5 {1 {5}}} {9}}) -> 5", "(count_nodes {8 {0 {3 {3} {0}}}}) -> 5", "(count_nodes {9 {9}}) -> 2", "(count_nodes {1 {1 {1 {5}} {4 {2}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {8 {6} {5}} {4 {8} {3}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {8 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {5 {6}}}) -> 3", "(count_nodes {7 {5}}) -> 2", "(count_nodes {0 {6 {4} {8}} {2}}) -> 5", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {0}}) -> 2", "(count_nodes {6 {5 {8} {2}} {6}}) -> 5", "(count_nodes {9}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {2 {2} {4}}) -> 3", "(count_nodes {5 {6}}) -> 2", "(count_nodes {2 {4 {3 {9}}} {8 {1 {9}}}}) -> 7", "(count_nodes {5 {7}}) -> 2", "(count_nodes {0 {3} {2}}) -> 3", "(count_nodes {1 {3} {8 {5} {9}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {7 {4}}) -> 2", "(count_nodes {5 {2}}) -> 2", "(count_nodes {4 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {9 {3} {6}}) -> 3", "(count_nodes {9 {6 {2 {3}}} {1 {1 {1} {9}} {3}}}) -> 9"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.879806, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {7 {8 {7} {1}} {3 {2} {5}}}) -> 7", "(count_nodes {1 {5 {4}} {2 {0}}}) -> 5", "(count_nodes {4 {7 {1 {0} {0}}} {9 {3 {7}} {7 {0} {3}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {0 {9 {1}}}) -> 3", "(count_nodes {5 {5 {6} {9 {4}}}}) -> 5", "(count_nodes {1 {9} {9}}) -> 3", "(count_nodes {4 {6 {2} {6}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {0 {0} {9 {9} {7}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {8}}) -> 2", "(count_nodes {6 {8} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6 {7} {5}}) -> 3", "(count_nodes {0 {6 {9 {8} {1}} {0 {5} {2}}}}) -> 8", "(count_nodes {9}) -> 1", "(count_nodes {9 {7} {1 {8 {5}}}}) -> 5", "(count_nodes {2 {9} {7}}) -> 3", "(count_nodes {3 {0}}) -> 2", "(count_nodes {8 {1} {0 {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {5}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {8 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {7 {9 {1}}}) -> 3", "(count_nodes {6 {0 {3} {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {5 {4 {0}} {8 {0} {5}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {7 {1}}) -> 2", "(count_nodes {2 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {6}}) -> 2", "(count_nodes {7 {4 {1}}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.999929, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {1} {2 {8} {8}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4 {5 {2 {0} {9}} {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {4 {2 {3}} {5 {8 {9} {9}} {9 {4}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {0 {8 {5} {2}}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {3 {1}}) -> 2", "(count_nodes {4 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {2 {1}}}) -> 3", "(count_nodes {9 {5} {0}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {3 {7} {8 {2}}} {7 {3}}}) -> 7", "(count_nodes {0 {3} {5}}) -> 3", "(count_nodes {0 {7 {0}}}) -> 3", "(count_nodes {7 {1 {8} {2}} {0 {6}}}) -> 6", "(count_nodes {5}) -> 1", "(count_nodes {3 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {9 {7} {3}} {1 {3}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {1 {4 {3}}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {9}}) -> 2", "(count_nodes {2 {7 {7 {1}}} {0 {7} {9 {5} {0}}}}) -> 9", "(count_nodes {1 {3 {4} {3}}}) -> 4", "(count_nodes {7 {9} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {9 {7}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {0 {6} {6}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {9 {9} {9 {6 {3} {7}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {3 {5 {9} {6 {0} {2}}} {5 {0 {3} {9}}}}) -> 10"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.744342, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {3}}) -> 2", "(count_nodes {2 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2 {3}}) -> 2", "(count_nodes {8 {0} {5 {6}}}) -> 4", "(count_nodes {4 {2 {6} {6}} {9}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {5 {3 {0 {7} {1}} {6 {2}}} {6 {5 {8} {9}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {7 {3}}) -> 2", "(count_nodes {2 {4}}) -> 2", "(count_nodes {3 {5}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {2 {7}} {5 {7} {8}}}) -> 6", "(count_nodes {9 {5 {1} {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {3 {3 {2}} {5 {4 {6}}}}) -> 6", "(count_nodes {2 {2 {5 {9} {4}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {8 {8 {6} {1}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {7} {5}}) -> 3", "(count_nodes {2 {3 {5} {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {9 {7} {8}}) -> 3", "(count_nodes {7 {3}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {4 {3}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {2 {3}}) -> 2", "(count_nodes {2 {3 {8 {4}}} {5 {3 {5}}}}) -> 7", "(count_nodes {0 {4 {1 {7}}}}) -> 4", "(count_nodes {7 {7} {9}}) -> 3", "(count_nodes {3 {0} {7}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {8 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.637586, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {5}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {7}}) -> 2", "(count_nodes {7 {7 {6}}}) -> 3", "(count_nodes {3 {0 {4 {4} {3}}} {5 {6} {1 {3}}}}) -> 9", "(count_nodes {1 {7}}) -> 2", "(count_nodes {5 {9 {6} {6}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {3 {5}}) -> 2", "(count_nodes {1 {2 {2 {3} {7}}} {4 {7}}}) -> 7", "(count_nodes {0}) -> 1", "(count_nodes {6 {8 {9 {6} {3}} {2 {9} {5}}} {9}}) -> 9", "(count_nodes {3 {6}}) -> 2", "(count_nodes {3 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {7}}) -> 2", "(count_nodes {7 {3} {1}}) -> 3", "(count_nodes {6 {7 {5}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {0 {8} {6 {6 {4}} {5}}}) -> 6", "(count_nodes {0 {8} {1 {5 {8} {8}} {2 {0} {3}}}}) -> 9", "(count_nodes {1}) -> 1", "(count_nodes {4 {8 {6}} {4}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {2 {4 {5}}}) -> 3", "(count_nodes {2 {9}}) -> 2", "(count_nodes {5 {4 {9 {6}}} {3 {1 {0}} {9}}}) -> 8", "(count_nodes {2 {2}}) -> 2", "(count_nodes {6 {3 {7 {8} {3}} {9 {0} {0}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {7 {7 {6} {4}} {2 {1}}}) -> 6", "(count_nodes {8}) -> 1", "(count_nodes {0 {8} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {9 {7}} {0 {4 {1}} {4}}}) -> 7", "(count_nodes {5}) -> 1", "(count_nodes {1 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2 {2} {0}}) -> 3", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.11777, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {5 {0}} {4}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {5 {9}}) -> 2", "(count_nodes {3 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {3 {3 {4} {8}}}) -> 4", "(count_nodes {4 {5 {2} {6}} {0 {9}}}) -> 6", "(count_nodes {7 {4 {4} {4}} {3 {3} {8}}}) -> 7", "(count_nodes {1 {1 {4 {1} {7}} {7 {2}}}}) -> 7", "(count_nodes {4 {7 {5} {2}}}) -> 4", "(count_nodes {2 {8 {4}} {5 {5} {0}}}) -> 6", "(count_nodes {6}) -> 1", "(count_nodes {2 {5}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {4 {1} {6 {0 {0}}}}) -> 5", "(count_nodes {9 {3 {5 {1} {3}} {2}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {0 {7}} {3 {1 {4} {7}} {4}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {1 {3 {8}} {7 {7} {4}}}) -> 6", "(count_nodes {6 {6} {2}}) -> 3", "(count_nodes {3 {4 {3}} {6 {4 {3} {8}}}}) -> 7", "(count_nodes {3 {8 {8}}}) -> 3", "(count_nodes {1 {5} {4}}) -> 3", "(count_nodes {1 {6}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {5 {1 {8} {8}} {7}}}) -> 6", "(count_nodes {8 {0}}) -> 2", "(count_nodes {6 {2}}) -> 2", "(count_nodes {6 {2 {4} {6}}}) -> 4", "(count_nodes {4 {2} {3 {3}}}) -> 4", "(count_nodes {7 {4} {8}}) -> 3", "(count_nodes {4 {0 {2} {0}} {4}}) -> 5"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.235903, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {5}}) -> 2", "(count_nodes {5 {7}}) -> 2", "(count_nodes {9 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {8}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {9 {4} {2 {3 {4} {4}} {1 {6} {2}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {0 {3 {3 {2}} {4 {1} {7}}} {2}}) -> 8", "(count_nodes {7 {0}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {6}}) -> 2", "(count_nodes {4 {3} {6}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {1 {4} {8}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {8 {9 {2} {5 {4} {9}}} {8}}) -> 7", "(count_nodes {5 {7 {1}}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {6 {9}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {4 {2 {2 {9}} {1 {2}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3 {3 {3 {3}} {4}} {5}}) -> 6", "(count_nodes {0 {9 {8 {2}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {8 {5 {5} {6 {3}}} {2}}) -> 6", "(count_nodes {2}) -> 1", "(count_nodes {3 {4 {2} {6}} {6 {7}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {2 {5 {3}}}) -> 3", "(count_nodes {2 {3 {1} {1}} {5 {5}}}) -> 6", "(count_nodes {5 {4}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {2 {5}}) -> 2", "(count_nodes {1 {9}}) -> 2", "(count_nodes {6 {8 {0 {6}}}}) -> 4", "(count_nodes {2 {1 {5}}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.052197, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {7} {8}}) -> 3", "(count_nodes {4 {3 {8} {7 {5} {0}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3 {8 {4 {5} {3}}}}) -> 5", "(count_nodes {8 {1 {5} {9}} {7 {6} {5}}}) -> 7", "(count_nodes {6 {0} {7 {1} {6}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {8 {9}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {1 {7} {0 {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {1} {4}}) -> 3", "(count_nodes {8 {7} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {8 {4} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {4 {1} {9}} {6 {9}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {5 {1}}}) -> 3", "(count_nodes {9 {6}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {1 {5 {0} {4}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {5 {8 {2} {6}} {4}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {5 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {2 {4 {5 {9}}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {2}}) -> 2", "(count_nodes {5 {7}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {5 {8 {9}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {6 {0}}) -> 2", "(count_nodes {9 {6} {1}}) -> 3", "(count_nodes {6}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.262515, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {3}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {2 {9 {0} {1}} {0}}) -> 5", "(count_nodes {0 {3} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {3 {3}}}) -> 3", "(count_nodes {0 {8}}) -> 2", "(count_nodes {7 {6 {8 {5}}} {4 {8 {5} {1}}}}) -> 8", "(count_nodes {1}) -> 1", "(count_nodes {4 {5 {5} {3 {2}}} {0 {7 {0}} {5}}}) -> 9", "(count_nodes {4 {2}}) -> 2", "(count_nodes {2 {5} {4}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {5 {8 {9} {3}}}) -> 4", "(count_nodes {5 {6 {1} {9}} {0 {7} {9}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {3 {2} {6}}) -> 3", "(count_nodes {1 {0}}) -> 2", "(count_nodes {8 {8}}) -> 2", "(count_nodes {9 {7 {8} {6 {6} {4}}}}) -> 6", "(count_nodes {7 {2}}) -> 2", "(count_nodes {9 {2} {9 {8}}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {7 {9 {1}} {0}} {8 {5} {2 {4} {8}}}}) -> 10", "(count_nodes {4}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {4 {3 {4 {1} {3}} {8 {7}}} {7 {0} {2}}}) -> 10", "(count_nodes {9 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {5} {2}}) -> 3", "(count_nodes {2 {9}}) -> 2", "(count_nodes {4 {8 {2} {9}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {6 {4}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {9 {3 {5}}}) -> 3", "(count_nodes {8 {7}}) -> 2", "(count_nodes {2 {5 {2}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.291055, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {8 {6 {8 {7} {9}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {2 {6}}) -> 2", "(count_nodes {3 {1 {8 {7}}}}) -> 4", "(count_nodes {4 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {9 {3 {9}} {1 {8}}}) -> 5", "(count_nodes {4 {2} {6}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {7}}) -> 2", "(count_nodes {9 {6 {1} {5}} {3 {9}}}) -> 6", "(count_nodes {7 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {3 {6 {6} {9}} {9 {0} {3}}}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {8 {6}}) -> 2", "(count_nodes {6 {5 {9 {2}}}}) -> 4", "(count_nodes {1}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {0 {5 {5}} {3 {5} {1}}}) -> 6", "(count_nodes {0 {6}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {0 {4 {0}} {8}}) -> 4", "(count_nodes {7 {9} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {1}}) -> 2", "(count_nodes {3 {6}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {2}}) -> 2", "(count_nodes {3 {0}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.583557, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {4 {4 {4} {2}} {5}} {0}}) -> 7", "(count_nodes {7 {9} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {9 {2}} {9 {8}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {6 {8}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {8}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {4}}) -> 2", "(count_nodes {7 {3 {5 {4}}}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {8 {2 {6 {4}}} {8}}) -> 5", "(count_nodes {4 {1 {6} {8}}}) -> 4", "(count_nodes {5 {7} {4}}) -> 3", "(count_nodes {0 {9 {6}}}) -> 3", "(count_nodes {6 {0}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {2 {7} {2}}) -> 3", "(count_nodes {0 {9} {8 {2 {1} {4}}}}) -> 6", "(count_nodes {3 {0}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {2 {0} {5 {0 {0} {3}} {8 {7}}}}) -> 8", "(count_nodes {3 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {2} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {7 {7 {5}} {0}}) -> 4", "(count_nodes {1 {1 {1 {2} {7}} {1}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.513482, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {9 {3 {3}} {2 {2}}} {5 {2 {6} {1}} {7}}}) -> 11", "(count_nodes {4 {0} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {7 {6}}}) -> 3", "(count_nodes {3 {3} {9 {7}}}) -> 4", "(count_nodes {5 {4 {1 {3} {7}} {6 {2} {2}}}}) -> 8", "(count_nodes {5 {6}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {7 {0}}) -> 2", "(count_nodes {5 {6 {2} {5}} {5 {6} {2}}}) -> 7", "(count_nodes {5 {0 {6 {6}}} {3 {5 {4} {0}} {9}}}) -> 9", "(count_nodes {5 {0}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {1 {8} {8}}) -> 3", "(count_nodes {2 {1} {3}}) -> 3", "(count_nodes {6 {2} {6}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {6 {8 {8 {2} {7}} {7 {9} {2}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {4 {8 {5}} {9 {6} {0}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {8 {0}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {6}}) -> 2", "(count_nodes {2 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {4 {7} {6}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {8 {0 {1}}}}) -> 4", "(count_nodes {4 {4} {2}}) -> 3", "(count_nodes {7 {3} {5 {6}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {9 {8}}) -> 2", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.218491, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {2 {1} {4}}}) -> 4", "(count_nodes {5}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {9 {3 {2} {7 {3}}} {6}}) -> 6", "(count_nodes {5 {7} {7}}) -> 3", "(count_nodes {5 {3}}) -> 2", "(count_nodes {5 {6}}) -> 2", "(count_nodes {8 {1} {7 {9 {7} {9}} {7 {7} {8}}}}) -> 9", "(count_nodes {3 {8 {3}} {5 {7} {2}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {0 {5 {2}}}) -> 3", "(count_nodes {7 {9 {4 {2} {6}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {7 {3 {4 {8}} {4 {7}}} {1}}) -> 7", "(count_nodes {0 {1 {1}} {3}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {1 {8 {5 {7}} {0}} {6 {4 {9} {3}} {9}}}) -> 10", "(count_nodes {1 {1 {4}} {0 {9} {7 {9}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {0 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {0 {8 {9}} {2 {2} {6}}} {7 {2 {7} {5}} {2 {1} {4}}}}) -> 14", "(count_nodes {}) -> 0", "(count_nodes {2 {0}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {6 {5} {6}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {1 {4}} {1}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {3 {2}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {5 {0}}) -> 2", "(count_nodes {7 {9}}) -> 2", "(count_nodes {7 {2 {7}} {4}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {9 {1 {7} {9}} {5 {2}}}}) -> 7", "(count_nodes {3 {5 {7 {9}} {2 {2}}} {9 {5} {1}}}) -> 9", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.725105, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {7}}) -> 2", "(count_nodes {2 {6 {9 {6}}}}) -> 4", "(count_nodes {4 {0}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {0 {1} {8}}) -> 3", "(count_nodes {8 {8 {5 {8} {9}}} {7}}) -> 6", "(count_nodes {8}) -> 1", "(count_nodes {4 {4} {3 {8} {5}}}) -> 5", "(count_nodes {3 {9 {7} {7}} {2 {6} {3}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {8 {3}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {4 {0}}) -> 2", "(count_nodes {3 {0} {3}}) -> 3", "(count_nodes {6 {4} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {5 {5 {2}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6 {7 {8}} {6 {0 {3}}}}) -> 6", "(count_nodes {2 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {0}}) -> 2", "(count_nodes {7 {3 {6}}}) -> 3", "(count_nodes {2 {2 {9}} {0 {2}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {7}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {2 {9 {6 {6} {3}} {2 {5}}}}) -> 7", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {9 {2 {5} {8}}}}) -> 5", "(count_nodes {4 {7} {9}}) -> 3", "(count_nodes {1 {7} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {3} {3 {6} {9}}}) -> 5", "(count_nodes {8 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {5} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5 {5 {7}} {1}}) -> 4", "(count_nodes {7 {6} {0 {1 {3} {3}}}}) -> 6"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.705516, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {2 {0 {6} {0}} {8}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {3 {5}} {8 {1} {0}}}) -> 6", "(count_nodes {2 {2} {1}}) -> 3", "(count_nodes {5 {7}}) -> 2", "(count_nodes {4 {3 {0}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {3} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {6 {0}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {2 {5 {4}}} {1}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {3 {0}}) -> 2", "(count_nodes {1 {6 {8 {2}} {9 {0}}}}) -> 6", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {9 {2 {8} {4}} {1 {7} {9}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {7 {2 {9 {9}} {6 {7} {5}}}}) -> 7", "(count_nodes {9 {9} {4}}) -> 3", "(count_nodes {3 {2} {0}}) -> 3", "(count_nodes {3 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {3 {5}}) -> 2", "(count_nodes {3 {9} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {5 {9 {8}} {0 {1}}}}) -> 7", "(count_nodes {6 {4 {9}}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {0} {0}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {5 {7}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.755187, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {6} {7}}) -> 3", "(count_nodes {7 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {4 {2}}}) -> 3", "(count_nodes {3 {0 {9 {8}}} {0 {4 {3} {2}} {6 {1} {1}}}}) -> 11", "(count_nodes {1}) -> 1", "(count_nodes {0 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {3} {0}}) -> 3", "(count_nodes {0 {8 {4}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {1 {8}}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {3 {0} {4}}) -> 3", "(count_nodes {9 {1 {9} {9}}}) -> 4", "(count_nodes {5 {2} {5 {2}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {6 {2}}) -> 2", "(count_nodes {7 {9} {3 {2}}}) -> 4", "(count_nodes {9}) -> 1", "(count_nodes {2 {4} {8}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {9 {6} {6 {7} {4}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {2}}) -> 2", "(count_nodes {0 {6 {0 {1}} {4 {7}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {5 {4} {1}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {1 {2 {3}}}) -> 3", "(count_nodes {3 {1} {8 {5}}}) -> 4", "(count_nodes {0 {2 {2 {4} {8}} {3 {5} {0}}} {8}}) -> 9", "(count_nodes {0 {7}}) -> 2", "(count_nodes {2 {1 {8 {8}} {9 {6} {2}}} {2 {1}}}) -> 9"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.218326, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {1 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {0} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {0 {1}}}) -> 3", "(count_nodes {7 {7 {0}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {3 {9} {2}}) -> 3", "(count_nodes {3 {0 {4 {2}}}}) -> 4", "(count_nodes {7 {4} {4}}) -> 3", "(count_nodes {5 {2 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {7}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {5 {1 {4} {7}}} {2 {4}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {1}}) -> 2", "(count_nodes {4 {9 {1 {7}} {0 {5} {7}}} {0 {4 {3}} {9 {7} {3}}}}) -> 13", "(count_nodes {4 {8}}) -> 2", "(count_nodes {5 {0 {9} {5 {5} {4}}}}) -> 6", "(count_nodes {6}) -> 1", "(count_nodes {4 {3} {2}}) -> 3", "(count_nodes {4 {8 {6 {7}} {8 {4}}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {3 {0}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {1 {3 {0} {1}} {5 {3} {2}}} {2 {3 {1} {6}} {0 {3}}}}) -> 14", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {1}}) -> 2", "(count_nodes {2 {7}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.601952, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {7 {5} {0 {6}}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {6} {8}}) -> 3", "(count_nodes {0 {7 {5} {6}} {1 {6} {4}}}) -> 7", "(count_nodes {3 {8 {5 {6} {1}} {7 {6}}} {7 {5 {7}} {3}}}) -> 11", "(count_nodes {3}) -> 1", "(count_nodes {5 {4 {1 {6}} {6 {8}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {7 {4 {8} {8 {5} {1}}}}) -> 6", "(count_nodes {2 {1 {1}} {0}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {3 {8} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {6} {1}}) -> 3", "(count_nodes {7 {8}}) -> 2", "(count_nodes {5 {2 {7 {9}} {7}} {4 {8 {5}}}}) -> 8", "(count_nodes {0}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {9} {0}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8 {3 {9 {7} {0}}}}) -> 5", "(count_nodes {3 {6 {1}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {3 {9}} {1 {8} {1 {4} {8}}}}) -> 8", "(count_nodes {7 {7 {4} {3}} {3}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {1 {1} {0}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {4 {3} {2}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {6 {5 {2 {0} {7}}}}) -> 5", "(count_nodes {9 {4}}) -> 2", "(count_nodes {5 {1 {2}}}) -> 3", "(count_nodes {6 {4} {4 {5} {2}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {1 {4}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {3} {3}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.899035, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {5 {5} {7}} {0 {4 {8} {6}} {0 {8}}}}) -> 10", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {6 {7} {2}} {5}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {0 {5}}) -> 2", "(count_nodes {7 {5 {7}}}) -> 3", "(count_nodes {0 {8 {4}} {6 {3}}}) -> 5", "(count_nodes {6 {1 {3 {4} {6}} {2}} {0}}) -> 7", "(count_nodes {7 {4 {2} {9}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {6 {5 {4 {7}}} {1 {9 {9} {3}} {5 {9}}}}) -> 10", "(count_nodes {3 {2 {4} {2}}}) -> 4", "(count_nodes {4 {9 {8}} {1 {7 {2} {5}} {0 {4} {1}}}}) -> 10", "(count_nodes {1 {0 {4}}}) -> 3", "(count_nodes {8 {6} {7}}) -> 3", "(count_nodes {0 {5 {1 {2} {8}} {3}} {0 {1 {5}}}}) -> 9", "(count_nodes {2 {1}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {7 {2 {1 {4}} {9 {6}}}}) -> 6", "(count_nodes {2 {9}}) -> 2", "(count_nodes {2 {4} {8 {8}}}) -> 4", "(count_nodes {9}) -> 1", "(count_nodes {2 {7}}) -> 2", "(count_nodes {6 {6 {1} {8}}}) -> 4", "(count_nodes {4 {2}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {2 {1} {7}}) -> 3", "(count_nodes {0 {2} {5}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {9 {2} {4}}) -> 3", "(count_nodes {8 {4}}) -> 2", "(count_nodes {7 {9 {2} {8}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {5 {5} {0 {6 {7} {0}} {8 {3}}}}) -> 8", "(count_nodes {8 {0 {7} {7 {5}}} {2 {0 {3}}}}) -> 8", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {0 {0 {3} {3}} {3}} {8 {3 {8} {7}} {4 {3}}}}) -> 12", "(count_nodes {9}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.829815, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4 {0} {6}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {2 {2} {5 {7 {1} {9}} {4 {7} {1}}}}) -> 9", "(count_nodes {6 {0} {7}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {1 {1 {3} {8}}}) -> 4", "(count_nodes {0 {7 {9 {2}} {8}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6 {4} {8}}) -> 3", "(count_nodes {7 {1}}) -> 2", "(count_nodes {7 {5} {2 {1 {2}}}}) -> 5", "(count_nodes {0 {9 {8}} {7 {2 {1}} {8 {6} {1}}}}) -> 9", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {2 {8}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {2 {9} {9}}}) -> 4", "(count_nodes {9 {4 {0} {9}} {9}}) -> 5", "(count_nodes {4 {3} {4}}) -> 3", "(count_nodes {3 {6}}) -> 2", "(count_nodes {9 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {9 {7 {0} {8}}}) -> 4", "(count_nodes {1 {5 {9} {3}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {3 {1}}) -> 2", "(count_nodes {1 {1 {9} {8 {1} {6}}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {0 {6 {2}} {1 {1}}}) -> 5", "(count_nodes {0 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {9} {9}}) -> 3", "(count_nodes {9 {1}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {8 {5}}) -> 2", "(count_nodes {7 {3 {6} {7}} {4 {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {2 {8 {2}} {0 {9}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {1 {9}}) -> 2", "(count_nodes {9 {4 {0 {2} {5}}}}) -> 5", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.632913, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {9}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {0 {3}}) -> 2", "(count_nodes {0 {3 {5 {4}}} {5 {2}}}) -> 6", "(count_nodes {5}) -> 1", "(count_nodes {7 {6} {3}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {8 {6} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {2 {7}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {6} {6}}) -> 3", "(count_nodes {5 {1} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {6 {1}} {9 {3} {9}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {0 {4 {8} {3}}}) -> 4", "(count_nodes {4 {7}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {7 {7}} {7 {0} {9}}}) -> 6", "(count_nodes {8 {2 {3 {0} {8}}}}) -> 5", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {4 {8} {6}} {5}}) -> 5", "(count_nodes {3 {2} {6}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {4}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.368343, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {9 {5 {5}}} {8 {2 {3} {6}}}}) -> 8", "(count_nodes {1}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {9 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {7 {7}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {2 {3 {3}} {5 {5}}}) -> 5", "(count_nodes {1 {3}}) -> 2", "(count_nodes {9 {5 {0} {0}} {5}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {5 {6}}) -> 2", "(count_nodes {8 {1}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {7 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {0 {6}} {1}}) -> 4", "(count_nodes {4 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {9 {8} {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {4 {9 {0} {9}} {1 {3} {7}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {8} {2 {7 {5} {3}}}}) -> 6", "(count_nodes {2}) -> 1", "(count_nodes {4 {7} {7}}) -> 3", "(count_nodes {6 {3 {5}} {3 {9} {3 {8} {8}}}}) -> 8", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {9} {0}}) -> 3", "(count_nodes {0 {6}}) -> 2", "(count_nodes {5 {8} {1 {2} {3}}}) -> 5"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.665435, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {6 {1}}}) -> 3", "(count_nodes {4}) -> 1", "(count_nodes {5 {3 {2} {9 {7} {3}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {9 {9 {0} {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {3 {6 {3}}}) -> 3", "(count_nodes {6 {3 {2} {2}}}) -> 4", "(count_nodes {8 {5} {0}}) -> 3", "(count_nodes {7 {6 {5 {2} {5}}} {1}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {3 {6 {6}} {9 {2}}}) -> 5", "(count_nodes {4 {3 {4} {0}} {1}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4 {6 {3} {4}} {6 {8}}}) -> 6", "(count_nodes {0 {3} {6}}) -> 3", "(count_nodes {7 {7}}) -> 2", "(count_nodes {7 {7} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8 {6} {4}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {0 {5 {4 {4}} {5 {3}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {1 {6} {0}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {6 {7}}) -> 2", "(count_nodes {2 {4 {1 {1}} {4}} {2 {1 {2} {6}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {4 {6}}) -> 2", "(count_nodes {9 {1 {1}}}) -> 3", "(count_nodes {0 {9 {1 {1} {2}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {9 {3 {4}}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {3 {8}}) -> 2", "(count_nodes {0 {9 {7} {4 {6} {4}}} {7 {2 {3}} {5 {3}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {1 {5 {7}}}) -> 3", "(count_nodes {8 {5} {9}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.550609, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1 {6}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {3 {5 {2}} {3 {2} {6}}} {6}}) -> 8", "(count_nodes {4 {0}}) -> 2", "(count_nodes {8 {2}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {1 {6}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {0 {4 {7 {9} {2}} {3}} {3 {0 {9} {9}} {7}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {9 {8} {3}} {9 {0} {3}}} {0 {0 {3}}}}) -> 11", "(count_nodes {4 {4 {0 {5} {4}} {2}} {4}}) -> 7", "(count_nodes {4}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {7 {7}}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {0 {3 {3}}} {2}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {5 {1 {3 {3} {5}}}}) -> 5", "(count_nodes {1 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {7 {1} {4}}}) -> 4", "(count_nodes {6 {4 {3} {8}} {3 {4 {5} {7}}}}) -> 8", "(count_nodes {5 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {5 {2 {4}} {9 {7}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {0 {3 {2} {3}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {0 {5}}}) -> 3", "(count_nodes {3 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {4 {4 {0} {8}}} {2 {5 {2} {2}}}}) -> 9", "(count_nodes {7}) -> 1", "(count_nodes {1 {1} {8 {3 {1} {5}} {2 {1} {7}}}}) -> 9"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.354455, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {9 {3}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7 {2} {3 {6 {8}} {7}}}) -> 6", "(count_nodes {4 {4 {5}}}) -> 3", "(count_nodes {9 {9}}) -> 2", "(count_nodes {9 {7 {8 {3} {1}}}}) -> 5", "(count_nodes {3 {6 {2}} {4 {4}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {8 {3 {3} {3}}}) -> 4", "(count_nodes {2 {2 {5} {2}} {8 {1}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {7 {8}}) -> 2", "(count_nodes {3 {4} {1}}) -> 3", "(count_nodes {7 {3} {7}}) -> 3", "(count_nodes {7 {4} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {6} {1}}) -> 3", "(count_nodes {1 {1 {7}}}) -> 3", "(count_nodes {7 {7} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {3} {2}}) -> 3", "(count_nodes {5 {9 {7 {7} {7}} {3 {6} {0}}}}) -> 8", "(count_nodes {5 {9}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {5 {2} {8}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {2 {2 {7}} {6}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {3 {7 {8} {7}} {4 {4} {6}}} {1 {0} {8 {6}}}}) -> 12", "(count_nodes {8}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {9 {6 {3} {9}}}) -> 4", "(count_nodes {9 {8 {4}} {6 {3} {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {3 {3} {2}}) -> 3", "(count_nodes {7 {4 {2} {6}}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {4 {0 {2}}}) -> 3", "(count_nodes {9 {8 {2 {0} {6}}}}) -> 5", "(count_nodes {9}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.573874, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {6 {8 {3}}} {7 {7 {2} {2}}}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {3 {5} {3}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {1 {6} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7 {4}}) -> 2", "(count_nodes {9 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {1 {9 {1 {0}}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {5 {4 {6}}}) -> 3", "(count_nodes {1 {0 {7} {8}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {1} {6 {3 {7}} {7 {5} {4}}}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {4 {8 {2} {2}} {8 {8}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {3 {0}}) -> 2", "(count_nodes {3 {6 {0 {1} {5}}} {2}}) -> 6", "(count_nodes {3 {5 {7 {7} {3}} {3}} {2 {4}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {2 {8 {2}} {5 {0 {6} {3}} {2 {4} {2}}}}) -> 10", "(count_nodes {5}) -> 1", "(count_nodes {7 {8 {8 {1}} {7 {7}}}}) -> 6", "(count_nodes {6}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {7 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8 {4} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {5 {7 {6}}} {6 {5} {8 {5}}}}) -> 8", "(count_nodes {0}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {5}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.56781, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {1} {3 {8} {6}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {9 {8} {0}}) -> 3", "(count_nodes {6 {1} {8 {9}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {8 {7} {2}}) -> 3", "(count_nodes {3 {2 {6}}}) -> 3", "(count_nodes {0 {7 {6 {7}}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {1 {2 {7} {3}} {8}} {5 {3 {5}} {9 {8} {7}}}}) -> 12", "(count_nodes {}) -> 0", "(count_nodes {6 {7} {2 {3 {1} {4}} {0 {5}}}}) -> 8", "(count_nodes {6}) -> 1", "(count_nodes {9 {6 {1}} {0 {5}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {5 {8} {1}}) -> 3", "(count_nodes {9 {5}}) -> 2", "(count_nodes {0 {1 {0 {1}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {1 {7 {4 {1}}}}) -> 4", "(count_nodes {6 {0 {6}}}) -> 3", "(count_nodes {2 {0 {7}}}) -> 3", "(count_nodes {0 {0}}) -> 2", "(count_nodes {7 {5}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {1 {3}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {1 {8} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {8 {3} {7 {4}}} {9 {3} {3 {5}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {7 {7 {9 {7} {3}} {2 {6}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {4} {1}}) -> 3", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.901132, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {6} {2 {4}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {6}}) -> 2", "(count_nodes {7 {1 {7} {9}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9 {3 {4}} {3 {2}}}) -> 5", "(count_nodes {3 {7 {4} {9}} {9 {7} {1}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {6 {9 {3 {6} {5}}} {7 {2}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {6 {7}}) -> 2", "(count_nodes {4 {3 {5 {3} {7}} {5}} {5}}) -> 7", "(count_nodes {8}) -> 1", "(count_nodes {0 {5 {9 {9}}}}) -> 4", "(count_nodes {6 {9} {7}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {7 {9} {1}}) -> 3", "(count_nodes {9 {8}}) -> 2", "(count_nodes {3 {8 {9 {6} {9}} {4 {3} {9}}}}) -> 8", "(count_nodes {2 {1} {6}}) -> 3", "(count_nodes {1 {0} {6}}) -> 3", "(count_nodes {1 {0 {7} {2}}}) -> 4", "(count_nodes {8 {2} {4 {3 {7}} {8}}}) -> 6", "(count_nodes {1 {3 {4}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {1 {2} {3}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {6 {9}}} {4 {4 {5} {3}}}}) -> 8", "(count_nodes {9 {8 {3 {2} {2}} {0 {8} {0}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {4 {0} {3 {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {4 {6 {6}} {9 {8}}}}) -> 6", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {1}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {8 {5 {4} {5}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {8 {8}}) -> 2", "(count_nodes {9 {8} {2}}) -> 3", "(count_nodes {6}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.33802, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {9}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {5 {0 {4 {6} {4}} {9 {8} {1}}} {5}}) -> 9", "(count_nodes {9 {9 {2}}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {7 {7} {2}} {8 {0}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {4 {0}}) -> 2", "(count_nodes {9 {3 {9} {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {8 {8}}) -> 2", "(count_nodes {9 {1} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0 {0} {9 {6 {2}} {2 {1}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {8 {0} {1}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0 {3} {5}}) -> 3", "(count_nodes {3 {3 {9}} {9 {5} {6}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {0 {7} {2 {1} {5}}}}) -> 6", "(count_nodes {3 {9 {3} {0}}}) -> 4", "(count_nodes {2 {1 {5}} {8 {2}}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {6 {8 {7}} {0 {2} {6}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {0 {5 {1} {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {4 {8} {4}}) -> 3", "(count_nodes {4 {4} {5}}) -> 3", "(count_nodes {1 {7} {1}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {4 {5} {1}}) -> 3", "(count_nodes {8 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {0 {4}} {6 {0} {6}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {5 {7 {5}}}) -> 3", "(count_nodes {4}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.601227, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {0 {4}}}) -> 3", "(count_nodes {9 {9}}) -> 2", "(count_nodes {8 {2 {8}} {6 {9}}}) -> 5", "(count_nodes {5 {0}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {2 {3}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {3 {5} {2}}) -> 3", "(count_nodes {9 {7 {5 {1} {5}} {4}} {5}}) -> 7", "(count_nodes {0 {4 {0 {7} {2}}} {6 {7}}}) -> 7", "(count_nodes {7 {3}}) -> 2", "(count_nodes {0 {0}}) -> 2", "(count_nodes {8 {3} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7 {7} {5 {6} {3}}}) -> 5", "(count_nodes {1 {9 {0}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {2}}) -> 2", "(count_nodes {0 {4} {8}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {1 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {4 {9 {2} {5}}}}) -> 5", "(count_nodes {9}) -> 1", "(count_nodes {2 {4 {0}}}) -> 3", "(count_nodes {2 {8 {0 {1} {1}} {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {2 {5}}) -> 2", "(count_nodes {1 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {6 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4 {2 {9}} {2}}) -> 4", "(count_nodes {6}) -> 1", "(count_nodes {1 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {1 {7} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {0 {0 {6} {0}} {7 {8} {7}}}}) -> 8"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.248783, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {9} {3 {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {2 {7} {7 {1}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {2 {9 {2} {0}}}) -> 4", "(count_nodes {6 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {0} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {0} {9}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {9} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {1 {1 {9} {2}} {5 {5}}}}) -> 7", "(count_nodes {0 {1 {8 {5}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {5 {0 {5}}}) -> 3", "(count_nodes {9 {2} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {0 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {4 {2 {1 {8} {9}} {3 {8} {5}}} {2 {8} {3 {7} {4}}}}) -> 13", "(count_nodes {6 {9}}) -> 2", "(count_nodes {8 {6 {5} {3}} {1}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {9 {8} {8 {7} {0}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6 {2 {7 {6}}} {1}}) -> 5", "(count_nodes {0 {6}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.591453, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {7 {3}}) -> 2", "(count_nodes {5 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {2 {0 {4}} {5}}) -> 4", "(count_nodes {3 {1} {1}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {9 {7 {7}}}}) -> 4", "(count_nodes {4 {3} {8}}) -> 3", "(count_nodes {1 {9 {2 {7}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {5}}) -> 2", "(count_nodes {2 {4} {7 {0 {4}} {5 {8}}}}) -> 7", "(count_nodes {7 {9 {7 {7} {9}} {6 {1} {3}}}}) -> 8", "(count_nodes {3 {1} {5 {6}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {0 {4}} {1 {9}}}) -> 5", "(count_nodes {8 {0 {7}} {0 {1}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {8 {9 {8 {4} {7}} {6}} {2 {0 {4} {1}} {3}}}) -> 11", "(count_nodes {5 {5}}) -> 2", "(count_nodes {5 {0 {0}}}) -> 3", "(count_nodes {4 {5} {3}}) -> 3", "(count_nodes {4 {6} {7}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {0}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {7 {9} {1}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {6 {4} {8}}) -> 3", "(count_nodes {0 {4 {2} {5 {4} {9}}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {1}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.70362, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {0}}) -> 2", "(count_nodes {4 {5}}) -> 2", "(count_nodes {9 {3 {1} {3}} {4}}) -> 5", "(count_nodes {6 {2 {4}} {9 {4} {9}}}) -> 6", "(count_nodes {2}) -> 1", "(count_nodes {9 {8}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {2 {4} {0}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {5 {2} {2}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {8 {2 {8 {7}} {7 {8}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {6 {0}} {1}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {3 {2}}) -> 2", "(count_nodes {5 {0 {0 {0}}} {2 {0 {6}}}}) -> 7", "(count_nodes {6 {0 {2}}}) -> 3", "(count_nodes {4 {6}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {7 {7}}) -> 2", "(count_nodes {2 {5} {1 {1} {1}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {2} {9}}) -> 3", "(count_nodes {0 {5 {2} {0}} {2}}) -> 5", "(count_nodes {3 {6 {3} {9}} {3}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {9} {1}}) -> 3", "(count_nodes {6 {4}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {3 {5 {1} {5}}}) -> 4", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {2 {7}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {6}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.308314, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {1} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {1 {8 {7 {9} {0}} {4 {7} {1}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {0 {3 {8} {5}} {7}}) -> 5", "(count_nodes {0}) -> 1", "(count_nodes {7 {7 {4 {1} {2}} {1 {7}}} {7 {4} {7 {6}}}}) -> 11", "(count_nodes {8 {4 {1 {6}}} {9 {6 {4} {8}} {4 {6} {3}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {2 {2 {7 {2} {0}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {6 {7 {7 {5}}} {9}}) -> 5", "(count_nodes {9 {0} {7}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {9 {7}}) -> 2", "(count_nodes {7 {2 {1 {2} {9}} {4 {6} {8}}} {1}}) -> 9", "(count_nodes {2 {6 {0 {7}}} {9 {7 {7}}}}) -> 7", "(count_nodes {1 {5 {4 {7} {2}} {2 {2}}} {1 {3 {8}} {2 {4}}}}) -> 12", "(count_nodes {0 {0} {3}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {1 {3 {8} {2}}}) -> 4", "(count_nodes {2 {0} {7}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {3 {1}}) -> 2", "(count_nodes {0 {2 {2 {8} {7}} {5 {9} {8}}}}) -> 8", "(count_nodes {1}) -> 1", "(count_nodes {9 {0 {2} {3 {6} {7}}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {5}}) -> 2", "(count_nodes {2 {6 {2}} {3 {9} {6}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {4 {0}}) -> 2", "(count_nodes {5 {7 {9} {9}} {7 {4}}}) -> 6", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.263111, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {9 {5}} {0 {1}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {5 {2 {8}}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {3 {1} {7}} {3 {6} {6}}}) -> 7", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {7 {9 {3}} {7}}}) -> 5", "(count_nodes {1 {2}}) -> 2", "(count_nodes {8 {9} {0}}) -> 3", "(count_nodes {3 {4 {7}}}) -> 3", "(count_nodes {5 {8} {5}}) -> 3", "(count_nodes {1 {2} {9}}) -> 3", "(count_nodes {5 {1} {6 {0}}}) -> 4", "(count_nodes {0 {2 {1 {3}} {2 {2}}} {3}}) -> 7", "(count_nodes {6 {7 {1 {3} {1}}}}) -> 5", "(count_nodes {1 {4}}) -> 2", "(count_nodes {5 {3 {5 {7} {7}} {1}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {4 {6}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {1 {1 {0} {8}}}) -> 4", "(count_nodes {5 {9} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {5} {7}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {7 {0} {2}} {0 {9}}}) -> 6", "(count_nodes {8 {1 {7} {4}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {4 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {0 {1}}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {4 {3} {3}}) -> 3", "(count_nodes {3 {3} {8}}) -> 3", "(count_nodes {7 {5} {6}}) -> 3", "(count_nodes {2 {5} {4}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.511303, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4 {4 {0 {6} {6}} {5 {2} {9}}} {4}}) -> 9", "(count_nodes {7 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {1} {4}}) -> 3", "(count_nodes {9 {9} {0 {5 {7}}}}) -> 5", "(count_nodes {8 {4} {1}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {7 {3 {4 {4} {8}}} {7}}) -> 6", "(count_nodes {1 {4}}) -> 2", "(count_nodes {9 {4} {1}}) -> 3", "(count_nodes {2 {5 {4 {1}} {5 {3} {9}}} {3 {7 {8}} {3}}}) -> 11", "(count_nodes {7 {3 {9}} {3 {5} {9 {6}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {1 {1 {7}}}) -> 3", "(count_nodes {9 {3} {1 {6}}}) -> 4", "(count_nodes {8 {6}}) -> 2", "(count_nodes {7 {6}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {8 {9} {5}}) -> 3", "(count_nodes {8 {5 {3} {3}}}) -> 4", "(count_nodes {0 {4 {1} {0}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {4 {8}} {4 {8 {1}}}}) -> 6", "(count_nodes {1 {1} {8 {8 {8}} {4}}}) -> 6", "(count_nodes {7 {4} {9}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {0 {9} {4}}) -> 3", "(count_nodes {4 {9 {0 {3}}}}) -> 4", "(count_nodes {5 {0} {6 {3 {2}} {8}}}) -> 6", "(count_nodes {0 {4} {2 {9} {0}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {5 {2 {2 {4}} {9}} {4}}) -> 6", "(count_nodes {2 {7 {0}} {3 {2} {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {6} {4 {5} {6 {0}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {1 {2} {2}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.969219, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4 {7 {6}} {0 {9}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {1} {4}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {2 {2 {9}}} {4}}) -> 5", "(count_nodes {2 {7} {8}}) -> 3", "(count_nodes {4 {2}}) -> 2", "(count_nodes {0 {2 {0}} {8 {8} {2}}}) -> 6", "(count_nodes {3}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {4 {7 {0}} {7 {8} {8}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {1 {4} {4 {9 {3} {8}} {6 {6} {8}}}}) -> 9", "(count_nodes {9 {2 {0 {2} {2}} {8}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {3 {6 {1 {4} {2}}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {3 {9 {9}} {6 {9}}}) -> 5", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.848287, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {8 {1}} {9}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {3 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {2} {1}}) -> 3", "(count_nodes {0 {7} {7 {1 {9}} {2 {0}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {2}}) -> 2", "(count_nodes {7 {9} {3}}) -> 3", "(count_nodes {5 {9 {5 {3}} {9 {4} {9}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {9 {3} {6 {1} {3}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {6 {5 {1}}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {4 {8}}) -> 2", "(count_nodes {1 {3}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {8 {0 {8} {8}} {6 {4} {0}}} {6 {0}}}) -> 10", "(count_nodes {4 {5}}) -> 2", "(count_nodes {2 {8 {3} {2}}}) -> 4", "(count_nodes {4 {0 {2} {0}}}) -> 4", "(count_nodes {5 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4 {4 {8 {7}}} {6 {4}}}) -> 6", "(count_nodes {3 {2 {3} {1}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6 {1}}) -> 2", "(count_nodes {2 {2} {3 {6} {2}}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {6 {2 {5} {6}}}}) -> 5", "(count_nodes {5 {0 {8} {7 {0}}}}) -> 5", "(count_nodes {6 {3 {4}}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.902111, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {3 {4} {3}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {5 {9 {7} {8}} {4 {8} {4}}}) -> 7", "(count_nodes {2}) -> 1", "(count_nodes {6 {1}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {2 {4} {2}}}) -> 4", "(count_nodes {9 {0}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {9 {0 {9 {8}} {1 {6}}} {0 {0} {7 {5}}}}) -> 10", "(count_nodes {6}) -> 1", "(count_nodes {4 {3 {6 {1} {8}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {0 {6} {9 {9} {9}}}) -> 5", "(count_nodes {5 {0 {5} {5}} {1 {5 {8} {3}} {1 {4} {4}}}}) -> 11", "(count_nodes {6}) -> 1", "(count_nodes {8 {0 {3} {6 {7}}} {7 {2 {4} {4}}}}) -> 9", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {5 {0}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {6 {6 {3} {7}} {3 {9} {5}}}) -> 7", "(count_nodes {1 {9} {3 {0} {2}}}) -> 5", "(count_nodes {4 {1 {9} {4}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {2 {0}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {6}}) -> 2", "(count_nodes {2 {8} {3 {0 {2}}}}) -> 5", "(count_nodes {5 {3}}) -> 2", "(count_nodes {0 {9} {5}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {2 {9} {7 {5 {6} {2}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {2 {0 {7 {2} {9}}}}) -> 5"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.345428, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {1 {5} {8}} {7 {0}}}) -> 6", "(count_nodes {8}) -> 1", "(count_nodes {0 {2}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2 {4}}) -> 2", "(count_nodes {9 {4} {6}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {1 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {1}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {6 {8 {7} {4}}} {2}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {0}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {0 {9} {9}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {3 {8}}) -> 2", "(count_nodes {8 {8 {2 {4}}} {1 {8} {4}}}) -> 7", "(count_nodes {3 {0 {9}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {9 {3} {9 {5}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {8}} {0 {1} {7}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {0 {0}}}) -> 3", "(count_nodes {0 {0} {3}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {9 {9 {5} {0}} {2}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {5 {6}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.956277, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {9 {5} {0}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {3 {4 {9 {9}} {3 {5} {4}}} {8}}) -> 8", "(count_nodes {2 {2 {7}} {6 {3}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {8 {1} {5}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {9 {2 {0}} {9 {7} {3}}}) -> 6", "(count_nodes {2 {1 {6}} {2 {7 {5}}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {9 {2 {2} {7 {0}}}}) -> 5", "(count_nodes {2}) -> 1", "(count_nodes {9 {7}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {2 {0} {2}}) -> 3", "(count_nodes {9 {9} {2 {7}}}) -> 4", "(count_nodes {0 {0 {6}} {5 {5} {4}}}) -> 6", "(count_nodes {1 {7 {2 {5} {0}}} {0 {3 {0}}}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {8 {7}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {5 {0 {1} {6}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {9 {6} {3}}) -> 3", "(count_nodes {4 {9 {9} {6}} {5 {0} {4}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {2 {4 {2}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {9 {0} {8}}) -> 3", "(count_nodes {8 {5}}) -> 2", "(count_nodes {2 {5 {3 {5}}}}) -> 4", "(count_nodes {4 {5} {9 {2}}}) -> 4", "(count_nodes {5 {5} {8}}) -> 3", "(count_nodes {7 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {4 {6} {8}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {3 {1 {7}} {7}}) -> 4", "(count_nodes {5 {3}}) -> 2", "(count_nodes {1 {0} {4}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.851733, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {8 {9 {3}}}}) -> 4", "(count_nodes {0 {0}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {5 {8 {4}}}) -> 3", "(count_nodes {7 {4 {3}}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {3}}) -> 2", "(count_nodes {8 {7 {5} {1}}}) -> 4", "(count_nodes {9 {7 {2} {8}} {4}}) -> 5", "(count_nodes {2 {7}}) -> 2", "(count_nodes {0 {5 {9 {9}} {8 {0} {2}}}}) -> 7", "(count_nodes {7 {0}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {2}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {7 {7} {5}}) -> 3", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {8 {0}} {0}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {1 {1} {0}} {9 {6}}}) -> 6", "(count_nodes {5 {0}}) -> 2", "(count_nodes {7 {1} {8 {8}}}) -> 4", "(count_nodes {1 {7} {7}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {1}}) -> 2", "(count_nodes {9 {9 {0} {0}} {9 {3} {5}}}) -> 7", "(count_nodes {3 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {3} {1}}) -> 3", "(count_nodes {1 {7} {3 {2}}}) -> 4", "(count_nodes {7 {4}}) -> 2", "(count_nodes {8 {0 {0 {7}}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {0 {0 {1 {4}}}}) -> 4", "(count_nodes {8 {0} {9 {7 {5}} {4}}}) -> 6", "(count_nodes {7 {1}}) -> 2", "(count_nodes {5 {1 {2}} {7 {7} {3}}}) -> 6", "(count_nodes {5}) -> 1", "(count_nodes {5 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.250402, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {6 {9 {0}} {5 {5} {8}}} {5 {7 {2} {9}}}}) -> 11", "(count_nodes {}) -> 0", "(count_nodes {2 {1} {7}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {8 {8}}) -> 2", "(count_nodes {2 {2 {7} {8}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {2 {4 {1}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {3 {8}}}}) -> 4", "(count_nodes {3 {0}}) -> 2", "(count_nodes {8 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {1 {2 {4} {4}}} {4 {1 {8} {1}}}}) -> 9", "(count_nodes {4}) -> 1", "(count_nodes {9 {9}}) -> 2", "(count_nodes {1 {4} {0}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {1 {9} {5 {6 {4} {6}}}}) -> 6", "(count_nodes {9}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {8 {4 {7}} {2 {6}}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {2} {3 {0 {8} {1}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3 {3} {2}}) -> 3", "(count_nodes {5 {6 {4}} {4 {2 {1}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {1 {7 {1}} {2 {7} {1}}}) -> 6", "(count_nodes {1 {0} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {0 {2} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.095116, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {2 {0 {0 {5}}}}) -> 4", "(count_nodes {7 {6} {2 {4 {6} {5}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {9 {9}}) -> 2", "(count_nodes {2 {3} {0}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {7 {0} {5 {7 {5}}}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {1 {8 {0} {2}}}) -> 4", "(count_nodes {7 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {7}}) -> 2", "(count_nodes {2 {8} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {0} {3}}) -> 3", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {3 {8} {5 {0}}} {2 {0 {0}}}}) -> 8", "(count_nodes {6}) -> 1", "(count_nodes {1 {9} {8}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {4 {1} {4}} {8}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {7 {8 {3}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {5 {3} {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {7 {3} {5}}) -> 3", "(count_nodes {7 {0 {4}} {1 {3} {6}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.151229, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {8 {3 {8}} {4 {9}}} {6}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {7 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {5} {3}}) -> 3", "(count_nodes {5 {4 {5 {9}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {2 {5 {7}} {2 {5} {3 {1}}}}) -> 7", "(count_nodes {6 {8}}) -> 2", "(count_nodes {0 {4 {7}} {8}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {3 {1} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8 {3}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {8 {1} {0 {6} {6}}}) -> 5", "(count_nodes {0 {7}}) -> 2", "(count_nodes {5 {6 {1} {3}} {3 {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {1 {7} {0}}}) -> 4", "(count_nodes {7 {4}}) -> 2", "(count_nodes {5 {5 {0 {2}} {8 {7} {2}}} {1 {3 {9} {0}} {6}}}) -> 12", "(count_nodes {}) -> 0", "(count_nodes {4 {6}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {9 {8} {6 {6 {7}}}}) -> 5", "(count_nodes {6 {8 {7 {2} {2}}} {8 {5}}}) -> 7", "(count_nodes {8 {6 {9} {3}} {5 {9}}}) -> 6", "(count_nodes {5}) -> 1", "(count_nodes {0 {6 {2 {5}}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {0 {0} {4 {4} {7}}}}) -> 6", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {6 {8}} {8}}) -> 4", "(count_nodes {9 {6}}) -> 2", "(count_nodes {2 {4}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {6} {5}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {0}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.937797, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {7} {1}}) -> 3", "(count_nodes {2 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {3} {8}}) -> 3", "(count_nodes {7 {5} {5 {9 {6}}}}) -> 5", "(count_nodes {2 {8} {0}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {0 {0 {9} {7}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {2 {5} {3 {1} {9}}}) -> 5", "(count_nodes {2 {0 {8}} {9}}) -> 4", "(count_nodes {6 {7}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {3} {9}}) -> 3", "(count_nodes {3 {6} {5}}) -> 3", "(count_nodes {4 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {8 {6} {8}}}) -> 4", "(count_nodes {4 {4} {1}}) -> 3", "(count_nodes {2 {3 {5} {5 {6}}}}) -> 5", "(count_nodes {4}) -> 1", "(count_nodes {3 {4} {3}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {7} {4}}) -> 3", "(count_nodes {0 {2 {8 {2}}} {4}}) -> 5", "(count_nodes {6 {4}}) -> 2", "(count_nodes {8 {9}}) -> 2", "(count_nodes {0 {5 {8} {5}} {5 {2}}}) -> 6", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {3 {7 {0 {4} {4}} {2 {0}}} {3}}) -> 8", "(count_nodes {8}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {8 {2}}}) -> 3", "(count_nodes {9 {7 {3}} {5}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {8 {9}}}) -> 3", "(count_nodes {8 {3 {4 {3} {4}}} {2 {9} {9 {7}}}}) -> 9"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.161778, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {1 {4}}}) -> 4", "(count_nodes {4 {3} {2}}) -> 3", "(count_nodes {7 {3 {8} {8}} {1 {6} {0}}}) -> 7", "(count_nodes {3 {0} {9}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {0 {9 {6} {1}} {3 {4}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {2 {1}}) -> 2", "(count_nodes {2 {7} {3}}) -> 3", "(count_nodes {4 {9} {2}}) -> 3", "(count_nodes {9 {7}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {8 {2 {5}} {4 {8} {9}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {2 {2 {5 {6}}} {5}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {0 {6 {4} {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {3 {8} {3}} {5 {3} {4}}}) -> 7", "(count_nodes {5 {8 {1}}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {2 {3 {1} {5}} {0 {3} {9}}}) -> 7", "(count_nodes {9}) -> 1", "(count_nodes {8 {2}}) -> 2", "(count_nodes {9 {5 {2}} {1 {0 {7}} {5 {0}}}}) -> 8", "(count_nodes {9 {8} {8}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {3 {1 {5} {8}} {5}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {0 {8 {8} {4}} {3 {8}}}) -> 6", "(count_nodes {7 {7 {3} {2}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {5 {8} {3}}) -> 3", "(count_nodes {6 {2 {2}}}) -> 3", "(count_nodes {9 {7 {8 {7} {6}}} {9 {6 {2}} {3 {1}}}}) -> 10", "(count_nodes {1}) -> 1", "(count_nodes {5 {4 {8}}}) -> 3", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.108716, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {8 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {6}}) -> 2", "(count_nodes {6}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {2}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {0 {5 {2} {6}} {8 {0} {8}}}) -> 7", "(count_nodes {8 {6} {8}}) -> 3", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {7 {6 {9 {6}} {1 {1} {8}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {0 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {0 {4} {4}} {5 {7}}}) -> 6", "(count_nodes {1}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {1 {3}}}) -> 3", "(count_nodes {1 {7} {6}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {9 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {8 {5 {1}} {4 {7}}}) -> 5", "(count_nodes {0}) -> 1", "(count_nodes {6 {3} {3}}) -> 3", "(count_nodes {3 {7}}) -> 2", "(count_nodes {7 {4 {3}} {9}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {7 {3}}) -> 2", "(count_nodes {8 {1 {7}} {1}}) -> 4", "(count_nodes {0 {4 {7} {9}} {8 {1}}}) -> 6", "(count_nodes {3 {6}}) -> 2", "(count_nodes {8 {1} {0}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {3}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.902822, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {5 {0} {7}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {0}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {8 {2} {6}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0 {5}}) -> 2", "(count_nodes {4 {6}}) -> 2", "(count_nodes {1 {9 {5} {6}} {9 {2}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {5 {7 {5 {7} {4}}}}) -> 5", "(count_nodes {6 {7} {7}}) -> 3", "(count_nodes {2 {0}}) -> 2", "(count_nodes {5 {8}}) -> 2", "(count_nodes {9 {4} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {6 {8 {3 {5} {4}} {1 {6}}} {1 {8 {3} {9}} {6 {5}}}}) -> 13", "(count_nodes {8}) -> 1", "(count_nodes {3 {7}}) -> 2", "(count_nodes {7 {1 {6}} {2 {5}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4 {5}}) -> 2", "(count_nodes {6 {9} {8}}) -> 3", "(count_nodes {8 {5 {6}}}) -> 3", "(count_nodes {7 {9}}) -> 2", "(count_nodes {5}) -> 1", "(count_nodes {0 {3 {1 {0} {5}} {2 {8} {2}}}}) -> 8", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {1}}) -> 2", "(count_nodes {8 {8 {3} {0}} {2}}) -> 5", "(count_nodes {8 {0 {1 {9}} {4 {3}}} {7 {3}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {6 {0} {5}}) -> 3", "(count_nodes {9 {6 {4}} {4 {2} {2}}}) -> 6", "(count_nodes {4}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.867916, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {3 {3 {9} {9}} {9}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {8 {6 {6} {2}} {4 {6} {6}}}}) -> 8", "(count_nodes {9 {4}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {4 {3 {3} {3}}}) -> 4", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {1}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {4 {4}}) -> 2", "(count_nodes {0 {0 {7}}}) -> 3", "(count_nodes {9 {9 {1 {7} {2}} {6 {5} {0}}} {1 {7}}}) -> 10", "(count_nodes {0 {7}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {8 {7} {3}}) -> 3", "(count_nodes {6 {3 {2}} {0 {2}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {4 {1} {4}}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {3 {0} {0}}) -> 3", "(count_nodes {3 {6 {1 {7} {8}} {9 {4}}} {0 {9} {6 {4}}}}) -> 11", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {6}}) -> 2", "(count_nodes {6 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {3} {7 {1 {2}} {1 {4}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {1 {6} {2}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {8 {4 {5 {9} {4}}} {0 {4 {8}}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {6 {3 {0} {4 {3}}}}) -> 5", "(count_nodes {8}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {9 {0}} {1 {9}}}) -> 5", "(count_nodes {9 {9 {6}}}) -> 3", "(count_nodes {0 {7} {8}}) -> 3", "(count_nodes {8 {7 {3} {1}}}) -> 4", "(count_nodes {4 {6} {5 {4}}}) -> 4"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.931722, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {7 {9}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {5 {0}} {6}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {4 {7 {7}} {2}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {7 {4 {9} {2 {5} {1}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {5} {7}}) -> 3", "(count_nodes {4 {2 {7 {3} {9}}} {8 {2}}}) -> 7", "(count_nodes {9}) -> 1", "(count_nodes {7 {9}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {5 {8} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {4}}) -> 2", "(count_nodes {5 {7 {6} {4}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {2 {2 {6} {8 {1}}} {9 {8} {6}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {1 {3 {0 {2}} {9}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {2 {6 {5 {9} {6}} {0 {0} {3}}}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {4 {7 {2}} {3}}) -> 4", "(count_nodes {4 {3} {5}}) -> 3", "(count_nodes {2 {4 {9} {5}} {0 {3} {7}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {0 {4 {5} {4 {2} {9}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {7}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.769349, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4 {5} {7}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {9 {4 {1 {7} {0}}} {5 {1 {2} {9}} {2 {1}}}}) -> 11", "(count_nodes {6 {9} {3}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {5 {6 {2}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {6} {8 {2 {3}} {2}}}) -> 6", "(count_nodes {5 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {6 {2}}) -> 2", "(count_nodes {9 {1 {6}} {1}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {8 {9} {4 {2}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {8 {6}} {8}}) -> 4", "(count_nodes {2 {3 {0}}}) -> 3", "(count_nodes {3 {2}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {0 {4 {1}} {7 {6} {5}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {9 {5 {7} {6}}}) -> 4", "(count_nodes {4 {3} {8}}) -> 3", "(count_nodes {3 {1 {7 {6} {2}} {5 {5} {4}}}}) -> 8", "(count_nodes {8 {0 {7}} {4 {6}}}) -> 5", "(count_nodes {2 {0}}) -> 2", "(count_nodes {0 {1 {6}} {7}}) -> 4", "(count_nodes {1 {9}}) -> 2", "(count_nodes {6 {4 {5} {0 {3}}}}) -> 5", "(count_nodes {9 {4 {0 {4}} {5 {8} {0}}} {0}}) -> 8", "(count_nodes {3 {8} {1}}) -> 3", "(count_nodes {6 {3 {0}}}) -> 3", "(count_nodes {1 {4 {3 {4} {1}} {2 {5}}}}) -> 7", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {5} {6}}) -> 3", "(count_nodes {4 {1 {2}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {8}}) -> 2", "(count_nodes {3 {4} {6}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.744659, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {1 {1 {3 {1}} {8 {2} {2}}}}) -> 7", "(count_nodes {1 {0 {9 {9} {2}} {6 {3} {3}}}}) -> 8", "(count_nodes {4 {5}}) -> 2", "(count_nodes {5 {8 {5 {5}}}}) -> 4", "(count_nodes {0 {7}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {6 {3 {2 {1}} {8 {9} {8}}}}) -> 7", "(count_nodes {5 {7} {2}}) -> 3", "(count_nodes {3 {0} {6 {9}}}) -> 4", "(count_nodes {6 {2 {2 {8} {9}}}}) -> 5", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {3 {5 {5}} {0}} {4 {4 {4} {4}}}}) -> 9", "(count_nodes {}) -> 0", "(count_nodes {6 {4 {6} {7}}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {2 {9}}) -> 2", "(count_nodes {7}) -> 1", "(count_nodes {9 {5 {2} {4}}}) -> 4", "(count_nodes {5 {7} {7 {6}}}) -> 4", "(count_nodes {2}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {1 {0}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {0} {6 {7} {6}}}) -> 5", "(count_nodes {3}) -> 1", "(count_nodes {4 {3}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {0 {7 {0 {0} {9}} {4 {9}}} {5 {4 {8} {1}}}}) -> 11", "(count_nodes {4 {5 {0} {5}}}) -> 4", "(count_nodes {4}) -> 1", "(count_nodes {1 {4 {0} {5}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {3 {6}}) -> 2", "(count_nodes {2}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {3 {6 {1}} {3 {0 {2} {8}} {9}}}) -> 8", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 1.041941, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {2} {3}}) -> 3", "(count_nodes {6 {4}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {2 {1 {6} {7}} {4}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3}) -> 1", "(count_nodes {9}) -> 1", "(count_nodes {1 {1 {4} {6}}}) -> 4", "(count_nodes {3 {0} {5 {6 {6} {2}} {8 {7}}}}) -> 8", "(count_nodes {6 {0 {8}}}) -> 3", "(count_nodes {3}) -> 1", "(count_nodes {0 {2 {6}}}) -> 3", "(count_nodes {0 {6 {4} {6}}}) -> 4", "(count_nodes {9 {9} {8}}) -> 3", "(count_nodes {6 {9 {5 {7}} {0 {1}}} {3 {3} {4 {7}}}}) -> 10", "(count_nodes {9 {6 {6 {2}}}}) -> 4", "(count_nodes {8 {6 {6}} {1}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {7 {1}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {9 {3 {9}}}) -> 3", "(count_nodes {9 {0 {4}}}) -> 3", "(count_nodes {0 {4 {3}}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {2 {6}}) -> 2", "(count_nodes {2 {1} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {0 {3} {1}}}) -> 4", "(count_nodes {9 {8}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {2 {0 {1} {6}} {9 {4} {0}}}) -> 7", "(count_nodes {5 {1} {8}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {2 {1} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.941914, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0 {7 {8} {6 {6}}} {7 {7 {7} {3}} {5 {4}}}}) -> 11", "(count_nodes {4 {1}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {7 {5 {8}}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {9 {8 {4} {9}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {5 {3 {6}} {6 {6} {9}}}}) -> 7", "(count_nodes {4 {8}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {6} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {5 {1 {3 {1}} {4 {8}}}}) -> 6", "(count_nodes {2 {7 {0} {5 {4} {1}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9 {6 {0}} {5 {4} {2}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {0 {3 {1} {7 {1} {4}}} {7 {7 {2} {5}}}}) -> 10", "(count_nodes {0}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {3 {4 {3}} {9}}) -> 4", "(count_nodes {5 {4}}) -> 2", "(count_nodes {5 {8} {0}}) -> 3", "(count_nodes {5 {0 {9} {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {1} {9}}) -> 3", "(count_nodes {4 {1} {5 {7 {5}}}}) -> 5", "(count_nodes {1 {7 {8} {4}}}) -> 4", "(count_nodes {8 {4}}) -> 2", "(count_nodes {9 {2}}) -> 2", "(count_nodes {7 {7 {9} {1}}}) -> 4", "(count_nodes {7 {9} {5}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {9 {9 {7 {7} {7}}}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {8 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.867354, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {6 {9} {4}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {7} {1}}) -> 3", "(count_nodes {3 {1}}) -> 2", "(count_nodes {4 {7 {8}} {3 {6}}}) -> 5", "(count_nodes {6}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {4 {3} {9}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {9} {6}}) -> 3", "(count_nodes {4}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {6 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {8} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {2 {2}}) -> 2", "(count_nodes {5 {6 {5} {9}} {8 {6} {6}}}) -> 7", "(count_nodes {0 {4}}) -> 2", "(count_nodes {0 {3 {7}}}) -> 3", "(count_nodes {6 {2} {3}}) -> 3", "(count_nodes {2 {8} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {3 {7}}) -> 2", "(count_nodes {4 {2 {0 {7} {8}}} {9 {4 {2}} {9 {3}}}}) -> 10", "(count_nodes {1 {6}}) -> 2", "(count_nodes {3}) -> 1", "(count_nodes {4 {5} {9}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {2 {9} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {7 {9 {1 {3}}}}) -> 4", "(count_nodes {5}) -> 1", "(count_nodes {8}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {8 {5 {8} {9}} {8 {6} {5}}}) -> 7", "(count_nodes {6 {0 {0}} {7}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.936274, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {6 {8} {6}}) -> 3", "(count_nodes {7 {2 {3 {4}} {4 {7} {3}}}}) -> 7", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {9} {5}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {2 {9 {9} {2 {4}}}}) -> 5", "(count_nodes {7 {5}}) -> 2", "(count_nodes {1 {3 {4}} {9}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {8 {1 {2} {4}}} {8}}) -> 6", "(count_nodes {4}) -> 1", "(count_nodes {3 {6} {8}}) -> 3", "(count_nodes {3 {2 {3 {4} {7}}}}) -> 5", "(count_nodes {3 {4 {3} {6}}}) -> 4", "(count_nodes {3 {8 {9}}}) -> 3", "(count_nodes {3 {5} {5}}) -> 3", "(count_nodes {2 {2} {4 {0} {7 {2}}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {1 {9} {1}}) -> 3", "(count_nodes {8 {5 {0 {4} {5}}}}) -> 5", "(count_nodes {0 {9 {0 {6} {5}} {5 {0}}} {9 {8} {5 {3} {0}}}}) -> 12", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {7} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {3 {8 {9} {4}} {5}}) -> 5", "(count_nodes {8}) -> 1", "(count_nodes {7 {7 {4} {7}} {1 {7} {0}}}) -> 7", "(count_nodes {3}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {3 {0 {0}} {3 {2} {6}}}) -> 6", "(count_nodes {2 {4 {9} {1}} {4}}) -> 5", "(count_nodes {1 {6} {5}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1}) -> 1", "(count_nodes {5 {1 {0 {4}}}}) -> 4", "(count_nodes {2 {7} {7 {4 {0}}}}) -> 5"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.955759, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7 {5}}) -> 2", "(count_nodes {5 {5}}) -> 2", "(count_nodes {2 {6 {8} {4 {8} {3}}} {8}}) -> 7", "(count_nodes {9 {1 {6 {0} {7}} {5}} {6}}) -> 7", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {2 {1} {9}} {3}}) -> 5", "(count_nodes {6 {6} {9}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2 {9 {3 {7}} {0 {7} {3}}}}) -> 7", "(count_nodes {1 {7}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {3}) -> 1", "(count_nodes {4 {5} {3 {6 {0} {1}}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {1 {3 {0 {4}}}}) -> 4", "(count_nodes {4 {8 {1} {6 {1} {0}}} {2 {7} {3 {0}}}}) -> 10", "(count_nodes {1 {5 {5 {5}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {5 {8}}) -> 2", "(count_nodes {8 {3} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {6 {1} {7}}}}) -> 5", "(count_nodes {8 {0 {5 {0}}}}) -> 4", "(count_nodes {7 {4 {3}}}) -> 3", "(count_nodes {1 {5 {8}}}) -> 3", "(count_nodes {7 {8}}) -> 2", "(count_nodes {4 {5}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {2 {4}}) -> 2", "(count_nodes {2 {0}}) -> 2", "(count_nodes {2 {2 {2} {4}}}) -> 4", "(count_nodes {1 {8 {8 {0} {3}}} {3 {6 {2}} {3 {9}}}}) -> 10", "(count_nodes {}) -> 0", "(count_nodes {9 {1 {2}} {6 {0} {3}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {5}}) -> 2", "(count_nodes {0}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {9}) -> 1"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.839258, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {3 {4 {4} {7}}}) -> 4", "(count_nodes {0}) -> 1", "(count_nodes {9 {1} {2}}) -> 3", "(count_nodes {0 {4}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {2 {6}}) -> 2", "(count_nodes {2 {8} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {7}) -> 1", "(count_nodes {8 {0} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {5}}) -> 2", "(count_nodes {1 {5 {8 {5}}} {7 {2}}}) -> 6", "(count_nodes {9 {9} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {4 {9} {1}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {7 {6}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {7 {3 {4}}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {6}) -> 1", "(count_nodes {6 {6}}) -> 2", "(count_nodes {6 {7 {1 {3}}} {2 {8} {8}}}) -> 7", "(count_nodes {8 {9 {8} {1}}}) -> 4", "(count_nodes {8}) -> 1", "(count_nodes {4 {1} {6}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {2 {1 {7}}}) -> 3", "(count_nodes {6 {9} {0}}) -> 3", "(count_nodes {9 {7 {7 {6}}}}) -> 4", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {3 {9} {7}}) -> 3", "(count_nodes {8 {7 {5} {6}}}) -> 4", "(count_nodes {8 {3}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {1 {1 {0}} {5 {6} {5}}}) -> 6"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.931931, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {8 {5} {3}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {3 {2 {6 {0} {4}}}}) -> 5", "(count_nodes {0 {9 {4 {4} {7}}} {5}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {6 {8 {7 {9}} {7 {6}}}}) -> 6", "(count_nodes {8 {8 {4} {2}} {2 {1} {6}}}) -> 7", "(count_nodes {5}) -> 1", "(count_nodes {6 {1}}) -> 2", "(count_nodes {9 {3 {6} {5 {6} {2}}} {1 {0}}}) -> 8", "(count_nodes {8 {6 {8} {9}} {1}}) -> 5", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {1 {6 {5} {0}} {2 {1} {4}}}) -> 7", "(count_nodes {5}) -> 1", "(count_nodes {4}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {4 {1 {1 {8} {3}}}}) -> 5", "(count_nodes {3 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {4 {0 {8 {1} {5}}} {7 {3 {5} {5}}}}) -> 9", "(count_nodes {2 {7}}) -> 2", "(count_nodes {2 {7} {8}}) -> 3", "(count_nodes {1}) -> 1", "(count_nodes {9 {8 {8} {3}}}) -> 4", "(count_nodes {3}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8}) -> 1", "(count_nodes {5 {4 {2}} {8 {8}}}) -> 5", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {6} {9}}) -> 3", "(count_nodes {7}) -> 1", "(count_nodes {6}) -> 1", "(count_nodes {7 {3 {1}} {3 {0}}}) -> 5", "(count_nodes {2 {9}}) -> 2", "(count_nodes {1 {7 {1} {7}} {4}}) -> 5", "(count_nodes {5 {4} {2}}) -> 3", "(count_nodes {7 {6}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.976592, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {4 {8} {7 {6 {2} {5}}}}) -> 6", "(count_nodes {1 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {7}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {1 {1} {1}}) -> 3", "(count_nodes {7 {3}}) -> 2", "(count_nodes {4}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {2 {1 {8}} {6 {4} {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {3 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {3 {1}}) -> 2", "(count_nodes {9}) -> 1", "(count_nodes {3 {9}}) -> 2", "(count_nodes {2 {4} {2}}) -> 3", "(count_nodes {9}) -> 1", "(count_nodes {3 {4 {5}} {9 {8}}}) -> 5", "(count_nodes {5 {4}}) -> 2", "(count_nodes {9 {6 {7} {8 {9}}} {0 {5 {6} {7}} {6 {7} {1}}}}) -> 12", "(count_nodes {9 {0}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {1 {0 {3}} {8}}) -> 4", "(count_nodes {7 {7 {0 {5} {5}} {2 {3}}} {1}}) -> 8", "(count_nodes {4 {1 {4} {4}}}) -> 4", "(count_nodes {8 {7}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {9 {5}}}) -> 3", "(count_nodes {5}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4}) -> 1", "(count_nodes {3 {1} {8 {7} {5}}}) -> 5", "(count_nodes {2 {7} {4}}) -> 3", "(count_nodes {6}) -> 1", "(count_nodes {5}) -> 1", "(count_nodes {0}) -> 1", "(count_nodes {8 {0 {3}} {2}}) -> 4", "(count_nodes {5 {9}}) -> 2", "(count_nodes {4 {1 {3}} {4 {2} {2}}}) -> 6", "(count_nodes {2}) -> 1", "(count_nodes {3 {4}}) -> 2", "(count_nodes {1 {2} {4 {9}}}) -> 4"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.768217, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {8 {2} {2}}) -> 3", "(count_nodes {}) -> 0", "(count_nodes {9 {8}}) -> 2", "(count_nodes {1}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {4 {2 {7} {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {0 {5 {6 {6}}} {8 {7}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {1 {4 {4}}}) -> 3", "(count_nodes {3 {4} {6}}) -> 3", "(count_nodes {2 {6 {5} {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {9}) -> 1", "(count_nodes {9 {7 {9 {0} {3}}}}) -> 5", "(count_nodes {1 {0 {5}}}) -> 3", "(count_nodes {0 {2} {0}}) -> 3", "(count_nodes {6 {4 {4} {5}}}) -> 4", "(count_nodes {7 {0 {0} {3}} {6 {9}}}) -> 6", "(count_nodes {2 {3 {6} {7}} {3 {3} {7}}}) -> 7", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {9 {6}}) -> 2", "(count_nodes {4 {3 {3} {8}} {9}}) -> 5", "(count_nodes {0 {6 {3 {7} {4}}} {3 {9} {4 {3} {4}}}}) -> 10", "(count_nodes {}) -> 0", "(count_nodes {3 {9 {7} {3}} {5 {3} {6}}}) -> 7", "(count_nodes {0 {7 {0}}}) -> 3", "(count_nodes {5 {4 {1 {4}} {4}} {4 {0 {3} {7}}}}) -> 9", "(count_nodes {6 {4 {9 {7}}} {9}}) -> 5", "(count_nodes {7 {9 {7} {8}} {7 {5} {2}}}) -> 7", "(count_nodes {6}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {7 {5}}) -> 2", "(count_nodes {7 {3 {7} {7}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {6 {1}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {5 {6} {1}}) -> 3", "(count_nodes {8}) -> 1", "(count_nodes {7 {2} {5 {1 {2} {1}}}}) -> 6", "(count_nodes {5 {3} {9}}) -> 3", "(count_nodes {1 {9 {5 {1} {2}} {1 {9}}}}) -> 7", "(count_nodes {0 {6 {0 {5} {0}}}}) -> 5", "(count_nodes {4 {1} {0}}) -> 3"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.776853, "name": "count_nodes"}
{"examples": ["(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {8 {2}} {0 {1} {0}}}}) -> 7", "(count_nodes {6 {0} {6 {5}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {5}) -> 1", "(count_nodes {4 {8 {1 {0} {8}}}}) -> 5", "(count_nodes {8}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {2}) -> 1", "(count_nodes {4 {4} {4 {3}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {7 {5 {6} {8}} {7 {9} {4}}}) -> 7", "(count_nodes {4 {5} {0}}) -> 3", "(count_nodes {6 {1 {3 {1} {5}} {5 {1}}} {2}}) -> 8", "(count_nodes {7}) -> 1", "(count_nodes {8 {0} {1 {4}}}) -> 4", "(count_nodes {0 {4 {8} {5 {3} {6}}}}) -> 6", "(count_nodes {5 {5 {1 {3}}}}) -> 4", "(count_nodes {}) -> 0", "(count_nodes {}) -> 0", "(count_nodes {2 {5}}) -> 2", "(count_nodes {8}) -> 1", "(count_nodes {6 {7} {7 {6 {8}}}}) -> 5", "(count_nodes {7}) -> 1", "(count_nodes {7 {4} {7}}) -> 3", "(count_nodes {0 {9 {3} {2}} {8}}) -> 5", "(count_nodes {5 {5}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {6 {9}}) -> 2", "(count_nodes {}) -> 0", "(count_nodes {0}) -> 1", "(count_nodes {1}) -> 1", "(count_nodes {0 {6 {1}} {5 {3}}}) -> 5", "(count_nodes {6 {3 {6} {4}} {3 {8}}}) -> 6", "(count_nodes {0 {5 {6} {6}} {4 {6}}}) -> 6", "(count_nodes {0}) -> 1", "(count_nodes {}) -> 0", "(count_nodes {8 {9}}) -> 2", "(count_nodes {7 {8} {7}}) -> 3", "(count_nodes {4 {2}}) -> 2", "(count_nodes {9 {2 {9}} {5 {2} {4}}}) -> 6", "(count_nodes {}) -> 0", "(count_nodes {9 {7 {8}}}) -> 3", "(count_nodes {4 {7} {0}}) -> 3", "(count_nodes {4 {4}}) -> 2", "(count_nodes {1 {4}}) -> 2", "(count_nodes {0 {9} {6 {1 {9}} {6}}}) -> 6", "(count_nodes {1 {2}}) -> 2"], "solution": "(let count_nodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) 1)) 0)) _) _)", "time": 0.612848, "name": "count_nodes"}
