{"examples": ["(join []) -> []", "(join [[2 4] [1]]) -> [2 4 1]", "(join [[5 5 3 6 3] [5 1 4 9] [9 8]]) -> [5 5 3 6 3 5 1 4 9 9 8]", "(join [[2]]) -> [2]", "(join [[0 6 6] [] [7 6]]) -> [0 6 6 7 6]", "(join [[4 3] [] [5] [9 3] [7 6 1]]) -> [4 3 5 9 3 7 6 1]", "(join [[4 7] [5 6 7 2] [4]]) -> [4 7 5 6 7 2 4]", "(join [[7 0 6] [] [2 6 7] [3] [5 6 3]]) -> [7 0 6 2 6 7 3 5 6 3]", "(join [[8 8 2] [7]]) -> [8 8 2 7]", "(join [[4 3] [6 2 3 6 7] [7 3 6]]) -> [4 3 6 2 3 6 7 7 3 6]", "(join [[0 7 4]]) -> [0 7 4]", "(join [[2 2 1 2] [2] [2 3] []]) -> [2 2 1 2 2 2 3]", "(join [[0 1 8 1 8]]) -> [0 1 8 1 8]", "(join [[1 8 1] [3] [] [4 0 1 5 2] [8]]) -> [1 8 1 3 4 0 1 5 2 8]", "(join [[4 3 7 9] [7] [5] [3 1 9] [3 2]]) -> [4 3 7 9 7 5 3 1 9 3 2]", "(join []) -> []", "(join [[9 6] [2 2] [2 9 4] [8 0 5] [4]]) -> [9 6 2 2 2 9 4 8 0 5 4]", "(join [[] [4 2 7 3 7] []]) -> [4 2 7 3 7]", "(join [[]]) -> []", "(join [[6] [7 1] [7]]) -> [6 7 1 7]", "(join [[9 8 9]]) -> [9 8 9]", "(join [[0 2 6 8] [5] [0 2 6 2] [6] [8 7]]) -> [0 2 6 8 5 0 2 6 2 6 8 7]", "(join []) -> []", "(join [[4 4 2 8] [] [0 1 2 7] [3 1 5 6]]) -> [4 4 2 8 0 1 2 7 3 1 5 6]", "(join [[] []]) -> []", "(join [[]]) -> []", "(join []) -> []", "(join [[5] [5 1]]) -> [5 5 1]", "(join [[] [5 4 2] [] [6 8]]) -> [5 4 2 6 8]", "(join []) -> []", "(join [[8] [6 9] []]) -> [8 6 9]", "(join [[8 2 7] [7 6 0 7] [4 3 1 9 4] [5 8 4 9 2]]) -> [8 2 7 7 6 0 7 4 3 1 9 4 5 8 4 9 2]", "(join [[8 4 2 7 6] [8 3 4] [8 0 7 7] [] [0 1 3 8]]) -> [8 4 2 7 6 8 3 4 8 0 7 7 0 1 3 8]", "(join []) -> []", "(join [[0 3 6 3 9] [8 7] [7] [6 3 2] [3]]) -> [0 3 6 3 9 8 7 7 6 3 2 3]", "(join [[] [8 5 0 1] [9 6 0 2]]) -> [8 5 0 1 9 6 0 2]", "(join []) -> []", "(join [[5 8 1] [3 3] []]) -> [5 8 1 3 3]", "(join [[8 7]]) -> [8 7]", "(join [[1 7 1] [5 6] [] [8]]) -> [1 7 1 5 6 8]", "(join [[9 1 5] [] [8 1 9 8] [9 9 3 3 1]]) -> [9 1 5 8 1 9 8 9 9 3 3 1]", "(join [[] [5 5 1] [6 7]]) -> [5 5 1 6 7]", "(join []) -> []", "(join [[9 3 2 2 4] [4 8] [0] [6 8 5 7 4] [7 8 5]]) -> [9 3 2 2 4 4 8 0 6 8 5 7 4 7 8 5]", "(join [[6] [5 9 6 1] []]) -> [6 5 9 6 1]", "(join [[6 7 0 6 6] [1 9 9 8] [8 3 0] [5 1 4 1]]) -> [6 7 0 6 6 1 9 9 8 8 3 0 5 1 4 1]", "(join [[8 8 0 6]]) -> [8 8 0 6]", "(join [[8 0 9 3] [9 0 1]]) -> [8 0 9 3 9 0 1]", "(join [[0 8 3 3] [2] []]) -> [0 8 3 3 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.92154}
{"examples": ["(join []) -> []", "(join [[5] [5 4 8] [6] [0] [3 5 0 6 4]]) -> [5 5 4 8 6 0 3 5 0 6 4]", "(join [[] [6 0] []]) -> [6 0]", "(join []) -> []", "(join [[] [4 4 4 0 6] [0 3 9 8 7] [7 8]]) -> [4 4 4 0 6 0 3 9 8 7 7 8]", "(join [[5 7 0]]) -> [5 7 0]", "(join [[3 6 5 6] [2 0 4 1 1] [7] [3 3 3]]) -> [3 6 5 6 2 0 4 1 1 7 3 3 3]", "(join []) -> []", "(join [[1 8 8 9 0] []]) -> [1 8 8 9 0]", "(join [[3 6] [7 0]]) -> [3 6 7 0]", "(join []) -> []", "(join [[4]]) -> [4]", "(join []) -> []", "(join [[5]]) -> [5]", "(join [[] [1]]) -> [1]", "(join [[5 8 5 5] [8 3 1] [1 0 6 8] [3]]) -> [5 8 5 5 8 3 1 1 0 6 8 3]", "(join [[2 0 3 2] [] [7 3 1]]) -> [2 0 3 2 7 3 1]", "(join [[1 2] [2 3 6 9 7] [7 9 0 2] [6 7]]) -> [1 2 2 3 6 9 7 7 9 0 2 6 7]", "(join []) -> []", "(join [[2]]) -> [2]", "(join []) -> []", "(join []) -> []", "(join [[1] [0 2 2] [8 0 4]]) -> [1 0 2 2 8 0 4]", "(join []) -> []", "(join [[9 9] [7 6 8 1 3] [2 5 9] [] [6 5 5 0 2]]) -> [9 9 7 6 8 1 3 2 5 9 6 5 5 0 2]", "(join []) -> []", "(join []) -> []", "(join [[2 9] [6] [0 0]]) -> [2 9 6 0 0]", "(join [[5 3 4] [6]]) -> [5 3 4 6]", "(join []) -> []", "(join [[2 2 7] [] [1]]) -> [2 2 7 1]", "(join []) -> []", "(join [[9 0 4] [6 2] [2 5 8 6] [0] [5]]) -> [9 0 4 6 2 2 5 8 6 0 5]", "(join [[1] [8] [8 5 3 1] [0 3]]) -> [1 8 8 5 3 1 0 3]", "(join [[] []]) -> []", "(join [[]]) -> []", "(join [[9 3 4] [0 4]]) -> [9 3 4 0 4]", "(join [[6 7 6] [] [6 8 4 6] [8 0 8] [0 2 3]]) -> [6 7 6 6 8 4 6 8 0 8 0 2 3]", "(join [[]]) -> []", "(join [[4 4 4] [6 5 5 7 2] [9 8] [5]]) -> [4 4 4 6 5 5 7 2 9 8 5]", "(join []) -> []", "(join [[8]]) -> [8]", "(join []) -> []", "(join [[2 3 9 0] [1] [2]]) -> [2 3 9 0 1 2]", "(join [[0 6 8] [6 0 3 2 6] [7 7 4 6]]) -> [0 6 8 6 0 3 2 6 7 7 4 6]", "(join [[1 5] [] [4 0] [9 4 7 0]]) -> [1 5 4 0 9 4 7 0]", "(join [[] [1 8 3 4]]) -> [1 8 3 4]", "(join [[9 6 5] [8 6 1 8]]) -> [9 6 5 8 6 1 8]", "(join [[] [2 4 0 9] [2] [5 2]]) -> [2 4 0 9 2 5 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.973334}
{"examples": ["(join []) -> []", "(join [[5 5] []]) -> [5 5]", "(join [[6 3] [] [] [7] [9 9]]) -> [6 3 7 9 9]", "(join [[] [8 6] [] [0 9 2] []]) -> [8 6 0 9 2]", "(join [[4 0 3] [1] []]) -> [4 0 3 1]", "(join [[2 4 4 6 1] [8 7 3]]) -> [2 4 4 6 1 8 7 3]", "(join [[7 9 9 4 3]]) -> [7 9 9 4 3]", "(join [[5]]) -> [5]", "(join [[1 9 5] [3 5 0 9 5] [6 4 3 5]]) -> [1 9 5 3 5 0 9 5 6 4 3 5]", "(join [[] []]) -> []", "(join [[7 6] [] [9 5] [4 9 3]]) -> [7 6 9 5 4 9 3]", "(join []) -> []", "(join []) -> []", "(join [[9 4]]) -> [9 4]", "(join [[] [4 9] []]) -> [4 9]", "(join [[6 6 3 6 8] [8 5 6] [0 6 8] []]) -> [6 6 3 6 8 8 5 6 0 6 8]", "(join [[1 6 9] [3 2 4] [8 6]]) -> [1 6 9 3 2 4 8 6]", "(join [[8 4 9 8 8] [4 7] [9 9 5 9 5] []]) -> [8 4 9 8 8 4 7 9 9 5 9 5]", "(join [[8 5 0 0] [2 8 3 8 3]]) -> [8 5 0 0 2 8 3 8 3]", "(join [[3 9]]) -> [3 9]", "(join [[7 5 2 9] [0 4 2] [9 4 4 6 5] [9]]) -> [7 5 2 9 0 4 2 9 4 4 6 5 9]", "(join []) -> []", "(join [[3 1] [3 1 7] [5 2 7 2 4] [5 0 5 2 9] [6 1 0 5 0]]) -> [3 1 3 1 7 5 2 7 2 4 5 0 5 2 9 6 1 0 5 0]", "(join [[4] [3 3 7] [3 0 1 2] []]) -> [4 3 3 7 3 0 1 2]", "(join [[0 4] [6 4 8] [] []]) -> [0 4 6 4 8]", "(join [[0 5 5 5] [1 0 8 4]]) -> [0 5 5 5 1 0 8 4]", "(join [[1 4 2] [] [4 0]]) -> [1 4 2 4 0]", "(join [[9 8 2 0] []]) -> [9 8 2 0]", "(join [[6 1]]) -> [6 1]", "(join [[3 5 2 9 5] [9 7 6 4 9] [7 4] [4 9 2] [1 3 5]]) -> [3 5 2 9 5 9 7 6 4 9 7 4 4 9 2 1 3 5]", "(join [[]]) -> []", "(join [[] [] [2 0 1 1 3] [1 7 6 7 5]]) -> [2 0 1 1 3 1 7 6 7 5]", "(join [[9 8 9 7] [3 8 3 4 3] [6 2 4 0 2] [0] [6 0 1]]) -> [9 8 9 7 3 8 3 4 3 6 2 4 0 2 0 6 0 1]", "(join [[3 8 9 7] [8] [6 2 5 7] [] [0 8 8 7]]) -> [3 8 9 7 8 6 2 5 7 0 8 8 7]", "(join [[9 6 4 0] [4 0 4]]) -> [9 6 4 0 4 0 4]", "(join [[4 4 3] [4 7 3] [8] [2] [2 8 7 2 6]]) -> [4 4 3 4 7 3 8 2 2 8 7 2 6]", "(join [[4 4] [0 1 1 6 7] [4 8 1]]) -> [4 4 0 1 1 6 7 4 8 1]", "(join [[7 7 1 0] [] [6 6 0 8]]) -> [7 7 1 0 6 6 0 8]", "(join [[1]]) -> [1]", "(join [[5]]) -> [5]", "(join []) -> []", "(join [[7 7 4 9 2] [6 0 7] [4]]) -> [7 7 4 9 2 6 0 7 4]", "(join [[8 4 6 3 7]]) -> [8 4 6 3 7]", "(join [[3 8 5] [6 8 4 8] [1 1]]) -> [3 8 5 6 8 4 8 1 1]", "(join [[6 0 0]]) -> [6 0 0]", "(join [[3 6 6] [] [7 2 1 7] [0 6 2 7 0] []]) -> [3 6 6 7 2 1 7 0 6 2 7 0]", "(join [[7 4 1 3]]) -> [7 4 1 3]", "(join [[0] [2 7 9 5] []]) -> [0 2 7 9 5]", "(join [[] [7 9] [4 5 9] [2 3] []]) -> [7 9 4 5 9 2 3]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.922057}
{"examples": ["(join []) -> []", "(join [[1] [0] [3 0 4] [2 4 4]]) -> [1 0 3 0 4 2 4 4]", "(join [[9] [0] [6]]) -> [9 0 6]", "(join []) -> []", "(join []) -> []", "(join [[6 6 5]]) -> [6 6 5]", "(join [[1] [2 1]]) -> [1 2 1]", "(join [[5 4 3 2] [4] [2 2 5] [8 7 3 2]]) -> [5 4 3 2 4 2 2 5 8 7 3 2]", "(join [[4] [4] [2 6] [1 1 1]]) -> [4 4 2 6 1 1 1]", "(join []) -> []", "(join []) -> []", "(join [[9 3 1] [3 0 6 3 0] [8 9 7] [] [0]]) -> [9 3 1 3 0 6 3 0 8 9 7 0]", "(join [[0 8 4 9] [] [] [] [6]]) -> [0 8 4 9 6]", "(join []) -> []", "(join [[3 1 3 7]]) -> [3 1 3 7]", "(join [[6 5] [2 0] [7 4] [2 5 9 9] [1]]) -> [6 5 2 0 7 4 2 5 9 9 1]", "(join [[1 8 6 8 1] [7 4 9 8 7]]) -> [1 8 6 8 1 7 4 9 8 7]", "(join []) -> []", "(join [[6 0 5 4] [] [2 6]]) -> [6 0 5 4 2 6]", "(join [[3 0 0 2] [] [3 8 8 4 1] [1 6]]) -> [3 0 0 2 3 8 8 4 1 1 6]", "(join [[] [7 3 7] [8 5 0 0 8] [2 7]]) -> [7 3 7 8 5 0 0 8 2 7]", "(join []) -> []", "(join [[2 0] [8 6 9 7] [2 5 4 2]]) -> [2 0 8 6 9 7 2 5 4 2]", "(join []) -> []", "(join [[7] [8 4 5 3]]) -> [7 8 4 5 3]", "(join []) -> []", "(join [[] [1 6 9] [3 0 8 3]]) -> [1 6 9 3 0 8 3]", "(join [[9] [1 0] [] [4 6 3 0 5] [1 9 6 3 3]]) -> [9 1 0 4 6 3 0 5 1 9 6 3 3]", "(join []) -> []", "(join [[9 3]]) -> [9 3]", "(join []) -> []", "(join [[2] [4 6 8 4 1] [0 4 7 6] [6 0] [4 4 1]]) -> [2 4 6 8 4 1 0 4 7 6 6 0 4 4 1]", "(join [[0 3 2] [] [3 4 5 0] []]) -> [0 3 2 3 4 5 0]", "(join [[0 9 1 9 3] [0] [2 4 5] [3]]) -> [0 9 1 9 3 0 2 4 5 3]", "(join [[7 3 5 9 3]]) -> [7 3 5 9 3]", "(join [[8] [0]]) -> [8 0]", "(join [[0 1 9 5 2] [4 8 4] [8 8 2 8 7]]) -> [0 1 9 5 2 4 8 4 8 8 2 8 7]", "(join [[8 5] [3 0 3 6 5] []]) -> [8 5 3 0 3 6 5]", "(join [[3 9 6 5] [0 6 7 4] [7 4] [0 3 5 1 5]]) -> [3 9 6 5 0 6 7 4 7 4 0 3 5 1 5]", "(join [[8] [8 5 0] [8]]) -> [8 8 5 0 8]", "(join [[6 1 3 6] []]) -> [6 1 3 6]", "(join [[3 4 8 5] [] [5 1] [8 0 1 1] [0 6 3]]) -> [3 4 8 5 5 1 8 0 1 1 0 6 3]", "(join [[] [7 3 1 8 4] [3 6 1 4 4] [] []]) -> [7 3 1 8 4 3 6 1 4 4]", "(join [[5] [4 1 6 0]]) -> [5 4 1 6 0]", "(join []) -> []", "(join [[3 6 5] [8 6 3] [7]]) -> [3 6 5 8 6 3 7]", "(join [[2 8 1 2 3]]) -> [2 8 1 2 3]", "(join []) -> []", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.955374}
{"examples": ["(join []) -> []", "(join [[6 4 0 9 8] [8 9 4] [6 0 4] [2 6 7 6]]) -> [6 4 0 9 8 8 9 4 6 0 4 2 6 7 6]", "(join [[3 6 3 7 2] [9] [0 3 1]]) -> [3 6 3 7 2 9 0 3 1]", "(join [[] [2 8 7 1]]) -> [2 8 7 1]", "(join [[5 4 6 9 7] [5 8]]) -> [5 4 6 9 7 5 8]", "(join [[9 0]]) -> [9 0]", "(join [[3 7 9 1] [2 9] [8] [5] [9]]) -> [3 7 9 1 2 9 8 5 9]", "(join [[0 6 4] [] [2 6 3] [2 1 2]]) -> [0 6 4 2 6 3 2 1 2]", "(join [[] [5 7 7] [] [4 0] [6]]) -> [5 7 7 4 0 6]", "(join [[1 1 4 5] [] [4 7 1 0] [2 6 8 3] []]) -> [1 1 4 5 4 7 1 0 2 6 8 3]", "(join [[] [0 5 2 8] [9 9 4]]) -> [0 5 2 8 9 9 4]", "(join []) -> []", "(join [[6 8 1] [7 7 7]]) -> [6 8 1 7 7 7]", "(join [[5 0]]) -> [5 0]", "(join []) -> []", "(join []) -> []", "(join [[0] [2] [] [0]]) -> [0 2 0]", "(join [[9 8 2]]) -> [9 8 2]", "(join [[6 8 4 3 9]]) -> [6 8 4 3 9]", "(join [[0 3 0 1 0]]) -> [0 3 0 1 0]", "(join [[3 5 6 8 6] [1 6] [4] [4 3 7] [4 0 3 9]]) -> [3 5 6 8 6 1 6 4 4 3 7 4 0 3 9]", "(join [[8 1]]) -> [8 1]", "(join [[4 3 9] [9] [4 1 6 7 2]]) -> [4 3 9 9 4 1 6 7 2]", "(join [[5 0] [8 6 2 9 3] [3 3 1 3]]) -> [5 0 8 6 2 9 3 3 3 1 3]", "(join [[0 7 8 7] [8 4 7 0 4] [7 1 7 1]]) -> [0 7 8 7 8 4 7 0 4 7 1 7 1]", "(join [[2 8] [8 4 6 1 0]]) -> [2 8 8 4 6 1 0]", "(join []) -> []", "(join []) -> []", "(join [[5 2 6]]) -> [5 2 6]", "(join [[0] [0] [3 5] [] [5 1 4 6 4]]) -> [0 0 3 5 5 1 4 6 4]", "(join [[4 6 6 9] [3 4 7 0 4]]) -> [4 6 6 9 3 4 7 0 4]", "(join [[1 2]]) -> [1 2]", "(join [[6] [6 5 3 1] [5 8 5] [5 2 8] []]) -> [6 6 5 3 1 5 8 5 5 2 8]", "(join [[8 2 2] [0 4 3] [9 9 2 7] [6 7]]) -> [8 2 2 0 4 3 9 9 2 7 6 7]", "(join [[1 6 2 0 5] [8 8] [] [2]]) -> [1 6 2 0 5 8 8 2]", "(join []) -> []", "(join []) -> []", "(join [[9 2 0 0] [7 2] [] [3 1 5 3]]) -> [9 2 0 0 7 2 3 1 5 3]", "(join [[4] [5 0 3]]) -> [4 5 0 3]", "(join [[4 9 3] [5 6]]) -> [4 9 3 5 6]", "(join [[5 0 1 3 5]]) -> [5 0 1 3 5]", "(join [[7] [5 6 2 2 2] [0 8] [6 1 2 7 3]]) -> [7 5 6 2 2 2 0 8 6 1 2 7 3]", "(join [[7 8 6 1 3]]) -> [7 8 6 1 3]", "(join []) -> []", "(join [[3 3 0 1] [5]]) -> [3 3 0 1 5]", "(join [[7 9 7] [9] [3]]) -> [7 9 7 9 3]", "(join [[2 9] [9 1 5]]) -> [2 9 9 1 5]", "(join [[2 7] [2] [2 8 6] [9 5]]) -> [2 7 2 2 8 6 9 5]", "(join [[] [0 6 1] [6 1 8 6 7]]) -> [0 6 1 6 1 8 6 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.001928}
{"examples": ["(join []) -> []", "(join [[6] [9 8 5 1 7] [0 4 6] [3 0 3 7]]) -> [6 9 8 5 1 7 0 4 6 3 0 3 7]", "(join [[6] [3] [2 3 0] []]) -> [6 3 2 3 0]", "(join [[7 3 1] [6 7 4 3 1] [5 4 2 6 8] [8 8] [6 8]]) -> [7 3 1 6 7 4 3 1 5 4 2 6 8 8 8 6 8]", "(join [[9] [] []]) -> [9]", "(join [[2]]) -> [2]", "(join [[4 2 0] []]) -> [4 2 0]", "(join [[8 9] []]) -> [8 9]", "(join [[6] [9 4] [8 0 7 6]]) -> [6 9 4 8 0 7 6]", "(join []) -> []", "(join [[6 1 6] [0 1]]) -> [6 1 6 0 1]", "(join []) -> []", "(join [[] [1 2] [] [] []]) -> [1 2]", "(join [[5 3 5 4 8] [6 2 0 5] [2] [4 3 2 0]]) -> [5 3 5 4 8 6 2 0 5 2 4 3 2 0]", "(join [[9 9 8 9 2] [8 2 8 9 1] [6 5 4 7] [0 4 2 7 0] [7 7]]) -> [9 9 8 9 2 8 2 8 9 1 6 5 4 7 0 4 2 7 0 7 7]", "(join [[] [2 9 8 9 1] [8 7 6 8] [9 4 8 9 5] [7]]) -> [2 9 8 9 1 8 7 6 8 9 4 8 9 5 7]", "(join []) -> []", "(join [[8 4 4] [7 3 5 5] [8 2]]) -> [8 4 4 7 3 5 5 8 2]", "(join [[4 3]]) -> [4 3]", "(join [[2] [2]]) -> [2 2]", "(join [[] [9 4] []]) -> [9 4]", "(join [[5 3 6 8 9] [5 8 8 3 7] [3 0] [7 8 2 1]]) -> [5 3 6 8 9 5 8 8 3 7 3 0 7 8 2 1]", "(join [[5 4] [5 8] [7 4 0] [2] []]) -> [5 4 5 8 7 4 0 2]", "(join [[7 5 0] [7 4 7] [6 2 2 0] [1 4 6]]) -> [7 5 0 7 4 7 6 2 2 0 1 4 6]", "(join [[7 2 6 4] []]) -> [7 2 6 4]", "(join [[7 7] [8 2 6 9] [9 6] []]) -> [7 7 8 2 6 9 9 6]", "(join [[8 0 4 6 4]]) -> [8 0 4 6 4]", "(join [[5 9]]) -> [5 9]", "(join [[9 7 2 1 1] [5 5] [8 7 8 4]]) -> [9 7 2 1 1 5 5 8 7 8 4]", "(join [[8 1]]) -> [8 1]", "(join [[5 3 4] [9 9 2 0] [5 9]]) -> [5 3 4 9 9 2 0 5 9]", "(join []) -> []", "(join [[8 0 1] [9 7 2 0 4] [3 9 3] []]) -> [8 0 1 9 7 2 0 4 3 9 3]", "(join [[5 8 0 6] [8 4] [2 9 8 7 1] [8]]) -> [5 8 0 6 8 4 2 9 8 7 1 8]", "(join [[1 9 5]]) -> [1 9 5]", "(join [[] [4 2]]) -> [4 2]", "(join []) -> []", "(join [[2 5 0 5]]) -> [2 5 0 5]", "(join [[3 2 6 6] [] [1 6 9 6]]) -> [3 2 6 6 1 6 9 6]", "(join [[6] [0 8]]) -> [6 0 8]", "(join [[] [4 3 7 9 2] [9 6 9 4 9] [7 1 8]]) -> [4 3 7 9 2 9 6 9 4 9 7 1 8]", "(join [[4 0 7 7 7] [4 2] [0 2 8]]) -> [4 0 7 7 7 4 2 0 2 8]", "(join [[8 2 5] [] [7 6 4] [7]]) -> [8 2 5 7 6 4 7]", "(join [[6 2] [6 0 1] [2 8] [6 5]]) -> [6 2 6 0 1 2 8 6 5]", "(join [[7 9 1 4] [8 0] [7] [0 0]]) -> [7 9 1 4 8 0 7 0 0]", "(join [[6 6] [6 3]]) -> [6 6 6 3]", "(join [[3 2] [3 2 3 2] [9 3 7 9] [5]]) -> [3 2 3 2 3 2 9 3 7 9 5]", "(join [[]]) -> []", "(join [[8 1 9 1] [0 0 6 9 9] [0 5 2 2 5]]) -> [8 1 9 1 0 0 6 9 9 0 5 2 2 5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.01453}
{"examples": ["(join []) -> []", "(join [[]]) -> []", "(join [[8 1] [4] [5 6 3 4 0] [8 4 6 2 3]]) -> [8 1 4 5 6 3 4 0 8 4 6 2 3]", "(join []) -> []", "(join [[9 5 4 6 8] [3 8] [0 7 4]]) -> [9 5 4 6 8 3 8 0 7 4]", "(join []) -> []", "(join [[5] [9 9] [4 3 3 1 3] [0] [4 5]]) -> [5 9 9 4 3 3 1 3 0 4 5]", "(join [[5 2] [4 6 8 6 1] [9 3 5 7 3]]) -> [5 2 4 6 8 6 1 9 3 5 7 3]", "(join [[2 1] [1 1 5 3 8] [5 9 5] [1 0 5]]) -> [2 1 1 1 5 3 8 5 9 5 1 0 5]", "(join []) -> []", "(join []) -> []", "(join [[] [0 4 3 8 0] [0 0 9 9]]) -> [0 4 3 8 0 0 0 9 9]", "(join [[9 1] [] [3] [9 7 6 5] []]) -> [9 1 3 9 7 6 5]", "(join []) -> []", "(join [[] [2]]) -> [2]", "(join [[7 4 0 7] [7 7] []]) -> [7 4 0 7 7 7]", "(join [[8 1] [4 7 1 2 5] [0 7 7] [8 2 1] [3 0 9 3]]) -> [8 1 4 7 1 2 5 0 7 7 8 2 1 3 0 9 3]", "(join [[3 5 3 8] [3 9 5] [8 2]]) -> [3 5 3 8 3 9 5 8 2]", "(join [[0 9 8] [1] [9 4]]) -> [0 9 8 1 9 4]", "(join [[0 5 9 6 2] [1 1 7] [] [3 1 6 4]]) -> [0 5 9 6 2 1 1 7 3 1 6 4]", "(join [[3] [8 3 0 7 0] [] [9 0 1 6] [0 4]]) -> [3 8 3 0 7 0 9 0 1 6 0 4]", "(join [[6 8] [4] [1 9] [] [5 5 8]]) -> [6 8 4 1 9 5 5 8]", "(join [[]]) -> []", "(join []) -> []", "(join [[5 1]]) -> [5 1]", "(join [[3 6 4 8] []]) -> [3 6 4 8]", "(join [[2 6 4 5 7] [2 9 5 0] [1] [3 4 9 1 8]]) -> [2 6 4 5 7 2 9 5 0 1 3 4 9 1 8]", "(join [[3 1 5] [8 0] [9 5 2 3 1] [4 7 7 9 6] [5]]) -> [3 1 5 8 0 9 5 2 3 1 4 7 7 9 6 5]", "(join [[8 9 5 8] [] [1 9 4]]) -> [8 9 5 8 1 9 4]", "(join []) -> []", "(join [[2 2 1] []]) -> [2 2 1]", "(join [[1 4 1 5 5] [1 6 0 5 8] [5 2 9]]) -> [1 4 1 5 5 1 6 0 5 8 5 2 9]", "(join [[6 4] [5] [3 0] []]) -> [6 4 5 3 0]", "(join [[2 5 9 0 1] [8] [1 5 3 0 5] [9 9]]) -> [2 5 9 0 1 8 1 5 3 0 5 9 9]", "(join [[9 4 5] [8 5] [7 0 3]]) -> [9 4 5 8 5 7 0 3]", "(join [[0 9 1 7]]) -> [0 9 1 7]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[3 6 3 7 2] [4 4 5 1]]) -> [3 6 3 7 2 4 4 5 1]", "(join [[5 9 6 6 1] [6 1 5 8] [3 0 0] [6] []]) -> [5 9 6 6 1 6 1 5 8 3 0 0 6]", "(join [[4 1] [7 8] []]) -> [4 1 7 8]", "(join [[] [1] [9]]) -> [1 9]", "(join []) -> []", "(join [[1 8 1 5] []]) -> [1 8 1 5]", "(join [[] [3 9 1 1] [4] [0 4 3 4 8]]) -> [3 9 1 1 4 0 4 3 4 8]", "(join [[4 1 0 5] [1 8 9 4 4] [7 7 7 8 5] [6 9] [9 4]]) -> [4 1 0 5 1 8 9 4 4 7 7 7 8 5 6 9 9 4]", "(join [[]]) -> []", "(join [[7 6 1] [3 6 2 4] [5] [4 5 1] [2 9]]) -> [7 6 1 3 6 2 4 5 4 5 1 2 9]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.901587}
{"examples": ["(join []) -> []", "(join [[2 7] [4 6 7] [4 9 9] [7]]) -> [2 7 4 6 7 4 9 9 7]", "(join []) -> []", "(join [[4] [] [6 5 4 5 8] [9 9]]) -> [4 6 5 4 5 8 9 9]", "(join [[0] [6 3 3 4] [5 4 9 9]]) -> [0 6 3 3 4 5 4 9 9]", "(join [[1] [6] [] [9 5 3]]) -> [1 6 9 5 3]", "(join [[9 9 8] [9 5] [9 3 5 7 8] [6] [1 0 3]]) -> [9 9 8 9 5 9 3 5 7 8 6 1 0 3]", "(join [[4 3 5 5 1]]) -> [4 3 5 5 1]", "(join [[] [5 8 7 5]]) -> [5 8 7 5]", "(join [[2 4 0 4] [4 8 1 4 7] [7] []]) -> [2 4 0 4 4 8 1 4 7 7]", "(join [[1 9 7 8 9] [9] [] [1]]) -> [1 9 7 8 9 9 1]", "(join [[4 6 0 8]]) -> [4 6 0 8]", "(join []) -> []", "(join [[0 3 5]]) -> [0 3 5]", "(join [[8] [5] [1] [] [7 1 6]]) -> [8 5 1 7 1 6]", "(join []) -> []", "(join [[1 7 1 2] []]) -> [1 7 1 2]", "(join [[7] [0 4 5 2]]) -> [7 0 4 5 2]", "(join [[1 0 0 6 3] [] [7 0 1]]) -> [1 0 0 6 3 7 0 1]", "(join [[1] [9 9 2] [9 3 2 6] [2 7 6] [1 4 8]]) -> [1 9 9 2 9 3 2 6 2 7 6 1 4 8]", "(join []) -> []", "(join []) -> []", "(join [[9] [5 8 8] [8 8 4 7] [1 8 4 9] []]) -> [9 5 8 8 8 8 4 7 1 8 4 9]", "(join [[2 0 6] [4 4] [9] [8 9 8 5 5] [8 5 1 3]]) -> [2 0 6 4 4 9 8 9 8 5 5 8 5 1 3]", "(join [[7 3 3] [0 2 3 1 3] [7]]) -> [7 3 3 0 2 3 1 3 7]", "(join []) -> []", "(join [[8 3 5] [6 2 0 9] [7 7 2 8] [6 0 7 0]]) -> [8 3 5 6 2 0 9 7 7 2 8 6 0 7 0]", "(join [[3 2] [3 2 8 5 3] [8 3 8 1] [4 9 6 5 6] [8 7 1 9]]) -> [3 2 3 2 8 5 3 8 3 8 1 4 9 6 5 6 8 7 1 9]", "(join [[7 4 2]]) -> [7 4 2]", "(join [[7 6 8 5] [9] [9] [1] [7 3 6 9 7]]) -> [7 6 8 5 9 9 1 7 3 6 9 7]", "(join [[9 6 2] [3 5 3 8] [6]]) -> [9 6 2 3 5 3 8 6]", "(join []) -> []", "(join [[5] [7 8]]) -> [5 7 8]", "(join [[9 5 4 0 4] [9 6 4 0 6] [] [4]]) -> [9 5 4 0 4 9 6 4 0 6 4]", "(join [[] [8] [] []]) -> [8]", "(join [[5 1 1 4 9] [7 7] [] [] [7 1 2 9 2]]) -> [5 1 1 4 9 7 7 7 1 2 9 2]", "(join []) -> []", "(join [[7 1] [1 4 1 7 5] [2 6] [0 5 8 2] []]) -> [7 1 1 4 1 7 5 2 6 0 5 8 2]", "(join [[] [9 1 0 4 4] [8 0 8]]) -> [9 1 0 4 4 8 0 8]", "(join [[2] [0 4 6] [8 1 2] []]) -> [2 0 4 6 8 1 2]", "(join []) -> []", "(join [[]]) -> []", "(join [[5 6] [8 0] [3] [5 8 8 4]]) -> [5 6 8 0 3 5 8 8 4]", "(join [[8 1 4] [0 5 2] [2 6 7 8 1]]) -> [8 1 4 0 5 2 2 6 7 8 1]", "(join [[4 3 8 4] [7 2 5 6 7] [6 4 4] [9 9 9] [0 7 8]]) -> [4 3 8 4 7 2 5 6 7 6 4 4 9 9 9 0 7 8]", "(join [[8] [2 5 5 1]]) -> [8 2 5 5 1]", "(join [[9 8 5] [2 5 9 3 9]]) -> [9 8 5 2 5 9 3 9]", "(join [[9 6 4] [0 8 7 4 7] [0] [5 2] [6 9 8]]) -> [9 6 4 0 8 7 4 7 0 5 2 6 9 8]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.985703}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[] [0 0 9] [9]]) -> [0 0 9 9]", "(join [[6 4 1] [8 0] [] [1 3] [7]]) -> [6 4 1 8 0 1 3 7]", "(join [[9 6 4]]) -> [9 6 4]", "(join [[8 0 7 5] [2 0 8] [2] [7 1]]) -> [8 0 7 5 2 0 8 2 7 1]", "(join [[0 2 7 5 6]]) -> [0 2 7 5 6]", "(join [[]]) -> []", "(join [[]]) -> []", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[6 9] [8 8] [0 6 5 3] [5] [0]]) -> [6 9 8 8 0 6 5 3 5 0]", "(join [[2 1 9] [] [5 6] [8 5 6 3 8] [3 3 3]]) -> [2 1 9 5 6 8 5 6 3 8 3 3 3]", "(join [[7 4 7 6] [6 8 0 6 2] [1] [] [4]]) -> [7 4 7 6 6 8 0 6 2 1 4]", "(join [[0] [7] [2]]) -> [0 7 2]", "(join [[1 4 4 8] [0] [] [1 9] []]) -> [1 4 4 8 0 1 9]", "(join [[] [7 8] [3 5 7 5] [9]]) -> [7 8 3 5 7 5 9]", "(join [[1 8 3] [1 4 4 9] [2 7 7 4 2]]) -> [1 8 3 1 4 4 9 2 7 7 4 2]", "(join []) -> []", "(join [[8 7] [6 5 8] [8 7 6] [1] [7 5 8 2 1]]) -> [8 7 6 5 8 8 7 6 1 7 5 8 2 1]", "(join [[3 8 3 4 4]]) -> [3 8 3 4 4]", "(join [[5 0 8 3 4]]) -> [5 0 8 3 4]", "(join [[2 5 5 6] [9 4 8 5] [1 2] [6 9 2 2 5]]) -> [2 5 5 6 9 4 8 5 1 2 6 9 2 2 5]", "(join [[2 0] [7] [2 0 7 4 9] [3 3 2] [1 6]]) -> [2 0 7 2 0 7 4 9 3 3 2 1 6]", "(join [[1 0 5 4 8] [4 1 5 6]]) -> [1 0 5 4 8 4 1 5 6]", "(join []) -> []", "(join [[2]]) -> [2]", "(join [[1 7 7 8 7]]) -> [1 7 7 8 7]", "(join [[2 3 9] [6 2 3 7 2]]) -> [2 3 9 6 2 3 7 2]", "(join [[9] [] [4 2 8 7] []]) -> [9 4 2 8 7]", "(join [[7 1 5 7 6] [2 6 4 4] [8] [] [3 5]]) -> [7 1 5 7 6 2 6 4 4 8 3 5]", "(join [[9 4 0 8]]) -> [9 4 0 8]", "(join [[1 7] [4 6 5 1 0] [5 7 5 9 4] [0 3]]) -> [1 7 4 6 5 1 0 5 7 5 9 4 0 3]", "(join [[1 9 2 1] [] [] [0 7] [3 5 8 7]]) -> [1 9 2 1 0 7 3 5 8 7]", "(join [[] [7 5] [1 1 5] [] [6 2 2 1]]) -> [7 5 1 1 5 6 2 2 1]", "(join []) -> []", "(join []) -> []", "(join [[9 4 5 2 4] [] []]) -> [9 4 5 2 4]", "(join [[2 5] []]) -> [2 5]", "(join [[2 1] [7 0 3 0] [1 2 3 3 0]]) -> [2 1 7 0 3 0 1 2 3 3 0]", "(join [[5 5 0] [4]]) -> [5 5 0 4]", "(join [[7 3 4 0 1] [0 3] [2 5 3 6] [7 2 7] [0 1]]) -> [7 3 4 0 1 0 3 2 5 3 6 7 2 7 0 1]", "(join []) -> []", "(join [[5 3 3 8] [9 8 9 2 3] []]) -> [5 3 3 8 9 8 9 2 3]", "(join [[]]) -> []", "(join [[5 9 1] [7 6 0]]) -> [5 9 1 7 6 0]", "(join [[] [6 3 6 5 8] [5]]) -> [6 3 6 5 8 5]", "(join [[2 9] [5 3 1] [8 0]]) -> [2 9 5 3 1 8 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.97428}
{"examples": ["(join []) -> []", "(join [[9 0 9 4] [5 4 1 2] [1 1] [0 5 1 2] [3 2]]) -> [9 0 9 4 5 4 1 2 1 1 0 5 1 2 3 2]", "(join [[9 8 8 3 1] [3 2 8 3 4] [4 0 3]]) -> [9 8 8 3 1 3 2 8 3 4 4 0 3]", "(join []) -> []", "(join [[] [7 1 8 7] [7 2] [4]]) -> [7 1 8 7 7 2 4]", "(join [[2 8 7] [1]]) -> [2 8 7 1]", "(join [[3 3 1]]) -> [3 3 1]", "(join [[4 6 3 1] [5] [9 9] [6 8 5 9] [7 7]]) -> [4 6 3 1 5 9 9 6 8 5 9 7 7]", "(join []) -> []", "(join [[] [] [] [] []]) -> []", "(join []) -> []", "(join []) -> []", "(join [[1 2 7 6 9] [] [6 5]]) -> [1 2 7 6 9 6 5]", "(join []) -> []", "(join [[5] [5 5] [2 6 1 8 1] [0 0 5 0]]) -> [5 5 5 2 6 1 8 1 0 0 5 0]", "(join [[1] [8 1 5 1]]) -> [1 8 1 5 1]", "(join [[2] []]) -> [2]", "(join [[0 0 4 8 1]]) -> [0 0 4 8 1]", "(join [[9] [6 5 9 0] [9 8 3]]) -> [9 6 5 9 0 9 8 3]", "(join [[] [8 0 7 8 9] [1 8 5]]) -> [8 0 7 8 9 1 8 5]", "(join [[3 2 0 2] [9 2 8 5 1] [0 9 3 0]]) -> [3 2 0 2 9 2 8 5 1 0 9 3 0]", "(join [[3 6 8] [0 5 1 6 1] [7 6 6 5] [7] [0 6]]) -> [3 6 8 0 5 1 6 1 7 6 6 5 7 0 6]", "(join [[4 2 7 5 4] [1 3 5]]) -> [4 2 7 5 4 1 3 5]", "(join [[] [6 7] [3] [1]]) -> [6 7 3 1]", "(join [[] []]) -> []", "(join [[1] [] [7 5 5 2 7]]) -> [1 7 5 5 2 7]", "(join [[3 8 6]]) -> [3 8 6]", "(join [[6 1]]) -> [6 1]", "(join [[4 1 6] [] [4 8 9 5 2] []]) -> [4 1 6 4 8 9 5 2]", "(join [[3] [5 0 8 7 0]]) -> [3 5 0 8 7 0]", "(join []) -> []", "(join [[9 9 3] [8 6] [6]]) -> [9 9 3 8 6 6]", "(join [[3 8 1] [8 5] [4 8 3 1 8] [7 7 2]]) -> [3 8 1 8 5 4 8 3 1 8 7 7 2]", "(join []) -> []", "(join [[4 8 4] [] [5] [7 1 6] [6]]) -> [4 8 4 5 7 1 6 6]", "(join []) -> []", "(join [[0 6 7 5 5] [3 4 9 8 5] [6]]) -> [0 6 7 5 5 3 4 9 8 5 6]", "(join [[6] [4] [9] []]) -> [6 4 9]", "(join [[] [3 8 3 5 3]]) -> [3 8 3 5 3]", "(join [[3 3 4 5]]) -> [3 3 4 5]", "(join []) -> []", "(join [[2 5 4] [1 0 6 9 8] [6] [7 6] [8 1 1 1 9]]) -> [2 5 4 1 0 6 9 8 6 7 6 8 1 1 1 9]", "(join [[6 6 8 7 6] [0] [5 1 9 9 3]]) -> [6 6 8 7 6 0 5 1 9 9 3]", "(join [[8] [] [9 2] [5 7 0 2]]) -> [8 9 2 5 7 0 2]", "(join [[] [] [3 6 9 4 9] [0 1 2 2 3] []]) -> [3 6 9 4 9 0 1 2 2 3]", "(join []) -> []", "(join [[5 9 9 9 4]]) -> [5 9 9 9 4]", "(join [[4 4 6] [] [2] [0 8 7 3]]) -> [4 4 6 2 0 8 7 3]", "(join [[8 0 7 7 6] [2 2 5 1 1]]) -> [8 0 7 7 6 2 2 5 1 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.9933}
{"examples": ["(join []) -> []", "(join [[1 6 2 3 8] [6 1 2 6] [] [] []]) -> [1 6 2 3 8 6 1 2 6]", "(join [[6] [2 4 6 2 5] [6 5 5]]) -> [6 2 4 6 2 5 6 5 5]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[9 7 4] [0 2 7 4 3] [3 1 7]]) -> [9 7 4 0 2 7 4 3 3 1 7]", "(join [[9] [6]]) -> [9 6]", "(join [[8] [7 1 6] [7 7 2 9 7] [9] [5 7 3 9 2]]) -> [8 7 1 6 7 7 2 9 7 9 5 7 3 9 2]", "(join [[3 0 3 0 3] [] [3 5 0] [0]]) -> [3 0 3 0 3 3 5 0 0]", "(join [[0 3 3 4 8] [4 3 1]]) -> [0 3 3 4 8 4 3 1]", "(join [[6] [] [9 0 1 7 8] []]) -> [6 9 0 1 7 8]", "(join []) -> []", "(join [[8 8 6] [4 2 3] [5 4 4] [3 0] [5 1 4 6 3]]) -> [8 8 6 4 2 3 5 4 4 3 0 5 1 4 6 3]", "(join [[4 7 1 3 6] [4 7 7 2] [3 2 2]]) -> [4 7 1 3 6 4 7 7 2 3 2 2]", "(join []) -> []", "(join [[4]]) -> [4]", "(join [[0 2 9 3 3] [4 1]]) -> [0 2 9 3 3 4 1]", "(join [[] [3 4 8 3 7] []]) -> [3 4 8 3 7]", "(join [[8 9 4 3] [8 8 3 1 2] [] [] [4 8 9 6 5]]) -> [8 9 4 3 8 8 3 1 2 4 8 9 6 5]", "(join [[5 8 0] [7 4] [4 0 7 0 3]]) -> [5 8 0 7 4 4 0 7 0 3]", "(join []) -> []", "(join [[5 8 6 3 1] [9 3 5]]) -> [5 8 6 3 1 9 3 5]", "(join [[9 4]]) -> [9 4]", "(join [[4 8 4 6]]) -> [4 8 4 6]", "(join [[2 1 9] [7 5] [9 4 7 1 7]]) -> [2 1 9 7 5 9 4 7 1 7]", "(join [[1 2 6 2 6] [5]]) -> [1 2 6 2 6 5]", "(join [[2 5 4 3 7] [6] [] [0 4 4 2] [7 9]]) -> [2 5 4 3 7 6 0 4 4 2 7 9]", "(join [[4 0] [0 0 9] [7 5 7 9 8] [] [8 8 2]]) -> [4 0 0 0 9 7 5 7 9 8 8 8 2]", "(join [[7 0 3 1 9] [1 8 4] [4 5 9 5 1] []]) -> [7 0 3 1 9 1 8 4 4 5 9 5 1]", "(join []) -> []", "(join [[6 4 4 8] [2] [8] [5 6 9]]) -> [6 4 4 8 2 8 5 6 9]", "(join [[5 3 4] [2]]) -> [5 3 4 2]", "(join [[]]) -> []", "(join [[4 7 9 4 6] [0 1]]) -> [4 7 9 4 6 0 1]", "(join []) -> []", "(join [[4 2 1 4] [] [0 6 7 5] [2 7]]) -> [4 2 1 4 0 6 7 5 2 7]", "(join [[0] [2 7 7] [2 3 3 4]]) -> [0 2 7 7 2 3 3 4]", "(join [[] [1] [0 3] [2 4]]) -> [1 0 3 2 4]", "(join [[1 5] [8 0 9 3 5] [4]]) -> [1 5 8 0 9 3 5 4]", "(join [[9 5 6 7 5] [0] [2 7] [8] [7 7 3 7 8]]) -> [9 5 6 7 5 0 2 7 8 7 7 3 7 8]", "(join [[4] [1 5 3 6 7] [1] [8 5 1 1 0] [8 6 8 2]]) -> [4 1 5 3 6 7 1 8 5 1 1 0 8 6 8 2]", "(join [[7] [7 6] [7 1 7 7 8] [2 9 3 3 0]]) -> [7 7 6 7 1 7 7 8 2 9 3 3 0]", "(join [[1 6] [1 1 1] [9 6] [0] [0 8]]) -> [1 6 1 1 1 9 6 0 0 8]", "(join [[6 8 1 5] [5 3 8 9] [4 6 6 5]]) -> [6 8 1 5 5 3 8 9 4 6 6 5]", "(join []) -> []", "(join [[4] [8 3] [5 3] [1 0 4 7 2] []]) -> [4 8 3 5 3 1 0 4 7 2]", "(join [[6 1] [5] [6 2 4 3 8] [1 0 3] [9 4 5 3 7]]) -> [6 1 5 6 2 4 3 8 1 0 3 9 4 5 3 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.080101}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[8 2] [4 4] [8 9 0 3] [1 4 6 2 8]]) -> [8 2 4 4 8 9 0 3 1 4 6 2 8]", "(join [[4 3] [0 3 3] [7 4 6 8 7] [3 1 1 6]]) -> [4 3 0 3 3 7 4 6 8 7 3 1 1 6]", "(join [[6 9 8 6] [7 8 7 8] [7 9]]) -> [6 9 8 6 7 8 7 8 7 9]", "(join [[6 1] [] [8 8]]) -> [6 1 8 8]", "(join []) -> []", "(join [[] [9 9 4 5 6] [] [6 0 8]]) -> [9 9 4 5 6 6 0 8]", "(join []) -> []", "(join [[0 5] [7 1]]) -> [0 5 7 1]", "(join []) -> []", "(join [[] [0]]) -> [0]", "(join [[9] [8 6 2 3 4]]) -> [9 8 6 2 3 4]", "(join [[7] [6] [9 7 8 0 0] []]) -> [7 6 9 7 8 0 0]", "(join [[] []]) -> []", "(join []) -> []", "(join [[7]]) -> [7]", "(join [[1]]) -> [1]", "(join [[6]]) -> [6]", "(join []) -> []", "(join [[]]) -> []", "(join [[2 5 6]]) -> [2 5 6]", "(join [[3] [0 2] [5] [7 7 2]]) -> [3 0 2 5 7 7 2]", "(join [[2 4] [0 5 3] [4 5 3] [7]]) -> [2 4 0 5 3 4 5 3 7]", "(join [[1 2 0] [3 4 6 6] [5 1 4] [9] []]) -> [1 2 0 3 4 6 6 5 1 4 9]", "(join [[0 7 1 6 4] [5 5]]) -> [0 7 1 6 4 5 5]", "(join [[] [2 7 2 8] [2] [2 8 9 8 1] [9]]) -> [2 7 2 8 2 2 8 9 8 1 9]", "(join [[] [0 0 2] [1 8 8] [5 1 4 1 4] [3 5 4 5 9]]) -> [0 0 2 1 8 8 5 1 4 1 4 3 5 4 5 9]", "(join [[8]]) -> [8]", "(join []) -> []", "(join [[2] [2] []]) -> [2 2]", "(join [[2 8 6] [8 8 4] [7]]) -> [2 8 6 8 8 4 7]", "(join [[7 4 2] [8 5 3 5 4] [] [9 1 4 3]]) -> [7 4 2 8 5 3 5 4 9 1 4 3]", "(join [[7 7] [0]]) -> [7 7 0]", "(join [[2 3] [] [1 4 5 4] [0 3 6 2 6]]) -> [2 3 1 4 5 4 0 3 6 2 6]", "(join [[5 1 1 4 9] [5 4 9]]) -> [5 1 1 4 9 5 4 9]", "(join [[5 5 9] [4 7 7 3] [7 3 8 1 0]]) -> [5 5 9 4 7 7 3 7 3 8 1 0]", "(join [[2 8 2 1] [6 9 9 7 0]]) -> [2 8 2 1 6 9 9 7 0]", "(join [[8 2 9 3 1] [1 4 7 3 0] [0 9 2 9]]) -> [8 2 9 3 1 1 4 7 3 0 0 9 2 9]", "(join [[2] [1 8 3 9]]) -> [2 1 8 3 9]", "(join [[6 8]]) -> [6 8]", "(join []) -> []", "(join []) -> []", "(join [[7]]) -> [7]", "(join [[8 7 2 8 3] [] [5 4] [2 6 1] [6 9]]) -> [8 7 2 8 3 5 4 2 6 1 6 9]", "(join []) -> []", "(join [[3 2 1] [8]]) -> [3 2 1 8]", "(join [[]]) -> []", "(join [[7] [2] [3] [] [7]]) -> [7 2 3 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.039377}
{"examples": ["(join []) -> []", "(join [[] [0 5 4 1 5] [1 1 6 9 9]]) -> [0 5 4 1 5 1 1 6 9 9]", "(join [[0 4 7] [2 0 0 1 8]]) -> [0 4 7 2 0 0 1 8]", "(join [[1 9 2] [4 1 4] [9 0 8 0] [2 5 7] [3 0]]) -> [1 9 2 4 1 4 9 0 8 0 2 5 7 3 0]", "(join [[4] [5 6] [0 4 6 1] [9 5 7]]) -> [4 5 6 0 4 6 1 9 5 7]", "(join [[5] [] [6 4 8 2] [] []]) -> [5 6 4 8 2]", "(join [[2 2 1 1] [4 9 0] [3 7 5 8]]) -> [2 2 1 1 4 9 0 3 7 5 8]", "(join [[8 7 8] [1] [2]]) -> [8 7 8 1 2]", "(join [[0] [3 9] [3 3 5]]) -> [0 3 9 3 3 5]", "(join [[8 2 6] [0 9 2] [8 9 2] []]) -> [8 2 6 0 9 2 8 9 2]", "(join [[4 5 9 5]]) -> [4 5 9 5]", "(join [[2 3 5] [1] [3 1]]) -> [2 3 5 1 3 1]", "(join [[] [6 6 4]]) -> [6 6 4]", "(join [[0 4 0] [2 8 3 8 4] [] [3] []]) -> [0 4 0 2 8 3 8 4 3]", "(join [[6 0 6 9] [8 1 7]]) -> [6 0 6 9 8 1 7]", "(join [[] [] []]) -> []", "(join [[8] [6 1] [1 4] [3 6 1] [3]]) -> [8 6 1 1 4 3 6 1 3]", "(join [[1 2 0 7]]) -> [1 2 0 7]", "(join [[2 5 1]]) -> [2 5 1]", "(join []) -> []", "(join []) -> []", "(join [[6 8 2 5 2] [] [0 4 9 4] [4]]) -> [6 8 2 5 2 0 4 9 4 4]", "(join [[8 7 3 3] [0 4 1 3 3]]) -> [8 7 3 3 0 4 1 3 3]", "(join []) -> []", "(join [[1]]) -> [1]", "(join [[7 5] [1 3 9] [3 0]]) -> [7 5 1 3 9 3 0]", "(join [[2] [1 4] [6 1] [4 0 5] []]) -> [2 1 4 6 1 4 0 5]", "(join [[7 2] [1] [9 4 8 3 3] [2 9 9 1] [8 8 2 9]]) -> [7 2 1 9 4 8 3 3 2 9 9 1 8 8 2 9]", "(join [[7 0 9 7]]) -> [7 0 9 7]", "(join [[2 8 5 2 5]]) -> [2 8 5 2 5]", "(join [[] [9] [7 2 7]]) -> [9 7 2 7]", "(join [[] [2 1 6 9] [7]]) -> [2 1 6 9 7]", "(join [[5 4 4 4 7] [7] [8] [3 7] [5]]) -> [5 4 4 4 7 7 8 3 7 5]", "(join []) -> []", "(join [[0 2 4 3] [9 4 9 0] [9] []]) -> [0 2 4 3 9 4 9 0 9]", "(join [[1 1 7] [7 5 5 4] [5 6 0]]) -> [1 1 7 7 5 5 4 5 6 0]", "(join []) -> []", "(join [[8 7] []]) -> [8 7]", "(join [[8 5 1 6] []]) -> [8 5 1 6]", "(join [[2 3 8]]) -> [2 3 8]", "(join [[3 2 9 6 4] [2 5 2 2 3] [4 1 9 5 0] [6] [7 7 7 9]]) -> [3 2 9 6 4 2 5 2 2 3 4 1 9 5 0 6 7 7 7 9]", "(join []) -> []", "(join [[4 5]]) -> [4 5]", "(join [[5] [2 0 4 4 3]]) -> [5 2 0 4 4 3]", "(join [[7]]) -> [7]", "(join [[7 4 2] [0 0 6 2] [3 8 9 3] [9 1] [2 2]]) -> [7 4 2 0 0 6 2 3 8 9 3 9 1 2 2]", "(join [[2 9 4 5] [7 6 9 1] [0 9 6 9 9] [5 9 1 4 5] []]) -> [2 9 4 5 7 6 9 1 0 9 6 9 9 5 9 1 4 5]", "(join [[8 1] [6 3 2 2] [3 1 3 5 5]]) -> [8 1 6 3 2 2 3 1 3 5 5]", "(join [[4 6 0 0 9] [7] [] [1 7 6]]) -> [4 6 0 0 9 7 1 7 6]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.089063}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[5 4 2] [2 2 8 6 0]]) -> [5 4 2 2 2 8 6 0]", "(join [[8 5 3] [] [9 9 0 1 8]]) -> [8 5 3 9 9 0 1 8]", "(join [[1 1] [0 5 1 2] [3]]) -> [1 1 0 5 1 2 3]", "(join [[8 0 9] [] [4 8 9 4 8]]) -> [8 0 9 4 8 9 4 8]", "(join [[8 2 1]]) -> [8 2 1]", "(join [[0 7 7 1 4]]) -> [0 7 7 1 4]", "(join [[6 7]]) -> [6 7]", "(join [[3 5]]) -> [3 5]", "(join [[2]]) -> [2]", "(join []) -> []", "(join [[7 5 0 8] [9 7 9 3]]) -> [7 5 0 8 9 7 9 3]", "(join [[5] [0 0 7]]) -> [5 0 0 7]", "(join [[2 9 8 3 2]]) -> [2 9 8 3 2]", "(join []) -> []", "(join []) -> []", "(join [[4 4]]) -> [4 4]", "(join []) -> []", "(join [[] [6 9 5 6 7] [4] [6 4 9 3 8]]) -> [6 9 5 6 7 4 6 4 9 3 8]", "(join [[] [2 7] [5 1 4 2 1]]) -> [2 7 5 1 4 2 1]", "(join [[] [8 3 2 2] [] [2 6] [4 9 3 2]]) -> [8 3 2 2 2 6 4 9 3 2]", "(join [[7 5 5] [9 2 7 0] [4 8] []]) -> [7 5 5 9 2 7 0 4 8]", "(join [[2 1 8] [] [9 4 7 8] [9] [9 2 3 2 1]]) -> [2 1 8 9 4 7 8 9 9 2 3 2 1]", "(join [[4 1] [1 3] [] [1 1]]) -> [4 1 1 3 1 1]", "(join [[9 1] [2] [] [6 0] [5 8 2 7 0]]) -> [9 1 2 6 0 5 8 2 7 0]", "(join [[8 3 7] [7 6] [8 4 8 2 2]]) -> [8 3 7 7 6 8 4 8 2 2]", "(join []) -> []", "(join [[8 9 6 2] [8] [3 8 5 6] [] [2 0 7]]) -> [8 9 6 2 8 3 8 5 6 2 0 7]", "(join [[9] [8 2] [6 6] [3 4 5 8 9] [2]]) -> [9 8 2 6 6 3 4 5 8 9 2]", "(join [[3 4] [] [8 0 8] [7 1 0 8] [5 6 9 4 8]]) -> [3 4 8 0 8 7 1 0 8 5 6 9 4 8]", "(join [[9 2] [1 6 5 2 5] [7 7 7]]) -> [9 2 1 6 5 2 5 7 7 7]", "(join [[] []]) -> []", "(join [[4] [1 6] [4 7 3] [3]]) -> [4 1 6 4 7 3 3]", "(join [[3 9] [9] [4 9 9]]) -> [3 9 9 4 9 9]", "(join []) -> []", "(join [[2 9 4 2 6] [2 3] [] [5 2 0] [9 3 3]]) -> [2 9 4 2 6 2 3 5 2 0 9 3 3]", "(join [[9] [5 0]]) -> [9 5 0]", "(join [[7 5] [8 5 2] [3 9 2 0] [0 0 3 3 7]]) -> [7 5 8 5 2 3 9 2 0 0 0 3 3 7]", "(join [[] [] [3 6 4 5 4] [2] [7 2 1 1]]) -> [3 6 4 5 4 2 7 2 1 1]", "(join [[4 3] [7 6 1 5 2] [2 4 8 9]]) -> [4 3 7 6 1 5 2 2 4 8 9]", "(join [[6 6 4] [3 8]]) -> [6 6 4 3 8]", "(join []) -> []", "(join [[1] [3 9 5 8]]) -> [1 3 9 5 8]", "(join [[6 2] [1 6 1] [5 5 3 0 5] [7 0 2 8]]) -> [6 2 1 6 1 5 5 3 0 5 7 0 2 8]", "(join [[]]) -> []", "(join [[5] [5 9] [4 2] [5 3 9 1 5]]) -> [5 5 9 4 2 5 3 9 1 5]", "(join [[8] [2 8 7 5 2]]) -> [8 2 8 7 5 2]", "(join [[9 9 6 2] [] [1 5 6 9 0]]) -> [9 9 6 2 1 5 6 9 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.095831}
{"examples": ["(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[3 2 2 8] [2]]) -> [3 2 2 8 2]", "(join []) -> []", "(join [[] [4 0] [] [2 1 7 7] [2 9]]) -> [4 0 2 1 7 7 2 9]", "(join [[0 1 1 3 2] [0 2 8] [1 8 0 2]]) -> [0 1 1 3 2 0 2 8 1 8 0 2]", "(join [[3 9 1] [4 8 1] [3 3 7 4]]) -> [3 9 1 4 8 1 3 3 7 4]", "(join []) -> []", "(join []) -> []", "(join [[2 1 4] [4 7 1 4] [7 6] [3] [1 9 7 9 2]]) -> [2 1 4 4 7 1 4 7 6 3 1 9 7 9 2]", "(join [[] [0 7 5] [] [9 9 2]]) -> [0 7 5 9 9 2]", "(join [[2] [7 2 9 9] [] []]) -> [2 7 2 9 9]", "(join [[7 7 2] [8 8 4] [6] [4 4 3 1 9] [6 5 2]]) -> [7 7 2 8 8 4 6 4 4 3 1 9 6 5 2]", "(join [[4 1] [2 6 5]]) -> [4 1 2 6 5]", "(join [[9 3 4 3 2] [0 1 0] [4]]) -> [9 3 4 3 2 0 1 0 4]", "(join [[8 9 8 4 2]]) -> [8 9 8 4 2]", "(join [[0 6] [0 3 8] [] []]) -> [0 6 0 3 8]", "(join [[0 2] [] [1 1 2 0 8]]) -> [0 2 1 1 2 0 8]", "(join [[0 3 5] [4 2 4 7] [5]]) -> [0 3 5 4 2 4 7 5]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[2] [2 3 4] [0] []]) -> [2 2 3 4 0]", "(join [[4 3]]) -> [4 3]", "(join []) -> []", "(join [[] [] [7 5 0 0 9]]) -> [7 5 0 0 9]", "(join []) -> []", "(join []) -> []", "(join [[9 5 6] [6]]) -> [9 5 6 6]", "(join [[5 3 3 5 3] [2 4 5 2 4] [8 3 5 5 5]]) -> [5 3 3 5 3 2 4 5 2 4 8 3 5 5 5]", "(join [[6] [8 9 8 2 8] []]) -> [6 8 9 8 2 8]", "(join [[8 6 8 8 9] [1 3 0 5] []]) -> [8 6 8 8 9 1 3 0 5]", "(join [[0 3 2] [6] [8]]) -> [0 3 2 6 8]", "(join []) -> []", "(join [[] [1 8 4 4 3]]) -> [1 8 4 4 3]", "(join [[1 3 8 6] [7 6] [6 2 6]]) -> [1 3 8 6 7 6 6 2 6]", "(join [[]]) -> []", "(join [[] [8 5 6 1 3] [3] [8]]) -> [8 5 6 1 3 3 8]", "(join [[2 4] [8] [0] []]) -> [2 4 8 0]", "(join [[] [9 5 4 8 9] [4 2 4]]) -> [9 5 4 8 9 4 2 4]", "(join []) -> []", "(join [[7 5 1 5] [2 2 5 7 6]]) -> [7 5 1 5 2 2 5 7 6]", "(join [[7 8 3 2 8] [1] [6 7 4] [4 4 6 0 5] [0 1 9]]) -> [7 8 3 2 8 1 6 7 4 4 4 6 0 5 0 1 9]", "(join []) -> []", "(join [[1]]) -> [1]", "(join [[]]) -> []", "(join [[3 8 9 7] [6 1] []]) -> [3 8 9 7 6 1]", "(join [[4 3 5]]) -> [4 3 5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.103073}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[0 0 2 4] [] [9]]) -> [0 0 2 4 9]", "(join [[7 2 8]]) -> [7 2 8]", "(join [[3 5 6 3 6] [3 1 1 2] [9 2 0] [2] [3]]) -> [3 5 6 3 6 3 1 1 2 9 2 0 2 3]", "(join [[3 4 5 4] [9 1] [5 6 8 3]]) -> [3 4 5 4 9 1 5 6 8 3]", "(join [[7 5 3 9] [8]]) -> [7 5 3 9 8]", "(join [[6 6 5] [3 7 3 7 0] [9] [1 9] [2 2 2]]) -> [6 6 5 3 7 3 7 0 9 1 9 2 2 2]", "(join [[] [] [3]]) -> [3]", "(join [[6 3 0 4 5] [7] [7 9] []]) -> [6 3 0 4 5 7 7 9]", "(join [[2 0 3] [6 8 5 4 4] [7]]) -> [2 0 3 6 8 5 4 4 7]", "(join [[4] [8] [0 2 6 9 6]]) -> [4 8 0 2 6 9 6]", "(join []) -> []", "(join [[1 1] [] [9 1 6 5 2] [0]]) -> [1 1 9 1 6 5 2 0]", "(join [[8 1 6 4 0] [9 9]]) -> [8 1 6 4 0 9 9]", "(join [[5]]) -> [5]", "(join [[] [5] [1 9] []]) -> [5 1 9]", "(join [[9 2] [3] [8 6] [8 7 8 9 9] [4 6]]) -> [9 2 3 8 6 8 7 8 9 9 4 6]", "(join [[] [8 3 4] [] [] [4 7 4]]) -> [8 3 4 4 7 4]", "(join [[8 4 5 8 1] [6 4 0 2 8] [4 4 3 9] [9 9 4]]) -> [8 4 5 8 1 6 4 0 2 8 4 4 3 9 9 9 4]", "(join [[0 9] [7 4 5]]) -> [0 9 7 4 5]", "(join [[1 8 9 5] [6 2 6] [7 8 6 6 3] [9 4 4 7] [3 2 4 4]]) -> [1 8 9 5 6 2 6 7 8 6 6 3 9 4 4 7 3 2 4 4]", "(join [[1 5 8 0 3] [7] [4 8 4 9] [] [9 5 7 4 7]]) -> [1 5 8 0 3 7 4 8 4 9 9 5 7 4 7]", "(join []) -> []", "(join [[2 4 5 7 7] [3] [6]]) -> [2 4 5 7 7 3 6]", "(join [[1 2 7 1] [0 4 2] [7 1 1 6] [8] [9 1 5]]) -> [1 2 7 1 0 4 2 7 1 1 6 8 9 1 5]", "(join [[3 2 9]]) -> [3 2 9]", "(join [[9 9 5] []]) -> [9 9 5]", "(join [[] [0] []]) -> [0]", "(join [[8 5 0 5]]) -> [8 5 0 5]", "(join []) -> []", "(join [[0 1] [6 7 1 4 3] [8 6 1]]) -> [0 1 6 7 1 4 3 8 6 1]", "(join [[1 6 5] [3 0] [2 6 4 0]]) -> [1 6 5 3 0 2 6 4 0]", "(join [[9 7 7 4 7] [6 9 9] [] [4 0 4 6] [9]]) -> [9 7 7 4 7 6 9 9 4 0 4 6 9]", "(join [[2]]) -> [2]", "(join [[9 6] [1 4 6] [1 9 7 3] [2 9 5]]) -> [9 6 1 4 6 1 9 7 3 2 9 5]", "(join [[2] [3 1 5 1 6] [1 9 9 5] [6 6 7] [4 5]]) -> [2 3 1 5 1 6 1 9 9 5 6 6 7 4 5]", "(join [[] [2 5]]) -> [2 5]", "(join [[0 3 7 2 6] [0 5 0 9] []]) -> [0 3 7 2 6 0 5 0 9]", "(join [[] [7 7] [0 7 8 3]]) -> [7 7 0 7 8 3]", "(join [[9 2 0 3] []]) -> [9 2 0 3]", "(join [[6] [] [2 4 0] []]) -> [6 2 4 0]", "(join [[7 3 0] [5] [1 4 0]]) -> [7 3 0 5 1 4 0]", "(join [[8 9] [6 1 9 4 9] [9 1] [4 3]]) -> [8 9 6 1 9 4 9 9 1 4 3]", "(join [[8 0 2 1] [2 5 4 5 6] [] [] [8]]) -> [8 0 2 1 2 5 4 5 6 8]", "(join [[]]) -> []", "(join [[5 4 8 6] [4 2 8 6]]) -> [5 4 8 6 4 2 8 6]", "(join []) -> []", "(join [[6 7 7] []]) -> [6 7 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.080669}
{"examples": ["(join []) -> []", "(join [[]]) -> []", "(join [[] [4 7] [0]]) -> [4 7 0]", "(join [[1 4]]) -> [1 4]", "(join []) -> []", "(join [[]]) -> []", "(join [[1 7 6] [5]]) -> [1 7 6 5]", "(join [[7 5]]) -> [7 5]", "(join []) -> []", "(join [[0 3 4] [4 5 4 6 2] [2 5 7] [2 1 7 6] [5]]) -> [0 3 4 4 5 4 6 2 2 5 7 2 1 7 6 5]", "(join [[0 9 4 6 3] [0 3]]) -> [0 9 4 6 3 0 3]", "(join [[2 0 1] [8 3 2 0 8] [0 7 3 0 2] [2] [5 2 2 2]]) -> [2 0 1 8 3 2 0 8 0 7 3 0 2 2 5 2 2 2]", "(join []) -> []", "(join [[3] []]) -> [3]", "(join [[3 8 4 2] [4 0]]) -> [3 8 4 2 4 0]", "(join []) -> []", "(join [[8] [1 1 4 2] [7 6]]) -> [8 1 1 4 2 7 6]", "(join [[] [2 4 0] [0] [5 5 0 6 9] [5]]) -> [2 4 0 0 5 5 0 6 9 5]", "(join [[1 1 9 6 8]]) -> [1 1 9 6 8]", "(join [[1 9 7 2] [5 7 8] [] [3 6 5 5] []]) -> [1 9 7 2 5 7 8 3 6 5 5]", "(join [[9 3 5 5] [4 8] [0 4 6 2] [0 5 6 3 0] [5]]) -> [9 3 5 5 4 8 0 4 6 2 0 5 6 3 0 5]", "(join [[8 7 9] []]) -> [8 7 9]", "(join []) -> []", "(join [[9 1]]) -> [9 1]", "(join [[0 6 8 5 6]]) -> [0 6 8 5 6]", "(join [[4 2 2] [4 8 2 3] [4 8 3 1] [3 5 6 8]]) -> [4 2 2 4 8 2 3 4 8 3 1 3 5 6 8]", "(join [[] [3] [8 0 9]]) -> [3 8 0 9]", "(join []) -> []", "(join [[8 1 9 3] [3 5 1 9] [8 6] [8 4 1 4 7]]) -> [8 1 9 3 3 5 1 9 8 6 8 4 1 4 7]", "(join [[] [8 7 5 3]]) -> [8 7 5 3]", "(join [[0 3] [] [1 0]]) -> [0 3 1 0]", "(join []) -> []", "(join [[9 6 9] [0 9 1] [3 5] [1 0] []]) -> [9 6 9 0 9 1 3 5 1 0]", "(join [[7 9 3 3] [3 1 3 0] [4] []]) -> [7 9 3 3 3 1 3 0 4]", "(join [[9 2 9] [6 7 1 9 4] [3] [0]]) -> [9 2 9 6 7 1 9 4 3 0]", "(join []) -> []", "(join [[9 1 3 1] [2 7 8 1 6] [4 1]]) -> [9 1 3 1 2 7 8 1 6 4 1]", "(join [[6 7] [6 7 3 7] [1] [5 3] [5]]) -> [6 7 6 7 3 7 1 5 3 5]", "(join [[3 8 9 2 7]]) -> [3 8 9 2 7]", "(join []) -> []", "(join []) -> []", "(join [[] [8 3 8 4 5] [8 0 4 7 1]]) -> [8 3 8 4 5 8 0 4 7 1]", "(join [[2 5 8] [2 2 7] [2] [4 6 1 7 6]]) -> [2 5 8 2 2 7 2 4 6 1 7 6]", "(join [[] [7] [2 6] [4 4 2 8 0] [8 8 0]]) -> [7 2 6 4 4 2 8 0 8 8 0]", "(join [[0 2]]) -> [0 2]", "(join []) -> []", "(join [[9 7 6] [2 1 3 8] [5 4 9 0]]) -> [9 7 6 2 1 3 8 5 4 9 0]", "(join [[4 6 6 2 5] [9 2] [8 6 0 1] [7 9] [1 6 0 3 9]]) -> [4 6 6 2 5 9 2 8 6 0 1 7 9 1 6 0 3 9]", "(join [[6 6] [9 6 4] [1] []]) -> [6 6 9 6 4 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.772323}
{"examples": ["(join []) -> []", "(join [[3] [9 3 8]]) -> [3 9 3 8]", "(join [[9 2 3] [2]]) -> [9 2 3 2]", "(join [[7 6] [0]]) -> [7 6 0]", "(join [[6] [8] [4 6 8] [3 7 6]]) -> [6 8 4 6 8 3 7 6]", "(join []) -> []", "(join [[]]) -> []", "(join [[5 5] [8 2 6 7 6] [8 1 3 8] [0 1 3 5 5]]) -> [5 5 8 2 6 7 6 8 1 3 8 0 1 3 5 5]", "(join []) -> []", "(join [[2 6 5] [7 8] [1 9 5 5] []]) -> [2 6 5 7 8 1 9 5 5]", "(join [[5 4] [2 7 5 4] [6 6 9 8] [6 9 5 6] []]) -> [5 4 2 7 5 4 6 6 9 8 6 9 5 6]", "(join [[1 4 0 6]]) -> [1 4 0 6]", "(join [[6 1 6 3] [3 4 6 3] [0 3 0] [3 1 7 6 5]]) -> [6 1 6 3 3 4 6 3 0 3 0 3 1 7 6 5]", "(join [[6 1 5 0 0] [] [7 1] [0 8 5] []]) -> [6 1 5 0 0 7 1 0 8 5]", "(join [[6 2 3 5 2] [5 2] [9]]) -> [6 2 3 5 2 5 2 9]", "(join [[0 8 6 4] [] [2]]) -> [0 8 6 4 2]", "(join []) -> []", "(join [[8 0 2 3] [7 6 4 8 5] []]) -> [8 0 2 3 7 6 4 8 5]", "(join [[6 2 2] [0] [4 5] []]) -> [6 2 2 0 4 5]", "(join [[4] [5 7 6 9 0] [] [8 6 8] [5 5]]) -> [4 5 7 6 9 0 8 6 8 5 5]", "(join [[6 0 2 2] [4 7 6 4] [6 4 1 7 3] [6 0 6 9 9]]) -> [6 0 2 2 4 7 6 4 6 4 1 7 3 6 0 6 9 9]", "(join [[5 5 9 8 0] [] [8 6 9] [4 8 6 5] [1 9]]) -> [5 5 9 8 0 8 6 9 4 8 6 5 1 9]", "(join [[1 8 7 3 5] [0 3 1 1] [0 4]]) -> [1 8 7 3 5 0 3 1 1 0 4]", "(join [[3 5 9] [] [4] [4 8 3 4 6]]) -> [3 5 9 4 4 8 3 4 6]", "(join [[9 7 0 3 3]]) -> [9 7 0 3 3]", "(join [[7 9 3] [] [2 4 0] [6 5 3] [9]]) -> [7 9 3 2 4 0 6 5 3 9]", "(join [[] [1 2 0 9] [] [6 6]]) -> [1 2 0 9 6 6]", "(join []) -> []", "(join [[7] [4 1 9 2 0] [9 3 4 6] [9 6 7 5]]) -> [7 4 1 9 2 0 9 3 4 6 9 6 7 5]", "(join [[4 0 3 5] [3 6 8 7] [] [5 2]]) -> [4 0 3 5 3 6 8 7 5 2]", "(join [[6 0] [8 6 5 0 6] [6 3 6] [7 1 4 4]]) -> [6 0 8 6 5 0 6 6 3 6 7 1 4 4]", "(join [[9 0 2 9 6] [5 4 2 5] [3]]) -> [9 0 2 9 6 5 4 2 5 3]", "(join [[0 2 6 1] [] [5 1 5 0]]) -> [0 2 6 1 5 1 5 0]", "(join [[4 2 6] []]) -> [4 2 6]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[1 6 6 5] [] [6] []]) -> [1 6 6 5 6]", "(join [[3 0] [9 9 4 8 0] [4 8 0] [5 3] [2 8]]) -> [3 0 9 9 4 8 0 4 8 0 5 3 2 8]", "(join [[8 3 3 2] [6 6] [] [0 6]]) -> [8 3 3 2 6 6 0 6]", "(join [[4 8 0] [9 5] [8 3 1]]) -> [4 8 0 9 5 8 3 1]", "(join [[4 1] [4] [3] [8] [4 5]]) -> [4 1 4 3 8 4 5]", "(join [[8 0 3 8 6] [2 2 0]]) -> [8 0 3 8 6 2 2 0]", "(join [[1 6 4] [9 2 7 6 5] [5 5 5]]) -> [1 6 4 9 2 7 6 5 5 5 5]", "(join [[9 9] []]) -> [9 9]", "(join [[5] [0 8 8] [9 6] [3 5 7] [5 0 3]]) -> [5 0 8 8 9 6 3 5 7 5 0 3]", "(join [[6 3 6 3 1]]) -> [6 3 6 3 1]", "(join [[1] [5 8 9] []]) -> [1 5 8 9]", "(join [[3 9 8 7] [1]]) -> [3 9 8 7 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.763464}
{"examples": ["(join []) -> []", "(join [[5 0 1 2 4] [5] [0 4 4]]) -> [5 0 1 2 4 5 0 4 4]", "(join [[3 8 9 7 9] [2] [6 7 8] [6]]) -> [3 8 9 7 9 2 6 7 8 6]", "(join []) -> []", "(join [[6 8 8 6 8] [9] [9 7 0] [3 1 8 9 8] [6 3]]) -> [6 8 8 6 8 9 9 7 0 3 1 8 9 8 6 3]", "(join [[9 3 2 7]]) -> [9 3 2 7]", "(join [[] [2 1 4 7] [6] [3 3]]) -> [2 1 4 7 6 3 3]", "(join [[4] [1 4 4 9 0]]) -> [4 1 4 4 9 0]", "(join [[6 7 0] [2 2 5] [] [7 6 1 5] [2 6 4]]) -> [6 7 0 2 2 5 7 6 1 5 2 6 4]", "(join [[1 8] [9 2 8 6] [6 4 4] [7] []]) -> [1 8 9 2 8 6 6 4 4 7]", "(join [[] [] [7 0 5 8 8] []]) -> [7 0 5 8 8]", "(join [[5 8 6] [] [7]]) -> [5 8 6 7]", "(join []) -> []", "(join [[0]]) -> [0]", "(join [[6 3 8 2] [9 4]]) -> [6 3 8 2 9 4]", "(join [[8 7 3 8] [8 7 4] [2]]) -> [8 7 3 8 8 7 4 2]", "(join [[2 4] [4 4 2 4] [9 0 8 4 2] [] []]) -> [2 4 4 4 2 4 9 0 8 4 2]", "(join [[1 7 8 6] [9 1] [0 4 4 1 6] [2 1] [4 2 1]]) -> [1 7 8 6 9 1 0 4 4 1 6 2 1 4 2 1]", "(join [[0]]) -> [0]", "(join [[8 7 2 9] [3 0 1 8] [0] [5 4]]) -> [8 7 2 9 3 0 1 8 0 5 4]", "(join []) -> []", "(join [[4]]) -> [4]", "(join [[7 6 4 1 3] [3 1 8 7]]) -> [7 6 4 1 3 3 1 8 7]", "(join [[1] [] [] [] [2 8 2 4]]) -> [1 2 8 2 4]", "(join [[9]]) -> [9]", "(join [[1 6 7 3]]) -> [1 6 7 3]", "(join [[9 9 9 0 4]]) -> [9 9 9 0 4]", "(join [[3 1]]) -> [3 1]", "(join [[2 3 0 5 3] [5 4 5 1 6] [4] [9 0 6]]) -> [2 3 0 5 3 5 4 5 1 6 4 9 0 6]", "(join []) -> []", "(join [[8 0 8 4] [1] [6 0] [9 0]]) -> [8 0 8 4 1 6 0 9 0]", "(join [[5 6 6]]) -> [5 6 6]", "(join [[5 0 0 5 2] [1 5 4]]) -> [5 0 0 5 2 1 5 4]", "(join [[] [] [2 2 2 6] [1 1 1 3 8] [2]]) -> [2 2 2 6 1 1 1 3 8 2]", "(join [[] [6 4 4] [6] [3 6 0 2] []]) -> [6 4 4 6 3 6 0 2]", "(join [[0 3 9 7] [6 3 1 9 1]]) -> [0 3 9 7 6 3 1 9 1]", "(join [[9]]) -> [9]", "(join []) -> []", "(join [[0 6 1 3 8] [8 4 6] [1 6]]) -> [0 6 1 3 8 8 4 6 1 6]", "(join [[0 8 1 4] [6 8 6 6] [2 1 5] [3 1] []]) -> [0 8 1 4 6 8 6 6 2 1 5 3 1]", "(join [[2 6 7] [7 0 7] [7 0 1 1 6] [7 6 0 0 5]]) -> [2 6 7 7 0 7 7 0 1 1 6 7 6 0 0 5]", "(join [[] [] []]) -> []", "(join [[6 3 5 3] [4 2 5 0 5] [8 0 7 5 0] [1 8] [9 8 1]]) -> [6 3 5 3 4 2 5 0 5 8 0 7 5 0 1 8 9 8 1]", "(join [[5] [1 6 5 3 8] [6 7] [6]]) -> [5 1 6 5 3 8 6 7 6]", "(join [[8 2 0] [3] [6 5 1 1]]) -> [8 2 0 3 6 5 1 1]", "(join [[2 8 5] [8]]) -> [2 8 5 8]", "(join [[] [2 4 6 2] [0 8 9]]) -> [2 4 6 2 0 8 9]", "(join []) -> []", "(join [[1]]) -> [1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.833403}
{"examples": ["(join []) -> []", "(join [[1] [] [5 3 7 6 7]]) -> [1 5 3 7 6 7]", "(join []) -> []", "(join [[8 7 7 0] [2 0 4 1] [8 1 7 7] [7 2 5 1 0]]) -> [8 7 7 0 2 0 4 1 8 1 7 7 7 2 5 1 0]", "(join [[0 3 5]]) -> [0 3 5]", "(join [[8 2 2 7] [8 5 4 5] [1 5 1 0 4]]) -> [8 2 2 7 8 5 4 5 1 5 1 0 4]", "(join [[4 8 9 9 9] [7 5 7] [3 4] [3 5 5 7 7]]) -> [4 8 9 9 9 7 5 7 3 4 3 5 5 7 7]", "(join [[6 7 5 5 8] [4 6 7 3 3] []]) -> [6 7 5 5 8 4 6 7 3 3]", "(join [[9] [8 6 4 1 7] [1 9] [5 0 3 4 3]]) -> [9 8 6 4 1 7 1 9 5 0 3 4 3]", "(join [[3 1 9 4 3]]) -> [3 1 9 4 3]", "(join [[4] [0 6] []]) -> [4 0 6]", "(join [[4 1 5 4]]) -> [4 1 5 4]", "(join [[6 1 9 5 4] [9] [6] [7] [6]]) -> [6 1 9 5 4 9 6 7 6]", "(join [[2 0 6 5 0]]) -> [2 0 6 5 0]", "(join [[4 4 2 9] [6 0 6] [1 9] [0] [5]]) -> [4 4 2 9 6 0 6 1 9 0 5]", "(join [[7 5 4 4] [8 7]]) -> [7 5 4 4 8 7]", "(join [[7 9 5] [] [6] [7 3] [6]]) -> [7 9 5 6 7 3 6]", "(join [[9 1 4] [9] [2 6] []]) -> [9 1 4 9 2 6]", "(join []) -> []", "(join [[4] [3 3 9 4]]) -> [4 3 3 9 4]", "(join [[7 9] [2 9] [0 7 4 3] [0 4 9 8 9]]) -> [7 9 2 9 0 7 4 3 0 4 9 8 9]", "(join []) -> []", "(join [[8 2 2 4 2]]) -> [8 2 2 4 2]", "(join []) -> []", "(join []) -> []", "(join [[0 3] [2 4 9 2] [5 4] [9 1 9 8 0] [2 5]]) -> [0 3 2 4 9 2 5 4 9 1 9 8 0 2 5]", "(join [[3 6] [1] [5 5] [0 3 9] [2 6 7]]) -> [3 6 1 5 5 0 3 9 2 6 7]", "(join [[] [6 7] [4 7]]) -> [6 7 4 7]", "(join [[6] [1 5 6] [8 7 7]]) -> [6 1 5 6 8 7 7]", "(join [[9]]) -> [9]", "(join [[4 7 4] [7 2] [7] [7 4 9 6 9]]) -> [4 7 4 7 2 7 7 4 9 6 9]", "(join [[7 8 1 8] [7 1 9 0]]) -> [7 8 1 8 7 1 9 0]", "(join [[]]) -> []", "(join [[0 8 8]]) -> [0 8 8]", "(join [[8 2 4 5] [8 5]]) -> [8 2 4 5 8 5]", "(join [[5 9] [8]]) -> [5 9 8]", "(join [[9] [9 5 6 0]]) -> [9 9 5 6 0]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[0 7] [5 7] [9 0 1 0 5]]) -> [0 7 5 7 9 0 1 0 5]", "(join []) -> []", "(join [[7 2 2 2 8] [5 1 5 0 3] [] [4 8 2 4]]) -> [7 2 2 2 8 5 1 5 0 3 4 8 2 4]", "(join [[7] [2 3] [7 5 4 6 6] [5] [3 1]]) -> [7 2 3 7 5 4 6 6 5 3 1]", "(join [[] [] [9 3]]) -> [9 3]", "(join [[7] [9 4 4 3] [0 2 1 5] [1 0 9] [3]]) -> [7 9 4 4 3 0 2 1 5 1 0 9 3]", "(join [[3 9 3 3 7]]) -> [3 9 3 3 7]", "(join [[] [9 8] [3 7 4]]) -> [9 8 3 7 4]", "(join [[1 8]]) -> [1 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.765135}
{"examples": ["(join []) -> []", "(join [[5 5 9] [5 6 2 3] [] [5]]) -> [5 5 9 5 6 2 3 5]", "(join []) -> []", "(join [[4 2 9 0] [] [3 4] [3 6]]) -> [4 2 9 0 3 4 3 6]", "(join []) -> []", "(join [[0 1 5 7 5]]) -> [0 1 5 7 5]", "(join [[8 4 1 2] [] [4] []]) -> [8 4 1 2 4]", "(join [[7 0 1] [5 8 4 2] [8]]) -> [7 0 1 5 8 4 2 8]", "(join [[0 1 1 7 6]]) -> [0 1 1 7 6]", "(join []) -> []", "(join [[6] [5 4 9 9] [1 6 7 8 6] [3]]) -> [6 5 4 9 9 1 6 7 8 6 3]", "(join [[0 7 4 4] [] [8 7] [9 1 6] [8 0]]) -> [0 7 4 4 8 7 9 1 6 8 0]", "(join [[] [9 4 6 8 0]]) -> [9 4 6 8 0]", "(join [[] [2] [7 9] [6 4] [2 3]]) -> [2 7 9 6 4 2 3]", "(join [[7 2 7] [3 5] [8 6 8]]) -> [7 2 7 3 5 8 6 8]", "(join [[] [9 5 8] [1 2 1 2 2] [6 6 9]]) -> [9 5 8 1 2 1 2 2 6 6 9]", "(join [[] [4 3]]) -> [4 3]", "(join [[9 0] [6]]) -> [9 0 6]", "(join [[0 3 9 6] [0 9 5] [8 5 0 1]]) -> [0 3 9 6 0 9 5 8 5 0 1]", "(join [[3] [2 7 6] [6 6 4]]) -> [3 2 7 6 6 6 4]", "(join [[6 1] [7] [0 2 3 1 1]]) -> [6 1 7 0 2 3 1 1]", "(join []) -> []", "(join [[6 1 6 5 2] [5 1 8 9 0] [5 5] [8 0 5 3]]) -> [6 1 6 5 2 5 1 8 9 0 5 5 8 0 5 3]", "(join [[3 5 3 8 7] [6 1 8 1] [5 9] [2] []]) -> [3 5 3 8 7 6 1 8 1 5 9 2]", "(join [[9 4 6] [] [5 1 4] [5 0 7 6]]) -> [9 4 6 5 1 4 5 0 7 6]", "(join []) -> []", "(join [[] [0 9 7 6 7]]) -> [0 9 7 6 7]", "(join [[8 4 0 0 0] [9 0 2] [5 3 2 5 8]]) -> [8 4 0 0 0 9 0 2 5 3 2 5 8]", "(join [[1] [0 6]]) -> [1 0 6]", "(join [[9 8] [3] [1 7 3]]) -> [9 8 3 1 7 3]", "(join [[8 0 7 4 2] [3 6 1 2]]) -> [8 0 7 4 2 3 6 1 2]", "(join [[2 8 5 8] [8 3 5 3] []]) -> [2 8 5 8 8 3 5 3]", "(join []) -> []", "(join [[3 0 9 8 4] [3 4] [6 2 2] [] [7 5 5]]) -> [3 0 9 8 4 3 4 6 2 2 7 5 5]", "(join [[3 4 4] [7 4 9 2] [] [8 9 1]]) -> [3 4 4 7 4 9 2 8 9 1]", "(join [[9 6 0] [0 4 3 8]]) -> [9 6 0 0 4 3 8]", "(join [[6 4]]) -> [6 4]", "(join [[4 5 2 8] [6 2] []]) -> [4 5 2 8 6 2]", "(join [[2 8 8 2] [5 0 3 4 1] [9 6 0] [8 4 5 0 9]]) -> [2 8 8 2 5 0 3 4 1 9 6 0 8 4 5 0 9]", "(join [[7 8]]) -> [7 8]", "(join [[4 3 1 8 8] []]) -> [4 3 1 8 8]", "(join [[9 5 7 4]]) -> [9 5 7 4]", "(join []) -> []", "(join [[7 3] [1 7 4 7 7] [3 1 7 5] [] [7 5 1 9]]) -> [7 3 1 7 4 7 7 3 1 7 5 7 5 1 9]", "(join [[2 8 9] [9 7 7 9 4] [5] [7 1] []]) -> [2 8 9 9 7 7 9 4 5 7 1]", "(join [[0] [2 3] [9 3]]) -> [0 2 3 9 3]", "(join [[] [4 1 9 4 4] [7 0 5 9]]) -> [4 1 9 4 4 7 0 5 9]", "(join []) -> []", "(join [[1 1 9 9] [9 7 2 4]]) -> [1 1 9 9 9 7 2 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.831988}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[7 8 7 1 2] [4 6 0 3 4]]) -> [7 8 7 1 2 4 6 0 3 4]", "(join [[1 0 5 1 6] [] [8]]) -> [1 0 5 1 6 8]", "(join [[4 9]]) -> [4 9]", "(join [[4 1 2 4] [1] [8 5] [6]]) -> [4 1 2 4 1 8 5 6]", "(join [[2 6] [4 2 7 0 6]]) -> [2 6 4 2 7 0 6]", "(join [[1 7 0 4] [6 0 9 9 3] [1 4]]) -> [1 7 0 4 6 0 9 9 3 1 4]", "(join [[8 0] [3] [4 9 9] [6 6 9 4]]) -> [8 0 3 4 9 9 6 6 9 4]", "(join [[0 8 0]]) -> [0 8 0]", "(join []) -> []", "(join []) -> []", "(join [[0 8 6 9 8] [0 4 3 3 0] [5 7 6] [0] [3 1]]) -> [0 8 6 9 8 0 4 3 3 0 5 7 6 0 3 1]", "(join []) -> []", "(join [[7 5 9 7] [] [0 3 2 2] []]) -> [7 5 9 7 0 3 2 2]", "(join [[9 3 2 4]]) -> [9 3 2 4]", "(join [[9]]) -> [9]", "(join [[0 8 8 3 0] []]) -> [0 8 8 3 0]", "(join [[8] [3 7 4] [3 7 9 9 8]]) -> [8 3 7 4 3 7 9 9 8]", "(join [[5 3] [] [5 9 0]]) -> [5 3 5 9 0]", "(join [[1 3 0 5] [7 6 1 9] [4 4] [8 6 8 4]]) -> [1 3 0 5 7 6 1 9 4 4 8 6 8 4]", "(join [[3]]) -> [3]", "(join [[0] [8 9 5 7] [5 8 4 5 9] [2 8]]) -> [0 8 9 5 7 5 8 4 5 9 2 8]", "(join [[8 1 3] [5 1 9 6] []]) -> [8 1 3 5 1 9 6]", "(join [[6 0 7 6] [] [2 4 9 2] [] [4 1 4]]) -> [6 0 7 6 2 4 9 2 4 1 4]", "(join []) -> []", "(join [[6 7 2 9 1]]) -> [6 7 2 9 1]", "(join []) -> []", "(join [[7 2]]) -> [7 2]", "(join []) -> []", "(join [[4 9 6] [7 5] [6 1 2 3 4] [3 3 4 2] [5 6]]) -> [4 9 6 7 5 6 1 2 3 4 3 3 4 2 5 6]", "(join [[8 2 8 9] []]) -> [8 2 8 9]", "(join [[3 9] [] [] [4 3 6 0 3] [0 8 7]]) -> [3 9 4 3 6 0 3 0 8 7]", "(join []) -> []", "(join [[3 0 3 1 2] [7 3 5 2 3] [4 9 4] [5 2 2 8]]) -> [3 0 3 1 2 7 3 5 2 3 4 9 4 5 2 2 8]", "(join [[9 4 7] [8 9 7 8] [6 0]]) -> [9 4 7 8 9 7 8 6 0]", "(join [[8] [6 2] [] [0 5 5 5 4] [1 3 5 3]]) -> [8 6 2 0 5 5 5 4 1 3 5 3]", "(join [[7 0 0 0] []]) -> [7 0 0 0]", "(join []) -> []", "(join [[4 5 9 8 4] [3 6 2 7 8] [5 7 9 3] [1 0] [4 5 1]]) -> [4 5 9 8 4 3 6 2 7 8 5 7 9 3 1 0 4 5 1]", "(join []) -> []", "(join [[] [4 0]]) -> [4 0]", "(join [[4 7] [2 8 9] [1 8 8] [9] [2 6]]) -> [4 7 2 8 9 1 8 8 9 2 6]", "(join []) -> []", "(join [[9 5 4 0 3] [2 7 9 7 6] [8 9] [4 8 7]]) -> [9 5 4 0 3 2 7 9 7 6 8 9 4 8 7]", "(join []) -> []", "(join [[] [9 0] [6 8 2 5]]) -> [9 0 6 8 2 5]", "(join []) -> []", "(join [[5 5 0]]) -> [5 5 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.85189}
{"examples": ["(join []) -> []", "(join [[6 6 5 2 1] [7] [2 3 4 5] [9] [7 2 8 0 1]]) -> [6 6 5 2 1 7 2 3 4 5 9 7 2 8 0 1]", "(join [[3]]) -> [3]", "(join [[]]) -> []", "(join [[0 7 1 4 0]]) -> [0 7 1 4 0]", "(join [[1 3 9 1 4] [] [4]]) -> [1 3 9 1 4 4]", "(join []) -> []", "(join [[1 3 9 5] [2 2 1 3 7] [5 8]]) -> [1 3 9 5 2 2 1 3 7 5 8]", "(join [[1 3 3]]) -> [1 3 3]", "(join [[0 2 8 7 5] [1 1] [] [0 6 6 0 4] [2 2 9 5 4]]) -> [0 2 8 7 5 1 1 0 6 6 0 4 2 2 9 5 4]", "(join [[3 0 4] [0]]) -> [3 0 4 0]", "(join []) -> []", "(join [[] [7 2]]) -> [7 2]", "(join [[3 3 5] [5]]) -> [3 3 5 5]", "(join [[7] [2 7 7 6 3] [9 0 6 2] [9 2 8]]) -> [7 2 7 7 6 3 9 0 6 2 9 2 8]", "(join []) -> []", "(join [[0 6 2 1 5]]) -> [0 6 2 1 5]", "(join []) -> []", "(join []) -> []", "(join [[]]) -> []", "(join []) -> []", "(join [[2 5 2 3]]) -> [2 5 2 3]", "(join [[7 2 5] [8 4 9]]) -> [7 2 5 8 4 9]", "(join [[5 1]]) -> [5 1]", "(join [[]]) -> []", "(join [[]]) -> []", "(join [[5 4]]) -> [5 4]", "(join [[] [4] [] [8 8] []]) -> [4 8 8]", "(join [[2] [9 7] [9 9 4]]) -> [2 9 7 9 9 4]", "(join [[7 7 3 1]]) -> [7 7 3 1]", "(join [[9 5 7 7] [] [0 8 2 1 3] [0 3 4 7 6] [2 2]]) -> [9 5 7 7 0 8 2 1 3 0 3 4 7 6 2 2]", "(join [[7 5 7 5] [9] []]) -> [7 5 7 5 9]", "(join [[9 7] [1 2 9] [3 1 0] [5 0] [7]]) -> [9 7 1 2 9 3 1 0 5 0 7]", "(join [[] [9 3 9] [2 1]]) -> [9 3 9 2 1]", "(join [[2 0 0 4]]) -> [2 0 0 4]", "(join [[6 0 4 2 2] [9 0] [2] []]) -> [6 0 4 2 2 9 0 2]", "(join [[0] [4 0 3 0]]) -> [0 4 0 3 0]", "(join [[6] [] [] [9 3 1]]) -> [6 9 3 1]", "(join [[9 4] [] [] [] [3 8 0 7 1]]) -> [9 4 3 8 0 7 1]", "(join []) -> []", "(join [[2 8]]) -> [2 8]", "(join [[3 6 0] [2 2 2 8 1]]) -> [3 6 0 2 2 2 8 1]", "(join [[]]) -> []", "(join [[] [3 7 6 6] [4 6] [] [2 1 6 0]]) -> [3 7 6 6 4 6 2 1 6 0]", "(join [[2 9 7 8 1] [4 1 7 3] [] [5 0 1]]) -> [2 9 7 8 1 4 1 7 3 5 0 1]", "(join [[8 0 6]]) -> [8 0 6]", "(join [[1] [5 9 6] [2] [6 6 8] []]) -> [1 5 9 6 2 6 6 8]", "(join [[] [] [0 1 6 8] [8]]) -> [0 1 6 8 8]", "(join [[3 9 9] [0 4 7]]) -> [3 9 9 0 4 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.835319}
{"examples": ["(join []) -> []", "(join [[1 7] [6 9 7]]) -> [1 7 6 9 7]", "(join [[1 8 0] [7] [2]]) -> [1 8 0 7 2]", "(join [[3] [4 4 5] [0]]) -> [3 4 4 5 0]", "(join []) -> []", "(join [[4 0 6] []]) -> [4 0 6]", "(join [[2] [] [7 4]]) -> [2 7 4]", "(join [[2 9] [3 2 7] [] [0 2 1]]) -> [2 9 3 2 7 0 2 1]", "(join [[1 7 8] [6 9 8 4] [5 7 5] [6]]) -> [1 7 8 6 9 8 4 5 7 5 6]", "(join [[0 9 3] [6 1 3]]) -> [0 9 3 6 1 3]", "(join [[] [1 0 2] [9 2 7]]) -> [1 0 2 9 2 7]", "(join []) -> []", "(join [[] [8] [2 7 8 7 1] [2 1 9 5] []]) -> [8 2 7 8 7 1 2 1 9 5]", "(join []) -> []", "(join [[4 8 1 3] [1 1 1 7]]) -> [4 8 1 3 1 1 1 7]", "(join [[9 9] [7 3]]) -> [9 9 7 3]", "(join []) -> []", "(join [[4 6 8] [7 9] [2 6 0]]) -> [4 6 8 7 9 2 6 0]", "(join [[0] [5 4 2 1] [9 6 5] [5 8 3 5 7] []]) -> [0 5 4 2 1 9 6 5 5 8 3 5 7]", "(join [[3 6 1 1 9] [2]]) -> [3 6 1 1 9 2]", "(join []) -> []", "(join [[1 4 3]]) -> [1 4 3]", "(join [[8 8 9] [6 8 1 3] [0 0]]) -> [8 8 9 6 8 1 3 0 0]", "(join [[2 5 3]]) -> [2 5 3]", "(join [[8 0] [9 2 6]]) -> [8 0 9 2 6]", "(join [[5 9]]) -> [5 9]", "(join [[9 1 2]]) -> [9 1 2]", "(join [[]]) -> []", "(join []) -> []", "(join [[7 7 0] [0 3] [6 4 9] [2] [7 8 5 4]]) -> [7 7 0 0 3 6 4 9 2 7 8 5 4]", "(join [[9] [7 8 4 1] [1 3 4 2 4]]) -> [9 7 8 4 1 1 3 4 2 4]", "(join [[1 0 4 5] [7 8 0] [4]]) -> [1 0 4 5 7 8 0 4]", "(join [[3 1 1 4 0] [] [2 1 4 1 5] [] [5 5 7 3]]) -> [3 1 1 4 0 2 1 4 1 5 5 5 7 3]", "(join [[0] [1 8 8] [7] [9 8] [5 1]]) -> [0 1 8 8 7 9 8 5 1]", "(join [[8 6 8 3 0]]) -> [8 6 8 3 0]", "(join [[4 2] [2]]) -> [4 2 2]", "(join [[4 8] [2 0]]) -> [4 8 2 0]", "(join [[] [] [] [5 5] []]) -> [5 5]", "(join [[0 0 8 4 1] [8 9] [6 5 7 7 5] [5 7 2 3 9]]) -> [0 0 8 4 1 8 9 6 5 7 7 5 5 7 2 3 9]", "(join [[8 1 1 4] [3]]) -> [8 1 1 4 3]", "(join [[6 9] [9 8] []]) -> [6 9 9 8]", "(join [[3] [8 6 2] [1 4 1]]) -> [3 8 6 2 1 4 1]", "(join [[7 5 6 3 3] [9 2 7]]) -> [7 5 6 3 3 9 2 7]", "(join []) -> []", "(join [[] [8 2 2 7 1] [0]]) -> [8 2 2 7 1 0]", "(join []) -> []", "(join []) -> []", "(join [[5]]) -> [5]", "(join [[3 7 8 9 5] [6 4] [3 7 9]]) -> [3 7 8 9 5 6 4 3 7 9]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.92467}
{"examples": ["(join []) -> []", "(join [[8] [4 3]]) -> [8 4 3]", "(join [[5 9 9 2 4] [4 7 5] [2 7] [8] [8 0 8]]) -> [5 9 9 2 4 4 7 5 2 7 8 8 0 8]", "(join [[] [1]]) -> [1]", "(join []) -> []", "(join [[2 0 3 1] [9 9] [8 0 5] [6 7 8]]) -> [2 0 3 1 9 9 8 0 5 6 7 8]", "(join [[1 1 1] [] [4] [] [2 2 9 9 2]]) -> [1 1 1 4 2 2 9 9 2]", "(join [[4 4] [4 6 6]]) -> [4 4 4 6 6]", "(join [[0 0] [5 3 9 1]]) -> [0 0 5 3 9 1]", "(join [[3 2] [8 9 4 5 5] [9 6 5] [5] [8 6 8 6 0]]) -> [3 2 8 9 4 5 5 9 6 5 5 8 6 8 6 0]", "(join [[8] [6 9 3] [2] [2 5 0 5]]) -> [8 6 9 3 2 2 5 0 5]", "(join []) -> []", "(join [[]]) -> []", "(join [[6 6 7 9] [9 9 0 5 7] [5] [8 7 3 0]]) -> [6 6 7 9 9 9 0 5 7 5 8 7 3 0]", "(join [[8 9 7 9 3] [7] [8 5 7 1 8] [2 6 5 7 0]]) -> [8 9 7 9 3 7 8 5 7 1 8 2 6 5 7 0]", "(join [[]]) -> []", "(join [[6 7 5]]) -> [6 7 5]", "(join [[7 5 4 8] [7 0 9 5]]) -> [7 5 4 8 7 0 9 5]", "(join [[3 1 2 5] [4 5 8] [3 4] [2 2 0 0 1] [5 1 2]]) -> [3 1 2 5 4 5 8 3 4 2 2 0 0 1 5 1 2]", "(join [[4] [7 5] [3 4] [0 1 3 3] [9]]) -> [4 7 5 3 4 0 1 3 3 9]", "(join [[3] [] []]) -> [3]", "(join [[] [5]]) -> [5]", "(join [[2] [2 5 4 4 7] [8 5 4 4] [1] [7]]) -> [2 2 5 4 4 7 8 5 4 4 1 7]", "(join [[8 4 7 0] [6 8 5 7 4] [6 1 5 5]]) -> [8 4 7 0 6 8 5 7 4 6 1 5 5]", "(join [[7] [7] [6 8 9 2 1]]) -> [7 7 6 8 9 2 1]", "(join [[3 2 1] [6 3]]) -> [3 2 1 6 3]", "(join [[8 3 4] []]) -> [8 3 4]", "(join [[0 3]]) -> [0 3]", "(join [[8 6 8 3] [9] [6 3 9 7 9] [7 6 8 9 9]]) -> [8 6 8 3 9 6 3 9 7 9 7 6 8 9 9]", "(join [[8 9 2]]) -> [8 9 2]", "(join [[1] [2 0 7 4 8] [6 4 8] [7 7 4]]) -> [1 2 0 7 4 8 6 4 8 7 7 4]", "(join [[8] [4] [6 7] [1 7 4 9 1] [3 3 6 2 3]]) -> [8 4 6 7 1 7 4 9 1 3 3 6 2 3]", "(join [[0 1 7] [] [0 9]]) -> [0 1 7 0 9]", "(join [[7 7] [6 7 2 8 7] [1]]) -> [7 7 6 7 2 8 7 1]", "(join [[1] [2 2 2]]) -> [1 2 2 2]", "(join [[] [8]]) -> [8]", "(join [[]]) -> []", "(join [[] [3] [9 4 4 5] [8] [9]]) -> [3 9 4 4 5 8 9]", "(join [[0 5]]) -> [0 5]", "(join []) -> []", "(join []) -> []", "(join [[] [6 0 4 1 0] [8] [2 2] [5 6 8]]) -> [6 0 4 1 0 8 2 2 5 6 8]", "(join [[8 2 3] [9 4 4 0 9]]) -> [8 2 3 9 4 4 0 9]", "(join [[9 2 9 7] [1 8 9] [5 9] [8 0 5 4 7] [0 4 4 8 1]]) -> [9 2 9 7 1 8 9 5 9 8 0 5 4 7 0 4 4 8 1]", "(join [[2] [8 7 8 7 2] [4 2 8 3]]) -> [2 8 7 8 7 2 4 2 8 3]", "(join []) -> []", "(join [[1] [] [2] [] [7]]) -> [1 2 7]", "(join [[1 8 0 6] [8] [4 6 3 0 4]]) -> [1 8 0 6 8 4 6 3 0 4]", "(join [[5 4]]) -> [5 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.951892}
{"examples": ["(join []) -> []", "(join [[2 3 3] [3 6 6 1 0] [1 8]]) -> [2 3 3 3 6 6 1 0 1 8]", "(join [[] [4 1 4 2]]) -> [4 1 4 2]", "(join [[4 3] [4 7] [] [4 4 4]]) -> [4 3 4 7 4 4 4]", "(join [[9 2] [6 6 8 3]]) -> [9 2 6 6 8 3]", "(join [[1] [4 5 2 7] [9]]) -> [1 4 5 2 7 9]", "(join [[2]]) -> [2]", "(join [[1 0 8 2] [4 0]]) -> [1 0 8 2 4 0]", "(join [[] [4 8] [8 4 0]]) -> [4 8 8 4 0]", "(join [[5 7 5 1] [8 0]]) -> [5 7 5 1 8 0]", "(join [[6 7 7]]) -> [6 7 7]", "(join [[3] [7 7 0]]) -> [3 7 7 0]", "(join [[5 3 5 9 8] [9 6 5] [3 1 8 1 2] [6 4 5] [9 7 3]]) -> [5 3 5 9 8 9 6 5 3 1 8 1 2 6 4 5 9 7 3]", "(join [[9 7 7 1] [7 0 3] [7 2]]) -> [9 7 7 1 7 0 3 7 2]", "(join [[6 1 2 6 6] [8 8 6 7] [9 5 3 0 2] []]) -> [6 1 2 6 6 8 8 6 7 9 5 3 0 2]", "(join []) -> []", "(join [[4 0 7 9]]) -> [4 0 7 9]", "(join []) -> []", "(join [[6 9 0 5]]) -> [6 9 0 5]", "(join [[4 7 7] [0 4 4 8 7]]) -> [4 7 7 0 4 4 8 7]", "(join [[5 1 3 6]]) -> [5 1 3 6]", "(join [[4 3 5 6] []]) -> [4 3 5 6]", "(join [[1 1 5] [9 6] [0 5] [1 2 1 3 5] [3]]) -> [1 1 5 9 6 0 5 1 2 1 3 5 3]", "(join [[9 5 0 4] [] [1] [8] [9 5 1 8 5]]) -> [9 5 0 4 1 8 9 5 1 8 5]", "(join [[7 1 5 9] [6] [8 6 9 4]]) -> [7 1 5 9 6 8 6 9 4]", "(join [[6] [5] [9 0 4 2] [3 3 9 0]]) -> [6 5 9 0 4 2 3 3 9 0]", "(join []) -> []", "(join [[6 8 3] [8 0 3 5] [3 7] [9 3 1 2] [8 1 5]]) -> [6 8 3 8 0 3 5 3 7 9 3 1 2 8 1 5]", "(join [[5]]) -> [5]", "(join [[9 0] [6 4 8] [0 3 7 6 2] [0 0 3] [7 6 7 0 9]]) -> [9 0 6 4 8 0 3 7 6 2 0 0 3 7 6 7 0 9]", "(join [[4 6 8] [8 1 1 7 1] [5]]) -> [4 6 8 8 1 1 7 1 5]", "(join [[0 1 2 2] [6 0 0 2 2]]) -> [0 1 2 2 6 0 0 2 2]", "(join [[2 1] [7 0]]) -> [2 1 7 0]", "(join []) -> []", "(join [[8 7 0] [] [2 4] []]) -> [8 7 0 2 4]", "(join []) -> []", "(join [[4 3 9] [] [9] [8 0 3 6 8] [5 3 4 0 1]]) -> [4 3 9 9 8 0 3 6 8 5 3 4 0 1]", "(join [[5 0 1 8] [5 3 8 5 7]]) -> [5 0 1 8 5 3 8 5 7]", "(join []) -> []", "(join [[] [1 5 2] [6 3 1]]) -> [1 5 2 6 3 1]", "(join []) -> []", "(join []) -> []", "(join [[4] [] [9 2] [8 0 8 3 7]]) -> [4 9 2 8 0 8 3 7]", "(join [[9] [6 1 5 9 5] [9 5 3 2 1] [5 8] [0]]) -> [9 6 1 5 9 5 9 5 3 2 1 5 8 0]", "(join [[4] [] [2] [5 9 0]]) -> [4 2 5 9 0]", "(join [[] [3 2] [5] [] [5 5]]) -> [3 2 5 5 5]", "(join []) -> []", "(join []) -> []", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.946268}
{"examples": ["(join []) -> []", "(join [[7 9 9]]) -> [7 9 9]", "(join [[3 0] [1 4 3]]) -> [3 0 1 4 3]", "(join [[2] [9 2 3 5] [] [7 8] [9 5 5]]) -> [2 9 2 3 5 7 8 9 5 5]", "(join []) -> []", "(join [[3] [4 4] [1 8] [3]]) -> [3 4 4 1 8 3]", "(join []) -> []", "(join []) -> []", "(join [[6 0 7 6 7]]) -> [6 0 7 6 7]", "(join []) -> []", "(join [[6 6 9] [5 4]]) -> [6 6 9 5 4]", "(join [[] [4 1] [0 6] [] [9 7]]) -> [4 1 0 6 9 7]", "(join [[9 5 2] [1 4 0 9]]) -> [9 5 2 1 4 0 9]", "(join [[] [0 2 2 5] [5]]) -> [0 2 2 5 5]", "(join [[9 9 3 8 1] [2 5] [5 0 6] [7 5]]) -> [9 9 3 8 1 2 5 5 0 6 7 5]", "(join [[0 7] [] [7 3]]) -> [0 7 7 3]", "(join [[9 2 3] [4 0 0 1 9] [5 7 6 4] []]) -> [9 2 3 4 0 0 1 9 5 7 6 4]", "(join [[3 4 6 9 4] [6] []]) -> [3 4 6 9 4 6]", "(join [[] [8 8] []]) -> [8 8]", "(join [[] [7 3 4 3 6] [6 1 9 3 8] [1 9 1] [7 2 3 3 8]]) -> [7 3 4 3 6 6 1 9 3 8 1 9 1 7 2 3 3 8]", "(join [[6] [7 6 4 6 9]]) -> [6 7 6 4 6 9]", "(join [[6] [2 6 5 3 9] [3]]) -> [6 2 6 5 3 9 3]", "(join [[2 7 3]]) -> [2 7 3]", "(join [[6 3 0]]) -> [6 3 0]", "(join [[2 3 0 5] [3 3 5 6 1] [4 7 8 6]]) -> [2 3 0 5 3 3 5 6 1 4 7 8 6]", "(join [[2 5 1 1]]) -> [2 5 1 1]", "(join [[] [3 5 2]]) -> [3 5 2]", "(join [[]]) -> []", "(join [[5 8 9] [6 0 3 2 6] [9 4 2 7 9]]) -> [5 8 9 6 0 3 2 6 9 4 2 7 9]", "(join [[] [9] [9 7 3 5] [3] [2 2 9 9 9]]) -> [9 9 7 3 5 3 2 2 9 9 9]", "(join [[5 6 2 5 0] [3] [5 3 4]]) -> [5 6 2 5 0 3 5 3 4]", "(join [[] [0 7 8 3 8]]) -> [0 7 8 3 8]", "(join [[0 8 1 1] [8] [1 2] [8 4] [7 6 7 1]]) -> [0 8 1 1 8 1 2 8 4 7 6 7 1]", "(join [[1] [0 4 3 0] [6 8 9 6] [6 1 1 1]]) -> [1 0 4 3 0 6 8 9 6 6 1 1 1]", "(join [[] [4 6 4 9]]) -> [4 6 4 9]", "(join [[1 0 0 3] [8] [8]]) -> [1 0 0 3 8 8]", "(join []) -> []", "(join [[7 2 2 1] [5] [1 8 2 4] [6]]) -> [7 2 2 1 5 1 8 2 4 6]", "(join [[9 6] [1 1 6 3]]) -> [9 6 1 1 6 3]", "(join [[2 1 7 6 8] [2 5 9] [0 6 4 1 5] []]) -> [2 1 7 6 8 2 5 9 0 6 4 1 5]", "(join [[6 1 6] [7 2 5 7 7] [7]]) -> [6 1 6 7 2 5 7 7 7]", "(join [[2] [0 8 0 3 1]]) -> [2 0 8 0 3 1]", "(join [[6 1 2 4]]) -> [6 1 2 4]", "(join [[]]) -> []", "(join [[3 4]]) -> [3 4]", "(join [[8 9 3 0] [3 0 2 1]]) -> [8 9 3 0 3 0 2 1]", "(join [[3 0 6] [2 5 6 3] [4]]) -> [3 0 6 2 5 6 3 4]", "(join [[9 5 8 9 6]]) -> [9 5 8 9 6]", "(join [[3 1 1 8]]) -> [3 1 1 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.945873}
{"examples": ["(join []) -> []", "(join [[] [5 5 0 0 8]]) -> [5 5 0 0 8]", "(join [[1 3 7 9] [3 7 9 2 6]]) -> [1 3 7 9 3 7 9 2 6]", "(join [[6] [3 1] [4 4] []]) -> [6 3 1 4 4]", "(join [[6] [1 7] [4] [9 2 6 5 3]]) -> [6 1 7 4 9 2 6 5 3]", "(join [[6 1 0] [8 6 2 2 1]]) -> [6 1 0 8 6 2 2 1]", "(join [[3 2 0 8] [7 3 0 4] [7 4 0 3 9] [1 5] [9 4]]) -> [3 2 0 8 7 3 0 4 7 4 0 3 9 1 5 9 4]", "(join []) -> []", "(join []) -> []", "(join [[4 3]]) -> [4 3]", "(join [[4 6] [8 7 0 4 7] [2 3]]) -> [4 6 8 7 0 4 7 2 3]", "(join [[6 9 8] [5 6 0] [4] [4 9 3 0]]) -> [6 9 8 5 6 0 4 4 9 3 0]", "(join [[8 0 8 9]]) -> [8 0 8 9]", "(join [[3] [9 3] [3 1 7]]) -> [3 9 3 3 1 7]", "(join [[5 4 5 7 7] [1 3 7 6 5] [4 6 3] [9]]) -> [5 4 5 7 7 1 3 7 6 5 4 6 3 9]", "(join [[4 9]]) -> [4 9]", "(join [[4 7 7 0 2] [6 8 8 5 1] [7 4 0 6] [9 8 3 9] [4]]) -> [4 7 7 0 2 6 8 8 5 1 7 4 0 6 9 8 3 9 4]", "(join [[]]) -> []", "(join [[6 8 4] [] [8 6]]) -> [6 8 4 8 6]", "(join [[7 3 2 1] [9 6 4] [1 6 9 3] [5 1] []]) -> [7 3 2 1 9 6 4 1 6 9 3 5 1]", "(join [[3 6 6 7 4] [5 8]]) -> [3 6 6 7 4 5 8]", "(join [[3 4 7 5 7] [3] [] []]) -> [3 4 7 5 7 3]", "(join [[0 3 0] [4 4 9 8 0] [8 1 0 0] [7]]) -> [0 3 0 4 4 9 8 0 8 1 0 0 7]", "(join [[1 5 8 5 4] [3] [4 0 6] [3 1 9] []]) -> [1 5 8 5 4 3 4 0 6 3 1 9]", "(join [[2 4] [4 9 3 6] [6] [7 9 2]]) -> [2 4 4 9 3 6 6 7 9 2]", "(join [[2 2 9 6 7] [7 0 5]]) -> [2 2 9 6 7 7 0 5]", "(join []) -> []", "(join [[9 5 8 0] [5 2 2 6] [8 4 4 8] [6 8 7]]) -> [9 5 8 0 5 2 2 6 8 4 4 8 6 8 7]", "(join []) -> []", "(join [[0] [6 1 1] [2 6 9 1 9] [4 1 8 0 6] [1 2 4]]) -> [0 6 1 1 2 6 9 1 9 4 1 8 0 6 1 2 4]", "(join [[0]]) -> [0]", "(join [[] [4 0 1] [5 3 4 7] [0] [5 9]]) -> [4 0 1 5 3 4 7 0 5 9]", "(join [[5 5 0 2 1] [9] [7 6] [2] [0]]) -> [5 5 0 2 1 9 7 6 2 0]", "(join [[7 4 4] [1 9] []]) -> [7 4 4 1 9]", "(join [[8 1] [9 8 1 2] [1] [9 2 6 2]]) -> [8 1 9 8 1 2 1 9 2 6 2]", "(join []) -> []", "(join [[4 5] [7 0 0 7] [7 0 4 4] [9 1 8 4] []]) -> [4 5 7 0 0 7 7 0 4 4 9 1 8 4]", "(join [[5 4 1 8] [] [8 2 9 3]]) -> [5 4 1 8 8 2 9 3]", "(join [[9 3 6 6] [] [4 6 0 2 9] [8 0]]) -> [9 3 6 6 4 6 0 2 9 8 0]", "(join [[9 5 6] [] [4 8 4] [4 8 5 3]]) -> [9 5 6 4 8 4 4 8 5 3]", "(join [[1 9 3 2] [9] [8 9 0 0] [1 5 8 5 4]]) -> [1 9 3 2 9 8 9 0 0 1 5 8 5 4]", "(join [[] [1 1] [3 6] [7 7] [8 6 1 7 2]]) -> [1 1 3 6 7 7 8 6 1 7 2]", "(join []) -> []", "(join [[1 9 3 1 3] []]) -> [1 9 3 1 3]", "(join [[8] [8 4 4 7] [0]]) -> [8 8 4 4 7 0]", "(join [[8] [8 1 9] [5 6 8 6] [9 7 5 0 2] [0 9]]) -> [8 8 1 9 5 6 8 6 9 7 5 0 2 0 9]", "(join [[6 1] [6 8 9]]) -> [6 1 6 8 9]", "(join []) -> []", "(join [[6 2]]) -> [6 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.90766}
{"examples": ["(join []) -> []", "(join [[7 6 5 3 9] [] [5] [1 4 5]]) -> [7 6 5 3 9 5 1 4 5]", "(join [[6] [] [9 9] [2 4 4 2]]) -> [6 9 9 2 4 4 2]", "(join [[8 3] [2 8 5 9 6] [3 8 9]]) -> [8 3 2 8 5 9 6 3 8 9]", "(join []) -> []", "(join [[] [3 8 4] [9 5 1] [5 7 7 3 9]]) -> [3 8 4 9 5 1 5 7 7 3 9]", "(join [[4 6 2 9] [0 3 8 7 5] [3 8 2 9]]) -> [4 6 2 9 0 3 8 7 5 3 8 2 9]", "(join [[] [] [4 2] [8 6 7 9 7] [2 1 9 8 1]]) -> [4 2 8 6 7 9 7 2 1 9 8 1]", "(join [[6 0] [9 1 0 0 6]]) -> [6 0 9 1 0 0 6]", "(join [[7 9] [9 8 1]]) -> [7 9 9 8 1]", "(join [[9 5 0]]) -> [9 5 0]", "(join [[] [] []]) -> []", "(join [[4 0 2] [] [4] [7 5 0]]) -> [4 0 2 4 7 5 0]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[2 7] [2 1 6]]) -> [2 7 2 1 6]", "(join [[] [8 5 4] []]) -> [8 5 4]", "(join [[3 7 9 4 0] [3] [4 3 4 9] [3 9 7 3]]) -> [3 7 9 4 0 3 4 3 4 9 3 9 7 3]", "(join [[] [5 1 2]]) -> [5 1 2]", "(join []) -> []", "(join []) -> []", "(join [[8] [8 7 1 1] [4 2 3 9] [6 2 4]]) -> [8 8 7 1 1 4 2 3 9 6 2 4]", "(join [[0 8 5] [8 2 9 7 0] [4 4 3 6 8] [0 7] [8 1 6 3]]) -> [0 8 5 8 2 9 7 0 4 4 3 6 8 0 7 8 1 6 3]", "(join [[0 1 4 3] [3 4 3]]) -> [0 1 4 3 3 4 3]", "(join [[2 9] [0 7 1 4 5]]) -> [2 9 0 7 1 4 5]", "(join [[7 6 2 7 0] [1 5 3] [7 1]]) -> [7 6 2 7 0 1 5 3 7 1]", "(join [[7 1 0 2] [3 0 0] [3]]) -> [7 1 0 2 3 0 0 3]", "(join [[0] [4]]) -> [0 4]", "(join [[] [5 0]]) -> [5 0]", "(join []) -> []", "(join []) -> []", "(join [[2 8 4 4] [6] [4 4 4]]) -> [2 8 4 4 6 4 4 4]", "(join [[3 4 9 1 0]]) -> [3 4 9 1 0]", "(join [[0 5 7] [] [3 8] [6]]) -> [0 5 7 3 8 6]", "(join []) -> []", "(join [[5 4 1 9] [7 5 0 5]]) -> [5 4 1 9 7 5 0 5]", "(join [[5 7 5 7 1] [6 4 1] [8]]) -> [5 7 5 7 1 6 4 1 8]", "(join []) -> []", "(join [[4 0 9 9] [9 4 5] [8 9]]) -> [4 0 9 9 9 4 5 8 9]", "(join [[1] [2 0] [4 4 8] [5 5]]) -> [1 2 0 4 4 8 5 5]", "(join [[]]) -> []", "(join [[8 7] [4]]) -> [8 7 4]", "(join [[3 9 4] [4 0] [3 4 1 1 0] []]) -> [3 9 4 4 0 3 4 1 1 0]", "(join [[0 8 4] [1 8 0] [4 8 1 4]]) -> [0 8 4 1 8 0 4 8 1 4]", "(join [[0 0 9] [7 8 3]]) -> [0 0 9 7 8 3]", "(join [[0] []]) -> [0]", "(join [[] [7 3 4 4] [8] [1 2 4 1]]) -> [7 3 4 4 8 1 2 4 1]", "(join [[5] [8 2 2 9 0]]) -> [5 8 2 2 9 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.959964}
{"examples": ["(join []) -> []", "(join [[2 6] [] [2 5 7 5 1]]) -> [2 6 2 5 7 5 1]", "(join []) -> []", "(join [[5 4 4 6] [0 7 8 4] [5 6 7] [7] [1 3 4]]) -> [5 4 4 6 0 7 8 4 5 6 7 7 1 3 4]", "(join []) -> []", "(join [[5] [7 5] [5]]) -> [5 7 5 5]", "(join [[4 0 9] [8 0 0 6 5]]) -> [4 0 9 8 0 0 6 5]", "(join [[6]]) -> [6]", "(join [[0 2 7 7 5]]) -> [0 2 7 7 5]", "(join [[9 3 7 1 8]]) -> [9 3 7 1 8]", "(join []) -> []", "(join [[6 2] [9 0 4 6]]) -> [6 2 9 0 4 6]", "(join [[0 1]]) -> [0 1]", "(join [[9 1 7] [] [5 4 5 1 4]]) -> [9 1 7 5 4 5 1 4]", "(join [[0]]) -> [0]", "(join [[0 5] [7]]) -> [0 5 7]", "(join [[9 2 1 6] [7 5]]) -> [9 2 1 6 7 5]", "(join [[7 5 8 0 7]]) -> [7 5 8 0 7]", "(join []) -> []", "(join [[2]]) -> [2]", "(join [[1 5 7 9] [5 5 4 6 7]]) -> [1 5 7 9 5 5 4 6 7]", "(join [[2 3 8 6] [6 4 1] [6 5]]) -> [2 3 8 6 6 4 1 6 5]", "(join []) -> []", "(join [[1 1 9 7 0]]) -> [1 1 9 7 0]", "(join [[5 0 2 9] [1 8 4] [] []]) -> [5 0 2 9 1 8 4]", "(join [[] [8 2 7] [] [6 1 9 7 4]]) -> [8 2 7 6 1 9 7 4]", "(join [[]]) -> []", "(join [[]]) -> []", "(join []) -> []", "(join [[2 3 8 5 7] [4] [8 2] [1 5 6 6 6]]) -> [2 3 8 5 7 4 8 2 1 5 6 6 6]", "(join [[0 6 4 5]]) -> [0 6 4 5]", "(join [[0 7] [5 8 6 6] [4 0 8] [6 0 3 1 2]]) -> [0 7 5 8 6 6 4 0 8 6 0 3 1 2]", "(join [[9 9 3 9 2] [6 3 5]]) -> [9 9 3 9 2 6 3 5]", "(join []) -> []", "(join [[6 4 7 2 6] [1 0 6 7]]) -> [6 4 7 2 6 1 0 6 7]", "(join [[7] [8 4 1 9]]) -> [7 8 4 1 9]", "(join [[5 0 0 9 2] [1 9 4 7] [] [7]]) -> [5 0 0 9 2 1 9 4 7 7]", "(join [[3 6 1 3 9] [6 4 4 1]]) -> [3 6 1 3 9 6 4 4 1]", "(join [[7 3 9 5 0] [6 5 1 9 7]]) -> [7 3 9 5 0 6 5 1 9 7]", "(join [[5] [8] [] [9 0] [6 1]]) -> [5 8 9 0 6 1]", "(join [[9 1] [0 6 7 9] [0 8] [8 5 4 9] [7 7 6 4 1]]) -> [9 1 0 6 7 9 0 8 8 5 4 9 7 7 6 4 1]", "(join [[9]]) -> [9]", "(join [[6 2 6 2] [8 5 5 4 6] [4 9]]) -> [6 2 6 2 8 5 5 4 6 4 9]", "(join [[8 1 0 0] [9 5 1 9 3] [6] [4 8 5] [4 7 2 5]]) -> [8 1 0 0 9 5 1 9 3 6 4 8 5 4 7 2 5]", "(join [[2 9] [1] [] [2 4 0 0] []]) -> [2 9 1 2 4 0 0]", "(join [[] [4 9 6 1 3] [5 1] [] [1 8 0]]) -> [4 9 6 1 3 5 1 1 8 0]", "(join [[5 3] [2 1]]) -> [5 3 2 1]", "(join []) -> []", "(join [[4 0 7]]) -> [4 0 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.937868}
{"examples": ["(join []) -> []", "(join [[3 8] [9] [4 3 5 0] [1 8 7 1 5]]) -> [3 8 9 4 3 5 0 1 8 7 1 5]", "(join [[1 8 8 3 3] [3 5]]) -> [1 8 8 3 3 3 5]", "(join [[]]) -> []", "(join [[3 6 9] [8 0 0 2 5]]) -> [3 6 9 8 0 0 2 5]", "(join [[4 8 1 1 5] [] [] [2 6 1 1 0]]) -> [4 8 1 1 5 2 6 1 1 0]", "(join [[0] [2 6 6] [] [] [3 1 2 8]]) -> [0 2 6 6 3 1 2 8]", "(join []) -> []", "(join []) -> []", "(join [[8 3 9] [9] [5 3] [6 0 2]]) -> [8 3 9 9 5 3 6 0 2]", "(join [[0 5 3]]) -> [0 5 3]", "(join [[2 4 3] [3 4 5 6 1] [4] [] [4 2]]) -> [2 4 3 3 4 5 6 1 4 4 2]", "(join []) -> []", "(join []) -> []", "(join [[9 2 5] [2 7] [5] [3 9]]) -> [9 2 5 2 7 5 3 9]", "(join [[4 7] [] [4 3 7 5] [3 4 2] [6 0]]) -> [4 7 4 3 7 5 3 4 2 6 0]", "(join [[] [5 4 0 1 3] [] [8]]) -> [5 4 0 1 3 8]", "(join [[8] [3 6 5 1 2] []]) -> [8 3 6 5 1 2]", "(join []) -> []", "(join [[] [4 6 3 0 5] [] [5 5 9 6 1]]) -> [4 6 3 0 5 5 5 9 6 1]", "(join []) -> []", "(join [[7 8]]) -> [7 8]", "(join [[7 5 8] [8 2 8 0 3] [3] []]) -> [7 5 8 8 2 8 0 3 3]", "(join []) -> []", "(join []) -> []", "(join [[4 4 9 0 3] []]) -> [4 4 9 0 3]", "(join [[8 8] [0] [0 3 2 0]]) -> [8 8 0 0 3 2 0]", "(join [[1]]) -> [1]", "(join [[1 6] [0 8 1] [6 7 8 0 2] [3 3 7 1]]) -> [1 6 0 8 1 6 7 8 0 2 3 3 7 1]", "(join [[3 7 6 2] [3]]) -> [3 7 6 2 3]", "(join [[4 2 4 1] [8 0 6 0]]) -> [4 2 4 1 8 0 6 0]", "(join [[0 4 7 8] [3 9 8 0]]) -> [0 4 7 8 3 9 8 0]", "(join [[] []]) -> []", "(join [[3 2 4 4 1]]) -> [3 2 4 4 1]", "(join [[6 4 7 6] [2 7 9 9] []]) -> [6 4 7 6 2 7 9 9]", "(join [[2 7]]) -> [2 7]", "(join []) -> []", "(join []) -> []", "(join [[6] [8 2] [2 9] [5 9]]) -> [6 8 2 2 9 5 9]", "(join []) -> []", "(join [[9]]) -> [9]", "(join [[] [5 2 1 2 6] [1] [1 3 2 8] [9 8]]) -> [5 2 1 2 6 1 1 3 2 8 9 8]", "(join [[4 2 3 6] [5 0 0 2] [8 5 4 1 1] [] [7 7 7]]) -> [4 2 3 6 5 0 0 2 8 5 4 1 1 7 7 7]", "(join []) -> []", "(join [[4 1 5 8 7] [9] [3 1 1]]) -> [4 1 5 8 7 9 3 1 1]", "(join []) -> []", "(join [[8 0 2 8 0] [5 7 5 9 4] [5 9] [9]]) -> [8 0 2 8 0 5 7 5 9 4 5 9 9]", "(join [[] [2 6 6 9] [2 0 6 3 9]]) -> [2 6 6 9 2 0 6 3 9]", "(join [[] [8 7 2]]) -> [8 7 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.94224}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[1] [4]]) -> [1 4]", "(join [[1 4] [5 3 8] [0] [7 3]]) -> [1 4 5 3 8 0 7 3]", "(join [[8 9 3 9] [0] [6 4 9 6 8] [] [3]]) -> [8 9 3 9 0 6 4 9 6 8 3]", "(join [[4 5 0 4]]) -> [4 5 0 4]", "(join [[1 3 7 9] [8] [5 4]]) -> [1 3 7 9 8 5 4]", "(join [[8 2] [0 5 0 0]]) -> [8 2 0 5 0 0]", "(join [[9 3 9 0 9] [] [7 6 5 8]]) -> [9 3 9 0 9 7 6 5 8]", "(join [[] [7] [7] [9]]) -> [7 7 9]", "(join [[4 7 7 8]]) -> [4 7 7 8]", "(join [[7 9 3 4] [1 0 2] [8 2 2 7 0] [8 7] [1]]) -> [7 9 3 4 1 0 2 8 2 2 7 0 8 7 1]", "(join []) -> []", "(join [[8 1] [3 8] []]) -> [8 1 3 8]", "(join [[]]) -> []", "(join []) -> []", "(join [[] [8 2 9 8 2] [0 6 0 4] [6 9] [0 7]]) -> [8 2 9 8 2 0 6 0 4 6 9 0 7]", "(join [[2 0 0 1] [] [5 0 1 2]]) -> [2 0 0 1 5 0 1 2]", "(join [[1 7 0] [] [] [8 8 7 9] [9 4 0 5]]) -> [1 7 0 8 8 7 9 9 4 0 5]", "(join []) -> []", "(join [[0 2 1 1] [5 2 1 1 6] [] [5 0] [4 5]]) -> [0 2 1 1 5 2 1 1 6 5 0 4 5]", "(join [[]]) -> []", "(join [[9 7 3 1 7] [6 5 9] [2 1]]) -> [9 7 3 1 7 6 5 9 2 1]", "(join [[3 0 6 3] [8 4 5 1 6] [3] []]) -> [3 0 6 3 8 4 5 1 6 3]", "(join [[5 6 9 9 0] [] [6 4 4 6 8]]) -> [5 6 9 9 0 6 4 4 6 8]", "(join [[1 9] [2 5 6 1] [7]]) -> [1 9 2 5 6 1 7]", "(join [[2 4 9 9 4]]) -> [2 4 9 9 4]", "(join [[6] [1 5 4 7]]) -> [6 1 5 4 7]", "(join [[3 3 9 3 8] [2 0 5]]) -> [3 3 9 3 8 2 0 5]", "(join [[3 9]]) -> [3 9]", "(join [[8] [5 4 7 2 5]]) -> [8 5 4 7 2 5]", "(join [[6 5 6]]) -> [6 5 6]", "(join [[6 1 0 0 9] [4]]) -> [6 1 0 0 9 4]", "(join [[8 3 0] [] [8 3 7] [3 9 2 0]]) -> [8 3 0 8 3 7 3 9 2 0]", "(join [[4 8 3] [9 9 6 0 7] [4 1 7 1] []]) -> [4 8 3 9 9 6 0 7 4 1 7 1]", "(join [[2 3 0 5] [3 2 4 1 0] [5] [0 1] [0]]) -> [2 3 0 5 3 2 4 1 0 5 0 1 0]", "(join [[0 2 7] [6 0]]) -> [0 2 7 6 0]", "(join [[]]) -> []", "(join [[8 7 1] [8 6] [5 1] [1]]) -> [8 7 1 8 6 5 1 1]", "(join [[5 2 9 0 9] [7] [7 6 8]]) -> [5 2 9 0 9 7 7 6 8]", "(join [[] [8 1 3] [4 5 6 3 0] [6 1] [5 2 3 2 3]]) -> [8 1 3 4 5 6 3 0 6 1 5 2 3 2 3]", "(join [[0 7] [8 1 6] [1 5 3 3 9] [4 9 1 8 2] [8]]) -> [0 7 8 1 6 1 5 3 3 9 4 9 1 8 2 8]", "(join [[4 9 7] [2 7] [0 9 2 8] [1 6 5] [9 0 0 4]]) -> [4 9 7 2 7 0 9 2 8 1 6 5 9 0 0 4]", "(join [[2 7 9 5 3] [1 6]]) -> [2 7 9 5 3 1 6]", "(join [[7 3] [0 3] [] [8 5 8 8 5] [8 6 8]]) -> [7 3 0 3 8 5 8 8 5 8 6 8]", "(join [[5 2 0] [6 6]]) -> [5 2 0 6 6]", "(join []) -> []", "(join [[5 9 9] [6 6 7 5 6]]) -> [5 9 9 6 6 7 5 6]", "(join [[] [8 7 4 5] [7 2 4]]) -> [8 7 4 5 7 2 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.9158}
{"examples": ["(join []) -> []", "(join [[] [8 2 6 8 3] [9 9 6 6] [0 2]]) -> [8 2 6 8 3 9 9 6 6 0 2]", "(join [[8] [1] [4 8 6 9 6]]) -> [8 1 4 8 6 9 6]", "(join [[] [1 8 2 0 6]]) -> [1 8 2 0 6]", "(join []) -> []", "(join [[3 9 0 7 0] [2 0 4 8 8] [2 9 2 8 1]]) -> [3 9 0 7 0 2 0 4 8 8 2 9 2 8 1]", "(join [[9 9 6 6] [7 7 4 6 0] [1 3 8] [6]]) -> [9 9 6 6 7 7 4 6 0 1 3 8 6]", "(join [[9]]) -> [9]", "(join [[4 5 6 6 0] [1 8 1 2 5] [8] [7 2] [0]]) -> [4 5 6 6 0 1 8 1 2 5 8 7 2 0]", "(join [[5]]) -> [5]", "(join [[2 4]]) -> [2 4]", "(join [[2 8 4 3] [2 4]]) -> [2 8 4 3 2 4]", "(join [[3 1 6 1] [0 6 8 2]]) -> [3 1 6 1 0 6 8 2]", "(join []) -> []", "(join [[8 5 9 4 6] [8 3 4 1 9] []]) -> [8 5 9 4 6 8 3 4 1 9]", "(join []) -> []", "(join [[0 5 4 8] [3 0 0]]) -> [0 5 4 8 3 0 0]", "(join [[]]) -> []", "(join [[8 6 0] [5 9]]) -> [8 6 0 5 9]", "(join [[9] [6 4 3 4 6] [9 9]]) -> [9 6 4 3 4 6 9 9]", "(join [[] [4 0] [3 1] [] []]) -> [4 0 3 1]", "(join [[6] [8 7 6] [9 9 7] [6 6 6 6] [0 4 6 5]]) -> [6 8 7 6 9 9 7 6 6 6 6 0 4 6 5]", "(join [[]]) -> []", "(join [[] [6 5] [5 0 8]]) -> [6 5 5 0 8]", "(join [[1 9 3 5] [6 8]]) -> [1 9 3 5 6 8]", "(join [[] []]) -> []", "(join [[] [7 2 3 2]]) -> [7 2 3 2]", "(join [[]]) -> []", "(join [[]]) -> []", "(join [[1 7 3 8 1] [6]]) -> [1 7 3 8 1 6]", "(join [[] [0 5] [6 6 2] [9 2 6 9] []]) -> [0 5 6 6 2 9 2 6 9]", "(join [[1 7 0 0 7] [1 2] [6 1 1 3 9] [4 6 9 5]]) -> [1 7 0 0 7 1 2 6 1 1 3 9 4 6 9 5]", "(join [[1 2] [1] [] [3 7]]) -> [1 2 1 3 7]", "(join [[2] [4 9 0 4 3]]) -> [2 4 9 0 4 3]", "(join [[9 2 6 3 3] [2 5 2]]) -> [9 2 6 3 3 2 5 2]", "(join []) -> []", "(join []) -> []", "(join [[] [9 1 1 5] [2 1 7 4]]) -> [9 1 1 5 2 1 7 4]", "(join [[3 8] [9] [] [0 9 3] []]) -> [3 8 9 0 9 3]", "(join []) -> []", "(join [[9 7 6] [] [4] [] [0]]) -> [9 7 6 4 0]", "(join [[1 9 5] [2 7 0] [2 4 3]]) -> [1 9 5 2 7 0 2 4 3]", "(join [[3]]) -> [3]", "(join [[3 2] [] [0 2 0 9 7] []]) -> [3 2 0 2 0 9 7]", "(join []) -> []", "(join [[9 0 7]]) -> [9 0 7]", "(join []) -> []", "(join [[5] [7 0] [2 4 5 9 9] [] [7 7 8 8 2]]) -> [5 7 0 2 4 5 9 9 7 7 8 8 2]", "(join [[7 5 3 7 9] [5]]) -> [7 5 3 7 9 5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.524137}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[8] [] [8 4] [5] [4 4]]) -> [8 8 4 5 4 4]", "(join []) -> []", "(join [[1 9] [4 0 6] [5 5 9] [1 1 5]]) -> [1 9 4 0 6 5 5 9 1 1 5]", "(join [[] [1 2] [7] [4 3 8]]) -> [1 2 7 4 3 8]", "(join [[0] [7 3 7 0]]) -> [0 7 3 7 0]", "(join [[]]) -> []", "(join [[5] [7]]) -> [5 7]", "(join [[] [6 7 8 7 5] []]) -> [6 7 8 7 5]", "(join []) -> []", "(join [[1 3 9 9 5] [9 9]]) -> [1 3 9 9 5 9 9]", "(join [[9 2 8 6] [1 8 4 6] [2 7 5 0] [3 6 0 6 7]]) -> [9 2 8 6 1 8 4 6 2 7 5 0 3 6 0 6 7]", "(join [[1 4 6] [5 5 7 5] [9 6 5 6 5] [0 3 7]]) -> [1 4 6 5 5 7 5 9 6 5 6 5 0 3 7]", "(join [[] [] [1 9 6 0 6] [7 7 2 2]]) -> [1 9 6 0 6 7 7 2 2]", "(join [[6 6 0]]) -> [6 6 0]", "(join [[]]) -> []", "(join [[7 5] [8 4 2 4] [2 6 9] [6 0]]) -> [7 5 8 4 2 4 2 6 9 6 0]", "(join [[0 8 2 1] [7 7] [5 4 2 4 8]]) -> [0 8 2 1 7 7 5 4 2 4 8]", "(join [[7 0 6] [7 6 4 7 9] [] [2 6 9 3]]) -> [7 0 6 7 6 4 7 9 2 6 9 3]", "(join [[8 6 3 1] [5 3 5 6]]) -> [8 6 3 1 5 3 5 6]", "(join []) -> []", "(join [[1] [6 2 8] [] [1 0 6]]) -> [1 6 2 8 1 0 6]", "(join [[8] [8 1 6 9 6] [] [] [9 6 3 7 4]]) -> [8 8 1 6 9 6 9 6 3 7 4]", "(join [[2 8 5 8] [3 4] [7 8 6]]) -> [2 8 5 8 3 4 7 8 6]", "(join []) -> []", "(join [[2] [7 4 9 6 6] [5 4 3 5]]) -> [2 7 4 9 6 6 5 4 3 5]", "(join [[3]]) -> [3]", "(join [[1 4 4 9] [6]]) -> [1 4 4 9 6]", "(join [[7] [8 8 1] []]) -> [7 8 8 1]", "(join [[2 1 7] [8]]) -> [2 1 7 8]", "(join []) -> []", "(join [[6]]) -> [6]", "(join [[4 3 5 5] [] [7] [6 6]]) -> [4 3 5 5 7 6 6]", "(join [[3 5 6] [8 4 4] [4 1 3 0 9]]) -> [3 5 6 8 4 4 4 1 3 0 9]", "(join []) -> []", "(join [[6 3 5 5 9]]) -> [6 3 5 5 9]", "(join [[] [8 8 7 9 3] [7 4 9 7 0] [3 6 5 1] []]) -> [8 8 7 9 3 7 4 9 7 0 3 6 5 1]", "(join [[7 0 0 9] [] [8 5 4 1 8] [7 3 1 2 1]]) -> [7 0 0 9 8 5 4 1 8 7 3 1 2 1]", "(join [[] [3 8 8] [9 2 2 4 0] [3 5 5 1]]) -> [3 8 8 9 2 2 4 0 3 5 5 1]", "(join [[9 7 4 8] [6 3 6 8 5] [4 2 2] [8 4 8 4 8]]) -> [9 7 4 8 6 3 6 8 5 4 2 2 8 4 8 4 8]", "(join [[] [2] [7]]) -> [2 7]", "(join [[6 4 7 8] [5 2 8 8 4] [8 6 0] [6 8 0] [2]]) -> [6 4 7 8 5 2 8 8 4 8 6 0 6 8 0 2]", "(join [[4 4 3 7 9] [4 5 1 9 9] [3]]) -> [4 4 3 7 9 4 5 1 9 9 3]", "(join [[2] [] [1 4] [8 3]]) -> [2 1 4 8 3]", "(join [[1] [8 0] [3 5] [3 7 3] [5 1 6 8 0]]) -> [1 8 0 3 5 3 7 3 5 1 6 8 0]", "(join []) -> []", "(join []) -> []", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.593184}
{"examples": ["(join []) -> []", "(join [[1 4 6 6] [5 5 9] [5 5]]) -> [1 4 6 6 5 5 9 5 5]", "(join [[] [5]]) -> [5]", "(join [[7 5 9 9 9] [6 1 5 5] [6 7]]) -> [7 5 9 9 9 6 1 5 5 6 7]", "(join [[3 1 6 6] [8 8 5 0] [7 1 0]]) -> [3 1 6 6 8 8 5 0 7 1 0]", "(join [[6 8 2 3] [6 5 0 9] [2 7 9 3 7]]) -> [6 8 2 3 6 5 0 9 2 7 9 3 7]", "(join []) -> []", "(join [[8 3 9 0] [] [7 7 4 8] [] [1 3 7 9]]) -> [8 3 9 0 7 7 4 8 1 3 7 9]", "(join [[9 8] [1 2 4 5 7] [4 8 5 5]]) -> [9 8 1 2 4 5 7 4 8 5 5]", "(join [[0 0]]) -> [0 0]", "(join []) -> []", "(join [[]]) -> []", "(join [[0] [7 4 7 0 0] [4 2 5 1 2] [2 4 6 8] [8 9 9]]) -> [0 7 4 7 0 0 4 2 5 1 2 2 4 6 8 8 9 9]", "(join [[0 6 2 9 8]]) -> [0 6 2 9 8]", "(join [[3] [] [4]]) -> [3 4]", "(join [[] [] [0] [] [5]]) -> [0 5]", "(join []) -> []", "(join [[5 2] [2 8 5 7] [] []]) -> [5 2 2 8 5 7]", "(join [[] [1] [2 5 4 5 6] []]) -> [1 2 5 4 5 6]", "(join [[5] [1 8 5] [] [5 3 0] [2]]) -> [5 1 8 5 5 3 0 2]", "(join [[5 8 0 4] [7 4 0] [7 7 7 6] [1 8 5 7 5]]) -> [5 8 0 4 7 4 0 7 7 7 6 1 8 5 7 5]", "(join [[7 1 9 4 3] [8 1] [2 3 3] [7]]) -> [7 1 9 4 3 8 1 2 3 3 7]", "(join []) -> []", "(join [[5 5 6 2] [8 5 3 8 8] [8]]) -> [5 5 6 2 8 5 3 8 8 8]", "(join [[4 9] [2] [] [3]]) -> [4 9 2 3]", "(join []) -> []", "(join [[3 6 6] [1] [8 1 8] [2 8 8]]) -> [3 6 6 1 8 1 8 2 8 8]", "(join [[7 3 9 3] [7 7 1 9 2] []]) -> [7 3 9 3 7 7 1 9 2]", "(join [[1 8] [3 0] [1 9 2 7 6]]) -> [1 8 3 0 1 9 2 7 6]", "(join [[6 2 3 2] [3] [0 8 6 8] [3]]) -> [6 2 3 2 3 0 8 6 8 3]", "(join [[9 0 8 7] [2 3]]) -> [9 0 8 7 2 3]", "(join []) -> []", "(join [[5] [7 0] [] [0 9]]) -> [5 7 0 0 9]", "(join [[] [1 1 8 4 3]]) -> [1 1 8 4 3]", "(join [[7] [6 3 5] [1 6]]) -> [7 6 3 5 1 6]", "(join [[5]]) -> [5]", "(join [[3 2 8 5] [6 7 5 4 9] [8] [2 4 9 3 5]]) -> [3 2 8 5 6 7 5 4 9 8 2 4 9 3 5]", "(join [[1 9] [5 8 7 7 2] [0 8 6] [8 3 2 8 2]]) -> [1 9 5 8 7 7 2 0 8 6 8 3 2 8 2]", "(join [[2 2] [3 1 2 9]]) -> [2 2 3 1 2 9]", "(join [[1 0 1 7 6] [6] [] [0 8 0 2]]) -> [1 0 1 7 6 6 0 8 0 2]", "(join [[] [] [3 2 1]]) -> [3 2 1]", "(join [[] [] [1 4 2 7] [1]]) -> [1 4 2 7 1]", "(join [[3 5 6 4] []]) -> [3 5 6 4]", "(join [[1 0] [5 5 3 5 6] [3 3 3 6] [4 0 2] [9 1 2 9 1]]) -> [1 0 5 5 3 5 6 3 3 3 6 4 0 2 9 1 2 9 1]", "(join []) -> []", "(join []) -> []", "(join [[9 6 3 6 5]]) -> [9 6 3 6 5]", "(join [[3 5 4] [3 6 8 7 1]]) -> [3 5 4 3 6 8 7 1]", "(join [[2 9 4 5]]) -> [2 9 4 5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.566298}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[8 7 6 9 0] [4] [] [4 2 5] [3 2]]) -> [8 7 6 9 0 4 4 2 5 3 2]", "(join []) -> []", "(join [[9 2 5] [3 7 0] [9] [5 0 0 7] [5 7 2 6 7]]) -> [9 2 5 3 7 0 9 5 0 0 7 5 7 2 6 7]", "(join [[5 6 8 6 8] [0 3 1 6]]) -> [5 6 8 6 8 0 3 1 6]", "(join []) -> []", "(join [[9 7] [0 6 6 6] [] [9 2] [3]]) -> [9 7 0 6 6 6 9 2 3]", "(join []) -> []", "(join [[2]]) -> [2]", "(join [[5 2 9 3] [6 5 7 9 1] [0 8]]) -> [5 2 9 3 6 5 7 9 1 0 8]", "(join [[8 7] []]) -> [8 7]", "(join [[1 2 7 4]]) -> [1 2 7 4]", "(join [[6 3 9] [7] [7 5 1 6]]) -> [6 3 9 7 7 5 1 6]", "(join [[7] [0 5] []]) -> [7 0 5]", "(join [[1] [2 1] [4 6 6] []]) -> [1 2 1 4 6 6]", "(join [[7 4 5 3] [] [5 8] [5] [5 6 1]]) -> [7 4 5 3 5 8 5 5 6 1]", "(join [[6]]) -> [6]", "(join [[0 1 7] [5] [2 5 6 5] [4 2 5 4 8]]) -> [0 1 7 5 2 5 6 5 4 2 5 4 8]", "(join [[6 2 0]]) -> [6 2 0]", "(join [[] [6 1]]) -> [6 1]", "(join [[3 4 9] [3 4 5] [7 9 9] [4 3] [5]]) -> [3 4 9 3 4 5 7 9 9 4 3 5]", "(join [[7 4 4 1] [5 4 9 9 6]]) -> [7 4 4 1 5 4 9 9 6]", "(join [[2 5 7 1]]) -> [2 5 7 1]", "(join [[0] [4 3] [2 9 6 1 6] [9 7 4 4 4] [3 7 8]]) -> [0 4 3 2 9 6 1 6 9 7 4 4 4 3 7 8]", "(join []) -> []", "(join [[8 0] [6] [8 4 2 1 0] []]) -> [8 0 6 8 4 2 1 0]", "(join [[6] [9 4 4 8 8] [4 6 8] [0] [9 9 6]]) -> [6 9 4 4 8 8 4 6 8 0 9 9 6]", "(join [[9] [] [7] [5 9 6] [1 3 1 3]]) -> [9 7 5 9 6 1 3 1 3]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[8 1] []]) -> [8 1]", "(join [[0 7 0 1 0] [5 7 0] [] [7 2] [6 6 8 2]]) -> [0 7 0 1 0 5 7 0 7 2 6 6 8 2]", "(join [[2 6 6 0 7] [6 6 3 8 7] [2 1 1] [7]]) -> [2 6 6 0 7 6 6 3 8 7 2 1 1 7]", "(join []) -> []", "(join [[9 2 0 6 6]]) -> [9 2 0 6 6]", "(join [[6 8 2 8 7] [4 6]]) -> [6 8 2 8 7 4 6]", "(join [[5 1 5] [7]]) -> [5 1 5 7]", "(join [[6 3 1 4 8] [8 0]]) -> [6 3 1 4 8 8 0]", "(join [[8 7 8] [9 9 0 2] [5]]) -> [8 7 8 9 9 0 2 5]", "(join []) -> []", "(join [[1 5 7 1] [8 7 4] [4 8 4 9] [1 2 2 0 4] [0 0]]) -> [1 5 7 1 8 7 4 4 8 4 9 1 2 2 0 4 0 0]", "(join [[6 4 1 4] [3 7 2] [4 8 5 3 9] [3 7] [4 9]]) -> [6 4 1 4 3 7 2 4 8 5 3 9 3 7 4 9]", "(join [[0 5 5 7] [0]]) -> [0 5 5 7 0]", "(join [[6 2 7 2] [] [7]]) -> [6 2 7 2 7]", "(join [[5 5 1 3 8] [] [9 8] [9 3 5] [0 3 4 1]]) -> [5 5 1 3 8 9 8 9 3 5 0 3 4 1]", "(join [[] [5] [1]]) -> [5 1]", "(join [[1] [2 3 8 8 0]]) -> [1 2 3 8 8 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.635576}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[9] [2 1 3] [6 4 4 6] [7 2 5 8]]) -> [9 2 1 3 6 4 4 6 7 2 5 8]", "(join []) -> []", "(join [[3 9] [0 3 4 1]]) -> [3 9 0 3 4 1]", "(join [[8] [8] [1]]) -> [8 8 1]", "(join []) -> []", "(join [[3 3 6 6 8] [7] [] [4 1 4 1]]) -> [3 3 6 6 8 7 4 1 4 1]", "(join [[2 6 9] [7 5 5 9]]) -> [2 6 9 7 5 5 9]", "(join [[6 7] [8 4]]) -> [6 7 8 4]", "(join [[2]]) -> [2]", "(join [[5 6 6] [7 6 9] [4 6 1 8 6]]) -> [5 6 6 7 6 9 4 6 1 8 6]", "(join []) -> []", "(join [[6 8 3 9 7] [8] [7 4 2 6]]) -> [6 8 3 9 7 8 7 4 2 6]", "(join [[3] [2 0 5 6 0] [6 7 1]]) -> [3 2 0 5 6 0 6 7 1]", "(join [[5] [0 6 0 2 1]]) -> [5 0 6 0 2 1]", "(join [[8 8 7] [] [9 1 3] [9 4 3 8 0]]) -> [8 8 7 9 1 3 9 4 3 8 0]", "(join [[3 0 6 8] [4 6 5 0] [9 8 2]]) -> [3 0 6 8 4 6 5 0 9 8 2]", "(join [[3] [8 4 6 8 7] [8 1 8 7 2] [5 6 4 0] []]) -> [3 8 4 6 8 7 8 1 8 7 2 5 6 4 0]", "(join [[6 1 2 9] [6] [2 9 6 0] [6]]) -> [6 1 2 9 6 2 9 6 0 6]", "(join [[]]) -> []", "(join [[6 2 4 1 9] [7 1]]) -> [6 2 4 1 9 7 1]", "(join [[0 2 7] [1] [7] [2 6] [3 4 3 0]]) -> [0 2 7 1 7 2 6 3 4 3 0]", "(join [[0]]) -> [0]", "(join [[3 9 8 8]]) -> [3 9 8 8]", "(join [[] [] [2 1 1] [6 6]]) -> [2 1 1 6 6]", "(join [[7]]) -> [7]", "(join [[]]) -> []", "(join [[0 3 2 1] [6 0 7 2 3] [7 3 7 0 8] [1] []]) -> [0 3 2 1 6 0 7 2 3 7 3 7 0 8 1]", "(join [[3] [0 0 7 7 9]]) -> [3 0 0 7 7 9]", "(join [[7 0 4 4]]) -> [7 0 4 4]", "(join [[7 4 8]]) -> [7 4 8]", "(join [[5 0 0 5 5] [3 8 1 1]]) -> [5 0 0 5 5 3 8 1 1]", "(join [[9] []]) -> [9]", "(join [[6 3 6 3] [] [5] [0 7]]) -> [6 3 6 3 5 0 7]", "(join []) -> []", "(join [[3 1 7 4] [5 7 5 5] [6]]) -> [3 1 7 4 5 7 5 5 6]", "(join [[0] [] []]) -> [0]", "(join [[6] [1] [6] [0 9 3 7] [1 7]]) -> [6 1 6 0 9 3 7 1 7]", "(join [[] [7] []]) -> [7]", "(join [[2 4]]) -> [2 4]", "(join [[9 2 7 2]]) -> [9 2 7 2]", "(join [[1 7 8] [] []]) -> [1 7 8]", "(join [[7 9 6 6 3] [] [1 1] [1 0 7] []]) -> [7 9 6 6 3 1 1 1 0 7]", "(join []) -> []", "(join [[2 6 4 2 1] [5 5 9] [] [6 7 5 0 3]]) -> [2 6 4 2 1 5 5 9 6 7 5 0 3]", "(join [[0 8 2 6 3] [9 9 8] [6 6 1 2] [6]]) -> [0 8 2 6 3 9 9 8 6 6 1 2 6]", "(join [[3 9 6 8 3] [4 2 7] [1 0 3] [7 6] []]) -> [3 9 6 8 3 4 2 7 1 0 3 7 6]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.644596}
{"examples": ["(join []) -> []", "(join [[1] [7]]) -> [1 7]", "(join [[] []]) -> []", "(join [[7 5 6 2 2] [4 1] [1 8 1]]) -> [7 5 6 2 2 4 1 1 8 1]", "(join [[0] [2 1 8] [7 4 6 8] [7 3]]) -> [0 2 1 8 7 4 6 8 7 3]", "(join [[6 9] [4 0 8 1]]) -> [6 9 4 0 8 1]", "(join [[0 2 5 9] []]) -> [0 2 5 9]", "(join [[7]]) -> [7]", "(join [[0 8 8 6 7] []]) -> [0 8 8 6 7]", "(join [[4] [2 5] [3 8 3 5]]) -> [4 2 5 3 8 3 5]", "(join [[9 9] [4 5 7 4 4] [] [] [2 5]]) -> [9 9 4 5 7 4 4 2 5]", "(join [[5 0 3 6 7] [9 6 8 8 0] [7 8]]) -> [5 0 3 6 7 9 6 8 8 0 7 8]", "(join [[3] [] [9 1 3 9]]) -> [3 9 1 3 9]", "(join [[] [0 5 9] []]) -> [0 5 9]", "(join [[2 1 3] [4 6 7 2 3] [6 0 0 2]]) -> [2 1 3 4 6 7 2 3 6 0 0 2]", "(join [[8 6 8]]) -> [8 6 8]", "(join [[8 1 0 7] []]) -> [8 1 0 7]", "(join [[4 4]]) -> [4 4]", "(join [[9 3 5 0]]) -> [9 3 5 0]", "(join [[4 2 4 1] [0 8]]) -> [4 2 4 1 0 8]", "(join []) -> []", "(join [[1 4] [8 1 9 1 4] [3 3 4 4] []]) -> [1 4 8 1 9 1 4 3 3 4 4]", "(join [[0 5 6 8] [5] [4 8]]) -> [0 5 6 8 5 4 8]", "(join [[3 3 7] [2 8 3] [0 7 8 9] [5 6 6 4]]) -> [3 3 7 2 8 3 0 7 8 9 5 6 6 4]", "(join [[3] [8 7] [8 2 3 5] [5 3 0 7] [8 1]]) -> [3 8 7 8 2 3 5 5 3 0 7 8 1]", "(join [[8 4 3] [] [6 0 1 4 6] [] [6]]) -> [8 4 3 6 0 1 4 6 6]", "(join [[3 1 3 9 0] [] [6 1 8 0 7]]) -> [3 1 3 9 0 6 1 8 0 7]", "(join [[1]]) -> [1]", "(join [[5 4] [8 3]]) -> [5 4 8 3]", "(join [[]]) -> []", "(join [[8] [1 3 9 5] [2 6 0] [1]]) -> [8 1 3 9 5 2 6 0 1]", "(join [[5 5 2 8 4] [1]]) -> [5 5 2 8 4 1]", "(join []) -> []", "(join [[6 7] [8 4] [0 2] [9 2 6 4 6]]) -> [6 7 8 4 0 2 9 2 6 4 6]", "(join [[4 8 6 4] [9 5 0] [] [6 7 7]]) -> [4 8 6 4 9 5 0 6 7 7]", "(join [[7 1 0 7 0] [8 3 4 4 3] [] []]) -> [7 1 0 7 0 8 3 4 4 3]", "(join [[] [0 7 2 8] [0 4 1 1 9] []]) -> [0 7 2 8 0 4 1 1 9]", "(join [[8 4] [7 6] [3 0 0] [3 7 9 0 6]]) -> [8 4 7 6 3 0 0 3 7 9 0 6]", "(join [[0 6 6 6] [2 0 4 5 2] [1 1 4 9 9] [9 3 3 6]]) -> [0 6 6 6 2 0 4 5 2 1 1 4 9 9 9 3 3 6]", "(join [[5 7 3 5] [4 7]]) -> [5 7 3 5 4 7]", "(join []) -> []", "(join [[9 6 6 9 6] [2] [8]]) -> [9 6 6 9 6 2 8]", "(join [[4] [9 8 2 9 1] [] [9 0 1 0 3] [1 6]]) -> [4 9 8 2 9 1 9 0 1 0 3 1 6]", "(join [[2 0 4 8] [] [7 9 7 6] [8 1 6 3]]) -> [2 0 4 8 7 9 7 6 8 1 6 3]", "(join [[0]]) -> [0]", "(join [[1 6 7 1]]) -> [1 6 7 1]", "(join []) -> []", "(join [[5] [8 9 4] [1 7 2 7]]) -> [5 8 9 4 1 7 2 7]", "(join [[6 5 1 5] [4 7 4 2]]) -> [6 5 1 5 4 7 4 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.527469}
{"examples": ["(join []) -> []", "(join [[9 0 0 9 9] [0 0 4 6] [1] [] []]) -> [9 0 0 9 9 0 0 4 6 1]", "(join [[7 3 4 7 7] [6] [] [6 5 1]]) -> [7 3 4 7 7 6 6 5 1]", "(join [[3 1] [0 4 7 1 8] [4 3 0 7]]) -> [3 1 0 4 7 1 8 4 3 0 7]", "(join [[6 9 4]]) -> [6 9 4]", "(join [[2] [7 2 1] [6 8 3] [3 3] [9 1 2 2 0]]) -> [2 7 2 1 6 8 3 3 3 9 1 2 2 0]", "(join [[0 1] []]) -> [0 1]", "(join [[3 8 6] [1 5 4 3 6]]) -> [3 8 6 1 5 4 3 6]", "(join [[2] [] [9 2 8]]) -> [2 9 2 8]", "(join [[2 7 6]]) -> [2 7 6]", "(join [[] [5 8 6] [4 8]]) -> [5 8 6 4 8]", "(join []) -> []", "(join [[] [5 2 5 4 4] []]) -> [5 2 5 4 4]", "(join [[1 8 6 8 4] [3 8 8 1] [5 5 3] [6 1 0 3 0] [3]]) -> [1 8 6 8 4 3 8 8 1 5 5 3 6 1 0 3 0 3]", "(join [[] [3 0 8 2] [4] [8 0 6 4] [5 5 5 0 7]]) -> [3 0 8 2 4 8 0 6 4 5 5 5 0 7]", "(join [[0 1 8]]) -> [0 1 8]", "(join [[4 7 2 1] [] [7 2 5] [] [6 3]]) -> [4 7 2 1 7 2 5 6 3]", "(join [[] [] [9 4 7 2] [7 8 4 2] [9 4 4 2 9]]) -> [9 4 7 2 7 8 4 2 9 4 4 2 9]", "(join [[4] [2]]) -> [4 2]", "(join [[] [7] [] [7 8 5] [9 4 6]]) -> [7 7 8 5 9 4 6]", "(join [[9 1 6] []]) -> [9 1 6]", "(join [[1] [0 0 4 3 0] [6 3 5] [6 6 7 1]]) -> [1 0 0 4 3 0 6 3 5 6 6 7 1]", "(join [[4 8 2 8] [6] [7 7]]) -> [4 8 2 8 6 7 7]", "(join [[] [5 8 1 4] [7 6] [7 5 3]]) -> [5 8 1 4 7 6 7 5 3]", "(join [[1] [0 8 4] [1 5 5 4 2] [4] [9 2]]) -> [1 0 8 4 1 5 5 4 2 4 9 2]", "(join [[5 8 5] []]) -> [5 8 5]", "(join [[8 6 1 6] [5] [2 2 6] [2 2 1 8 0]]) -> [8 6 1 6 5 2 2 6 2 2 1 8 0]", "(join [[] [] [9 5 6 2] [8 6 6]]) -> [9 5 6 2 8 6 6]", "(join [[3 8 4 1 7] [4 6 8] [4 6 0 9] [] [6 7 1 1 7]]) -> [3 8 4 1 7 4 6 8 4 6 0 9 6 7 1 1 7]", "(join [[3 7 3 3 1] [5 0 1 7]]) -> [3 7 3 3 1 5 0 1 7]", "(join [[0 7 3 7 6]]) -> [0 7 3 7 6]", "(join [[4 1 6 8 4] [1] [2 6 4] [5 8] []]) -> [4 1 6 8 4 1 2 6 4 5 8]", "(join [[0 3 2 4] [0 7 6 4]]) -> [0 3 2 4 0 7 6 4]", "(join [[2 7 4 0 6] [] [5 7 7] [0 3 6 1] [3 6 7 1 2]]) -> [2 7 4 0 6 5 7 7 0 3 6 1 3 6 7 1 2]", "(join []) -> []", "(join [[4 0 6 9]]) -> [4 0 6 9]", "(join [[8] [3 8] [5]]) -> [8 3 8 5]", "(join [[9 2 3 8] [4] [] [6] [7 9 4]]) -> [9 2 3 8 4 6 7 9 4]", "(join [[0 3 6] [1 1 9 8] [] [0 3 8 5]]) -> [0 3 6 1 1 9 8 0 3 8 5]", "(join [[2 7 2] [7 3 4 3] [6 9 7 8]]) -> [2 7 2 7 3 4 3 6 9 7 8]", "(join [[5 1 4 2]]) -> [5 1 4 2]", "(join []) -> []", "(join [[4 5] [9 3 1] [5] [6 5]]) -> [4 5 9 3 1 5 6 5]", "(join [[] [6 8] [0 0 6 7 8] [9 7 6]]) -> [6 8 0 0 6 7 8 9 7 6]", "(join [[9 6 6]]) -> [9 6 6]", "(join [[8 1 8]]) -> [8 1 8]", "(join [[5 0 6] [3 5 8 6]]) -> [5 0 6 3 5 8 6]", "(join [[1 9 4] [1] [4 8] [6 7 7 9]]) -> [1 9 4 1 4 8 6 7 7 9]", "(join [[2 1] [6]]) -> [2 1 6]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.701664}
{"examples": ["(join []) -> []", "(join [[8 4 8 9]]) -> [8 4 8 9]", "(join [[4 5] [1 7 9] [6 0 4 3 6] [5 7 4] [9 9]]) -> [4 5 1 7 9 6 0 4 3 6 5 7 4 9 9]", "(join [[6 3]]) -> [6 3]", "(join [[7 0 4 3 9] [1 1 6] [] [1]]) -> [7 0 4 3 9 1 1 6 1]", "(join [[9 2 6] [7 0 3] [0] [5 9 7 6]]) -> [9 2 6 7 0 3 0 5 9 7 6]", "(join [[9 2] [2 2 6] [6]]) -> [9 2 2 2 6 6]", "(join [[7] [9 6 7 5]]) -> [7 9 6 7 5]", "(join [[5] [6]]) -> [5 6]", "(join [[7 3] [5 0 3 7 7] [2 2 2] [7 7 0 7 6] [0 8 2]]) -> [7 3 5 0 3 7 7 2 2 2 7 7 0 7 6 0 8 2]", "(join [[3 2 8] [1 4] [6 6 7 7] [] []]) -> [3 2 8 1 4 6 6 7 7]", "(join [[] [3 5 8 8]]) -> [3 5 8 8]", "(join [[0 7 5 2 7] [8 3 9 2 9] [7 8] [5 5] [8 4 6]]) -> [0 7 5 2 7 8 3 9 2 9 7 8 5 5 8 4 6]", "(join [[1] [7 4 0] [] [5 1 8 6]]) -> [1 7 4 0 5 1 8 6]", "(join []) -> []", "(join []) -> []", "(join [[2 6]]) -> [2 6]", "(join [[3 2 9] [7]]) -> [3 2 9 7]", "(join [[7 0 1]]) -> [7 0 1]", "(join [[0 0] [4 8 9 6]]) -> [0 0 4 8 9 6]", "(join [[9 5 1 0] [] [1 5 8 9] [] [5]]) -> [9 5 1 0 1 5 8 9 5]", "(join [[7]]) -> [7]", "(join [[2] [2 8]]) -> [2 2 8]", "(join [[7 1 0] [5 7 9 7]]) -> [7 1 0 5 7 9 7]", "(join [[]]) -> []", "(join []) -> []", "(join [[5]]) -> [5]", "(join []) -> []", "(join [[] [2 6] [0]]) -> [2 6 0]", "(join [[4 8 2 0] [6 0]]) -> [4 8 2 0 6 0]", "(join [[1 2] [] [6 1 2 6]]) -> [1 2 6 1 2 6]", "(join [[8 1 7 2] [] [1] [4 8 2 7] [0 2 5 5]]) -> [8 1 7 2 1 4 8 2 7 0 2 5 5]", "(join [[8 4 9 7 8] [0] [4 2 0 9] [8 1 5 8] [0 4]]) -> [8 4 9 7 8 0 4 2 0 9 8 1 5 8 0 4]", "(join [[6 8]]) -> [6 8]", "(join []) -> []", "(join [[4 1 0 9] [1 6] [3 1 2]]) -> [4 1 0 9 1 6 3 1 2]", "(join [[0] [8 1 5 9 5] [0 2 0 0] [4 9 1 6 5] []]) -> [0 8 1 5 9 5 0 2 0 0 4 9 1 6 5]", "(join [[8 3 7] [9 2 7 8 5]]) -> [8 3 7 9 2 7 8 5]", "(join [[8 1 6 1]]) -> [8 1 6 1]", "(join [[8 6] [8]]) -> [8 6 8]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[]]) -> []", "(join [[5 0 5 2] [7 8 9 3 3] [2 2 8] [7 9]]) -> [5 0 5 2 7 8 9 3 3 2 2 8 7 9]", "(join [[8 7 2] [5 5 2 8 8] [1 5 8 8 2] [2] [2]]) -> [8 7 2 5 5 2 8 8 1 5 8 8 2 2 2]", "(join [[5 8 3 3] [6 8] [] [8 3 0] [6 0 5 8]]) -> [5 8 3 3 6 8 8 3 0 6 0 5 8]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.977029}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[8 1 4 9] [6 4 7 4 7] [3 2] [0 6]]) -> [8 1 4 9 6 4 7 4 7 3 2 0 6]", "(join [[0]]) -> [0]", "(join [[] [7]]) -> [7]", "(join [[8 8 0 3] [0 2] [9 8 1] [2 3 6 6] []]) -> [8 8 0 3 0 2 9 8 1 2 3 6 6]", "(join [[6 9 8] [8 8 0 1] [9]]) -> [6 9 8 8 8 0 1 9]", "(join []) -> []", "(join [[6 2 9 3]]) -> [6 2 9 3]", "(join [[8] [0]]) -> [8 0]", "(join [[9] [7 6 1] [5 4 2] [5 0 6 4 9]]) -> [9 7 6 1 5 4 2 5 0 6 4 9]", "(join []) -> []", "(join [[1] [2 6] [8 7] [0 4]]) -> [1 2 6 8 7 0 4]", "(join []) -> []", "(join [[1 2] [2 8]]) -> [1 2 2 8]", "(join [[4 6] [8 5 2 4 3]]) -> [4 6 8 5 2 4 3]", "(join [[6 2 0 0] [8 6 1 5] [5 5] [2 4 3 7 2]]) -> [6 2 0 0 8 6 1 5 5 5 2 4 3 7 2]", "(join [[2 5 6 5 2] [0 7 9 0 2] [] [9 7 9 6 6] [1 0]]) -> [2 5 6 5 2 0 7 9 0 2 9 7 9 6 6 1 0]", "(join [[8 6 5] [0 6 3]]) -> [8 6 5 0 6 3]", "(join [[2 1 7 9 2] [3 5 3 3 8] [3 4 1 3 5] [] []]) -> [2 1 7 9 2 3 5 3 3 8 3 4 1 3 5]", "(join [[] [3 6]]) -> [3 6]", "(join []) -> []", "(join [[9 9 7] [5 4 8 0 2] [6 1 5 6 0] [1]]) -> [9 9 7 5 4 8 0 2 6 1 5 6 0 1]", "(join [[6 0 8 1 0] [3 9 3]]) -> [6 0 8 1 0 3 9 3]", "(join [[9]]) -> [9]", "(join [[] [6] [] [7 0] [1 4 1]]) -> [6 7 0 1 4 1]", "(join [[3 5] [2 1] [2 2 2 2] [2 3 5 1] [1 1 7]]) -> [3 5 2 1 2 2 2 2 2 3 5 1 1 1 7]", "(join []) -> []", "(join [[3 5] [9 2 5 9] [9 1 0 9] [9 5] [9 7 6 0 1]]) -> [3 5 9 2 5 9 9 1 0 9 9 5 9 7 6 0 1]", "(join [[6] [6 2 3 0] [8 3 4 0]]) -> [6 6 2 3 0 8 3 4 0]", "(join []) -> []", "(join [[] [0]]) -> [0]", "(join [[]]) -> []", "(join [[0 7] [9 7 9 3] [5 4 6 4]]) -> [0 7 9 7 9 3 5 4 6 4]", "(join [[5 2] [3 3 6 8 7] [6 8 9]]) -> [5 2 3 3 6 8 7 6 8 9]", "(join []) -> []", "(join [[9 9 3] [] [] [9 8 0 5]]) -> [9 9 3 9 8 0 5]", "(join [[4]]) -> [4]", "(join []) -> []", "(join [[9] [9 0 8] [5] [7] [9 9]]) -> [9 9 0 8 5 7 9 9]", "(join [[9 4 4] [1 2 9] [9 5] [5 0 7]]) -> [9 4 4 1 2 9 9 5 5 0 7]", "(join [[6] [] [0 7 1]]) -> [6 0 7 1]", "(join [[8 0 7 2] [8 1 5 5 4]]) -> [8 0 7 2 8 1 5 5 4]", "(join [[7 4] [4] [5]]) -> [7 4 4 5]", "(join [[6 1 2] []]) -> [6 1 2]", "(join [[8] [0 8 5 0 0] [7 7 8 1 7] [9 4 8 4 5]]) -> [8 0 8 5 0 0 7 7 8 1 7 9 4 8 4 5]", "(join [[] [1 3] [9 8 5]]) -> [1 3 9 8 5]", "(join [[6 0] [0 9 3 9 6]]) -> [6 0 0 9 3 9 6]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.093125}
{"examples": ["(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[0] [3 0 8 9] [6 0 5] [] [6 5 9 1]]) -> [0 3 0 8 9 6 0 5 6 5 9 1]", "(join [[0 9] [1 2 5]]) -> [0 9 1 2 5]", "(join [[4 8 9] [6 2 8 8] [6 0] [2 9]]) -> [4 8 9 6 2 8 8 6 0 2 9]", "(join [[] [5 7 8 0] [1 6 9 1 0] [] [7 2 8 2]]) -> [5 7 8 0 1 6 9 1 0 7 2 8 2]", "(join [[7 4 9 5] [5 2] [1 2 0 9]]) -> [7 4 9 5 5 2 1 2 0 9]", "(join [[1 7 2] [2 2 8] [1] [] []]) -> [1 7 2 2 2 8 1]", "(join [[3]]) -> [3]", "(join [[2 2 2 9] [7 4 8] [1 3 9 6] [6 8 8 7 5]]) -> [2 2 2 9 7 4 8 1 3 9 6 6 8 8 7 5]", "(join [[0 7 1] [2]]) -> [0 7 1 2]", "(join [[] [3] [3 3 7 1 6] [1 8 5 5 4]]) -> [3 3 3 7 1 6 1 8 5 5 4]", "(join [[8] [1 7 5 0 1]]) -> [8 1 7 5 0 1]", "(join [[6 6 6 8] [6] [9 4 6 3 1]]) -> [6 6 6 8 6 9 4 6 3 1]", "(join [[] [9 0 0 1] [1 5 8]]) -> [9 0 0 1 1 5 8]", "(join [[] [9 0 7 3 4] [2 6 7] [7 8 0 8 3]]) -> [9 0 7 3 4 2 6 7 7 8 0 8 3]", "(join []) -> []", "(join []) -> []", "(join [[6] [8 6 7 9 8] [2 8 1] [6 5 9 8 6]]) -> [6 8 6 7 9 8 2 8 1 6 5 9 8 6]", "(join [[7 8 4] [6 9 7 5]]) -> [7 8 4 6 9 7 5]", "(join [[] [0 7] []]) -> [0 7]", "(join [[8]]) -> [8]", "(join [[8 1]]) -> [8 1]", "(join []) -> []", "(join [[6 6 2] [4] [8 6]]) -> [6 6 2 4 8 6]", "(join [[] [8 1] [4 8 4 5] [7 2 5 0] [3]]) -> [8 1 4 8 4 5 7 2 5 0 3]", "(join [[] [] [4 6 6] [3 2 4] [7 4 1]]) -> [4 6 6 3 2 4 7 4 1]", "(join [[2 0 4]]) -> [2 0 4]", "(join [[] [1 1 1 4 6] [4 9 5] [6] []]) -> [1 1 1 4 6 4 9 5 6]", "(join []) -> []", "(join [[4 0] [5 4 8] [] [1 7] [3]]) -> [4 0 5 4 8 1 7 3]", "(join [[6 6] [] [] [9 8 0]]) -> [6 6 9 8 0]", "(join [[4] [7 4 1] [8]]) -> [4 7 4 1 8]", "(join [[2 8 9 4] [9 8] [4 7]]) -> [2 8 9 4 9 8 4 7]", "(join [[]]) -> []", "(join [[1 3 3 3 0] [0 5 2 1 0] [2 4 4 4 1] [0 6 7 2]]) -> [1 3 3 3 0 0 5 2 1 0 2 4 4 4 1 0 6 7 2]", "(join [[2] [9 4] [5] [3] [0 9]]) -> [2 9 4 5 3 0 9]", "(join [[5 7] [6 6 5 3 3] [5]]) -> [5 7 6 6 5 3 3 5]", "(join []) -> []", "(join []) -> []", "(join [[6] [6] [9 3] [7 6 4 4 3]]) -> [6 6 9 3 7 6 4 4 3]", "(join [[3 6 5 9]]) -> [3 6 5 9]", "(join [[7 2 4] [3 1 6 5 5]]) -> [7 2 4 3 1 6 5 5]", "(join [[7 5 5 4 0] [4 4 7 5]]) -> [7 5 5 4 0 4 4 7 5]", "(join [[1 8 7 2 5] [1 3]]) -> [1 8 7 2 5 1 3]", "(join [[3 0]]) -> [3 0]", "(join []) -> []", "(join [[9] [1 9 9] [3 0] [3 9 7 2 3]]) -> [9 1 9 9 3 0 3 9 7 2 3]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.140301}
{"examples": ["(join []) -> []", "(join [[8 9 3 6] [8] [4 8 4 1 9] [7 8 1] [9 4 6 1 7]]) -> [8 9 3 6 8 4 8 4 1 9 7 8 1 9 4 6 1 7]", "(join [[] [6 1 3 0 9] [3 5 5 2] [7 3 8 6 8] [5 5 3 2 4]]) -> [6 1 3 0 9 3 5 5 2 7 3 8 6 8 5 5 3 2 4]", "(join [[] [3 6]]) -> [3 6]", "(join []) -> []", "(join [[7 7 0] [1 8 9 9 0] [4 4 0 9 0]]) -> [7 7 0 1 8 9 9 0 4 4 0 9 0]", "(join [[9 4 1] [4 5 2 6 9]]) -> [9 4 1 4 5 2 6 9]", "(join [[7 5] [7 9 8 6] [4 8 8 5 7] [5]]) -> [7 5 7 9 8 6 4 8 8 5 7 5]", "(join [[] [] [2] [9 1 8 3] [2 2 2 1 5]]) -> [2 9 1 8 3 2 2 2 1 5]", "(join [[0]]) -> [0]", "(join [[4] [0]]) -> [4 0]", "(join [[3 1 9] []]) -> [3 1 9]", "(join [[2 9 1] [5 6 5 2]]) -> [2 9 1 5 6 5 2]", "(join []) -> []", "(join [[] [9 3 3 7] [5 2 5 2]]) -> [9 3 3 7 5 2 5 2]", "(join [[1 3] [9]]) -> [1 3 9]", "(join [[5 2] [5 8 2] [7 9 3 0]]) -> [5 2 5 8 2 7 9 3 0]", "(join []) -> []", "(join [[2 3 2] [] [0 8 5 3 8] [3 7] [3]]) -> [2 3 2 0 8 5 3 8 3 7 3]", "(join [[8 6 3 4]]) -> [8 6 3 4]", "(join []) -> []", "(join [[5 9] [0 4 7] [2 0 0] [5 7 6 2]]) -> [5 9 0 4 7 2 0 0 5 7 6 2]", "(join [[0]]) -> [0]", "(join []) -> []", "(join [[4 6 5 7 9]]) -> [4 6 5 7 9]", "(join [[9]]) -> [9]", "(join []) -> []", "(join [[6 6 7 3 6] [5 0 9 8] [0 6 7 8]]) -> [6 6 7 3 6 5 0 9 8 0 6 7 8]", "(join [[3 8 0] [4 3 5 4] [3 1 7 2 1]]) -> [3 8 0 4 3 5 4 3 1 7 2 1]", "(join [[6 2 4 7 6] [5 4]]) -> [6 2 4 7 6 5 4]", "(join [[8 1 4 9] [5] [7 8] [3 3 5]]) -> [8 1 4 9 5 7 8 3 3 5]", "(join []) -> []", "(join [[]]) -> []", "(join [[6 9 1] [1 6 1 6 2] [] [0 5 1 4]]) -> [6 9 1 1 6 1 6 2 0 5 1 4]", "(join []) -> []", "(join []) -> []", "(join [[6] [4 7] [0]]) -> [6 4 7 0]", "(join [[7 0 1 8 6] [4 6 6 8 8] [5 0] [6 6 5 1]]) -> [7 0 1 8 6 4 6 6 8 8 5 0 6 6 5 1]", "(join [[4 0 8 3 6] [6 0 1 9 2] [7] [0] [3 0]]) -> [4 0 8 3 6 6 0 1 9 2 7 0 3 0]", "(join [[9 0 6] [3 2] [] [] [4 2 4 0]]) -> [9 0 6 3 2 4 2 4 0]", "(join []) -> []", "(join [[8] [9 4 3 5 7] [8 9] [1 4 7] [3 8 2 0]]) -> [8 9 4 3 5 7 8 9 1 4 7 3 8 2 0]", "(join [[2 1 2 2 6] [3]]) -> [2 1 2 2 6 3]", "(join [[2 2 0 9] [2 5 6] [] [4 4 4] [5 9 0 7 6]]) -> [2 2 0 9 2 5 6 4 4 4 5 9 0 7 6]", "(join [[] [1 4 4 4] [9] [9]]) -> [1 4 4 4 9 9]", "(join []) -> []", "(join []) -> []", "(join [[0 9 4] [9 3 3 3 3] [3 6 7 7] [8 5]]) -> [0 9 4 9 3 3 3 3 3 6 7 7 8 5]", "(join [[8 8] [8 5 3 3 1] [] [6 2 7]]) -> [8 8 8 5 3 3 1 6 2 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.06012}
{"examples": ["(join []) -> []", "(join [[1 1 0 3 5] [6 9 6 4 8] []]) -> [1 1 0 3 5 6 9 6 4 8]", "(join [[7 0] [3] [8 0 7 9] []]) -> [7 0 3 8 0 7 9]", "(join [[6 1 0 9]]) -> [6 1 0 9]", "(join [[] [4 8 5 4] [2 4 8 4 0] [9] [8 5 9]]) -> [4 8 5 4 2 4 8 4 0 9 8 5 9]", "(join [[7 5 8 6 9] []]) -> [7 5 8 6 9]", "(join [[] [9 7] [5 6] [7 5]]) -> [9 7 5 6 7 5]", "(join [[1 5 0 4] [5 4] [2 0 2 0 5]]) -> [1 5 0 4 5 4 2 0 2 0 5]", "(join []) -> []", "(join [[7 1] [5 3] [2] [4 0]]) -> [7 1 5 3 2 4 0]", "(join [[8 3] [] [4 8] [5 1 4 9]]) -> [8 3 4 8 5 1 4 9]", "(join [[9 2 1 1] [9 1 7 2] [] [3 0 0 6 0]]) -> [9 2 1 1 9 1 7 2 3 0 0 6 0]", "(join [[7 9 1] [8 4] [9] [6 7 4] [6 8 1 1]]) -> [7 9 1 8 4 9 6 7 4 6 8 1 1]", "(join []) -> []", "(join [[7 7] [] [5 4 5 7 0] [3] []]) -> [7 7 5 4 5 7 0 3]", "(join [[9 9 7 2] [5 1 8] [2 6 3] [0 5 8 2] [1 3 1 9]]) -> [9 9 7 2 5 1 8 2 6 3 0 5 8 2 1 3 1 9]", "(join [[0] [] [2 9 1 0 9] []]) -> [0 2 9 1 0 9]", "(join [[] [7] [7 4 8 2] [5] []]) -> [7 7 4 8 2 5]", "(join [[2 6 0 7] [3 8 4 3 7] [] [9 6 7] [3 3]]) -> [2 6 0 7 3 8 4 3 7 9 6 7 3 3]", "(join [[9 1 3 8] [0 5] [8 8 0] [] [7 5 5 5]]) -> [9 1 3 8 0 5 8 8 0 7 5 5 5]", "(join [[6 5 7 4] [3 5]]) -> [6 5 7 4 3 5]", "(join []) -> []", "(join [[9 2 1 0 4]]) -> [9 2 1 0 4]", "(join [[9 3 0]]) -> [9 3 0]", "(join [[1 9 2] [6 8 2 2] [5] [7 4 7]]) -> [1 9 2 6 8 2 2 5 7 4 7]", "(join [[3 7] [7 8 2 9] [0 0 1]]) -> [3 7 7 8 2 9 0 0 1]", "(join []) -> []", "(join [[2] [7 4] [0 6 9] [9 3 0 9 5] []]) -> [2 7 4 0 6 9 9 3 0 9 5]", "(join [[8 3 2]]) -> [8 3 2]", "(join []) -> []", "(join [[3 7 2] [8 4 2 6]]) -> [3 7 2 8 4 2 6]", "(join [[6 1] [7 7 1] [6 4] [4 9 2]]) -> [6 1 7 7 1 6 4 4 9 2]", "(join [[7 9 4 4 6]]) -> [7 9 4 4 6]", "(join [[4]]) -> [4]", "(join [[6 5 9] [7 9 6 7 4] [3 2 2 1]]) -> [6 5 9 7 9 6 7 4 3 2 2 1]", "(join [[6 7 4 6] [8 9] [9 2 9 4 9] [4]]) -> [6 7 4 6 8 9 9 2 9 4 9 4]", "(join [[4 6 2] [2 7 7] [2 4 6 3 6]]) -> [4 6 2 2 7 7 2 4 6 3 6]", "(join [[5 5] [9 7 3] [1 5 3 3] [0 8 2 8 9] [0]]) -> [5 5 9 7 3 1 5 3 3 0 8 2 8 9 0]", "(join []) -> []", "(join [[4] [1 0 5 6 7]]) -> [4 1 0 5 6 7]", "(join [[7 4 6] [7]]) -> [7 4 6 7]", "(join [[5 9 0 8 8] []]) -> [5 9 0 8 8]", "(join [[0 0]]) -> [0 0]", "(join []) -> []", "(join [[7 3 9 7 9] [] [1 6 1] [3 9 7]]) -> [7 3 9 7 9 1 6 1 3 9 7]", "(join [[8 8 2 8 1] [6 9 9 1 1] [3 5 3 3 7] [7 4]]) -> [8 8 2 8 1 6 9 9 1 1 3 5 3 3 7 7 4]", "(join [[9 7 6] [6]]) -> [9 7 6 6]", "(join [[4 1 4 3] [7 1 8 7 9] [0 3 4] [4 4 1]]) -> [4 1 4 3 7 1 8 7 9 0 3 4 4 4 1]", "(join [[6 6 3] []]) -> [6 6 3]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.093101}
{"examples": ["(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[1] [5 0] [6 5 4] [4 3 3 9 1]]) -> [1 5 0 6 5 4 4 3 3 9 1]", "(join [[] [6]]) -> [6]", "(join [[1 0 4] [3]]) -> [1 0 4 3]", "(join [[3 8 9] [0 8 7 7 4]]) -> [3 8 9 0 8 7 7 4]", "(join [[5 2 8] [1 7 8 7] [3 1]]) -> [5 2 8 1 7 8 7 3 1]", "(join [[6 9 3 6 3]]) -> [6 9 3 6 3]", "(join [[4 8 4] [6 9 7] [1 7 6 0 0] [2]]) -> [4 8 4 6 9 7 1 7 6 0 0 2]", "(join [[5 4 5 3 5] [4 8 1 5] []]) -> [5 4 5 3 5 4 8 1 5]", "(join [[1 9]]) -> [1 9]", "(join [[3 0] [7]]) -> [3 0 7]", "(join [[5 5 8 2 9] [9 1 4]]) -> [5 5 8 2 9 9 1 4]", "(join [[9 6 0 8 0]]) -> [9 6 0 8 0]", "(join [[4 5 0 3 2] [2 0]]) -> [4 5 0 3 2 2 0]", "(join [[6 5] [] [5 4 1 3]]) -> [6 5 5 4 1 3]", "(join [[5 5 9 9 0] [9 7 5 5 4] [7 9 1] [5 3 2 3] [3 0 0]]) -> [5 5 9 9 0 9 7 5 5 4 7 9 1 5 3 2 3 3 0 0]", "(join [[4 0 4 7 1] [6 5] [8 0 8]]) -> [4 0 4 7 1 6 5 8 0 8]", "(join [[] [8 6 6 9 3] [8] [6 2 0 5 2] [1 4]]) -> [8 6 6 9 3 8 6 2 0 5 2 1 4]", "(join [[5 6 3 2 8] []]) -> [5 6 3 2 8]", "(join [[3 7 9 4]]) -> [3 7 9 4]", "(join [[1 4]]) -> [1 4]", "(join [[8] []]) -> [8]", "(join [[3]]) -> [3]", "(join [[5 8 9 9] [9 7 6]]) -> [5 8 9 9 9 7 6]", "(join [[] [3 0] [] [3 1 7 8]]) -> [3 0 3 1 7 8]", "(join [[7 2 4] [2 7 8] [7] [9 2 4]]) -> [7 2 4 2 7 8 7 9 2 4]", "(join [[8 1 0 5]]) -> [8 1 0 5]", "(join []) -> []", "(join [[6 3 9 8 4] [] [5] [8 8 9 7 3] [1 2 6 1 3]]) -> [6 3 9 8 4 5 8 8 9 7 3 1 2 6 1 3]", "(join [[1 4 5 4 9] [7] [7]]) -> [1 4 5 4 9 7 7]", "(join [[7 5 5 8 4] [7 9 9]]) -> [7 5 5 8 4 7 9 9]", "(join [[0 7]]) -> [0 7]", "(join [[] [] [7 3 9]]) -> [7 3 9]", "(join []) -> []", "(join [[2 0 0] [7 5 4 5] [5 4 5] [6 9 3 8 3] [6 8 2]]) -> [2 0 0 7 5 4 5 5 4 5 6 9 3 8 3 6 8 2]", "(join [[6 3] [7 0 0 7 2] [6 9 5] [4 2 6 4 9] [1 2 4 7 7]]) -> [6 3 7 0 0 7 2 6 9 5 4 2 6 4 9 1 2 4 7 7]", "(join [[1 8 1] [2 4 9 9]]) -> [1 8 1 2 4 9 9]", "(join [[3] [9] [8 3 0 6] [3]]) -> [3 9 8 3 0 6 3]", "(join [[0 1 6 1] [9 2] [2 2 7 2] [4 4 1 3]]) -> [0 1 6 1 9 2 2 2 7 2 4 4 1 3]", "(join [[8 9 8 1 0]]) -> [8 9 8 1 0]", "(join [[6 2] [0 8 2 4 8]]) -> [6 2 0 8 2 4 8]", "(join [[1 0] [5 7 5 3 4] [6 3] [5 1]]) -> [1 0 5 7 5 3 4 6 3 5 1]", "(join [[] [5 0 1 0 0] [9 1 1] [3 6 9]]) -> [5 0 1 0 0 9 1 1 3 6 9]", "(join [[4 2 7 2] [5 8 0] [2]]) -> [4 2 7 2 5 8 0 2]", "(join []) -> []", "(join [[] [8 1 5] [] [6 2 6 0] [6]]) -> [8 1 5 6 2 6 0 6]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.103375}
{"examples": ["(join []) -> []", "(join [[3 3] [3 9 5] [4] [6 6 8] [5 7 8 6]]) -> [3 3 3 9 5 4 6 6 8 5 7 8 6]", "(join [[3 6 0]]) -> [3 6 0]", "(join []) -> []", "(join [[2 6 1 8 7] [8 3 6 4] [3 7 6 1 4] [] [8]]) -> [2 6 1 8 7 8 3 6 4 3 7 6 1 4 8]", "(join [[1] [9 1 2 0] []]) -> [1 9 1 2 0]", "(join [[8]]) -> [8]", "(join [[7 8 4 5] [7] [2 0 0 3 0] [2 3] [0 9 7 8]]) -> [7 8 4 5 7 2 0 0 3 0 2 3 0 9 7 8]", "(join [[4 8 6]]) -> [4 8 6]", "(join [[6] [8 9 7 1] [4 4 4 3 8] [7 5 5 0] [2 7 8 6 5]]) -> [6 8 9 7 1 4 4 4 3 8 7 5 5 0 2 7 8 6 5]", "(join []) -> []", "(join [[7 6 7 1 2] [3] [] [2 0]]) -> [7 6 7 1 2 3 2 0]", "(join [[9 0 7 6 7] [6 4 8 3] [5 3 0 5] [] [3 5 3]]) -> [9 0 7 6 7 6 4 8 3 5 3 0 5 3 5 3]", "(join []) -> []", "(join [[8 9 3 6 3] [9] [] []]) -> [8 9 3 6 3 9]", "(join [[5] [1 2 1 8 9]]) -> [5 1 2 1 8 9]", "(join [[5 9 2 3]]) -> [5 9 2 3]", "(join [[2] []]) -> [2]", "(join [[3 6 3 6 3] [] [0 1 8 3 7] [7 8 1] [7 3 8]]) -> [3 6 3 6 3 0 1 8 3 7 7 8 1 7 3 8]", "(join [[5]]) -> [5]", "(join [[2 9 0 6 6] [] [5 3 9 0 2]]) -> [2 9 0 6 6 5 3 9 0 2]", "(join [[0]]) -> [0]", "(join [[0 3 5 8] [8 1] [5 6 2 2]]) -> [0 3 5 8 8 1 5 6 2 2]", "(join [[1 2 9]]) -> [1 2 9]", "(join []) -> []", "(join [[7 0 1 5 4] [4] [5 2] [2] []]) -> [7 0 1 5 4 4 5 2 2]", "(join [[8 6 7 1]]) -> [8 6 7 1]", "(join [[0 5 5 2 4] [0 4] [8 8 2 1 5] [2 1 8 7 9]]) -> [0 5 5 2 4 0 4 8 8 2 1 5 2 1 8 7 9]", "(join [[1 8] [1 8 4 0 9] [6]]) -> [1 8 1 8 4 0 9 6]", "(join []) -> []", "(join [[9 2 0 1] [9 6 4 2 8] [8 8 0 4] [2]]) -> [9 2 0 1 9 6 4 2 8 8 8 0 4 2]", "(join [[2 2 0 4 1] [2 5]]) -> [2 2 0 4 1 2 5]", "(join []) -> []", "(join [[3 7 3 4] [4 2 3 3 2] [1 7 9 6 8] [8 6 4] [6 5]]) -> [3 7 3 4 4 2 3 3 2 1 7 9 6 8 8 6 4 6 5]", "(join [[6 3 3] [8] [7] [2]]) -> [6 3 3 8 7 2]", "(join [[4 3] [6 2] [0]]) -> [4 3 6 2 0]", "(join [[1 1 7 5] [4 4 7 8 1] [] [9 3]]) -> [1 1 7 5 4 4 7 8 1 9 3]", "(join [[1] [0]]) -> [1 0]", "(join [[6] [8 1 8 2 3] [4 5 8 7]]) -> [6 8 1 8 2 3 4 5 8 7]", "(join [[6 2] [] [4 8 7 1 4]]) -> [6 2 4 8 7 1 4]", "(join [[2] [1 2 0 8 6] [] [1]]) -> [2 1 2 0 8 6 1]", "(join [[0 7] [0 4 9] [7 3 7 1 2] [9 1] [1 2 0 3 9]]) -> [0 7 0 4 9 7 3 7 1 2 9 1 1 2 0 3 9]", "(join [[9] []]) -> [9]", "(join [[7 8 9 4 7]]) -> [7 8 9 4 7]", "(join [[2 4 4] [8 5 8 8] [6 1 6]]) -> [2 4 4 8 5 8 8 6 1 6]", "(join []) -> []", "(join [[2 4 1 7 8] [] [7 9 6] [5 5 3 3 1]]) -> [2 4 1 7 8 7 9 6 5 5 3 3 1]", "(join [[5] [3] [3 5 5 5]]) -> [5 3 3 5 5 5]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.120036}
{"examples": ["(join []) -> []", "(join [[] [2 5 6 7] [2 6 7]]) -> [2 5 6 7 2 6 7]", "(join []) -> []", "(join []) -> []", "(join [[1 0 0] [5 9 8 5 7] [7 8 6 9] [9 1] []]) -> [1 0 0 5 9 8 5 7 7 8 6 9 9 1]", "(join [[8 0 0 3 4] [3 2 5 5] [8 4] []]) -> [8 0 0 3 4 3 2 5 5 8 4]", "(join []) -> []", "(join [[6 1 5 7 6] [9 8 3 5] [4] [] [5 6 3 1 3]]) -> [6 1 5 7 6 9 8 3 5 4 5 6 3 1 3]", "(join [[8 5] [8 1 3 0] [3 5 1 5 0] [] [1 7 2 1 5]]) -> [8 5 8 1 3 0 3 5 1 5 0 1 7 2 1 5]", "(join [[7 8 7] [5 9] [3]]) -> [7 8 7 5 9 3]", "(join [[1 1 3 9 5] [4 7 0] [] [3 6 8 6]]) -> [1 1 3 9 5 4 7 0 3 6 8 6]", "(join [[9 0 8 9 8]]) -> [9 0 8 9 8]", "(join [[8] [0 9 4 5] [5 6 9] []]) -> [8 0 9 4 5 5 6 9]", "(join [[]]) -> []", "(join [[7 9 1 2] [7] [0 1 9 7]]) -> [7 9 1 2 7 0 1 9 7]", "(join [[9 2 2 6 5] [0 4] [9]]) -> [9 2 2 6 5 0 4 9]", "(join [[4] [2 2 1 0 6] [8 0 2] [3 8 1 7 7]]) -> [4 2 2 1 0 6 8 0 2 3 8 1 7 7]", "(join [[6 4 1] [2 4 0 4 5] [6 1 3] [3] [3 0 5 7 5]]) -> [6 4 1 2 4 0 4 5 6 1 3 3 3 0 5 7 5]", "(join [[5 9]]) -> [5 9]", "(join []) -> []", "(join [[5 7 9] [7] [6 9] [7 7] []]) -> [5 7 9 7 6 9 7 7]", "(join [[6 3] [2 4] [8 4] [2 5]]) -> [6 3 2 4 8 4 2 5]", "(join [[5] [9 8 2] [1 4] [2] [7 0]]) -> [5 9 8 2 1 4 2 7 0]", "(join [[] [6 0]]) -> [6 0]", "(join [[]]) -> []", "(join [[1 5 2 1] [6] [3 0 1]]) -> [1 5 2 1 6 3 0 1]", "(join [[] [5] [] [1 4] [0 1 6 1 1]]) -> [5 1 4 0 1 6 1 1]", "(join [[6] [2 5 6 7] [0 9 1 6 4] [3]]) -> [6 2 5 6 7 0 9 1 6 4 3]", "(join [[6] [7 8 9 9]]) -> [6 7 8 9 9]", "(join [[7 5 8 6] [3 9]]) -> [7 5 8 6 3 9]", "(join [[] [1 7]]) -> [1 7]", "(join [[6 2 9 1 6]]) -> [6 2 9 1 6]", "(join [[7 8] [7 5] [4]]) -> [7 8 7 5 4]", "(join []) -> []", "(join [[2 4] [8 9 9 0 6] [6 2 5] [4]]) -> [2 4 8 9 9 0 6 6 2 5 4]", "(join [[6 3 4 0] [5 4] [] [6 6]]) -> [6 3 4 0 5 4 6 6]", "(join [[8 3 4 2] [5 9] [0 3 9 0 4] [0 7]]) -> [8 3 4 2 5 9 0 3 9 0 4 0 7]", "(join []) -> []", "(join [[] [0 4 6] [5 7 0 5] [8 3 0 2] [9]]) -> [0 4 6 5 7 0 5 8 3 0 2 9]", "(join [[3 7] [4 0 3 2 9] [4 2 3] [8] [5 8]]) -> [3 7 4 0 3 2 9 4 2 3 8 5 8]", "(join [[9 4 9 5] [6 3]]) -> [9 4 9 5 6 3]", "(join [[4 6 1]]) -> [4 6 1]", "(join [[8] [8 4 1 3] [6 8] [9]]) -> [8 8 4 1 3 6 8 9]", "(join [[5 4 9 4] [0 5 7 7 5] [2 8] [] []]) -> [5 4 9 4 0 5 7 7 5 2 8]", "(join [[] []]) -> []", "(join []) -> []", "(join [[] [9]]) -> [9]", "(join [[8 4] [0 8] [1 6 0]]) -> [8 4 0 8 1 6 0]", "(join [[4 7 6 2] [4 3 1 3 3] [9 7 5 4] [0] [4 5 8 2 0]]) -> [4 7 6 2 4 3 1 3 3 9 7 5 4 0 4 5 8 2 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.050472}
{"examples": ["(join []) -> []", "(join [[6 9 2 0 9] [7] [9 8] [1] [9 6]]) -> [6 9 2 0 9 7 9 8 1 9 6]", "(join [[]]) -> []", "(join []) -> []", "(join [[6 2 1] [3 1] [9 1 2 4 1] [3 1 7] [2 3 0]]) -> [6 2 1 3 1 9 1 2 4 1 3 1 7 2 3 0]", "(join [[] [8 5 2 3] [] [4 4 4]]) -> [8 5 2 3 4 4 4]", "(join [[3 8 7]]) -> [3 8 7]", "(join [[9 9 4 8] [6 7 3] [8 3 3]]) -> [9 9 4 8 6 7 3 8 3 3]", "(join []) -> []", "(join [[0 7] [0 7] [9 4 8] [] [9 0 8 3]]) -> [0 7 0 7 9 4 8 9 0 8 3]", "(join [[9 9] [6 7 6 0 9]]) -> [9 9 6 7 6 0 9]", "(join [[6 3] [7 5 7 8 1] [4 7 5] [2]]) -> [6 3 7 5 7 8 1 4 7 5 2]", "(join [[1 3 1 6 7] [9 3 2 9 7] [2 6]]) -> [1 3 1 6 7 9 3 2 9 7 2 6]", "(join [[4 3 8 4 3] [0 7] [9 4 0 4 8] [5 7 5]]) -> [4 3 8 4 3 0 7 9 4 0 4 8 5 7 5]", "(join [[] [9 0 4 1] [6 0 9] [] [7 1 6 1]]) -> [9 0 4 1 6 0 9 7 1 6 1]", "(join [[3 0 0] [1 0 8 9 0] [5 1] [9]]) -> [3 0 0 1 0 8 9 0 5 1 9]", "(join [[4 8 2 7] [2 0 9 3] [0 2] []]) -> [4 8 2 7 2 0 9 3 0 2]", "(join [[0 6 3 9 8] [7 6 3 5] []]) -> [0 6 3 9 8 7 6 3 5]", "(join [[6 7 6 3] [9 7 8 6] [2 5 5 5] [5 3 1]]) -> [6 7 6 3 9 7 8 6 2 5 5 5 5 3 1]", "(join [[7 9 1 9]]) -> [7 9 1 9]", "(join []) -> []", "(join [[] [9] [] [3]]) -> [9 3]", "(join []) -> []", "(join [[9 0 1 9 4] [9 2 6 2 0] [4 7 6 0 9]]) -> [9 0 1 9 4 9 2 6 2 0 4 7 6 0 9]", "(join [[4 9] [5 5] []]) -> [4 9 5 5]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[6 6 3 8 3] [1] [3] [6 9 0 9] [8 0 7 4 1]]) -> [6 6 3 8 3 1 3 6 9 0 9 8 0 7 4 1]", "(join [[8 1] [0 2 6 8 7]]) -> [8 1 0 2 6 8 7]", "(join [[2 1 7 9] [4 1] []]) -> [2 1 7 9 4 1]", "(join [[8 0 8] [8] [] [3] []]) -> [8 0 8 8 3]", "(join [[] [0 3] [7]]) -> [0 3 7]", "(join [[4 8] [3 8 7 0 4] [1 4 5 5 4]]) -> [4 8 3 8 7 0 4 1 4 5 5 4]", "(join [[0 7 5 0 0] [5 0 0] [9 6] [1 5 4 8 1]]) -> [0 7 5 0 0 5 0 0 9 6 1 5 4 8 1]", "(join [[] [1 3]]) -> [1 3]", "(join [[5 2 9] [2 8 5 7]]) -> [5 2 9 2 8 5 7]", "(join [[3 5] [4 5 3 5 7] [3 6 9]]) -> [3 5 4 5 3 5 7 3 6 9]", "(join []) -> []", "(join [[3 5 6] [7 3 7 3]]) -> [3 5 6 7 3 7 3]", "(join [[0 2 3 5 7] [0 4 2 2 6]]) -> [0 2 3 5 7 0 4 2 2 6]", "(join [[1 1]]) -> [1 1]", "(join [[6 0 1 6] [5 8 3 7 2] [8 7 9 8 4]]) -> [6 0 1 6 5 8 3 7 2 8 7 9 8 4]", "(join [[8 0 5 9] [9 1 1 3 3]]) -> [8 0 5 9 9 1 1 3 3]", "(join [[4 4 8 9]]) -> [4 4 8 9]", "(join [[4 6 5 2 4] [4] [0] [] []]) -> [4 6 5 2 4 4 0]", "(join [[7 4 2] [9 6] [3 3 3 8] [4] [0 2 9 1]]) -> [7 4 2 9 6 3 3 3 8 4 0 2 9 1]", "(join [[9 5 8 7 3]]) -> [9 5 8 7 3]", "(join [[1 4 2 6] [4 4 8 1 6]]) -> [1 4 2 6 4 4 8 1 6]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.545186}
{"examples": ["(join []) -> []", "(join [[4 4 5 8] [2 0] [3] [6 2 5] [4 0]]) -> [4 4 5 8 2 0 3 6 2 5 4 0]", "(join [[1 8 9 9]]) -> [1 8 9 9]", "(join [[2 7 2 7 1] [0 0] [4] [3 7 1 5 6] [2 5 0 1]]) -> [2 7 2 7 1 0 0 4 3 7 1 5 6 2 5 0 1]", "(join [[] [7 0] []]) -> [7 0]", "(join [[5 3 6] [6 0 4] [1 3 1]]) -> [5 3 6 6 0 4 1 3 1]", "(join [[3 7 5 5 4] [7] [6 8]]) -> [3 7 5 5 4 7 6 8]", "(join [[2 0] [3 2 6 4 4]]) -> [2 0 3 2 6 4 4]", "(join [[] [5 8 8 6] [] [0 2 2 2] []]) -> [5 8 8 6 0 2 2 2]", "(join []) -> []", "(join [[2]]) -> [2]", "(join [[6] [1 6 2 3 2] [9] [2 4 2] [9 2 2]]) -> [6 1 6 2 3 2 9 2 4 2 9 2 2]", "(join []) -> []", "(join [[3 9 5 7 0] [4 6 7 1] [0 2 6 0] [8]]) -> [3 9 5 7 0 4 6 7 1 0 2 6 0 8]", "(join [[1] [] [5 6 3] [1 7 3 8 6] [3 0 2]]) -> [1 5 6 3 1 7 3 8 6 3 0 2]", "(join [[] [4 0 8 4]]) -> [4 0 8 4]", "(join [[0 9] [] [5 0 6 7 1]]) -> [0 9 5 0 6 7 1]", "(join [[4 1 2 5 8] [4 0] [9 5 2 2 2]]) -> [4 1 2 5 8 4 0 9 5 2 2 2]", "(join [[9 3 5] [] [8 7 7 3 4] [] [8 8 4 7 7]]) -> [9 3 5 8 7 7 3 4 8 8 4 7 7]", "(join [[] [8]]) -> [8]", "(join []) -> []", "(join [[5 9] [3 4 9] [7 7 3 3] [2 3 8 8 3] [7]]) -> [5 9 3 4 9 7 7 3 3 2 3 8 8 3 7]", "(join [[6 1] [5 9 5 9] [3 7 5]]) -> [6 1 5 9 5 9 3 7 5]", "(join [[5]]) -> [5]", "(join [[0 7 2 8 5] []]) -> [0 7 2 8 5]", "(join [[3 0 2] [1 2 7] [8] [7 6 0 6]]) -> [3 0 2 1 2 7 8 7 6 0 6]", "(join [[3 3 2 9 8] [4 4 3 7 6]]) -> [3 3 2 9 8 4 4 3 7 6]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[5] [0 8] [5] [9 3 2 0 3] [7 7 9 5]]) -> [5 0 8 5 9 3 2 0 3 7 7 9 5]", "(join [[5 5] [1 0 0] [] [0 1 8 8 6]]) -> [5 5 1 0 0 0 1 8 8 6]", "(join [[] [4]]) -> [4]", "(join [[2 4 9 7 9]]) -> [2 4 9 7 9]", "(join [[3 9 6 6] [7 3 7] [3 1]]) -> [3 9 6 6 7 3 7 3 1]", "(join [[4] [5 0 2 3]]) -> [4 5 0 2 3]", "(join [[8 5 8] [9 0 3 8] [9 0 2 3]]) -> [8 5 8 9 0 3 8 9 0 2 3]", "(join [[] [7 8 5 5] [3 9 9 4] [] [6 9]]) -> [7 8 5 5 3 9 9 4 6 9]", "(join [[3 0] [7 6]]) -> [3 0 7 6]", "(join [[9 1 3 3 7] [4 3] [7] []]) -> [9 1 3 3 7 4 3 7]", "(join [[6]]) -> [6]", "(join [[6 0 3 3] [4] [7 7 0] [4 6 9 2] []]) -> [6 0 3 3 4 7 7 0 4 6 9 2]", "(join [[3 3] [2 8] []]) -> [3 3 2 8]", "(join [[1 8 5 5] [] [7]]) -> [1 8 5 5 7]", "(join [[3 7 7]]) -> [3 7 7]", "(join []) -> []", "(join [[1 3] [] []]) -> [1 3]", "(join [[5 8] [8 7 0 7 5] [5] [0]]) -> [5 8 8 7 0 7 5 5 0]", "(join [[2 8 5 6 4]]) -> [2 8 5 6 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.070788}
{"examples": ["(join []) -> []", "(join [[5 0] [3 5 7]]) -> [5 0 3 5 7]", "(join []) -> []", "(join [[] [] []]) -> []", "(join [[8 1] [6 8 6 3 3] [] [4 8 2 3 4] []]) -> [8 1 6 8 6 3 3 4 8 2 3 4]", "(join [[3 4] [3 0 1]]) -> [3 4 3 0 1]", "(join [[] [9 4 3 8 8] [7 9 2 3 2]]) -> [9 4 3 8 8 7 9 2 3 2]", "(join [[0 0 9 1] [9 8] [5 1 1 7] [0 6 5] [2 8 6]]) -> [0 0 9 1 9 8 5 1 1 7 0 6 5 2 8 6]", "(join [[0 3 3 6 1]]) -> [0 3 3 6 1]", "(join [[6 1 9]]) -> [6 1 9]", "(join [[3 9] [8 9 8 9] [8 8]]) -> [3 9 8 9 8 9 8 8]", "(join [[4 6 6 1] [4 7 4] []]) -> [4 6 6 1 4 7 4]", "(join [[8 1 7 7 6]]) -> [8 1 7 7 6]", "(join [[4 8 0 7 3] [3 1 6 1 1]]) -> [4 8 0 7 3 3 1 6 1 1]", "(join [[8 1]]) -> [8 1]", "(join [[1 5 2] [2] [5 4 7]]) -> [1 5 2 2 5 4 7]", "(join [[8 9] [4 3 5 8] [8 9 1]]) -> [8 9 4 3 5 8 8 9 1]", "(join [[1 3] [0 8 4]]) -> [1 3 0 8 4]", "(join []) -> []", "(join [[7 8] [8 6 6] [5 7]]) -> [7 8 8 6 6 5 7]", "(join [[3 9 7 2] [8 8]]) -> [3 9 7 2 8 8]", "(join [[4 4] [9 7 1 7 0]]) -> [4 4 9 7 1 7 0]", "(join []) -> []", "(join [[] [4] [7 9 0 6 2] []]) -> [4 7 9 0 6 2]", "(join [[4] [6] [] [5 2 8] [5 1 2 8]]) -> [4 6 5 2 8 5 1 2 8]", "(join [[5 2 0 6] [7] []]) -> [5 2 0 6 7]", "(join [[2 4] [0 0 1 4]]) -> [2 4 0 0 1 4]", "(join [[4] [2 9 7 0]]) -> [4 2 9 7 0]", "(join [[3 5 5 6] [9 8 2 5] [] [5]]) -> [3 5 5 6 9 8 2 5 5]", "(join [[7 2 9 0] [2 8] [0 7] [8 6 7 0 0]]) -> [7 2 9 0 2 8 0 7 8 6 7 0 0]", "(join [[1 4 1 1] [0 3 9] [] [8]]) -> [1 4 1 1 0 3 9 8]", "(join [[] [] [3 3 7] [] []]) -> [3 3 7]", "(join []) -> []", "(join []) -> []", "(join [[3 3 0] [3] [4 9 0]]) -> [3 3 0 3 4 9 0]", "(join [[0 4 9] [2 2 7 8 8]]) -> [0 4 9 2 2 7 8 8]", "(join [[8 5]]) -> [8 5]", "(join [[9]]) -> [9]", "(join [[4 1 3]]) -> [4 1 3]", "(join [[4 0 7 4] [4 5] [8 9 7 1 3]]) -> [4 0 7 4 4 5 8 9 7 1 3]", "(join [[3 2 2] [8 7 5 9] [] [7 8] [6 4 4]]) -> [3 2 2 8 7 5 9 7 8 6 4 4]", "(join [[1 9 7] [5 3] [6 9] [] []]) -> [1 9 7 5 3 6 9]", "(join [[1 5] [4 7] [0 6 4 1] [6]]) -> [1 5 4 7 0 6 4 1 6]", "(join [[2 8] [8 2 7]]) -> [2 8 8 2 7]", "(join [[6 9 3 9 5] [2 4]]) -> [6 9 3 9 5 2 4]", "(join []) -> []", "(join [[3 3 4 6] [] [5] [8 0 8]]) -> [3 3 4 6 5 8 0 8]", "(join [[2 0 4]]) -> [2 0 4]", "(join [[] [3 1 5 9 6] [3 0 3 8 1] [] [7 4]]) -> [3 1 5 9 6 3 0 3 8 1 7 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.611565}
{"examples": ["(join []) -> []", "(join [[9 5] [] [0] [] []]) -> [9 5 0]", "(join [[8] [2 2 7 9]]) -> [8 2 2 7 9]", "(join [[1 0] []]) -> [1 0]", "(join [[9] [8 9] [7 1 8 0]]) -> [9 8 9 7 1 8 0]", "(join [[] [7 4]]) -> [7 4]", "(join []) -> []", "(join [[8]]) -> [8]", "(join [[6 9 8 3 4] [5 3 0 3] [6 4]]) -> [6 9 8 3 4 5 3 0 3 6 4]", "(join [[7 8 4]]) -> [7 8 4]", "(join [[3] [4] [1 4 6] [2] [9 8 6]]) -> [3 4 1 4 6 2 9 8 6]", "(join [[9 8] [] [4 5 0 0] [2]]) -> [9 8 4 5 0 0 2]", "(join [[] [7 3 6 6 1]]) -> [7 3 6 6 1]", "(join [[6 8] [4 3] [7] [5 0 7 1]]) -> [6 8 4 3 7 5 0 7 1]", "(join [[5 6 3] [] [9 3 9 9 8] [6 9 4] [9 1]]) -> [5 6 3 9 3 9 9 8 6 9 4 9 1]", "(join [[8] []]) -> [8]", "(join [[3 0 6 9] [] [6]]) -> [3 0 6 9 6]", "(join [[6 4 1 5 5] [] [9 6] [9 0 1 1] [0 5 3]]) -> [6 4 1 5 5 9 6 9 0 1 1 0 5 3]", "(join [[0 4] [7 7 5 1] [6 8 7] [] [1 9]]) -> [0 4 7 7 5 1 6 8 7 1 9]", "(join []) -> []", "(join [[9 7 9] [3 4] [7] [1 9]]) -> [9 7 9 3 4 7 1 9]", "(join [[4 9] [0 9 8 2 6]]) -> [4 9 0 9 8 2 6]", "(join [[9] [2 2] [2] [5 8] [7 4 9 4]]) -> [9 2 2 2 5 8 7 4 9 4]", "(join [[9 6 1] [9 0 9]]) -> [9 6 1 9 0 9]", "(join [[7 2 6 7 8] [9 3 6 1]]) -> [7 2 6 7 8 9 3 6 1]", "(join [[1] [7 5 1] [5 1 5 3 4] [6 9] [9 4 8 5 7]]) -> [1 7 5 1 5 1 5 3 4 6 9 9 4 8 5 7]", "(join [[8] [1 6 1 8] [2 1 7 5] [2 9 7 0 4]]) -> [8 1 6 1 8 2 1 7 5 2 9 7 0 4]", "(join [[] [3 2] [3]]) -> [3 2 3]", "(join [[7 2 3 1 3] [1 5 2] [3 0]]) -> [7 2 3 1 3 1 5 2 3 0]", "(join [[0 8 2 6 3] [5] [4 9 9] [4 2 5 8 1] []]) -> [0 8 2 6 3 5 4 9 9 4 2 5 8 1]", "(join [[3 1 7 8] [0 8 7] [9 3 7]]) -> [3 1 7 8 0 8 7 9 3 7]", "(join [[2 6] []]) -> [2 6]", "(join []) -> []", "(join []) -> []", "(join [[5 6 6 7 1]]) -> [5 6 6 7 1]", "(join []) -> []", "(join [[1 0 3] [7 7 7]]) -> [1 0 3 7 7 7]", "(join [[4 2 8 4 5]]) -> [4 2 8 4 5]", "(join [[6 1 7] [8 4 0] [1 3 6 7 6]]) -> [6 1 7 8 4 0 1 3 6 7 6]", "(join [[6 9] [6] [] [3 5] [1 2 1 5]]) -> [6 9 6 3 5 1 2 1 5]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[0 8]]) -> [0 8]", "(join [[9 8 4 5 2] [3 9 3]]) -> [9 8 4 5 2 3 9 3]", "(join [[6 1 2 3] [1 0 7 1] [9 2]]) -> [6 1 2 3 1 0 7 1 9 2]", "(join [[4]]) -> [4]", "(join []) -> []", "(join [[] [5 5 4] [4 8]]) -> [5 5 4 4 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.568179}
{"examples": ["(join []) -> []", "(join [[5 5 4 3 9]]) -> [5 5 4 3 9]", "(join [[6 6 7] [2] [6 9 1 9 4] [1 7 0 7] [8]]) -> [6 6 7 2 6 9 1 9 4 1 7 0 7 8]", "(join [[6 9 7 2 8]]) -> [6 9 7 2 8]", "(join [[7 3 0 1] [0] []]) -> [7 3 0 1 0]", "(join [[0 8 7 8] [3] [4 0 6 1]]) -> [0 8 7 8 3 4 0 6 1]", "(join [[9 9 5 4] [4 6 3 7] [6 3 1]]) -> [9 9 5 4 4 6 3 7 6 3 1]", "(join [[6 1 1] [0 5]]) -> [6 1 1 0 5]", "(join [[8 1 1 6 5] [5 4 2 6]]) -> [8 1 1 6 5 5 4 2 6]", "(join [[2 5 8 7] [] [0 4 1 3] [1 0 4 1 6] [3 0 5 1 3]]) -> [2 5 8 7 0 4 1 3 1 0 4 1 6 3 0 5 1 3]", "(join [[3] [] [1 8] [9] [2 9]]) -> [3 1 8 9 2 9]", "(join [[3 6 2] [9 8 0 5 4]]) -> [3 6 2 9 8 0 5 4]", "(join [[8] [0] [] [1 7] [1 2 4 1]]) -> [8 0 1 7 1 2 4 1]", "(join [[1] [4 1 5 8]]) -> [1 4 1 5 8]", "(join []) -> []", "(join [[5]]) -> [5]", "(join [[2 0 8 8] [] [5 9 6 0 0]]) -> [2 0 8 8 5 9 6 0 0]", "(join [[1 7] [8 1] [9 2]]) -> [1 7 8 1 9 2]", "(join [[0 1 2]]) -> [0 1 2]", "(join []) -> []", "(join [[] [] [9] [9 5 8]]) -> [9 9 5 8]", "(join []) -> []", "(join [[7] [0 6 3 8 8] [9 9] [0 0 3 6] [0 9 8 8]]) -> [7 0 6 3 8 8 9 9 0 0 3 6 0 9 8 8]", "(join [[8 7 5] [6 9 8 3] [2 2] [7 5 6 2]]) -> [8 7 5 6 9 8 3 2 2 7 5 6 2]", "(join [[5 5 8 5] [7] [8 0 5 5]]) -> [5 5 8 5 7 8 0 5 5]", "(join [[]]) -> []", "(join [[1 5] [7] [0 8 0 8] [1 8]]) -> [1 5 7 0 8 0 8 1 8]", "(join [[] [8 9 6] []]) -> [8 9 6]", "(join [[5 4 8] [7 0 1 1 7]]) -> [5 4 8 7 0 1 1 7]", "(join [[1] [4 2] [7] []]) -> [1 4 2 7]", "(join [[6 1] [6 8] [7 6 1 8 6] [1 2 7 5 9] [9 3 7 8]]) -> [6 1 6 8 7 6 1 8 6 1 2 7 5 9 9 3 7 8]", "(join [[] [9 6 1]]) -> [9 6 1]", "(join [[] []]) -> []", "(join [[4 0 9 2] [7 6 2] [1 1] [8 3 2 4]]) -> [4 0 9 2 7 6 2 1 1 8 3 2 4]", "(join [[4 3 7 9 2] [5 6 0 0] [2 7 0 2 6] [] [8 5 3 3 8]]) -> [4 3 7 9 2 5 6 0 0 2 7 0 2 6 8 5 3 3 8]", "(join [[3 2] [3] [5 2 1 1] [5 9]]) -> [3 2 3 5 2 1 1 5 9]", "(join [[]]) -> []", "(join [[6] []]) -> [6]", "(join [[3 0] [] []]) -> [3 0]", "(join [[4 4 0 8] []]) -> [4 4 0 8]", "(join [[] [4 7 1 4] [] [1 2 9 2]]) -> [4 7 1 4 1 2 9 2]", "(join [[0 9] [] [2]]) -> [0 9 2]", "(join [[9 4] [] [9 9 3 6 8] [7]]) -> [9 4 9 9 3 6 8 7]", "(join []) -> []", "(join []) -> []", "(join [[8 7 5] [4 9 0 6] [4] [] []]) -> [8 7 5 4 9 0 6 4]", "(join [[1] [9 8 4 2]]) -> [1 9 8 4 2]", "(join [[2 8 3 6 1] [4] [] [5 4 1 7 2]]) -> [2 8 3 6 1 4 5 4 1 7 2]", "(join [[] [6] [2] []]) -> [6 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.586471}
{"examples": ["(join []) -> []", "(join [[8 4 6]]) -> [8 4 6]", "(join []) -> []", "(join [[] [7 5 6 0 0] [7 3] [2 1] []]) -> [7 5 6 0 0 7 3 2 1]", "(join [[4 2 6 8 4] [7] [8]]) -> [4 2 6 8 4 7 8]", "(join []) -> []", "(join []) -> []", "(join [[4 9 5] [0 2 9 3 6] [2 5 0 0 2] [5 8 5 3] []]) -> [4 9 5 0 2 9 3 6 2 5 0 0 2 5 8 5 3]", "(join [[4] [6 9 1 4] [] [2 9 3] [2 5 2 8 5]]) -> [4 6 9 1 4 2 9 3 2 5 2 8 5]", "(join [[] [6 2 2] [2] [1 0 7 9 5] []]) -> [6 2 2 2 1 0 7 9 5]", "(join [[0 5 4 2] [3 7 5] [] [3 3 1 2 1] [9 0 4 7 1]]) -> [0 5 4 2 3 7 5 3 3 1 2 1 9 0 4 7 1]", "(join [[4 3 5]]) -> [4 3 5]", "(join [[6 0 6] [3] [0 6 3 8 3]]) -> [6 0 6 3 0 6 3 8 3]", "(join [[6 6 3 6]]) -> [6 6 3 6]", "(join [[8 1] [8 1 8] [5 3] [2 5 4] [2 2 2 0]]) -> [8 1 8 1 8 5 3 2 5 4 2 2 2 0]", "(join [[5 0 2 1 5] []]) -> [5 0 2 1 5]", "(join [[3 5] [6 7 0] [] []]) -> [3 5 6 7 0]", "(join [[] [1 0 6 4] [1 5 7 1] [4 8 3 7 2] [9 3]]) -> [1 0 6 4 1 5 7 1 4 8 3 7 2 9 3]", "(join [[9 3] [2 4 8 6] [6 4 1 5 0] [0 6 2 1 2] [2 0 1]]) -> [9 3 2 4 8 6 6 4 1 5 0 0 6 2 1 2 2 0 1]", "(join [[2 5 6] [1 5] [1 0 1 7 7]]) -> [2 5 6 1 5 1 0 1 7 7]", "(join [[] [] [8 6]]) -> [8 6]", "(join [[9 9 7 6]]) -> [9 9 7 6]", "(join [[] [6]]) -> [6]", "(join [[6 3 5 7 9] [9 5 9 8 3] [9] [7 0 7] [2 4]]) -> [6 3 5 7 9 9 5 9 8 3 9 7 0 7 2 4]", "(join []) -> []", "(join [[0 5] [0 2 5] [3 0] [2] []]) -> [0 5 0 2 5 3 0 2]", "(join [[0 8 9] [2]]) -> [0 8 9 2]", "(join []) -> []", "(join [[0] [0 0] [9] [6 0 5 6 5] [1]]) -> [0 0 0 9 6 0 5 6 5 1]", "(join []) -> []", "(join [[2 1] [4 8 3 1]]) -> [2 1 4 8 3 1]", "(join [[] [1 9 0]]) -> [1 9 0]", "(join [[2 6 7] [9 5] [3 6 5 3 1] [6 8 4 2 2]]) -> [2 6 7 9 5 3 6 5 3 1 6 8 4 2 2]", "(join [[5 1 1] [9 1 3]]) -> [5 1 1 9 1 3]", "(join [[7 3] [2 2 3]]) -> [7 3 2 2 3]", "(join [[9 0] [2 3 3 4]]) -> [9 0 2 3 3 4]", "(join [[3 7] [9 7 8 1 8] [8 6 0] [9]]) -> [3 7 9 7 8 1 8 8 6 0 9]", "(join [[] [5] [1 8] [0 1 4 6] []]) -> [5 1 8 0 1 4 6]", "(join [[2 2] [1 9 0 8] [2]]) -> [2 2 1 9 0 8 2]", "(join [[7 0 8 5] [] []]) -> [7 0 8 5]", "(join [[] [4 2 1 8] [1] [] [1 0]]) -> [4 2 1 8 1 1 0]", "(join [[4 3 1 0] [5] [8 6 4]]) -> [4 3 1 0 5 8 6 4]", "(join []) -> []", "(join []) -> []", "(join [[] [1]]) -> [1]", "(join [[5] [7 2 5] []]) -> [5 7 2 5]", "(join [[5 2] [7 3 1 5] [7 0 5 6] [4 5 5 3]]) -> [5 2 7 3 1 5 7 0 5 6 4 5 5 3]", "(join [[6 9 3] [8 0 5 7] [4 9] [3 5 7 2 0]]) -> [6 9 3 8 0 5 7 4 9 3 5 7 2 0]", "(join [[5 4 0 8] [1 2 1] [2 0 1 5]]) -> [5 4 0 8 1 2 1 2 0 1 5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.926457}
{"examples": ["(join []) -> []", "(join [[] [6] [4 9 4 4] [1 7]]) -> [6 4 9 4 4 1 7]", "(join [[] [3 9 1 4 6] [4 0 9 1 5] [0 4 9 5] [3 0 0]]) -> [3 9 1 4 6 4 0 9 1 5 0 4 9 5 3 0 0]", "(join []) -> []", "(join [[7] [7 5 3 6] [6 9 8 4] [0 4 1] [1 4 8]]) -> [7 7 5 3 6 6 9 8 4 0 4 1 1 4 8]", "(join [[9 4] [5 9 8 2] [4] [4 6 4 4]]) -> [9 4 5 9 8 2 4 4 6 4 4]", "(join [[0 7 1] [3] [5] []]) -> [0 7 1 3 5]", "(join [[] [4 7] [3 9 2] [2 7] []]) -> [4 7 3 9 2 2 7]", "(join [[1 7 4] [0] [2 8] [] [5 8 6 9]]) -> [1 7 4 0 2 8 5 8 6 9]", "(join [[0 7 4] [] [4]]) -> [0 7 4 4]", "(join [[0 2 5 3 7] [] [0 0]]) -> [0 2 5 3 7 0 0]", "(join []) -> []", "(join [[] [6 6 7 6] [0] [2 4 6]]) -> [6 6 7 6 0 2 4 6]", "(join []) -> []", "(join []) -> []", "(join [[7 2 1] [3]]) -> [7 2 1 3]", "(join [[4 5 3 5] [4 8 0 6 1] [3 3]]) -> [4 5 3 5 4 8 0 6 1 3 3]", "(join [[3 3 9 8 5] [5 7 6 5] [] [4 3 2] [5 2 1]]) -> [3 3 9 8 5 5 7 6 5 4 3 2 5 2 1]", "(join [[2] [9 1 4 1 9] [5 8 0 7 0] [4 4 9 1]]) -> [2 9 1 4 1 9 5 8 0 7 0 4 4 9 1]", "(join [[] [] [4] [7 9 0 9 2]]) -> [4 7 9 0 9 2]", "(join [[8 3 6 1 5] [0] [3 5 3 3 7] [3 7 9] [2 3 0 3]]) -> [8 3 6 1 5 0 3 5 3 3 7 3 7 9 2 3 0 3]", "(join [[1] [] [8 9 1] [8 9 7 0 8] []]) -> [1 8 9 1 8 9 7 0 8]", "(join [[] [5 7 8 0] [2 8] [7 2 5] [1 9]]) -> [5 7 8 0 2 8 7 2 5 1 9]", "(join [[9 3 2 6]]) -> [9 3 2 6]", "(join [[2 7 7 1 7] [] [9 0 9] [0 9 1] [8]]) -> [2 7 7 1 7 9 0 9 0 9 1 8]", "(join []) -> []", "(join []) -> []", "(join [[0 8 4] []]) -> [0 8 4]", "(join [[5 2 4] [0]]) -> [5 2 4 0]", "(join [[] [8 6 1] [7 9] [0] [8 2 8]]) -> [8 6 1 7 9 0 8 2 8]", "(join [[1 6 1] [6 0 7] [4]]) -> [1 6 1 6 0 7 4]", "(join [[7 8 0 5] []]) -> [7 8 0 5]", "(join [[6 4 2 4] [9 2]]) -> [6 4 2 4 9 2]", "(join [[0 1 0] [3 0 8] [8] [5]]) -> [0 1 0 3 0 8 8 5]", "(join [[3 2] [9 0 9 6] []]) -> [3 2 9 0 9 6]", "(join [[2 0 8] [5 1]]) -> [2 0 8 5 1]", "(join [[2] [5] [0 1] []]) -> [2 5 0 1]", "(join [[8 1 3 0] [7] [] [7 1 0]]) -> [8 1 3 0 7 7 1 0]", "(join [[6 6 3] [2 9 9 3 2] [6 3 1 9 2] []]) -> [6 6 3 2 9 9 3 2 6 3 1 9 2]", "(join [[] [2 8 7 4]]) -> [2 8 7 4]", "(join [[7 1 7 7 8]]) -> [7 1 7 7 8]", "(join [[] [5 1 3 3 5]]) -> [5 1 3 3 5]", "(join [[1 6 7 6]]) -> [1 6 7 6]", "(join [[8 7 8 7]]) -> [8 7 8 7]", "(join [[1 1 8 4] [8] [7 3 4 6 2] [8]]) -> [1 1 8 4 8 7 3 4 6 2 8]", "(join []) -> []", "(join []) -> []", "(join [[4 1 8 3] [9] [5] [1] [0]]) -> [4 1 8 3 9 5 1 0]", "(join [[2 6 0] [6 0 4 2 1]]) -> [2 6 0 6 0 4 2 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.828649}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[2 6 6 1 3] [3 9 1] [0 0 5]]) -> [2 6 6 1 3 3 9 1 0 0 5]", "(join [[8 6 1 9] [7 0 2 1 2] [] [2 9]]) -> [8 6 1 9 7 0 2 1 2 2 9]", "(join [[0] [0 0] [] [0]]) -> [0 0 0 0]", "(join [[5] [5] [3 5 0]]) -> [5 5 3 5 0]", "(join [[5 7 4 3 8]]) -> [5 7 4 3 8]", "(join [[] [8 6 6 8 5] [7 5 8 7]]) -> [8 6 6 8 5 7 5 8 7]", "(join [[3 4 7 6]]) -> [3 4 7 6]", "(join [[4]]) -> [4]", "(join [[7] [4 7 8 4] [5 9 2 0]]) -> [7 4 7 8 4 5 9 2 0]", "(join [[6 8 4 1 9]]) -> [6 8 4 1 9]", "(join [[2 0] [] [1 1 8 6] [5 9 7 7]]) -> [2 0 1 1 8 6 5 9 7 7]", "(join []) -> []", "(join [[9 8 0 8] [4 3 7 7]]) -> [9 8 0 8 4 3 7 7]", "(join []) -> []", "(join []) -> []", "(join [[9 8 6 2] [8 8 7 1] [0 6]]) -> [9 8 6 2 8 8 7 1 0 6]", "(join [[3 7 2 0 1] [4 6 5 1 4] [9 0]]) -> [3 7 2 0 1 4 6 5 1 4 9 0]", "(join [[5] [] [6 2 6]]) -> [5 6 2 6]", "(join [[] [7 1 4]]) -> [7 1 4]", "(join []) -> []", "(join [[0] [8 2] [1 2 6]]) -> [0 8 2 1 2 6]", "(join [[1 1 3 3]]) -> [1 1 3 3]", "(join [[2 5 8 7 1] [0 5 6] [7 7 7] [2 4 4] [8]]) -> [2 5 8 7 1 0 5 6 7 7 7 2 4 4 8]", "(join [[3 5 6] [9 8 5 9] [2] [9]]) -> [3 5 6 9 8 5 9 2 9]", "(join [[6 2 9 4 8]]) -> [6 2 9 4 8]", "(join [[2 8 0] [5 5 3]]) -> [2 8 0 5 5 3]", "(join []) -> []", "(join [[9 7 2 4 5] [4] [9 2 6]]) -> [9 7 2 4 5 4 9 2 6]", "(join [[7 9 2 2 4]]) -> [7 9 2 2 4]", "(join [[3 6 5]]) -> [3 6 5]", "(join []) -> []", "(join [[8 2] [] [2] [6 1 6 3 3]]) -> [8 2 2 6 1 6 3 3]", "(join [[5 2 9 1]]) -> [5 2 9 1]", "(join [[2 5 2] [4 4 5]]) -> [2 5 2 4 4 5]", "(join [[4] [5 5 8 2 3]]) -> [4 5 5 8 2 3]", "(join [[3] [1 1 8]]) -> [3 1 1 8]", "(join [[3 4 8 2] [4 2 1 3 9] [4 0 8] [8] [2]]) -> [3 4 8 2 4 2 1 3 9 4 0 8 8 2]", "(join []) -> []", "(join [[0 3 7]]) -> [0 3 7]", "(join [[5 3] [8 1 4 2 0] [1 6 5] [1 7 2]]) -> [5 3 8 1 4 2 0 1 6 5 1 7 2]", "(join []) -> []", "(join [[1 3 3] [6] [7 9 6 4 2]]) -> [1 3 3 6 7 9 6 4 2]", "(join [[9] [8 7 5 6 1] [7 7 0 6] [6 0] [4 7]]) -> [9 8 7 5 6 1 7 7 0 6 6 0 4 7]", "(join [[5 9] [1 6] [1 9 7]]) -> [5 9 1 6 1 9 7]", "(join [[1] [4 2 6 1 2] [0 0] [] [6]]) -> [1 4 2 6 1 2 0 0 6]", "(join []) -> []", "(join [[] [0 7 5 5 4] [2 7 9] [] []]) -> [0 7 5 5 4 2 7 9]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.631939}
{"examples": ["(join []) -> []", "(join [[]]) -> []", "(join [[7] [7 5] []]) -> [7 7 5]", "(join [[8 0 9 5] [3]]) -> [8 0 9 5 3]", "(join []) -> []", "(join [[4 1 5 7 3] [7 7] [5 4] [1 0 9 6]]) -> [4 1 5 7 3 7 7 5 4 1 0 9 6]", "(join [[9 9 1 6] [1 0] [8 6 7 5 1] [] [5 2 8 0 7]]) -> [9 9 1 6 1 0 8 6 7 5 1 5 2 8 0 7]", "(join [[7 4 7 6] [9 1] [3 4 0] [7] [0 6 9 1 3]]) -> [7 4 7 6 9 1 3 4 0 7 0 6 9 1 3]", "(join [[] [2] [2] []]) -> [2 2]", "(join [[3 5 9 4] [7]]) -> [3 5 9 4 7]", "(join [[1 2 1] [0 7 9 4 1]]) -> [1 2 1 0 7 9 4 1]", "(join [[3 7 7] [3 5 9 0]]) -> [3 7 7 3 5 9 0]", "(join [[9 7 9] [6 9 5]]) -> [9 7 9 6 9 5]", "(join [[5] [8 6] [5 2 8 9 5] [3] [6 8]]) -> [5 8 6 5 2 8 9 5 3 6 8]", "(join [[7] [] [] [7 3 9 9] []]) -> [7 7 3 9 9]", "(join [[1 1 6 2] [2 3 7 3 5] [4 3 6 5] [8 6 2] [3 5 5 1]]) -> [1 1 6 2 2 3 7 3 5 4 3 6 5 8 6 2 3 5 5 1]", "(join [[7 1 7 0] [2 0 4] [9 7 7 6 6] [7 9 2 2 5] [4 0 2]]) -> [7 1 7 0 2 0 4 9 7 7 6 6 7 9 2 2 5 4 0 2]", "(join []) -> []", "(join [[2 0 7 8 2] [0 3 2 6 6] [0 9 5] [6 3 1 9 3] [1 6 5 8]]) -> [2 0 7 8 2 0 3 2 6 6 0 9 5 6 3 1 9 3 1 6 5 8]", "(join [[1] [6 0 4 1] [] [8 5 5 4 7] [2 7]]) -> [1 6 0 4 1 8 5 5 4 7 2 7]", "(join [[5 5 6 6] [6] [5 0 6 7] [2 3 6]]) -> [5 5 6 6 6 5 0 6 7 2 3 6]", "(join [[1 7 7] [8 2] [4 3 5 4]]) -> [1 7 7 8 2 4 3 5 4]", "(join [[8] [9 7 1] [5 4 3] [6 0 7 9 2]]) -> [8 9 7 1 5 4 3 6 0 7 9 2]", "(join [[2 3 2] [5] [8 1 1 3]]) -> [2 3 2 5 8 1 1 3]", "(join []) -> []", "(join [[]]) -> []", "(join [[7 6 3] [5] [7 2 4 3] [8 0 6 5 2]]) -> [7 6 3 5 7 2 4 3 8 0 6 5 2]", "(join [[9 8 8 6 9] [2 9 7 7 8] [] []]) -> [9 8 8 6 9 2 9 7 7 8]", "(join [[9 7] [4] [8 8] [6 8 0 8 1] [0 4]]) -> [9 7 4 8 8 6 8 0 8 1 0 4]", "(join [[1 4 9 1 1] [9 8 0 7] [7 1 7 1]]) -> [1 4 9 1 1 9 8 0 7 7 1 7 1]", "(join [[4 3]]) -> [4 3]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[3 5 0] [9 6] [9 6] [2]]) -> [3 5 0 9 6 9 6 2]", "(join [[6 8 0] [6 2 5 0 2] [6] [8 5] [2]]) -> [6 8 0 6 2 5 0 2 6 8 5 2]", "(join [[7 1 2 7 2] [9 8 2 2]]) -> [7 1 2 7 2 9 8 2 2]", "(join [[2 4 3 3] [] [0 1]]) -> [2 4 3 3 0 1]", "(join [[2] [] [4 9 2 9 0]]) -> [2 4 9 2 9 0]", "(join [[0 1] [9] [3 2 5]]) -> [0 1 9 3 2 5]", "(join []) -> []", "(join [[] [7]]) -> [7]", "(join [[] [7 2 2 7 8]]) -> [7 2 2 7 8]", "(join [[] [3] [8 3 7 0 7] [3 7 6 9] [9]]) -> [3 8 3 7 0 7 3 7 6 9 9]", "(join [[3] [5 3 2]]) -> [3 5 3 2]", "(join [[4 0 5] [8 4 2 4] [9 2 4 9 5] [6 0]]) -> [4 0 5 8 4 2 4 9 2 4 9 5 6 0]", "(join [[] [7] [8 6 4 6 3] [8 6 4 3 6] [6 1 7 6 7]]) -> [7 8 6 4 6 3 8 6 4 3 6 6 1 7 6 7]", "(join [[7 7 8] [7 1 8 4] [0 8 1]]) -> [7 7 8 7 1 8 4 0 8 1]", "(join [[1] [3 9]]) -> [1 3 9]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.565643}
{"examples": ["(join []) -> []", "(join [[7 2 8] [5 3 1 5] [] [7] [6]]) -> [7 2 8 5 3 1 5 7 6]", "(join [[5] [7 8 8 4]]) -> [5 7 8 8 4]", "(join [[7 2 5] [] [4 6 1]]) -> [7 2 5 4 6 1]", "(join []) -> []", "(join [[6] [] [3 0 0] [5 5 9 4]]) -> [6 3 0 0 5 5 9 4]", "(join [[9 7 1 2]]) -> [9 7 1 2]", "(join [[6] [4 4 2]]) -> [6 4 4 2]", "(join [[1 2] [9 7 1 1 4]]) -> [1 2 9 7 1 1 4]", "(join [[2] [0] [0 6 5 6] [] []]) -> [2 0 0 6 5 6]", "(join [[4 1 7 6 4]]) -> [4 1 7 6 4]", "(join [[5 4 2] [4 4 4 1 0] [4 8 8]]) -> [5 4 2 4 4 4 1 0 4 8 8]", "(join []) -> []", "(join []) -> []", "(join [[8 2 6 5] [6 2 6 1] [9 8 3 0]]) -> [8 2 6 5 6 2 6 1 9 8 3 0]", "(join [[0 6]]) -> [0 6]", "(join [[5] [6 4 6 5 6]]) -> [5 6 4 6 5 6]", "(join [[7 1 6 3 3] [1 0]]) -> [7 1 6 3 3 1 0]", "(join [[3 1 4 7] [3]]) -> [3 1 4 7 3]", "(join [[1 4 5 1 4] [] [7 9 4 9] [1] [3 8 9 6 8]]) -> [1 4 5 1 4 7 9 4 9 1 3 8 9 6 8]", "(join [[6 7 2 0] [7 9 4 1 7] [3 5 5 3 2]]) -> [6 7 2 0 7 9 4 1 7 3 5 5 3 2]", "(join [[3 6]]) -> [3 6]", "(join [[3 9 2] [4 9] [] [0 4 8 0] [3 3 2 2]]) -> [3 9 2 4 9 0 4 8 0 3 3 2 2]", "(join [[] [1 9 5 5 0]]) -> [1 9 5 5 0]", "(join [[5 6 0]]) -> [5 6 0]", "(join [[4 9 9] [6] []]) -> [4 9 9 6]", "(join [[4 7] [2] [7] [4 9 8 8]]) -> [4 7 2 7 4 9 8 8]", "(join [[0 3 1 7]]) -> [0 3 1 7]", "(join [[1 6 3 4] [3 2] []]) -> [1 6 3 4 3 2]", "(join [[] [0 3 3 2 5]]) -> [0 3 3 2 5]", "(join [[8 3 6 3]]) -> [8 3 6 3]", "(join []) -> []", "(join [[5 3 7 2] [5 2] [7 9 5 4] [4] []]) -> [5 3 7 2 5 2 7 9 5 4 4]", "(join [[1 2 3]]) -> [1 2 3]", "(join [[0] [1 6 9 1 3] []]) -> [0 1 6 9 1 3]", "(join [[1]]) -> [1]", "(join []) -> []", "(join [[2 3] [9 9] [9 4 4 6 6]]) -> [2 3 9 9 9 4 4 6 6]", "(join [[8 7] [8 9]]) -> [8 7 8 9]", "(join [[5 8 0 4] [9] [0 9 5 9]]) -> [5 8 0 4 9 0 9 5 9]", "(join [[9 4 7] [0 6 5]]) -> [9 4 7 0 6 5]", "(join [[7 5] [1 5 3] [1 5 5 5 2] [4 5 7 3] [0 5 5]]) -> [7 5 1 5 3 1 5 5 5 2 4 5 7 3 0 5 5]", "(join [[7 3 8 0 3] [8 1 3 8 7]]) -> [7 3 8 0 3 8 1 3 8 7]", "(join [[8] [4 8 5 7] []]) -> [8 4 8 5 7]", "(join []) -> []", "(join []) -> []", "(join [[5 3 1] [3 5] [] [3] [9 2 8]]) -> [5 3 1 3 5 3 9 2 8]", "(join []) -> []", "(join [[] [0 5] [] [8 6 4 1]]) -> [0 5 8 6 4 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.61488}
{"examples": ["(join []) -> []", "(join [[8 8] [1 5 1 8 7] [8 8 8 2 0] [3 1 5 9]]) -> [8 8 1 5 1 8 7 8 8 8 2 0 3 1 5 9]", "(join [[0 7 3 5]]) -> [0 7 3 5]", "(join [[9 7 2 5] [] [6 5 8 6 6]]) -> [9 7 2 5 6 5 8 6 6]", "(join [[7] [2 5 8] [1 8 3 7 1] [] [4 6 2 7 3]]) -> [7 2 5 8 1 8 3 7 1 4 6 2 7 3]", "(join [[9 0 3] [] [3 8] [9 3 3 7 5] [0 1 1 1 2]]) -> [9 0 3 3 8 9 3 3 7 5 0 1 1 1 2]", "(join []) -> []", "(join [[] [5] [5 7 0 1] [1 8 8 9 0]]) -> [5 5 7 0 1 1 8 8 9 0]", "(join [[7 4] []]) -> [7 4]", "(join [[5 1] [8] [3] [8 3]]) -> [5 1 8 3 8 3]", "(join [[3]]) -> [3]", "(join [[8 0 1 5 5] [7 1 7]]) -> [8 0 1 5 5 7 1 7]", "(join [[4 0 1] [0 4] [3 9 1] [4 3 4 5 9] [9]]) -> [4 0 1 0 4 3 9 1 4 3 4 5 9 9]", "(join [[9]]) -> [9]", "(join [[5 6] [5] [8 3 7 5 5] [1]]) -> [5 6 5 8 3 7 5 5 1]", "(join [[] [7 5 0 5] [9 6 6 6]]) -> [7 5 0 5 9 6 6 6]", "(join [[6 0]]) -> [6 0]", "(join [[2 1 0 1 0] [3 0]]) -> [2 1 0 1 0 3 0]", "(join [[4 6 0 7 0] [9 1 6 1 1] [] [4]]) -> [4 6 0 7 0 9 1 6 1 1 4]", "(join [[] [4]]) -> [4]", "(join [[4 1]]) -> [4 1]", "(join [[7 0] [0 4]]) -> [7 0 0 4]", "(join [[3] [] [7 0]]) -> [3 7 0]", "(join [[3 9 3] [3 1 9 4]]) -> [3 9 3 3 1 9 4]", "(join [[5 3 7 6] []]) -> [5 3 7 6]", "(join [[2 0 4 5] [] [8 4] [4 3 3 4 4] [4 0 2 8 5]]) -> [2 0 4 5 8 4 4 3 3 4 4 4 0 2 8 5]", "(join [[3 6] [9 4] [6 8] [3 7 0 9] [1 8 3 4]]) -> [3 6 9 4 6 8 3 7 0 9 1 8 3 4]", "(join [[8 7 8] [5] [3 8 0 9] [6 5]]) -> [8 7 8 5 3 8 0 9 6 5]", "(join [[5 0 3 4 9] [3 2 7 5 7] [2 4 9 9 4] []]) -> [5 0 3 4 9 3 2 7 5 7 2 4 9 9 4]", "(join [[1 5 2]]) -> [1 5 2]", "(join [[]]) -> []", "(join [[4 7 9 9] [3 5 6] [3 3 7 9] [8 8]]) -> [4 7 9 9 3 5 6 3 3 7 9 8 8]", "(join [[2 6 6 6] [5 4 2] [8 4 1 7]]) -> [2 6 6 6 5 4 2 8 4 1 7]", "(join [[6 7 7 4 0] [5 4 9]]) -> [6 7 7 4 0 5 4 9]", "(join [[4 9 9 9 5] [2 4 3 1] [5] [9 3 9] []]) -> [4 9 9 9 5 2 4 3 1 5 9 3 9]", "(join [[] [] [3 1 6 1] [7 3 3 4]]) -> [3 1 6 1 7 3 3 4]", "(join [[9 4] [9 1]]) -> [9 4 9 1]", "(join [[2 6 7 1 4] [2] [0] [7 5 0 4] [7 7]]) -> [2 6 7 1 4 2 0 7 5 0 4 7 7]", "(join [[3 7] [2 9 0 1 8] [4 4 6 4] [5 9] [5 2 5 9]]) -> [3 7 2 9 0 1 8 4 4 6 4 5 9 5 2 5 9]", "(join [[9 1 6]]) -> [9 1 6]", "(join [[6 5 3]]) -> [6 5 3]", "(join [[7 8 6 2]]) -> [7 8 6 2]", "(join [[7] [8 2 3] [4 3 4]]) -> [7 8 2 3 4 3 4]", "(join [[2 6] [5 8] [6]]) -> [2 6 5 8 6]", "(join [[0 3 0 0] [2 0] [1]]) -> [0 3 0 0 2 0 1]", "(join [[] [2 7]]) -> [2 7]", "(join []) -> []", "(join [[3 8] [2 9 7] [4 7 9] [2]]) -> [3 8 2 9 7 4 7 9 2]", "(join [[2 2] [] [2 4 2 9 9] [1]]) -> [2 2 2 4 2 9 9 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.767029}
{"examples": ["(join []) -> []", "(join [[5] [] [2 4 9] [0 8 5 5] [3 5 4 0]]) -> [5 2 4 9 0 8 5 5 3 5 4 0]", "(join [[9] [6 4 5 8 9] [3 4 1 5 8]]) -> [9 6 4 5 8 9 3 4 1 5 8]", "(join [[4 6 8 0 0] [8 8 5 0] [3 2 9 9] []]) -> [4 6 8 0 0 8 8 5 0 3 2 9 9]", "(join [[] [9 8] [3 6 3 9 5]]) -> [9 8 3 6 3 9 5]", "(join [[7 1 6]]) -> [7 1 6]", "(join [[5 7 6] [5] [] [6 9 0 4] [9]]) -> [5 7 6 5 6 9 0 4 9]", "(join [[] [] [3] [3 4 8] [9 8 3]]) -> [3 3 4 8 9 8 3]", "(join [[] [5] [] [9 6 4] [0]]) -> [5 9 6 4 0]", "(join []) -> []", "(join []) -> []", "(join [[8 4 3 0] [1 1 6 8] [6 8] []]) -> [8 4 3 0 1 1 6 8 6 8]", "(join [[6] [4 9] [7 4 4 2 5] [9 4 1 9 0]]) -> [6 4 9 7 4 4 2 5 9 4 1 9 0]", "(join []) -> []", "(join [[4 2 7] [7 4 7] [7 2 3 9] [3 5]]) -> [4 2 7 7 4 7 7 2 3 9 3 5]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[7 8 8] [2 4 5 5 4] [7 9 6] [7 2 9 1] [2 7 8 5 6]]) -> [7 8 8 2 4 5 5 4 7 9 6 7 2 9 1 2 7 8 5 6]", "(join [[2 9 8] [] [5] [7 6]]) -> [2 9 8 5 7 6]", "(join []) -> []", "(join [[6] [1 0 1 7] [5 9]]) -> [6 1 0 1 7 5 9]", "(join [[2 0 6 1] [6 4 0]]) -> [2 0 6 1 6 4 0]", "(join [[5 4 7 6 1] [6 1 3] [2 4 6 1] [7 0 1] [9 6 7]]) -> [5 4 7 6 1 6 1 3 2 4 6 1 7 0 1 9 6 7]", "(join [[5 6 6 1] [1 1]]) -> [5 6 6 1 1 1]", "(join [[1 9]]) -> [1 9]", "(join [[1 2 1 1 9] [0 9 2] [9 5 2 5 1] [3 8 4] [7 5 8 2 8]]) -> [1 2 1 1 9 0 9 2 9 5 2 5 1 3 8 4 7 5 8 2 8]", "(join [[8 4] [8 5 7 7] [6 7 5 3]]) -> [8 4 8 5 7 7 6 7 5 3]", "(join [[9 5 8 7 3] [2 9] [0 7]]) -> [9 5 8 7 3 2 9 0 7]", "(join [[9] [6 7 8 7]]) -> [9 6 7 8 7]", "(join [[] [6 1 2] [0 8 3 4] [7 9] [6 9]]) -> [6 1 2 0 8 3 4 7 9 6 9]", "(join [[7 5 9 6 3] [] [6 6]]) -> [7 5 9 6 3 6 6]", "(join [[1 5 9 1 4] [5 0 6 7]]) -> [1 5 9 1 4 5 0 6 7]", "(join [[9] [5]]) -> [9 5]", "(join [[0 4 5 9 1] [3 2 3] [] [4 5 7]]) -> [0 4 5 9 1 3 2 3 4 5 7]", "(join [[5 5]]) -> [5 5]", "(join [[5 9 0] [1 6] [6 3 7 7] [3 8 0 9]]) -> [5 9 0 1 6 6 3 7 7 3 8 0 9]", "(join [[2 7 4] [6 7 8] []]) -> [2 7 4 6 7 8]", "(join [[7 4] [] [1 6 4] [6 0 2] [7 3 8]]) -> [7 4 1 6 4 6 0 2 7 3 8]", "(join [[5] [2 5 9 5] [] [1 6 3 3]]) -> [5 2 5 9 5 1 6 3 3]", "(join [[3 1 8] [7 7 6] [4 2 4 6 2] [6 5 1 2 3] [7 6 8 0 9]]) -> [3 1 8 7 7 6 4 2 4 6 2 6 5 1 2 3 7 6 8 0 9]", "(join [[3 8 0 6] [8 9 0] [] [9 7 5]]) -> [3 8 0 6 8 9 0 9 7 5]", "(join [[5 2 2 5] [] [7 7 2 8 5] [2 3]]) -> [5 2 2 5 7 7 2 8 5 2 3]", "(join [[2 7 3 7 2] [8 8 7 9] [] [2 3 6 7 6] [4 4 9 8]]) -> [2 7 3 7 2 8 8 7 9 2 3 6 7 6 4 4 9 8]", "(join [[7 8] [2 5 1 2] [] [6 2 9] [3 4 1]]) -> [7 8 2 5 1 2 6 2 9 3 4 1]", "(join [[7 7 8] [8 0 6 6] [1 9 9 7 4] [3]]) -> [7 7 8 8 0 6 6 1 9 9 7 4 3]", "(join [[1] [8 0 2 1]]) -> [1 8 0 2 1]", "(join []) -> []", "(join [[]]) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.564756}
{"examples": ["(join []) -> []", "(join [[] [3 1 8 7]]) -> [3 1 8 7]", "(join [[9] [3 8 7 4]]) -> [9 3 8 7 4]", "(join [[2 5 5 4 9] [1 2 8] [9] [5 0]]) -> [2 5 5 4 9 1 2 8 9 5 0]", "(join []) -> []", "(join [[7 8 0 8 5] [3 3 1 2 4] [6 7] [0 0 7 2]]) -> [7 8 0 8 5 3 3 1 2 4 6 7 0 0 7 2]", "(join [[5 8 4] [2]]) -> [5 8 4 2]", "(join [[0 7 9 7 3] [9] [7] [7 7 8 5 6]]) -> [0 7 9 7 3 9 7 7 7 8 5 6]", "(join []) -> []", "(join []) -> []", "(join [[7 0]]) -> [7 0]", "(join [[4 5 4 9 3] [9] [7]]) -> [4 5 4 9 3 9 7]", "(join [[4 8 6 5 7] [8 7]]) -> [4 8 6 5 7 8 7]", "(join []) -> []", "(join [[1 9] [0 9] []]) -> [1 9 0 9]", "(join [[7] [6 8 0] [5 8 7]]) -> [7 6 8 0 5 8 7]", "(join []) -> []", "(join []) -> []", "(join [[7 9 6 9] [8] []]) -> [7 9 6 9 8]", "(join [[7 6 6 1 8] [2] [9 6 4]]) -> [7 6 6 1 8 2 9 6 4]", "(join [[9 0] [7 1 0] [3 8] [3 5] [0 2 7 9]]) -> [9 0 7 1 0 3 8 3 5 0 2 7 9]", "(join [[7 5 4 5 9]]) -> [7 5 4 5 9]", "(join [[8 9 3] [] [] [] [6]]) -> [8 9 3 6]", "(join []) -> []", "(join [[7 7]]) -> [7 7]", "(join [[]]) -> []", "(join []) -> []", "(join [[] [2] [5] []]) -> [2 5]", "(join [[6 3] [6]]) -> [6 3 6]", "(join [[6 7] [] [9] [] [7 2 6]]) -> [6 7 9 7 2 6]", "(join [[5 3] [4 5 4]]) -> [5 3 4 5 4]", "(join [[9] [3 9 9 3]]) -> [9 3 9 9 3]", "(join []) -> []", "(join [[2 9 3 0 0] []]) -> [2 9 3 0 0]", "(join []) -> []", "(join [[] [2 2 2]]) -> [2 2 2]", "(join []) -> []", "(join [[7] []]) -> [7]", "(join [[] [] [1] [] [1 8]]) -> [1 1 8]", "(join [[0 8] [7 6] [9 9] [0 6 9 5 4]]) -> [0 8 7 6 9 9 0 6 9 5 4]", "(join [[6 3]]) -> [6 3]", "(join [[5 2] [0 2] [0] [1]]) -> [5 2 0 2 0 1]", "(join [[7 0 7 1 6] [1 0 4] [4]]) -> [7 0 7 1 6 1 0 4 4]", "(join []) -> []", "(join [[6] [0 1 4]]) -> [6 0 1 4]", "(join [[] [2 6 1 1 3] [9 3 5 3 3]]) -> [2 6 1 1 3 9 3 5 3 3]", "(join []) -> []", "(join [[9 2] [0 3 6 9 8]]) -> [9 2 0 3 6 9 8]", "(join [[1 8 5 2 3] [5 7 7]]) -> [1 8 5 2 3 5 7 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.48721}
{"examples": ["(join []) -> []", "(join [[8 5] [0] []]) -> [8 5 0]", "(join []) -> []", "(join [[8 8]]) -> [8 8]", "(join [[9 7 0 6] [3 0] [3 1 2]]) -> [9 7 0 6 3 0 3 1 2]", "(join [[] [1 9 1] []]) -> [1 9 1]", "(join [[5] [1] [] [1 3] [2 6 0 3]]) -> [5 1 1 3 2 6 0 3]", "(join [[9 0] [8]]) -> [9 0 8]", "(join [[0 2 3 0] [7 0 9]]) -> [0 2 3 0 7 0 9]", "(join [[2 1 8] [] [5 5 0 9 7]]) -> [2 1 8 5 5 0 9 7]", "(join [[0 4 7 0 0] [3 5 0] [2 6 1 3] [3 1 1]]) -> [0 4 7 0 0 3 5 0 2 6 1 3 3 1 1]", "(join [[2 1 6 8 7] [8]]) -> [2 1 6 8 7 8]", "(join [[1 5]]) -> [1 5]", "(join [[7 3] [3 7] [] [5 6 9]]) -> [7 3 3 7 5 6 9]", "(join []) -> []", "(join [[5 2] [2 0 8 3 3] [2 9 4]]) -> [5 2 2 0 8 3 3 2 9 4]", "(join []) -> []", "(join []) -> []", "(join [[0 8] [5]]) -> [0 8 5]", "(join []) -> []", "(join [[5 6 5 3 1] []]) -> [5 6 5 3 1]", "(join [[] [5 1] [6]]) -> [5 1 6]", "(join []) -> []", "(join [[4] [9 6 2 0] [9] [2 2 3 7 4]]) -> [4 9 6 2 0 9 2 2 3 7 4]", "(join [[7 3 7] [6 1 1 9] [] [8]]) -> [7 3 7 6 1 1 9 8]", "(join [[7 3 6 7 7]]) -> [7 3 6 7 7]", "(join [[1]]) -> [1]", "(join [[4 0 4 5 1] [4 4] [8 4 1]]) -> [4 0 4 5 1 4 4 8 4 1]", "(join [[] [9]]) -> [9]", "(join [[8 7 3 0] [4 1] [] [4 7] [7 1 2]]) -> [8 7 3 0 4 1 4 7 7 1 2]", "(join [[1 0 7 8] [6 8 5 5] [4 1 2 7] [3]]) -> [1 0 7 8 6 8 5 5 4 1 2 7 3]", "(join [[7 1] [7 4 1] [4 0 2 9]]) -> [7 1 7 4 1 4 0 2 9]", "(join [[2 7 9] [0 2]]) -> [2 7 9 0 2]", "(join [[1] [8]]) -> [1 8]", "(join [[5 3 3 9 6]]) -> [5 3 3 9 6]", "(join [[8 7] [9]]) -> [8 7 9]", "(join [[0 3 0 5] [1] [7] []]) -> [0 3 0 5 1 7]", "(join [[0 6 2 8]]) -> [0 6 2 8]", "(join [[9 2 6 5]]) -> [9 2 6 5]", "(join [[1 7 3 8 7] [6 0 4 1] [5 2 3 8] [5 8 5 2]]) -> [1 7 3 8 7 6 0 4 1 5 2 3 8 5 8 5 2]", "(join [[8 0 6] [7 9 1 3 3] [3 9 1 2 2]]) -> [8 0 6 7 9 1 3 3 3 9 1 2 2]", "(join [[4] [7 4 0 9] [1 7 2 4 2] []]) -> [4 7 4 0 9 1 7 2 4 2]", "(join [[] [1 4 4] [3 2 3] []]) -> [1 4 4 3 2 3]", "(join [[8] [] [8] [5 9 9] [1 3]]) -> [8 8 5 9 9 1 3]", "(join [[3 9 7 0 0] [0 9 1 9 8] [5 2] [7 2 1] [7 5 1]]) -> [3 9 7 0 0 0 9 1 9 8 5 2 7 2 1 7 5 1]", "(join [[4 1 5 1] [7 4 0] [8 5] [5 3]]) -> [4 1 5 1 7 4 0 8 5 5 3]", "(join [[6] [0 3 8] [9 6 7 5] [3 2 0 7 3]]) -> [6 0 3 8 9 6 7 5 3 2 0 7 3]", "(join []) -> []", "(join [[]]) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.868709}
{"examples": ["(join []) -> []", "(join [[1 0 0 8 8] [1 5 1 8] []]) -> [1 0 0 8 8 1 5 1 8]", "(join [[1 9] [2 5 0]]) -> [1 9 2 5 0]", "(join [[] []]) -> []", "(join [[9 1 4 5 4] [7]]) -> [9 1 4 5 4 7]", "(join [[1 9] [2 4 7 7] []]) -> [1 9 2 4 7 7]", "(join []) -> []", "(join [[6 1]]) -> [6 1]", "(join [[6 4 6 7] [3 6] [3] [1 8 1 0]]) -> [6 4 6 7 3 6 3 1 8 1 0]", "(join [[1 0] [9 4 9 6] [1 0 7 9] [2] [0 5 5]]) -> [1 0 9 4 9 6 1 0 7 9 2 0 5 5]", "(join [[3 9 0 7] [1 3 7 3] []]) -> [3 9 0 7 1 3 7 3]", "(join [[1 6 6 2] [8 2] []]) -> [1 6 6 2 8 2]", "(join [[0 5]]) -> [0 5]", "(join [[1 1]]) -> [1 1]", "(join []) -> []", "(join [[2 3] [5 1 9 8 9] [2 6 1 9] [6 3 2 8 0] [7 8 7]]) -> [2 3 5 1 9 8 9 2 6 1 9 6 3 2 8 0 7 8 7]", "(join []) -> []", "(join [[0 0 0] [4 5 9 5 3]]) -> [0 0 0 4 5 9 5 3]", "(join []) -> []", "(join [[9 5 2 0] [2 9 7] [] [9 0 0 9 6] [1]]) -> [9 5 2 0 2 9 7 9 0 0 9 6 1]", "(join [[8 0 1] [5 5 4] [] [1]]) -> [8 0 1 5 5 4 1]", "(join []) -> []", "(join [[0]]) -> [0]", "(join []) -> []", "(join [[] [7 2 6 1] [0 0 6 6] [] [5]]) -> [7 2 6 1 0 0 6 6 5]", "(join [[6] [3 7] [7 0 4 8 3] [3 7 2 0 7]]) -> [6 3 7 7 0 4 8 3 3 7 2 0 7]", "(join [[7 3 1 7] []]) -> [7 3 1 7]", "(join [[] [1 6] [2 2 7] [0 1 9] [7 0 0]]) -> [1 6 2 2 7 0 1 9 7 0 0]", "(join []) -> []", "(join [[7 9 9 9] [2] [8 9 7 1]]) -> [7 9 9 9 2 8 9 7 1]", "(join []) -> []", "(join [[3] [] [3 2 1 0 4]]) -> [3 3 2 1 0 4]", "(join [[8] [7 4 4 3] [4 9] []]) -> [8 7 4 4 3 4 9]", "(join [[2 6 2 6]]) -> [2 6 2 6]", "(join []) -> []", "(join [[2 3 9 4 5] [3 3 7]]) -> [2 3 9 4 5 3 3 7]", "(join [[8 5 1 5] [6 9 0] [3 1 1 4 1] [3 2]]) -> [8 5 1 5 6 9 0 3 1 1 4 1 3 2]", "(join []) -> []", "(join [[7 1 5] [8 6 7 5 1] [2 5 1]]) -> [7 1 5 8 6 7 5 1 2 5 1]", "(join []) -> []", "(join [[7] [] []]) -> [7]", "(join [[8 7 6 1 7] [8 0 0 2 6]]) -> [8 7 6 1 7 8 0 0 2 6]", "(join [[]]) -> []", "(join [[6] [2 0 8 1 0] [8 9 8 4 4]]) -> [6 2 0 8 1 0 8 9 8 4 4]", "(join [[9 1] [] [0 9 2 4] [2 7] [5 1]]) -> [9 1 0 9 2 4 2 7 5 1]", "(join []) -> []", "(join [[7 2 5 6] [0 3]]) -> [7 2 5 6 0 3]", "(join []) -> []", "(join [[7 2 2] [2] [1] [3] [4 5 6 8 1]]) -> [7 2 2 2 1 3 4 5 6 8 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.843568}
{"examples": ["(join []) -> []", "(join [[6 4 7 7 7]]) -> [6 4 7 7 7]", "(join [[2 4 9 7] [0 5 4] [6] [2 8] [5]]) -> [2 4 9 7 0 5 4 6 2 8 5]", "(join [[9]]) -> [9]", "(join [[7] [1 2 9]]) -> [7 1 2 9]", "(join [[1 5 5 0] [9 6 0 1] [0 5 9 1] [5 8 1 8 1] [7 8 9 8 5]]) -> [1 5 5 0 9 6 0 1 0 5 9 1 5 8 1 8 1 7 8 9 8 5]", "(join [[8] [2]]) -> [8 2]", "(join [[7 4 8 3 1] [] [9 9] [4 4] [1 1 4 2 6]]) -> [7 4 8 3 1 9 9 4 4 1 1 4 2 6]", "(join [[3 9 1 5]]) -> [3 9 1 5]", "(join [[5 4 8 8] [0] [2 1 2 7] [9 0 8] [0 4 6]]) -> [5 4 8 8 0 2 1 2 7 9 0 8 0 4 6]", "(join [[1] [0 1 9] [5 4 6 8 2] [4 5 3 3]]) -> [1 0 1 9 5 4 6 8 2 4 5 3 3]", "(join []) -> []", "(join [[3 6 6] [0 6 3 4] [] [0 8 9]]) -> [3 6 6 0 6 3 4 0 8 9]", "(join [[9] [0 5] [0 2 5 6 1] [3 9 8 4] [0 8 9 4]]) -> [9 0 5 0 2 5 6 1 3 9 8 4 0 8 9 4]", "(join [[5 8]]) -> [5 8]", "(join []) -> []", "(join [[7 3 6] []]) -> [7 3 6]", "(join [[1 2 1 8] [7 8] [0 6 2 7 3] [5 1 4 5] [6 0]]) -> [1 2 1 8 7 8 0 6 2 7 3 5 1 4 5 6 0]", "(join [[9 7 3 3] [2] [9] [9 6]]) -> [9 7 3 3 2 9 9 6]", "(join []) -> []", "(join [[3]]) -> [3]", "(join [[] [1 4] [0 7]]) -> [1 4 0 7]", "(join [[6 3] [8 5]]) -> [6 3 8 5]", "(join [[3 0 5] [3 1 8] [0 0 3 0 7] [6 0 2]]) -> [3 0 5 3 1 8 0 0 3 0 7 6 0 2]", "(join [[1] [8 1] [1 2 8] [4 1 1 4]]) -> [1 8 1 1 2 8 4 1 1 4]", "(join [[] [2 2 2 9 6]]) -> [2 2 2 9 6]", "(join [[2]]) -> [2]", "(join [[7 1] [2 7] [3 5 6 0] []]) -> [7 1 2 7 3 5 6 0]", "(join [[]]) -> []", "(join [[] [5 2] [2 2 5 1] [1 7 4 4] [7 1]]) -> [5 2 2 2 5 1 1 7 4 4 7 1]", "(join [[3] [0]]) -> [3 0]", "(join [[0 1 0 3]]) -> [0 1 0 3]", "(join []) -> []", "(join [[2 5 0 5] [7 7]]) -> [2 5 0 5 7 7]", "(join [[1 7 5]]) -> [1 7 5]", "(join [[9 8 7 5 1]]) -> [9 8 7 5 1]", "(join [[2 3] [8] []]) -> [2 3 8]", "(join [[3 9 1] [9 8 5 5 8] [4]]) -> [3 9 1 9 8 5 5 8 4]", "(join [[7 9 1 8] []]) -> [7 9 1 8]", "(join [[6 7] [8] [8] [2] [7 6]]) -> [6 7 8 8 2 7 6]", "(join []) -> []", "(join [[] [0 3 9] [8 9 0 4 5] [7]]) -> [0 3 9 8 9 0 4 5 7]", "(join [[2 3 7] []]) -> [2 3 7]", "(join [[] [] [8 8 8 3] [0 3 9 4] [3 1 1 6]]) -> [8 8 8 3 0 3 9 4 3 1 1 6]", "(join [[9 1 0 3 9]]) -> [9 1 0 3 9]", "(join [[1] [] []]) -> [1]", "(join []) -> []", "(join [[3 1] [9 7 5] [] [2 4 8 8]]) -> [3 1 9 7 5 2 4 8 8]", "(join [[5 1 7 6 4] [7 2 0 8 4] [1] [6 3 0 4]]) -> [5 1 7 6 4 7 2 0 8 4 1 6 3 0 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.499576}
{"examples": ["(join []) -> []", "(join [[] [6 1 0 4 4] [7 0 7 6 9]]) -> [6 1 0 4 4 7 0 7 6 9]", "(join [[8 9] [0 4 1] [6 9 6 0 3] []]) -> [8 9 0 4 1 6 9 6 0 3]", "(join []) -> []", "(join [[1 8] [9]]) -> [1 8 9]", "(join [[8 4 5 0] [8 9 9] [9 6] [0 7 1 7]]) -> [8 4 5 0 8 9 9 9 6 0 7 1 7]", "(join [[8 0 9 5] [6 3] [8 4 1 1 1] [5 8 0 1 2]]) -> [8 0 9 5 6 3 8 4 1 1 1 5 8 0 1 2]", "(join []) -> []", "(join []) -> []", "(join [[5 9 7 3] [] [] [2] [8]]) -> [5 9 7 3 2 8]", "(join [[7] [0] [9 1] [9 8 1] []]) -> [7 0 9 1 9 8 1]", "(join [[0 6]]) -> [0 6]", "(join []) -> []", "(join [[5 9] [5 3 0 7] [7 3 6 8] [2 2 3 8 2]]) -> [5 9 5 3 0 7 7 3 6 8 2 2 3 8 2]", "(join [[7 7] [1] [1] [7 1 4 4]]) -> [7 7 1 1 7 1 4 4]", "(join [[] [2 6 7 7 2] []]) -> [2 6 7 7 2]", "(join [[0 3 4 6 9] [] [3]]) -> [0 3 4 6 9 3]", "(join [[1]]) -> [1]", "(join [[0 7 4 6]]) -> [0 7 4 6]", "(join [[4 7 3 0 0] [4 8] [8] [7 6] [9]]) -> [4 7 3 0 0 4 8 8 7 6 9]", "(join []) -> []", "(join [[8 9] [8 3 5 2 1] [4 9 3 0 3] [5 2 3 1 2]]) -> [8 9 8 3 5 2 1 4 9 3 0 3 5 2 3 1 2]", "(join [[1]]) -> [1]", "(join [[] [9] [4] [0] [4 3 2]]) -> [9 4 0 4 3 2]", "(join []) -> []", "(join [[0 1]]) -> [0 1]", "(join []) -> []", "(join [[3 8 0] [0 2] [] [7] [8 3 2 4]]) -> [3 8 0 0 2 7 8 3 2 4]", "(join [[2] [] [7 7 3] [4 3 4 9] [6 4 8 2 6]]) -> [2 7 7 3 4 3 4 9 6 4 8 2 6]", "(join []) -> []", "(join [[] [] [6 5 1] [7 2 2]]) -> [6 5 1 7 2 2]", "(join []) -> []", "(join [[1 3 4 8 4]]) -> [1 3 4 8 4]", "(join [[3 8 4] [6 2 7 1 7] [2 9]]) -> [3 8 4 6 2 7 1 7 2 9]", "(join [[7]]) -> [7]", "(join [[8 6] [1 4]]) -> [8 6 1 4]", "(join [[8 6 8 8 2] []]) -> [8 6 8 8 2]", "(join [[2 0 8 8] [1 3 4 2 2] [] [] [9]]) -> [2 0 8 8 1 3 4 2 2 9]", "(join [[7 1 4] [9 9] [2 5] []]) -> [7 1 4 9 9 2 5]", "(join [[0 1 2 6 6] [6 5 0 6 9] [2 7 6] [8 6 2]]) -> [0 1 2 6 6 6 5 0 6 9 2 7 6 8 6 2]", "(join [[1 4] [6 5 1 2 1] [9 8 5 3] [5 6 1 7]]) -> [1 4 6 5 1 2 1 9 8 5 3 5 6 1 7]", "(join [[6] [9 1] [2 2 9]]) -> [6 9 1 2 2 9]", "(join [[3 8 2 3]]) -> [3 8 2 3]", "(join [[7] [2 2] [9 0 2 0] [0 6 1] []]) -> [7 2 2 9 0 2 0 0 6 1]", "(join [[6] [5 8 5 6] [5 1 4 6 7] [8 7] [6 2]]) -> [6 5 8 5 6 5 1 4 6 7 8 7 6 2]", "(join [[9 0] [4 5 0 2 5] [8 7]]) -> [9 0 4 5 0 2 5 8 7]", "(join []) -> []", "(join [[] []]) -> []", "(join [[0 5 0] [9] [8 8 8 2 6] [8 7 7 9 2]]) -> [0 5 0 9 8 8 8 2 6 8 7 7 9 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.910918}
{"examples": ["(join []) -> []", "(join [[5] [2 1 5 2]]) -> [5 2 1 5 2]", "(join []) -> []", "(join []) -> []", "(join [[5] [9 6 6 7 3] [8 4 3 2 6] [0] [0 3]]) -> [5 9 6 6 7 3 8 4 3 2 6 0 0 3]", "(join []) -> []", "(join [[2] [7] [3]]) -> [2 7 3]", "(join [[1] [3] [5 7]]) -> [1 3 5 7]", "(join [[] [0 3] [7 9 0 1]]) -> [0 3 7 9 0 1]", "(join [[] [2 0] [8 9 1] [7] [9 0]]) -> [2 0 8 9 1 7 9 0]", "(join []) -> []", "(join [[4 4 7]]) -> [4 4 7]", "(join [[3] [4 8 5 1] [8]]) -> [3 4 8 5 1 8]", "(join []) -> []", "(join [[] [] [3 7 8 1] [7 9 7 9]]) -> [3 7 8 1 7 9 7 9]", "(join []) -> []", "(join [[0 8] [4 9 3 9 2] [8 4 1 9] [6] [4 1 1 4]]) -> [0 8 4 9 3 9 2 8 4 1 9 6 4 1 1 4]", "(join [[] []]) -> []", "(join [[] [1] [9 6 9 5]]) -> [1 9 6 9 5]", "(join [[] [6 6 2 9]]) -> [6 6 2 9]", "(join [[5 1] [8 8 6] [4 0 9 0 8]]) -> [5 1 8 8 6 4 0 9 0 8]", "(join []) -> []", "(join [[2] [2 5]]) -> [2 2 5]", "(join []) -> []", "(join [[1 3 2 8 9] [4 1 8 1] [2 8] [6 6 3 1]]) -> [1 3 2 8 9 4 1 8 1 2 8 6 6 3 1]", "(join [[6] [6 7 2] [7 4] [3 1 3 1 9]]) -> [6 6 7 2 7 4 3 1 3 1 9]", "(join []) -> []", "(join [[3] [0 6 3 7] [9] [6 5] [5 9 8 8]]) -> [3 0 6 3 7 9 6 5 5 9 8 8]", "(join [[0 9 1]]) -> [0 9 1]", "(join []) -> []", "(join [[3] [8 0 0 9 5] [5 6 2] [] [5 9 2]]) -> [3 8 0 0 9 5 5 6 2 5 9 2]", "(join [[0 4] [6 4 4] [1 4 0 9] [0 3 6 5 5]]) -> [0 4 6 4 4 1 4 0 9 0 3 6 5 5]", "(join [[7 7] [8 1 0] [5 5 3 8]]) -> [7 7 8 1 0 5 5 3 8]", "(join [[5 5] [9 2 6]]) -> [5 5 9 2 6]", "(join [[9 4] [0] [6 5 4 2 4]]) -> [9 4 0 6 5 4 2 4]", "(join [[3] [6 7 3] [] [3 7 0 1 3]]) -> [3 6 7 3 3 7 0 1 3]", "(join []) -> []", "(join [[9]]) -> [9]", "(join [[2]]) -> [2]", "(join [[7 4 6 3 3] [] [7 0] [6 7 4] []]) -> [7 4 6 3 3 7 0 6 7 4]", "(join [[9 2 8 5]]) -> [9 2 8 5]", "(join [[] [6 0]]) -> [6 0]", "(join [[9 3 2] [9] [5]]) -> [9 3 2 9 5]", "(join []) -> []", "(join [[3 0 7 8 3]]) -> [3 0 7 8 3]", "(join []) -> []", "(join [[2] [5 5 6 2 2] [6]]) -> [2 5 5 6 2 2 6]", "(join [[] [1] [4 6 1]]) -> [1 4 6 1]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.905829}
{"examples": ["(join []) -> []", "(join [[6 6 2] [3] [6 4 0]]) -> [6 6 2 3 6 4 0]", "(join [[2 7 5 3 5] [] [9 9 7 5]]) -> [2 7 5 3 5 9 9 7 5]", "(join [[] [] [7 1 5 1 2] [0] [7 6 0]]) -> [7 1 5 1 2 0 7 6 0]", "(join [[7 3]]) -> [7 3]", "(join [[1 6 6] []]) -> [1 6 6]", "(join [[0] [3 0 0 9] [6] []]) -> [0 3 0 0 9 6]", "(join [[0 6 6 6] [8 0 5 6 3] [] [] [4]]) -> [0 6 6 6 8 0 5 6 3 4]", "(join [[0 1 8 8 3] [4 6 6] [0 3] [9]]) -> [0 1 8 8 3 4 6 6 0 3 9]", "(join [[6 7 3]]) -> [6 7 3]", "(join [[5]]) -> [5]", "(join []) -> []", "(join [[2]]) -> [2]", "(join [[9 4 6 1] [6 3] [5 3] [] [4 5 2 9]]) -> [9 4 6 1 6 3 5 3 4 5 2 9]", "(join [[]]) -> []", "(join [[0 6 8 3] [8 0 0 0 1] [0 4 4 7] [5 3 2 3 1] [6 8 7]]) -> [0 6 8 3 8 0 0 0 1 0 4 4 7 5 3 2 3 1 6 8 7]", "(join [[3]]) -> [3]", "(join [[4 2] [5 6 3 3 1]]) -> [4 2 5 6 3 3 1]", "(join [[9 8 0 4 1] [2 0 0 4] [9 7 5] []]) -> [9 8 0 4 1 2 0 0 4 9 7 5]", "(join [[7 1 7 8] [4 4 5 0 5] [7] [0 7]]) -> [7 1 7 8 4 4 5 0 5 7 0 7]", "(join [[2 6] [2 4 2 1 8] [8 2 4 6]]) -> [2 6 2 4 2 1 8 8 2 4 6]", "(join [[0] [] []]) -> [0]", "(join [[] [5 1 5 4] [4 4] [3 9 3] [1 9 8 4 9]]) -> [5 1 5 4 4 4 3 9 3 1 9 8 4 9]", "(join [[]]) -> []", "(join [[7 9 7] [3 3 8 6 6] [7] [5 5 1 9 6] []]) -> [7 9 7 3 3 8 6 6 7 5 5 1 9 6]", "(join [[7 0 0 3 2] [1 3 8 1 0] [] []]) -> [7 0 0 3 2 1 3 8 1 0]", "(join [[3 4 9 4] [6 3 0] [] []]) -> [3 4 9 4 6 3 0]", "(join [[]]) -> []", "(join []) -> []", "(join [[9 3 0] [0 7 5]]) -> [9 3 0 0 7 5]", "(join [[4] [6 1 2 7] [6 0 2 3] [4 5 6 6 0]]) -> [4 6 1 2 7 6 0 2 3 4 5 6 6 0]", "(join [[1] [1 5 1 5] [0 2 8 8 2] [4 1 1 2 9]]) -> [1 1 5 1 5 0 2 8 8 2 4 1 1 2 9]", "(join [[5 4]]) -> [5 4]", "(join [[7 1] [1 6 3 2 7]]) -> [7 1 1 6 3 2 7]", "(join [[6] []]) -> [6]", "(join [[4 4 0 0 4] [0 8]]) -> [4 4 0 0 4 0 8]", "(join [[7 8 9 6]]) -> [7 8 9 6]", "(join [[8 8 4 6 9] [] [1 9 1 1] [4 0 4 4 0] []]) -> [8 8 4 6 9 1 9 1 1 4 0 4 4 0]", "(join [[5 0 3] [1 3 1 3 3] [3 1 5]]) -> [5 0 3 1 3 1 3 3 3 1 5]", "(join []) -> []", "(join [[1 3 8 8]]) -> [1 3 8 8]", "(join [[9 0 7] [7 9 5 8 5] [] [5 8 9]]) -> [9 0 7 7 9 5 8 5 5 8 9]", "(join [[8] [] [5 0 0 4 2] [5 2 4 7] []]) -> [8 5 0 0 4 2 5 2 4 7]", "(join []) -> []", "(join [[2] [8 8] [4 1 1] [7]]) -> [2 8 8 4 1 1 7]", "(join [[2 8 1] [5 4 7 4 2] [2 4 3 0] [5 3 9 7] [2 0 9 4]]) -> [2 8 1 5 4 7 4 2 2 4 3 0 5 3 9 7 2 0 9 4]", "(join [[6 7] [5 1 2] [6 6 7 5 8]]) -> [6 7 5 1 2 6 6 7 5 8]", "(join [[1 1 3 9 0]]) -> [1 1 3 9 0]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.488343}
{"examples": ["(join []) -> []", "(join [[1] [6 1] [6 3 0 2]]) -> [1 6 1 6 3 0 2]", "(join [[6] [0 8 4 5] [9 6] [3 4 5] [4 3 1 3 0]]) -> [6 0 8 4 5 9 6 3 4 5 4 3 1 3 0]", "(join [[5 6 6] [9 2]]) -> [5 6 6 9 2]", "(join []) -> []", "(join [[1 0] [1 5 4 1]]) -> [1 0 1 5 4 1]", "(join []) -> []", "(join []) -> []", "(join [[7 9] [1 7] [1 7 6 3 6] [5]]) -> [7 9 1 7 1 7 6 3 6 5]", "(join [[6 2] [3 1 8 1] [0 8 5 2] [6 4 2 5]]) -> [6 2 3 1 8 1 0 8 5 2 6 4 2 5]", "(join [[8 9 9 4]]) -> [8 9 9 4]", "(join [[3 1 5] [5 0 8] [8 7 6] [8 4 1 0 4] [9 2 3]]) -> [3 1 5 5 0 8 8 7 6 8 4 1 0 4 9 2 3]", "(join [[] [] [2]]) -> [2]", "(join [[2 9 8 0] []]) -> [2 9 8 0]", "(join [[5 3 9] [4 3 3 8 5] [0 6 1]]) -> [5 3 9 4 3 3 8 5 0 6 1]", "(join [[6 8 5 8] [7 3 7 9 2] [0 8] [2]]) -> [6 8 5 8 7 3 7 9 2 0 8 2]", "(join [[] [9 8 2 8] [7 3 5 4 3] [] [3 5 1 3 0]]) -> [9 8 2 8 7 3 5 4 3 3 5 1 3 0]", "(join [[9 4 8 8] [0 6 9] [2 4 9] [7] []]) -> [9 4 8 8 0 6 9 2 4 9 7]", "(join [[5 1 4] [6 2] [7 0] [9 5 4 7 0]]) -> [5 1 4 6 2 7 0 9 5 4 7 0]", "(join [[3 4 7]]) -> [3 4 7]", "(join []) -> []", "(join [[] [0 2 3] []]) -> [0 2 3]", "(join [[1 4 9 3 3]]) -> [1 4 9 3 3]", "(join [[9 3 7 5] [8 3] [2 0 1 3] [5 3 2] [1 5 3 1 8]]) -> [9 3 7 5 8 3 2 0 1 3 5 3 2 1 5 3 1 8]", "(join [[2 2] [1 4]]) -> [2 2 1 4]", "(join []) -> []", "(join [[9 6 1 5 7]]) -> [9 6 1 5 7]", "(join [[7 1 3 1] [3 9] [8 4]]) -> [7 1 3 1 3 9 8 4]", "(join [[9 0 8] [6 2] [5] []]) -> [9 0 8 6 2 5]", "(join [[7 5 8] [9 5 3 9 1] [3 3 5 0]]) -> [7 5 8 9 5 3 9 1 3 3 5 0]", "(join [[9 5 1] []]) -> [9 5 1]", "(join [[6 3 0 6]]) -> [6 3 0 6]", "(join [[8] [0 8]]) -> [8 0 8]", "(join []) -> []", "(join [[3 5] [8 2]]) -> [3 5 8 2]", "(join [[9 4 7 3] [8]]) -> [9 4 7 3 8]", "(join [[] [3] [] [6] []]) -> [3 6]", "(join [[4 8 8 8] []]) -> [4 8 8 8]", "(join [[3] []]) -> [3]", "(join [[] [4 6 1 0] [3 8 2 1 9] [2 4]]) -> [4 6 1 0 3 8 2 1 9 2 4]", "(join [[5 9] [9 2 9 8] [] [1 3 1]]) -> [5 9 9 2 9 8 1 3 1]", "(join []) -> []", "(join [[] [0 5] [4]]) -> [0 5 4]", "(join [[3 0] [2 6] [1 9 3 2] [0 3 1] [9 9 9 0 5]]) -> [3 0 2 6 1 9 3 2 0 3 1 9 9 9 0 5]", "(join [[] [] [0] [7 0 5] [1 0 3 6]]) -> [0 7 0 5 1 0 3 6]", "(join [[5 4] [4 3]]) -> [5 4 4 3]", "(join [[2 4 6 0 8] [1 3] [0 8 6 7 7] []]) -> [2 4 6 0 8 1 3 0 8 6 7 7]", "(join []) -> []", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.541283}
{"examples": ["(join []) -> []", "(join [[1 4 1] [3 9 0] [8 1 7 7 4] [3 0] [1]]) -> [1 4 1 3 9 0 8 1 7 7 4 3 0 1]", "(join [[8 1 9 2 8] [8 8 5 4 0]]) -> [8 1 9 2 8 8 8 5 4 0]", "(join [[2 8 6] [1 0 7]]) -> [2 8 6 1 0 7]", "(join [[1 7]]) -> [1 7]", "(join [[6 3 2 8 4] [4 8 1] [1 4 9 3 7] [4 7] [5]]) -> [6 3 2 8 4 4 8 1 1 4 9 3 7 4 7 5]", "(join [[8 0 9] [2 3]]) -> [8 0 9 2 3]", "(join [[4 3 4 1] [2 8 9 1] [2 9 3]]) -> [4 3 4 1 2 8 9 1 2 9 3]", "(join [[] [3 7] [2] [4 5 8 0 1]]) -> [3 7 2 4 5 8 0 1]", "(join [[1 8 6 2 5]]) -> [1 8 6 2 5]", "(join []) -> []", "(join [[0 2 1 3 6] [6] [9 9] []]) -> [0 2 1 3 6 6 9 9]", "(join [[] [9]]) -> [9]", "(join [[5 6 0 0]]) -> [5 6 0 0]", "(join [[3 5 1 6] [6 2 4 6 1]]) -> [3 5 1 6 6 2 4 6 1]", "(join [[4 0 9] [4 9 6 5 6]]) -> [4 0 9 4 9 6 5 6]", "(join [[2 9 8 6] [0 8 5] [3] [] [4 3]]) -> [2 9 8 6 0 8 5 3 4 3]", "(join [[2 5]]) -> [2 5]", "(join [[7 2 3 1] [8]]) -> [7 2 3 1 8]", "(join [[8 7]]) -> [8 7]", "(join [[6] [9 3 8 2] [4 8 3 5] [4 0]]) -> [6 9 3 8 2 4 8 3 5 4 0]", "(join [[2 5 1 3 9]]) -> [2 5 1 3 9]", "(join [[2 0 1 9 5] [7 3 5 4] [3]]) -> [2 0 1 9 5 7 3 5 4 3]", "(join []) -> []", "(join [[2] [9 2] [2 4 4 5 4] [4 6 6 3 1]]) -> [2 9 2 2 4 4 5 4 4 6 6 3 1]", "(join [[6 7 8 1 1]]) -> [6 7 8 1 1]", "(join [[6 3] [3 7]]) -> [6 3 3 7]", "(join [[8 6 4 9] []]) -> [8 6 4 9]", "(join [[] [] [1 9] [6 6 3]]) -> [1 9 6 6 3]", "(join []) -> []", "(join [[3 1 5 3 1] [0 9] [2 7]]) -> [3 1 5 3 1 0 9 2 7]", "(join [[9 8 6 1] [6]]) -> [9 8 6 1 6]", "(join [[5]]) -> [5]", "(join [[5] [5] [4 5 0]]) -> [5 5 4 5 0]", "(join [[5 0 8 8 7] [0 5 0 1 4] [] [0 0 7 9]]) -> [5 0 8 8 7 0 5 0 1 4 0 0 7 9]", "(join [[7] [5 4]]) -> [7 5 4]", "(join [[5 8 7 8 7] [1 9 4] [1 1 3] [6 7] [5 6 5 0]]) -> [5 8 7 8 7 1 9 4 1 1 3 6 7 5 6 5 0]", "(join []) -> []", "(join [[6 4 0 1 2] [] []]) -> [6 4 0 1 2]", "(join [[7 3 1 7 4] [5 8 8 5 9] [4 8 0] [4 5]]) -> [7 3 1 7 4 5 8 8 5 9 4 8 0 4 5]", "(join []) -> []", "(join [[2 2 2 9]]) -> [2 2 2 9]", "(join []) -> []", "(join [[4 6 5 7 7] [4 9 9 3]]) -> [4 6 5 7 7 4 9 9 3]", "(join []) -> []", "(join []) -> []", "(join [[5 0 4 5]]) -> [5 0 4 5]", "(join [[0 4] [9]]) -> [0 4 9]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.520012}
{"examples": ["(join []) -> []", "(join [[4 0 2] [7 9 6 3] [6] [2] [8 3 7 8 9]]) -> [4 0 2 7 9 6 3 6 2 8 3 7 8 9]", "(join [[9] [] [1 3 7 1 6] [9 8] [4]]) -> [9 1 3 7 1 6 9 8 4]", "(join [[7 6 5 1]]) -> [7 6 5 1]", "(join [[2 6 8] [6 5 1]]) -> [2 6 8 6 5 1]", "(join [[6 8 8 4] [] []]) -> [6 8 8 4]", "(join [[5 3 3 1 2] [7] [0 6]]) -> [5 3 3 1 2 7 0 6]", "(join [[6]]) -> [6]", "(join [[9 2 6 6] [1 1 2 7] []]) -> [9 2 6 6 1 1 2 7]", "(join [[8] []]) -> [8]", "(join []) -> []", "(join [[3 9] [] [] [8 5 3 5 4] [5 1 6 8 5]]) -> [3 9 8 5 3 5 4 5 1 6 8 5]", "(join [[6] [1 7 6 6] [8 1]]) -> [6 1 7 6 6 8 1]", "(join [[1 0 1 9] [6]]) -> [1 0 1 9 6]", "(join [[] [] [2 9 6 1]]) -> [2 9 6 1]", "(join [[4 2 2 2] []]) -> [4 2 2 2]", "(join [[0 2 8] [5 2 6 1 6] [5 7 6 2 3]]) -> [0 2 8 5 2 6 1 6 5 7 6 2 3]", "(join [[4 0 7 2 9] [2 2 2]]) -> [4 0 7 2 9 2 2 2]", "(join [[] [7 5 7] [7 1]]) -> [7 5 7 7 1]", "(join [[4 1 9 6] [7 5 5 8 0]]) -> [4 1 9 6 7 5 5 8 0]", "(join [[1]]) -> [1]", "(join [[2 5 5 0 3]]) -> [2 5 5 0 3]", "(join [[0 3 9 7] [3 3 0] [1 4 6 7 8] [7 7 1] []]) -> [0 3 9 7 3 3 0 1 4 6 7 8 7 7 1]", "(join [[]]) -> []", "(join []) -> []", "(join [[1 2 1 6] [4 5] [6 1 5] [6] [3]]) -> [1 2 1 6 4 5 6 1 5 6 3]", "(join [[4] [] [1 0 2 2 0] [4 4 9 5 2]]) -> [4 1 0 2 2 0 4 4 9 5 2]", "(join [[5 1 0 7 2] [8 2 5]]) -> [5 1 0 7 2 8 2 5]", "(join []) -> []", "(join [[1 1 1 5 6] []]) -> [1 1 1 5 6]", "(join []) -> []", "(join [[]]) -> []", "(join [[8 8 5]]) -> [8 8 5]", "(join [[3 8 8] [2 6 7]]) -> [3 8 8 2 6 7]", "(join [[5]]) -> [5]", "(join []) -> []", "(join [[] [5 3] [4 7] []]) -> [5 3 4 7]", "(join [[4 9 3 1 1] [7 7 0 2 1] [7 1 4 7 4]]) -> [4 9 3 1 1 7 7 0 2 1 7 1 4 7 4]", "(join [[1 5] [9 5 4 3] [9 1] []]) -> [1 5 9 5 4 3 9 1]", "(join [[7 9] [7 6 8] [6 9 0 1 6] [6 6]]) -> [7 9 7 6 8 6 9 0 1 6 6 6]", "(join [[2] [3 1 2 4] [5] [9] [8 2 1 1 0]]) -> [2 3 1 2 4 5 9 8 2 1 1 0]", "(join []) -> []", "(join [[5 1 6 9 5] [4 5 8] [6 3 5 4 6]]) -> [5 1 6 9 5 4 5 8 6 3 5 4 6]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[] [9 7 5 8 4] [4 3] [6] [5 9 8 7 1]]) -> [9 7 5 8 4 4 3 6 5 9 8 7 1]", "(join [[0 5 8]]) -> [0 5 8]", "(join [[4 0 8 7 8] [0 5] [2 2] [0 7 9 5 7] []]) -> [4 0 8 7 8 0 5 2 2 0 7 9 5 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.024955}
{"examples": ["(join []) -> []", "(join [[1 1 8 8 4] [6 0 7] [8 4 1]]) -> [1 1 8 8 4 6 0 7 8 4 1]", "(join [[8 0] [9 1] [6 9 7 3] [] [2 9]]) -> [8 0 9 1 6 9 7 3 2 9]", "(join []) -> []", "(join [[] [9 6] [3] [1 0 8 8] [0 1]]) -> [9 6 3 1 0 8 8 0 1]", "(join [[6 4 8 8] [8 2 3 6]]) -> [6 4 8 8 8 2 3 6]", "(join []) -> []", "(join [[] [9 9 3 5 9] [1 1 5 7 4]]) -> [9 9 3 5 9 1 1 5 7 4]", "(join [[9 0 7 0] [0] [0 2 4 9 9]]) -> [9 0 7 0 0 0 2 4 9 9]", "(join [[3 9 0 5]]) -> [3 9 0 5]", "(join [[0 9 8 9 0] [8 0 5 7] [4 1 4 1] [2 3 8] [3]]) -> [0 9 8 9 0 8 0 5 7 4 1 4 1 2 3 8 3]", "(join [[] [5 6 5 8 5] [] [8 1 0 1] []]) -> [5 6 5 8 5 8 1 0 1]", "(join [[7 1 6 4 7] [0] [7] [0 8] [2 8 1 8]]) -> [7 1 6 4 7 0 7 0 8 2 8 1 8]", "(join [[8 0] []]) -> [8 0]", "(join [[4 1 9] []]) -> [4 1 9]", "(join [[5 4 6] [5 3] [4 8]]) -> [5 4 6 5 3 4 8]", "(join [[8 9 2 7 9] [8 5] [9 4 0 0] [5] [9]]) -> [8 9 2 7 9 8 5 9 4 0 0 5 9]", "(join [[4 4 9] [7 1 3 5] [0] [3 1 4] [1]]) -> [4 4 9 7 1 3 5 0 3 1 4 1]", "(join [[] [] [6 6]]) -> [6 6]", "(join [[] [3] [3 3 5 3 2]]) -> [3 3 3 5 3 2]", "(join [[3 2 4 3 0] [3 8 2 7 5] [9]]) -> [3 2 4 3 0 3 8 2 7 5 9]", "(join [[5 8 6] [2 5 0 4 3] []]) -> [5 8 6 2 5 0 4 3]", "(join [[2 8 7 3 7] [7 2 3]]) -> [2 8 7 3 7 7 2 3]", "(join [[] [7 7 8 5 5]]) -> [7 7 8 5 5]", "(join [[6] [3] [5 8 8 0]]) -> [6 3 5 8 8 0]", "(join [[2 1 1 1] [9 5 6] [] [3] [5 8 3]]) -> [2 1 1 1 9 5 6 3 5 8 3]", "(join [[7 2 1] []]) -> [7 2 1]", "(join [[] [5 7 9 7 5] [8]]) -> [5 7 9 7 5 8]", "(join [[] [2] [5 5]]) -> [2 5 5]", "(join [[5 4 3 2] [6] [7 6 0] [7 1 6]]) -> [5 4 3 2 6 7 6 0 7 1 6]", "(join [[2] [] [] [9 6] [5 7 3 7 3]]) -> [2 9 6 5 7 3 7 3]", "(join [[9 2 3] [3 8 5] [5 0] [4 2 5 7]]) -> [9 2 3 3 8 5 5 0 4 2 5 7]", "(join [[2] [2 8 6] [8 9 7 7 9]]) -> [2 2 8 6 8 9 7 7 9]", "(join [[7] [7 4] [8 9 5 0] [8 1 2 8]]) -> [7 7 4 8 9 5 0 8 1 2 8]", "(join []) -> []", "(join [[3 7 2 9 3] [7 7 5 5 6] [7 1 8]]) -> [3 7 2 9 3 7 7 5 5 6 7 1 8]", "(join [[1 8] [5 1 3] [7 3]]) -> [1 8 5 1 3 7 3]", "(join [[9 7] [8 1] [8 7 9 3] [7 5 9]]) -> [9 7 8 1 8 7 9 3 7 5 9]", "(join [[7] [0 4 3]]) -> [7 0 4 3]", "(join [[8 6 4 3] [8 5 2]]) -> [8 6 4 3 8 5 2]", "(join [[7 1 0 4 3] [2 1 3 4] [6 8 2] [7 6] [3 6 8 5]]) -> [7 1 0 4 3 2 1 3 4 6 8 2 7 6 3 6 8 5]", "(join [[8 3 4 8 5] [1 8] [4 4]]) -> [8 3 4 8 5 1 8 4 4]", "(join [[1 8]]) -> [1 8]", "(join [[3 1 5 1] [3 5] [3 8 9 3 3]]) -> [3 1 5 1 3 5 3 8 9 3 3]", "(join []) -> []", "(join [[7 1 1] [4] [3] []]) -> [7 1 1 4 3]", "(join [[] [9 9 5 5 9] [1 1]]) -> [9 9 5 5 9 1 1]", "(join [[3 8 2] [8 8 6 5]]) -> [3 8 2 8 8 6 5]", "(join [[3 3] [9 3 7 9 0] [7 6]]) -> [3 3 9 3 7 9 0 7 6]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.952204}
{"examples": ["(join []) -> []", "(join [[3] [4] [7] [4 9] [2]]) -> [3 4 7 4 9 2]", "(join [[1 8 0 2 9] [4 1] [5 4 1] [0 5 7]]) -> [1 8 0 2 9 4 1 5 4 1 0 5 7]", "(join [[6 6 8 6 8] [8 8 8 1] [3 4 0 7 1] [4 6]]) -> [6 6 8 6 8 8 8 8 1 3 4 0 7 1 4 6]", "(join []) -> []", "(join [[0 4 6 8] [1 5 4 6]]) -> [0 4 6 8 1 5 4 6]", "(join [[4] [6 6]]) -> [4 6 6]", "(join [[6 2 6 8] [6 7 2]]) -> [6 2 6 8 6 7 2]", "(join [[] [3 2 0] [6 5 8 9 8]]) -> [3 2 0 6 5 8 9 8]", "(join [[8 9 8 2] [6 1 7 8] [1 9 5]]) -> [8 9 8 2 6 1 7 8 1 9 5]", "(join [[2 4 4 0]]) -> [2 4 4 0]", "(join [[2 1 2 4 2] [9 8 7 7] [7 3 0] [] [9]]) -> [2 1 2 4 2 9 8 7 7 7 3 0 9]", "(join [[7] [0 6 3 9] [4 2 8 3 3] [0 7 0]]) -> [7 0 6 3 9 4 2 8 3 3 0 7 0]", "(join [[5 5 6 5] [1] [6 0 0] [9 4 2 6]]) -> [5 5 6 5 1 6 0 0 9 4 2 6]", "(join [[1 2] [7 5 8 4] []]) -> [1 2 7 5 8 4]", "(join [[0 3 1 1] [3 6 9] [1 2] [6 9 5 1 7]]) -> [0 3 1 1 3 6 9 1 2 6 9 5 1 7]", "(join []) -> []", "(join []) -> []", "(join [[] [1 5 4]]) -> [1 5 4]", "(join [[2] [] [9] [0 3 7]]) -> [2 9 0 3 7]", "(join [[1 3]]) -> [1 3]", "(join [[2 1] [] [3 9] [7] [6 4 8 9]]) -> [2 1 3 9 7 6 4 8 9]", "(join [[2] [0 0 0 8]]) -> [2 0 0 0 8]", "(join [[9 9] [4 5 5 0 2] [3 1 4] [] [7 0 7 6 5]]) -> [9 9 4 5 5 0 2 3 1 4 7 0 7 6 5]", "(join [[6] [1 0 7] [3 0] [4 3 2 6 5] [2 5 3 6 8]]) -> [6 1 0 7 3 0 4 3 2 6 5 2 5 3 6 8]", "(join [[3 0 4] [3 1 5 7]]) -> [3 0 4 3 1 5 7]", "(join [[9 3]]) -> [9 3]", "(join [[1 6] [0 6] [6 1 7 9 6] [1]]) -> [1 6 0 6 6 1 7 9 6 1]", "(join [[1] [] [9 5]]) -> [1 9 5]", "(join [[0 6 8 0 0]]) -> [0 6 8 0 0]", "(join [[7 6 6 2 1] [3 0 5 2] [5] [4 1] [1 5 9 5]]) -> [7 6 6 2 1 3 0 5 2 5 4 1 1 5 9 5]", "(join []) -> []", "(join [[5 3] [5 3 5] [8 1 4 8] [9 5]]) -> [5 3 5 3 5 8 1 4 8 9 5]", "(join [[9 5 0] [9]]) -> [9 5 0 9]", "(join [[] []]) -> []", "(join [[9]]) -> [9]", "(join [[8 1 9] []]) -> [8 1 9]", "(join [[] [1 3 0 9 5] [4 0 1 9]]) -> [1 3 0 9 5 4 0 1 9]", "(join [[2 5 6 3 3] [0 3 2] [0 7 7 1 4]]) -> [2 5 6 3 3 0 3 2 0 7 7 1 4]", "(join [[] [9 4 7 2] [6 8 5]]) -> [9 4 7 2 6 8 5]", "(join [[6] [3 1 6]]) -> [6 3 1 6]", "(join [[0 0 2 8] [0 9] [2 6 1 8] [9 3 0 0 6]]) -> [0 0 2 8 0 9 2 6 1 8 9 3 0 0 6]", "(join [[7 9 7 2 8] [1 7 2 9 8]]) -> [7 9 7 2 8 1 7 2 9 8]", "(join [[3 0] [] [8 6 1] [] [3 3 7 6]]) -> [3 0 8 6 1 3 3 7 6]", "(join [[] [] [0 7] [7 2]]) -> [0 7 7 2]", "(join [[8 4 5 7 7] [0 3 6] [2]]) -> [8 4 5 7 7 0 3 6 2]", "(join [[5 3 7 5] [0 6] [6]]) -> [5 3 7 5 0 6 6]", "(join [[4 3 7]]) -> [4 3 7]", "(join [[2 4] [] [2] []]) -> [2 4 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.124842}
{"examples": ["(join []) -> []", "(join [[5 3]]) -> [5 3]", "(join [[2] [4 3 6 7 9] [6 0 9 0] []]) -> [2 4 3 6 7 9 6 0 9 0]", "(join [[0 2 7] [9 0 8 6 8]]) -> [0 2 7 9 0 8 6 8]", "(join [[4 8] [6] [] [8 7 8 8 2]]) -> [4 8 6 8 7 8 8 2]", "(join [[9 9 5 6] [4 5 9] [9 0 0]]) -> [9 9 5 6 4 5 9 9 0 0]", "(join [[5] [5 2 9 2] [0 2] [3 6 4] [4 2 5 8 6]]) -> [5 5 2 9 2 0 2 3 6 4 4 2 5 8 6]", "(join [[7 2 2 9 5] [2 1] [5 2] [2]]) -> [7 2 2 9 5 2 1 5 2 2]", "(join [[0 4 4] [] [0 0 5 8]]) -> [0 4 4 0 0 5 8]", "(join [[7 6 8 7 3] [0 4 8 5] [6 8 8 9 2]]) -> [7 6 8 7 3 0 4 8 5 6 8 8 9 2]", "(join [[] [6]]) -> [6]", "(join [[7] [4 7]]) -> [7 4 7]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[1 5 3]]) -> [1 5 3]", "(join [[5 2 7 2] [0 0 3 5 3] [2]]) -> [5 2 7 2 0 0 3 5 3 2]", "(join [[9 6 6 1] [7 9 8 8] [2 6]]) -> [9 6 6 1 7 9 8 8 2 6]", "(join [[0] [] [2 1 1 7] [1 5 2 7 1] [8 9 0 5]]) -> [0 2 1 1 7 1 5 2 7 1 8 9 0 5]", "(join [[2 6] [9 7 5 5] [4 2 6 3] [] [3 2 5 9]]) -> [2 6 9 7 5 5 4 2 6 3 3 2 5 9]", "(join []) -> []", "(join [[3 1 2 5] [] [6]]) -> [3 1 2 5 6]", "(join [[5 4 7 3 9] [7 5 8 5 1] [8 3]]) -> [5 4 7 3 9 7 5 8 5 1 8 3]", "(join [[3 2 5 4 4] [5]]) -> [3 2 5 4 4 5]", "(join [[0 8 6] [] [4 5 5 3 0]]) -> [0 8 6 4 5 5 3 0]", "(join [[9 4 0] [] [9 8 9 4 3]]) -> [9 4 0 9 8 9 4 3]", "(join [[] [6 8] [4 9 5] [] []]) -> [6 8 4 9 5]", "(join [[4 2 3 4] [6 7 0 9 5] []]) -> [4 2 3 4 6 7 0 9 5]", "(join [[0 0] [0 0] [2 8 8 0 5] [1 4] [4]]) -> [0 0 0 0 2 8 8 0 5 1 4 4]", "(join []) -> []", "(join [[9 8 6 0] [] [6 2 1 7]]) -> [9 8 6 0 6 2 1 7]", "(join [[6 9 8 7] []]) -> [6 9 8 7]", "(join []) -> []", "(join [[2 6 2 9] [] [4 8]]) -> [2 6 2 9 4 8]", "(join [[9 9 6 7] [8] [] [] [6]]) -> [9 9 6 7 8 6]", "(join [[2 6 8] [3 4 1]]) -> [2 6 8 3 4 1]", "(join [[3 0] [6 2 7 2]]) -> [3 0 6 2 7 2]", "(join [[6] [4 8 2 4 2]]) -> [6 4 8 2 4 2]", "(join [[3 0 0 6 7] [4]]) -> [3 0 0 6 7 4]", "(join [[3 0 1 9]]) -> [3 0 1 9]", "(join [[5 1 1 2] [2 9 5]]) -> [5 1 1 2 2 9 5]", "(join [[3 0 7 4] [5 4 6]]) -> [3 0 7 4 5 4 6]", "(join [[2 0 0 1 7] [9] [3 8 0 8 6]]) -> [2 0 0 1 7 9 3 8 0 8 6]", "(join [[9 3 3 9] [6 4 1 1] [3 4 6 1] []]) -> [9 3 3 9 6 4 1 1 3 4 6 1]", "(join []) -> []", "(join [[3 2 9 4] [7 1] [5 0 2 4 9]]) -> [3 2 9 4 7 1 5 0 2 4 9]", "(join [[] [2 8 5 2] [9] [4 9]]) -> [2 8 5 2 9 4 9]", "(join [[0 0] [] [7] [9 7] [9 3 3]]) -> [0 0 7 9 7 9 3 3]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.464249}
{"examples": ["(join []) -> []", "(join [[1] [9 7 1 6 6] [8 2 2]]) -> [1 9 7 1 6 6 8 2 2]", "(join [[] [5 9] [7 1]]) -> [5 9 7 1]", "(join [[1 8 1 2]]) -> [1 8 1 2]", "(join [[9 6] [3 0 9 0] [6 6 1]]) -> [9 6 3 0 9 0 6 6 1]", "(join [[3 7 9 2 4] [2] [4 4 1]]) -> [3 7 9 2 4 2 4 4 1]", "(join [[] [2 9] [9 8 7] [8 2 9 0 5] [5 9 2 1 2]]) -> [2 9 9 8 7 8 2 9 0 5 5 9 2 1 2]", "(join [[3 9 8 4 0]]) -> [3 9 8 4 0]", "(join [[0 2 5]]) -> [0 2 5]", "(join [[8 5 2 4 2] [6 8 7 3] [1]]) -> [8 5 2 4 2 6 8 7 3 1]", "(join [[8 2 7] [7 4 5 3] [] [1 8 6 8 9] [4 7 7 2 1]]) -> [8 2 7 7 4 5 3 1 8 6 8 9 4 7 7 2 1]", "(join [[8 7 0 7]]) -> [8 7 0 7]", "(join [[8 2 2] [4 4 6 7 9] [] [8 5 2 6 1] [6 0 3 2 1]]) -> [8 2 2 4 4 6 7 9 8 5 2 6 1 6 0 3 2 1]", "(join [[6 2 2 9 4] [4 4 6]]) -> [6 2 2 9 4 4 4 6]", "(join []) -> []", "(join []) -> []", "(join [[7] [6]]) -> [7 6]", "(join [[7 1] [] [1 2 9 4] []]) -> [7 1 1 2 9 4]", "(join []) -> []", "(join [[9 0] [2 3]]) -> [9 0 2 3]", "(join [[] [1 2]]) -> [1 2]", "(join [[0 2 1 5 7]]) -> [0 2 1 5 7]", "(join [[3 7 7] [] []]) -> [3 7 7]", "(join [[3 8 2] [1] [1 5 4 7 4]]) -> [3 8 2 1 1 5 4 7 4]", "(join [[2] [] [7] [] [1]]) -> [2 7 1]", "(join [[5 5 8 7 2]]) -> [5 5 8 7 2]", "(join [[6] [2 1 9] [7] [2]]) -> [6 2 1 9 7 2]", "(join [[3 8 8 0]]) -> [3 8 8 0]", "(join [[4 0 2 5 9] [0] [3 5 4 8] [6 1 2 2]]) -> [4 0 2 5 9 0 3 5 4 8 6 1 2 2]", "(join [[3 6 6 1 9]]) -> [3 6 6 1 9]", "(join [[6 5 9 8]]) -> [6 5 9 8]", "(join [[5 7] [0 5 2 6] [7] [2]]) -> [5 7 0 5 2 6 7 2]", "(join [[1 9 1 1] [5 3] [3 1 1]]) -> [1 9 1 1 5 3 3 1 1]", "(join [[1 2] [5] [0 2]]) -> [1 2 5 0 2]", "(join [[]]) -> []", "(join [[6 2 0] [3 9 5] [] [5 1 5] [3 8]]) -> [6 2 0 3 9 5 5 1 5 3 8]", "(join [[8] [2 5 8 9 4]]) -> [8 2 5 8 9 4]", "(join [[4 1 9 4] []]) -> [4 1 9 4]", "(join [[8]]) -> [8]", "(join [[2 0 6 9] [1] [2 5 9] [1 1]]) -> [2 0 6 9 1 2 5 9 1 1]", "(join [[5 9 5 2] [0 6 9 4] [8 6 0] [6 3 8]]) -> [5 9 5 2 0 6 9 4 8 6 0 6 3 8]", "(join [[5 2 3 4 0] [9 9 3 9] [5 8 6] [7 5 9]]) -> [5 2 3 4 0 9 9 3 9 5 8 6 7 5 9]", "(join [[9 2] [6 6 1 7 3]]) -> [9 2 6 6 1 7 3]", "(join [[7 7 3 9] [1 1 2 4] [4]]) -> [7 7 3 9 1 1 2 4 4]", "(join [[7 8 7 8] [3 3 4] [0 7 1] [8 2 3]]) -> [7 8 7 8 3 3 4 0 7 1 8 2 3]", "(join [[5 8] [5]]) -> [5 8 5]", "(join [[6 7] [] [2 7 7] [0 2 2 4] []]) -> [6 7 2 7 7 0 2 2 4]", "(join [[3] [7 8 2 5] [6] [2 3 1 6 3] []]) -> [3 7 8 2 5 6 2 3 1 6 3]", "(join [[8 5 3 8 6] [9 2 0 5] [0 2] [8]]) -> [8 5 3 8 6 9 2 0 5 0 2 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.471562}
{"examples": ["(join []) -> []", "(join [[6 9 5] [0] [4 6 3 3 9] [5 7 4 0 1]]) -> [6 9 5 0 4 6 3 3 9 5 7 4 0 1]", "(join [[0 2 0]]) -> [0 2 0]", "(join []) -> []", "(join []) -> []", "(join [[] [6 6 2 1]]) -> [6 6 2 1]", "(join [[6 4 5] [1 9]]) -> [6 4 5 1 9]", "(join [[0 9 6 0] [6 1 6 9 0] [6 9] [3 2 9 5 4]]) -> [0 9 6 0 6 1 6 9 0 6 9 3 2 9 5 4]", "(join [[7 3] [8] [5 3 8] [5 4 3]]) -> [7 3 8 5 3 8 5 4 3]", "(join [[3]]) -> [3]", "(join [[3 2 1 7] [7 2] [7 1 7 5]]) -> [3 2 1 7 7 2 7 1 7 5]", "(join []) -> []", "(join [[4 2] [4 5 4] [] []]) -> [4 2 4 5 4]", "(join [[] [] [5 1 5]]) -> [5 1 5]", "(join [[4 6 4 2] [8 4 2] [9 9 6 6] [4 8 1 9 6] [7]]) -> [4 6 4 2 8 4 2 9 9 6 6 4 8 1 9 6 7]", "(join [[9] [6 6 7] [4 2 0 1]]) -> [9 6 6 7 4 2 0 1]", "(join [[9 5 2] [4 4 7] [7 0 9 0] [4 6 0]]) -> [9 5 2 4 4 7 7 0 9 0 4 6 0]", "(join [[9] []]) -> [9]", "(join [[6 9 1 7 6]]) -> [6 9 1 7 6]", "(join [[7] [5 5 7 4 1] [9 5 1]]) -> [7 5 5 7 4 1 9 5 1]", "(join [[7 2 1 8 3] [5 8 0]]) -> [7 2 1 8 3 5 8 0]", "(join [[8 9] [3] []]) -> [8 9 3]", "(join []) -> []", "(join [[4 9] [3 5] [1] [9] [9 8 2 3]]) -> [4 9 3 5 1 9 9 8 2 3]", "(join []) -> []", "(join [[9 3 4 4 1]]) -> [9 3 4 4 1]", "(join [[6 1 7 8] [4]]) -> [6 1 7 8 4]", "(join [[7 0 9 2 4] [] [9 6] [8 0 7 7]]) -> [7 0 9 2 4 9 6 8 0 7 7]", "(join [[7 6 2 2] [2 9 1 8 0]]) -> [7 6 2 2 2 9 1 8 0]", "(join []) -> []", "(join []) -> []", "(join [[] [9] [1 1 2 2 7] [4 7 5]]) -> [9 1 1 2 2 7 4 7 5]", "(join []) -> []", "(join [[9 1 3 5 2]]) -> [9 1 3 5 2]", "(join [[3 5] [5 5 4 1 1] [0 0 0 3]]) -> [3 5 5 5 4 1 1 0 0 0 3]", "(join [[]]) -> []", "(join [[6 9 0 3] [9 1 3]]) -> [6 9 0 3 9 1 3]", "(join []) -> []", "(join []) -> []", "(join [[1 3 7] [8 0 5 0] [9 7 7] [] [1]]) -> [1 3 7 8 0 5 0 9 7 7 1]", "(join [[6 4 5]]) -> [6 4 5]", "(join [[] [4] [8 4 0 2 9]]) -> [4 8 4 0 2 9]", "(join [[] [8 3 7] [] [5 9 9 5 6]]) -> [8 3 7 5 9 9 5 6]", "(join [[4 0] [7 6 3 3 7] [6 7 8]]) -> [4 0 7 6 3 3 7 6 7 8]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[1] [9 7 4]]) -> [1 9 7 4]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.034944}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[3 8] [] [0]]) -> [3 8 0]", "(join [[9 8 7 7 9] [0 4 3] [9] [] [1 6 3 0]]) -> [9 8 7 7 9 0 4 3 9 1 6 3 0]", "(join [[7 4]]) -> [7 4]", "(join [[] []]) -> []", "(join [[] [1] [0 9 1 0]]) -> [1 0 9 1 0]", "(join [[] [9 8 4 5 3] []]) -> [9 8 4 5 3]", "(join [[9 4 6] [7 9 4 2] [7 0 6 2]]) -> [9 4 6 7 9 4 2 7 0 6 2]", "(join []) -> []", "(join []) -> []", "(join [[7 0 5] [9 4 3 1 5] [3]]) -> [7 0 5 9 4 3 1 5 3]", "(join []) -> []", "(join [[7 4 1 0 2] [3 8 8] [8 7] [5 9]]) -> [7 4 1 0 2 3 8 8 8 7 5 9]", "(join [[1 6 7] [3 6] [2 7 1 4 9] [5 7 5 7]]) -> [1 6 7 3 6 2 7 1 4 9 5 7 5 7]", "(join [[] [1 1 7 6] [] [2 7 6 6 3] [2 3 0 6]]) -> [1 1 7 6 2 7 6 6 3 2 3 0 6]", "(join [[9 3 4 9 5] [0 7 4 2]]) -> [9 3 4 9 5 0 7 4 2]", "(join [[2] []]) -> [2]", "(join [[0 2 3 6] [4] [] [9 6 1] [7 0 4 1]]) -> [0 2 3 6 4 9 6 1 7 0 4 1]", "(join [[7 3 3 4] [8]]) -> [7 3 3 4 8]", "(join [[8 0 2 5] [7 6 3] [7 3 8] [1 3] [8 5]]) -> [8 0 2 5 7 6 3 7 3 8 1 3 8 5]", "(join [[5 1 4 5] [7 0 5] [1 7] [7 8 2] [8 3 1 8]]) -> [5 1 4 5 7 0 5 1 7 7 8 2 8 3 1 8]", "(join [[1 1 2 6 5] [6 3 2] [3 2] [3]]) -> [1 1 2 6 5 6 3 2 3 2 3]", "(join [[6 0 3 6 4] [4 8 6 2 2] [1] [6 2 0 9]]) -> [6 0 3 6 4 4 8 6 2 2 1 6 2 0 9]", "(join [[] [5]]) -> [5]", "(join [[] [0 0 9] [1 0 1 6 6] [6 1 8]]) -> [0 0 9 1 0 1 6 6 6 1 8]", "(join [[] [9 2 8 7 6] [8 8 7 7] [0 3 5] []]) -> [9 2 8 7 6 8 8 7 7 0 3 5]", "(join [[3] [3] [2 0 2] [6 2 1 0] [7 9]]) -> [3 3 2 0 2 6 2 1 0 7 9]", "(join []) -> []", "(join [[5 6 7 3] [] [] [0 8 2 5 4]]) -> [5 6 7 3 0 8 2 5 4]", "(join []) -> []", "(join [[2 2 4 2 1] [1 0 4] [7 6 2 1]]) -> [2 2 4 2 1 1 0 4 7 6 2 1]", "(join [[2 5] []]) -> [2 5]", "(join [[0 4 8 7] [8] [5 6 1 0 0]]) -> [0 4 8 7 8 5 6 1 0 0]", "(join [[5 1 4 4] [6 6 4] [] [9 9 9 3]]) -> [5 1 4 4 6 6 4 9 9 9 3]", "(join [[] [] [4 8]]) -> [4 8]", "(join [[5 0] [8 0 9 2 8] [2]]) -> [5 0 8 0 9 2 8 2]", "(join [[2 2 7] [2 1 0] [5 4 6 8 0] []]) -> [2 2 7 2 1 0 5 4 6 8 0]", "(join [[8]]) -> [8]", "(join [[4 7 3] [7 8] [1 8 2 2 1] [3 7 9] [0 0 5 5 9]]) -> [4 7 3 7 8 1 8 2 2 1 3 7 9 0 0 5 5 9]", "(join [[] [8 4 1 6] [8 9 7]]) -> [8 4 1 6 8 9 7]", "(join []) -> []", "(join [[1] [2 8 9 6] [0 2 3 7]]) -> [1 2 8 9 6 0 2 3 7]", "(join [[9 5 1 1 8]]) -> [9 5 1 1 8]", "(join [[7] [6] [0 1 8 5 5] [2 7 5 7]]) -> [7 6 0 1 8 5 5 2 7 5 7]", "(join [[2 1 6 7] [] [] [2 3] []]) -> [2 1 6 7 2 3]", "(join [[2 2 7] [6 2 3 0] [0 4]]) -> [2 2 7 6 2 3 0 0 4]", "(join []) -> []", "(join [[6 5] [7 0 6 0] [9] [7 8] [1 9 0]]) -> [6 5 7 0 6 0 9 7 8 1 9 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.939657}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[5 1 5]]) -> [5 1 5]", "(join [[1 0 0 1] [0] [8 2 2 3 4] [] [6 4 0 1]]) -> [1 0 0 1 0 8 2 2 3 4 6 4 0 1]", "(join []) -> []", "(join []) -> []", "(join [[4 8 9]]) -> [4 8 9]", "(join []) -> []", "(join []) -> []", "(join [[6 6 5 0]]) -> [6 6 5 0]", "(join []) -> []", "(join [[5 8] [6] []]) -> [5 8 6]", "(join [[5 6 1] [0 2] [8]]) -> [5 6 1 0 2 8]", "(join [[1 0 6] [1 3] [2 2 9 8] [2 1 1 2] [2 3 0 1]]) -> [1 0 6 1 3 2 2 9 8 2 1 1 2 2 3 0 1]", "(join [[6 9 2 1 5] [3 0 8 3 3] [2 7 1 4]]) -> [6 9 2 1 5 3 0 8 3 3 2 7 1 4]", "(join [[3 8 3 2] [9 6 7 7] [6 2 1 9 4] [7 4 5 8] [8 1 4]]) -> [3 8 3 2 9 6 7 7 6 2 1 9 4 7 4 5 8 8 1 4]", "(join [[5 8 6] [1 6 1] []]) -> [5 8 6 1 6 1]", "(join [[6 1] [2] [6 4] [] [2 0 3]]) -> [6 1 2 6 4 2 0 3]", "(join [[2 3 7] [7 1 8 9 7] [4 1 7 5] []]) -> [2 3 7 7 1 8 9 7 4 1 7 5]", "(join [[2 0 5 5 7] [0 9 2] [9 2 1] [1 9 7 6 2]]) -> [2 0 5 5 7 0 9 2 9 2 1 1 9 7 6 2]", "(join []) -> []", "(join [[]]) -> []", "(join [[]]) -> []", "(join []) -> []", "(join [[1 8 5 7] [5 2] [3 4 5] [2 0 5 6 1]]) -> [1 8 5 7 5 2 3 4 5 2 0 5 6 1]", "(join [[8 7 7 3 5]]) -> [8 7 7 3 5]", "(join [[1 3] [5 9 5] [9] [] [3 8 1 2 8]]) -> [1 3 5 9 5 9 3 8 1 2 8]", "(join [[0 0] [1 1 0 8] [] [4 0]]) -> [0 0 1 1 0 8 4 0]", "(join [[8 4] [] [9 4] [5] []]) -> [8 4 9 4 5]", "(join []) -> []", "(join []) -> []", "(join [[] [2]]) -> [2]", "(join [[9 2 7 8] [] [] [5 3 8 2 9]]) -> [9 2 7 8 5 3 8 2 9]", "(join []) -> []", "(join []) -> []", "(join [[9 5] [7 8 7 1] [3 3 3 0 0]]) -> [9 5 7 8 7 1 3 3 3 0 0]", "(join [[8] [2 2 2 1] [4 4 9]]) -> [8 2 2 2 1 4 4 9]", "(join [[1 6] [7 0 3] [4 5 1] [0 4 2 5]]) -> [1 6 7 0 3 4 5 1 0 4 2 5]", "(join [[] [4]]) -> [4]", "(join [[2 0] []]) -> [2 0]", "(join [[1 0 5]]) -> [1 0 5]", "(join [[2] [7 0] [4 5 6]]) -> [2 7 0 4 5 6]", "(join [[0 7 4 4] [0] [1 4 7] [] []]) -> [0 7 4 4 0 1 4 7]", "(join [[1 4 2 7 5] [7 8 7 0 7]]) -> [1 4 2 7 5 7 8 7 0 7]", "(join [[5 8 6 8] [1 3 4 0 6] [5 6 0]]) -> [5 8 6 8 1 3 4 0 6 5 6 0]", "(join [[3 6 0] [4] [1 9] [2 4 0] [1 4]]) -> [3 6 0 4 1 9 2 4 0 1 4]", "(join [[3 1 7] [7] [1] [8 4] [7 4]]) -> [3 1 7 7 1 8 4 7 4]", "(join [[8 0 7] [5 4 5 8] [8 7] [2 8 8]]) -> [8 0 7 5 4 5 8 8 7 2 8 8]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.591886}
{"examples": ["(join []) -> []", "(join [[6 8 6 2] [8 1 1 8]]) -> [6 8 6 2 8 1 1 8]", "(join [[4 1 3 0]]) -> [4 1 3 0]", "(join []) -> []", "(join [[6 0 9 1] [5 2 2 6 6] [] []]) -> [6 0 9 1 5 2 2 6 6]", "(join [[1] [8 8 3] [5 3 4 6] [] [5 6]]) -> [1 8 8 3 5 3 4 6 5 6]", "(join [[4 7 9] [4] [] [1 1 9] [9 1 4 8 3]]) -> [4 7 9 4 1 1 9 9 1 4 8 3]", "(join [[] [6 2 0 8] [1]]) -> [6 2 0 8 1]", "(join []) -> []", "(join [[5 9 9] [8 0 6 2 8] [] [] [5 0]]) -> [5 9 9 8 0 6 2 8 5 0]", "(join [[9 8] [] [] [8 5 5] [0 0 1 8 3]]) -> [9 8 8 5 5 0 0 1 8 3]", "(join [[8 0 2] [9 8 9 3] [] [1 5]]) -> [8 0 2 9 8 9 3 1 5]", "(join []) -> []", "(join [[9 2 4 8] [] [8 0 7 7]]) -> [9 2 4 8 8 0 7 7]", "(join [[5 6 3] [8 0 1 5] [5 5] [5 8 0 0]]) -> [5 6 3 8 0 1 5 5 5 5 8 0 0]", "(join [[4 8 0 9] [4 2] [0 7 2] [2]]) -> [4 8 0 9 4 2 0 7 2 2]", "(join [[5 5]]) -> [5 5]", "(join [[3 3] [8]]) -> [3 3 8]", "(join [[9 7 7 1 0] [1 9] [1 3 0 5] [8]]) -> [9 7 7 1 0 1 9 1 3 0 5 8]", "(join [[3 0 7] [] [4 9 3 7]]) -> [3 0 7 4 9 3 7]", "(join [[3 6 1] [4] [] [3 2]]) -> [3 6 1 4 3 2]", "(join [[9 8] [3 8 5] [7 2 6] [5 6]]) -> [9 8 3 8 5 7 2 6 5 6]", "(join [[7 0 9 9] [5 4 0 9 5]]) -> [7 0 9 9 5 4 0 9 5]", "(join [[] [0]]) -> [0]", "(join []) -> []", "(join [[5 2] [8 1]]) -> [5 2 8 1]", "(join []) -> []", "(join [[]]) -> []", "(join [[5 9]]) -> [5 9]", "(join []) -> []", "(join []) -> []", "(join [[2 0 5 9 9] []]) -> [2 0 5 9 9]", "(join [[5 8 2 8]]) -> [5 8 2 8]", "(join [[]]) -> []", "(join [[7 7 9 8 2]]) -> [7 7 9 8 2]", "(join [[5 8 4 8 2] [7 2 5 3 6] [1 3 8 2 5] []]) -> [5 8 4 8 2 7 2 5 3 6 1 3 8 2 5]", "(join [[] [] [] [8 3]]) -> [8 3]", "(join [[5 0 4] [5 8 5] [5] [2 1 5 3]]) -> [5 0 4 5 8 5 5 2 1 5 3]", "(join [[]]) -> []", "(join []) -> []", "(join [[5 4 2 4 8] [] [1 1 3 7 0] [8 6 3 1 1] []]) -> [5 4 2 4 8 1 1 3 7 0 8 6 3 1 1]", "(join [[2 4 6] [] [5 8 7 7]]) -> [2 4 6 5 8 7 7]", "(join [[1 0 7 1 8] [8 7] []]) -> [1 0 7 1 8 8 7]", "(join [[1] [5 3]]) -> [1 5 3]", "(join [[1 4] [8 2 9 3] [1 2 7] [6 9] [5 1 0 3 0]]) -> [1 4 8 2 9 3 1 2 7 6 9 5 1 0 3 0]", "(join [[] []]) -> []", "(join [[] [7]]) -> [7]", "(join [[8 5 7] [6 4 6 5] [5 2 3]]) -> [8 5 7 6 4 6 5 5 2 3]", "(join [[5 0 8 3] [8 5 4 4 0]]) -> [5 0 8 3 8 5 4 4 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 1.04254}
{"examples": ["(join []) -> []", "(join [[4 4 4 0 8]]) -> [4 4 4 0 8]", "(join [[]]) -> []", "(join [[]]) -> []", "(join [[5] [3] [9 9 8 1 5]]) -> [5 3 9 9 8 1 5]", "(join [[1 0] [0] [2] [7 1 3 0]]) -> [1 0 0 2 7 1 3 0]", "(join [[3] [6 1 8 7 8] [2 0 6 0]]) -> [3 6 1 8 7 8 2 0 6 0]", "(join []) -> []", "(join []) -> []", "(join [[] [7 1 2 9 1]]) -> [7 1 2 9 1]", "(join [[] [0 2]]) -> [0 2]", "(join [[8 3] [4] [7 4] [6 5 6 1 6] [7 3 0]]) -> [8 3 4 7 4 6 5 6 1 6 7 3 0]", "(join [[] [6 7 9 3 6] [2 0] [6 6]]) -> [6 7 9 3 6 2 0 6 6]", "(join [[0]]) -> [0]", "(join [[9 4 6] [4 5] [] [6]]) -> [9 4 6 4 5 6]", "(join [[9 8] [1 3 9] [7] [3]]) -> [9 8 1 3 9 7 3]", "(join [[] [] [3 5 9] [6]]) -> [3 5 9 6]", "(join []) -> []", "(join []) -> []", "(join [[6 9 5 4]]) -> [6 9 5 4]", "(join [[] [0 9 8] [9]]) -> [0 9 8 9]", "(join [[8] [8] [9 3 5] [1 7 9 5 4] [9 7 8 9 4]]) -> [8 8 9 3 5 1 7 9 5 4 9 7 8 9 4]", "(join [[7 8 0] [5 0 7 0] [5 2 7] []]) -> [7 8 0 5 0 7 0 5 2 7]", "(join []) -> []", "(join [[6 3 4 0 9]]) -> [6 3 4 0 9]", "(join [[3 4 9 7] [4] [1 2 8] [5] [7 6]]) -> [3 4 9 7 4 1 2 8 5 7 6]", "(join [[1 3 0 1]]) -> [1 3 0 1]", "(join [[4] [7 1 8 2] [9 3 5 5] [7 8 9 4 8]]) -> [4 7 1 8 2 9 3 5 5 7 8 9 4 8]", "(join [[2 8 5 9 5] [] []]) -> [2 8 5 9 5]", "(join [[5 3 9 0] [0 6 8] [4 2 8 8 0] [] [4]]) -> [5 3 9 0 0 6 8 4 2 8 8 0 4]", "(join [[3 8] [6 9] [] [1 0 7 9]]) -> [3 8 6 9 1 0 7 9]", "(join []) -> []", "(join [[2 6 8 9 9] [9 0] []]) -> [2 6 8 9 9 9 0]", "(join [[0] [5]]) -> [0 5]", "(join [[5 4] [2] [0 4 3 6]]) -> [5 4 2 0 4 3 6]", "(join [[1 2] [6 6 0 8] [7 8 8]]) -> [1 2 6 6 0 8 7 8 8]", "(join [[5 3 0 0 5] [5]]) -> [5 3 0 0 5 5]", "(join [[]]) -> []", "(join [[4 6] [1 4 5] [9 7 7 5 1] [1 9 4] [8 5 3 8]]) -> [4 6 1 4 5 9 7 7 5 1 1 9 4 8 5 3 8]", "(join [[3 5 2 9 9]]) -> [3 5 2 9 9]", "(join [[9 8] [] [5 9 5 8] [2 1 7]]) -> [9 8 5 9 5 8 2 1 7]", "(join [[9 1 6] [8] [] [9 0] [5 2]]) -> [9 1 6 8 9 0 5 2]", "(join [[1 3] [] [2 8 4 8 7] [7 1] [5]]) -> [1 3 2 8 4 8 7 7 1 5]", "(join [[6 7 1 4] [7 2 7 2 2] [] [1] [3 5]]) -> [6 7 1 4 7 2 7 2 2 1 3 5]", "(join [[1 2 5] [5 8 1 8 5] [8 3 4] [0 5 3 6 7]]) -> [1 2 5 5 8 1 8 5 8 3 4 0 5 3 6 7]", "(join [[0 4 9] [6 7] [] [] [4 6 2]]) -> [0 4 9 6 7 4 6 2]", "(join [[0 7 4] [0 5 9 5 4]]) -> [0 7 4 0 5 9 5 4]", "(join [[7]]) -> [7]", "(join [[] [] [2]]) -> [2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.969356}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[7] []]) -> [7]", "(join [[2] [4 6 3 9 4] [4 0 5 9 4]]) -> [2 4 6 3 9 4 4 0 5 9 4]", "(join []) -> []", "(join [[8 4 2 5 3] [0 3 0] [8 4] [9]]) -> [8 4 2 5 3 0 3 0 8 4 9]", "(join [[] [5 8 0 2 3] [4 8 7] [2 1 5 9 3] [2]]) -> [5 8 0 2 3 4 8 7 2 1 5 9 3 2]", "(join [[] [9 0 0]]) -> [9 0 0]", "(join [[5 9 9 1] [0 3 9 1] [6 8 2 4 7] []]) -> [5 9 9 1 0 3 9 1 6 8 2 4 7]", "(join [[] [7 9 0 8 6] [7 7 1 6]]) -> [7 9 0 8 6 7 7 1 6]", "(join [[] []]) -> []", "(join [[3] [5] [4 3]]) -> [3 5 4 3]", "(join [[5 8 0 8 1] [1 2 7 6] []]) -> [5 8 0 8 1 1 2 7 6]", "(join [[8 4 2 3 6] [1] []]) -> [8 4 2 3 6 1]", "(join [[4] [3] [9 5 7 6]]) -> [4 3 9 5 7 6]", "(join [[9] [1] []]) -> [9 1]", "(join [[8] [] [9] [2 6 9 5 5]]) -> [8 9 2 6 9 5 5]", "(join [[0 3 4 4 1]]) -> [0 3 4 4 1]", "(join [[2 9 4 9] [7] [5 8 1 8 0]]) -> [2 9 4 9 7 5 8 1 8 0]", "(join [[3 5 1 1 7] [] [4 7]]) -> [3 5 1 1 7 4 7]", "(join []) -> []", "(join [[] [8 9 1 5 6] [7 4]]) -> [8 9 1 5 6 7 4]", "(join [[8] [8 6] [7] [7 3]]) -> [8 8 6 7 7 3]", "(join [[] [3 1 6 3]]) -> [3 1 6 3]", "(join []) -> []", "(join [[3 5 4] [4 1 5] [7]]) -> [3 5 4 4 1 5 7]", "(join [[6 7] [7 3 4] []]) -> [6 7 7 3 4]", "(join [[8 9 6 4 2] [3 7 8 4] [0 7 6] [0 6 2 5 1] [0 5 6 2 2]]) -> [8 9 6 4 2 3 7 8 4 0 7 6 0 6 2 5 1 0 5 6 2 2]", "(join [[8] [8] [2 2]]) -> [8 8 2 2]", "(join [[] [5] [0 2] [2 9 6]]) -> [5 0 2 2 9 6]", "(join [[2 6 6 8 8] [9 5 2 2] [6 0 1 1 7] [5 1]]) -> [2 6 6 8 8 9 5 2 2 6 0 1 1 7 5 1]", "(join [[4] [8 0 8 2 6]]) -> [4 8 0 8 2 6]", "(join [[5 3] [9] [5] [6 5 0]]) -> [5 3 9 5 6 5 0]", "(join [[8 4 5] [5 5] [0 4] [1 0 8 4 3] [3 1 5]]) -> [8 4 5 5 5 0 4 1 0 8 4 3 3 1 5]", "(join [[8] [3 3 6 4]]) -> [8 3 3 6 4]", "(join [[8 6 4 8] [] [5] [2 0 9 4]]) -> [8 6 4 8 5 2 0 9 4]", "(join [[] [3] [9 4 6 6]]) -> [3 9 4 6 6]", "(join [[4 3 8 8 4] [2 3 9 3 8]]) -> [4 3 8 8 4 2 3 9 3 8]", "(join [[] [4 3 3 5 7] [7 4 7 4]]) -> [4 3 3 5 7 7 4 7 4]", "(join [[1 5 4]]) -> [1 5 4]", "(join [[] [7 1] [0 4] [3 0 9 9 7] [3 6 4]]) -> [7 1 0 4 3 0 9 9 7 3 6 4]", "(join []) -> []", "(join [[] [5 1] [] [4]]) -> [5 1 4]", "(join [[] [8 2 2 7] [6 5 3 9 4]]) -> [8 2 2 7 6 5 3 9 4]", "(join [[9 2] [6 9 9] [] [7 4 8 0 3] [6 7 3]]) -> [9 2 6 9 9 7 4 8 0 3 6 7 3]", "(join [[7 6] [7 6 8 2] [5 3 9 6 7] [2 8 9 5] [9 8 8 4 2]]) -> [7 6 7 6 8 2 5 3 9 6 7 2 8 9 5 9 8 8 4 2]", "(join [[6 8 0 7] [5 1 5 5 4]]) -> [6 8 0 7 5 1 5 5 4]", "(join []) -> []", "(join [[8 4 9 9] [9 9 2] [5 5 1] [9 2] [8 9 5 0 5]]) -> [8 4 9 9 9 9 2 5 5 1 9 2 8 9 5 0 5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.906326}
{"examples": ["(join []) -> []", "(join [[7 0 6] [] [4] [2]]) -> [7 0 6 4 2]", "(join [[5] [8 0 7] [7 0 8 3] [1 0 8]]) -> [5 8 0 7 7 0 8 3 1 0 8]", "(join [[8]]) -> [8]", "(join [[3] [9 6 1]]) -> [3 9 6 1]", "(join [[5 1 1 7 1] [] [5] [3] [3 5]]) -> [5 1 1 7 1 5 3 3 5]", "(join [[]]) -> []", "(join [[9 1 6] [8 0 1]]) -> [9 1 6 8 0 1]", "(join [[8 3 7] [3 9 4 9] [6 0 8 7 6] [7 9 0] [1 6 1]]) -> [8 3 7 3 9 4 9 6 0 8 7 6 7 9 0 1 6 1]", "(join [[5 7 2 1 0] [9 3 4] [4 7] [1 5] [9 3 5 2]]) -> [5 7 2 1 0 9 3 4 4 7 1 5 9 3 5 2]", "(join [[5 5 4] [2 4 5 1]]) -> [5 5 4 2 4 5 1]", "(join [[0 0 7 3]]) -> [0 0 7 3]", "(join []) -> []", "(join [[3 4 6]]) -> [3 4 6]", "(join [[] [0 6] [0 1 3 4] [3 6 6 6 1]]) -> [0 6 0 1 3 4 3 6 6 6 1]", "(join [[3] []]) -> [3]", "(join [[1 5 5 5 7] [8]]) -> [1 5 5 5 7 8]", "(join [[]]) -> []", "(join [[8] [] [9 0] [6 2 7 6]]) -> [8 9 0 6 2 7 6]", "(join [[3 0 5 1 6] [4] [1 5 1 4] []]) -> [3 0 5 1 6 4 1 5 1 4]", "(join [[8 3 6] [8 5 4] [7 8 4 0] []]) -> [8 3 6 8 5 4 7 8 4 0]", "(join [[9 8 7]]) -> [9 8 7]", "(join []) -> []", "(join [[7 6] [5] [6]]) -> [7 6 5 6]", "(join []) -> []", "(join [[6 6] [6 5 9] [7 4 1 3]]) -> [6 6 6 5 9 7 4 1 3]", "(join [[9 0 7] [7 0 1]]) -> [9 0 7 7 0 1]", "(join [[8 0 9 2] [1 9 4 9] [8] [1 1 8]]) -> [8 0 9 2 1 9 4 9 8 1 1 8]", "(join [[2 1] [3] [2 0 6 6] [3 8 7] [3 4 5 3 2]]) -> [2 1 3 2 0 6 6 3 8 7 3 4 5 3 2]", "(join [[5] [] [9 5 9 9 6]]) -> [5 9 5 9 9 6]", "(join [[4 5] [9 6 9] [0 2] [9 7 4 5 0] []]) -> [4 5 9 6 9 0 2 9 7 4 5 0]", "(join [[] [7 1]]) -> [7 1]", "(join [[] [6 6 6 5 8] []]) -> [6 6 6 5 8]", "(join [[0 0 2]]) -> [0 0 2]", "(join [[4 4 5 0] [] [6] [4 4]]) -> [4 4 5 0 6 4 4]", "(join [[5 0 2 1]]) -> [5 0 2 1]", "(join [[5 7 5] []]) -> [5 7 5]", "(join [[7 3 1 7 2] [3] [4 2 4]]) -> [7 3 1 7 2 3 4 2 4]", "(join [[2 2] [] [7] [1 0 5 1]]) -> [2 2 7 1 0 5 1]", "(join [[0 9 1]]) -> [0 9 1]", "(join []) -> []", "(join [[5 7 1 7 0] [0 1]]) -> [5 7 1 7 0 0 1]", "(join []) -> []", "(join [[3 3 0 5 7] [2 3 6 7 4] [3 8 3 8] [5 8 6 3 1]]) -> [3 3 0 5 7 2 3 6 7 4 3 8 3 8 5 8 6 3 1]", "(join [[8 1 9] [8 9 7 9 2]]) -> [8 1 9 8 9 7 9 2]", "(join [[1 1 1 7]]) -> [1 1 1 7]", "(join []) -> []", "(join [[2 7 8] [4 1 9 4]]) -> [2 7 8 4 1 9 4]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.847579}
{"examples": ["(join []) -> []", "(join [[3 4 9] [5] [4] [1] [3]]) -> [3 4 9 5 4 1 3]", "(join [[7 7] [2 6 3] [1 6 2 5] [6 5 4] []]) -> [7 7 2 6 3 1 6 2 5 6 5 4]", "(join [[6 1] [2] [1] [9]]) -> [6 1 2 1 9]", "(join [[1 6 5]]) -> [1 6 5]", "(join [[4 2 9] [0 6 2 1] [0 1 8 7]]) -> [4 2 9 0 6 2 1 0 1 8 7]", "(join [[] [] [9] [9]]) -> [9 9]", "(join [[5 0] [6] [7 3]]) -> [5 0 6 7 3]", "(join [[1 1 6] [2 0 4 1 2]]) -> [1 1 6 2 0 4 1 2]", "(join [[0 3 5] [2 1 7 3]]) -> [0 3 5 2 1 7 3]", "(join []) -> []", "(join [[1 0 8 7] [8 6] [8] []]) -> [1 0 8 7 8 6 8]", "(join [[]]) -> []", "(join [[5 5 1] [2] [8] [2 9]]) -> [5 5 1 2 8 2 9]", "(join [[7 6] [8 8] [6 7 4 6]]) -> [7 6 8 8 6 7 4 6]", "(join [[7] [4 4] [3 1 5 2]]) -> [7 4 4 3 1 5 2]", "(join [[5 6 7 9 7] [4 2] []]) -> [5 6 7 9 7 4 2]", "(join [[8 9 0] [6]]) -> [8 9 0 6]", "(join [[3] []]) -> [3]", "(join [[1 1 1 1] [4 4] [4 0 3 8] [6 6 5] [3 2 6 1 0]]) -> [1 1 1 1 4 4 4 0 3 8 6 6 5 3 2 6 1 0]", "(join [[0 3 0] [8 9 4 0 8] [2 8]]) -> [0 3 0 8 9 4 0 8 2 8]", "(join [[8 9 1 5] [5 5 1] [7 8 6]]) -> [8 9 1 5 5 5 1 7 8 6]", "(join [[1 6 3 1]]) -> [1 6 3 1]", "(join [[1 0 3] [5 8 4 6] []]) -> [1 0 3 5 8 4 6]", "(join [[3 5 3 1 4] [9 6 5 9 0] [7]]) -> [3 5 3 1 4 9 6 5 9 0 7]", "(join [[6 7]]) -> [6 7]", "(join [[7] [1] [6] [0 0 1] [4 9 8 7 3]]) -> [7 1 6 0 0 1 4 9 8 7 3]", "(join [[0 3 0 3] [2 9 5 1 0] [9 8]]) -> [0 3 0 3 2 9 5 1 0 9 8]", "(join [[4] [2 1] [0 8 5]]) -> [4 2 1 0 8 5]", "(join [[0]]) -> [0]", "(join [[5 9 2] [8] [] []]) -> [5 9 2 8]", "(join [[] [2 8 2 3] [1 1 6] [3 7]]) -> [2 8 2 3 1 1 6 3 7]", "(join [[8 6 4 0] [6] [8 4]]) -> [8 6 4 0 6 8 4]", "(join [[8] [7 7 4 7] [1 9 6 9 2] [4 9 2 8]]) -> [8 7 7 4 7 1 9 6 9 2 4 9 2 8]", "(join [[5 2] [0 5 3 9]]) -> [5 2 0 5 3 9]", "(join [[4] [5 3 6 3 1] [9 1] [4 1]]) -> [4 5 3 6 3 1 9 1 4 1]", "(join [[1] [3 3] [1]]) -> [1 3 3 1]", "(join [[5] [2 4 2 4 5] [7 2 3] [3] [1]]) -> [5 2 4 2 4 5 7 2 3 3 1]", "(join [[4] [1 0] [8 2 4] [2 8 1 1 3]]) -> [4 1 0 8 2 4 2 8 1 1 3]", "(join [[1 7 0 9] [] [3 5 9] [7]]) -> [1 7 0 9 3 5 9 7]", "(join []) -> []", "(join [[6 4 7 6] [0] [8 2 2 8] []]) -> [6 4 7 6 0 8 2 2 8]", "(join [[5 6 5] [5 3 7 3] [7 5 0 8] [] [2]]) -> [5 6 5 5 3 7 3 7 5 0 8 2]", "(join [[] [] [1 1 7 1]]) -> [1 1 7 1]", "(join [[2 3 7 3 3] [1 3 0] [5 6 2 2] [8 1] [1 9 7]]) -> [2 3 7 3 3 1 3 0 5 6 2 2 8 1 1 9 7]", "(join []) -> []", "(join [[4 4 9]]) -> [4 4 9]", "(join [[8 5 7 5 7] [7 7] [0 2] [] [5 6 0]]) -> [8 5 7 5 7 7 7 0 2 5 6 0]", "(join [[7 1]]) -> [7 1]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.609223}
{"examples": ["(join []) -> []", "(join [[7 9] [3 3 6 1] [8 1] [0 7 9 1 0]]) -> [7 9 3 3 6 1 8 1 0 7 9 1 0]", "(join [[8 6] [1 9] [9] [4 5 4]]) -> [8 6 1 9 9 4 5 4]", "(join [[0 0]]) -> [0 0]", "(join [[8 2]]) -> [8 2]", "(join []) -> []", "(join [[6 4 4 3 3]]) -> [6 4 4 3 3]", "(join [[4] [2 9] [7 0]]) -> [4 2 9 7 0]", "(join [[5 0 4 6 5] [7]]) -> [5 0 4 6 5 7]", "(join []) -> []", "(join [[1 6 1 7] [2 8 9 4 1] [7] [2 9 9 2 6]]) -> [1 6 1 7 2 8 9 4 1 7 2 9 9 2 6]", "(join [[] [8] [1 3 5 9] [3 9 1]]) -> [8 1 3 5 9 3 9 1]", "(join [[5 3 6] [2 1 0]]) -> [5 3 6 2 1 0]", "(join [[1] [7 2 2 3] [7 3 1 9 5] [3 0 2 7] [6]]) -> [1 7 2 2 3 7 3 1 9 5 3 0 2 7 6]", "(join [[8 7 3 6 0] [1 5] [6 6 1 1 9] [5]]) -> [8 7 3 6 0 1 5 6 6 1 1 9 5]", "(join [[] [0 3 0 2 8] [2 7 5 9] [5 3 0 8]]) -> [0 3 0 2 8 2 7 5 9 5 3 0 8]", "(join [[5] [4 6 6 5]]) -> [5 4 6 6 5]", "(join [[0 4 7 3 5] [] [0 4] [7] [8 7 2 4 5]]) -> [0 4 7 3 5 0 4 7 8 7 2 4 5]", "(join [[6 6]]) -> [6 6]", "(join [[7 5 5 8 1] [1 9 6 2] [4 7 5 9 7] [0 8 2]]) -> [7 5 5 8 1 1 9 6 2 4 7 5 9 7 0 8 2]", "(join [[2 3] [9] [] [1 6 9 2 5] [9 4 4]]) -> [2 3 9 1 6 9 2 5 9 4 4]", "(join [[] [7 7 6 9]]) -> [7 7 6 9]", "(join [[]]) -> []", "(join [[7 9 8] [7] [1 2 7 8] [6 0 5 9]]) -> [7 9 8 7 1 2 7 8 6 0 5 9]", "(join [[4 6] [2 1 7]]) -> [4 6 2 1 7]", "(join [[6 5 5 1 0] [3 7 4 4 6] [2 4 8] [4 3 0]]) -> [6 5 5 1 0 3 7 4 4 6 2 4 8 4 3 0]", "(join [[7 7 0 0] [4 3 1 5] [3 8 3 2] [1 9 2 4 5]]) -> [7 7 0 0 4 3 1 5 3 8 3 2 1 9 2 4 5]", "(join [[1 6 4 1]]) -> [1 6 4 1]", "(join [[6 8 2 7]]) -> [6 8 2 7]", "(join [[7]]) -> [7]", "(join [[] [4 1 1 0 7] [3 4 1] [8 6 4 0 5] [9 1 6 6]]) -> [4 1 1 0 7 3 4 1 8 6 4 0 5 9 1 6 6]", "(join [[9 0 2 1] [3 2] [8] [4 0]]) -> [9 0 2 1 3 2 8 4 0]", "(join [[8 8 7 8] [3 9 6 5 2] [7] [0 6 2] [7 4]]) -> [8 8 7 8 3 9 6 5 2 7 0 6 2 7 4]", "(join [[8] [6 0 4 2] [0 1 7 5] [7 8 6 9] [8 1 4 6]]) -> [8 6 0 4 2 0 1 7 5 7 8 6 9 8 1 4 6]", "(join [[1 3] [7 8 0] [6 5 1 8] [7] []]) -> [1 3 7 8 0 6 5 1 8 7]", "(join [[5 5 1] [7] [4 8] [9] [4 7 3 2 3]]) -> [5 5 1 7 4 8 9 4 7 3 2 3]", "(join []) -> []", "(join [[] [2 1 0] [7 6 5 6] [6 7 9 2 8] [0]]) -> [2 1 0 7 6 5 6 6 7 9 2 8 0]", "(join []) -> []", "(join [[4 3] [1 3 7] [6 0] [0 2 6 1 0]]) -> [4 3 1 3 7 6 0 0 2 6 1 0]", "(join []) -> []", "(join [[9] []]) -> [9]", "(join [[3 6 6 7 2] [3 8]]) -> [3 6 6 7 2 3 8]", "(join [[7 2 7 6 0] [4] [4 7 2 2] [5 4 6 7 5] []]) -> [7 2 7 6 0 4 4 7 2 2 5 4 6 7 5]", "(join [[6 5] [8 8] [4] [3]]) -> [6 5 8 8 4 3]", "(join [[8] [8 4 9 8] [2 2]]) -> [8 8 4 9 8 2 2]", "(join [[9 3 5 0 5] [0 1 5 9 3] [] [2] [6]]) -> [9 3 5 0 5 0 1 5 9 3 2 6]", "(join [[3 3 6] [9 4] [6 5 8 5]]) -> [3 3 6 9 4 6 5 8 5]", "(join [[5 5 8 7 5] [9] [] [0]]) -> [5 5 8 7 5 9 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.718241}
{"examples": ["(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[] [8 0] [7 4 6 1]]) -> [8 0 7 4 6 1]", "(join [[2 8]]) -> [2 8]", "(join [[3 1] [0 6 3] [8 9]]) -> [3 1 0 6 3 8 9]", "(join [[0 0 4 4 3] [9 6]]) -> [0 0 4 4 3 9 6]", "(join [[]]) -> []", "(join [[1 3 3 6]]) -> [1 3 3 6]", "(join [[]]) -> []", "(join [[] [] [] [9 4 3] [6]]) -> [9 4 3 6]", "(join [[] [2 3]]) -> [2 3]", "(join [[6 1 9 2] [] [5 6 2 6 6]]) -> [6 1 9 2 5 6 2 6 6]", "(join [[] [9 9 3 2] [6 9] [7 5 5 6] [3 6 3]]) -> [9 9 3 2 6 9 7 5 5 6 3 6 3]", "(join []) -> []", "(join [[8 5 0 3] [1 1 8] []]) -> [8 5 0 3 1 1 8]", "(join [[1 3 8 6] [7 1 4 0 2]]) -> [1 3 8 6 7 1 4 0 2]", "(join [[] [3 5 9] [3 4 0] [0 4 9] [5]]) -> [3 5 9 3 4 0 0 4 9 5]", "(join [[9] []]) -> [9]", "(join [[7 8 1] [6 3 6 6]]) -> [7 8 1 6 3 6 6]", "(join [[5] [] [1] [5 8]]) -> [5 1 5 8]", "(join [[4 6 8] [4]]) -> [4 6 8 4]", "(join []) -> []", "(join [[7] [4 6] [7 1 8 3] []]) -> [7 4 6 7 1 8 3]", "(join [[] [8 5 5 4] []]) -> [8 5 5 4]", "(join [[0 1 6 3] [0 8] [0 2 2 6] [9 5] [9 8 5 7 9]]) -> [0 1 6 3 0 8 0 2 2 6 9 5 9 8 5 7 9]", "(join [[6 4 2 9 1]]) -> [6 4 2 9 1]", "(join [[6 8 3 5 1] [7 1 9 8 3] [0 5 6 7]]) -> [6 8 3 5 1 7 1 9 8 3 0 5 6 7]", "(join [[]]) -> []", "(join [[] [4 3 0] [0 0 8 2 5] [4 3 8]]) -> [4 3 0 0 0 8 2 5 4 3 8]", "(join [[8 7 9 8 2]]) -> [8 7 9 8 2]", "(join [[0 1] [2] [6 4] [5 1 9] []]) -> [0 1 2 6 4 5 1 9]", "(join [[4 5 2]]) -> [4 5 2]", "(join []) -> []", "(join []) -> []", "(join [[6 7 9 8 9] [7 2 7] [2] [1 9 9 9 1] []]) -> [6 7 9 8 9 7 2 7 2 1 9 9 9 1]", "(join [[8 2 4] [1 0 0]]) -> [8 2 4 1 0 0]", "(join [[9]]) -> [9]", "(join [[2 3 5 9] [4 7 3] [3 4] [7 4]]) -> [2 3 5 9 4 7 3 3 4 7 4]", "(join [[3 6 2 2 4]]) -> [3 6 2 2 4]", "(join [[5]]) -> [5]", "(join [[3 3 4] [6] [0] [4 0] [1 6 3]]) -> [3 3 4 6 0 4 0 1 6 3]", "(join [[1 3] [8 2 8 7] [5 1] [8 4 6] [3 7]]) -> [1 3 8 2 8 7 5 1 8 4 6 3 7]", "(join [[1 5 3 5] [0 9] []]) -> [1 5 3 5 0 9]", "(join [[6 1]]) -> [6 1]", "(join [[0] [7 2 6 4 2] []]) -> [0 7 2 6 4 2]", "(join []) -> []", "(join [[6 9]]) -> [6 9]", "(join [[8 2 8 3 4] [2 2 1] [7]]) -> [8 2 8 3 4 2 2 1 7]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.65792}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[0 2] [7] [4 4 6 9] [4 5 0 0 8] [7 3 5 2 5]]) -> [0 2 7 4 4 6 9 4 5 0 0 8 7 3 5 2 5]", "(join [[0 5 4 1 1] [] [8 2] [9 2 2 3 4] [2 6]]) -> [0 5 4 1 1 8 2 9 2 2 3 4 2 6]", "(join [[5 6 5 3]]) -> [5 6 5 3]", "(join [[8] [3 4 0] [0 1 6 7] [4 4 4 2 9] [3 5]]) -> [8 3 4 0 0 1 6 7 4 4 4 2 9 3 5]", "(join []) -> []", "(join [[8 1 4 8] [3 5] [] [5 4 9 9 6] [0 8 8 4 3]]) -> [8 1 4 8 3 5 5 4 9 9 6 0 8 8 4 3]", "(join [[1 1 4] [9 9] [5 2 4 5 5] [] [2 9]]) -> [1 1 4 9 9 5 2 4 5 5 2 9]", "(join [[]]) -> []", "(join [[2 0 1]]) -> [2 0 1]", "(join []) -> []", "(join [[4] [6 5 7] [0 6] [1 5] [5 5 6 6 2]]) -> [4 6 5 7 0 6 1 5 5 5 6 6 2]", "(join []) -> []", "(join [[6 4 1 2] [3 5 9 0] [2 9 3 8] [] [4 1 8]]) -> [6 4 1 2 3 5 9 0 2 9 3 8 4 1 8]", "(join []) -> []", "(join [[5 5 8 6 1] [8] []]) -> [5 5 8 6 1 8]", "(join []) -> []", "(join [[3 4] [0] [9] [6]]) -> [3 4 0 9 6]", "(join [[2] []]) -> [2]", "(join [[4 2 7] [] [5 4 9 6] [7] []]) -> [4 2 7 5 4 9 6 7]", "(join [[4 2 9 8] [] []]) -> [4 2 9 8]", "(join [[7 7] [0 2 9 1 3] [7 9 1 2]]) -> [7 7 0 2 9 1 3 7 9 1 2]", "(join []) -> []", "(join [[]]) -> []", "(join [[6] [] [8 0 8]]) -> [6 8 0 8]", "(join [[7 5] [2] []]) -> [7 5 2]", "(join [[7 7 5 1]]) -> [7 7 5 1]", "(join [[3 3 1 0] [3 9 3 2 0] [] [4] []]) -> [3 3 1 0 3 9 3 2 0 4]", "(join [[0]]) -> [0]", "(join []) -> []", "(join [[1 4 7] [4] []]) -> [1 4 7 4]", "(join [[] [9 4 1] [2 4] [8]]) -> [9 4 1 2 4 8]", "(join [[6 8 2] [8] [9 2 2]]) -> [6 8 2 8 9 2 2]", "(join []) -> []", "(join [[3 8 5] [5 4 5]]) -> [3 8 5 5 4 5]", "(join [[9 5 6] [9 3 6]]) -> [9 5 6 9 3 6]", "(join [[2 1] [6]]) -> [2 1 6]", "(join [[1 7 9]]) -> [1 7 9]", "(join [[3]]) -> [3]", "(join [[0 2 9] [6 1 3 0 1] []]) -> [0 2 9 6 1 3 0 1]", "(join [[2 1 4 3] [2] [] [4 1 7 8 7] [3 6 9 7 3]]) -> [2 1 4 3 2 4 1 7 8 7 3 6 9 7 3]", "(join [[6 8 2 6 6] [5]]) -> [6 8 2 6 6 5]", "(join [[9 6 6] [4 8] [7 2 2]]) -> [9 6 6 4 8 7 2 2]", "(join []) -> []", "(join [[5] [2] [3] []]) -> [5 2 3]", "(join [[2]]) -> [2]", "(join [[5 8 7 4 6] [8 4 8] [0 6] [8 7]]) -> [5 8 7 4 6 8 4 8 0 6 8 7]", "(join [[3]]) -> [3]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.680405}
{"examples": ["(join []) -> []", "(join [[9 4 9 5] [3 5]]) -> [9 4 9 5 3 5]", "(join [[0 8 9] [8 9] [8 9 8 3] [5 0 8] [9 1 1]]) -> [0 8 9 8 9 8 9 8 3 5 0 8 9 1 1]", "(join [[5] [5 4 6] [6 6 4] []]) -> [5 5 4 6 6 6 4]", "(join [[3 3 7 9] []]) -> [3 3 7 9]", "(join []) -> []", "(join []) -> []", "(join [[4 0 8 1] []]) -> [4 0 8 1]", "(join [[9 9 6 3] [8 5 9] [2]]) -> [9 9 6 3 8 5 9 2]", "(join [[2 4] [1 2 9]]) -> [2 4 1 2 9]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[0 5 4] [8 0 7 2] [0 1 6 1] [0 2 9]]) -> [0 5 4 8 0 7 2 0 1 6 1 0 2 9]", "(join [[3 5 3] [] [7] [3 6 3 4] [3 7 4 6 5]]) -> [3 5 3 7 3 6 3 4 3 7 4 6 5]", "(join [[3]]) -> [3]", "(join [[3] [] [0 6] [0 1]]) -> [3 0 6 0 1]", "(join [[]]) -> []", "(join []) -> []", "(join [[1 1] [5 2 0 5 2]]) -> [1 1 5 2 0 5 2]", "(join [[9 7 8 1 2] [] [1 1 2 7]]) -> [9 7 8 1 2 1 1 2 7]", "(join []) -> []", "(join [[2 8 3] [7 4 5 8]]) -> [2 8 3 7 4 5 8]", "(join [[9 4 8] [6 4] [6 0 9 7 1]]) -> [9 4 8 6 4 6 0 9 7 1]", "(join [[4 1 9 1] [1 9] [6 8 9]]) -> [4 1 9 1 1 9 6 8 9]", "(join [[7 4 6 5]]) -> [7 4 6 5]", "(join [[9 9 6 5]]) -> [9 9 6 5]", "(join [[5 7 8 7] [8 1 5 9] [9 8 2] [1 5] [5 2 4]]) -> [5 7 8 7 8 1 5 9 9 8 2 1 5 5 2 4]", "(join [[9 7 7 6 8] [4] [8 8 2 6 0]]) -> [9 7 7 6 8 4 8 8 2 6 0]", "(join [[1] [9 8 2] [2 0 3] [6 2 7 1 5] [6 9]]) -> [1 9 8 2 2 0 3 6 2 7 1 5 6 9]", "(join [[0 8 1]]) -> [0 8 1]", "(join []) -> []", "(join [[2 4 6] [0] [1 7 9] [8] [0 9 5 3 2]]) -> [2 4 6 0 1 7 9 8 0 9 5 3 2]", "(join []) -> []", "(join [[] [] [8 0] []]) -> [8 0]", "(join [[] [] [4]]) -> [4]", "(join [[6 3 6 7] [] [8 2 6] [2 0 1 2] [7 1 9]]) -> [6 3 6 7 8 2 6 2 0 1 2 7 1 9]", "(join [[4 9 4 6] [9 2 9 2] [9]]) -> [4 9 4 6 9 2 9 2 9]", "(join [[]]) -> []", "(join [[] [9 2 5 2] [8 7 4 9]]) -> [9 2 5 2 8 7 4 9]", "(join [[0] [9 3 3 4] [7] [5] [3 4 8 5]]) -> [0 9 3 3 4 7 5 3 4 8 5]", "(join []) -> []", "(join []) -> []", "(join [[7 2 4 7 8] [3]]) -> [7 2 4 7 8 3]", "(join [[8 2 0] [7 3 4 6] [6 5 1 4] [4 3 8] []]) -> [8 2 0 7 3 4 6 6 5 1 4 4 3 8]", "(join [[8 0 0 1]]) -> [8 0 0 1]", "(join []) -> []", "(join [[0 5 4 4 2]]) -> [0 5 4 4 2]", "(join [[5] []]) -> [5]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.618225}
{"examples": ["(join []) -> []", "(join [[7 2 2] [2 5 8] [3] [3]]) -> [7 2 2 2 5 8 3 3]", "(join [[8] [8 2 7 5]]) -> [8 8 2 7 5]", "(join []) -> []", "(join [[8 4 8 0] [2 4 9 0] [2 7 3 0 5] [0 1 9] [4 4 8 8]]) -> [8 4 8 0 2 4 9 0 2 7 3 0 5 0 1 9 4 4 8 8]", "(join []) -> []", "(join [[] [9 2 8 0 2]]) -> [9 2 8 0 2]", "(join [[1] [7 7 1] [] [] [3 0 8 9 8]]) -> [1 7 7 1 3 0 8 9 8]", "(join [[0 1]]) -> [0 1]", "(join [[2 5 1 0 5] [] [9 0 7 5 8] [1 0 4]]) -> [2 5 1 0 5 9 0 7 5 8 1 0 4]", "(join [[4] [2 2 7 1 9] [1 0 5] []]) -> [4 2 2 7 1 9 1 0 5]", "(join []) -> []", "(join [[7 5] [7 9 0 0 4] [2 0 1]]) -> [7 5 7 9 0 0 4 2 0 1]", "(join [[4 8 8 2 4] [2 2 1 0] [6 2 1 8] [4 6 2 9] [1 4 4]]) -> [4 8 8 2 4 2 2 1 0 6 2 1 8 4 6 2 9 1 4 4]", "(join []) -> []", "(join []) -> []", "(join [[0] [6 7 8 9 8] [7 1 0 1 1] [9 1 1]]) -> [0 6 7 8 9 8 7 1 0 1 1 9 1 1]", "(join []) -> []", "(join [[] [3 0 2 1 7]]) -> [3 0 2 1 7]", "(join [[1 4] [1 5 6 7 5] [1 7]]) -> [1 4 1 5 6 7 5 1 7]", "(join []) -> []", "(join [[1 3 4 1] [9 2 0 0] [9 7 8 7] [6 9 0 5 2]]) -> [1 3 4 1 9 2 0 0 9 7 8 7 6 9 0 5 2]", "(join [[6 7 8] [4 8] [7 2 2] [6]]) -> [6 7 8 4 8 7 2 2 6]", "(join [[1 7 3 7] [9 4]]) -> [1 7 3 7 9 4]", "(join [[8 7 8 4 8] [7] [0 0] [5 3 2 9] [8]]) -> [8 7 8 4 8 7 0 0 5 3 2 9 8]", "(join [[8 5 6 1 7] [0 7 6 3]]) -> [8 5 6 1 7 0 7 6 3]", "(join [[4 3 7] [3 5]]) -> [4 3 7 3 5]", "(join []) -> []", "(join [[5]]) -> [5]", "(join []) -> []", "(join []) -> []", "(join [[0 7 8 8 9] [8 2 5]]) -> [0 7 8 8 9 8 2 5]", "(join [[6 7]]) -> [6 7]", "(join [[3 8] [3] [0 4 0 9] [5 0 3] [6 5 7 9]]) -> [3 8 3 0 4 0 9 5 0 3 6 5 7 9]", "(join [[5 6]]) -> [5 6]", "(join []) -> []", "(join [[2 9 0 5 7] [5] [7 3 3] [8 3] []]) -> [2 9 0 5 7 5 7 3 3 8 3]", "(join [[6 2 3 4 8] [4 4 1] [9 5] [] [9 7 7 9 1]]) -> [6 2 3 4 8 4 4 1 9 5 9 7 7 9 1]", "(join []) -> []", "(join [[6] []]) -> [6]", "(join [[9 0 5 5 4] [] [] [6]]) -> [9 0 5 5 4 6]", "(join [[5 3 3 6 6] [6 2 0] [4 1] []]) -> [5 3 3 6 6 6 2 0 4 1]", "(join [[4] [] [9 4 5 9] [2 9] [5 3 8 9]]) -> [4 9 4 5 9 2 9 5 3 8 9]", "(join [[2 2 9]]) -> [2 2 9]", "(join [[8] [6]]) -> [8 6]", "(join [[4]]) -> [4]", "(join [[] [] [8 9 8 9]]) -> [8 9 8 9]", "(join [[8 9 2] [3 7 0 7 6]]) -> [8 9 2 3 7 0 7 6]", "(join [[5 5 1 3 8]]) -> [5 5 1 3 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.78318}
{"examples": ["(join []) -> []", "(join [[5 9 0 5 4] [2 9 8 4] [] [6 7]]) -> [5 9 0 5 4 2 9 8 4 6 7]", "(join [[2 2 7 6 1] [6 0] [6 4 0] [3 6 9] [6 7 8]]) -> [2 2 7 6 1 6 0 6 4 0 3 6 9 6 7 8]", "(join [[6]]) -> [6]", "(join [[6]]) -> [6]", "(join [[0] [] [5 7 8] [1 0]]) -> [0 5 7 8 1 0]", "(join [[3 6 0] [] [1] [3 2 8 9] [9 4 5 7]]) -> [3 6 0 1 3 2 8 9 9 4 5 7]", "(join [[0 8 4] [0] [9] [0 9 0 3]]) -> [0 8 4 0 9 0 9 0 3]", "(join []) -> []", "(join []) -> []", "(join [[2 0] [9 8 2] [9]]) -> [2 0 9 8 2 9]", "(join [[] [8 3 4 4] [3 1 4]]) -> [8 3 4 4 3 1 4]", "(join [[4 6 0 6]]) -> [4 6 0 6]", "(join [[]]) -> []", "(join [[2 4]]) -> [2 4]", "(join [[6] [1 1] [0 9 1 3 2] [6 5 0]]) -> [6 1 1 0 9 1 3 2 6 5 0]", "(join [[] [9 1 2 3] [2 0]]) -> [9 1 2 3 2 0]", "(join [[8] [7 1] [7]]) -> [8 7 1 7]", "(join [[3] [9 0 3 9 9] [7 8 6]]) -> [3 9 0 3 9 9 7 8 6]", "(join [[5 0 7 0 8] [] [8 2 5]]) -> [5 0 7 0 8 8 2 5]", "(join [[3] [9 2] [9 3]]) -> [3 9 2 9 3]", "(join [[3 0 2]]) -> [3 0 2]", "(join []) -> []", "(join [[7 5 9] [6 5] [2 8 0 8 1]]) -> [7 5 9 6 5 2 8 0 8 1]", "(join []) -> []", "(join [[8 1 9]]) -> [8 1 9]", "(join [[] [4 9 6 8] [] [0 9]]) -> [4 9 6 8 0 9]", "(join [[8]]) -> [8]", "(join []) -> []", "(join [[] [] [3]]) -> [3]", "(join [[0 5 2 8 6] [6 4 2 4] [5 0 3] [] [0 3]]) -> [0 5 2 8 6 6 4 2 4 5 0 3 0 3]", "(join [[] [3 2 6 2 1] []]) -> [3 2 6 2 1]", "(join [[2 9 2]]) -> [2 9 2]", "(join []) -> []", "(join [[] [1 5] [8]]) -> [1 5 8]", "(join []) -> []", "(join [[] [] [6 7] [1 6 2 0]]) -> [6 7 1 6 2 0]", "(join []) -> []", "(join [[0 7 1]]) -> [0 7 1]", "(join [[] [3 0 9] [7 5 5 2]]) -> [3 0 9 7 5 5 2]", "(join [[3] [3 6 5] [8]]) -> [3 3 6 5 8]", "(join [[9 9 0 9] [4 0] [4 2 3 2 0] [] [3 9]]) -> [9 9 0 9 4 0 4 2 3 2 0 3 9]", "(join [[3 7]]) -> [3 7]", "(join [[9 0] [0 5 5 6 9] [9 9 6]]) -> [9 0 0 5 5 6 9 9 9 6]", "(join [[0 2 3 4 8] [0 1 5 1]]) -> [0 2 3 4 8 0 1 5 1]", "(join [[1] [9 6 3 2] [8 2 4 3 3] [3 2 8 6]]) -> [1 9 6 3 2 8 2 4 3 3 3 2 8 6]", "(join [[] [0 9 4] [7 4 2 8 5] [2]]) -> [0 9 4 7 4 2 8 5 2]", "(join [[3 2 6 8] [4 6 6 2 4]]) -> [3 2 6 8 4 6 6 2 4]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.684476}
{"examples": ["(join []) -> []", "(join [[0 6] [3 3] [0 7 1] []]) -> [0 6 3 3 0 7 1]", "(join []) -> []", "(join [[5 5 2 5 0] [1 1 0 1 9] [3 6 5] [6]]) -> [5 5 2 5 0 1 1 0 1 9 3 6 5 6]", "(join [[2 1 9 4 3] [1 6] [7 9 3 4]]) -> [2 1 9 4 3 1 6 7 9 3 4]", "(join [[2 8 1 8 0]]) -> [2 8 1 8 0]", "(join [[] [8] [1 5 1] [4 1 7]]) -> [8 1 5 1 4 1 7]", "(join [[5] [] [8 4 5 3] [0 8 9]]) -> [5 8 4 5 3 0 8 9]", "(join [[] [5 5 2 6 7] [3 0 9 4] [3]]) -> [5 5 2 6 7 3 0 9 4 3]", "(join [[8 3 2] [6 2]]) -> [8 3 2 6 2]", "(join [[8 3 5] [8] [2 2] [0 1]]) -> [8 3 5 8 2 2 0 1]", "(join []) -> []", "(join [[6] [2 6 6]]) -> [6 2 6 6]", "(join [[5] [5 8] []]) -> [5 5 8]", "(join [[7 0 8] [0 4 2 4] [1 9 3 9 4] []]) -> [7 0 8 0 4 2 4 1 9 3 9 4]", "(join [[2 8 4 2] [] [4 4 4 4 4]]) -> [2 8 4 2 4 4 4 4 4]", "(join [[0 1]]) -> [0 1]", "(join []) -> []", "(join [[1 7] [6 3 1]]) -> [1 7 6 3 1]", "(join [[9 0 7 6] [8 3] [3 7 0] [0 8] [3 8 2 7 6]]) -> [9 0 7 6 8 3 3 7 0 0 8 3 8 2 7 6]", "(join [[2 6] [2 6] [] [1 0 4 5 3] [7 3 2 3 8]]) -> [2 6 2 6 1 0 4 5 3 7 3 2 3 8]", "(join [[6 0 6 0 8]]) -> [6 0 6 0 8]", "(join [[] [9 8 4 9 1] [6 6 8 9] [8] [6]]) -> [9 8 4 9 1 6 6 8 9 8 6]", "(join [[] [7 3 2 7]]) -> [7 3 2 7]", "(join [[2 2 3] [9 2 9 4 8] [6 2 8 5] []]) -> [2 2 3 9 2 9 4 8 6 2 8 5]", "(join [[7 7 3 4 7] [5 1] [9 6 4]]) -> [7 7 3 4 7 5 1 9 6 4]", "(join [[8 8 5 0 6] [0 9 6] [3 8 6 7 9]]) -> [8 8 5 0 6 0 9 6 3 8 6 7 9]", "(join [[7 9 4]]) -> [7 9 4]", "(join []) -> []", "(join [[0 8 5 3 1]]) -> [0 8 5 3 1]", "(join []) -> []", "(join [[3]]) -> [3]", "(join [[]]) -> []", "(join []) -> []", "(join [[1 8 0] [] [] [1 8] [1 2]]) -> [1 8 0 1 8 1 2]", "(join [[] [1 1 0] [1 5] [6 2 8] [9 1 3 7 4]]) -> [1 1 0 1 5 6 2 8 9 1 3 7 4]", "(join []) -> []", "(join []) -> []", "(join [[]]) -> []", "(join [[0 3] [4 8 0] [4 9 0 1] [5 3 3]]) -> [0 3 4 8 0 4 9 0 1 5 3 3]", "(join []) -> []", "(join [[] []]) -> []", "(join [[] [4 7 3 4] [2 5 6 3]]) -> [4 7 3 4 2 5 6 3]", "(join [[2 4 1 4 4] [0] [1 7 0] [9 3] [3 1 5 3]]) -> [2 4 1 4 4 0 1 7 0 9 3 3 1 5 3]", "(join [[4 9 5 0] [1 7] [1 5] [1 7 7 9]]) -> [4 9 5 0 1 7 1 5 1 7 7 9]", "(join []) -> []", "(join [[6 8 7 5 1]]) -> [6 8 7 5 1]", "(join [[2 1 4 2 0] [9 2] [1 4 7] [] [4 8 6 8 5]]) -> [2 1 4 2 0 9 2 1 4 7 4 8 6 8 5]", "(join [[5 8 3] [3 5 7] [] [2 9 8 0]]) -> [5 8 3 3 5 7 2 9 8 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.568543}
{"examples": ["(join []) -> []", "(join [[] [8 7 0 7 7] [7 0]]) -> [8 7 0 7 7 7 0]", "(join [[5 2] [1] [2] [4 8 6]]) -> [5 2 1 2 4 8 6]", "(join [[6 9 6 3] [0] [3 9]]) -> [6 9 6 3 0 3 9]", "(join [[4 4]]) -> [4 4]", "(join [[2 7] [2 2] [4 0]]) -> [2 7 2 2 4 0]", "(join [[2 3] [] [6 2 3 3] [8 4 7] [1 5 3]]) -> [2 3 6 2 3 3 8 4 7 1 5 3]", "(join [[0 6 0] [9] [2 7 3 9]]) -> [0 6 0 9 2 7 3 9]", "(join []) -> []", "(join [[0 3] [3 4] [9 7 5 1]]) -> [0 3 3 4 9 7 5 1]", "(join []) -> []", "(join [[1 0 9 8] [8 0 7 0 1] [2 1] [9 5 7]]) -> [1 0 9 8 8 0 7 0 1 2 1 9 5 7]", "(join [[5 6 4 2 8]]) -> [5 6 4 2 8]", "(join [[2 6 5 2 3] [7] [5]]) -> [2 6 5 2 3 7 5]", "(join [[0 7] [4 8] [3] [9 2 7 7 9]]) -> [0 7 4 8 3 9 2 7 7 9]", "(join []) -> []", "(join [[9 1 7 3] [6 4] [5 2 6] [8 0 1 1] [9 1 5]]) -> [9 1 7 3 6 4 5 2 6 8 0 1 1 9 1 5]", "(join [[3 9 5 7 1]]) -> [3 9 5 7 1]", "(join [[3] [7 1]]) -> [3 7 1]", "(join [[] [1 3 9 5 9] [7 4 1 4 4]]) -> [1 3 9 5 9 7 4 1 4 4]", "(join [[0 3 2 0 3] [1 5] [5 8] [3 0 9 1 4]]) -> [0 3 2 0 3 1 5 5 8 3 0 9 1 4]", "(join [[] [1] [0 3 1 2]]) -> [1 0 3 1 2]", "(join [[7] [7 2] [9 0 2] [2 8 5 5 2]]) -> [7 7 2 9 0 2 2 8 5 5 2]", "(join [[2] [1] [2 5 0 0 7]]) -> [2 1 2 5 0 0 7]", "(join [[3] [1 9 3 0]]) -> [3 1 9 3 0]", "(join [[2]]) -> [2]", "(join [[4 7 6 8] [8 2 5 7 8] [6 1 1] [7 7 7 1 2]]) -> [4 7 6 8 8 2 5 7 8 6 1 1 7 7 7 1 2]", "(join [[3 7] [5] [9 4 8]]) -> [3 7 5 9 4 8]", "(join []) -> []", "(join [[7 8 4]]) -> [7 8 4]", "(join [[8 0] [4 9] [4 4 1 9 2]]) -> [8 0 4 9 4 4 1 9 2]", "(join [[]]) -> []", "(join [[4] []]) -> [4]", "(join [[0 1 8 2] [3 5 9 1] [8 6 2 6]]) -> [0 1 8 2 3 5 9 1 8 6 2 6]", "(join [[6 3]]) -> [6 3]", "(join [[5 2 1 4] [5 5 9 5] [6 0 6] [8 6 6 7 7] []]) -> [5 2 1 4 5 5 9 5 6 0 6 8 6 6 7 7]", "(join [[6 0 2 3]]) -> [6 0 2 3]", "(join [[4 1 1]]) -> [4 1 1]", "(join [[0] []]) -> [0]", "(join []) -> []", "(join [[9]]) -> [9]", "(join [[1] [7] [2 0 7 4 9] [6] [9 1 2 3 2]]) -> [1 7 2 0 7 4 9 6 9 1 2 3 2]", "(join [[8 1 7 0 9] [1 2 9] [5 4 6 5] [9]]) -> [8 1 7 0 9 1 2 9 5 4 6 5 9]", "(join [[] [1 1] [1]]) -> [1 1 1]", "(join [[7 6] [] [5 1 5 8 6] [6] [5 2 5]]) -> [7 6 5 1 5 8 6 6 5 2 5]", "(join [[1 5 3] [4 7 4] [2 1 6] [8 3 4 0]]) -> [1 5 3 4 7 4 2 1 6 8 3 4 0]", "(join [[7 5 4 7 0] [7 4 3]]) -> [7 5 4 7 0 7 4 3]", "(join [[3 3] [1 2 1]]) -> [3 3 1 2 1]", "(join [[] [3 3 3 2] [8]]) -> [3 3 3 2 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.706658}
{"examples": ["(join []) -> []", "(join [[0 8] [4 7]]) -> [0 8 4 7]", "(join [[1 0 5] [7 2 4 7 0] [1 7 1 2 9]]) -> [1 0 5 7 2 4 7 0 1 7 1 2 9]", "(join [[3] [7 4 6 0] [] [8 0]]) -> [3 7 4 6 0 8 0]", "(join [[1 1 8]]) -> [1 1 8]", "(join [[] []]) -> []", "(join []) -> []", "(join [[0 4 6 3] [1 8] [8 6 6] [7 2 5] [3 8 2 9]]) -> [0 4 6 3 1 8 8 6 6 7 2 5 3 8 2 9]", "(join [[1 7 5 8 1] [8 2 0 3 9] [4 5 4 2] [4 9] [8 3]]) -> [1 7 5 8 1 8 2 0 3 9 4 5 4 2 4 9 8 3]", "(join [[9 5] [3 3 7 2 7] [6 0 9 7]]) -> [9 5 3 3 7 2 7 6 0 9 7]", "(join [[5 1 9 0]]) -> [5 1 9 0]", "(join []) -> []", "(join [[7 9 7 0 1] [5] [3 0]]) -> [7 9 7 0 1 5 3 0]", "(join [[8 8 7 8] [5 2 9] [] [] [4 4]]) -> [8 8 7 8 5 2 9 4 4]", "(join []) -> []", "(join [[5 0 3 3 3] [4 7 8 0] [2 0 9 2]]) -> [5 0 3 3 3 4 7 8 0 2 0 9 2]", "(join [[4 2 4] [5 4 4 1 3] [] [7]]) -> [4 2 4 5 4 4 1 3 7]", "(join [[3 7 2 4 7]]) -> [3 7 2 4 7]", "(join [[2] [] [3 9 5] [4 3]]) -> [2 3 9 5 4 3]", "(join [[0 5] [5 6 7 7] [7 2 6 6 8] [1 6 3 2 2] []]) -> [0 5 5 6 7 7 7 2 6 6 8 1 6 3 2 2]", "(join []) -> []", "(join [[0 4 7]]) -> [0 4 7]", "(join [[3 7 1 3] [1 2] [] [4 0]]) -> [3 7 1 3 1 2 4 0]", "(join [[] [3 4 2] [6 5 1]]) -> [3 4 2 6 5 1]", "(join [[7 9] [8 9] [8 3 9 3] [4 1 8 3 0] [8 5 5]]) -> [7 9 8 9 8 3 9 3 4 1 8 3 0 8 5 5]", "(join []) -> []", "(join [[] [7 1 0 8 7] []]) -> [7 1 0 8 7]", "(join [[0] [7 8 0 4 4] [8 6 4 3]]) -> [0 7 8 0 4 4 8 6 4 3]", "(join [[7 7 5 1] [0 0 0]]) -> [7 7 5 1 0 0 0]", "(join [[6 8] [] [] [1 3 8 0 2]]) -> [6 8 1 3 8 0 2]", "(join [[1 8 8] [1 1 6 6] [7 0 9 7 1]]) -> [1 8 8 1 1 6 6 7 0 9 7 1]", "(join [[0 5 1 1 1] [6] [6 4 6] []]) -> [0 5 1 1 1 6 6 4 6]", "(join [[7 6] [4 7 1] [8 7 8 5] [2 1 7 5] [5 4]]) -> [7 6 4 7 1 8 7 8 5 2 1 7 5 5 4]", "(join [[2] [7] [9 0 5 7 5] [6 9] []]) -> [2 7 9 0 5 7 5 6 9]", "(join [[2 9 9 3 0] [2 0] [2 5 2 4] [8 0]]) -> [2 9 9 3 0 2 0 2 5 2 4 8 0]", "(join [[1 3 2] [8 3 9 7 5] [3 1 6 6 6] [] [7 6]]) -> [1 3 2 8 3 9 7 5 3 1 6 6 6 7 6]", "(join [[8 0 0 3]]) -> [8 0 0 3]", "(join []) -> []", "(join [[6] [4 0]]) -> [6 4 0]", "(join []) -> []", "(join [[6 7 1 6]]) -> [6 7 1 6]", "(join [[] [] [6] [3 6 3]]) -> [6 3 6 3]", "(join [[1 5 3 3 4] [6 6 5] [] [9 8 4 2] [3 5 5 6]]) -> [1 5 3 3 4 6 6 5 9 8 4 2 3 5 5 6]", "(join [[0 4 5 0 4] [8 0 0] []]) -> [0 4 5 0 4 8 0 0]", "(join [[1 9 7 9]]) -> [1 9 7 9]", "(join []) -> []", "(join [[6 7 5]]) -> [6 7 5]", "(join [[5 5] [8 4 0] [9 6] [2]]) -> [5 5 8 4 0 9 6 2]", "(join [[4 1 7 5 8]]) -> [4 1 7 5 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.590705}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[8 5 1 1 0] [1 6] [2 6] [3] [4 7 7 7 5]]) -> [8 5 1 1 0 1 6 2 6 3 4 7 7 7 5]", "(join [[7] [] [0 6 3 7 6] [7 2 0 8 8]]) -> [7 0 6 3 7 6 7 2 0 8 8]", "(join [[9 3] [8 7 8]]) -> [9 3 8 7 8]", "(join [[5 9 6 3]]) -> [5 9 6 3]", "(join [[0 2 0] [5 7] [3 5 1 7 3] [3 3] [5]]) -> [0 2 0 5 7 3 5 1 7 3 3 3 5]", "(join [[7 5 4 7 6] [8 5 4] [1 9] [7 5] [1]]) -> [7 5 4 7 6 8 5 4 1 9 7 5 1]", "(join [[9] [3 0 1] [5 0] [8 6 5] [7 9]]) -> [9 3 0 1 5 0 8 6 5 7 9]", "(join [[4 9 8] [] [6 7] []]) -> [4 9 8 6 7]", "(join [[8 9] [9 3 8 1 4] []]) -> [8 9 9 3 8 1 4]", "(join [[9 6]]) -> [9 6]", "(join []) -> []", "(join [[7 6] [6 3 5 3]]) -> [7 6 6 3 5 3]", "(join [[6 4 5 8 5] [6 5 3] [0] []]) -> [6 4 5 8 5 6 5 3 0]", "(join [[4 0 5 6 5]]) -> [4 0 5 6 5]", "(join []) -> []", "(join [[0] [5 8 8 7 6]]) -> [0 5 8 8 7 6]", "(join [[1 6 2 1 6] [5 7 1] [2 3] [2 4 8 6 4]]) -> [1 6 2 1 6 5 7 1 2 3 2 4 8 6 4]", "(join [[] [1 6]]) -> [1 6]", "(join [[1 3 6 3] [6 3 2] []]) -> [1 3 6 3 6 3 2]", "(join [[8 1 0 4 4] [2 2] [] [8 9 7]]) -> [8 1 0 4 4 2 2 8 9 7]", "(join [[] [2] [0 5 2] [5 2 2 0 4]]) -> [2 0 5 2 5 2 2 0 4]", "(join [[4 9 0 3] [] [7 2]]) -> [4 9 0 3 7 2]", "(join [[9 5] [8 4 3 5 7] [5] []]) -> [9 5 8 4 3 5 7 5]", "(join [[1 2 8] [2 3] [0 5 5] [8 4]]) -> [1 2 8 2 3 0 5 5 8 4]", "(join [[8 9 8 0 7] [9]]) -> [8 9 8 0 7 9]", "(join [[4 1]]) -> [4 1]", "(join [[2] [4 4]]) -> [2 4 4]", "(join [[3 0 3 7] [2 1 4] [8 7 0 5 4] [5 9] [1 8]]) -> [3 0 3 7 2 1 4 8 7 0 5 4 5 9 1 8]", "(join [[8] [2 4] [5 9 8]]) -> [8 2 4 5 9 8]", "(join [[2 8 5] [5 3 5 3 6] [5 4 6]]) -> [2 8 5 5 3 5 3 6 5 4 6]", "(join [[0 7 6 7] [1 2 2] []]) -> [0 7 6 7 1 2 2]", "(join [[9 9 7 7 5] [4 4] [6 3] [1 7 9 2 4]]) -> [9 9 7 7 5 4 4 6 3 1 7 9 2 4]", "(join [[6 5] [6 2 9 8] [1] [2] [4 4]]) -> [6 5 6 2 9 8 1 2 4 4]", "(join [[8]]) -> [8]", "(join [[9] [7 6 2 1] [] [2]]) -> [9 7 6 2 1 2]", "(join [[0 5 7 0] [5]]) -> [0 5 7 0 5]", "(join [[7]]) -> [7]", "(join [[5 9 0 1] [1]]) -> [5 9 0 1 1]", "(join [[6 3 9 6 8]]) -> [6 3 9 6 8]", "(join []) -> []", "(join [[0] [6 2 0 3] [6 5 0]]) -> [0 6 2 0 3 6 5 0]", "(join [[] [6 7 1]]) -> [6 7 1]", "(join [[7 4] [0] [7 2 3]]) -> [7 4 0 7 2 3]", "(join [[] [1 9] [9 5 9]]) -> [1 9 9 5 9]", "(join [[7] [7 2 3 5 9] [2 9] [0 4 2 5 4] [0]]) -> [7 7 2 3 5 9 2 9 0 4 2 5 4 0]", "(join [[7 5 8] [9] [0 3 1]]) -> [7 5 8 9 0 3 1]", "(join [[8] [2 4 1 1] [6 1 2]]) -> [8 2 4 1 1 6 1 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.540177}
{"examples": ["(join []) -> []", "(join [[8 8 1] [5 2 6 2 7] [3] [3] [9]]) -> [8 8 1 5 2 6 2 7 3 3 9]", "(join [[9 1] [9 5 9 4] [3 4 4 4]]) -> [9 1 9 5 9 4 3 4 4 4]", "(join [[4 3]]) -> [4 3]", "(join [[5 9] [] []]) -> [5 9]", "(join [[1 1 6 4] [5 4 4 2] [1 2 9 6 7] [1 0 5]]) -> [1 1 6 4 5 4 4 2 1 2 9 6 7 1 0 5]", "(join [[3 1] [] [4 4 6 9]]) -> [3 1 4 4 6 9]", "(join [[5 9] [] [1 0] [5 8 3 6]]) -> [5 9 1 0 5 8 3 6]", "(join [[0 7 5 2 0] [9 6 1 1 8] []]) -> [0 7 5 2 0 9 6 1 1 8]", "(join []) -> []", "(join [[8 4]]) -> [8 4]", "(join [[3 6 6] [0 2 2]]) -> [3 6 6 0 2 2]", "(join [[8 1 2 8] [2 3 9 5 6] [5 3] [3 5 4 3] []]) -> [8 1 2 8 2 3 9 5 6 5 3 3 5 4 3]", "(join [[2 1] [2] [9 7 2 0 1] [7 1] [7 0]]) -> [2 1 2 9 7 2 0 1 7 1 7 0]", "(join [[8 0 4]]) -> [8 0 4]", "(join [[5] [] [9 5 0] [2 2 5 0] [0 7 1 7]]) -> [5 9 5 0 2 2 5 0 0 7 1 7]", "(join [[5 3 1] [] [4 7] [6 9] []]) -> [5 3 1 4 7 6 9]", "(join []) -> []", "(join [[] [0]]) -> [0]", "(join [[2 1] [8] [2 0 1 9 4] [8 4]]) -> [2 1 8 2 0 1 9 4 8 4]", "(join [[] [] [5] []]) -> [5]", "(join []) -> []", "(join [[4] [3 8 9 2 6] [3] [8 7 9 1 7] [1 8 8]]) -> [4 3 8 9 2 6 3 8 7 9 1 7 1 8 8]", "(join []) -> []", "(join [[] [1]]) -> [1]", "(join [[5 4 2] [7] [0 3 8 4]]) -> [5 4 2 7 0 3 8 4]", "(join [[] []]) -> []", "(join [[2 8] [] [0 8 7] [5 3 2 6 0]]) -> [2 8 0 8 7 5 3 2 6 0]", "(join [[0 0 3 2 3]]) -> [0 0 3 2 3]", "(join [[3 5] [4 8] [6 7 5] [5 7 4 3 5]]) -> [3 5 4 8 6 7 5 5 7 4 3 5]", "(join [[5 7 0 6 0] [2] [2 0 2 7 0] [9] []]) -> [5 7 0 6 0 2 2 0 2 7 0 9]", "(join [[]]) -> []", "(join []) -> []", "(join [[5 5 2 8] [3 9 8]]) -> [5 5 2 8 3 9 8]", "(join [[]]) -> []", "(join [[2] [6 2 5 3] []]) -> [2 6 2 5 3]", "(join []) -> []", "(join [[0] [0 5 6] [] [3 4 7 5 8]]) -> [0 0 5 6 3 4 7 5 8]", "(join [[5] [8]]) -> [5 8]", "(join [[0 2 2 3]]) -> [0 2 2 3]", "(join []) -> []", "(join [[3] [0 8 5] [5] [8 4] [4]]) -> [3 0 8 5 5 8 4 4]", "(join [[0 6 1 2 0] [9 6 2] [4 3] [3 0 3 5] [3 8 3 1 1]]) -> [0 6 1 2 0 9 6 2 4 3 3 0 3 5 3 8 3 1 1]", "(join [[8 1] [2 4 5 0] []]) -> [8 1 2 4 5 0]", "(join [[9 1 6 4] [6 9 7 1 5] [5 0 4 6 6]]) -> [9 1 6 4 6 9 7 1 5 5 0 4 6 6]", "(join [[8] [9 0] [0 3] [0 4]]) -> [8 9 0 0 3 0 4]", "(join [[8 9 1 0 0] [2] [] [3 7 1 1] [3]]) -> [8 9 1 0 0 2 3 7 1 1 3]", "(join []) -> []", "(join [[3 5] [7 3 5 1] [] [6 9 1 4]]) -> [3 5 7 3 5 1 6 9 1 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.473277}
{"examples": ["(join []) -> []", "(join [[3 4] [] [5] [6 6]]) -> [3 4 5 6 6]", "(join [[6] [7 5] [1 0 2 2 7] [5 7 1]]) -> [6 7 5 1 0 2 2 7 5 7 1]", "(join [[8 7 0 2] [7] [8 4]]) -> [8 7 0 2 7 8 4]", "(join [[3 3 7 7 3] [5 5] [8 7 9 6]]) -> [3 3 7 7 3 5 5 8 7 9 6]", "(join [[1 1 8] [6 0] [3 8 8] []]) -> [1 1 8 6 0 3 8 8]", "(join [[9 2]]) -> [9 2]", "(join [[4 3 3] [] [9] [5 8] [6 1 3]]) -> [4 3 3 9 5 8 6 1 3]", "(join [[1 8 0 8] [7 8 1 9] [0 1] [9 6 7 2 5]]) -> [1 8 0 8 7 8 1 9 0 1 9 6 7 2 5]", "(join [[]]) -> []", "(join []) -> []", "(join [[] [3 0 4 7] [3 1 4]]) -> [3 0 4 7 3 1 4]", "(join [[0 3 8 1] []]) -> [0 3 8 1]", "(join [[3 4 8] [] [4 6] [8 0 3 4]]) -> [3 4 8 4 6 8 0 3 4]", "(join [[5 9 1 1 7] [8] [1 5 3] [0 5 1 9 0]]) -> [5 9 1 1 7 8 1 5 3 0 5 1 9 0]", "(join [[4 4 8 4] [5 9]]) -> [4 4 8 4 5 9]", "(join [[5 5 6 7 1] [5 2 6 5] [6] [3] [5 8]]) -> [5 5 6 7 1 5 2 6 5 6 3 5 8]", "(join [[8 0 2] [3 4] [7] [7]]) -> [8 0 2 3 4 7 7]", "(join []) -> []", "(join [[7 2] [2 0 7 2 4] [1]]) -> [7 2 2 0 7 2 4 1]", "(join [[4] [] [1] [9 4 2 4]]) -> [4 1 9 4 2 4]", "(join [[] [] [1]]) -> [1]", "(join [[1 7 8]]) -> [1 7 8]", "(join [[6] [0 7 3 6]]) -> [6 0 7 3 6]", "(join [[2 7] [] [3 2]]) -> [2 7 3 2]", "(join [[7 7 4]]) -> [7 7 4]", "(join [[5 3 8 8] [1 0 1 4 7]]) -> [5 3 8 8 1 0 1 4 7]", "(join []) -> []", "(join [[4] [5 0] [7 8]]) -> [4 5 0 7 8]", "(join [[0 6 8 6 8] [4 6 8 4 3] [] [1]]) -> [0 6 8 6 8 4 6 8 4 3 1]", "(join [[] [3 3]]) -> [3 3]", "(join [[3 7 1] [] [4 5] [4 3 8] [2 9 1 8]]) -> [3 7 1 4 5 4 3 8 2 9 1 8]", "(join [[7 5 1 7 0] [4 8]]) -> [7 5 1 7 0 4 8]", "(join [[8 3 2 7] [9 9 8 4 9] []]) -> [8 3 2 7 9 9 8 4 9]", "(join [[0 6 6 7 0] [7] [4] [8 5 5]]) -> [0 6 6 7 0 7 4 8 5 5]", "(join [[5 8 0] [8] [1 6 9 8 6] [0 7 4 1]]) -> [5 8 0 8 1 6 9 8 6 0 7 4 1]", "(join [[6 0] [1 9] [5 7 0 0 5] [6 5] [2 0 4]]) -> [6 0 1 9 5 7 0 0 5 6 5 2 0 4]", "(join [[0 4 9]]) -> [0 4 9]", "(join []) -> []", "(join [[9 5] [0 2 6 0] [3 6 6] [2 3 8 3 4] []]) -> [9 5 0 2 6 0 3 6 6 2 3 8 3 4]", "(join []) -> []", "(join [[] [9 1 4 8] [4 3 0 8 4] [4 8 6]]) -> [9 1 4 8 4 3 0 8 4 4 8 6]", "(join [[4 6 6 8 1] [6 9 5]]) -> [4 6 6 8 1 6 9 5]", "(join [[] [1 7 4] [4 3 4 6 0] [8 7]]) -> [1 7 4 4 3 4 6 0 8 7]", "(join [[] [7 2 0 4] [3 0]]) -> [7 2 0 4 3 0]", "(join [[1 6 1] [1 8 4] []]) -> [1 6 1 1 8 4]", "(join []) -> []", "(join [[5 2] [3 1 6 8 5] [5] [2 6 6 1 0] [7 5 1]]) -> [5 2 3 1 6 8 5 5 2 6 6 1 0 7 5 1]", "(join [[9] [] [3 9 8]]) -> [9 3 9 8]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.607016}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[] [1 7 1 2] []]) -> [1 7 1 2]", "(join [[8 2 8 9 2]]) -> [8 2 8 9 2]", "(join [[5]]) -> [5]", "(join [[2 1 9 4] [0 2 5 4 9]]) -> [2 1 9 4 0 2 5 4 9]", "(join [[5 7 4 5 2] []]) -> [5 7 4 5 2]", "(join [[6 8]]) -> [6 8]", "(join [[3 4 5 4 2]]) -> [3 4 5 4 2]", "(join [[7 4 5 0 4] [] [2 8 0 7]]) -> [7 4 5 0 4 2 8 0 7]", "(join [[9 4 5] [0 5]]) -> [9 4 5 0 5]", "(join [[3 0 9 1 3]]) -> [3 0 9 1 3]", "(join [[] [5 6 6]]) -> [5 6 6]", "(join [[0 6] [2 2]]) -> [0 6 2 2]", "(join [[] []]) -> []", "(join [[0 8 1] [6 6 2 0 9]]) -> [0 8 1 6 6 2 0 9]", "(join [[0] [6 0 9]]) -> [0 6 0 9]", "(join [[] [] [] [5 8 2 3 8] [3 7]]) -> [5 8 2 3 8 3 7]", "(join [[6 5 9 7 7]]) -> [6 5 9 7 7]", "(join []) -> []", "(join [[] [1] [9 7]]) -> [1 9 7]", "(join [[3 0 8 1] [1 7 3 0 0] [4 3] [5] [5]]) -> [3 0 8 1 1 7 3 0 0 4 3 5 5]", "(join [[1 8 2 9 2]]) -> [1 8 2 9 2]", "(join [[4 8 0 7 2] [3 0] [2] [1 4 6]]) -> [4 8 0 7 2 3 0 2 1 4 6]", "(join [[] [0 8 6] [2 1] [1 2 1 6] [7 0 8]]) -> [0 8 6 2 1 1 2 1 6 7 0 8]", "(join [[] [9 1 7] [4 8] [1 4 4] [4 4]]) -> [9 1 7 4 8 1 4 4 4 4]", "(join [[] [4] [] []]) -> [4]", "(join []) -> []", "(join [[3] []]) -> [3]", "(join [[1 0 7] []]) -> [1 0 7]", "(join [[2 9 0] [] []]) -> [2 9 0]", "(join [[0 3 2 9] [] [3 5 4] [] [9 5]]) -> [0 3 2 9 3 5 4 9 5]", "(join [[] [9 5 7 8] [7] [2 3 0 4 4] [7 3 8 9 5]]) -> [9 5 7 8 7 2 3 0 4 4 7 3 8 9 5]", "(join [[3 1 9] [] [3 1 5] [0 8 0 4] [4 1]]) -> [3 1 9 3 1 5 0 8 0 4 4 1]", "(join [[1 0 0 0 0] [2 5] [2 9 9 3 2]]) -> [1 0 0 0 0 2 5 2 9 9 3 2]", "(join [[9 1] [9]]) -> [9 1 9]", "(join [[4 7 9] [] [9 8]]) -> [4 7 9 9 8]", "(join [[8 9 2 6 1]]) -> [8 9 2 6 1]", "(join []) -> []", "(join [[9 3 5 1 5]]) -> [9 3 5 1 5]", "(join [[] [] [4 8] [7 2]]) -> [4 8 7 2]", "(join []) -> []", "(join []) -> []", "(join [[5 0 9]]) -> [5 0 9]", "(join [[0 8 3 9 7] [6] [2] [0 4 4 1] [1 4]]) -> [0 8 3 9 7 6 2 0 4 4 1 1 4]", "(join [[0 9 6] [7 5 2 5 1] [9 7 3 8]]) -> [0 9 6 7 5 2 5 1 9 7 3 8]", "(join [[]]) -> []", "(join [[4] [] [] [5 3]]) -> [4 5 3]", "(join [[] [9 0 0 7 4]]) -> [9 0 0 7 4]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.588803}
{"examples": ["(join []) -> []", "(join []) -> []", "(join [[8 9 4 4]]) -> [8 9 4 4]", "(join [[7 3 0 1] [3 5 8] [6] [0 4]]) -> [7 3 0 1 3 5 8 6 0 4]", "(join [[6 6 2 6] [5 8] [0 1 1 2] [7] []]) -> [6 6 2 6 5 8 0 1 1 2 7]", "(join [[8 8 3 6 3] [6 6 3 5 6] [8] [] [4 6 2]]) -> [8 8 3 6 3 6 6 3 5 6 8 4 6 2]", "(join [[2 2] [9 6] []]) -> [2 2 9 6]", "(join [[] [9 7 2] [6 2] [6 6] []]) -> [9 7 2 6 2 6 6]", "(join [[7]]) -> [7]", "(join [[2 2 3] [] [8]]) -> [2 2 3 8]", "(join [[4] [5 8 2 5] [8 2 7] [] [5 8 0 7]]) -> [4 5 8 2 5 8 2 7 5 8 0 7]", "(join [[3 7] [7 6] [9] [4 4 0]]) -> [3 7 7 6 9 4 4 0]", "(join [[9 0 7]]) -> [9 0 7]", "(join [[6 1 0 5 7] [9] [2] [6 4 0 8]]) -> [6 1 0 5 7 9 2 6 4 0 8]", "(join []) -> []", "(join []) -> []", "(join [[] [1 4 7 1] [1 1 8 5 4] [1 2]]) -> [1 4 7 1 1 1 8 5 4 1 2]", "(join [[6 6 4 4] [4] [0] [1 5 0 9 4]]) -> [6 6 4 4 4 0 1 5 0 9 4]", "(join [[6 6 2]]) -> [6 6 2]", "(join [[8 3 3]]) -> [8 3 3]", "(join [[0 8 8 2] [7 2 9]]) -> [0 8 8 2 7 2 9]", "(join [[8] []]) -> [8]", "(join [[2 4 0] [] [] [5 6 1]]) -> [2 4 0 5 6 1]", "(join [[3 7] [4 4 5 7] [4 2 0 8 0] [3 6 3 9 5]]) -> [3 7 4 4 5 7 4 2 0 8 0 3 6 3 9 5]", "(join [[] [9]]) -> [9]", "(join [[0]]) -> [0]", "(join [[] [7]]) -> [7]", "(join [[8 4 2 6 6] [4]]) -> [8 4 2 6 6 4]", "(join [[]]) -> []", "(join [[]]) -> []", "(join [[7 1 3 1 7] [4] [5]]) -> [7 1 3 1 7 4 5]", "(join [[4 6 6] [2] [6 3 6] [6 7 7 5 9] []]) -> [4 6 6 2 6 3 6 6 7 7 5 9]", "(join [[] []]) -> []", "(join [[0 7 0 0]]) -> [0 7 0 0]", "(join [[] [0 8 2] [] [8 7 6] [7 5 3 5 6]]) -> [0 8 2 8 7 6 7 5 3 5 6]", "(join []) -> []", "(join [[7 5] [] [5 9 3]]) -> [7 5 5 9 3]", "(join [[3 0] [7 0]]) -> [3 0 7 0]", "(join [[5] [5 0] [7 8 5 4 6]]) -> [5 5 0 7 8 5 4 6]", "(join [[9 0 3 0] [] [7 4] [2]]) -> [9 0 3 0 7 4 2]", "(join [[4] [5 0 3 1 4] [9 0 1 3 3]]) -> [4 5 0 3 1 4 9 0 1 3 3]", "(join [[5 8] [9 5] [6 1 4 6] [] [8 9]]) -> [5 8 9 5 6 1 4 6 8 9]", "(join [[6 8 0 1] [2] [3 3] [6] [5 8 9 5]]) -> [6 8 0 1 2 3 3 6 5 8 9 5]", "(join [[] [9 3 6 9 1] [9 5 9 1] [4 7 0] []]) -> [9 3 6 9 1 9 5 9 1 4 7 0]", "(join [[8 3 1]]) -> [8 3 1]", "(join [[2 4 0 9 9] [2 3] [2] [6 2 1 6]]) -> [2 4 0 9 9 2 3 2 6 2 1 6]", "(join [[7 5] [3 2 0] [6 4 6]]) -> [7 5 3 2 0 6 4 6]", "(join []) -> []", "(join [[2] [3 7 2 2] [2 2] []]) -> [2 3 7 2 2 2 2]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.359159}
{"examples": ["(join []) -> []", "(join [[9 9 5 1 5] [8 4 1] [5 7 3 4 3] [0 3]]) -> [9 9 5 1 5 8 4 1 5 7 3 4 3 0 3]", "(join [[7 7 1] [3 2]]) -> [7 7 1 3 2]", "(join [[5 9 4] [2] [5] []]) -> [5 9 4 2 5]", "(join [[5 9 3] [1]]) -> [5 9 3 1]", "(join [[2 2] [8] [2 4 3] []]) -> [2 2 8 2 4 3]", "(join [[1] [5 4 7 8 3]]) -> [1 5 4 7 8 3]", "(join [[6 9] [7 4 3] [1]]) -> [6 9 7 4 3 1]", "(join [[5 4 2] [8 1 3 9] [7 3 5 3] [2 4 0 5 9] [3 2]]) -> [5 4 2 8 1 3 9 7 3 5 3 2 4 0 5 9 3 2]", "(join [[] [0 9 2]]) -> [0 9 2]", "(join [[7 7]]) -> [7 7]", "(join []) -> []", "(join []) -> []", "(join [[8 5]]) -> [8 5]", "(join [[1 8 8 1 1] [6] [1 7 6 8]]) -> [1 8 8 1 1 6 1 7 6 8]", "(join [[4]]) -> [4]", "(join [[7 9 5 1 5] [7 2 8 9] [4 6 9 2] [5 2 6 6] [8 6 3 4]]) -> [7 9 5 1 5 7 2 8 9 4 6 9 2 5 2 6 6 8 6 3 4]", "(join [[3 5] [2 2] [5] [7 9 2] [1 9 3 8]]) -> [3 5 2 2 5 7 9 2 1 9 3 8]", "(join [[7 7] [9 5 4 2]]) -> [7 7 9 5 4 2]", "(join [[7 5 7 8]]) -> [7 5 7 8]", "(join [[9 9] [7 6 1 4 7]]) -> [9 9 7 6 1 4 7]", "(join [[7 5 0 5 4] [5 7 1 7 7] [1 9] [7]]) -> [7 5 0 5 4 5 7 1 7 7 1 9 7]", "(join [[] [9 4 1 9 0] [1 0]]) -> [9 4 1 9 0 1 0]", "(join [[]]) -> []", "(join []) -> []", "(join []) -> []", "(join [[] [2 5 6 4] [1]]) -> [2 5 6 4 1]", "(join [[] [9]]) -> [9]", "(join [[5 9 8] [5 7]]) -> [5 9 8 5 7]", "(join [[4 0] []]) -> [4 0]", "(join [[]]) -> []", "(join [[7 5] [4 5]]) -> [7 5 4 5]", "(join []) -> []", "(join [[4 0 9 7 3] [4] [9 3 0 9]]) -> [4 0 9 7 3 4 9 3 0 9]", "(join [[7 6 5 7 3] [3 4 8] [2 9 8] []]) -> [7 6 5 7 3 3 4 8 2 9 8]", "(join [[0 2]]) -> [0 2]", "(join [[2 3 9 0 5] [] [7] [1 3 8 0]]) -> [2 3 9 0 5 7 1 3 8 0]", "(join [[4 2 9 0 3] [4 9 8 5] [2]]) -> [4 2 9 0 3 4 9 8 5 2]", "(join [[4 8] [7] [8 5 1 5 5] [4 2 0 9]]) -> [4 8 7 8 5 1 5 5 4 2 0 9]", "(join [[5 9] [6 8 1] [3 6 5 5] [5 8 9 7]]) -> [5 9 6 8 1 3 6 5 5 5 8 9 7]", "(join [[7 4 8 6] [1 9]]) -> [7 4 8 6 1 9]", "(join [[] [3 0 3 6] [0 4] [3] [8]]) -> [3 0 3 6 0 4 3 8]", "(join [[9] [6 0 0 8] [4] [5 9 3]]) -> [9 6 0 0 8 4 5 9 3]", "(join [[] [1 0 4 2] [2 5]]) -> [1 0 4 2 2 5]", "(join []) -> []", "(join [[9 0 0 0] [] [8 5] [3]]) -> [9 0 0 0 8 5 3]", "(join [[8 8 7 9 0] [2 2 5] [2 4] [8 0 6]]) -> [8 8 7 9 0 2 2 5 2 4 8 0 6]", "(join []) -> []", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.485336}
{"examples": ["(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[2 0] [1 7 4] [0 3 2] [2 1 6 3 7] [9 4 4]]) -> [2 0 1 7 4 0 3 2 2 1 6 3 7 9 4 4]", "(join [[1 5 5 9 6] [1 1] [6 6 2] [2 4 1 2 4]]) -> [1 5 5 9 6 1 1 6 6 2 2 4 1 2 4]", "(join [[2 7] [6 9] [1]]) -> [2 7 6 9 1]", "(join [[2 4 0 5] [2 0 9 6] []]) -> [2 4 0 5 2 0 9 6]", "(join []) -> []", "(join [[3 3 1 3 0] [] [3] [] [7]]) -> [3 3 1 3 0 3 7]", "(join [[1 1 5 0] [6 7 8] [1 2 5 5 0] [5 4 1 7 4] [7]]) -> [1 1 5 0 6 7 8 1 2 5 5 0 5 4 1 7 4 7]", "(join [[5 7 8 8 3] []]) -> [5 7 8 8 3]", "(join [[0 9 1] [2 3]]) -> [0 9 1 2 3]", "(join [[3 2 8 2] [1 3] [9 8 2 9]]) -> [3 2 8 2 1 3 9 8 2 9]", "(join [[4 8 3 5 0] [2] [] [4 3 2 5 3]]) -> [4 8 3 5 0 2 4 3 2 5 3]", "(join [[8 0 0] [3 6 0 1]]) -> [8 0 0 3 6 0 1]", "(join [[7 8 2]]) -> [7 8 2]", "(join []) -> []", "(join [[3] [] [9 2 3 4 4]]) -> [3 9 2 3 4 4]", "(join [[]]) -> []", "(join [[3 4 8] [0 5 7]]) -> [3 4 8 0 5 7]", "(join [[7 0 2 6] [1 6 6 5 0] [4 3 6 1] [2 6]]) -> [7 0 2 6 1 6 6 5 0 4 3 6 1 2 6]", "(join [[1 4] [9 1 4 9] []]) -> [1 4 9 1 4 9]", "(join [[] [] [5 9 2 4 3] [8 6] [6 5]]) -> [5 9 2 4 3 8 6 6 5]", "(join [[8 3] []]) -> [8 3]", "(join [[] [9 1]]) -> [9 1]", "(join [[3 9 8 9 8]]) -> [3 9 8 9 8]", "(join [[] [6 1 8 0 2] [4 5 4] [4] [1 6 0 1]]) -> [6 1 8 0 2 4 5 4 4 1 6 0 1]", "(join [[7 4]]) -> [7 4]", "(join [[4 4] [8 0 8 1 4] [8 7 4]]) -> [4 4 8 0 8 1 4 8 7 4]", "(join []) -> []", "(join [[0 2 1] [3 4] [6 7] [9 1 4 6 3] [4 4 2 7]]) -> [0 2 1 3 4 6 7 9 1 4 6 3 4 4 2 7]", "(join [[0 7 0 8 1] [9 2]]) -> [0 7 0 8 1 9 2]", "(join [[] [3 7 2] [0 9] [9] [9 5 9]]) -> [3 7 2 0 9 9 9 5 9]", "(join [[]]) -> []", "(join [[6] [6 1 5 7 9] [3]]) -> [6 6 1 5 7 9 3]", "(join [[4 3 2 2 0] []]) -> [4 3 2 2 0]", "(join [[7 4] [8 1 5] [7]]) -> [7 4 8 1 5 7]", "(join [[1 0 8 8] [2 0 1 7] [8] [] [6]]) -> [1 0 8 8 2 0 1 7 8 6]", "(join [[1] [] [5 0 2] [4 2 6 8] []]) -> [1 5 0 2 4 2 6 8]", "(join [[8] [8 8] [2 5]]) -> [8 8 8 2 5]", "(join [[6 2 0 2 9] [4] [2 1 4 7 4] [8 9 0] []]) -> [6 2 0 2 9 4 2 1 4 7 4 8 9 0]", "(join [[] [0 4 1 6 9]]) -> [0 4 1 6 9]", "(join [[6 8 4 6]]) -> [6 8 4 6]", "(join [[7 0 5] [] [6 4]]) -> [7 0 5 6 4]", "(join []) -> []", "(join [[5 8 3] [8 5 0 6] [1 0 4 6 6] [0 9 4 2] [3 9 7]]) -> [5 8 3 8 5 0 6 1 0 4 6 6 0 9 4 2 3 9 7]", "(join [[4]]) -> [4]", "(join []) -> []", "(join [[] [0 3 6]]) -> [0 3 6]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.427615}
{"examples": ["(join []) -> []", "(join [[8 9] [0 1 1 9] [0 9 1 4] [7 0 3 2] [6]]) -> [8 9 0 1 1 9 0 9 1 4 7 0 3 2 6]", "(join [[0 7 7 0] [1]]) -> [0 7 7 0 1]", "(join [[1 3 4] [0 4 1 0 8] [0 3 6 0 4] []]) -> [1 3 4 0 4 1 0 8 0 3 6 0 4]", "(join [[0] [] [] [8 4 1 2 6] [4 2 6 0]]) -> [0 8 4 1 2 6 4 2 6 0]", "(join [[1]]) -> [1]", "(join [[4 4 3 9] [3]]) -> [4 4 3 9 3]", "(join [[0] [3 2 8 8] [6] [9 7 1] []]) -> [0 3 2 8 8 6 9 7 1]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[2 6 4] [0 1 0]]) -> [2 6 4 0 1 0]", "(join [[4 4] [7 5 8 9 6] [1 9 3 0]]) -> [4 4 7 5 8 9 6 1 9 3 0]", "(join []) -> []", "(join [[4 1 4 0] [9 3 4] [5 3 0 5 8]]) -> [4 1 4 0 9 3 4 5 3 0 5 8]", "(join [[9] [7 9] [] [6 8 6 4]]) -> [9 7 9 6 8 6 4]", "(join [[6 1 3 1 2] [4] [] [8 4] [0 9 3]]) -> [6 1 3 1 2 4 8 4 0 9 3]", "(join [[4 5 2 2 4] [6 4 3 7] [2 4] [3 3 2 8 5]]) -> [4 5 2 2 4 6 4 3 7 2 4 3 3 2 8 5]", "(join [[2 4 1] [1] [6 5 0 7 4] [] [0 5]]) -> [2 4 1 1 6 5 0 7 4 0 5]", "(join [[3 7 2 4 0]]) -> [3 7 2 4 0]", "(join [[]]) -> []", "(join [[] [5 0 8] [8 3 2]]) -> [5 0 8 8 3 2]", "(join [[6] [] [7]]) -> [6 7]", "(join [[3 0 8] [] [5]]) -> [3 0 8 5]", "(join [[3 1 0 0] [8 2 2 4]]) -> [3 1 0 0 8 2 2 4]", "(join [[] [8] [6 9 1]]) -> [8 6 9 1]", "(join [[] [] [7]]) -> [7]", "(join [[3 9] [9] []]) -> [3 9 9]", "(join [[6 0] [1 4 6 2 7] [4] [0]]) -> [6 0 1 4 6 2 7 4 0]", "(join [[1 0 8 6 4] [2 3 2 1 5] [3 7 0]]) -> [1 0 8 6 4 2 3 2 1 5 3 7 0]", "(join [[8 7 8] [3] [1 6] [1 9 4]]) -> [8 7 8 3 1 6 1 9 4]", "(join [[0 5 1 8] [0 2]]) -> [0 5 1 8 0 2]", "(join [[3 3] [6 1 3 7 9] [5 4 2 2]]) -> [3 3 6 1 3 7 9 5 4 2 2]", "(join [[8] []]) -> [8]", "(join [[6 2 8 3] [4 0 0] [6 9 6] [7 2 7] [5 0]]) -> [6 2 8 3 4 0 0 6 9 6 7 2 7 5 0]", "(join [[7 5 1 1] []]) -> [7 5 1 1]", "(join []) -> []", "(join []) -> []", "(join []) -> []", "(join [[5 4 9 4] [0]]) -> [5 4 9 4 0]", "(join [[4 9 3 7] [] [] [7 3]]) -> [4 9 3 7 7 3]", "(join []) -> []", "(join [[2 7] [9 9 7 7 2]]) -> [2 7 9 9 7 7 2]", "(join [[]]) -> []", "(join []) -> []", "(join [[1] [1 7 3] [6 7 6 1 4] [0 4] [5 2 1]]) -> [1 1 7 3 6 7 6 1 4 0 4 5 2 1]", "(join [[]]) -> []", "(join [[] [9 8 9] [5 9 5 4 9]]) -> [9 8 9 5 9 5 4 9]", "(join []) -> []"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.496895}
{"examples": ["(join []) -> []", "(join [[8 3 4 1 4] [7 5 3 8] [5] [1]]) -> [8 3 4 1 4 7 5 3 8 5 1]", "(join []) -> []", "(join []) -> []", "(join [[3 6] [] [3 6]]) -> [3 6 3 6]", "(join [[8 9] []]) -> [8 9]", "(join [[9 5 6] [4 7 1 6] [9] [3 0 2 6 3] [0 8 9 1]]) -> [9 5 6 4 7 1 6 9 3 0 2 6 3 0 8 9 1]", "(join [[1] [] []]) -> [1]", "(join [[9] [6] [1 1] [] [4 4]]) -> [9 6 1 1 4 4]", "(join [[5 3 0 8] [8 5 8] [5 4]]) -> [5 3 0 8 8 5 8 5 4]", "(join [[0 4 3] [6 5 7] [6 9 6 3 2]]) -> [0 4 3 6 5 7 6 9 6 3 2]", "(join [[]]) -> []", "(join []) -> []", "(join [[5 9]]) -> [5 9]", "(join [[3 5] [1 9 3] [2 8] [1] [0 1 0 9 8]]) -> [3 5 1 9 3 2 8 1 0 1 0 9 8]", "(join [[4 6 5 1 7] [2] [4 9 2] [6] [7 4]]) -> [4 6 5 1 7 2 4 9 2 6 7 4]", "(join [[4 5 0 3] [3] [4 5 7]]) -> [4 5 0 3 3 4 5 7]", "(join []) -> []", "(join []) -> []", "(join [[2 1 0 8 0]]) -> [2 1 0 8 0]", "(join [[2 2 8 3 9] [7 3 5 1 7]]) -> [2 2 8 3 9 7 3 5 1 7]", "(join [[6 2 7 4] [6 8] [1]]) -> [6 2 7 4 6 8 1]", "(join []) -> []", "(join [[2 7 2 5 7] [4 8 8 3]]) -> [2 7 2 5 7 4 8 8 3]", "(join [[0 7 1 0 6] [6 9] [4 9] [4 6 1 4 4]]) -> [0 7 1 0 6 6 9 4 9 4 6 1 4 4]", "(join [[9 5] [7 3 1 4] [8 4 9 3] [6 7 6] [7 6 7]]) -> [9 5 7 3 1 4 8 4 9 3 6 7 6 7 6 7]", "(join [[5] [6 8]]) -> [5 6 8]", "(join [[4 4] [4 8 8 8 3]]) -> [4 4 4 8 8 8 3]", "(join [[3]]) -> [3]", "(join [[]]) -> []", "(join [[2 0] [8 1 8 0 4] [] [3]]) -> [2 0 8 1 8 0 4 3]", "(join [[2 6 6] [9 0 1 3] [8 6 7 8 4] []]) -> [2 6 6 9 0 1 3 8 6 7 8 4]", "(join [[3] [6 2 9] [7 9] [5 5 4 9 6]]) -> [3 6 2 9 7 9 5 5 4 9 6]", "(join [[6] [0 2 4 3] [9] [] []]) -> [6 0 2 4 3 9]", "(join []) -> []", "(join [[5 6 5]]) -> [5 6 5]", "(join []) -> []", "(join [[9 9 9] [3 2 2] [2 7 8] [6] [5 1 4 7 7]]) -> [9 9 9 3 2 2 2 7 8 6 5 1 4 7 7]", "(join [[4 3] [6 0]]) -> [4 3 6 0]", "(join [[] [] [7]]) -> [7]", "(join []) -> []", "(join []) -> []", "(join [[4 6 9 9 3] [7] []]) -> [4 6 9 9 3 7]", "(join []) -> []", "(join [[2 3 8 7 7] [1 9 0 4 7] [] [4 7 5 6] [1 9 7 3]]) -> [2 3 8 7 7 1 9 0 4 7 4 7 5 6 1 9 7 3]", "(join [[3 0 8 9] [8 9 0] [7]]) -> [3 0 8 9 8 9 0 7]", "(join [[5 7 5 3]]) -> [5 7 5 3]", "(join []) -> []", "(join [[7 1 0] [] [0] [0 5 4 4] [6 4 6 9]]) -> [7 1 0 0 0 5 4 4 6 4 6 9]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.51799}
{"examples": ["(join []) -> []", "(join [[] [6] [2 4 3 1 3] [2]]) -> [6 2 4 3 1 3 2]", "(join [[] [4 0 4] [6 7 3 5]]) -> [4 0 4 6 7 3 5]", "(join [[4 5 5]]) -> [4 5 5]", "(join []) -> []", "(join [[5 5 6] [8 3] [6 4 1 1 9] [9 8 2 2]]) -> [5 5 6 8 3 6 4 1 1 9 9 8 2 2]", "(join [[5 7 0 5 6] [9] [] [0 8] [9 6 9 8 9]]) -> [5 7 0 5 6 9 0 8 9 6 9 8 9]", "(join [[0 5 0 6 7] []]) -> [0 5 0 6 7]", "(join [[7 5 8] [8] [3] [4 7 1 9 7]]) -> [7 5 8 8 3 4 7 1 9 7]", "(join []) -> []", "(join [[6 0 7 2] [] [9 6 8] [7 2]]) -> [6 0 7 2 9 6 8 7 2]", "(join [[3] [] [4 8]]) -> [3 4 8]", "(join [[1 9 1] [9 2 1 4 3]]) -> [1 9 1 9 2 1 4 3]", "(join [[9 4 5 8] [0 3]]) -> [9 4 5 8 0 3]", "(join [[5 6 1 4 6]]) -> [5 6 1 4 6]", "(join [[7 2 7]]) -> [7 2 7]", "(join []) -> []", "(join [[1 4 6] [2 6 5] [3 7 7 2] [4 2 6 3 0]]) -> [1 4 6 2 6 5 3 7 7 2 4 2 6 3 0]", "(join [[] [8 2 6 6 9] [] [6 7] [2 0]]) -> [8 2 6 6 9 6 7 2 0]", "(join [[] [8] [2 9 5]]) -> [8 2 9 5]", "(join [[9 3 6 5] [6 3] [1] [] [9 6 4 2 8]]) -> [9 3 6 5 6 3 1 9 6 4 2 8]", "(join [[9 5 4 3 4] [3 6 9] [9] [9 8]]) -> [9 5 4 3 4 3 6 9 9 9 8]", "(join [[7 6 1] [5 8 8 8 2]]) -> [7 6 1 5 8 8 8 2]", "(join [[3 6] [] [9 1 9 5]]) -> [3 6 9 1 9 5]", "(join [[0 4 1 8] [0 4 9]]) -> [0 4 1 8 0 4 9]", "(join [[1 7]]) -> [1 7]", "(join [[0 1] []]) -> [0 1]", "(join []) -> []", "(join [[]]) -> []", "(join [[2 9 4 8 1] [2 8 4 8 5] [6 6]]) -> [2 9 4 8 1 2 8 4 8 5 6 6]", "(join [[5 3] [0 6 7 9] [] [3] [8]]) -> [5 3 0 6 7 9 3 8]", "(join [[2 6 5 4] [] [8 6 8 2 7] [] [1]]) -> [2 6 5 4 8 6 8 2 7 1]", "(join [[2 0 1 6] [3] [6 7 4 9] []]) -> [2 0 1 6 3 6 7 4 9]", "(join []) -> []", "(join [[] [2 8 6] [] [8 0 3 9]]) -> [2 8 6 8 0 3 9]", "(join [[8 4 7] [3] [8 1] [7 9] [0 1]]) -> [8 4 7 3 8 1 7 9 0 1]", "(join [[6] [2 4]]) -> [6 2 4]", "(join []) -> []", "(join []) -> []", "(join [[] [9] []]) -> [9]", "(join [[6 3 8] [] []]) -> [6 3 8]", "(join [[8] [1 1] [1 9] [4] [3]]) -> [8 1 1 1 9 4 3]", "(join [[9 9 7 8]]) -> [9 9 7 8]", "(join []) -> []", "(join [[4 6 6 4 0] [] [5 8 3 2 5]]) -> [4 6 6 4 0 5 8 3 2 5]", "(join [[] [8 3 9] [] [1 1 8]]) -> [8 3 9 1 1 8]", "(join [[4 0] [1 9 1] [1 5 1 7] [] [3 2 2]]) -> [4 0 1 9 1 1 5 1 7 3 2 2]", "(join [[1 3 7] [4 5] [6 3 2 8] [6 0 0 3] []]) -> [1 3 7 4 5 6 3 2 8 6 0 0 3]", "(join [[6 5 6 0 0] [5 9 0]]) -> [6 5 6 0 0 5 9 0]"], "name": "join", "solution": "(let join (let a (lambda (b) (foldl b (lambda (d c) (foldr d (lambda (f e) (cons e f)) c)) [])) _) _)", "time": 0.443992}
