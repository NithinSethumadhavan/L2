{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173404, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 7 2 6]) -> [0 2 6]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [6 0 7 1 3]) -> [6 0 1 3]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 0 0]) -> [0 0]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.22256, "examples": ["(dropmax []) -> []", "(dropmax [9 0 6 9 5]) -> [0 6 5]", "(dropmax [1 4]) -> [1]", "(dropmax [9 8 1]) -> [8 1]", "(dropmax [1 4 9 6]) -> [1 4 6]", "(dropmax [5]) -> []", "(dropmax []) -> []", "(dropmax [2 1 7]) -> [2 1]", "(dropmax [3 6 7 8]) -> [3 6 7]", "(dropmax [8]) -> []", "(dropmax [7]) -> []", "(dropmax [8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.156971, "examples": ["(dropmax []) -> []", "(dropmax [7 3 3 4 1]) -> [3 3 4 1]", "(dropmax [9 1 5]) -> [1 5]", "(dropmax [1 9]) -> [1]", "(dropmax [4]) -> []", "(dropmax [8 9]) -> [8]", "(dropmax [0 9 6 6]) -> [0 6 6]", "(dropmax [3 5 7 3 5]) -> [3 5 3 5]", "(dropmax [7 5 4 9 6]) -> [7 5 4 6]", "(dropmax [5]) -> []", "(dropmax [2]) -> []", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.213834, "examples": ["(dropmax []) -> []", "(dropmax [4 5 8 2]) -> [4 5 2]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 4]) -> [0]", "(dropmax [4]) -> []", "(dropmax [4 8 1 8]) -> [4 1]", "(dropmax [6]) -> []", "(dropmax [4 7]) -> [4]", "(dropmax [3 1 1 9 6]) -> [3 1 1 6]", "(dropmax [3 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.232101, "examples": ["(dropmax []) -> []", "(dropmax [0 0 5 2 5]) -> [0 0 2]", "(dropmax [0 2]) -> [0]", "(dropmax [9]) -> []", "(dropmax []) -> []", "(dropmax [4 5]) -> [4]", "(dropmax [1 9 4 4]) -> [1 4 4]", "(dropmax [2 1 9 5 4]) -> [2 1 5 4]", "(dropmax [6 0 8]) -> [6 0]", "(dropmax []) -> []", "(dropmax [5 0]) -> [0]", "(dropmax [4 7 9 7 2]) -> [4 7 7 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.171646, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [4 7 7 8 0]) -> [4 7 7 0]", "(dropmax [2 7]) -> [2]", "(dropmax []) -> []", "(dropmax [0 0 3 5]) -> [0 0 3]", "(dropmax [5]) -> []", "(dropmax [4 9]) -> [4]", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [3 0 7 0 9]) -> [3 0 7 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189962, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [2 8 6]) -> [2 6]", "(dropmax [0]) -> []", "(dropmax [9]) -> []", "(dropmax [2 1]) -> [1]", "(dropmax []) -> []", "(dropmax [3 3 5 7]) -> [3 3 5]", "(dropmax [6 4 0 1 6]) -> [4 0 1]", "(dropmax [1 6]) -> [1]", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.147029, "examples": ["(dropmax []) -> []", "(dropmax [1 9]) -> [1]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1 7 1 0]) -> [1 1 0]", "(dropmax []) -> []", "(dropmax [1 7 6]) -> [1 6]", "(dropmax [6 3 4 6]) -> [3 4]", "(dropmax [5 9 5 6 5]) -> [5 5 6 5]", "(dropmax [0 9 3 7]) -> [0 3 7]", "(dropmax [0 2 9]) -> [0 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.211603, "examples": ["(dropmax []) -> []", "(dropmax [7 7 6 1]) -> [6 1]", "(dropmax [8 8 2]) -> [2]", "(dropmax [6 2]) -> [2]", "(dropmax [3 4 8]) -> [3 4]", "(dropmax []) -> []", "(dropmax [4 5 0 2 2]) -> [4 0 2 2]", "(dropmax [4 1]) -> [1]", "(dropmax [8 1 7]) -> [1 7]", "(dropmax []) -> []", "(dropmax [9 7]) -> [7]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.169516, "examples": ["(dropmax []) -> []", "(dropmax [9 3 4 4 5]) -> [3 4 4 5]", "(dropmax [1 0]) -> [0]", "(dropmax []) -> []", "(dropmax [5 6 2]) -> [5 2]", "(dropmax [0 6 1 0]) -> [0 1 0]", "(dropmax [8 0 1]) -> [0 1]", "(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [3 7 9 2 5]) -> [3 7 2 5]", "(dropmax [0 0]) -> []", "(dropmax [9 2 5 0]) -> [2 5 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.18923, "examples": ["(dropmax []) -> []", "(dropmax [0 6 2 8]) -> [0 6 2]", "(dropmax [7]) -> []", "(dropmax [3 8 5 5 6]) -> [3 5 5 6]", "(dropmax [7 4 3 6 4]) -> [4 3 6 4]", "(dropmax [0 6 1]) -> [0 1]", "(dropmax [4 3 3 1 8]) -> [4 3 3 1]", "(dropmax [7 1 7]) -> [1]", "(dropmax [9 8]) -> [8]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178992, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [9 9 1 4]) -> [1 4]", "(dropmax [7]) -> []", "(dropmax [4]) -> []", "(dropmax [3 3 3 6]) -> [3 3 3]", "(dropmax [6 7]) -> [6]", "(dropmax [4 0 1 9 0]) -> [4 0 1 0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.224949, "examples": ["(dropmax []) -> []", "(dropmax [4 8 4 1 9]) -> [4 8 4 1]", "(dropmax [8 0 5 4 1]) -> [0 5 4 1]", "(dropmax []) -> []", "(dropmax [2 9 4]) -> [2 4]", "(dropmax [9 1 8]) -> [1 8]", "(dropmax [0 6]) -> [0]", "(dropmax []) -> []", "(dropmax [5 0 5 2 3]) -> [0 2 3]", "(dropmax [1]) -> []", "(dropmax [1 1 1]) -> []", "(dropmax [1 9 1]) -> [1 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.196576, "examples": ["(dropmax []) -> []", "(dropmax [8 4]) -> [4]", "(dropmax [7 1 1 5]) -> [1 1 5]", "(dropmax [7 8]) -> [7]", "(dropmax [0 2]) -> [0]", "(dropmax [3 2 4 9 4]) -> [3 2 4 4]", "(dropmax [1 9]) -> [1]", "(dropmax [4 1 7 7]) -> [4 1]", "(dropmax [7 2 6 8]) -> [7 2 6]", "(dropmax [8 7 9]) -> [8 7]", "(dropmax [5 4 0]) -> [4 0]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178909, "examples": ["(dropmax []) -> []", "(dropmax [7 0]) -> [0]", "(dropmax [7 4]) -> [4]", "(dropmax [3 3 9]) -> [3 3]", "(dropmax [8 9 3 6 0]) -> [8 3 6 0]", "(dropmax [0 4 0]) -> [0 0]", "(dropmax [2]) -> []", "(dropmax [9 5 8]) -> [5 8]", "(dropmax [3]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.166006, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [7 6]) -> [6]", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax [1 2 7]) -> [1 2]", "(dropmax []) -> []", "(dropmax [6 5 5 3 3]) -> [5 5 3 3]", "(dropmax [4 2 9]) -> [4 2]", "(dropmax [8 3 1]) -> [3 1]", "(dropmax []) -> []", "(dropmax [2 1 1 5 4]) -> [2 1 1 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.147992, "examples": ["(dropmax []) -> []", "(dropmax [0 7]) -> [0]", "(dropmax []) -> []", "(dropmax [3 5 8 8]) -> [3 5]", "(dropmax [9 6 2 8]) -> [6 2 8]", "(dropmax [3 9 4 4]) -> [3 4 4]", "(dropmax [1 7 6]) -> [1 6]", "(dropmax [1 7 8 3]) -> [1 7 3]", "(dropmax []) -> []", "(dropmax [6 5 2 8 3]) -> [6 5 2 3]", "(dropmax [7]) -> []", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177533, "examples": ["(dropmax []) -> []", "(dropmax [5 4]) -> [4]", "(dropmax [9]) -> []", "(dropmax [3 0 1 5]) -> [3 0 1]", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [5 2 5]) -> [2]", "(dropmax [5 5]) -> []", "(dropmax [6 0 4 9 2]) -> [6 0 4 2]", "(dropmax [4]) -> []", "(dropmax [8]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.174198, "examples": ["(dropmax []) -> []", "(dropmax [2 5]) -> [2]", "(dropmax []) -> []", "(dropmax [6 0]) -> [0]", "(dropmax [9 3 8 7]) -> [3 8 7]", "(dropmax [9]) -> []", "(dropmax [2]) -> []", "(dropmax [1 0 2]) -> [1 0]", "(dropmax []) -> []", "(dropmax [1 6 3]) -> [1 3]", "(dropmax [5]) -> []", "(dropmax [1 4 1 1 7]) -> [1 4 1 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.212034, "examples": ["(dropmax []) -> []", "(dropmax [2 5]) -> [2]", "(dropmax [4 5]) -> [4]", "(dropmax [9]) -> []", "(dropmax [8]) -> []", "(dropmax [6 2]) -> [2]", "(dropmax [6 4]) -> [4]", "(dropmax [6 8 1 4 1]) -> [6 1 4 1]", "(dropmax [8 9 9 6]) -> [8 6]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.201752, "examples": ["(dropmax []) -> []", "(dropmax [5 1]) -> [1]", "(dropmax [9 0 9]) -> [0]", "(dropmax []) -> []", "(dropmax [5 8 7]) -> [5 7]", "(dropmax [6 0 1 4]) -> [0 1 4]", "(dropmax [0 6 3 8 0]) -> [0 6 3 0]", "(dropmax [0]) -> []", "(dropmax [9 4 8 4 6]) -> [4 8 4 6]", "(dropmax [5 6 5]) -> [5 5]", "(dropmax [2 4 9 1]) -> [2 4 1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.190694, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 9]) -> [0]", "(dropmax [6 7]) -> [6]", "(dropmax [0 7 1 6 7]) -> [0 1 6]", "(dropmax []) -> []", "(dropmax [1 2 1 5 2]) -> [1 2 1 2]", "(dropmax []) -> []", "(dropmax [3 9 4]) -> [3 4]", "(dropmax [3 0 2 0 0]) -> [0 2 0 0]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179062, "examples": ["(dropmax []) -> []", "(dropmax [1 8 7]) -> [1 7]", "(dropmax [9]) -> []", "(dropmax [5 2]) -> [2]", "(dropmax []) -> []", "(dropmax [9 9]) -> []", "(dropmax [1 7 9 5]) -> [1 7 5]", "(dropmax [9 4 4]) -> [4 4]", "(dropmax [9]) -> []", "(dropmax [5 9 2 3 2]) -> [5 2 3 2]", "(dropmax [4 6 6 4]) -> [4 4]", "(dropmax [7 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177639, "examples": ["(dropmax []) -> []", "(dropmax [8 7]) -> [7]", "(dropmax [3]) -> []", "(dropmax [3]) -> []", "(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax [4 2]) -> [2]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 6 4 6 4]) -> [4 4 4]", "(dropmax []) -> []", "(dropmax [9 8 7]) -> [8 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.169307, "examples": ["(dropmax []) -> []", "(dropmax [6 6 8 9 4]) -> [6 6 8 4]", "(dropmax [6 3 5 6 4]) -> [3 5 4]", "(dropmax [2 0 1 3]) -> [2 0 1]", "(dropmax [1]) -> []", "(dropmax [9]) -> []", "(dropmax [4 1]) -> [1]", "(dropmax [0 0]) -> []", "(dropmax [6 9 0]) -> [6 0]", "(dropmax []) -> []", "(dropmax [4 4 0]) -> [0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.234389, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 8]) -> []", "(dropmax [6 7 1 0]) -> [6 1 0]", "(dropmax [0 8]) -> [0]", "(dropmax [0 6]) -> [0]", "(dropmax [5 8 6]) -> [5 6]", "(dropmax []) -> []", "(dropmax [3 0 3 6 8]) -> [3 0 3 6]", "(dropmax [9 0 1 6]) -> [0 1 6]", "(dropmax [8 5 1 7]) -> [5 1 7]", "(dropmax [4 4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167623, "examples": ["(dropmax []) -> []", "(dropmax [8 8 3 9]) -> [8 8 3]", "(dropmax [1 4 8 1]) -> [1 4 1]", "(dropmax [0 3]) -> [0]", "(dropmax []) -> []", "(dropmax [4 4 7]) -> [4 4]", "(dropmax [0 3 5 8 8]) -> [0 3 5]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 0 1 7]) -> [0 0 1]", "(dropmax []) -> []", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.192377, "examples": ["(dropmax []) -> []", "(dropmax [8 6 4 1 6]) -> [6 4 1 6]", "(dropmax [2 9]) -> [2]", "(dropmax [4 5 0]) -> [4 0]", "(dropmax [9]) -> []", "(dropmax [5 5]) -> []", "(dropmax [9 1 4 7]) -> [1 4 7]", "(dropmax [7 7 0 0]) -> [0 0]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 9 1]) -> [0 1]", "(dropmax [9 6 5]) -> [6 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177581, "examples": ["(dropmax []) -> []", "(dropmax [0 0 0]) -> []", "(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax [7 6 0]) -> [6 0]", "(dropmax [3]) -> []", "(dropmax [3]) -> []", "(dropmax [5 0 4 5 7]) -> [5 0 4 5]", "(dropmax [0]) -> []", "(dropmax [9]) -> []", "(dropmax [3]) -> []", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172928, "examples": ["(dropmax []) -> []", "(dropmax [5 6 0 8 2]) -> [5 6 0 2]", "(dropmax [5 6 2 7]) -> [5 6 2]", "(dropmax []) -> []", "(dropmax [1 9 1 3 3]) -> [1 1 3 3]", "(dropmax [1 2 9 7 5]) -> [1 2 7 5]", "(dropmax []) -> []", "(dropmax [4 8 1 6]) -> [4 1 6]", "(dropmax [2 0]) -> [0]", "(dropmax [8 6 5 4]) -> [6 5 4]", "(dropmax []) -> []", "(dropmax [6 6 8 0]) -> [6 6 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.166162, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 0 9]) -> [5 0]", "(dropmax []) -> []", "(dropmax [1 0]) -> [0]", "(dropmax [8 7 3 7]) -> [7 3 7]", "(dropmax []) -> []", "(dropmax [7 6]) -> [6]", "(dropmax [8 6 4]) -> [6 4]", "(dropmax [5 3 6 6]) -> [5 3]", "(dropmax [7]) -> []", "(dropmax [9 4 8 4 1]) -> [4 8 4 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.188883, "examples": ["(dropmax []) -> []", "(dropmax [8 3 7 5]) -> [3 7 5]", "(dropmax []) -> []", "(dropmax [4 2]) -> [2]", "(dropmax [7]) -> []", "(dropmax [3 5 2 5 8]) -> [3 5 2 5]", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 3 3 2]) -> [3 3 2]", "(dropmax [8 6 8 7]) -> [6 7]", "(dropmax [2 3 0 0 1]) -> [2 0 0 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173584, "examples": ["(dropmax []) -> []", "(dropmax [1 6 6 9 5]) -> [1 6 6 5]", "(dropmax [2 6]) -> [2]", "(dropmax [1 0]) -> [0]", "(dropmax [0 6]) -> [0]", "(dropmax [8]) -> []", "(dropmax []) -> []", "(dropmax [1 4 8 5 2]) -> [1 4 5 2]", "(dropmax [4 5 7 3 7]) -> [4 5 3]", "(dropmax [7 3 5 3 6]) -> [3 5 3 6]", "(dropmax [2]) -> []", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.146097, "examples": ["(dropmax []) -> []", "(dropmax [9 6 0]) -> [6 0]", "(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [1 3]) -> [1]", "(dropmax [5 2 9 7 4]) -> [5 2 7 4]", "(dropmax [9]) -> []", "(dropmax [6 7 6 4 5]) -> [6 6 4 5]", "(dropmax [8 4 6 5]) -> [4 6 5]", "(dropmax [3 5]) -> [3]", "(dropmax [5 3]) -> [3]", "(dropmax [0 8]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.207965, "examples": ["(dropmax []) -> []", "(dropmax [7 8 4 4 0]) -> [7 4 4 0]", "(dropmax [6 7 6 0 9]) -> [6 7 6 0]", "(dropmax [6]) -> []", "(dropmax [0 2 0 2]) -> [0 0]", "(dropmax [7]) -> []", "(dropmax [2 2 3]) -> [2 2]", "(dropmax [8 1]) -> [1]", "(dropmax [6 3 2 6]) -> [3 2]", "(dropmax []) -> []", "(dropmax [0 0 0 5 0]) -> [0 0 0 0]", "(dropmax [4 9 4 2 3]) -> [4 4 2 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.142682, "examples": ["(dropmax []) -> []", "(dropmax [9 4 6]) -> [4 6]", "(dropmax [0 2 7]) -> [0 2]", "(dropmax [9 8 4]) -> [8 4]", "(dropmax [0 5]) -> [0]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 0 1 3 8]) -> [7 0 1 3]", "(dropmax [1 0 3 5 1]) -> [1 0 3 1]", "(dropmax [7]) -> []", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172469, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 4]) -> [2]", "(dropmax []) -> []", "(dropmax [4 2]) -> [2]", "(dropmax [1 2]) -> [1]", "(dropmax [0 2 5 8 6]) -> [0 2 5 6]", "(dropmax [2 2 8 6 1]) -> [2 2 6 1]", "(dropmax [9 6 6 2 6]) -> [6 6 2 6]", "(dropmax [2]) -> []", "(dropmax [1 3]) -> [1]", "(dropmax [2 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.154107, "examples": ["(dropmax []) -> []", "(dropmax [1 7]) -> [1]", "(dropmax [6 1 4 4 0]) -> [1 4 4 0]", "(dropmax [9]) -> []", "(dropmax [4]) -> []", "(dropmax [5]) -> []", "(dropmax [7 5 6 8]) -> [7 5 6]", "(dropmax [6]) -> []", "(dropmax [9 9 0 0]) -> [0 0]", "(dropmax [8 2 1 5 1]) -> [2 1 5 1]", "(dropmax [8 6 6 7]) -> [6 6 7]", "(dropmax [3 0 3 4 9]) -> [3 0 3 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.183379, "examples": ["(dropmax []) -> []", "(dropmax [1 9 2 9]) -> [1 2]", "(dropmax [5 8]) -> [5]", "(dropmax [1]) -> []", "(dropmax [3 2 2 1]) -> [2 2 1]", "(dropmax [3 6 2 7]) -> [3 6 2]", "(dropmax [0 1 8 3]) -> [0 1 3]", "(dropmax [7 2]) -> [2]", "(dropmax [0 0]) -> []", "(dropmax [2]) -> []", "(dropmax [3 6 7 9]) -> [3 6 7]", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177598, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [0 1 4]) -> [0 1]", "(dropmax [7 7]) -> []", "(dropmax [9 0]) -> [0]", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax [4 9 0 3 4]) -> [4 0 3 4]", "(dropmax [6 0]) -> [0]", "(dropmax [0 5]) -> [0]", "(dropmax [4 6]) -> [4]", "(dropmax [4 3 2 8]) -> [4 3 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.159063, "examples": ["(dropmax []) -> []", "(dropmax [8 4 8]) -> [4]", "(dropmax [3 0 6 7 6]) -> [3 0 6 6]", "(dropmax [1 9 2 8]) -> [1 2 8]", "(dropmax [1 3]) -> [1]", "(dropmax [1 0 7 9 1]) -> [1 0 7 1]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [4 2 2 7 2]) -> [4 2 2 2]", "(dropmax [3]) -> []", "(dropmax [7 0 8 5 7]) -> [7 0 5 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177659, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [9 1 9]) -> [1]", "(dropmax [1]) -> []", "(dropmax [1 7 7 1]) -> [1 1]", "(dropmax [7]) -> []", "(dropmax [1 3 5]) -> [1 3]", "(dropmax [3 3 5 7 7]) -> [3 3 5]", "(dropmax [1 0 7 6]) -> [1 0 6]", "(dropmax [2 9 1]) -> [2 1]", "(dropmax []) -> []", "(dropmax [9 4 7]) -> [4 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.193036, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9 1 4]) -> [1 4]", "(dropmax [5 6 9 2 9]) -> [5 6 2]", "(dropmax [2 9 5 3 3]) -> [2 5 3 3]", "(dropmax []) -> []", "(dropmax [5 8 6]) -> [5 6]", "(dropmax [4 2 4 7]) -> [4 2 4]", "(dropmax [9 1 3 6]) -> [1 3 6]", "(dropmax [9 0 9 9 8]) -> [0 8]", "(dropmax [5 0 6]) -> [5 0]", "(dropmax [5 5 0 3]) -> [0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.181944, "examples": ["(dropmax []) -> []", "(dropmax [6 3 6 0 3]) -> [3 0 3]", "(dropmax [1 5 1 7]) -> [1 5 1]", "(dropmax [5 9 5 1 9]) -> [5 5 1]", "(dropmax [8]) -> []", "(dropmax [7 4 4]) -> [4 4]", "(dropmax []) -> []", "(dropmax [1 0 7]) -> [1 0]", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [5 4 7]) -> [5 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.180844, "examples": ["(dropmax []) -> []", "(dropmax [0 6 2 1 8]) -> [0 6 2 1]", "(dropmax [8 0 8 5]) -> [0 5]", "(dropmax [8]) -> []", "(dropmax [4 8]) -> [4]", "(dropmax [5 6]) -> [5]", "(dropmax [5 4 6 9 1]) -> [5 4 6 1]", "(dropmax []) -> []", "(dropmax [5 4 3 7 9]) -> [5 4 3 7]", "(dropmax [0 3 4 2]) -> [0 3 2]", "(dropmax [9 5]) -> [5]", "(dropmax [8 8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172594, "examples": ["(dropmax []) -> []", "(dropmax [8 9]) -> [8]", "(dropmax []) -> []", "(dropmax [9 4]) -> [4]", "(dropmax [5]) -> []", "(dropmax [6 7 4 5]) -> [6 4 5]", "(dropmax []) -> []", "(dropmax [4 7]) -> [4]", "(dropmax [4 6 8 1]) -> [4 6 1]", "(dropmax [2 6 9]) -> [2 6]", "(dropmax []) -> []", "(dropmax [8 4 1 4 5]) -> [4 1 4 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17867, "examples": ["(dropmax []) -> []", "(dropmax [8 2]) -> [2]", "(dropmax [7 2 6 7 8]) -> [7 2 6 7]", "(dropmax [5]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [6 4 2]) -> [4 2]", "(dropmax [3 4 3 1 8]) -> [3 4 3 1]", "(dropmax []) -> []", "(dropmax [2 4 7]) -> [2 4]", "(dropmax [4 4 5]) -> [4 4]", "(dropmax [3 0 8 5]) -> [3 0 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.188533, "examples": ["(dropmax []) -> []", "(dropmax [9 9 1 2 7]) -> [1 2 7]", "(dropmax [3 2]) -> [2]", "(dropmax [2]) -> []", "(dropmax [4 3 0]) -> [3 0]", "(dropmax [7 6]) -> [6]", "(dropmax []) -> []", "(dropmax [7 4 3 0 1]) -> [4 3 0 1]", "(dropmax [6 2 3 2]) -> [2 3 2]", "(dropmax [1]) -> []", "(dropmax [4 6 0 7 6]) -> [4 6 0 6]", "(dropmax [3 7 3 4 2]) -> [3 3 4 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.181313, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [6 0]) -> [0]", "(dropmax [1 4 3 1 5]) -> [1 4 3 1]", "(dropmax [4 8 0 3]) -> [4 0 3]", "(dropmax [1 8 7]) -> [1 7]", "(dropmax [5 0 9 0]) -> [5 0 0]", "(dropmax [9 0 1]) -> [0 1]", "(dropmax [2 4 6]) -> [2 4]", "(dropmax [3 0]) -> [0]", "(dropmax [9 1 8 4 2]) -> [1 8 4 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158141, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 0 6]) -> [2 0]", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [4 8]) -> [4]", "(dropmax [1 8 9]) -> [1 8]", "(dropmax [9 1 2 1]) -> [1 2 1]", "(dropmax [2 6 3 7]) -> [2 6 3]", "(dropmax [7 6]) -> [6]", "(dropmax [5 9 2]) -> [5 2]", "(dropmax [8 7]) -> [7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.183652, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [5]) -> []", "(dropmax [2 4 6]) -> [2 4]", "(dropmax [9 2 1 7]) -> [2 1 7]", "(dropmax [5]) -> []", "(dropmax [6 4]) -> [4]", "(dropmax [6]) -> []", "(dropmax [6 0 8 2 7]) -> [6 0 2 7]", "(dropmax [4 4 6]) -> [4 4]", "(dropmax [0]) -> []", "(dropmax [9 7 8]) -> [7 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187693, "examples": ["(dropmax []) -> []", "(dropmax [6 2]) -> [2]", "(dropmax [6 6]) -> []", "(dropmax [6 5 3 3 2]) -> [5 3 3 2]", "(dropmax [3 9 3 0]) -> [3 3 0]", "(dropmax [5 5 6 3 9]) -> [5 5 6 3]", "(dropmax []) -> []", "(dropmax [7 4 0 8 5]) -> [7 4 0 5]", "(dropmax [5 2]) -> [2]", "(dropmax [7 6 1 2]) -> [6 1 2]", "(dropmax []) -> []", "(dropmax [2 0 8 8 1]) -> [2 0 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.14877, "examples": ["(dropmax []) -> []", "(dropmax [0 7 0]) -> [0 0]", "(dropmax [2 9 7 4]) -> [2 7 4]", "(dropmax []) -> []", "(dropmax [2 9 2 3]) -> [2 2 3]", "(dropmax [9 6 1]) -> [6 1]", "(dropmax [6 7 9 6 4]) -> [6 7 6 4]", "(dropmax [9 1]) -> [1]", "(dropmax [5 3 7 4]) -> [5 3 4]", "(dropmax [6 0]) -> [0]", "(dropmax [5 6 6]) -> [5]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.1721, "examples": ["(dropmax []) -> []", "(dropmax [3 9 3 9]) -> [3 3]", "(dropmax [5]) -> []", "(dropmax [1 5]) -> [1]", "(dropmax [9 6 3]) -> [6 3]", "(dropmax [5 1 3 0]) -> [1 3 0]", "(dropmax [4 9 5 1 0]) -> [4 5 1 0]", "(dropmax []) -> []", "(dropmax [9 6 8 8 5]) -> [6 8 8 5]", "(dropmax []) -> []", "(dropmax [1 8 7 3]) -> [1 7 3]", "(dropmax [5 2 2]) -> [2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189463, "examples": ["(dropmax []) -> []", "(dropmax [3 0 9 5 6]) -> [3 0 5 6]", "(dropmax [2 7 6 9]) -> [2 7 6]", "(dropmax [3 8]) -> [3]", "(dropmax [8 3]) -> [3]", "(dropmax [7 1]) -> [1]", "(dropmax [0 0 7 4]) -> [0 0 4]", "(dropmax [8 9 1 7 1]) -> [8 1 7 1]", "(dropmax [0 3 3 1 0]) -> [0 1 0]", "(dropmax [5 3 3 7]) -> [5 3 3]", "(dropmax [2]) -> []", "(dropmax [5 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.197467, "examples": ["(dropmax []) -> []", "(dropmax [6 8 6 9]) -> [6 8 6]", "(dropmax []) -> []", "(dropmax [8 7 1 1]) -> [7 1 1]", "(dropmax []) -> []", "(dropmax [1 4]) -> [1]", "(dropmax [2]) -> []", "(dropmax [5 7]) -> [5]", "(dropmax [6 8 7]) -> [6 7]", "(dropmax [3]) -> []", "(dropmax [8 5 8 1]) -> [5 1]", "(dropmax [4 9 5 6]) -> [4 5 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189697, "examples": ["(dropmax []) -> []", "(dropmax [8 2 9]) -> [8 2]", "(dropmax [9 8 9 7]) -> [8 7]", "(dropmax [2 0 6]) -> [2 0]", "(dropmax [3 7 0 7 4]) -> [3 0 4]", "(dropmax [6 7]) -> [6]", "(dropmax [6 5 0]) -> [5 0]", "(dropmax [1 8 6]) -> [1 6]", "(dropmax [9 2 1 8]) -> [2 1 8]", "(dropmax [7 6 1 8 2]) -> [7 6 1 2]", "(dropmax [7 5 6 1 3]) -> [5 6 1 3]", "(dropmax [7 8 5 7]) -> [7 5 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177812, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [2 7 2 5]) -> [2 2 5]", "(dropmax [3 4 1 5 0]) -> [3 4 1 0]", "(dropmax [8]) -> []", "(dropmax [5 4 8 3 6]) -> [5 4 3 6]", "(dropmax [0]) -> []", "(dropmax [2]) -> []", "(dropmax [9 6 3 4]) -> [6 3 4]", "(dropmax [0 7 8 5 3]) -> [0 7 5 3]", "(dropmax [8 5 3]) -> [5 3]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.162053, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [6 4 4]) -> [4 4]", "(dropmax [7 6 2 8]) -> [7 6 2]", "(dropmax [7 8 8 2]) -> [7 2]", "(dropmax [2]) -> []", "(dropmax [5]) -> []", "(dropmax []) -> []", "(dropmax [6 1 2]) -> [1 2]", "(dropmax [0 2]) -> [0]", "(dropmax [5 2 8]) -> [5 2]", "(dropmax [3 4 2 9 1]) -> [3 4 2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.212692, "examples": ["(dropmax []) -> []", "(dropmax [9 7]) -> [7]", "(dropmax [7 6 4]) -> [6 4]", "(dropmax [9 5 0]) -> [5 0]", "(dropmax [6 5 3]) -> [5 3]", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax [2 6 3 9]) -> [2 6 3]", "(dropmax [6 1]) -> [1]", "(dropmax [0]) -> []", "(dropmax [8 2 0]) -> [2 0]", "(dropmax [1 5]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189832, "examples": ["(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [3]) -> []", "(dropmax [1]) -> []", "(dropmax [4 1 3]) -> [1 3]", "(dropmax []) -> []", "(dropmax [6 3 5 1]) -> [3 5 1]", "(dropmax []) -> []", "(dropmax [8 2 0 9 4]) -> [8 2 0 4]", "(dropmax [4 2 7 2]) -> [4 2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.18361, "examples": ["(dropmax []) -> []", "(dropmax [4 2]) -> [2]", "(dropmax [6 4]) -> [4]", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [7 7]) -> []", "(dropmax [5 3 1]) -> [3 1]", "(dropmax [3 6]) -> [3]", "(dropmax [6]) -> []", "(dropmax [4 4 6 5]) -> [4 4 5]", "(dropmax [0 4 4]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185533, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [1 5 9 2]) -> [1 5 2]", "(dropmax [0 7 1 5 8]) -> [0 7 1 5]", "(dropmax [2 3 4 6]) -> [2 3 4]", "(dropmax [6 8]) -> [6]", "(dropmax [1 4]) -> [1]", "(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [1 5 7 9]) -> [1 5 7]", "(dropmax [2]) -> []", "(dropmax [8 7 6]) -> [7 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.166394, "examples": ["(dropmax []) -> []", "(dropmax [2 9 5 4]) -> [2 5 4]", "(dropmax [0]) -> []", "(dropmax []) -> []", "(dropmax [0 8 2 5]) -> [0 2 5]", "(dropmax [4 4]) -> []", "(dropmax []) -> []", "(dropmax [8 6 5 2]) -> [6 5 2]", "(dropmax [2 1]) -> [1]", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.129767, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 4 9 3 2]) -> [5 4 3 2]", "(dropmax [5 7 9 7]) -> [5 7 7]", "(dropmax [1 3 2 8]) -> [1 3 2]", "(dropmax [0 4 4 7 6]) -> [0 4 4 6]", "(dropmax []) -> []", "(dropmax [0 3]) -> [0]", "(dropmax [0]) -> []", "(dropmax [6]) -> []", "(dropmax [7 4 6 7 2]) -> [4 6 2]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.164695, "examples": ["(dropmax []) -> []", "(dropmax [6 0 3 1]) -> [0 3 1]", "(dropmax [2 4 1 2 1]) -> [2 1 2 1]", "(dropmax [0 9 3 4 4]) -> [0 3 4 4]", "(dropmax [8]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1 6 2 4]) -> [1 2 4]", "(dropmax [2 0]) -> [0]", "(dropmax [3 1 9]) -> [3 1]", "(dropmax []) -> []", "(dropmax [4 6 0 0]) -> [4 0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167283, "examples": ["(dropmax []) -> []", "(dropmax [0 7]) -> [0]", "(dropmax [9 0]) -> [0]", "(dropmax [8 7 9]) -> [8 7]", "(dropmax [7 0 2]) -> [0 2]", "(dropmax [2 5 2]) -> [2 2]", "(dropmax [4 7 6 2]) -> [4 6 2]", "(dropmax [7 4 3 3]) -> [4 3 3]", "(dropmax [1 9]) -> [1]", "(dropmax [8 2]) -> [2]", "(dropmax [4 4 9 0 4]) -> [4 4 0 4]", "(dropmax [9 6]) -> [6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187346, "examples": ["(dropmax []) -> []", "(dropmax [8 5 7 3]) -> [5 7 3]", "(dropmax [1 5 3]) -> [1 3]", "(dropmax [7 8 3]) -> [7 3]", "(dropmax []) -> []", "(dropmax [0 2]) -> [0]", "(dropmax []) -> []", "(dropmax [0 8 8]) -> [0]", "(dropmax [8 4]) -> [4]", "(dropmax [8 6 5 7]) -> [6 5 7]", "(dropmax [9 7 7 0]) -> [7 7 0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184955, "examples": ["(dropmax []) -> []", "(dropmax [8 1 1 9]) -> [8 1 1]", "(dropmax []) -> []", "(dropmax [5 1 9 8]) -> [5 1 8]", "(dropmax [6 6 1 7 2]) -> [6 6 1 2]", "(dropmax [9 9 9 4]) -> [4]", "(dropmax [4 9]) -> [4]", "(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [3 8 0 3 3]) -> [3 0 3 3]", "(dropmax [2 4 6]) -> [2 4]", "(dropmax [3 3 7 0 8]) -> [3 3 7 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172433, "examples": ["(dropmax []) -> []", "(dropmax [7 5 0]) -> [5 0]", "(dropmax [8 7]) -> [7]", "(dropmax [1 1]) -> []", "(dropmax [0 6 3 1 6]) -> [0 3 1]", "(dropmax [9 1 4 2 1]) -> [1 4 2 1]", "(dropmax [9 8 8 7]) -> [8 8 7]", "(dropmax [3 1]) -> [1]", "(dropmax []) -> []", "(dropmax [5 4]) -> [4]", "(dropmax [1 0 7]) -> [1 0]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.163344, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [0 9 2 6]) -> [0 2 6]", "(dropmax [7 7 8]) -> [7 7]", "(dropmax [1]) -> []", "(dropmax [0 9 5]) -> [0 5]", "(dropmax [0 3 9 8]) -> [0 3 8]", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [1 7 6 1 1]) -> [1 6 1 1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.138738, "examples": ["(dropmax []) -> []", "(dropmax [4 6]) -> [4]", "(dropmax [3 9]) -> [3]", "(dropmax [5 0 7 9 7]) -> [5 0 7 7]", "(dropmax [9]) -> []", "(dropmax [6 8]) -> [6]", "(dropmax [9]) -> []", "(dropmax [4 2]) -> [2]", "(dropmax [9]) -> []", "(dropmax []) -> []", "(dropmax [8 9]) -> [8]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.181153, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 2 9]) -> [5 2]", "(dropmax [6 5 3]) -> [5 3]", "(dropmax []) -> []", "(dropmax [2 6 1]) -> [2 1]", "(dropmax [6]) -> []", "(dropmax [8 2 6 0 9]) -> [8 2 6 0]", "(dropmax [1 0 1 9]) -> [1 0 1]", "(dropmax [1 9 6]) -> [1 6]", "(dropmax [3 4 1 4]) -> [3 1]", "(dropmax [2 8 6 2 1]) -> [2 6 2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178807, "examples": ["(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [6 9]) -> [6]", "(dropmax [5 7 6]) -> [5 6]", "(dropmax [4 3]) -> [3]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [6 2 8]) -> [6 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167962, "examples": ["(dropmax []) -> []", "(dropmax [7 1 7]) -> [1]", "(dropmax [7 7]) -> []", "(dropmax [6]) -> []", "(dropmax []) -> []", "(dropmax [5 8]) -> [5]", "(dropmax [9 0 5 0 4]) -> [0 5 0 4]", "(dropmax []) -> []", "(dropmax [8 5 6]) -> [5 6]", "(dropmax []) -> []", "(dropmax [1 8]) -> [1]", "(dropmax [8 1 5 8 6]) -> [1 5 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.21122, "examples": ["(dropmax []) -> []", "(dropmax [3 4]) -> [3]", "(dropmax [4 0]) -> [0]", "(dropmax [0 2 5]) -> [0 2]", "(dropmax [1 9 1]) -> [1 1]", "(dropmax [0 3 9 9 5]) -> [0 3 5]", "(dropmax [4]) -> []", "(dropmax [8 5 6 6 1]) -> [5 6 6 1]", "(dropmax []) -> []", "(dropmax [3 3]) -> []", "(dropmax [1 1 2]) -> [1 1]", "(dropmax [1 2]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167921, "examples": ["(dropmax []) -> []", "(dropmax [3 4]) -> [3]", "(dropmax [9 4 1 7 8]) -> [4 1 7 8]", "(dropmax [4 3]) -> [3]", "(dropmax [4 5 8 0]) -> [4 5 0]", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [2]) -> []", "(dropmax [5 3 5]) -> [3]", "(dropmax []) -> []", "(dropmax [5 7 8 1 1]) -> [5 7 1 1]", "(dropmax [6]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184854, "examples": ["(dropmax []) -> []", "(dropmax [8 3 4]) -> [3 4]", "(dropmax [1 1 6 1]) -> [1 1 1]", "(dropmax [2 3 8]) -> [2 3]", "(dropmax []) -> []", "(dropmax [2 6]) -> [2]", "(dropmax [4 1 3 0 1]) -> [1 3 0 1]", "(dropmax [0 0 8 4]) -> [0 0 4]", "(dropmax [5 9]) -> [5]", "(dropmax [6]) -> []", "(dropmax [5 9 4]) -> [5 4]", "(dropmax [9 7]) -> [7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.193833, "examples": ["(dropmax []) -> []", "(dropmax [6 4]) -> [4]", "(dropmax [5 6 8 8 2]) -> [5 6 2]", "(dropmax [9 2 2]) -> [2 2]", "(dropmax [8 3 7 1]) -> [3 7 1]", "(dropmax [4 8 7 1]) -> [4 7 1]", "(dropmax [0]) -> []", "(dropmax [4 0 7]) -> [4 0]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [6 4 8]) -> [6 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179828, "examples": ["(dropmax []) -> []", "(dropmax [9 9 7 0 5]) -> [7 0 5]", "(dropmax []) -> []", "(dropmax [4 0 5]) -> [4 0]", "(dropmax []) -> []", "(dropmax [6 1]) -> [1]", "(dropmax [3 0 2]) -> [0 2]", "(dropmax [3]) -> []", "(dropmax [0]) -> []", "(dropmax [5 1]) -> [1]", "(dropmax [7]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.141278, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [6 4]) -> [4]", "(dropmax [3 4]) -> [3]", "(dropmax []) -> []", "(dropmax [1 1 6 5 9]) -> [1 1 6 5]", "(dropmax [1 6 2]) -> [1 2]", "(dropmax [8 9 7 4 3]) -> [8 7 4 3]", "(dropmax [0 2 4 1]) -> [0 2 1]", "(dropmax [0 6 0 3 8]) -> [0 6 0 3]", "(dropmax [1 1]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.174765, "examples": ["(dropmax []) -> []", "(dropmax [3 9 8 6]) -> [3 8 6]", "(dropmax [3]) -> []", "(dropmax [2 9 9 5 4]) -> [2 5 4]", "(dropmax [5 3]) -> [3]", "(dropmax [2 9 9 2 0]) -> [2 2 0]", "(dropmax [2 1 0 3 0]) -> [2 1 0 0]", "(dropmax [0 5]) -> [0]", "(dropmax [1 0 9 7]) -> [1 0 7]", "(dropmax [8 1 0]) -> [1 0]", "(dropmax [8]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.159993, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9 7 4 3 8]) -> [7 4 3 8]", "(dropmax [4 2 4 7 1]) -> [4 2 4 1]", "(dropmax [7 4]) -> [4]", "(dropmax [7 9 4]) -> [7 4]", "(dropmax []) -> []", "(dropmax [1 6 9 8]) -> [1 6 8]", "(dropmax [0 0]) -> []", "(dropmax [6 6]) -> []", "(dropmax [5 2]) -> [2]", "(dropmax [3 5 9 3]) -> [3 5 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.182558, "examples": ["(dropmax []) -> []", "(dropmax [0 6 9]) -> [0 6]", "(dropmax [8 4]) -> [4]", "(dropmax [9]) -> []", "(dropmax [2 4 1 8]) -> [2 4 1]", "(dropmax [4 2 8 4]) -> [4 2 4]", "(dropmax [4 7 9]) -> [4 7]", "(dropmax [7]) -> []", "(dropmax [0]) -> []", "(dropmax [4 0]) -> [0]", "(dropmax []) -> []", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.157975, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [7 6 3]) -> [6 3]", "(dropmax [9 8 7 5]) -> [8 7 5]", "(dropmax [2]) -> []", "(dropmax [9]) -> []", "(dropmax [5]) -> []", "(dropmax []) -> []", "(dropmax [9 9 9]) -> []", "(dropmax [7]) -> []", "(dropmax [9 2 5 1 6]) -> [2 5 1 6]", "(dropmax [9 5 6 3 3]) -> [5 6 3 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17222, "examples": ["(dropmax []) -> []", "(dropmax [2 3]) -> [2]", "(dropmax [0 7 1 3]) -> [0 1 3]", "(dropmax [2 6 5 4 7]) -> [2 6 5 4]", "(dropmax [2 5 9 2]) -> [2 5 2]", "(dropmax [3 1]) -> [1]", "(dropmax [7 1 7 0 5]) -> [1 0 5]", "(dropmax [4 4]) -> []", "(dropmax []) -> []", "(dropmax [4 3 0 2 0]) -> [3 0 2 0]", "(dropmax [7 3 5 8 6]) -> [7 3 5 6]", "(dropmax [0 2 4 1 3]) -> [0 2 1 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17163, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [4 1]) -> [1]", "(dropmax [1]) -> []", "(dropmax [8 9 0 9]) -> [8 0]", "(dropmax [6 2 0]) -> [2 0]", "(dropmax [9 8]) -> [8]", "(dropmax [0]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 5 2]) -> [5 2]", "(dropmax [2 8 0]) -> [2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17146, "examples": ["(dropmax []) -> []", "(dropmax [8 6]) -> [6]", "(dropmax [9]) -> []", "(dropmax [8 1 8 9]) -> [8 1 8]", "(dropmax [4 5 8 8]) -> [4 5]", "(dropmax [0]) -> []", "(dropmax [0]) -> []", "(dropmax [6]) -> []", "(dropmax [6]) -> []", "(dropmax [9 2 7]) -> [2 7]", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.180379, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 9]) -> [0]", "(dropmax [1 2 6]) -> [1 2]", "(dropmax [1 4 6 3]) -> [1 4 3]", "(dropmax [7 3 9 0 8]) -> [7 3 0 8]", "(dropmax [2 3]) -> [2]", "(dropmax [4 7 6]) -> [4 6]", "(dropmax [4 5]) -> [4]", "(dropmax [2 1 3 1 0]) -> [2 1 1 0]", "(dropmax [4 6 5 9]) -> [4 6 5]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.176116, "examples": ["(dropmax []) -> []", "(dropmax [6 7]) -> [6]", "(dropmax [8 4 4 2]) -> [4 4 2]", "(dropmax [6 7 2]) -> [6 2]", "(dropmax [4 0 5 5]) -> [4 0]", "(dropmax [0 0 1 3 1]) -> [0 0 1 1]", "(dropmax []) -> []", "(dropmax [9 7 0 9]) -> [7 0]", "(dropmax []) -> []", "(dropmax [8 5 8 8 5]) -> [5 5]", "(dropmax []) -> []", "(dropmax [5 8 7 8]) -> [5 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189288, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 7 8]) -> [3 7]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1 1 2]) -> [1 1]", "(dropmax []) -> []", "(dropmax [7 5]) -> [5]", "(dropmax [7 7]) -> []", "(dropmax []) -> []", "(dropmax [4 6 1 8 5]) -> [4 6 1 5]", "(dropmax [5 5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187926, "examples": ["(dropmax []) -> []", "(dropmax [6 0 3]) -> [0 3]", "(dropmax []) -> []", "(dropmax [9 9 2]) -> [2]", "(dropmax [7 7 2 7]) -> [2]", "(dropmax [4 1 1 6 6]) -> [4 1 1]", "(dropmax []) -> []", "(dropmax [2 1]) -> [1]", "(dropmax [3 9]) -> [3]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9 3 9]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173241, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 2]) -> [2]", "(dropmax [5]) -> []", "(dropmax [8 0 4 2 3]) -> [0 4 2 3]", "(dropmax [4 3]) -> [3]", "(dropmax []) -> []", "(dropmax [9 4 9 4]) -> [4 4]", "(dropmax [3 7 6]) -> [3 6]", "(dropmax [2 8 8 4 8]) -> [2 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.161788, "examples": ["(dropmax []) -> []", "(dropmax [2 0 5 0 9]) -> [2 0 5 0]", "(dropmax [5 6 2]) -> [5 2]", "(dropmax []) -> []", "(dropmax [2 9 6 6]) -> [2 6 6]", "(dropmax []) -> []", "(dropmax [4 4 8]) -> [4 4]", "(dropmax [6 8 2 1]) -> [6 2 1]", "(dropmax [6 9 5 8]) -> [6 5 8]", "(dropmax [2 5 4 5 9]) -> [2 5 4 5]", "(dropmax [4 6 6 9 7]) -> [4 6 6 7]", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167534, "examples": ["(dropmax []) -> []", "(dropmax [4 2 7]) -> [4 2]", "(dropmax [1 9 4 9 2]) -> [1 4 2]", "(dropmax [3]) -> []", "(dropmax [1 0 6 8 7]) -> [1 0 6 7]", "(dropmax [4 8 5 9 0]) -> [4 8 5 0]", "(dropmax [5 0]) -> [0]", "(dropmax [6]) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 5 5]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.208283, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [9]) -> []", "(dropmax [0 0 5 2 0]) -> [0 0 2 0]", "(dropmax [4]) -> []", "(dropmax [1 7 9 7 4]) -> [1 7 7 4]", "(dropmax [8]) -> []", "(dropmax [2 1 7 9 1]) -> [2 1 7 1]", "(dropmax []) -> []", "(dropmax [4 4 1]) -> [1]", "(dropmax []) -> []", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.102414, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 8 5 7 3]) -> [0 5 7 3]", "(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [5]) -> []", "(dropmax [6 6 5]) -> [5]", "(dropmax [2 0 5 2]) -> [2 0 2]", "(dropmax [3 7 7]) -> [3]", "(dropmax [3]) -> []", "(dropmax [7 0]) -> [0]", "(dropmax [5 6 8 6 2]) -> [5 6 6 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.087949, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 6]) -> [6]", "(dropmax []) -> []", "(dropmax [3 8 1 8 4]) -> [3 1 4]", "(dropmax [8]) -> []", "(dropmax []) -> []", "(dropmax [9 3]) -> [3]", "(dropmax [6 9 7]) -> [6 7]", "(dropmax [6 5]) -> [5]", "(dropmax [8 5 0 4]) -> [5 0 4]", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.088987, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [8]) -> []", "(dropmax [7 7 5]) -> [5]", "(dropmax [5 1 5]) -> [1]", "(dropmax [6 2 4 9 4]) -> [6 2 4 4]", "(dropmax []) -> []", "(dropmax [1 7 3]) -> [1 3]", "(dropmax [8]) -> []", "(dropmax [8 8]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.098397, "examples": ["(dropmax []) -> []", "(dropmax [0 7 0]) -> [0 0]", "(dropmax [3 4 3 0 7]) -> [3 4 3 0]", "(dropmax [1]) -> []", "(dropmax [2 4 3 3 8]) -> [2 4 3 3]", "(dropmax [7 2 6 6]) -> [2 6 6]", "(dropmax []) -> []", "(dropmax [6 5 0 4 2]) -> [5 0 4 2]", "(dropmax [5 4]) -> [4]", "(dropmax [9 1 9]) -> [1]", "(dropmax []) -> []", "(dropmax [9 6 1 8 0]) -> [6 1 8 0]"]}
