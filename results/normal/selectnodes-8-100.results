{"time": 2.583736, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {3} {8}}) -> [4 8]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (cons c e)) (cons c []))) [])) _) _)"}
{"time": 56.730244, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {6}}) -> [2 6]", "(selectnodes {}) -> []", "(selectnodes {6 {3 {0}} {3 {2}}}) -> [6 0 2]", "(selectnodes {}) -> []", "(selectnodes {0 {8} {6}}) -> [0 8 6]", "(selectnodes {6 {0}}) -> [6 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 57.664884, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {4 {4}}) -> [4 4]", "(selectnodes {5 {0} {4 {6}}}) -> [0 4 6]", "(selectnodes {4 {1}}) -> [4]", "(selectnodes {8 {1}}) -> [8]", "(selectnodes {0 {0 {1 {0}} {8 {2} {5}}}}) -> [0 0 0 8 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 60.90973, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {0 {4}}}) -> [0 4]", "(selectnodes {9 {6}}) -> [6]", "(selectnodes {5 {7}}) -> []", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.14138, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {6 {9}}}) -> [6 6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {0}}) -> [0]", "(selectnodes {2 {9} {6 {7}}}) -> [2 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.717454, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {5}}) -> [4]", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {4 {3} {5}}) -> [4]", "(selectnodes {3 {9} {1 {0 {5}} {5 {0} {5}}}}) -> [0 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.89836, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {7} {1}}) -> [8]", "(selectnodes {4 {2 {1}} {4 {8}}}) -> [4 2 4 8]", "(selectnodes {3}) -> [3]", "(selectnodes {4}) -> [4]", "(selectnodes {5 {2} {7 {2 {4} {2}}}}) -> [2 2 4 2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 68.00304, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {4 {1} {1}}}) -> [4]", "(selectnodes {9}) -> [9]", "(selectnodes {1 {5}}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 67.825038, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {5 {5} {2}}) -> [2]", "(selectnodes {4 {1 {6}} {5}}) -> [4 6]", "(selectnodes {6 {5} {1 {0}}}) -> [6 0]", "(selectnodes {2 {2}}) -> [2 2]", "(selectnodes {2 {8}}) -> [2 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.164553, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4 {3}}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 0.001015, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {9} {5}}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) []) _) _)"}
{"time": 0.186804, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {0 {1} {3}}) -> [0]", "(selectnodes {4}) -> [4]", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 69.534874, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {2}}) -> [2 2]", "(selectnodes {1}) -> [1]", "(selectnodes {4 {7}}) -> [4]", "(selectnodes {9 {1 {0}} {6 {7} {5}}}) -> [0 6]", "(selectnodes {3}) -> [3]", "(selectnodes {9 {3 {6 {4} {9}}} {2 {8} {6}}}) -> [6 4 2 8 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.96311, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {6} {8}}) -> [6 8]", "(selectnodes {6 {2 {8}}}) -> [6 2 8]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.962703, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {8}}) -> [8]", "(selectnodes {1}) -> [1]", "(selectnodes {1 {9 {4} {4}} {3 {2}}}) -> [4 4 2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)"}
{"time": 0.118697, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {4}) -> [4]", "(selectnodes {7}) -> [7]", "(selectnodes {2}) -> [2]", "(selectnodes {8 {8}}) -> [8 8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 0.177254, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {8 {2}}) -> [8 2]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {5}) -> [5]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 73.735119, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {0 {8}} {4 {8}}}) -> [0 8 4 8]", "(selectnodes {}) -> []", "(selectnodes {4 {6 {8}}}) -> [4 6 8]", "(selectnodes {0 {0}}) -> [0 0]", "(selectnodes {8 {2 {4 {5}}}}) -> [8 2 4]", "(selectnodes {5 {1} {9}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": "timeout", "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {6 {2} {1}}}) -> [0 6 2]", "(selectnodes {5}) -> [5]", "(selectnodes {4 {7} {3}}) -> [4]", "(selectnodes {4 {6} {7 {1} {4}}}) -> [4 6 4]", "(selectnodes {2 {7 {1}}}) -> [2]"]}
{"time": 81.862874, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {0 {0 {0}} {2}}}) -> [0 0 0 2]", "(selectnodes {6 {0 {5}}}) -> [6 0]", "(selectnodes {7}) -> [7]", "(selectnodes {2 {1} {4}}) -> [2 4]", "(selectnodes {3 {0}}) -> [0]", "(selectnodes {7 {0 {2} {8}}}) -> [0 2 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 79.583236, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {7 {8 {8}}}}) -> [8 8]", "(selectnodes {4 {7}}) -> [4]", "(selectnodes {7 {6 {3}} {8 {6}}}) -> [6 8 6]", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 89.684917, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {3} {9 {2} {0}}}) -> [2 0]", "(selectnodes {4 {9} {6}}) -> [4 6]", "(selectnodes {9 {4} {4}}) -> [4 4]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.167286, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 90.312237, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {5 {6}} {5 {4} {0}}}) -> [0 6 4 0]", "(selectnodes {5 {2} {7}}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {3 {9} {1}}) -> []", "(selectnodes {4 {7 {5} {4}}}) -> [4 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.589947, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {5} {8}}) -> [8 8]", "(selectnodes {3}) -> [3]", "(selectnodes {3 {7} {1 {3} {3}}}) -> []", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {1}) -> [1]", "(selectnodes {0}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.345057, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {2 {4} {7 {0}}}) -> [2 4 0]", "(selectnodes {}) -> []", "(selectnodes {2 {6 {9} {7}}}) -> [2 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 70.757006, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {6 {0 {3}}}}) -> [8 6 0]", "(selectnodes {2 {3} {5}}) -> [2]", "(selectnodes {9 {6} {6}}) -> [6 6]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {0 {3 {7 {9} {9}}} {1 {4 {2}}}}) -> [0 4 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.438776, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {2 {7} {8 {0} {9}}}) -> [2 8 0]", "(selectnodes {5 {7 {9} {8 {3} {6}}}}) -> [8 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 66.025037, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {3} {9}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {9 {5} {0}}}) -> [2 0]", "(selectnodes {8}) -> [8]", "(selectnodes {8 {3}}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 66.430706, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {6} {8}}) -> [8 6 8]", "(selectnodes {7 {6 {9}} {3 {7}}}) -> [6]", "(selectnodes {1 {5}}) -> []", "(selectnodes {4 {8 {2 {8}}} {2 {8 {1}}}}) -> [4 8 2 8 2 8]", "(selectnodes {8 {1 {8} {9}} {1 {4} {7}}}) -> [8 8 4]", "(selectnodes {3 {1} {2}}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.041042, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {4 {0} {4}}) -> [4 0 4]", "(selectnodes {}) -> []", "(selectnodes {5 {2}}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.909311, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {5 {7} {4}}}) -> [6 4]", "(selectnodes {}) -> []", "(selectnodes {8 {9}}) -> [8]", "(selectnodes {8 {1}}) -> [8]", "(selectnodes {8 {9} {2 {8}}}) -> [8 2 8]", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.225636, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {2}}) -> [2 2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {4 {0}}) -> [4 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 76.815964, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {6 {4} {0}} {4 {4}}}) -> [6 4 0 4 4]", "(selectnodes {7 {3} {8 {3}}}) -> [8]", "(selectnodes {9 {9} {1}}) -> []", "(selectnodes {4 {5 {4}}}) -> [4 4]", "(selectnodes {}) -> []", "(selectnodes {5 {7}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.039235, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {8} {9 {3}}}) -> [8]", "(selectnodes {5}) -> [5]", "(selectnodes {9 {7 {1}} {1 {1}}}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {2}}) -> [2]", "(selectnodes {8 {7} {9}}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.248622, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {8 {7} {8}}}) -> [2 8 8]", "(selectnodes {}) -> []", "(selectnodes {8 {5}}) -> [8]", "(selectnodes {5 {6}}) -> [6]", "(selectnodes {4 {4} {0 {5 {6}}}}) -> [4 4 0 6]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 66.163415, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {4 {3}} {5 {7}}}) -> [4]", "(selectnodes {5}) -> [5]", "(selectnodes {2 {8} {0}}) -> [2 8 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.482392, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {0} {5}}) -> [0]", "(selectnodes {6 {3 {8} {2}} {9 {2}}}) -> [6 8 2 2]", "(selectnodes {}) -> []", "(selectnodes {4 {9}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {9 {3 {9 {9} {7}}}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.518867, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {2 {7 {5}}}}) -> [2]", "(selectnodes {7 {1 {1 {0}} {7 {1} {8}}} {5 {3}}}) -> [0 8]", "(selectnodes {4 {8} {1}}) -> [4 8]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {6 {8} {1}}) -> [6 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.344213, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {1}}) -> [6]", "(selectnodes {5 {6} {0 {5 {4}} {4 {9}}}}) -> [6 0 4 4]", "(selectnodes {8 {6} {3}}) -> [8 6]", "(selectnodes {}) -> []", "(selectnodes {3 {9 {0} {0 {0}}} {8 {4 {0}} {7 {8} {5}}}}) -> [0 0 0 8 4 0 8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 84.207958, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {7 {6 {5} {5}} {0}}}) -> [6 0]", "(selectnodes {2 {9 {3}}}) -> [2]", "(selectnodes {3 {7} {7}}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.094789, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {0} {1}}) -> [0]", "(selectnodes {0 {5}}) -> [0]", "(selectnodes {9}) -> [9]", "(selectnodes {5 {4 {1 {5} {2}} {8 {2} {3}}}}) -> [4 2 8 2]", "(selectnodes {6 {8 {7} {0 {4}}} {4 {2 {9}} {8 {5} {1}}}}) -> [6 8 0 4 4 2 8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 59.970244, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {5 {8} {9}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {1 {1} {1 {1}}}) -> []", "(selectnodes {8 {9 {7 {5} {7}}} {5}}) -> [8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.028954, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {8 {8}}) -> [8 8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {8 {8} {2 {5}}}) -> [8 8 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.118029, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {6 {8}}) -> [6 8]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 64.403605, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {8 {9 {8}} {7 {3}}}) -> [8 8]", "(selectnodes {4 {0 {8}} {7 {0}}}) -> [4 0 8 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.912712, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {3 {0}}) -> [0]", "(selectnodes {7 {8 {7 {3} {9}} {1}} {8 {5 {0}} {6}}}) -> [8 8 0 6]", "(selectnodes {}) -> []", "(selectnodes {0 {7}}) -> [0]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.214186, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {4} {6}}) -> [0 4 6]", "(selectnodes {4 {8 {4}}}) -> [4 8 4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 68.095923, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {1}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {6 {9 {4 {7}} {0}}}) -> [6 4 0]", "(selectnodes {5 {3} {8}}) -> [8]", "(selectnodes {1 {9}}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.178323, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {1}) -> [1]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 77.286374, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {5 {8} {5}}}) -> [8 8]", "(selectnodes {8}) -> [8]", "(selectnodes {1 {3}}) -> []", "(selectnodes {6 {9 {9 {9} {8}} {6}}}) -> [6 8 6]", "(selectnodes {0 {5 {3} {3 {9}}} {4}}) -> [0 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.55231, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {4 {2 {7 {0}} {0 {7}}} {0 {0 {8}}}}) -> [4 2 0 0 0 0 8]", "(selectnodes {9 {8} {6}}) -> [8 6]", "(selectnodes {0 {3} {9}}) -> [0]", "(selectnodes {5 {7}}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.85606, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {3 {9 {3} {5}}}) -> []", "(selectnodes {5 {2 {3 {6} {3}} {1 {6} {4}}}}) -> [2 6 6 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.600006, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {6 {4 {7} {1}} {5}}) -> [6 4]", "(selectnodes {4 {9 {4 {0}} {5}}}) -> [4 4 0]", "(selectnodes {9 {8} {9}}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.239033, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {4 {0}}) -> [4 0]", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 61.726777, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {5}) -> [5]", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {9 {2 {3}} {9 {0} {3}}}) -> [2 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 85.373121, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {9 {9 {4}}} {3 {8} {4}}}) -> [4 8 4]", "(selectnodes {9}) -> [9]", "(selectnodes {0 {5}}) -> [0]", "(selectnodes {6 {7}}) -> [6]", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.674541, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {3 {0}}}) -> [6 0]", "(selectnodes {5 {5 {0 {9} {6}}}}) -> [0 6]", "(selectnodes {7 {3} {6 {4 {5} {3}}}}) -> [6 4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.936787, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {5} {6}}) -> [8 6]", "(selectnodes {}) -> []", "(selectnodes {8 {7} {6 {8} {6}}}) -> [8 6 8 6]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {1}) -> [1]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.154834, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {1 {0 {8}} {2}}}) -> [0 0 8 2]", "(selectnodes {7 {4} {2}}) -> [4 2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 51.674278, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {2 {7 {5 {4}}}}) -> [2 4]", "(selectnodes {}) -> []", "(selectnodes {5 {8 {2}}}) -> [8 2]", "(selectnodes {5 {1}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 77.39357, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {5} {3}}) -> [4]", "(selectnodes {0 {1} {4 {0}}}) -> [0 4 0]", "(selectnodes {9 {5 {9} {3}} {1 {9} {4}}}) -> [4]", "(selectnodes {4 {9 {2}}}) -> [4 2]", "(selectnodes {2 {9} {8}}) -> [2 8]", "(selectnodes {2 {9} {0 {7}}}) -> [2 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.681166, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {5} {5}}) -> [6]", "(selectnodes {9 {6}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {6 {6} {3}}) -> [6 6]", "(selectnodes {2 {9 {9} {9}}}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 71.022683, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {0}}) -> [0]", "(selectnodes {4}) -> [4]", "(selectnodes {0 {6} {9}}) -> [0 6]", "(selectnodes {5 {4} {6}}) -> [4 6]", "(selectnodes {1}) -> [1]", "(selectnodes {2 {1 {7}}}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.149998, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {2 {8} {2}}) -> [2 8 2]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)"}
{"time": 73.129418, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {5 {9}} {8 {2 {3}}}}) -> [4 8 2]", "(selectnodes {}) -> []", "(selectnodes {4 {8} {1}}) -> [4 8]", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.921921, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {5 {1} {8}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {6 {6} {6}}) -> [6 6 6]", "(selectnodes {6 {8 {9} {8}} {4 {6} {1}}}) -> [6 8 8 4 6]", "(selectnodes {3 {5 {2} {8}}}) -> [2 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 78.057616, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {0 {6} {1}}}) -> [0 6]", "(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.729472, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {2 {9 {7 {4} {7}} {9}}}) -> [2 4]", "(selectnodes {1 {2} {0 {8}}}) -> [2 0 8]", "(selectnodes {}) -> []", "(selectnodes {4 {1} {1}}) -> [4]", "(selectnodes {9}) -> [9]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.270669, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {1 {5} {4}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {9 {5 {0}} {3 {5} {1}}}) -> [0]", "(selectnodes {0 {8 {3 {5} {8}} {0 {7}}}}) -> [0 8 8 0]", "(selectnodes {6 {3 {8}} {2}}) -> [6 8 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 83.6034, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {5} {5 {8} {4}}}) -> [8 4]", "(selectnodes {4}) -> [4]", "(selectnodes {2 {5} {1 {9} {2 {8} {0}}}}) -> [2 2 8 0]", "(selectnodes {4 {5}}) -> [4]", "(selectnodes {2 {1} {7 {2 {9}}}}) -> [2 2]", "(selectnodes {2 {0 {6 {7}} {4 {0}}} {1 {1} {6}}}) -> [2 0 6 4 0 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.406051, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {8 {5} {4 {5 {0} {9}} {4 {8} {9}}}}) -> [8 4 0 4 8]", "(selectnodes {5}) -> [5]", "(selectnodes {1 {6 {2 {8} {1}}} {4 {6 {1} {6}}}}) -> [6 2 8 4 6 6]", "(selectnodes {9 {7}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 68.763322, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {9} {3 {2}}}) -> [2]", "(selectnodes {6 {5}}) -> [6]", "(selectnodes {0 {2}}) -> [0 2]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 91.861592, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {0 {7 {7}} {1 {1}}} {1 {9}}}) -> [0 0]", "(selectnodes {3 {9 {7}}}) -> []", "(selectnodes {4 {0}}) -> [4 0]", "(selectnodes {1}) -> [1]", "(selectnodes {8}) -> [8]", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred c)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.820546, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {9}) -> [9]", "(selectnodes {1 {1}}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {3 {7}} {9 {9}}}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) []) (cons c []))) [])) _) _)"}
{"time": 70.934298, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {7} {9 {9}}}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {4 {7} {5}}) -> [4]", "(selectnodes {4}) -> [4]", "(selectnodes {6}) -> [6]", "(selectnodes {9 {4} {5}}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 68.400795, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {3} {3}}) -> [4]", "(selectnodes {8}) -> [8]", "(selectnodes {0 {9 {6}}}) -> [0 6]", "(selectnodes {7 {0 {4} {6 {1}}}}) -> [0 4 6]", "(selectnodes {2 {7} {4}}) -> [2 4]", "(selectnodes {9}) -> [9]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 71.53447, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {4 {5}} {3 {4} {0}}}) -> [6 4 4 0]", "(selectnodes {5 {6 {1} {3}}}) -> [6]", "(selectnodes {9 {0 {9} {7}} {7 {5}}}) -> [0]", "(selectnodes {2}) -> [2]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 21.269255, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {6}}) -> [6]", "(selectnodes {7 {3}}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {9 {9 {0}}}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter e (lambda (g) (pred g)))) (cons c []))) [])) _) _)"}
{"time": 68.83481, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {3 {5 {1 {5} {2}} {6 {8} {2}}} {1}}) -> [2 6 8 2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 73.789733, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {7 {4}}}) -> [4 4]", "(selectnodes {0}) -> [0]", "(selectnodes {8}) -> [8]", "(selectnodes {5 {7 {2} {5 {3} {0}}}}) -> [2 0]", "(selectnodes {8 {4}}) -> [8 4]", "(selectnodes {3 {1} {7}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 55.048144, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {5 {7}}) -> []", "(selectnodes {1 {3 {1} {5}} {5 {8}}}) -> [8]", "(selectnodes {5 {6 {6}}}) -> [6 6]", "(selectnodes {6 {0}}) -> [6 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.529626, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {1} {5}}) -> [0]", "(selectnodes {2 {8 {2} {8}}}) -> [2 8 2 8]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {0}) -> [0]", "(selectnodes {1}) -> [1]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 54.727661, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {3 {2}}) -> [2]", "(selectnodes {2 {8 {6 {5} {9}}}}) -> [2 8 6]", "(selectnodes {1 {6}}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.291729, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {9 {4 {8}} {9 {1} {6}}}) -> [4 8 6]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {2 {2 {4} {6}} {6 {5}}}) -> [2 2 4 6 6]", "(selectnodes {1 {2} {5}}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 70.41848, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {3} {9}}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {4 {4} {1}}) -> [4 4]", "(selectnodes {0 {1 {0}}}) -> [0 0]", "(selectnodes {2 {0 {8}}}) -> [2 0 8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 67.935634, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {4}}) -> [8 4]", "(selectnodes {3 {6} {3}}) -> [6]", "(selectnodes {9 {8} {2}}) -> [8 2]", "(selectnodes {8 {4}}) -> [8 4]", "(selectnodes {5 {6 {5} {1}}}) -> [6]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 78.431627, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {7 {7}} {9}}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {9 {4 {0 {5}}} {7}}) -> [4 0]", "(selectnodes {2 {7}}) -> [2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.425138, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {8 {9} {2}}}) -> [8 2]", "(selectnodes {9 {9}}) -> []", "(selectnodes {0 {1 {1 {4} {9}} {2 {4} {9}}}}) -> [0 4 2 4]", "(selectnodes {8 {4 {5} {6}}}) -> [8 4 6]", "(selectnodes {7 {1} {4}}) -> [4]", "(selectnodes {4 {6}}) -> [4 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 81.448142, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {1 {1} {4}} {6 {2} {8}}}) -> [8 4 6 2 8]", "(selectnodes {9}) -> [9]", "(selectnodes {7}) -> [7]", "(selectnodes {2 {5 {0 {8}} {1 {0}}}}) -> [2 0 8 0]", "(selectnodes {1 {1} {8 {0} {6}}}) -> [8 0 6]", "(selectnodes {3 {5}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 82.481601, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {3 {2 {7} {0}}} {7}}) -> [8 2 0]", "(selectnodes {}) -> []", "(selectnodes {6 {9 {1 {2} {0}}} {6 {9 {1} {1}} {1 {4}}}}) -> [6 2 0 6 4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 83.159886, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {2 {4 {1} {3}} {3 {3}}}}) -> [2 4]", "(selectnodes {0}) -> [0]", "(selectnodes {3}) -> [3]", "(selectnodes {4}) -> [4]", "(selectnodes {1 {9}}) -> []", "(selectnodes {9 {8 {3 {5}} {0 {8}}}}) -> [8 0 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.182271, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {1 {0 {0}}} {8 {9}}}) -> [0 0 8]", "(selectnodes {7}) -> [7]", "(selectnodes {2 {6 {2}}}) -> [2 6 2]", "(selectnodes {8}) -> [8]", "(selectnodes {5 {4 {0}}}) -> [4 0]", "(selectnodes {5 {7} {7}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 49.772816, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {4 {5 {5} {9}}}) -> [4]", "(selectnodes {5 {1}}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {6}) -> [6]", "(selectnodes {6 {4 {2} {7 {9}}}}) -> [6 4 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred c)))) (cons c (join d)))) [])) _) _)"}
{"time": 46.389611, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {1 {9 {9}}}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {8 {9 {6} {4}}}) -> [8 6 4]", "(selectnodes {5 {0 {6 {7}}}}) -> [0 6]", "(selectnodes {8}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 47.859546, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {1 {1 {9} {7}}}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {1} {2}}) -> [2 2]", "(selectnodes {5 {4} {0}}) -> [4 0]", "(selectnodes {0 {8}}) -> [0 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 61.32902, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {6 {0 {9} {7}}}}) -> [6 0]", "(selectnodes {0 {0 {7 {0} {4}}}}) -> [0 0 0 4]", "(selectnodes {1 {3}}) -> []", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 84.966142, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {4 {1 {7} {2}}} {1 {8 {4} {0}} {9}}}) -> [4 2 8 4 0]", "(selectnodes {1 {0} {1}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {3}) -> [3]", "(selectnodes {7 {3}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 41.042234, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {4 {9}} {1 {5}}}) -> [4]", "(selectnodes {7}) -> [7]", "(selectnodes {0}) -> [0]", "(selectnodes {8}) -> [8]", "(selectnodes {3 {4} {7}}) -> [4]", "(selectnodes {1}) -> [1]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 45.101329, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {9}}) -> []", "(selectnodes {3 {1 {3}} {5}}) -> []", "(selectnodes {9 {7 {7 {9} {2}} {7 {8} {1}}} {2 {2 {1} {2}}}}) -> [2 8 2 2 2]", "(selectnodes {1 {6 {3 {8} {4}} {0}} {5}}) -> [6 8 4 0]", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
