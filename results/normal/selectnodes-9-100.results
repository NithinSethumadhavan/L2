{"time": 51.448735, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {3 {4 {7 {4}}}}) -> [4 4]", "(selectnodes {6 {4 {1} {7 {9}}} {9 {7} {1 {5}}}}) -> [6 4]", "(selectnodes {9 {7 {0} {9}} {8 {5}}}) -> [0 8]", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 54.713195, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {2}}) -> [2]", "(selectnodes {0}) -> [0]", "(selectnodes {2 {8}}) -> [2 8]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.919663, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {6 {4} {9 {4}}} {0 {0}}}) -> [2 6 4 4 0 0]", "(selectnodes {2 {4 {8} {9}}}) -> [2 4 8]", "(selectnodes {6 {7 {8 {5} {1}}}}) -> [6 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.496732, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {9} {9}}) -> [6]", "(selectnodes {5}) -> [5]", "(selectnodes {0 {2} {5}}) -> [0 2]", "(selectnodes {7 {1 {6 {9} {2}}} {8 {3 {0} {4}} {7 {1}}}}) -> [6 2 8 0 4]", "(selectnodes {8 {5} {5}}) -> [8]", "(selectnodes {6 {9 {3} {7}} {9 {3}}}) -> [6]", "(selectnodes {0 {5}}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.576222, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {1 {3}} {9 {5} {3}}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {9} {1}}) -> [2]", "(selectnodes {5 {2 {8 {7}} {9 {2} {0}}} {5 {5 {5} {2}} {1}}}) -> [2 8 2 0 2]", "(selectnodes {5 {2}}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 68.46829, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {9 {1} {1}} {2 {6}}}) -> [6 2 6]", "(selectnodes {4 {7 {3 {3} {9}}}}) -> [4]", "(selectnodes {1 {3}}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {7 {3} {1}}}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred c)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.010798, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {4 {6 {2} {3}}} {0}}) -> [4 6 2 0]", "(selectnodes {2 {8 {3}} {3 {4} {1}}}) -> [2 8 4]", "(selectnodes {7 {1} {2 {4 {8} {4}}}}) -> [2 4 8 4]", "(selectnodes {2}) -> [2]", "(selectnodes {6 {5 {0}} {7 {6}}}) -> [6 0 6]", "(selectnodes {7}) -> [7]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.680064, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {2}}) -> [4 2]", "(selectnodes {8 {1 {1}} {5 {5 {2}} {9 {3}}}}) -> [8 2]", "(selectnodes {5 {3 {6 {5}} {8}}}) -> [6 8]", "(selectnodes {3}) -> [3]", "(selectnodes {6 {8 {1}}}) -> [6 8]", "(selectnodes {5}) -> [5]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 73.010078, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {1 {3 {8 {4}}}}) -> [8 4]", "(selectnodes {5}) -> [5]", "(selectnodes {2 {2}}) -> [2 2]", "(selectnodes {}) -> []", "(selectnodes {4 {7} {6}}) -> [4 6]", "(selectnodes {5}) -> [5]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 73.761705, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {1 {7 {6 {2} {3}} {2 {3}}} {6 {5}}}) -> [6 2 2 6]", "(selectnodes {3 {3 {3 {8} {6}}} {7 {8}}}) -> [8 6 8]", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {3 {3 {6 {5} {1}}}}) -> [6]", "(selectnodes {9 {3 {8} {7}} {9 {3}}}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 73.852831, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {6}}) -> [8 6]", "(selectnodes {}) -> []", "(selectnodes {7 {1} {5}}) -> []", "(selectnodes {9 {4 {4 {0}}} {2 {7 {2} {3}}}}) -> [4 4 0 2 2]", "(selectnodes {6 {2 {0} {4}} {6 {4} {6}}}) -> [6 2 0 4 6 4 6]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 76.879234, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {2}}) -> [2]", "(selectnodes {6}) -> [6]", "(selectnodes {0}) -> [0]", "(selectnodes {3}) -> [3]", "(selectnodes {9 {5} {3 {5 {7} {4}}}}) -> [4]", "(selectnodes {4}) -> [4]", "(selectnodes {4 {7} {7}}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 77.384163, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {6}}) -> [6]", "(selectnodes {1 {3 {1 {1}} {2 {1}}} {1 {6 {7}} {4 {9}}}}) -> [2 6 4]", "(selectnodes {0 {5 {3}} {5}}) -> [0]", "(selectnodes {5 {3 {3}} {3 {9}}}) -> []", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {0 {9} {4}}) -> [0 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 90.695325, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {7 {0} {0 {0} {5}}}}) -> [0 0 0]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {7 {6}} {9}}) -> [6]", "(selectnodes {6 {3 {3 {4} {2}} {9 {8} {1}}} {7 {8} {0}}}) -> [6 4 2 8 8 0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 96.227211, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {6 {5} {3}} {3 {2} {1}}}) -> [8 6 2]", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {5 {9 {3 {4}} {4 {2}}}}) -> [4 4 2]", "(selectnodes {8 {4} {8}}) -> [8 4 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 97.691844, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {2 {4} {8}} {4 {8} {5}}}) -> [2 4 8 4 8]", "(selectnodes {4 {2 {7} {3}}}) -> [4 2]", "(selectnodes {3 {0 {9}}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {3 {8 {5 {0} {3}}}}) -> [8 0]", "(selectnodes {9}) -> [9]", "(selectnodes {9 {4}}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 54.497517, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {5 {4 {0} {9}} {6 {8}}}) -> [4 0 6 8]", "(selectnodes {3 {8} {8}}) -> [8 8]", "(selectnodes {4}) -> [4]", "(selectnodes {2 {4}}) -> [2 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 56.41658, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {5 {6} {2}}) -> [6 2]", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {3 {6}}) -> [6]", "(selectnodes {1 {2} {2 {8 {3}} {9 {0} {5}}}}) -> [2 2 8 0]", "(selectnodes {0 {9}}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 57.887586, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {6}) -> [6]", "(selectnodes {4 {7 {5} {1}}}) -> [4]", "(selectnodes {8 {4} {3 {9} {5}}}) -> [8 4]", "(selectnodes {5 {9 {3 {5}} {5 {0}}}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {5 {7 {5} {1 {0}}}}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 71.613959, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {4 {8}} {7 {8} {1}}}) -> [8 4 8 8]", "(selectnodes {2}) -> [2]", "(selectnodes {4}) -> [4]", "(selectnodes {8 {0 {2 {6}} {9}} {6 {8 {8} {2}}}}) -> [8 0 2 6 6 8 8 2]", "(selectnodes {}) -> []", "(selectnodes {5 {6}}) -> [6]", "(selectnodes {4 {2 {2} {6}}}) -> [4 2 2 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.384262, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {4}}) -> [0 4]", "(selectnodes {6}) -> [6]", "(selectnodes {7 {7 {6 {3}}} {7 {7 {3} {8}}}}) -> [6 8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {6 {7 {0 {0} {8}}}}) -> [6 0 0 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.035839, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {6}) -> [6]", "(selectnodes {7 {5 {6} {9}} {2 {0}}}) -> [6 2 0]", "(selectnodes {9}) -> [9]", "(selectnodes {5 {8 {3 {8}}}}) -> [8 8]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.218458, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {4}}) -> [8 4]", "(selectnodes {9}) -> [9]", "(selectnodes {0}) -> [0]", "(selectnodes {0 {6 {7}} {0}}) -> [0 6 0]", "(selectnodes {3 {3 {4 {9} {7}}} {1 {9 {5} {0}} {6}}}) -> [4 0 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.153802, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {0 {3 {4} {4}}}) -> [0 4 4]", "(selectnodes {1 {1 {8 {8} {5}} {5 {5} {8}}}}) -> [8 8 8]", "(selectnodes {8 {6}}) -> [8 6]", "(selectnodes {9}) -> [9]", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {4 {4} {3}}) -> [4 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 70.035572, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {9 {8}} {6}}) -> [2 8 6]", "(selectnodes {6 {7} {9}}) -> [6]", "(selectnodes {6 {7 {7 {0} {1}} {7 {2}}}}) -> [6 0 2]", "(selectnodes {}) -> []", "(selectnodes {3 {3 {9} {3}} {4 {4} {9}}}) -> [4 4]", "(selectnodes {}) -> []", "(selectnodes {0 {1 {1} {6}} {5 {7} {2}}}) -> [0 6 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 75.819577, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {2 {4}} {0 {7}}}) -> [2 4 0]", "(selectnodes {}) -> []", "(selectnodes {7 {0}}) -> [0]", "(selectnodes {6 {0} {5}}) -> [6 0]", "(selectnodes {4}) -> [4]", "(selectnodes {3 {0} {0}}) -> [0 0]", "(selectnodes {7 {6} {4}}) -> [6 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.288705, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {1} {7 {4} {5}}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {7 {6 {1} {1}}}) -> [6]", "(selectnodes {9}) -> [9]", "(selectnodes {2 {2} {4}}) -> [2 2 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 55.675385, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {2}) -> [2]", "(selectnodes {0 {8}}) -> [0 8]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {8 {5 {1 {8}}} {9 {3 {5} {7}}}}) -> [8 8]", "(selectnodes {0 {3 {1}} {4}}) -> [0 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 89.347844, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {2 {1 {5}} {7 {3} {8}}}}) -> [6 2 8]", "(selectnodes {5}) -> [5]", "(selectnodes {0 {7} {5}}) -> [0]", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {6 {2 {9} {6}} {8 {1} {3}}}) -> [6 2 6 8]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 73.36532, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {8} {5}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {4 {7} {3}}}) -> [0 4]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {6}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.126662, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {7} {9}}) -> [0]", "(selectnodes {0 {5}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {4}) -> [4]", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 69.515449, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {4 {6}}}) -> [4 6]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {4}) -> [4]", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {0 {8} {5}}) -> [0 8]", "(selectnodes {2 {6} {4}}) -> [2 6 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 93.599691, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {7} {5 {2 {7} {1}} {7 {8}}}}) -> [2 8]", "(selectnodes {9 {9}}) -> []", "(selectnodes {5 {5} {5}}) -> []", "(selectnodes {7 {4 {2} {4}}}) -> [4 2 4]", "(selectnodes {2 {6}}) -> [2 6]", "(selectnodes {}) -> []", "(selectnodes {4 {2 {1} {8}} {4 {8} {9}}}) -> [4 2 8 4 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 54.201326, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {9 {4 {0} {9}} {4 {4}}}) -> [4 0 4 4]", "(selectnodes {8 {7}}) -> [8]", "(selectnodes {7 {3 {1} {5 {7}}}}) -> []", "(selectnodes {4 {3 {4}} {1 {1} {8}}}) -> [4 4 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 85.885991, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {6 {8} {8 {4} {9}}}}) -> [6 8 8 4]", "(selectnodes {6 {0 {6}}}) -> [6 0 6]", "(selectnodes {8 {6 {5} {2}} {8}}) -> [8 6 2 8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {1}) -> [1]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 77.077592, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {1 {1}}}) -> []", "(selectnodes {6 {7 {9 {7} {2}}} {7 {5 {3}} {3}}}) -> [6 2]", "(selectnodes {8}) -> [8]", "(selectnodes {3 {0} {2}}) -> [0 2]", "(selectnodes {3 {1 {5 {2} {2}} {2 {8}}} {1}}) -> [2 2 2 8]", "(selectnodes {8}) -> [8]", "(selectnodes {1 {1}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 67.680545, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {1} {4}}) -> [2 4]", "(selectnodes {3}) -> [3]", "(selectnodes {4 {6}}) -> [4 6]", "(selectnodes {2 {9 {7}}}) -> [2]", "(selectnodes {3 {8 {2}}}) -> [8 2]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.429803, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {7 {0} {0}}}) -> [4 0 0]", "(selectnodes {1 {2 {1} {1}} {1 {6}}}) -> [2 6]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {4 {0 {1} {4}} {6 {6}}}) -> [4 0 4 6 6]", "(selectnodes {2 {4} {5}}) -> [2 4]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 61.135406, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {9}) -> [9]", "(selectnodes {0}) -> [0]", "(selectnodes {6 {6 {1 {9}}} {4 {3 {8} {2}}}}) -> [6 6 4 8 2]", "(selectnodes {5 {0 {2}} {3 {5}}}) -> [0 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.894427, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {3 {4} {5}} {7 {1} {6}}}) -> [6 4 6]", "(selectnodes {2}) -> [2]", "(selectnodes {0 {1 {2}} {6 {3} {6 {7} {6}}}}) -> [0 2 6 6 6]", "(selectnodes {9}) -> [9]", "(selectnodes {4 {2} {3}}) -> [4 2]", "(selectnodes {0}) -> [0]", "(selectnodes {8 {8} {3}}) -> [8 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.928894, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {5 {0 {4} {9 {0} {8}}}}) -> [0 4 0 8]", "(selectnodes {0 {5 {9 {3}} {6}}}) -> [0 6]", "(selectnodes {2 {2} {1 {3 {7} {9}}}}) -> [2 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.37427, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {0} {7}}) -> [8 0]", "(selectnodes {7 {0 {3}}}) -> [0]", "(selectnodes {3}) -> [3]", "(selectnodes {2 {2}}) -> [2 2]", "(selectnodes {2}) -> [2]", "(selectnodes {0 {0 {0} {8 {3} {8}}} {9 {7} {9 {1} {5}}}}) -> [0 0 0 8 8]", "(selectnodes {8}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.102399, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {8 {5} {1}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {4 {6} {4 {0 {9}}}}) -> [4 6 4 0]", "(selectnodes {7 {6 {4 {6}} {9 {4}}} {1 {8} {4 {1}}}}) -> [6 4 6 4 8 4]", "(selectnodes {0 {3 {2} {8}} {3 {9}}}) -> [0 2 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 75.363411, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {7} {7}}) -> [0]", "(selectnodes {5 {0} {0 {8 {1}}}}) -> [0 0 8]", "(selectnodes {2 {5 {0} {3 {3}}} {3 {4} {1}}}) -> [2 0 4]", "(selectnodes {6 {7 {7}} {5 {2} {1}}}) -> [6 2]", "(selectnodes {7 {7 {8} {7}} {9 {2} {1}}}) -> [8 2]", "(selectnodes {9}) -> [9]", "(selectnodes {5 {3 {0}}}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 86.637443, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {4 {5}} {7 {2} {8}}}) -> [4 2 8]", "(selectnodes {1 {5 {9 {1}} {9}}}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {9} {2}}) -> [2 2]", "(selectnodes {4 {9 {4 {5} {1}} {2 {4} {6}}} {9 {5 {3}} {7 {5}}}}) -> [4 4 2 4 6]", "(selectnodes {6 {9 {4} {7}}}) -> [6 4]", "(selectnodes {4 {3 {8 {0}} {4 {9}}}}) -> [4 8 0 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 112.88542, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {5 {7 {1}} {3 {0}}} {7 {1 {8} {3}}}}) -> [0 8]", "(selectnodes {0 {1 {9} {5}} {5}}) -> [0]", "(selectnodes {2}) -> [2]", "(selectnodes {3}) -> [3]", "(selectnodes {0 {7 {7}} {1 {7}}}) -> [0]", "(selectnodes {3 {1 {6}}}) -> [6]", "(selectnodes {0 {8 {8} {4}} {5 {3}}}) -> [0 8 8 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 67.357991, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {3 {9 {4} {0}}}) -> [4 0]", "(selectnodes {}) -> []", "(selectnodes {2 {0 {0}}}) -> [2 0 0]", "(selectnodes {9 {5}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 67.064998, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5 {1} {9}}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {2 {1 {5}}}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {7 {4 {8 {7} {6}}} {4}}) -> [4 8 6 4]", "(selectnodes {3 {5}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 57.200405, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {5 {5 {8}}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {1}) -> [1]", "(selectnodes {2 {5}}) -> [2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 133.5255, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {0 {6 {1}} {6 {9} {4}}} {5 {4 {8} {1}} {2 {6}}}}) -> [0 6 6 4 4 8 2 6]", "(selectnodes {1 {8} {5}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {9 {7 {4}} {5}}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.194704, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {0}}) -> [8 0]", "(selectnodes {7 {3}}) -> []", "(selectnodes {9 {4 {3 {8} {9}}}}) -> [4 8]", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {5}) -> [5]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 57.520805, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {4 {0} {3}}) -> [4 0]", "(selectnodes {9 {6}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {9 {7} {9}}) -> []", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 67.433985, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7 {7}}) -> []", "(selectnodes {3 {2}}) -> [2]", "(selectnodes {9}) -> [9]", "(selectnodes {6}) -> [6]", "(selectnodes {0 {6 {5} {2}}}) -> [0 6 2]", "(selectnodes {7 {9} {4}}) -> [4]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 79.412503, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8}) -> [8]", "(selectnodes {4 {2 {2} {8}} {7 {9}}}) -> [4 2 2 8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred c)))) (cons c (join d)))) [])) _) _)"}
{"time": 70.779139, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {9 {7 {8 {1}}} {4 {4 {1}}}}) -> [8 4 4]", "(selectnodes {}) -> []", "(selectnodes {0 {6 {7 {6} {4}} {2 {7} {5}}}}) -> [0 6 6 4 2]", "(selectnodes {}) -> []", "(selectnodes {5 {2}}) -> [2]", "(selectnodes {8}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.174494, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {5 {7}} {7}}) -> [2]", "(selectnodes {8}) -> [8]", "(selectnodes {2}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 59.01925, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {1 {9} {8}}) -> [8]", "(selectnodes {6 {4 {9 {1} {2}} {2 {3}}}}) -> [6 4 2 2]", "(selectnodes {4 {3}}) -> [4]", "(selectnodes {1}) -> [1]", "(selectnodes {0 {4 {7} {5}} {4 {1} {1}}}) -> [0 4 4]", "(selectnodes {4 {7 {7 {5}}} {5}}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 74.076033, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {9 {2} {8 {7}}}}) -> [2 8]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {9}) -> [9]", "(selectnodes {1}) -> [1]", "(selectnodes {2 {2 {1 {3}} {8 {2} {6}}}}) -> [2 2 8 2 6]", "(selectnodes {5 {2} {4}}) -> [2 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 78.847165, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {9 {7 {3}}} {7}}) -> [4]", "(selectnodes {8 {5 {8 {4} {9}}}}) -> [8 8 4]", "(selectnodes {4 {0}}) -> [4 0]", "(selectnodes {4 {7 {0}} {4}}) -> [4 0 4]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {6}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 57.782994, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {5}}) -> [6]", "(selectnodes {7}) -> [7]", "(selectnodes {0 {4 {4} {4}}}) -> [0 4 4 4]", "(selectnodes {9}) -> [9]", "(selectnodes {4 {5} {9 {4 {9}}}}) -> [4 4]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.490005, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2 {8}}) -> [2 8]", "(selectnodes {4}) -> [4]", "(selectnodes {6 {5 {3 {8}}} {5}}) -> [6 8]", "(selectnodes {8}) -> [8]", "(selectnodes {8 {9} {4}}) -> [8 4]", "(selectnodes {3 {3}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 59.24745, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {5}}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {1}) -> [1]", "(selectnodes {1 {4 {8} {5}} {2 {7} {0}}}) -> [4 8 2 0]", "(selectnodes {}) -> []", "(selectnodes {7 {4} {5 {2 {3}}}}) -> [4 2]", "(selectnodes {0}) -> [0]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 65.840823, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {2 {5}}) -> [2]", "(selectnodes {4 {2} {7}}) -> [4 2]", "(selectnodes {8 {8 {6}} {8 {1 {7} {5}} {3 {4}}}}) -> [8 8 6 8 4]", "(selectnodes {8 {8}}) -> [8 8]", "(selectnodes {4 {9} {4}}) -> [4 4]", "(selectnodes {4 {3} {6}}) -> [4 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.213572, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {3}}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {1}) -> [1]", "(selectnodes {6 {1 {1} {5}}}) -> [6]", "(selectnodes {8 {2 {5 {8}} {9}}}) -> [8 2 8]", "(selectnodes {5 {5} {0 {4}}}) -> [0 4]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 90.444959, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {1} {3}}) -> []", "(selectnodes {}) -> []", "(selectnodes {6 {2 {3 {3}} {3 {9} {6}}}}) -> [6 2 6]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 76.737246, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {5 {2} {5 {5} {4 {8}}}}) -> [2 4 8]", "(selectnodes {}) -> []", "(selectnodes {1 {2}}) -> [2]", "(selectnodes {9 {1 {5} {0}} {0}}) -> [0 0]", "(selectnodes {6 {5 {5 {7} {4}} {3}} {3}}) -> [6 4]", "(selectnodes {2 {5}}) -> [2]", "(selectnodes {8}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 59.698372, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {0 {3 {0}}}) -> [0 0]", "(selectnodes {5 {7}}) -> []", "(selectnodes {8 {2}}) -> [8 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.802815, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {0 {5}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {7 {6} {4}} {6 {0}}}) -> [8 6 4 6 0]", "(selectnodes {9 {7 {6} {6}} {3}}) -> [6 6]", "(selectnodes {0 {4 {8}}}) -> [0 4 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 72.837248, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {7 {1} {0}}}) -> [0 0]", "(selectnodes {8}) -> [8]", "(selectnodes {2 {9 {2}}}) -> [2 2]", "(selectnodes {}) -> []", "(selectnodes {6 {3} {8 {5 {1} {2}} {3}}}) -> [6 8 2]", "(selectnodes {}) -> []", "(selectnodes {8 {6 {3}}}) -> [8 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 59.830126, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {5 {2} {5}}) -> [2]", "(selectnodes {0}) -> [0]", "(selectnodes {4 {1}}) -> [4]", "(selectnodes {1 {0}}) -> [0]", "(selectnodes {2 {5 {8}}}) -> [2 8]", "(selectnodes {8}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 60.604053, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {7 {7} {3}}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {6} {0 {3} {9}}}) -> [6 0]", "(selectnodes {4}) -> [4]", "(selectnodes {4 {0} {0}}) -> [4 0 0]", "(selectnodes {4 {0} {2}}) -> [4 0 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 66.345962, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {0} {9}}) -> [4 0]", "(selectnodes {7 {0} {8}}) -> [0 8]", "(selectnodes {4 {6}}) -> [4 6]", "(selectnodes {}) -> []", "(selectnodes {0 {7}}) -> [0]", "(selectnodes {6 {9 {2}}}) -> [6 2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 77.328931, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {0 {1 {4} {3}}}}) -> [0 0 4]", "(selectnodes {5 {9}}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.440468, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {8 {9 {2} {1}}}) -> [8 2]", "(selectnodes {3 {3}}) -> []", "(selectnodes {3 {3}}) -> []", "(selectnodes {8 {6 {4}} {1 {7}}}) -> [8 6 4]", "(selectnodes {3 {5}}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 86.371581, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {0 {1 {7} {6}}} {1 {7 {5}}}}) -> [0 6]", "(selectnodes {7 {8} {3}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {3 {1} {1 {1 {1} {7}} {6 {3}}}}) -> [6]", "(selectnodes {7}) -> [7]", "(selectnodes {0 {5}}) -> [0]", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 61.877944, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {1}) -> [1]", "(selectnodes {}) -> []", "(selectnodes {9 {6 {8}} {9}}) -> [6 8]", "(selectnodes {5 {7}}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 69.502767, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {4 {9}}) -> [4]", "(selectnodes {8 {0 {6 {6}} {7}} {2 {0 {9}} {4}}}) -> [8 0 6 6 2 0 4]", "(selectnodes {6}) -> [6]", "(selectnodes {9 {4} {4}}) -> [4 4]", "(selectnodes {7}) -> [7]", "(selectnodes {1 {1} {9}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.147779, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (cons c [])) [])) _) _)"}
{"time": 60.570584, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {7 {7}}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {8 {6} {6}}) -> [8 6 6]", "(selectnodes {6 {0 {9} {2}} {5 {7} {5}}}) -> [6 0 2]", "(selectnodes {5}) -> [5]", "(selectnodes {2 {1 {4}}}) -> [2 4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 83.985541, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {0 {0 {8} {9 {1} {5}}}}) -> [0 0 8]", "(selectnodes {6 {1 {8 {2}} {8 {3} {7}}}}) -> [6 8 2 8]", "(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {9 {3 {5 {6}}}}) -> [6]", "(selectnodes {9 {4} {4}}) -> [4 4]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 0.785428, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {2}) -> [2]", "(selectnodes {0}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {7 {8}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) e) (cons c []))) [])) _) _)"}
{"time": 62.640202, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {9 {1} {9 {2}}}) -> [2]", "(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {0}) -> [0]", "(selectnodes {3}) -> [3]", "(selectnodes {2 {2}}) -> [2 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 60.330259, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {}) -> []", "(selectnodes {1 {3 {9}}}) -> []", "(selectnodes {0}) -> [0]", "(selectnodes {0 {7 {0}}}) -> [0 0]", "(selectnodes {5}) -> [5]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 58.68465, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {9 {0 {2} {4}} {8 {6}}}) -> [0 2 4 8 6]", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {3 {7}}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 90.298014, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {6 {3 {4} {5}} {2 {8} {9}}}}) -> [6 4 2 8]", "(selectnodes {0 {9}}) -> [0]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {8 {4 {6}} {3 {3}}}) -> [8 4 6]", "(selectnodes {2 {4 {6}}}) -> [2 4 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 73.274706, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7 {6} {5}}) -> [6]", "(selectnodes {8 {6 {6 {4}}} {4 {3}}}) -> [8 6 6 4 4]", "(selectnodes {4 {4}}) -> [4 4]", "(selectnodes {5}) -> [5]", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 75.856868, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {1 {6 {9 {7} {3}}}}) -> [6]", "(selectnodes {}) -> []", "(selectnodes {4 {9} {4}}) -> [4 4]", "(selectnodes {4 {9}}) -> [4]", "(selectnodes {9 {9} {2 {3}}}) -> [2]", "(selectnodes {0}) -> [0]", "(selectnodes {6}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.928817, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {7}}) -> [6]", "(selectnodes {1 {6}}) -> [6]", "(selectnodes {5 {7}}) -> []", "(selectnodes {9 {4}}) -> [4]", "(selectnodes {9}) -> [9]", "(selectnodes {8}) -> [8]", "(selectnodes {4}) -> [4]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 62.781716, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {1 {9} {2}}) -> [2]", "(selectnodes {2 {5} {0}}) -> [2 0]", "(selectnodes {}) -> []", "(selectnodes {5 {2} {2}}) -> [2 2]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 71.098936, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {6 {2} {7}} {1}}) -> [6 2]", "(selectnodes {5 {0}}) -> [0]", "(selectnodes {8 {7 {4} {2}}}) -> [8 4 2]", "(selectnodes {3 {7 {1} {5}} {3}}) -> []", "(selectnodes {1 {7} {3}}) -> []", "(selectnodes {1}) -> [1]", "(selectnodes {6}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 64.884061, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {3 {3 {1 {6}}}}) -> [6]", "(selectnodes {2 {7}}) -> [2]", "(selectnodes {3 {8 {0}} {7}}) -> [8 0]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]", "(selectnodes {9 {4} {7}}) -> [4]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 55.010925, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {0}}) -> [4 0]", "(selectnodes {6 {9}}) -> [6]", "(selectnodes {0}) -> [0]", "(selectnodes {8}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {0 {1}}) -> [0]", "(selectnodes {1 {8} {5}}) -> [8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 52.069705, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2}) -> [2]", "(selectnodes {2 {5}}) -> [2]", "(selectnodes {7 {3 {0} {1}}}) -> [0]", "(selectnodes {5 {8} {5}}) -> [8]", "(selectnodes {}) -> []", "(selectnodes {3 {4} {4}}) -> [4 4]", "(selectnodes {7 {3 {2 {6}}} {5}}) -> [2 6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 63.363495, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {6 {0 {0} {3}}}) -> [6 0 0]", "(selectnodes {}) -> []", "(selectnodes {8 {2 {9}}}) -> [8 2]", "(selectnodes {7 {4 {6} {3}} {8 {2}}}) -> [4 6 8 2]", "(selectnodes {3 {8}}) -> [8]", "(selectnodes {0 {6 {6}}}) -> [0 6 6]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 66.547248, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {2 {4 {6} {3}} {8 {9}}}) -> [2 4 6 8]", "(selectnodes {5 {2}}) -> [2]", "(selectnodes {5}) -> [5]", "(selectnodes {6 {6} {7}}) -> [6 6]", "(selectnodes {}) -> []", "(selectnodes {4}) -> [4]", "(selectnodes {6}) -> [6]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 78.696953, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {8 {2} {2 {8 {9} {8}} {1 {3} {6}}}}) -> [8 2 2 8 8 6]", "(selectnodes {}) -> []", "(selectnodes {5 {1 {1}}}) -> []", "(selectnodes {4 {1}}) -> [4]", "(selectnodes {8}) -> [8]", "(selectnodes {5}) -> [5]", "(selectnodes {8 {0} {8}}) -> [8 0 8]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 55.667522, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {4 {1 {0} {4 {3}}}}) -> [4 0 4]", "(selectnodes {2 {1}}) -> [2]", "(selectnodes {9}) -> [9]", "(selectnodes {}) -> []", "(selectnodes {1 {7 {0} {6}} {1 {1} {4}}}) -> [0 6 4]", "(selectnodes {}) -> []", "(selectnodes {3}) -> [3]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 38.409886, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9}) -> [9]", "(selectnodes {3}) -> [3]", "(selectnodes {3}) -> [3]", "(selectnodes {}) -> []", "(selectnodes {5 {1}}) -> []", "(selectnodes {1 {8 {5} {2}}}) -> [8 2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 38.526024, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {9 {0}}) -> [0]", "(selectnodes {6}) -> [6]", "(selectnodes {0}) -> [0]", "(selectnodes {0 {7} {0}}) -> [0 0]", "(selectnodes {}) -> []", "(selectnodes {5}) -> [5]", "(selectnodes {0 {4 {9}} {5 {4} {2}}}) -> [0 4 4 2]"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
{"time": 34.208027, "name": "selectnodes", "examples": ["(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {7}) -> [7]", "(selectnodes {4}) -> [4]", "(selectnodes {}) -> []", "(selectnodes {}) -> []", "(selectnodes {3 {7 {5} {4}} {2 {1} {5}}}) -> [4 2]", "(selectnodes {}) -> []"], "solution": "(let selectnodes (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (filter f (lambda (g) (pred g)))) (cons c (join d)))) [])) _) _)"}
