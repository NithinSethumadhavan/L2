{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.0005, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [4]) -> []", "(dropmax [0]) -> []", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 0 c)))) _) _)", "name": "dropmax", "time": 0.059305, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax []) -> []", "(dropmax [0 7]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.170444, "examples": ["(dropmax []) -> []", "(dropmax [9 6]) -> [6]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.176382, "examples": ["(dropmax []) -> []", "(dropmax [1 4 2 0 6]) -> [1 4 2 0]", "(dropmax [9 0]) -> [0]", "(dropmax [9 7 2 5 7]) -> [7 2 5 7]", "(dropmax [6 7 2 0]) -> [6 2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.193792, "examples": ["(dropmax []) -> []", "(dropmax [5 5 4 6 8]) -> [5 5 4 6]", "(dropmax []) -> []", "(dropmax [0 1 9]) -> [0 1]", "(dropmax [2 4 2 4]) -> [2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189938, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [6 3 1 6 5]) -> [3 1 5]", "(dropmax []) -> []", "(dropmax [7 5 8 5 2]) -> [7 5 5 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.168797, "examples": ["(dropmax []) -> []", "(dropmax [6 2 9]) -> [6 2]", "(dropmax [3 9 2 8]) -> [3 2 8]", "(dropmax [9 7 1]) -> [7 1]", "(dropmax [5 4 8]) -> [5 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.142542, "examples": ["(dropmax []) -> []", "(dropmax [1 5]) -> [1]", "(dropmax [7 1 1 0]) -> [1 1 0]", "(dropmax [8 0 1]) -> [0 1]", "(dropmax [0 4 2 7 2]) -> [0 4 2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.176715, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 1 7]) -> [0 1]", "(dropmax []) -> []", "(dropmax [6 0 8 9]) -> [6 0 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.180216, "examples": ["(dropmax []) -> []", "(dropmax [3 9 7 2]) -> [3 7 2]", "(dropmax [2 6 9]) -> [2 6]", "(dropmax []) -> []", "(dropmax [6 0 1]) -> [0 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177155, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [5]) -> []", "(dropmax [1 8 9 0 2]) -> [1 8 0 2]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178845, "examples": ["(dropmax []) -> []", "(dropmax [1 2 4 6 9]) -> [1 2 4 6]", "(dropmax []) -> []", "(dropmax [6 3 9 5]) -> [6 3 5]", "(dropmax [9 0 9]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.190022, "examples": ["(dropmax []) -> []", "(dropmax [9 3]) -> [3]", "(dropmax [0 4 6]) -> [0 4]", "(dropmax [3 4 5 5]) -> [3 4]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.027719, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax []) -> []", "(dropmax [9 1 7 1 2]) -> [1 7 1 2]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167753, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [6 7 6 0 7]) -> [6 6 0]", "(dropmax [5]) -> []", "(dropmax [4 8 2 3 7]) -> [4 2 3 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.139703, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [4 8]) -> [4]", "(dropmax []) -> []", "(dropmax [3 3 1 3]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158442, "examples": ["(dropmax []) -> []", "(dropmax [4 9]) -> [4]", "(dropmax [3 3 9 2]) -> [3 3 2]", "(dropmax [2 6]) -> [2]", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.132534, "examples": ["(dropmax []) -> []", "(dropmax [7 6 6 0 5]) -> [6 6 0 5]", "(dropmax [3 9 5 3]) -> [3 5 3]", "(dropmax [6 9]) -> [6]", "(dropmax [6 6 8]) -> [6 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.186677, "examples": ["(dropmax []) -> []", "(dropmax [5 7]) -> [5]", "(dropmax [4 9 9 5]) -> [4 5]", "(dropmax [6 6 3]) -> [3]", "(dropmax [0 7 6 7]) -> [0 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.150071, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 9 2]) -> [3 2]", "(dropmax [7 8 2 1]) -> [7 2 1]", "(dropmax [3 8 9 2]) -> [3 8 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.142542, "examples": ["(dropmax []) -> []", "(dropmax [9 0 8 0 8]) -> [0 8 0 8]", "(dropmax [2 9 5 9]) -> [2 5]", "(dropmax [5 1 3 0 4]) -> [1 3 0 4]", "(dropmax [7 7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.132814, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax []) -> []", "(dropmax [5 2 0 3 9]) -> [5 2 0 3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.162914, "examples": ["(dropmax []) -> []", "(dropmax [4 8 1]) -> [4 1]", "(dropmax [8]) -> []", "(dropmax [8]) -> []", "(dropmax [3 0 0 3 7]) -> [3 0 0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185616, "examples": ["(dropmax []) -> []", "(dropmax [5 4]) -> [4]", "(dropmax [6 4]) -> [4]", "(dropmax [8 5 4 5 1]) -> [5 4 5 1]", "(dropmax [0 9]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.200756, "examples": ["(dropmax []) -> []", "(dropmax [5 3 3]) -> [3 3]", "(dropmax [8]) -> []", "(dropmax []) -> []", "(dropmax [4 4 5 1]) -> [4 4 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.152415, "examples": ["(dropmax []) -> []", "(dropmax [7 8 0 1 9]) -> [7 8 0 1]", "(dropmax [7 5 5]) -> [5 5]", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.160494, "examples": ["(dropmax []) -> []", "(dropmax [2 7 7 4]) -> [2 4]", "(dropmax [6 8]) -> [6]", "(dropmax [3 7 5 3]) -> [3 5 3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.196058, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [4 2]) -> [2]", "(dropmax [0 2 9]) -> [0 2]", "(dropmax [3 7]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.195156, "examples": ["(dropmax []) -> []", "(dropmax [5 3]) -> [3]", "(dropmax [4]) -> []", "(dropmax [1 6 0]) -> [1 0]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.179576, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 1 3]) -> [1 3]", "(dropmax [8 8 1]) -> [1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187718, "examples": ["(dropmax []) -> []", "(dropmax [3 8 2 1]) -> [3 2 1]", "(dropmax [4 5 1]) -> [4 1]", "(dropmax []) -> []", "(dropmax [7 3 6 9 1]) -> [7 3 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179567, "examples": ["(dropmax []) -> []", "(dropmax [3 0 3]) -> [0]", "(dropmax [4 1]) -> [1]", "(dropmax [6 6 8]) -> [6 6]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.188405, "examples": ["(dropmax []) -> []", "(dropmax [2 5]) -> [2]", "(dropmax [4 9 2 2 9]) -> [4 2 2]", "(dropmax [5 0]) -> [0]", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.192911, "examples": ["(dropmax []) -> []", "(dropmax [3 4]) -> [3]", "(dropmax [2 5 8]) -> [2 5]", "(dropmax [9 5 9]) -> [5]", "(dropmax [3 0 7]) -> [3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 0 c)))) _) _)", "name": "dropmax", "time": 0.033059, "examples": ["(dropmax []) -> []", "(dropmax [0 9]) -> [0]", "(dropmax [5]) -> []", "(dropmax [5]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.135706, "examples": ["(dropmax []) -> []", "(dropmax [4 5]) -> [4]", "(dropmax [8 0 7]) -> [0 7]", "(dropmax []) -> []", "(dropmax [4 5 2 9]) -> [4 5 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.175677, "examples": ["(dropmax []) -> []", "(dropmax [7 2 8 0 9]) -> [7 2 8 0]", "(dropmax []) -> []", "(dropmax [0 3 5 5]) -> [0 3]", "(dropmax [8 8 5 4 7]) -> [5 4 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158889, "examples": ["(dropmax []) -> []", "(dropmax [5 2 4 4 1]) -> [2 4 4 1]", "(dropmax [9 3]) -> [3]", "(dropmax [2 9 6 2 3]) -> [2 6 2 3]", "(dropmax [6 5 0 4]) -> [5 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.153408, "examples": ["(dropmax []) -> []", "(dropmax [6 6]) -> []", "(dropmax [0 4]) -> [0]", "(dropmax [8 2]) -> [2]", "(dropmax [4 1 0 7]) -> [4 1 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184719, "examples": ["(dropmax []) -> []", "(dropmax [2 3]) -> [2]", "(dropmax [7 1 0 4 8]) -> [7 1 0 4]", "(dropmax [2 5 0 6 0]) -> [2 5 0 0]", "(dropmax [5 2 8]) -> [5 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.183844, "examples": ["(dropmax []) -> []", "(dropmax [8 1 4 4]) -> [1 4 4]", "(dropmax [4 5 2 6 8]) -> [4 5 2 6]", "(dropmax [2 9 1 6]) -> [2 1 6]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.191608, "examples": ["(dropmax []) -> []", "(dropmax [2 8 9 1 3]) -> [2 8 1 3]", "(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.210986, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 3 6 8 0]) -> [2 3 6 0]", "(dropmax [5 7 9]) -> [5 7]", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.188363, "examples": ["(dropmax []) -> []", "(dropmax [5 6 4 8]) -> [5 6 4]", "(dropmax [5 1 3]) -> [1 3]", "(dropmax [5 5 7 6 4]) -> [5 5 6 4]", "(dropmax [2 9 6]) -> [2 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.206951, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 9 5 5]) -> [8 5 5]", "(dropmax [3 8 4 6]) -> [3 4 6]", "(dropmax [4 9 8 0 5]) -> [4 8 0 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.154535, "examples": ["(dropmax []) -> []", "(dropmax [6 5 1 1]) -> [5 1 1]", "(dropmax [3]) -> []", "(dropmax [2 6]) -> [2]", "(dropmax [8 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.168506, "examples": ["(dropmax []) -> []", "(dropmax [8 0 0]) -> [0 0]", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [3 1 4 9 8]) -> [3 1 4 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179209, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [7 8 7 3]) -> [7 7 3]", "(dropmax [1 1]) -> []", "(dropmax [4 4 6 3 3]) -> [4 4 3 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189516, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [1 7 2]) -> [1 2]", "(dropmax [5 1 4 5]) -> [1 4]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.193563, "examples": ["(dropmax []) -> []", "(dropmax [6 6 3 2]) -> [3 2]", "(dropmax [7 2 3 9]) -> [7 2 3]", "(dropmax [0 7 5]) -> [0 5]", "(dropmax [6 7 6]) -> [6 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.025583, "examples": ["(dropmax []) -> []", "(dropmax [5 1]) -> [1]", "(dropmax [0]) -> []", "(dropmax [8 4 5]) -> [4 5]", "(dropmax [2]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.044565, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [8 7 4 2 0]) -> [7 4 2 0]", "(dropmax [7 0]) -> [0]", "(dropmax [6 3 0 3]) -> [3 0 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.138396, "examples": ["(dropmax []) -> []", "(dropmax [3 5 9 1 5]) -> [3 5 1 5]", "(dropmax [3 5]) -> [3]", "(dropmax [1 1 7 1 3]) -> [1 1 1 3]", "(dropmax [2 9]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.138875, "examples": ["(dropmax []) -> []", "(dropmax [3 4 0 3 7]) -> [3 4 0 3]", "(dropmax [3 2 2 1 7]) -> [3 2 2 1]", "(dropmax [1 6 3]) -> [1 3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.15854, "examples": ["(dropmax []) -> []", "(dropmax [3 9]) -> [3]", "(dropmax [7 3]) -> [3]", "(dropmax [6 8 9 7]) -> [6 8 7]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178629, "examples": ["(dropmax []) -> []", "(dropmax [6 5 1 5 9]) -> [6 5 1 5]", "(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [1 3 3 6 0]) -> [1 3 3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.177333, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9 1 9 5]) -> [1 5]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.183596, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [9 3]) -> [3]", "(dropmax [0]) -> []", "(dropmax [1 8 1 9]) -> [1 8 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.154524, "examples": ["(dropmax []) -> []", "(dropmax [7 3 2 6 0]) -> [3 2 6 0]", "(dropmax [4]) -> []", "(dropmax [2 7 5 4 4]) -> [2 5 4 4]", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178633, "examples": ["(dropmax []) -> []", "(dropmax [0 7 8]) -> [0 7]", "(dropmax [2 9]) -> [2]", "(dropmax [2 1]) -> [1]", "(dropmax [0 7 8]) -> [0 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.155048, "examples": ["(dropmax []) -> []", "(dropmax [1 5 0]) -> [1 0]", "(dropmax []) -> []", "(dropmax [8 9 6 7]) -> [8 6 7]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.149037, "examples": ["(dropmax []) -> []", "(dropmax [8 0]) -> [0]", "(dropmax [7 1 7]) -> [1]", "(dropmax [5 9 6 7]) -> [5 6 7]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.156358, "examples": ["(dropmax []) -> []", "(dropmax [0 8 1 9]) -> [0 8 1]", "(dropmax [3 9]) -> [3]", "(dropmax [8 5 7 5 5]) -> [5 7 5 5]", "(dropmax [9 2 9 2 2]) -> [2 2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.150708, "examples": ["(dropmax []) -> []", "(dropmax [2 8 6 2 9]) -> [2 8 6 2]", "(dropmax [5]) -> []", "(dropmax [7]) -> []", "(dropmax [2 8 5 6 0]) -> [2 5 6 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.146888, "examples": ["(dropmax []) -> []", "(dropmax [0 1 6 5]) -> [0 1 5]", "(dropmax [1 6 0 8]) -> [1 6 0]", "(dropmax [8 8 9 3 1]) -> [8 8 3 1]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.146918, "examples": ["(dropmax []) -> []", "(dropmax [9 1 5 6]) -> [1 5 6]", "(dropmax [2 2 2]) -> []", "(dropmax [5 0]) -> [0]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.142256, "examples": ["(dropmax []) -> []", "(dropmax [6 8 2]) -> [6 2]", "(dropmax [4 1]) -> [1]", "(dropmax [9 1 9]) -> [1]", "(dropmax [0 9 0 9 5]) -> [0 0 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.11965, "examples": ["(dropmax []) -> []", "(dropmax [5 1 7 6]) -> [5 1 6]", "(dropmax [3 0 2 0 8]) -> [3 0 2 0]", "(dropmax [5 5 3 8 6]) -> [5 5 3 6]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.137579, "examples": ["(dropmax []) -> []", "(dropmax [3 3 5 6]) -> [3 3 5]", "(dropmax [8 6 2 9 6]) -> [8 6 2 6]", "(dropmax [0 5]) -> [0]", "(dropmax [6]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.046461, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [9 5 4 8]) -> [5 4 8]", "(dropmax []) -> []", "(dropmax [8 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.151865, "examples": ["(dropmax []) -> []", "(dropmax [6 9 1 2 3]) -> [6 1 2 3]", "(dropmax []) -> []", "(dropmax [5 1 7 7]) -> [5 1]", "(dropmax [6 7 2 7 7]) -> [6 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.165284, "examples": ["(dropmax []) -> []", "(dropmax [8 8]) -> []", "(dropmax [2 6 4 4 6]) -> [2 4 4]", "(dropmax [3]) -> []", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.166055, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9 0 6 0]) -> [0 6 0]", "(dropmax [1 6]) -> [1]", "(dropmax [2 0 8 4]) -> [2 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.182902, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [0 9 9 5]) -> [0 5]", "(dropmax [6]) -> []", "(dropmax [5 6 5]) -> [5 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17173, "examples": ["(dropmax []) -> []", "(dropmax [7 9 3]) -> [7 3]", "(dropmax [2 1]) -> [1]", "(dropmax [1 3 5 2]) -> [1 3 2]", "(dropmax [9 2 9 8 5]) -> [2 8 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172131, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 1 5 5 5]) -> [2 1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158049, "examples": ["(dropmax []) -> []", "(dropmax [7 1 8 4 1]) -> [7 1 4 1]", "(dropmax []) -> []", "(dropmax [5 4]) -> [4]", "(dropmax [0 8 6 9]) -> [0 8 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.160424, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [7 1 0]) -> [1 0]", "(dropmax [6 4 5]) -> [4 5]", "(dropmax [3 8]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185857, "examples": ["(dropmax []) -> []", "(dropmax [4 4]) -> []", "(dropmax [1]) -> []", "(dropmax [9]) -> []", "(dropmax [0 5 4]) -> [0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.170886, "examples": ["(dropmax []) -> []", "(dropmax [1 0]) -> [0]", "(dropmax [6 8 0 1]) -> [6 0 1]", "(dropmax [8 7 9]) -> [8 7]", "(dropmax [9 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.164733, "examples": ["(dropmax []) -> []", "(dropmax [8 5]) -> [5]", "(dropmax [5 5 4]) -> [4]", "(dropmax [0 8 7 1 4]) -> [0 7 1 4]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158048, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [1 4 1 9 8]) -> [1 4 1 8]", "(dropmax []) -> []", "(dropmax []) -> []"]}
