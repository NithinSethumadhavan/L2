{"time": 0.204904, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0 {0 {5} {2}} {2}}) -> 3", "(height {2 {6 {4}} {2}}) -> 3", "(height {2 {6 {6 {0} {8}} {0 {8}}} {8 {8 {8} {3}}}}) -> 4", "(height {0 {1 {0} {3}} {6 {8}}}) -> 3", "(height {2 {3 {4 {6}} {4 {0} {8}}} {9 {7}}}) -> 4", "(height {8}) -> 1", "(height {0 {7}}) -> 2", "(height {3 {0}}) -> 2", "(height {3 {8 {7}} {3 {9}}}) -> 3", "(height {7 {5 {7}}}) -> 3", "(height {}) -> 0"]}
{"time": 0.220333, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {1} {1}}) -> 2", "(height {}) -> 0", "(height {7 {1 {7 {8} {7}} {8}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {3 {0 {4}} {6}}) -> 3", "(height {}) -> 0", "(height {9 {5 {1}}}) -> 3", "(height {3 {6}}) -> 2", "(height {7 {1 {7 {5} {8}}} {1 {8} {6}}}) -> 4", "(height {5 {6 {7} {5}}}) -> 3"]}
{"time": 0.173979, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {8 {3 {0} {4}}}) -> 3", "(height {3 {5} {8}}) -> 2", "(height {3 {3 {9} {2}} {2}}) -> 3", "(height {}) -> 0", "(height {9 {7} {9}}) -> 2", "(height {0 {3 {2 {8}}}}) -> 4", "(height {9 {4} {2}}) -> 2", "(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0"]}
{"time": 0.229878, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {8 {8}}) -> 2", "(height {1}) -> 1", "(height {0 {4 {4}}}) -> 3", "(height {3 {8} {8}}) -> 2", "(height {}) -> 0", "(height {3 {4 {1}}}) -> 3", "(height {8 {5 {5} {7}} {4 {3 {4}} {9}}}) -> 4", "(height {2 {2}}) -> 2", "(height {6 {9 {3 {2} {0}}} {5 {0}}}) -> 4", "(height {8 {5}}) -> 2"]}
{"time": 0.220204, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0 {6}}) -> 2", "(height {4 {1 {8}} {4 {9}}}) -> 3", "(height {4 {3} {4 {2 {5}}}}) -> 4", "(height {8}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {0 {3} {3}}) -> 2", "(height {5}) -> 1", "(height {9 {8}}) -> 2", "(height {3 {1} {7}}) -> 2", "(height {0}) -> 1"]}
{"time": 0.221411, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {5 {7}} {3 {9 {6}}}}) -> 4", "(height {8}) -> 1", "(height {3 {5}}) -> 2", "(height {5}) -> 1", "(height {}) -> 0", "(height {3}) -> 1", "(height {6 {4} {5}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {1 {5} {5}}}) -> 3", "(height {3}) -> 1"]}
{"time": 0.176653, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {4}) -> 1", "(height {4 {2} {9}}) -> 2", "(height {6 {2 {1} {4}}}) -> 3", "(height {4}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {5}) -> 1"]}
{"time": 0.211188, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {1 {5}} {5}}) -> 3", "(height {}) -> 0", "(height {5 {2} {9}}) -> 2", "(height {}) -> 0", "(height {2 {0}}) -> 2", "(height {0}) -> 1", "(height {8}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.188329, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {7}}) -> 2", "(height {4}) -> 1", "(height {}) -> 0", "(height {4 {3}}) -> 2", "(height {3}) -> 1", "(height {7}) -> 1", "(height {}) -> 0", "(height {2}) -> 1", "(height {0 {8 {5}} {4 {9 {7} {7}} {3}}}) -> 4", "(height {5 {8} {0}}) -> 2", "(height {8}) -> 1"]}
{"time": 0.194952, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {7 {1 {0} {7}} {3}}}) -> 4", "(height {2}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {1 {7}}) -> 2", "(height {9 {8}}) -> 2", "(height {8}) -> 1", "(height {8 {8}}) -> 2", "(height {9 {8} {9}}) -> 2", "(height {9}) -> 1", "(height {2}) -> 1"]}
{"time": 0.211716, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {0 {0}} {2 {1}}}) -> 3", "(height {6 {2}}) -> 2", "(height {0 {8 {2}}}) -> 3", "(height {1 {9 {7} {9 {0}}} {8 {4 {4} {1}} {1}}}) -> 4", "(height {2}) -> 1", "(height {8}) -> 1", "(height {5 {7 {0} {2}}}) -> 3", "(height {5 {2 {6}} {7 {8} {5}}}) -> 3", "(height {8 {4 {6}}}) -> 3", "(height {0 {4} {5}}) -> 2", "(height {7}) -> 1"]}
{"time": 0.21089, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {5 {0}} {6 {6 {0}}}}) -> 4", "(height {6 {9 {6} {7}} {7 {3}}}) -> 3", "(height {3 {0} {6}}) -> 2", "(height {6 {8} {9 {8 {3} {4}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {7 {6 {0}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {2 {2}}) -> 2", "(height {7}) -> 1"]}
{"time": 0.188508, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {0} {5}}) -> 2", "(height {}) -> 0", "(height {1}) -> 1", "(height {9}) -> 1", "(height {1}) -> 1", "(height {2 {9 {0 {7}} {6}}}) -> 4", "(height {2 {2 {6}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {8 {8} {2 {5}}}) -> 3"]}
{"time": 0.231192, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {7 {5} {5}} {2 {9} {4}}}) -> 3", "(height {5}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {1 {8} {7}}}) -> 3", "(height {8 {5}}) -> 2", "(height {2}) -> 1", "(height {}) -> 0", "(height {8}) -> 1", "(height {8}) -> 1", "(height {}) -> 0"]}
{"time": 0.208334, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {}) -> 0", "(height {2 {0}}) -> 2", "(height {0}) -> 1", "(height {3 {8}}) -> 2", "(height {5 {5} {0}}) -> 2", "(height {7 {6} {9}}) -> 2", "(height {4 {8 {5} {3}} {6}}) -> 3", "(height {}) -> 0", "(height {0}) -> 1", "(height {7}) -> 1"]}
{"time": 0.207792, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {0 {0 {0}}}) -> 3", "(height {}) -> 0", "(height {8}) -> 1", "(height {2 {7 {2} {6}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {7 {5}}) -> 2", "(height {9 {5}}) -> 2", "(height {}) -> 0", "(height {9 {3 {3} {8 {0} {4}}}}) -> 4"]}
{"time": 0.199943, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1 {6}}) -> 2", "(height {}) -> 0", "(height {1 {5} {7}}) -> 2", "(height {1}) -> 1", "(height {3}) -> 1", "(height {3 {3 {9} {5 {0} {4}}} {8 {9} {8 {0}}}}) -> 4", "(height {4 {3 {4}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1"]}
{"time": 0.168052, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {4} {2}}) -> 2", "(height {5 {1}}) -> 2", "(height {1}) -> 1", "(height {}) -> 0", "(height {4}) -> 1", "(height {}) -> 0", "(height {6 {1}}) -> 2", "(height {}) -> 0", "(height {3 {4} {9}}) -> 2", "(height {0 {1 {5} {7}} {2}}) -> 3", "(height {9 {1} {6}}) -> 2"]}
{"time": 0.208842, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {2}) -> 1", "(height {}) -> 0", "(height {4}) -> 1", "(height {7}) -> 1", "(height {1 {4}}) -> 2", "(height {3 {9} {2 {9 {6}} {5}}}) -> 4", "(height {3}) -> 1", "(height {5 {7 {8} {1}} {4 {6}}}) -> 3", "(height {3 {3} {4}}) -> 2"]}
{"time": 0.222352, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {9}) -> 1", "(height {6}) -> 1", "(height {1}) -> 1", "(height {6 {5 {3} {8}}}) -> 3", "(height {9 {3 {2} {1}} {4}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {5 {4} {5}}) -> 2", "(height {9 {7} {4 {7} {6}}}) -> 3", "(height {6 {5}}) -> 2"]}
{"time": 0.188258, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {7 {4}} {8 {8}}}) -> 3", "(height {2}) -> 1", "(height {1 {2 {8}}}) -> 3", "(height {9 {2} {4 {4} {7 {0}}}}) -> 4", "(height {}) -> 0", "(height {6}) -> 1", "(height {7}) -> 1", "(height {}) -> 0", "(height {9 {9 {8 {6}}}}) -> 4", "(height {1}) -> 1", "(height {6 {7} {1}}) -> 2"]}
{"time": 0.208995, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1", "(height {5}) -> 1", "(height {3 {8 {1} {9}} {4 {4}}}) -> 3", "(height {0 {0 {8}}}) -> 3", "(height {8 {2 {0}}}) -> 3", "(height {4}) -> 1", "(height {2}) -> 1", "(height {0}) -> 1", "(height {6}) -> 1", "(height {9 {5} {9 {0}}}) -> 3"]}
{"time": 0.217563, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {1 {3 {7}}}}) -> 4", "(height {7}) -> 1", "(height {0}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {2 {0}}) -> 2", "(height {5 {0}}) -> 2", "(height {7 {3 {2}} {3 {5 {1} {1}} {6}}}) -> 4", "(height {7 {4} {6}}) -> 2"]}
{"time": 0.208602, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5 {4} {2}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {8 {8} {2}}) -> 2", "(height {5 {8 {3} {5}}}) -> 3", "(height {7 {3}}) -> 2", "(height {8 {5}}) -> 2", "(height {8 {3} {6}}) -> 2", "(height {6 {1}}) -> 2", "(height {}) -> 0", "(height {0}) -> 1"]}
{"time": 0.213302, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {8 {6 {3 {4}}} {8 {0 {7} {8}} {6 {8}}}}) -> 4", "(height {1}) -> 1", "(height {3 {5 {8} {8}}}) -> 3", "(height {6 {3} {4}}) -> 2", "(height {4 {5} {9 {9}}}) -> 3", "(height {}) -> 0", "(height {5 {0} {7 {3}}}) -> 3", "(height {}) -> 0", "(height {6 {9} {8 {1 {9}} {5}}}) -> 4", "(height {9}) -> 1"]}
{"time": 0.238298, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1}) -> 1", "(height {9}) -> 1", "(height {5 {6 {9}} {2}}) -> 3", "(height {}) -> 0", "(height {8 {7} {7}}) -> 2", "(height {2}) -> 1", "(height {0 {8}}) -> 2", "(height {}) -> 0", "(height {6 {4 {3}} {1 {7} {5}}}) -> 3", "(height {6 {9 {0}} {2 {7} {0}}}) -> 3"]}
{"time": 0.221472, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {2 {4 {9} {6}}}}) -> 4", "(height {0 {3 {8} {7}} {6 {5}}}) -> 3", "(height {2 {2}}) -> 2", "(height {3}) -> 1", "(height {5 {3 {0 {2}}}}) -> 4", "(height {}) -> 0", "(height {9 {3 {1} {5 {2} {5}}} {3 {9}}}) -> 4", "(height {4 {0 {3 {3} {4}} {2 {8}}} {3 {4} {8 {1}}}}) -> 4", "(height {5}) -> 1", "(height {9}) -> 1", "(height {}) -> 0"]}
{"time": 0.195392, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0", "(height {5 {4 {8} {0}} {3}}) -> 3", "(height {8 {4 {3} {0}}}) -> 3", "(height {9 {7 {1} {0}} {9 {4 {6} {3}}}}) -> 4", "(height {9 {5 {9}} {9 {7}}}) -> 3", "(height {1}) -> 1", "(height {0 {0} {8}}) -> 2", "(height {2}) -> 1", "(height {4 {0 {0}} {3 {8}}}) -> 3", "(height {}) -> 0"]}
{"time": 0.210671, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3 {5 {3}}}) -> 3", "(height {2 {3 {8 {7} {1}}} {0}}) -> 4", "(height {0 {2 {0 {4} {7}} {8 {3}}}}) -> 4", "(height {9 {3} {3}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1", "(height {6 {9} {5 {7}}}) -> 3", "(height {5 {9}}) -> 2", "(height {}) -> 0"]}
{"time": 0.210171, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {9 {5}}) -> 2", "(height {}) -> 0", "(height {6 {8 {6}} {0 {7}}}) -> 3", "(height {4}) -> 1", "(height {3}) -> 1", "(height {}) -> 0", "(height {7}) -> 1", "(height {7 {5 {0}}}) -> 3", "(height {8 {5 {4} {0}} {9 {2}}}) -> 3", "(height {}) -> 0"]}
{"time": 0.225397, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5}) -> 1", "(height {}) -> 0", "(height {0 {8} {5 {0 {8}}}}) -> 4", "(height {3 {2} {4}}) -> 2", "(height {2}) -> 1", "(height {0}) -> 1", "(height {}) -> 0", "(height {2 {1 {4}}}) -> 3", "(height {6}) -> 1", "(height {1 {2}}) -> 2", "(height {}) -> 0"]}
{"time": 0.218324, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {7 {1}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {1 {4} {8}}}) -> 3", "(height {5 {5}}) -> 2", "(height {}) -> 0", "(height {1}) -> 1", "(height {7}) -> 1", "(height {6 {9} {0}}) -> 2", "(height {}) -> 0", "(height {5 {6 {6}} {8 {6} {0}}}) -> 3"]}
{"time": 0.174914, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {6} {3}}) -> 2", "(height {0 {2}}) -> 2", "(height {}) -> 0", "(height {8 {5}}) -> 2", "(height {1}) -> 1", "(height {9 {0}}) -> 2", "(height {3 {7}}) -> 2", "(height {6}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.214323, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {5 {4} {9}} {2 {9} {6}}}) -> 3", "(height {}) -> 0", "(height {6 {2 {6 {9} {1}}}}) -> 4", "(height {1}) -> 1", "(height {8 {1 {1} {4}} {3}}) -> 3", "(height {0 {3 {4}} {1 {6} {0}}}) -> 3", "(height {}) -> 0", "(height {1}) -> 1", "(height {2 {9 {1}}}) -> 3", "(height {9 {9 {6 {7} {3}} {7}}}) -> 4", "(height {9 {5} {5}}) -> 2"]}
{"time": 0.195479, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {1}}) -> 2", "(height {9 {9}}) -> 2", "(height {6}) -> 1", "(height {}) -> 0", "(height {4 {1} {8 {2}}}) -> 3", "(height {8 {8 {7}} {8 {0} {0}}}) -> 3", "(height {}) -> 0", "(height {7 {9}}) -> 2", "(height {4 {9} {0 {8}}}) -> 3", "(height {0 {9 {0}} {8 {7} {3}}}) -> 3", "(height {5 {8 {9} {0}}}) -> 3"]}
{"time": 0.21312, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {2 {0 {5} {5}} {3 {9}}} {5}}) -> 4", "(height {8}) -> 1", "(height {4 {9 {1 {0}}} {1 {6}}}) -> 4", "(height {1 {1}}) -> 2", "(height {8 {3 {7 {4} {0}}} {7 {5 {9} {9}} {4}}}) -> 4", "(height {}) -> 0", "(height {8}) -> 1", "(height {7 {0 {8} {0}} {7 {5} {8}}}) -> 3", "(height {5}) -> 1", "(height {7 {7} {8}}) -> 2", "(height {8 {2 {3 {6} {0}} {2}} {7 {6 {0}} {9}}}) -> 4"]}
{"time": 0.232337, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {2}}) -> 2", "(height {4 {8} {7}}) -> 2", "(height {3 {0}}) -> 2", "(height {}) -> 0", "(height {8 {5 {1 {0}}}}) -> 4", "(height {}) -> 0", "(height {1 {0} {5}}) -> 2", "(height {5 {3} {6}}) -> 2", "(height {0}) -> 1", "(height {2 {1} {2}}) -> 2", "(height {2 {1} {5}}) -> 2"]}
{"time": 0.182498, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {3}}) -> 2", "(height {1}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {1 {6 {9} {2 {0}}} {9 {5} {4 {6}}}}) -> 4", "(height {}) -> 0", "(height {5 {4 {8}}}) -> 3", "(height {8}) -> 1"]}
{"time": 0.203821, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8}) -> 1", "(height {8}) -> 1", "(height {8 {1}}) -> 2", "(height {8 {1 {4 {4} {5}}} {1}}) -> 4", "(height {2 {0} {1 {2 {3}}}}) -> 4", "(height {5 {4 {3 {3} {5}} {0}} {0 {3} {1}}}) -> 4", "(height {0 {9 {3}} {4}}) -> 3", "(height {9 {5} {1}}) -> 2", "(height {6 {5 {6}}}) -> 3", "(height {5}) -> 1", "(height {3 {1 {8}}}) -> 3"]}
{"time": 0.182475, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {}) -> 0", "(height {4 {5} {0}}) -> 2", "(height {1 {2}}) -> 2", "(height {1 {3 {4}}}) -> 3", "(height {0}) -> 1", "(height {2 {3 {2} {5}}}) -> 3", "(height {0 {4} {3}}) -> 2", "(height {1 {5}}) -> 2", "(height {8 {5 {0} {8}} {4 {9} {1}}}) -> 3", "(height {8}) -> 1"]}
{"time": 0.251659, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1", "(height {7 {2 {8 {4} {5}} {7 {8}}} {3 {2 {6}} {7 {8}}}}) -> 4", "(height {0 {4 {8} {8}} {6 {1}}}) -> 3", "(height {2 {2 {6 {3} {0}}} {5 {1 {6}} {7}}}) -> 4", "(height {1 {4} {8}}) -> 2", "(height {3 {5 {0}} {7}}) -> 3", "(height {}) -> 0", "(height {2 {3 {0}} {0 {0}}}) -> 3", "(height {3 {1} {3}}) -> 2", "(height {0 {0}}) -> 2"]}
{"time": 0.222147, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {2 {0 {7} {9}}}}) -> 4", "(height {5}) -> 1", "(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0", "(height {0 {9}}) -> 2", "(height {2 {5} {7}}) -> 2", "(height {7 {2}}) -> 2", "(height {1 {1} {9}}) -> 2", "(height {4 {5}}) -> 2", "(height {5}) -> 1"]}
{"time": 0.231278, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {}) -> 0", "(height {6 {0 {8 {1} {3}}}}) -> 4", "(height {6}) -> 1", "(height {0 {4} {3}}) -> 2", "(height {1 {1}}) -> 2", "(height {8 {4 {0} {2}}}) -> 3", "(height {}) -> 0", "(height {1 {3 {0 {6}} {7}} {6 {4 {6}}}}) -> 4", "(height {}) -> 0", "(height {7}) -> 1"]}
{"time": 0.22085, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {3 {1}}) -> 2", "(height {}) -> 0", "(height {0 {4 {5} {5}}}) -> 3", "(height {9}) -> 1", "(height {7 {9 {9} {6}} {2 {8} {9}}}) -> 3", "(height {1 {5}}) -> 2", "(height {}) -> 0"]}
{"time": 0.224726, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {1}) -> 1", "(height {}) -> 0", "(height {2}) -> 1", "(height {4 {6 {4} {0}} {0 {7} {2}}}) -> 3", "(height {0 {6 {3}} {2}}) -> 3", "(height {7}) -> 1", "(height {6}) -> 1", "(height {2}) -> 1", "(height {8}) -> 1", "(height {0 {0 {5}} {1 {2} {4}}}) -> 3"]}
{"time": 0.208098, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {8}) -> 1", "(height {}) -> 0", "(height {6 {5 {5}} {9 {2} {6}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {6 {2}}) -> 2", "(height {}) -> 0", "(height {3 {7}}) -> 2", "(height {6 {2 {4} {6}} {2 {0}}}) -> 3", "(height {7 {0}}) -> 2"]}
{"time": 0.189818, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {7 {5} {4}}) -> 2", "(height {0 {7} {9}}) -> 2", "(height {4 {9} {7}}) -> 2", "(height {1 {2}}) -> 2", "(height {0 {1 {1} {1}}}) -> 3", "(height {9}) -> 1", "(height {}) -> 0", "(height {6 {0} {5}}) -> 2", "(height {}) -> 0"]}
{"time": 0.191121, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4}) -> 1", "(height {6 {4 {6}} {9 {4}}}) -> 3", "(height {8 {6}}) -> 2", "(height {2 {7 {6} {0}} {4 {4}}}) -> 3", "(height {}) -> 0", "(height {0 {1}}) -> 2", "(height {1}) -> 1", "(height {3 {7 {3 {2}}}}) -> 4", "(height {}) -> 0", "(height {7 {4} {3 {0} {8}}}) -> 3", "(height {3}) -> 1"]}
{"time": 0.22844, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {8 {8} {0}} {3 {5} {4}}}) -> 3", "(height {4}) -> 1", "(height {}) -> 0", "(height {7 {1 {2 {9}} {8 {9} {3}}} {2}}) -> 4", "(height {2 {4 {0 {7} {6}}}}) -> 4", "(height {2 {4} {1}}) -> 2", "(height {}) -> 0", "(height {6 {2 {5 {2} {6}}}}) -> 4", "(height {4 {7}}) -> 2", "(height {7 {6} {4}}) -> 2", "(height {5 {9 {6}}}) -> 3"]}
{"time": 0.210846, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {4} {2}}) -> 2", "(height {}) -> 0", "(height {9 {1 {3 {2} {9}} {9 {0}}} {6 {7} {1}}}) -> 4", "(height {}) -> 0", "(height {7 {6 {6 {2}} {7 {7}}}}) -> 4", "(height {7}) -> 1", "(height {7 {8 {0 {2} {1}}}}) -> 4"]}
{"time": 0.191652, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1 {2 {5 {8} {5}}} {9 {1 {5} {3}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {}) -> 0", "(height {0 {9}}) -> 2", "(height {4 {2} {8}}) -> 2", "(height {8}) -> 1", "(height {4 {5 {9}}}) -> 3"]}
{"time": 0.203099, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {0} {3}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {7 {6}}) -> 2", "(height {5 {3} {5}}) -> 2", "(height {7 {3 {6} {9}}}) -> 3", "(height {9 {5 {2 {7}} {1 {9}}} {9}}) -> 4", "(height {3 {6} {9}}) -> 2", "(height {}) -> 0", "(height {6}) -> 1", "(height {3}) -> 1"]}
{"time": 0.206115, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {4 {6} {1 {8} {9}}} {2 {7 {4}}}}) -> 4", "(height {9 {9}}) -> 2", "(height {6 {1}}) -> 2", "(height {4}) -> 1", "(height {8 {4 {7 {7} {9}}}}) -> 4", "(height {3 {1 {5 {1}} {7 {6}}}}) -> 4", "(height {1 {1}}) -> 2", "(height {8 {8 {1}} {0}}) -> 3", "(height {9 {7 {9} {9}}}) -> 3", "(height {2 {7} {8}}) -> 2", "(height {1 {7}}) -> 2"]}
{"time": 0.238073, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4}) -> 1", "(height {}) -> 0", "(height {9 {7}}) -> 2", "(height {0}) -> 1", "(height {1 {7 {7} {4}}}) -> 3", "(height {4 {1} {4}}) -> 2", "(height {7 {8 {5} {0}} {5 {9} {2}}}) -> 3", "(height {5 {8 {4 {6}}} {0}}) -> 4", "(height {}) -> 0", "(height {3}) -> 1", "(height {0 {0} {4}}) -> 2"]}
{"time": 0.248119, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {1 {1 {6}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {6 {7 {2} {9}} {3}} {2 {0 {0} {3}} {0 {3} {3}}}}) -> 4", "(height {9}) -> 1", "(height {0}) -> 1", "(height {7 {9} {8 {9 {6}} {0}}}) -> 4", "(height {2 {6 {6}}}) -> 3", "(height {5 {3}}) -> 2", "(height {7}) -> 1"]}
{"time": 0.219112, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4}) -> 1", "(height {}) -> 0", "(height {9}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {6 {1}}) -> 2", "(height {1 {3 {0 {9}}}}) -> 4", "(height {0 {6}}) -> 2", "(height {3 {8} {4}}) -> 2", "(height {6 {4 {6} {9}} {4 {4} {2}}}) -> 3", "(height {8 {7} {8}}) -> 2"]}
{"time": 0.207778, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {4}}) -> 2", "(height {6 {5}}) -> 2", "(height {7}) -> 1", "(height {}) -> 0", "(height {4 {7} {8}}) -> 2", "(height {8 {6} {1}}) -> 2", "(height {}) -> 0", "(height {0}) -> 1", "(height {4 {7 {5} {4}} {0 {1} {6}}}) -> 3", "(height {8 {2 {6} {4}} {0 {9 {1}} {7 {7} {4}}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.233991, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {2} {8 {7}}}) -> 3", "(height {2}) -> 1", "(height {7}) -> 1", "(height {6 {6} {6 {8 {9}} {4}}}) -> 4", "(height {3}) -> 1", "(height {4 {6 {1} {2}} {6 {1}}}) -> 3", "(height {4 {5}}) -> 2", "(height {3 {1 {2} {0}}}) -> 3", "(height {8 {2 {1 {1}} {8 {0}}} {2}}) -> 4", "(height {5}) -> 1"]}
{"time": 0.200974, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {1} {3}}) -> 2", "(height {9 {1}}) -> 2", "(height {}) -> 0", "(height {7 {3}}) -> 2", "(height {2 {1 {4}} {5 {2} {6}}}) -> 3", "(height {}) -> 0", "(height {9 {5 {1} {4 {8} {4}}} {0 {1 {6}}}}) -> 4", "(height {3 {3 {7}} {1 {4}}}) -> 3", "(height {4 {4}}) -> 2", "(height {2}) -> 1", "(height {9}) -> 1"]}
{"time": 0.230131, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {4 {8}} {2 {0} {5}}}) -> 3", "(height {3}) -> 1", "(height {2 {6 {2} {9 {6}}} {3}}) -> 4", "(height {7}) -> 1", "(height {2 {6}}) -> 2", "(height {0 {3} {8 {6 {8}}}}) -> 4", "(height {7 {5 {4 {8} {5}} {3}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {8 {8}}) -> 2", "(height {2 {9} {5}}) -> 2"]}
{"time": 0.21519, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {8}}) -> 2", "(height {9 {2} {6}}) -> 2", "(height {}) -> 0", "(height {1 {6 {6 {7} {8}} {5 {2}}}}) -> 4", "(height {2 {0 {4} {1}} {1 {5}}}) -> 3", "(height {8 {2 {1 {3}} {1}} {0 {8 {4}}}}) -> 4", "(height {9}) -> 1", "(height {9 {8 {3 {7}} {7 {8}}} {7 {4 {0} {5}}}}) -> 4", "(height {}) -> 0", "(height {9}) -> 1", "(height {1}) -> 1"]}
{"time": 0.208435, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {2 {9 {1}} {5 {5} {1}}} {4}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {8 {6 {5}} {4 {1}}}) -> 3", "(height {2 {5}}) -> 2", "(height {0}) -> 1", "(height {2 {8} {1}}) -> 2", "(height {9}) -> 1", "(height {1 {9 {4 {7} {0}} {1}}}) -> 4", "(height {5 {0}}) -> 2", "(height {}) -> 0"]}
{"time": 0.217494, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0 {3}}) -> 2", "(height {5}) -> 1", "(height {}) -> 0", "(height {3}) -> 1", "(height {6 {4 {0}}}) -> 3", "(height {7 {8 {7} {1}} {3 {4}}}) -> 3", "(height {}) -> 0", "(height {7}) -> 1", "(height {3 {5}}) -> 2", "(height {3 {9} {7 {9} {5}}}) -> 3"]}
{"time": 0.256135, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {0 {7 {7} {2}}}}) -> 4", "(height {1 {4 {1} {3}}}) -> 3", "(height {3}) -> 1", "(height {5 {5 {9} {3 {1} {3}}}}) -> 4", "(height {6}) -> 1", "(height {2}) -> 1", "(height {9}) -> 1", "(height {2}) -> 1", "(height {1}) -> 1", "(height {3 {5 {2 {7}} {1 {7} {9}}} {7 {3 {5} {4}}}}) -> 4", "(height {1}) -> 1"]}
{"time": 0.199212, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {1} {4}}) -> 2", "(height {6}) -> 1", "(height {1 {8}}) -> 2", "(height {7}) -> 1", "(height {7 {6 {1}} {3 {7}}}) -> 3", "(height {0 {6}}) -> 2", "(height {0 {7}}) -> 2", "(height {5}) -> 1", "(height {5 {7 {0} {8}} {0 {2}}}) -> 3", "(height {5 {4}}) -> 2", "(height {3}) -> 1"]}
{"time": 0.18805, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {2 {9}}) -> 2", "(height {}) -> 0", "(height {4 {5}}) -> 2", "(height {7 {2} {9}}) -> 2", "(height {4 {9}}) -> 2", "(height {3}) -> 1", "(height {0 {4 {4}}}) -> 3", "(height {7 {1 {7} {5 {9} {2}}} {5}}) -> 4", "(height {1 {3 {4} {9}} {9 {9}}}) -> 3"]}
{"time": 0.187713, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {0} {7}}) -> 2", "(height {7 {2} {2}}) -> 2", "(height {1 {5 {3}}}) -> 3", "(height {}) -> 0", "(height {8 {8} {7}}) -> 2", "(height {5 {4} {1}}) -> 2", "(height {1 {9 {7}} {4 {9}}}) -> 3", "(height {}) -> 0", "(height {0 {9}}) -> 2", "(height {0}) -> 1", "(height {}) -> 0"]}
{"time": 0.208555, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0 {1 {4 {1}}}}) -> 4", "(height {}) -> 0", "(height {4 {5}}) -> 2", "(height {2 {1}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {}) -> 0", "(height {2 {7 {1}}}) -> 3", "(height {9 {6 {4} {1}}}) -> 3", "(height {4}) -> 1"]}
{"time": 0.234531, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {2 {1 {0 {6} {5}} {2}}}) -> 4", "(height {1 {1 {9} {0 {8}}} {4 {8}}}) -> 4", "(height {}) -> 0", "(height {5 {6 {9}}}) -> 3", "(height {}) -> 0", "(height {3}) -> 1", "(height {8 {1 {6}} {3}}) -> 3", "(height {6 {0} {1 {5 {6} {6}}}}) -> 4", "(height {0 {0} {7}}) -> 2", "(height {5}) -> 1"]}
{"time": 0.195846, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {9 {4}}}) -> 3", "(height {}) -> 0", "(height {3 {4 {3 {3} {4}} {0}}}) -> 4", "(height {6 {2 {1}}}) -> 3", "(height {1 {1} {6}}) -> 2", "(height {}) -> 0", "(height {6 {2 {3}} {8}}) -> 3", "(height {8}) -> 1", "(height {3 {1 {7}} {3}}) -> 3", "(height {2}) -> 1", "(height {}) -> 0"]}
{"time": 0.213571, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0", "(height {1}) -> 1", "(height {4 {4 {6}}}) -> 3", "(height {5 {8 {3}}}) -> 3", "(height {4 {3} {2}}) -> 2", "(height {9 {6}}) -> 2", "(height {9 {7 {7 {3}}}}) -> 4", "(height {2 {9} {8}}) -> 2", "(height {}) -> 0", "(height {9 {6}}) -> 2"]}
{"time": 0.194087, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {4}}) -> 2", "(height {4 {5} {7 {2 {5} {8}} {7 {5}}}}) -> 4", "(height {}) -> 0", "(height {1 {9}}) -> 2", "(height {7 {9} {5}}) -> 2", "(height {}) -> 0", "(height {6 {5} {2}}) -> 2", "(height {6 {4} {6}}) -> 2", "(height {5 {9 {7 {5}} {1 {4}}} {4 {3 {8} {2}}}}) -> 4", "(height {}) -> 0", "(height {8 {4} {6 {7} {3}}}) -> 3"]}
{"time": 0.191282, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {0}}) -> 2", "(height {2 {4 {5} {6}}}) -> 3", "(height {}) -> 0", "(height {5 {8 {7} {5 {7} {0}}} {2}}) -> 4", "(height {6}) -> 1", "(height {5 {2}}) -> 2", "(height {5 {7}}) -> 2", "(height {2 {3} {0}}) -> 2", "(height {6 {3 {6 {6}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.201269, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {1 {3} {0}}) -> 2", "(height {6}) -> 1", "(height {8}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {1} {9}}) -> 2", "(height {5 {4 {7}} {4 {9} {0}}}) -> 3", "(height {5}) -> 1", "(height {}) -> 0", "(height {7 {3} {0}}) -> 2"]}
{"time": 0.234531, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {6 {7} {1}} {2}}) -> 3", "(height {3 {2 {4 {2} {8}} {2 {0}}} {4 {4}}}) -> 4", "(height {}) -> 0", "(height {1 {0} {0}}) -> 2", "(height {6 {1} {8}}) -> 2", "(height {8 {9} {5 {7}}}) -> 3", "(height {6 {7} {9}}) -> 2", "(height {7 {2} {4 {1} {8}}}) -> 3", "(height {0 {8}}) -> 2", "(height {3}) -> 1", "(height {4}) -> 1"]}
{"time": 0.227966, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {3}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1", "(height {9 {8}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {7 {3 {0 {5}} {1}}}) -> 4", "(height {7 {4} {1}}) -> 2", "(height {8}) -> 1"]}
{"time": 0.209503, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {7 {3 {0} {7}} {5}}) -> 3", "(height {}) -> 0", "(height {4 {8 {6 {5}}} {1 {7 {2} {4}} {4}}}) -> 4", "(height {4 {4} {7}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {6 {8 {2}} {3 {8}}}) -> 3", "(height {9 {7}}) -> 2", "(height {9 {5 {4 {8}} {6 {3} {2}}}}) -> 4", "(height {5 {4}}) -> 2"]}
{"time": 0.175332, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9}) -> 1", "(height {8 {4} {1}}) -> 2", "(height {6 {3 {0} {7}}}) -> 3", "(height {5 {5}}) -> 2", "(height {8 {9} {2 {4 {0}}}}) -> 4", "(height {0 {7 {6} {5}} {1 {9}}}) -> 3", "(height {}) -> 0", "(height {9 {2} {2}}) -> 2", "(height {6 {0 {1}}}) -> 3", "(height {}) -> 0", "(height {7 {6} {3}}) -> 2"]}
{"time": 0.204632, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {5}) -> 1", "(height {2 {5 {3}}}) -> 3", "(height {1 {6 {0}} {1 {8}}}) -> 3", "(height {0}) -> 1", "(height {2 {2 {6}} {4 {1} {6}}}) -> 3", "(height {4}) -> 1", "(height {8}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.195789, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {2 {3} {7}} {3}}) -> 3", "(height {0 {4} {0}}) -> 2", "(height {1 {7}}) -> 2", "(height {}) -> 0", "(height {2 {9}}) -> 2", "(height {}) -> 0", "(height {0}) -> 1", "(height {}) -> 0", "(height {3 {2 {7} {5 {4} {7}}}}) -> 4", "(height {9 {2} {2}}) -> 2", "(height {8 {6 {4}} {8 {8 {7}} {9 {9}}}}) -> 4"]}
{"time": 0.223401, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {8} {3}}) -> 2", "(height {7 {2} {1}}) -> 2", "(height {1 {1}}) -> 2", "(height {3}) -> 1", "(height {0 {8 {7 {8}} {9 {4}}}}) -> 4", "(height {7 {4 {6 {8} {8}}}}) -> 4", "(height {4}) -> 1", "(height {7 {6} {9}}) -> 2", "(height {1 {8 {3 {0} {7}}} {7 {9 {3} {8}} {7}}}) -> 4", "(height {0 {1}}) -> 2", "(height {}) -> 0"]}
{"time": 0.186891, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {0 {1 {7} {8}} {8}}}) -> 4", "(height {4 {5 {4} {1 {6} {7}}}}) -> 4", "(height {7}) -> 1", "(height {6}) -> 1", "(height {7 {8 {9 {2}}}}) -> 4", "(height {5}) -> 1", "(height {7 {5 {7 {2} {5}} {4 {7}}}}) -> 4", "(height {2}) -> 1", "(height {6 {7 {7 {9} {6}} {4 {2} {8}}}}) -> 4", "(height {0 {3 {1 {5} {5}}}}) -> 4", "(height {7}) -> 1"]}
{"time": 0.203488, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {1 {4 {1} {9}}}) -> 3", "(height {7 {9} {3 {7 {0}} {1 {8}}}}) -> 4", "(height {5 {1 {7}}}) -> 3", "(height {3 {6 {0}}}) -> 3", "(height {6 {6 {4} {8 {0} {2}}} {8 {9}}}) -> 4", "(height {2}) -> 1", "(height {8 {7}}) -> 2", "(height {9 {3 {1}} {9 {8} {5}}}) -> 3"]}
{"time": 0.206414, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {9 {8}}}) -> 3", "(height {7}) -> 1", "(height {}) -> 0", "(height {5}) -> 1", "(height {9}) -> 1", "(height {6 {9 {7 {1}} {8}} {0 {6 {9} {7}}}}) -> 4", "(height {9 {7}}) -> 2", "(height {1}) -> 1", "(height {}) -> 0", "(height {7 {3} {5 {5}}}) -> 3", "(height {7 {5}}) -> 2"]}
{"time": 0.184999, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {3 {0 {8}}} {0 {0} {2}}}) -> 4", "(height {}) -> 0", "(height {7}) -> 1", "(height {2}) -> 1", "(height {1 {7}}) -> 2", "(height {5}) -> 1", "(height {2 {3}}) -> 2", "(height {}) -> 0", "(height {8 {3 {9}}}) -> 3", "(height {}) -> 0", "(height {6}) -> 1"]}
{"time": 0.167402, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5}) -> 1", "(height {3 {5 {2}} {1 {4} {5}}}) -> 3", "(height {}) -> 0", "(height {5 {6 {8 {5} {8}} {1}}}) -> 4", "(height {0 {5}}) -> 2", "(height {6 {3 {5}} {4 {4 {5}}}}) -> 4", "(height {6 {8}}) -> 2", "(height {}) -> 0", "(height {8 {8 {0} {3 {5} {0}}}}) -> 4", "(height {6 {2 {5} {0}} {6 {5} {2}}}) -> 3", "(height {7 {5}}) -> 2"]}
{"time": 0.180014, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4}) -> 1", "(height {7 {6 {8 {3}} {3 {6}}} {6 {4} {8}}}) -> 4", "(height {3}) -> 1", "(height {}) -> 0", "(height {2 {8} {6}}) -> 2", "(height {}) -> 0", "(height {1}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {7}}) -> 2", "(height {}) -> 0"]}
{"time": 0.205429, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1 {4}}) -> 2", "(height {8 {9 {2} {0}}}) -> 3", "(height {2 {9} {4 {2}}}) -> 3", "(height {9 {6 {5} {7 {9} {2}}} {7}}) -> 4", "(height {1}) -> 1", "(height {}) -> 0", "(height {6 {6 {0 {5} {8}}} {9}}) -> 4", "(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0"]}
{"time": 0.199299, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {1 {7} {4}} {8 {9}}}) -> 3", "(height {}) -> 0", "(height {2 {3 {2}} {3 {5 {5} {4}} {4}}}) -> 4", "(height {4 {7} {1 {8 {4} {5}} {6 {8}}}}) -> 4", "(height {0 {9 {8} {5}} {9 {4}}}) -> 3", "(height {5}) -> 1", "(height {2 {9} {4 {5}}}) -> 3", "(height {2}) -> 1", "(height {0}) -> 1", "(height {7}) -> 1", "(height {9}) -> 1"]}
{"time": 0.201029, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {9 {2} {3}}}) -> 3", "(height {0 {6 {1} {7 {1} {5}}}}) -> 4", "(height {6 {6 {5 {1}} {9 {6}}} {7}}) -> 4", "(height {}) -> 0", "(height {4 {4}}) -> 2", "(height {8}) -> 1", "(height {8 {7 {8}}}) -> 3", "(height {4 {8 {2}} {9}}) -> 3", "(height {}) -> 0", "(height {9 {5}}) -> 2", "(height {1}) -> 1"]}
{"time": 0.188891, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {0 {9 {1} {8}} {9 {7}}} {3 {8} {8}}}) -> 4", "(height {}) -> 0", "(height {0 {1}}) -> 2", "(height {0}) -> 1", "(height {2 {9}}) -> 2", "(height {5}) -> 1", "(height {5 {8}}) -> 2", "(height {5 {2 {6 {2}} {7 {6} {1}}} {3}}) -> 4", "(height {7}) -> 1", "(height {1 {1} {1}}) -> 2", "(height {2 {8 {4}}}) -> 3"]}
{"time": 0.181529, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {0}}) -> 2", "(height {0 {9 {5 {3}}}}) -> 4", "(height {3}) -> 1", "(height {7}) -> 1", "(height {2 {0 {1} {8}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {5 {6}}) -> 2", "(height {6}) -> 1", "(height {3}) -> 1", "(height {0 {9}}) -> 2"]}
{"time": 0.199043, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {1 {5 {7}}}) -> 3", "(height {1}) -> 1", "(height {0 {9}}) -> 2", "(height {6 {4} {1}}) -> 2", "(height {6 {2 {2}}}) -> 3", "(height {6 {9 {8} {0}} {8 {2} {7}}}) -> 3", "(height {4 {7 {9} {0}} {5}}) -> 3", "(height {4 {7}}) -> 2"]}
{"time": 0.159069, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {1 {5 {7}}}) -> 3", "(height {4 {7 {2} {1}}}) -> 3", "(height {2 {5} {8 {2 {2} {4}} {9}}}) -> 4", "(height {}) -> 0", "(height {9 {3}}) -> 2", "(height {4 {9 {5} {0}} {8 {0} {6}}}) -> 3", "(height {2}) -> 1", "(height {2 {9}}) -> 2", "(height {}) -> 0"]}
{"time": 0.224743, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0 {0}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {0}) -> 1", "(height {5 {9} {2}}) -> 2", "(height {3}) -> 1", "(height {5}) -> 1", "(height {9 {2} {6 {7 {3} {3}}}}) -> 4", "(height {9 {9} {9 {3}}}) -> 3"]}
{"time": 0.188349, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {2 {7 {7}} {9 {6}}}) -> 3", "(height {1 {0 {3} {6}}}) -> 3", "(height {3 {7 {9 {1} {8}} {2 {0} {3}}}}) -> 4", "(height {9 {3} {8}}) -> 2", "(height {5 {6 {0 {4} {3}}} {6 {7 {2} {6}} {9}}}) -> 4", "(height {5}) -> 1", "(height {}) -> 0", "(height {0 {1}}) -> 2", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.098833, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {1}) -> 1", "(height {}) -> 0", "(height {5 {8} {0}}) -> 2", "(height {}) -> 0", "(height {2 {4}}) -> 2", "(height {0 {4 {2} {9}}}) -> 3", "(height {5 {1 {6} {2}}}) -> 3", "(height {3 {9} {6}}) -> 2", "(height {2}) -> 1", "(height {}) -> 0"]}
{"time": 0.096987, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5 {8}}) -> 2", "(height {2 {5} {3}}) -> 2", "(height {8 {7}}) -> 2", "(height {3}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {5 {3} {3}}) -> 2", "(height {}) -> 0", "(height {3 {0}}) -> 2", "(height {6}) -> 1", "(height {}) -> 0"]}
{"time": 0.102333, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4 {1 {8}} {3}}) -> 3", "(height {6 {7 {4}}}) -> 3", "(height {4 {0 {0} {1 {7}}}}) -> 4", "(height {}) -> 0", "(height {9 {2 {5 {2} {4}}}}) -> 4", "(height {5 {7 {5 {0} {6}}}}) -> 4", "(height {8 {1} {3}}) -> 2", "(height {7 {5 {4}} {2 {3} {9}}}) -> 3", "(height {}) -> 0", "(height {4}) -> 1"]}
{"time": 0.097042, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {9 {7} {6}}) -> 2", "(height {8}) -> 1", "(height {7}) -> 1", "(height {9 {6 {7}} {9 {5} {4 {9}}}}) -> 4", "(height {2}) -> 1", "(height {4 {3}}) -> 2", "(height {}) -> 0", "(height {1 {9} {0}}) -> 2", "(height {3 {6}}) -> 2", "(height {1 {8} {5}}) -> 2"]}
