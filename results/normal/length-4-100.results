{"name": "length", "examples": ["(length []) -> 0", "(length [5 8 5]) -> 3", "(length [1 1]) -> 2"], "time": 0.031693, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [2 7 4 4]) -> 4", "(length [9]) -> 1"], "time": 0.046138, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4 6 1 4 3]) -> 5", "(length [7 8]) -> 2"], "time": 0.037386, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length []) -> 0"], "time": 0.000475, "solution": "(let length (let a (lambda (b) 0) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [6]) -> 1", "(length [7 0 2 3]) -> 4"], "time": 0.044822, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [8 5 9 2 2]) -> 5", "(length [7]) -> 1"], "time": 0.042761, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [9 7 9]) -> 3", "(length [5 0]) -> 2"], "time": 0.03244, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [6 4 5 2]) -> 4", "(length [7 8 0 9]) -> 4"], "time": 0.041947, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [1 9 4 9 0]) -> 5"], "time": 0.042769, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [7 1]) -> 2", "(length [2 1 6]) -> 3"], "time": 0.032129, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4]) -> 1", "(length [8 9 4]) -> 3"], "time": 0.051342, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [5 5 8 6]) -> 4"], "time": 0.034071, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [0 7 9 3 2]) -> 5"], "time": 0.051673, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [9 7 8 5]) -> 4", "(length [6 6 3]) -> 3"], "time": 0.054742, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [7 4 7 5]) -> 4", "(length [9 0 4 9]) -> 4"], "time": 0.042256, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 8 1 8]) -> 4", "(length [1]) -> 1"], "time": 0.04456, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [7]) -> 1", "(length [4 5]) -> 2"], "time": 0.034927, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4]) -> 1", "(length [6 6 5]) -> 3"], "time": 0.030125, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [6 5]) -> 2", "(length [5 1]) -> 2"], "time": 0.030265, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 1)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 7 3]) -> 3", "(length [3]) -> 1"], "time": 0.044571, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 2]) -> 2", "(length [1 7]) -> 2"], "time": 0.045667, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 1)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0]) -> 1", "(length [4 1 1 0 2]) -> 5"], "time": 0.047666, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [9 0 1 5 3]) -> 5", "(length [9 4]) -> 2"], "time": 0.032237, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [7 3 2]) -> 3", "(length [9]) -> 1"], "time": 0.030133, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4 2 4 4 3]) -> 5", "(length [0 2 6]) -> 3"], "time": 0.044629, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [2 6 5 5]) -> 4", "(length [5 3]) -> 2"], "time": 0.037173, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4 6 1]) -> 3", "(length [4 2 2 6]) -> 4"], "time": 0.046952, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 5 3 7]) -> 4", "(length [4 9 3]) -> 3"], "time": 0.04798, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 4 6]) -> 3", "(length [5]) -> 1"], "time": 0.034396, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [6 9]) -> 2", "(length [6 0 0 9]) -> 4"], "time": 0.053015, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 4]) -> 2", "(length [8 4 5 6 4]) -> 5"], "time": 0.031539, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [5 7 8]) -> 3"], "time": 0.040588, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [5 8 3]) -> 3", "(length [0 9 6]) -> 3"], "time": 0.041155, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4 6 9 3 4]) -> 5", "(length [4 5 6]) -> 3"], "time": 0.047562, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [2 5 2]) -> 3", "(length [5 3 1]) -> 3"], "time": 0.036334, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 8 0 3 6]) -> 5", "(length [3 0 3 4]) -> 4"], "time": 0.040109, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 6 5 8]) -> 4", "(length [6 8]) -> 2"], "time": 0.030667, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [4 5 0]) -> 3"], "time": 0.033827, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 2]) -> 2", "(length [0 2 0 3 7]) -> 5"], "time": 0.039709, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [6]) -> 1", "(length [5 1]) -> 2"], "time": 0.038592, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [0 9]) -> 2"], "time": 0.02966, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 1)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [8 1 0]) -> 3", "(length [2]) -> 1"], "time": 0.030586, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [4 6 6 0]) -> 4"], "time": 0.02459, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (car b)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 3 8 1]) -> 4", "(length [7 9]) -> 2"], "time": 0.032037, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [9 9 9 6]) -> 4", "(length [1 9]) -> 2"], "time": 0.033141, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 8 4 3]) -> 4", "(length [4 3 4]) -> 3"], "time": 0.035279, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 0 7 6 8]) -> 5", "(length [2 2 1]) -> 3"], "time": 0.047776, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 2 3 7 5]) -> 5", "(length [0 9 3 2]) -> 4"], "time": 0.044033, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [6 8 3 0]) -> 4"], "time": 0.050445, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4 6 1 1 4]) -> 5", "(length [9]) -> 1"], "time": 0.029666, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 0 9]) -> 3", "(length [2 4 2 9]) -> 4"], "time": 0.029539, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [2 4 8]) -> 3"], "time": 0.034858, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [5 9]) -> 2", "(length [8 1 5 2]) -> 4"], "time": 0.032016, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [5 9 6 5]) -> 4", "(length [9 8 0 4]) -> 4"], "time": 0.04407, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [7 9]) -> 2", "(length []) -> 0"], "time": 0.033037, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 1)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 5 6 5 0]) -> 5", "(length [9 5 1 5]) -> 4"], "time": 0.029824, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [6]) -> 1"], "time": 0.038141, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) 1) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [7 1 7 9]) -> 4", "(length [6]) -> 1"], "time": 0.046721, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [1 7]) -> 2", "(length [8 5 5]) -> 3"], "time": 0.035247, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [8 7 0 7]) -> 4", "(length [5 7 1]) -> 3"], "time": 0.046467, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3]) -> 1", "(length []) -> 0"], "time": 0.039449, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) 1) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [3 7 1]) -> 3"], "time": 0.041144, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (car b)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 1 8 8 1]) -> 5", "(length [1 1]) -> 2"], "time": 0.040766, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [1 2 7]) -> 3"], "time": 0.053469, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 9]) -> 2", "(length [2 8]) -> 2"], "time": 0.032974, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 1)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 2 7]) -> 3", "(length [5 6]) -> 2"], "time": 0.049151, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [4 0 0 1 6]) -> 5", "(length [5 5]) -> 2"], "time": 0.035351, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length []) -> 0"], "time": 0.000493, "solution": "(let length (let a (lambda (b) 0) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [5 1 8 5 1]) -> 5", "(length [0 7 6]) -> 3"], "time": 0.02991, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [9 6 1]) -> 3", "(length [9]) -> 1"], "time": 0.041488, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0 8 8 5 6]) -> 5", "(length [6 9 3 1]) -> 4"], "time": 0.050289, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length []) -> 0"], "time": 0.0005, "solution": "(let length (let a (lambda (b) 0) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [3 2 0 9]) -> 4", "(length [9 6 0 0 7]) -> 5"], "time": 0.039239, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length []) -> 0", "(length [8 0 5 2 8]) -> 5"], "time": 0.042058, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [0]) -> 1", "(length [1]) -> 1"], "time": 0.024133, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) 1) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [2 5]) -> 2", "(length [4 2 3 8 3]) -> 5"], "time": 0.029999, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) (+ 1 d)) 0)) _) _)"}
{"name": "length", "examples": ["(length []) -> 0", "(length [8]) -> 1", "(length []) -> 0"], "time": 0.041113, "solution": "(let length (let a (lambda (b) (foldl b (lambda (d c) 1) 0)) _) _)"}
