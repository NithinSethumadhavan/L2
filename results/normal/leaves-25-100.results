{"time": 0.857711, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5 {7 {6 {5} {4}}}}) -> [5 4]", "(leaves {7 {2} {2}}) -> [2 2]", "(leaves {8 {4 {3} {8}}}) -> [3 8]", "(leaves {4 {8}}) -> [8]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {3 {2 {0 {3}} {2 {5} {4}}}}) -> [3 5 4]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {4}}) -> [4]", "(leaves {3 {0} {0}}) -> [0 0]", "(leaves {6}) -> [6]", "(leaves {3 {4} {9}}) -> [4 9]", "(leaves {1 {5 {2}}}) -> [2]", "(leaves {3 {0 {9 {7} {2}} {1 {3} {6}}}}) -> [7 2 3 6]", "(leaves {5 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {3 {6}}) -> [6]", "(leaves {2}) -> [2]"], "name": "leaves"}
{"time": 0.885348, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {0 {0}} {8}}) -> [0 8]", "(leaves {7}) -> [7]", "(leaves {6}) -> [6]", "(leaves {2 {8}}) -> [8]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {1 {5 {7} {6}} {0 {8} {6}}}) -> [7 6 8 6]", "(leaves {9 {4 {3 {7}} {9}} {0 {4}}}) -> [7 9 4]", "(leaves {3 {6}}) -> [6]", "(leaves {7 {1 {4 {0}} {4 {5}}} {3 {5} {2 {2}}}}) -> [0 5 5 2]", "(leaves {2 {7 {1} {0}} {9 {8} {5}}}) -> [1 0 8 5]", "(leaves {3}) -> [3]", "(leaves {2 {4 {0} {7 {9} {2}}}}) -> [0 9 2]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {5 {9 {7}}}) -> [7]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {5 {6}}) -> [6]", "(leaves {9 {6 {3} {3}} {6}}) -> [3 3 6]", "(leaves {1 {3}}) -> [3]"], "name": "leaves"}
{"time": 0.863988, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {3 {0 {4 {0} {5}}} {4 {4}}}) -> [0 5 4]", "(leaves {7 {3}}) -> [3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {4} {1}}) -> [4 1]", "(leaves {8 {7 {9}} {0}}) -> [9 0]", "(leaves {}) -> []", "(leaves {3 {9 {2}} {3}}) -> [2 3]", "(leaves {9}) -> [9]", "(leaves {1 {3}}) -> [3]", "(leaves {7 {3} {0}}) -> [3 0]", "(leaves {0}) -> [0]", "(leaves {4 {1 {3} {3}}}) -> [3 3]", "(leaves {}) -> []", "(leaves {8 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {4 {7 {8}}}) -> [8]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {1 {3} {0}}) -> [3 0]", "(leaves {8 {2}}) -> [2]"], "name": "leaves"}
{"time": 0.856789, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2 {3} {1}}) -> [3 1]", "(leaves {6 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {3 {1} {5}}) -> [1 5]", "(leaves {2 {2} {0}}) -> [2 0]", "(leaves {}) -> []", "(leaves {4 {3} {3 {7} {5}}}) -> [3 7 5]", "(leaves {7}) -> [7]", "(leaves {7}) -> [7]", "(leaves {1 {6} {1}}) -> [6 1]", "(leaves {4 {3} {2}}) -> [3 2]", "(leaves {8 {4 {2 {3} {0}}}}) -> [3 0]", "(leaves {3 {3} {8}}) -> [3 8]", "(leaves {}) -> []", "(leaves {7 {7 {9 {1}}}}) -> [1]", "(leaves {9 {6}}) -> [6]", "(leaves {8 {6}}) -> [6]", "(leaves {8}) -> [8]", "(leaves {8 {3} {4}}) -> [3 4]", "(leaves {}) -> []", "(leaves {2 {8 {6}} {1}}) -> [6 1]", "(leaves {}) -> []", "(leaves {8}) -> [8]"], "name": "leaves"}
{"time": 0.827652, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {2 {4 {0} {6}} {8 {4}}}) -> [0 6 4]", "(leaves {8 {4} {9 {0 {7}}}}) -> [4 7]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {4 {2} {7 {2} {5}}}) -> [2 2 5]", "(leaves {9 {3 {1} {4}}}) -> [1 4]", "(leaves {5 {3} {1}}) -> [3 1]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {0 {8 {6} {6}}}) -> [6 6]", "(leaves {5}) -> [5]", "(leaves {1 {6 {4}} {8}}) -> [4 8]", "(leaves {3 {7} {9 {1}}}) -> [7 1]", "(leaves {1 {0 {8}}}) -> [8]", "(leaves {1 {8 {8} {1 {0}}} {9}}) -> [8 0 9]", "(leaves {7 {4 {5} {6}} {8 {5 {4} {1}} {2}}}) -> [5 6 4 1 2]", "(leaves {9 {3}}) -> [3]", "(leaves {0 {9 {4} {3}}}) -> [4 3]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.932225, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {2 {1}} {6 {8 {5} {4}} {6}}}) -> [1 5 4 6]", "(leaves {8}) -> [8]", "(leaves {7 {7 {6} {7}}}) -> [6 7]", "(leaves {2 {7 {4}} {4}}) -> [4 4]", "(leaves {5 {2} {6 {4} {6}}}) -> [2 4 6]", "(leaves {3 {8}}) -> [8]", "(leaves {3 {5} {5}}) -> [5 5]", "(leaves {0 {1}}) -> [1]", "(leaves {1 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {5 {1}}) -> [1]", "(leaves {7}) -> [7]", "(leaves {3 {4}}) -> [4]", "(leaves {8 {3 {7} {6}}}) -> [7 6]", "(leaves {3 {9}}) -> [9]"], "name": "leaves"}
{"time": 0.944246, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9 {0 {3} {6}} {2 {5} {5}}}) -> [3 6 5 5]", "(leaves {7}) -> [7]", "(leaves {9 {5}}) -> [5]", "(leaves {1}) -> [1]", "(leaves {1 {1 {4 {9} {1}}}}) -> [9 1]", "(leaves {8 {8}}) -> [8]", "(leaves {0 {8} {1}}) -> [8 1]", "(leaves {}) -> []", "(leaves {9 {3}}) -> [3]", "(leaves {8 {9}}) -> [9]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {8 {4} {1}}) -> [4 1]", "(leaves {4 {7 {0}}}) -> [0]", "(leaves {}) -> []", "(leaves {5 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {6 {6}}) -> [6]", "(leaves {6 {9} {0}}) -> [9 0]"], "name": "leaves"}
{"time": 1.006814, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {2}}) -> [2]", "(leaves {2 {2 {5}}}) -> [5]", "(leaves {2 {2 {8} {6}}}) -> [8 6]", "(leaves {2}) -> [2]", "(leaves {0 {8} {4 {9}}}) -> [8 9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {7 {5} {9}} {1}}) -> [5 9 1]", "(leaves {2}) -> [2]", "(leaves {1 {7}}) -> [7]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {3 {9 {0 {7}}} {1}}) -> [7 1]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {8 {4}}) -> [4]", "(leaves {9}) -> [9]", "(leaves {6}) -> [6]", "(leaves {8 {8} {8}}) -> [8 8]", "(leaves {9}) -> [9]", "(leaves {8}) -> [8]", "(leaves {2 {9 {6} {1}}}) -> [6 1]"], "name": "leaves"}
{"time": 0.987398, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4 {5}}) -> [5]", "(leaves {1}) -> [1]", "(leaves {4}) -> [4]", "(leaves {1}) -> [1]", "(leaves {9 {7}}) -> [7]", "(leaves {9 {2 {6} {8}}}) -> [6 8]", "(leaves {3 {7 {0} {5 {9} {3}}} {4}}) -> [0 9 3 4]", "(leaves {}) -> []", "(leaves {8 {6 {9} {6}} {3}}) -> [9 6 3]", "(leaves {0 {9 {4 {0}}}}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {4 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {1 {1}}) -> [1]", "(leaves {2 {3}}) -> [3]", "(leaves {6}) -> [6]", "(leaves {5 {0 {5 {0}} {7}}}) -> [0 7]", "(leaves {1 {5 {9 {1} {5}} {4 {7} {8}}} {3}}) -> [1 5 7 8 3]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {5} {1 {2} {9}}}) -> [5 2 9]"], "name": "leaves"}
{"time": 0.984131, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {2 {6}}) -> [6]", "(leaves {3 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {4 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {4 {4} {7}}) -> [4 7]", "(leaves {0}) -> [0]", "(leaves {5 {9}}) -> [9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {7} {8 {4} {5}}}) -> [7 4 5]", "(leaves {3 {8 {0}}}) -> [0]", "(leaves {8 {3}}) -> [3]", "(leaves {0 {4 {5 {7} {4}} {1 {0} {8}}}}) -> [7 4 0 8]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {1}) -> [1]"], "name": "leaves"}
{"time": 1.005476, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {8}) -> [8]", "(leaves {0 {4} {3}}) -> [4 3]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {8 {2} {5 {8 {8} {5}} {6}}}) -> [2 8 5 6]", "(leaves {}) -> []", "(leaves {7 {1 {4}}}) -> [4]", "(leaves {8 {2}}) -> [2]", "(leaves {1 {4 {8} {2}}}) -> [8 2]", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {1 {8} {0}}) -> [8 0]", "(leaves {2 {8 {7}} {9 {2}}}) -> [7 2]", "(leaves {9 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {8 {8 {4} {3}} {1 {5}}}) -> [4 3 5]", "(leaves {3 {5 {8}} {7}}) -> [8 7]", "(leaves {1 {2 {1}} {8}}) -> [1 8]"], "name": "leaves"}
{"time": 1.00501, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {5 {0 {1 {6} {3}} {0 {7}}} {0 {3 {3} {7}} {7 {2}}}}) -> [6 3 7 3 7 2]", "(leaves {6 {3 {1} {8}} {4}}) -> [1 8 4]", "(leaves {7 {3 {1}}}) -> [1]", "(leaves {4 {2} {9}}) -> [2 9]", "(leaves {8 {2}}) -> [2]", "(leaves {7 {0 {5}}}) -> [5]", "(leaves {0 {1} {8}}) -> [1 8]", "(leaves {3 {4}}) -> [4]", "(leaves {5 {8} {0}}) -> [8 0]", "(leaves {9 {1} {8 {2} {4}}}) -> [1 2 4]", "(leaves {2 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {7 {4} {8 {0} {2}}}) -> [4 0 2]", "(leaves {3 {5}}) -> [5]", "(leaves {3 {6 {1} {0}}}) -> [1 0]", "(leaves {2 {7}}) -> [7]", "(leaves {9}) -> [9]", "(leaves {3}) -> [3]", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {4}) -> [4]"], "name": "leaves"}
{"time": 1.051051, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5 {7 {6 {1} {7}}}}) -> [1 7]", "(leaves {1 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {2 {0 {9}} {2}}) -> [9 2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {9}}) -> [9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {7}}) -> [7]", "(leaves {3 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {3 {5} {2 {0} {9 {5}}}}) -> [5 0 5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {7 {1 {0 {3}}}}) -> [3]", "(leaves {7 {1 {2 {8}} {4}}}) -> [8 4]"], "name": "leaves"}
{"time": 1.082018, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {3 {0 {7 {7} {4}} {3}}}) -> [7 4 3]", "(leaves {2 {6 {1} {9}} {0}}) -> [1 9 0]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {7 {0}}) -> [0]", "(leaves {0}) -> [0]", "(leaves {1 {0} {7}}) -> [0 7]", "(leaves {}) -> []", "(leaves {2 {9 {2 {1}} {1 {1}}}}) -> [1 1]", "(leaves {7}) -> [7]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {1 {0 {9 {5} {3}}}}) -> [5 3]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {4 {5}}) -> [5]", "(leaves {6 {6} {5 {2 {4}}}}) -> [6 4]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {6 {6} {7}}) -> [6 7]"], "name": "leaves"}
{"time": 1.089903, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8 {5 {9} {3}} {9 {6}}}) -> [9 3 6]", "(leaves {6 {2 {7 {6} {5}} {8 {6}}}}) -> [6 5 6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {9 {0 {3}} {2 {8} {9}}}) -> [3 8 9]", "(leaves {6}) -> [6]", "(leaves {8}) -> [8]", "(leaves {1 {6 {7} {3}}}) -> [7 3]", "(leaves {8 {3 {6} {4}} {1 {4}}}) -> [6 4 4]", "(leaves {2 {2} {1}}) -> [2 1]", "(leaves {8 {8 {3} {3}}}) -> [3 3]", "(leaves {4}) -> [4]", "(leaves {0 {5} {3}}) -> [5 3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {8} {3 {3}}}) -> [8 3]", "(leaves {}) -> []", "(leaves {0}) -> [0]"], "name": "leaves"}
{"time": 1.109641, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {5} {6 {5} {1}}}) -> [5 5 1]", "(leaves {3 {9 {7} {0}}}) -> [7 0]", "(leaves {}) -> []", "(leaves {4 {4 {0 {8}}}}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {7 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {6 {8 {8 {9} {6}} {1 {3}}}}) -> [9 6 3]", "(leaves {1 {7 {5 {6} {5}} {8 {4} {4}}} {0}}) -> [6 5 4 4 0]", "(leaves {4 {0 {5 {4} {4}}} {2 {9 {0} {5}} {6 {2}}}}) -> [4 4 0 5 2]", "(leaves {5}) -> [5]", "(leaves {5}) -> [5]", "(leaves {4 {4 {7}} {7}}) -> [7 7]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {8}) -> [8]", "(leaves {1 {3 {1}}}) -> [1]", "(leaves {6}) -> [6]"], "name": "leaves"}
{"time": 0.778037, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {0 {4}}) -> [4]", "(leaves {8 {3} {4}}) -> [3 4]", "(leaves {1 {6}}) -> [6]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {0 {1}}) -> [1]", "(leaves {9 {2} {2}}) -> [2 2]", "(leaves {}) -> []", "(leaves {7 {2}}) -> [2]", "(leaves {5 {9}}) -> [9]", "(leaves {7 {2} {8}}) -> [2 8]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {7 {9}}) -> [9]", "(leaves {1 {6}}) -> [6]", "(leaves {4}) -> [4]", "(leaves {2 {0 {8 {6} {4}} {3 {8}}}}) -> [6 4 8]", "(leaves {5}) -> [5]", "(leaves {3 {9 {3} {9}} {7 {9}}}) -> [3 9 9]", "(leaves {2}) -> [2]", "(leaves {3 {2 {4 {8}} {1 {4}}}}) -> [8 4]"], "name": "leaves"}
{"time": 0.788765, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {2}) -> [2]", "(leaves {7}) -> [7]", "(leaves {5 {1 {1} {7}} {9}}) -> [1 7 9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {3 {7}}}) -> [7]", "(leaves {}) -> []", "(leaves {6 {8} {1}}) -> [8 1]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {1}) -> [1]", "(leaves {4 {0}}) -> [0]", "(leaves {4}) -> [4]", "(leaves {1}) -> [1]", "(leaves {5 {4}}) -> [4]", "(leaves {9 {5}}) -> [5]", "(leaves {5 {8}}) -> [8]", "(leaves {5 {6} {7}}) -> [6 7]", "(leaves {7 {8 {4}} {8 {2 {8}} {7 {4}}}}) -> [4 8 4]", "(leaves {5 {6} {3 {3} {2}}}) -> [6 3 2]"], "name": "leaves"}
{"time": 0.801143, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4 {7}}) -> [7]", "(leaves {0 {7}}) -> [7]", "(leaves {0}) -> [0]", "(leaves {0}) -> [0]", "(leaves {4}) -> [4]", "(leaves {1 {8 {1 {9} {6}}} {3 {6 {9} {3}}}}) -> [9 6 9 3]", "(leaves {7 {7 {7} {9}} {6}}) -> [7 9 6]", "(leaves {0 {1 {0 {3} {0}}} {5}}) -> [3 0 5]", "(leaves {}) -> []", "(leaves {5 {1}}) -> [1]", "(leaves {2 {8 {0}}}) -> [0]", "(leaves {5}) -> [5]", "(leaves {2 {3} {5}}) -> [3 5]", "(leaves {3}) -> [3]", "(leaves {9 {1} {9 {2} {6 {5}}}}) -> [1 2 5]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {1 {1 {7}} {5}}) -> [7 5]", "(leaves {1 {3}}) -> [3]", "(leaves {3 {4} {2}}) -> [4 2]", "(leaves {8 {9} {5}}) -> [9 5]", "(leaves {4}) -> [4]", "(leaves {2 {3} {3 {6} {8}}}) -> [3 6 8]"], "name": "leaves"}
{"time": 0.808653, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {4}) -> [4]", "(leaves {9 {9} {7}}) -> [9 7]", "(leaves {6 {2}}) -> [2]", "(leaves {4 {1 {1}}}) -> [1]", "(leaves {2 {2} {9}}) -> [2 9]", "(leaves {0 {4 {3} {1}}}) -> [3 1]", "(leaves {9 {0 {5}} {2 {3 {1} {5}} {8 {1}}}}) -> [5 1 5 1]", "(leaves {0 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {7 {0} {0 {2}}}) -> [0 2]", "(leaves {9 {6 {9} {4}} {8 {1}}}) -> [9 4 1]", "(leaves {1 {5}}) -> [5]", "(leaves {2 {5}}) -> [5]", "(leaves {6 {4 {6}} {1}}) -> [6 1]", "(leaves {7 {2 {0}}}) -> [0]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {6} {9}}) -> [6 9]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {4 {8 {9} {9}}}) -> [9 9]"], "name": "leaves"}
{"time": 0.796889, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {1 {6}}) -> [6]", "(leaves {0 {6 {3} {8}}}) -> [3 8]", "(leaves {3 {2 {0}} {0 {0}}}) -> [0 0]", "(leaves {2 {9}}) -> [9]", "(leaves {8 {9 {3 {8} {7}} {4}}}) -> [8 7 4]", "(leaves {}) -> []", "(leaves {6 {0}}) -> [0]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {7 {3}}) -> [3]", "(leaves {2 {4 {6} {1}} {0 {1} {6}}}) -> [6 1 1 6]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {6 {5} {3}}) -> [5 3]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {1}}) -> [1]", "(leaves {2 {5} {6}}) -> [5 6]", "(leaves {5 {3 {8}} {4 {2 {6} {8}}}}) -> [8 6 8]"], "name": "leaves"}
{"time": 0.778527, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {3}) -> [3]", "(leaves {0}) -> [0]", "(leaves {4 {5 {4 {7} {5}} {6}}}) -> [7 5 6]", "(leaves {1}) -> [1]", "(leaves {4 {8} {1 {1 {7} {0}} {0 {1}}}}) -> [8 7 0 1]", "(leaves {4 {2 {6} {3 {1} {9}}}}) -> [6 1 9]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {0}) -> [0]", "(leaves {5}) -> [5]", "(leaves {2}) -> [2]", "(leaves {4}) -> [4]", "(leaves {4 {2} {2 {3} {1 {0}}}}) -> [2 3 0]", "(leaves {2}) -> [2]", "(leaves {8}) -> [8]", "(leaves {3 {5}}) -> [5]", "(leaves {9 {0 {2} {8}}}) -> [2 8]", "(leaves {9 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.811805, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {7 {2}}}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {9} {5}}) -> [9 5]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {9}) -> [9]", "(leaves {3 {9}}) -> [9]", "(leaves {6}) -> [6]", "(leaves {2 {5} {2}}) -> [5 2]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {9 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {7 {4 {0} {9}} {3 {5}}}) -> [0 9 5]", "(leaves {3}) -> [3]", "(leaves {3 {7} {1}}) -> [7 1]", "(leaves {7 {1} {8}}) -> [1 8]", "(leaves {}) -> []", "(leaves {1 {8 {7} {0}} {3 {1} {3}}}) -> [7 0 1 3]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {1 {1} {0}}) -> [1 0]"], "name": "leaves"}
{"time": 0.923388, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9 {2}}) -> [2]", "(leaves {5 {7 {3} {3}} {6 {5}}}) -> [3 3 5]", "(leaves {6}) -> [6]", "(leaves {8 {2} {6}}) -> [2 6]", "(leaves {}) -> []", "(leaves {7 {9 {8} {9}} {4 {9 {2} {4}} {3 {5} {2}}}}) -> [8 9 2 4 5 2]", "(leaves {}) -> []", "(leaves {1 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {8 {1} {4}}) -> [1 4]", "(leaves {9}) -> [9]", "(leaves {6 {9}}) -> [9]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {7 {3}}) -> [3]", "(leaves {5}) -> [5]", "(leaves {5 {4 {2}}}) -> [2]", "(leaves {5 {5 {4 {2} {8}}}}) -> [2 8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1}) -> [1]"], "name": "leaves"}
{"time": 0.998085, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {1 {9 {2}}} {0 {3}}}) -> [2 3]", "(leaves {5 {1} {8}}) -> [1 8]", "(leaves {0}) -> [0]", "(leaves {2 {3 {5}}}) -> [5]", "(leaves {4 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {2 {7}}) -> [7]", "(leaves {3}) -> [3]", "(leaves {2}) -> [2]", "(leaves {5 {7} {3}}) -> [7 3]", "(leaves {}) -> []", "(leaves {7 {6}}) -> [6]", "(leaves {0 {7 {0}} {5 {8}}}) -> [0 8]", "(leaves {3 {4}}) -> [4]"], "name": "leaves"}
{"time": 1.010781, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {6 {8}}}) -> [8]", "(leaves {1}) -> [1]", "(leaves {9 {0 {3} {2}} {0 {0}}}) -> [3 2 0]", "(leaves {3 {4} {7 {6 {6} {7}} {0}}}) -> [4 6 7 0]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {4}) -> [4]", "(leaves {7 {5} {4 {1}}}) -> [5 1]", "(leaves {7}) -> [7]", "(leaves {6}) -> [6]", "(leaves {5 {8}}) -> [8]", "(leaves {1 {0}}) -> [0]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {4 {6 {5}} {4}}) -> [5 4]", "(leaves {4 {5} {6 {8 {9}} {9}}}) -> [5 9 9]", "(leaves {}) -> []", "(leaves {0 {6 {8 {6} {7}} {8}}}) -> [6 7 8]", "(leaves {}) -> []", "(leaves {2}) -> [2]"], "name": "leaves"}
{"time": 1.112952, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {3 {8 {7} {7}} {2 {3} {4}}}}) -> [7 7 3 4]", "(leaves {9 {4 {5 {1}}} {0 {0} {4}}}) -> [1 0 4]", "(leaves {}) -> []", "(leaves {3 {6} {7}}) -> [6 7]", "(leaves {8 {3}}) -> [3]", "(leaves {6 {6}}) -> [6]", "(leaves {8 {4 {0} {7}}}) -> [0 7]", "(leaves {5 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {7 {9}}) -> [9]", "(leaves {}) -> []", "(leaves {8 {2 {8}}}) -> [8]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {8 {2 {2}} {9}}) -> [2 9]", "(leaves {7 {7} {4 {2 {9} {3}}}}) -> [7 9 3]", "(leaves {}) -> []", "(leaves {4 {4} {3}}) -> [4 3]", "(leaves {1 {4 {8} {3 {8}}}}) -> [8 8]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 1.015188, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {4 {1 {8}}}) -> [8]", "(leaves {7}) -> [7]", "(leaves {6 {9 {5} {2}} {1}}) -> [5 2 1]", "(leaves {7}) -> [7]", "(leaves {5 {9 {3} {6 {2} {4}}}}) -> [3 2 4]", "(leaves {6 {5} {8}}) -> [5 8]", "(leaves {7 {3 {7}} {0 {4 {3}}}}) -> [7 3]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {4 {2} {6}}) -> [2 6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {6 {5} {8 {9}}}}) -> [5 9]", "(leaves {1}) -> [1]", "(leaves {4}) -> [4]", "(leaves {9 {6}}) -> [6]", "(leaves {1}) -> [1]", "(leaves {3 {7}}) -> [7]", "(leaves {9 {2 {3}}}) -> [3]", "(leaves {9 {2} {6 {8} {9}}}) -> [2 8 9]"], "name": "leaves"}
{"time": 0.964174, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {6 {4} {8}}) -> [4 8]", "(leaves {}) -> []", "(leaves {8 {3 {8 {2} {8}} {6}}}) -> [2 8 6]", "(leaves {8 {9 {7} {4}} {4}}) -> [7 4 4]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {6 {8}} {5 {6} {9}}}) -> [8 6 9]", "(leaves {4 {6 {8 {5}}}}) -> [5]", "(leaves {0 {2 {9 {1}}} {8 {1 {7}} {5 {2} {1}}}}) -> [1 7 2 1]", "(leaves {7 {1 {7} {3}} {8 {8}}}) -> [7 3 8]", "(leaves {}) -> []", "(leaves {2 {3 {8} {3}}}) -> [8 3]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {6 {9}}) -> [9]", "(leaves {2 {7 {1} {4}} {3 {8} {5}}}) -> [1 4 8 5]", "(leaves {6 {9 {3}}}) -> [3]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {4 {2} {3}}) -> [2 3]"], "name": "leaves"}
{"time": 1.021652, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {2 {8}}}) -> [8]", "(leaves {9}) -> [9]", "(leaves {7 {2} {0}}) -> [2 0]", "(leaves {6 {9 {6} {2}} {3 {9}}}) -> [6 2 9]", "(leaves {}) -> []", "(leaves {7 {2 {6}} {7 {5}}}) -> [6 5]", "(leaves {6 {7 {0}} {3}}) -> [0 3]", "(leaves {8 {4} {9}}) -> [4 9]", "(leaves {3 {6} {1 {1}}}) -> [6 1]", "(leaves {}) -> []", "(leaves {8 {0 {2}}}) -> [2]", "(leaves {}) -> []", "(leaves {7 {3} {7}}) -> [3 7]", "(leaves {7}) -> [7]", "(leaves {9}) -> [9]", "(leaves {4}) -> [4]", "(leaves {7}) -> [7]", "(leaves {7 {3 {5}}}) -> [5]", "(leaves {8 {2 {9 {5} {7}} {5 {7} {8}}} {2}}) -> [5 7 7 8 2]", "(leaves {}) -> []", "(leaves {3 {2} {5}}) -> [2 5]", "(leaves {3}) -> [3]", "(leaves {0}) -> [0]"], "name": "leaves"}
{"time": 0.96997, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {2} {5 {1} {6}}}) -> [2 1 6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0 {6 {1} {5 {0}}}}) -> [1 0]", "(leaves {8}) -> [8]", "(leaves {9 {1} {1}}) -> [1 1]", "(leaves {6 {8 {0 {8}} {4 {4}}} {5 {2} {1}}}) -> [8 4 2 1]", "(leaves {}) -> []", "(leaves {7 {9} {5}}) -> [9 5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {2 {6}}) -> [6]", "(leaves {0 {5 {3} {3 {0}}}}) -> [3 0]", "(leaves {9 {1} {5}}) -> [1 5]", "(leaves {6 {6} {9}}) -> [6 9]", "(leaves {0 {7 {5} {0}}}) -> [5 0]"], "name": "leaves"}
{"time": 1.029615, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2 {1 {9 {9} {7}}} {1 {8}}}) -> [9 7 8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {5 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {5}) -> [5]", "(leaves {8 {9} {6}}) -> [9 6]", "(leaves {1 {6} {6}}) -> [6 6]", "(leaves {}) -> []", "(leaves {4 {9}}) -> [9]", "(leaves {6}) -> [6]", "(leaves {0 {5} {9 {0} {6}}}) -> [5 0 6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {4 {2} {8}}) -> [2 8]", "(leaves {4}) -> [4]", "(leaves {7}) -> [7]", "(leaves {8}) -> [8]", "(leaves {8}) -> [8]", "(leaves {9 {8}}) -> [8]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.719812, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {8 {0}}) -> [0]", "(leaves {7 {2} {6 {6}}}) -> [2 6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0 {8} {1}}) -> [8 1]", "(leaves {5 {1 {4} {3}}}) -> [4 3]", "(leaves {0 {3 {0 {0} {3}}} {4}}) -> [0 3 4]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {4 {6 {7}} {9 {0} {5}}}) -> [7 0 5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {1}) -> [1]", "(leaves {2 {1}}) -> [1]", "(leaves {7}) -> [7]", "(leaves {6 {3}}) -> [3]", "(leaves {4 {3 {0 {3} {2}} {5 {5} {5}}}}) -> [3 2 5 5]", "(leaves {5 {3} {0 {1}}}) -> [3 1]", "(leaves {4}) -> [4]", "(leaves {5 {9}}) -> [9]"], "name": "leaves"}
{"time": 0.76927, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {8}}) -> [8]", "(leaves {7 {3 {3 {1} {3}}}}) -> [1 3]", "(leaves {4 {9 {8} {9}}}) -> [8 9]", "(leaves {}) -> []", "(leaves {2 {1 {2 {1} {9}} {6 {2}}} {9}}) -> [1 9 2 9]", "(leaves {9}) -> [9]", "(leaves {5 {8 {4} {3 {3}}}}) -> [4 3]", "(leaves {8 {3}}) -> [3]", "(leaves {7 {6 {4 {2}} {7}}}) -> [2 7]", "(leaves {}) -> []", "(leaves {7 {1}}) -> [1]", "(leaves {8 {6} {1}}) -> [6 1]", "(leaves {7 {3}}) -> [3]", "(leaves {3 {1} {4}}) -> [1 4]", "(leaves {3 {1} {8}}) -> [1 8]", "(leaves {8 {2}}) -> [2]", "(leaves {1}) -> [1]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.745781, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {8 {5} {9}} {6 {7 {0} {6}} {7}}}) -> [5 9 0 6 7]", "(leaves {7 {2 {9}}}) -> [9]", "(leaves {}) -> []", "(leaves {2 {5} {7}}) -> [5 7]", "(leaves {7 {7 {9 {3}} {6 {8}}} {2 {9}}}) -> [3 8 9]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {7 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {8 {0 {1} {2}} {6 {2 {4}} {3 {2}}}}) -> [1 2 4 2]", "(leaves {0 {2}}) -> [2]", "(leaves {8}) -> [8]", "(leaves {4}) -> [4]", "(leaves {2 {5}}) -> [5]", "(leaves {9 {7} {7}}) -> [7 7]", "(leaves {}) -> []", "(leaves {8 {8}}) -> [8]", "(leaves {1}) -> [1]"], "name": "leaves"}
{"time": 0.81334, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4 {7}}) -> [7]", "(leaves {1}) -> [1]", "(leaves {7 {0} {3 {4 {5} {0}}}}) -> [0 5 0]", "(leaves {}) -> []", "(leaves {1 {0}}) -> [0]", "(leaves {9 {9 {3}}}) -> [3]", "(leaves {6 {2} {3}}) -> [2 3]", "(leaves {}) -> []", "(leaves {9 {8}}) -> [8]", "(leaves {4 {5} {5}}) -> [5 5]", "(leaves {2 {7 {9 {2}}}}) -> [2]", "(leaves {8 {1 {1}} {6 {5} {6 {4}}}}) -> [1 5 4]", "(leaves {5 {4 {6 {3} {5}}} {1}}) -> [3 5 1]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {0 {0} {2}}) -> [0 2]", "(leaves {4}) -> [4]", "(leaves {2}) -> [2]", "(leaves {2 {9 {6} {8 {8}}}}) -> [6 8]", "(leaves {6 {2} {6}}) -> [2 6]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.817317, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {6 {9} {7}}) -> [9 7]", "(leaves {6}) -> [6]", "(leaves {0 {5} {2}}) -> [5 2]", "(leaves {3 {3 {7} {8}} {0 {8}}}) -> [7 8 8]", "(leaves {1 {4} {0}}) -> [4 0]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {1 {9} {1}}) -> [9 1]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {4 {1 {3 {6} {8}} {5}}}) -> [6 8 5]", "(leaves {0}) -> [0]", "(leaves {9 {2 {0} {5}} {8}}) -> [0 5 8]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {6 {1} {3}}) -> [1 3]", "(leaves {8}) -> [8]", "(leaves {3 {2}}) -> [2]", "(leaves {5 {0 {4}}}) -> [4]", "(leaves {3}) -> [3]"], "name": "leaves"}
{"time": 0.849227, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {0 {7} {3 {7}}}}) -> [7 7]", "(leaves {2 {4} {7}}) -> [4 7]", "(leaves {4 {0} {4}}) -> [0 4]", "(leaves {}) -> []", "(leaves {8 {7 {4} {9 {4}}}}) -> [4 4]", "(leaves {0 {0 {1}} {3 {2} {5}}}) -> [1 2 5]", "(leaves {8 {4} {0}}) -> [4 0]", "(leaves {7 {6 {0 {4}} {3}}}) -> [4 3]", "(leaves {7 {0} {7 {5} {7}}}) -> [0 5 7]", "(leaves {4 {5} {4}}) -> [5 4]", "(leaves {2 {0}}) -> [0]", "(leaves {3 {0 {8} {1 {8}}}}) -> [8 8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {0 {2} {2}} {4}}) -> [2 2 4]", "(leaves {1}) -> [1]", "(leaves {3 {1}}) -> [1]", "(leaves {5}) -> [5]", "(leaves {2 {9}}) -> [9]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.817697, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {8 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {7 {3} {2}}) -> [3 2]", "(leaves {1 {6 {0 {1} {3}}}}) -> [1 3]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {6 {3}}) -> [3]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {1 {6}}) -> [6]", "(leaves {3 {1} {0}}) -> [1 0]", "(leaves {3 {0} {7}}) -> [0 7]", "(leaves {7 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {7 {1}}) -> [1]", "(leaves {1 {0 {6 {2} {8}}}}) -> [2 8]", "(leaves {7 {8 {6 {0}} {4 {6} {6}}}}) -> [0 6 6]", "(leaves {3 {3} {6 {1} {7}}}) -> [3 1 7]", "(leaves {1}) -> [1]", "(leaves {9 {1} {0}}) -> [1 0]"], "name": "leaves"}
{"time": 0.688031, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {0}}) -> [0]", "(leaves {7}) -> [7]", "(leaves {4}) -> [4]", "(leaves {0 {0 {3}}}) -> [3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {2 {3} {8 {8}}}) -> [3 8]", "(leaves {9 {3} {1}}) -> [3 1]", "(leaves {1 {3 {8 {0} {1}} {7 {0} {0}}} {4}}) -> [0 1 0 0 4]", "(leaves {2 {5 {9} {2}} {2 {5}}}) -> [9 2 5]", "(leaves {1 {6 {1} {2}} {0 {3 {7}}}}) -> [1 2 7]", "(leaves {7 {8 {1}}}) -> [1]", "(leaves {1 {5}}) -> [5]", "(leaves {4}) -> [4]", "(leaves {8}) -> [8]", "(leaves {2}) -> [2]", "(leaves {4 {6} {5 {0}}}) -> [6 0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {0 {5 {3} {9}}}}) -> [3 9]", "(leaves {9 {8 {3 {7} {9}}}}) -> [7 9]", "(leaves {4 {9 {7 {8}} {9}}}) -> [8 9]"], "name": "leaves"}
{"time": 0.950332, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9 {4 {4 {5} {3}} {3 {8}}} {2 {4 {1} {2}} {4}}}) -> [5 3 8 1 2 4]", "(leaves {1 {0}}) -> [0]", "(leaves {}) -> []", "(leaves {6 {1 {8} {6}}}) -> [8 6]", "(leaves {8 {1} {8}}) -> [1 8]", "(leaves {7}) -> [7]", "(leaves {6 {1} {0 {7 {9} {9}}}}) -> [1 9 9]", "(leaves {}) -> []", "(leaves {0 {6}}) -> [6]", "(leaves {5 {7}}) -> [7]", "(leaves {2 {4 {7 {5}}}}) -> [5]", "(leaves {0 {0 {2} {0}}}) -> [2 0]", "(leaves {0}) -> [0]", "(leaves {5}) -> [5]", "(leaves {9 {3 {9} {3 {0}}}}) -> [9 0]", "(leaves {2 {3} {7 {9 {9} {9}} {0 {6} {7}}}}) -> [3 9 9 6 7]", "(leaves {3 {5 {3}} {7 {5} {2}}}) -> [3 5 2]", "(leaves {3 {5 {4}} {1 {4}}}) -> [4 4]", "(leaves {5 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.751884, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {6} {6}}) -> [6 6]", "(leaves {0 {7} {3}}) -> [7 3]", "(leaves {1}) -> [1]", "(leaves {7 {5 {6}} {4 {4} {9}}}) -> [6 4 9]", "(leaves {3}) -> [3]", "(leaves {6 {3} {0 {3} {9}}}) -> [3 3 9]", "(leaves {2}) -> [2]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0 {8 {9}}}) -> [9]", "(leaves {0 {4} {0}}) -> [4 0]", "(leaves {8 {4 {7} {0 {1} {6}}} {5 {8 {0} {5}}}}) -> [7 1 6 0 5]", "(leaves {0}) -> [0]", "(leaves {5}) -> [5]", "(leaves {3}) -> [3]", "(leaves {6 {2 {7} {0}} {9 {7}}}) -> [7 0 7]", "(leaves {2 {2 {3} {5}}}) -> [3 5]", "(leaves {2}) -> [2]", "(leaves {8 {0 {5} {3 {4} {1}}} {2 {2 {6} {4}}}}) -> [5 4 1 6 4]", "(leaves {5 {3}}) -> [3]", "(leaves {3}) -> [3]", "(leaves {1 {5 {0}}}) -> [0]"], "name": "leaves"}
{"time": 0.846941, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {0} {6}}) -> [0 6]", "(leaves {7 {4 {9} {4}}}) -> [9 4]", "(leaves {0 {0}}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {5} {2}}) -> [5 2]", "(leaves {7 {3}}) -> [3]", "(leaves {6 {0 {3} {9}}}) -> [3 9]", "(leaves {8 {0 {6} {7 {5}}}}) -> [6 5]", "(leaves {7 {8 {0}}}) -> [0]", "(leaves {3 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {5 {9 {1} {9}} {4}}) -> [1 9 4]", "(leaves {7 {3 {9}} {0 {3 {1}} {6 {6} {8}}}}) -> [9 1 6 8]", "(leaves {9 {4 {0 {8} {6}} {9 {8}}}}) -> [8 6 8]", "(leaves {}) -> []", "(leaves {8 {0 {7} {3 {0} {1}}} {0}}) -> [7 0 1 0]", "(leaves {9 {1} {0}}) -> [1 0]"], "name": "leaves"}
{"time": 0.838378, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5 {3} {3 {9}}}) -> [3 9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {6}) -> [6]", "(leaves {1 {8 {5 {5} {3}} {3}} {8}}) -> [5 3 3 8]", "(leaves {8}) -> [8]", "(leaves {8 {0} {0 {7 {9}}}}) -> [0 9]", "(leaves {9 {5 {7} {6 {0} {4}}}}) -> [7 0 4]", "(leaves {7 {1 {3}}}) -> [3]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {1 {0} {1}}) -> [0 1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {6 {7}}}) -> [7]"], "name": "leaves"}
{"time": 0.790736, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {6 {0 {0 {9} {0}}} {4 {6 {1} {2}} {7 {9} {7}}}}) -> [9 0 1 2 9 7]", "(leaves {9 {5 {1} {3}} {8}}) -> [1 3 8]", "(leaves {1}) -> [1]", "(leaves {7 {6 {3} {2}}}) -> [3 2]", "(leaves {}) -> []", "(leaves {8 {1} {0}}) -> [1 0]", "(leaves {5 {8} {7}}) -> [8 7]", "(leaves {7 {2 {8} {0}} {5 {2}}}) -> [8 0 2]", "(leaves {}) -> []", "(leaves {8 {7 {2 {9}}}}) -> [9]", "(leaves {0}) -> [0]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {0 {0 {0 {1}} {4 {4} {2}}} {1 {7 {6} {7}} {3 {6} {5}}}}) -> [1 4 2 6 7 6 5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {0} {9 {7} {4}}}) -> [0 7 4]", "(leaves {3 {9}}) -> [9]"], "name": "leaves"}
{"time": 0.562287, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {0}}) -> [0]", "(leaves {}) -> []", "(leaves {6 {8 {8}} {0}}) -> [8 0]", "(leaves {8 {2 {4 {3}} {4}}}) -> [3 4]", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {6 {6 {8}}}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {3 {1 {7}}}) -> [7]", "(leaves {6 {5}}) -> [5]", "(leaves {3}) -> [3]", "(leaves {3 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {2 {4}}) -> [4]", "(leaves {2}) -> [2]", "(leaves {1 {7}}) -> [7]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {6 {9 {8} {6}}}) -> [8 6]"], "name": "leaves"}
{"time": 0.878778, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4 {8}}) -> [8]", "(leaves {9}) -> [9]", "(leaves {7 {6} {7}}) -> [6 7]", "(leaves {6 {4 {5 {3}} {6 {7}}} {2}}) -> [3 7 2]", "(leaves {9 {1 {1 {3}} {0 {1}}} {2}}) -> [3 1 2]", "(leaves {8 {7 {3} {5}}}) -> [3 5]", "(leaves {4 {3}}) -> [3]", "(leaves {9 {4} {2}}) -> [4 2]", "(leaves {}) -> []", "(leaves {3 {8} {0}}) -> [8 0]", "(leaves {4 {9}}) -> [9]", "(leaves {1}) -> [1]", "(leaves {3}) -> [3]", "(leaves {1 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {6 {8} {4}}) -> [8 4]", "(leaves {3}) -> [3]", "(leaves {0 {3}}) -> [3]", "(leaves {5 {5 {2 {7} {7}} {6 {2} {4}}} {3}}) -> [7 7 2 4 3]", "(leaves {4 {4}}) -> [4]", "(leaves {0}) -> [0]", "(leaves {4 {5 {5}} {9 {2}}}) -> [5 2]", "(leaves {1 {7 {8}} {2}}) -> [8 2]"], "name": "leaves"}
{"time": 0.877527, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {3}}) -> [3]", "(leaves {1 {3} {9}}) -> [3 9]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {4 {2}} {1}}) -> [2 1]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {4 {3 {2 {6} {9}}} {4}}) -> [6 9 4]", "(leaves {6 {2} {7 {8}}}) -> [2 8]", "(leaves {2}) -> [2]", "(leaves {3}) -> [3]", "(leaves {3}) -> [3]", "(leaves {6}) -> [6]", "(leaves {7 {4 {6} {8}}}) -> [6 8]", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {5}) -> [5]", "(leaves {3 {9 {7 {7}} {7}}}) -> [7 7]", "(leaves {3 {4}}) -> [4]", "(leaves {5 {7 {6}}}) -> [6]"], "name": "leaves"}
{"time": 0.550862, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {8}}) -> [8]", "(leaves {4}) -> [4]", "(leaves {9 {6 {0}} {0}}) -> [0 0]", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {6 {8}}) -> [8]", "(leaves {2 {8} {1}}) -> [8 1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {3} {1 {5 {8}} {4 {7} {6}}}}) -> [3 8 7 6]", "(leaves {6 {2} {1}}) -> [2 1]", "(leaves {7 {0 {9 {8}} {8 {6} {9}}}}) -> [8 6 9]", "(leaves {5 {0 {8 {1}}}}) -> [1]", "(leaves {}) -> []", "(leaves {7 {2}}) -> [2]", "(leaves {9 {3 {4}} {6 {1}}}) -> [4 1]", "(leaves {4 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {4 {6}}) -> [6]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.596587, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9 {1 {5} {8}}}) -> [5 8]", "(leaves {3 {2}}) -> [2]", "(leaves {3 {2 {3} {6}}}) -> [3 6]", "(leaves {4 {8} {8}}) -> [8 8]", "(leaves {5 {2}}) -> [2]", "(leaves {1}) -> [1]", "(leaves {6 {9}}) -> [9]", "(leaves {7 {3 {9 {5}} {2 {1} {2}}} {2 {7 {6} {2}}}}) -> [5 1 2 6 2]", "(leaves {4 {9 {4}}}) -> [4]", "(leaves {}) -> []", "(leaves {0 {0} {8 {4} {0}}}) -> [0 4 0]", "(leaves {7}) -> [7]", "(leaves {1 {7} {7 {4}}}) -> [7 4]", "(leaves {8 {7 {0} {7}} {2 {4} {3}}}) -> [0 7 4 3]", "(leaves {2 {6} {0}}) -> [6 0]", "(leaves {4 {8} {2}}) -> [8 2]", "(leaves {6}) -> [6]", "(leaves {4 {7 {8 {1}}}}) -> [1]", "(leaves {7}) -> [7]", "(leaves {1 {5 {2}}}) -> [2]", "(leaves {5 {6 {7} {5}} {7}}) -> [7 5 7]", "(leaves {9}) -> [9]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.638614, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {3 {0 {0}}}}) -> [0]", "(leaves {7 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {2 {2 {3}} {5 {1}}}) -> [3 1]", "(leaves {5 {3} {8}}) -> [3 8]", "(leaves {}) -> []", "(leaves {9 {0} {3 {4 {4}} {1 {7} {5}}}}) -> [0 4 7 5]", "(leaves {5}) -> [5]", "(leaves {6 {7 {0 {5}} {5}}}) -> [5 5]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {1 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {9 {2 {6} {3}}} {9 {9}}}) -> [6 3 9]", "(leaves {8 {4 {9}} {9}}) -> [9 9]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {6 {3} {4}}) -> [3 4]", "(leaves {}) -> []", "(leaves {4 {7 {8 {8} {2}} {1 {8}}}}) -> [8 2 8]"], "name": "leaves"}
{"time": 1.106482, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5 {2 {7} {2}}}) -> [7 2]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {4}) -> [4]", "(leaves {5}) -> [5]", "(leaves {0 {0}}) -> [0]", "(leaves {8 {7} {5}}) -> [7 5]", "(leaves {7}) -> [7]", "(leaves {0 {3}}) -> [3]", "(leaves {0 {9 {5 {9}}}}) -> [9]", "(leaves {3}) -> [3]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {9 {9 {7 {6}} {7}}}) -> [6 7]", "(leaves {6 {4}}) -> [4]", "(leaves {1 {4}}) -> [4]", "(leaves {9}) -> [9]", "(leaves {6 {8 {9} {7}} {7 {1}}}) -> [9 7 1]", "(leaves {4 {3 {3 {1}} {2 {2}}}}) -> [1 2]", "(leaves {9 {0 {1}}}) -> [1]", "(leaves {}) -> []", "(leaves {5 {2 {4} {4}} {7 {9} {6}}}) -> [4 4 9 6]", "(leaves {0}) -> [0]"], "name": "leaves"}
{"time": 0.719827, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8 {1} {0}}) -> [1 0]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {0 {1} {1}}) -> [1 1]", "(leaves {9}) -> [9]", "(leaves {7 {1 {5 {4}}} {2 {5 {8} {1}}}}) -> [4 8 1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {1 {1} {6}}) -> [1 6]", "(leaves {7 {6} {3}}) -> [6 3]", "(leaves {3}) -> [3]", "(leaves {9 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {7 {5 {9}} {8 {8 {6}} {4}}}) -> [9 6 4]", "(leaves {2 {4} {2}}) -> [4 2]", "(leaves {}) -> []", "(leaves {3 {6 {4}} {4}}) -> [4 4]", "(leaves {8 {7}}) -> [7]", "(leaves {0 {5}}) -> [5]", "(leaves {7}) -> [7]", "(leaves {3 {5}}) -> [5]"], "name": "leaves"}
{"time": 1.061457, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {9 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {9 {9 {2 {4}}} {6 {4 {3} {3}} {3 {3} {4}}}}) -> [4 3 3 3 4]", "(leaves {5}) -> [5]", "(leaves {4 {0}}) -> [0]", "(leaves {5 {9}}) -> [9]", "(leaves {2 {9} {2}}) -> [9 2]", "(leaves {6 {7 {1 {8}}} {7 {5 {1}}}}) -> [8 1]", "(leaves {}) -> []", "(leaves {6 {4 {0} {7}}}) -> [0 7]", "(leaves {}) -> []", "(leaves {6 {6 {2}} {7 {6}}}) -> [2 6]", "(leaves {9}) -> [9]", "(leaves {1 {4}}) -> [4]", "(leaves {7 {6} {0}}) -> [6 0]", "(leaves {4 {9 {0 {6}} {7 {2} {3}}} {2 {0 {3} {1}} {7 {4} {8}}}}) -> [6 2 3 3 1 4 8]", "(leaves {0 {6} {6 {2}}}) -> [6 2]"], "name": "leaves"}
{"time": 0.985728, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {5 {7} {7}}) -> [7 7]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {2 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {3 {4}}) -> [4]", "(leaves {8 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {8 {2}}) -> [2]", "(leaves {5}) -> [5]", "(leaves {7 {7 {5}} {0 {1} {4}}}) -> [5 1 4]", "(leaves {}) -> []", "(leaves {9 {1 {4}}}) -> [4]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {8 {3}}) -> [3]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.622558, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {7}}) -> [7]", "(leaves {8 {4 {8 {4}}}}) -> [4]", "(leaves {4}) -> [4]", "(leaves {8 {7} {7 {5} {4}}}) -> [7 5 4]", "(leaves {0}) -> [0]", "(leaves {4 {0}}) -> [0]", "(leaves {9}) -> [9]", "(leaves {1 {8}}) -> [8]", "(leaves {8 {6 {1}} {6}}) -> [1 6]", "(leaves {9 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {4 {8 {7 {4} {4}} {2}} {2}}) -> [4 4 2 2]", "(leaves {6 {4}}) -> [4]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {3}) -> [3]", "(leaves {9 {8 {2}}}) -> [2]", "(leaves {7}) -> [7]", "(leaves {3}) -> [3]", "(leaves {5 {3} {8}}) -> [3 8]"], "name": "leaves"}
{"time": 1.020012, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {0 {5} {0}}}) -> [5 0]", "(leaves {5 {5} {4}}) -> [5 4]", "(leaves {7 {2}}) -> [2]", "(leaves {9 {1 {3} {6}} {5 {0} {4}}}) -> [3 6 0 4]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {6 {2}}) -> [2]", "(leaves {2 {6}}) -> [6]", "(leaves {5}) -> [5]", "(leaves {2 {3} {0}}) -> [3 0]", "(leaves {8 {4}}) -> [4]", "(leaves {4 {1} {8}}) -> [1 8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {7 {9} {1}}}) -> [9 1]", "(leaves {2 {6} {9}}) -> [6 9]", "(leaves {0 {2 {5}}}) -> [5]", "(leaves {}) -> []", "(leaves {7 {1} {6 {8}}}) -> [1 8]", "(leaves {1}) -> [1]", "(leaves {5 {2} {2}}) -> [2 2]", "(leaves {8 {6}}) -> [6]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.625071, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {3 {1 {0} {1}} {7 {4} {4}}}) -> [0 1 4 4]", "(leaves {7 {5} {3 {7}}}) -> [5 7]", "(leaves {2 {3} {6 {6 {9}}}}) -> [3 9]", "(leaves {3 {6}}) -> [6]", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {9 {0 {2 {4} {5}}} {8 {7 {1} {6}} {2 {6} {6}}}}) -> [4 5 1 6 6 6]", "(leaves {4 {6} {3}}) -> [6 3]", "(leaves {7 {1 {3} {5}} {5}}) -> [3 5 5]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0 {2 {3} {1}} {5 {5}}}) -> [3 1 5]", "(leaves {}) -> []", "(leaves {7 {4}}) -> [4]", "(leaves {2}) -> [2]", "(leaves {5 {9} {4}}) -> [9 4]", "(leaves {7 {5 {1 {2} {3}}} {6 {5 {8} {5}} {3 {3}}}}) -> [2 3 8 5 3]", "(leaves {6 {5 {5 {1}} {4 {1}}}}) -> [1 1]", "(leaves {0 {5 {2 {2}} {8 {1}}} {4}}) -> [2 1 4]", "(leaves {3}) -> [3]"], "name": "leaves"}
{"time": 1.146129, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9 {0 {9 {9} {3}} {7}} {6 {4 {6} {1}} {8 {1}}}}) -> [9 3 7 6 1 1]", "(leaves {9 {6} {3 {9} {7}}}) -> [6 9 7]", "(leaves {}) -> []", "(leaves {5 {8 {1}}}) -> [1]", "(leaves {1 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {5 {3 {4}}}) -> [4]", "(leaves {7 {8 {8}} {8}}) -> [8 8]", "(leaves {2}) -> [2]", "(leaves {5 {9 {4}} {9 {5 {3} {9}}}}) -> [4 3 9]", "(leaves {6 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {1 {7} {0}}) -> [7 0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {1 {3 {6 {4} {7}}}}) -> [4 7]", "(leaves {2 {9 {5 {9} {5}}} {9 {0 {8}} {9 {2} {8}}}}) -> [9 5 8 2 8]", "(leaves {8 {1}}) -> [1]", "(leaves {9 {5} {0}}) -> [5 0]", "(leaves {}) -> []", "(leaves {1 {5 {0 {1} {8}} {7 {4} {0}}}}) -> [1 8 4 0]", "(leaves {4 {5}}) -> [5]"], "name": "leaves"}
{"time": 1.092691, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {4 {3} {3}}}) -> [3 3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {1} {2}}) -> [1 2]", "(leaves {9 {3}}) -> [3]", "(leaves {8}) -> [8]", "(leaves {4 {2} {9}}) -> [2 9]", "(leaves {}) -> []", "(leaves {3 {9} {8}}) -> [9 8]", "(leaves {1}) -> [1]", "(leaves {1 {5 {9 {1} {0}}} {4 {5} {2}}}) -> [1 0 5 2]", "(leaves {8}) -> [8]", "(leaves {6 {9} {1 {6 {1}}}}) -> [9 1]", "(leaves {4 {0}}) -> [0]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {0 {0}}) -> [0]", "(leaves {0 {0} {8}}) -> [0 8]", "(leaves {}) -> []", "(leaves {7 {0} {2}}) -> [0 2]", "(leaves {4 {8} {7}}) -> [8 7]"], "name": "leaves"}
{"time": 0.640736, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8 {7}}) -> [7]", "(leaves {7}) -> [7]", "(leaves {9 {7} {3}}) -> [7 3]", "(leaves {7}) -> [7]", "(leaves {9 {3 {4 {6} {8}}} {1 {0}}}) -> [6 8 0]", "(leaves {}) -> []", "(leaves {5 {3 {6}} {4}}) -> [6 4]", "(leaves {7 {2 {0} {7 {9}}}}) -> [0 9]", "(leaves {1}) -> [1]", "(leaves {3 {0}}) -> [0]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {7 {3}}) -> [3]", "(leaves {5 {8 {5 {5}} {4 {9} {2}}} {0 {0 {5} {8}} {4 {6}}}}) -> [5 9 2 5 8 6]", "(leaves {3 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {7 {5} {4}}) -> [5 4]", "(leaves {7}) -> [7]", "(leaves {9}) -> [9]", "(leaves {1 {8}}) -> [8]", "(leaves {1}) -> [1]", "(leaves {5 {8} {4}}) -> [8 4]", "(leaves {3 {1}}) -> [1]"], "name": "leaves"}
{"time": 1.071539, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {1 {4} {3}}}) -> [4 3]", "(leaves {7 {2} {6}}) -> [2 6]", "(leaves {6 {5}}) -> [5]", "(leaves {3 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {9 {5 {3} {0}} {2}}) -> [3 0 2]", "(leaves {}) -> []", "(leaves {6 {4} {3}}) -> [4 3]", "(leaves {6 {0}}) -> [0]", "(leaves {3}) -> [3]", "(leaves {9}) -> [9]", "(leaves {2}) -> [2]", "(leaves {3 {6} {7}}) -> [6 7]", "(leaves {}) -> []", "(leaves {0 {9} {0 {4}}}) -> [9 4]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {6}) -> [6]", "(leaves {2}) -> [2]", "(leaves {1 {0 {5 {8}} {3 {4} {6}}}}) -> [8 4 6]"], "name": "leaves"}
{"time": 1.097302, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4 {9} {0}}) -> [9 0]", "(leaves {6}) -> [6]", "(leaves {7 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {1 {4}}) -> [4]", "(leaves {1 {1} {5}}) -> [1 5]", "(leaves {4 {9}}) -> [9]", "(leaves {2 {3} {4}}) -> [3 4]", "(leaves {}) -> []", "(leaves {1 {0 {0} {3}} {8 {1}}}) -> [0 3 1]", "(leaves {8 {3}}) -> [3]", "(leaves {8 {1 {9} {7}}}) -> [9 7]", "(leaves {}) -> []", "(leaves {9 {8 {1}}}) -> [1]", "(leaves {8}) -> [8]", "(leaves {6 {3 {6 {2}} {6}} {6}}) -> [2 6 6]", "(leaves {3 {3 {8} {0 {2}}} {8}}) -> [8 2 8]", "(leaves {}) -> []", "(leaves {5 {3} {3}}) -> [3 3]", "(leaves {5 {4 {7} {6}} {2}}) -> [7 6 2]"], "name": "leaves"}
{"time": 0.550743, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {4 {5 {5}} {9 {1} {5}}}) -> [5 1 5]", "(leaves {2 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {7 {5 {2} {4}}}) -> [2 4]", "(leaves {6 {3 {3 {1}} {9 {0} {2}}}}) -> [1 0 2]", "(leaves {1 {6}}) -> [6]", "(leaves {6 {6 {6}}}) -> [6]", "(leaves {9 {6 {7}} {4 {9}}}) -> [7 9]", "(leaves {7}) -> [7]", "(leaves {6}) -> [6]", "(leaves {4}) -> [4]", "(leaves {5 {3} {1 {0} {9}}}) -> [3 0 9]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {5 {4 {4}}}) -> [4]"], "name": "leaves"}
{"time": 0.50962, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {4 {2 {2} {3}} {8}}) -> [2 3 8]", "(leaves {0 {8 {7 {2} {2}} {5 {3} {9}}} {5 {6 {9} {4}} {7 {7} {1}}}}) -> [2 2 3 9 9 4 7 1]", "(leaves {0 {4 {9 {7}} {6 {3} {5}}} {4}}) -> [7 3 5 4]", "(leaves {}) -> []", "(leaves {0 {1 {3 {3}}} {7}}) -> [3 7]", "(leaves {0 {3 {3 {1}} {7 {0} {7}}}}) -> [1 0 7]", "(leaves {7 {8} {9}}) -> [8 9]", "(leaves {7 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {9 {0 {2 {5} {7}} {9 {2} {7}}}}) -> [5 7 2 7]", "(leaves {9}) -> [9]", "(leaves {9}) -> [9]", "(leaves {9 {5} {9}}) -> [5 9]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {3} {9}}) -> [3 9]", "(leaves {7 {1 {8} {9}}}) -> [8 9]"], "name": "leaves"}
{"time": 0.539311, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {0}}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {7} {2}}) -> [7 2]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {9 {5} {9 {4}}}) -> [5 4]", "(leaves {5}) -> [5]", "(leaves {8 {2} {3 {8}}}) -> [2 8]", "(leaves {3 {8 {5 {0}} {3 {4}}} {1 {8 {5}} {9 {1} {1}}}}) -> [0 4 5 1 1]", "(leaves {8}) -> [8]", "(leaves {7 {4 {0}}}) -> [0]", "(leaves {}) -> []", "(leaves {8 {9 {7}}}) -> [7]", "(leaves {1 {1 {7}} {0 {7}}}) -> [7 7]", "(leaves {8}) -> [8]", "(leaves {0 {6} {1 {4 {8} {0}}}}) -> [6 8 0]", "(leaves {6 {8}}) -> [8]", "(leaves {6 {5}}) -> [5]", "(leaves {4}) -> [4]"], "name": "leaves"}
{"time": 1.023113, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {9 {5} {4}}) -> [5 4]", "(leaves {0}) -> [0]", "(leaves {4 {9} {8}}) -> [9 8]", "(leaves {2}) -> [2]", "(leaves {4 {8 {2} {0}} {8}}) -> [2 0 8]", "(leaves {6}) -> [6]", "(leaves {7 {4 {6 {5}} {2 {2} {1}}} {7}}) -> [5 2 1 7]", "(leaves {7}) -> [7]", "(leaves {1 {1 {2 {7}} {6}}}) -> [7 6]", "(leaves {5 {2 {8}}}) -> [8]", "(leaves {7}) -> [7]", "(leaves {0 {7 {6} {9}}}) -> [6 9]", "(leaves {}) -> []", "(leaves {9 {2 {7 {8} {8}} {3 {6} {7}}} {1 {0 {8} {4}} {1 {3}}}}) -> [8 8 6 7 8 4 3]", "(leaves {5 {1} {1}}) -> [1 1]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {5 {5 {3}}}) -> [3]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.51359, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {9 {4}}) -> [4]", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {6 {1} {2}}) -> [1 2]", "(leaves {9 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {5 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {3 {7 {2} {5}} {5 {8}}}}) -> [2 5 8]", "(leaves {}) -> []", "(leaves {6 {5}}) -> [5]", "(leaves {1 {5 {7 {9}} {2 {6} {0}}}}) -> [9 6 0]", "(leaves {8 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {3 {6} {8}}) -> [6 8]", "(leaves {2 {5}}) -> [5]", "(leaves {1 {5 {7 {9}}} {3 {8}}}) -> [9 8]"], "name": "leaves"}
{"time": 0.960312, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {8}) -> [8]", "(leaves {8 {1 {6 {7} {6}} {9}} {5 {0 {6} {4}}}}) -> [7 6 9 6 4]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {2}) -> [2]", "(leaves {5 {7 {3}}}) -> [3]", "(leaves {2 {1 {0 {4}} {7 {9} {7}}}}) -> [4 9 7]", "(leaves {6 {7} {2}}) -> [7 2]", "(leaves {3}) -> [3]", "(leaves {5 {7 {4}} {5 {5}}}) -> [4 5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {4 {9 {0} {3}} {9 {5}}}) -> [0 3 5]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {9}}) -> [9]", "(leaves {9 {3} {3}}) -> [3 3]", "(leaves {9 {4 {0}} {0 {8 {1}}}}) -> [0 1]"], "name": "leaves"}
{"time": 0.619398, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {0 {8} {9}} {6}}) -> [8 9 6]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {1 {3 {5 {3} {1}}} {2 {6 {5} {8}}}}) -> [3 1 5 8]", "(leaves {1 {6 {2 {9} {8}} {7}} {5 {9 {7}} {9 {1} {6}}}}) -> [9 8 7 7 1 6]", "(leaves {0}) -> [0]", "(leaves {2}) -> [2]", "(leaves {3 {6} {0 {4} {0}}}) -> [6 4 0]", "(leaves {2}) -> [2]", "(leaves {3 {0}}) -> [0]", "(leaves {5}) -> [5]", "(leaves {5 {7}}) -> [7]", "(leaves {6}) -> [6]", "(leaves {0 {2} {8 {4}}}) -> [2 4]", "(leaves {0 {1} {4}}) -> [1 4]", "(leaves {1 {5 {8} {7}}}) -> [8 7]", "(leaves {5}) -> [5]", "(leaves {0 {7 {6} {8}} {0}}) -> [6 8 0]", "(leaves {5}) -> [5]", "(leaves {1 {9 {5} {5}} {5 {1} {2}}}) -> [5 5 1 2]", "(leaves {0 {1} {1}}) -> [1 1]", "(leaves {6}) -> [6]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.456556, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4 {0 {4}}}) -> [4]", "(leaves {0 {3 {3} {5}}}) -> [3 5]", "(leaves {2 {7 {2 {9} {5}} {5 {0} {6}}}}) -> [9 5 0 6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {2 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {9 {7 {2}} {3}}) -> [2 3]", "(leaves {5 {9} {2}}) -> [9 2]", "(leaves {4 {5} {3}}) -> [5 3]", "(leaves {8 {3 {0} {8}}}) -> [0 8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {1 {8 {4} {3}}} {1 {6 {6} {6}} {5}}}) -> [4 3 6 6 5]", "(leaves {7 {0} {1}}) -> [0 1]", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {0}}) -> [0]", "(leaves {5 {2 {3 {5}}}}) -> [5]"], "name": "leaves"}
{"time": 0.496781, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {3} {7}}) -> [3 7]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {1 {8 {5} {1}} {1}}) -> [5 1 1]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {1 {7 {2}}}) -> [2]", "(leaves {5 {7 {3} {8}} {3}}) -> [3 8 3]", "(leaves {9 {9 {0} {3}} {6 {2} {0}}}) -> [0 3 2 0]", "(leaves {0 {0} {9}}) -> [0 9]", "(leaves {6 {9} {3}}) -> [9 3]", "(leaves {2 {4}}) -> [4]", "(leaves {5 {5}}) -> [5]", "(leaves {2 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {7 {5}}) -> [5]", "(leaves {5}) -> [5]", "(leaves {9}) -> [9]", "(leaves {2 {1 {5 {6}}}}) -> [6]", "(leaves {2 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {5 {7} {0 {0}}}) -> [7 0]"], "name": "leaves"}
{"time": 0.454871, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {6 {1 {1} {2}}}) -> [1 2]", "(leaves {8}) -> [8]", "(leaves {2 {6 {4} {6}}}) -> [4 6]", "(leaves {8 {2} {6}}) -> [2 6]", "(leaves {5 {0 {2} {1}} {3 {7} {2}}}) -> [2 1 7 2]", "(leaves {1 {7 {7} {6}}}) -> [7 6]", "(leaves {5 {2}}) -> [2]", "(leaves {7}) -> [7]", "(leaves {3 {6 {0} {0 {1}}} {1 {9 {6}} {4 {3}}}}) -> [0 1 6 3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {3 {8}}}) -> [8]", "(leaves {}) -> []", "(leaves {7 {2}}) -> [2]", "(leaves {7 {7} {4}}) -> [7 4]", "(leaves {4 {4 {8 {1} {2}} {3 {5} {3}}} {1 {8 {4} {9}} {9 {2} {7}}}}) -> [1 2 5 3 4 9 2 7]", "(leaves {2 {5 {7}}}) -> [7]", "(leaves {5 {7}}) -> [7]"], "name": "leaves"}
{"time": 1.044816, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {6 {7 {0}}}) -> [0]", "(leaves {}) -> []", "(leaves {9 {1}}) -> [1]", "(leaves {7 {2} {3}}) -> [2 3]", "(leaves {8 {1} {9}}) -> [1 9]", "(leaves {6 {9} {0}}) -> [9 0]", "(leaves {7}) -> [7]", "(leaves {4 {7 {6}}}) -> [6]", "(leaves {}) -> []", "(leaves {9 {1} {6}}) -> [1 6]", "(leaves {3}) -> [3]", "(leaves {7 {1} {1}}) -> [1 1]", "(leaves {8}) -> [8]", "(leaves {0 {8}}) -> [8]", "(leaves {2}) -> [2]", "(leaves {2 {1 {2}} {2 {8} {8}}}) -> [2 8 8]", "(leaves {1 {0 {0 {8} {6}}} {7 {0 {8} {7}} {2 {2} {3}}}}) -> [8 6 8 7 2 3]", "(leaves {9 {5 {2}}}) -> [2]", "(leaves {6 {0} {5 {7 {2}}}}) -> [0 2]", "(leaves {6 {4} {8 {1}}}) -> [4 1]", "(leaves {2 {9 {4}}}) -> [4]", "(leaves {7 {2} {9}}) -> [2 9]", "(leaves {5}) -> [5]"], "name": "leaves"}
{"time": 1.081591, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {3} {8}}) -> [3 8]", "(leaves {0 {8} {4}}) -> [8 4]", "(leaves {7 {6 {9} {5}}}) -> [9 5]", "(leaves {3}) -> [3]", "(leaves {0 {2} {7}}) -> [2 7]", "(leaves {8}) -> [8]", "(leaves {6 {6 {7}} {9}}) -> [7 9]", "(leaves {7 {5} {3}}) -> [5 3]", "(leaves {7 {3} {1}}) -> [3 1]", "(leaves {7 {6 {8} {6}}}) -> [8 6]", "(leaves {1}) -> [1]", "(leaves {5 {3}}) -> [3]", "(leaves {6}) -> [6]", "(leaves {2}) -> [2]", "(leaves {5}) -> [5]", "(leaves {2 {8}}) -> [8]", "(leaves {3 {3 {8}}}) -> [8]", "(leaves {5 {2}}) -> [2]", "(leaves {8 {1 {6}} {7 {1}}}) -> [6 1]", "(leaves {}) -> []", "(leaves {6 {4 {5} {1}} {8 {7}}}) -> [5 1 7]", "(leaves {8}) -> [8]", "(leaves {6 {4} {0}}) -> [4 0]"], "name": "leaves"}
{"time": 1.133607, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {5 {2 {8 {7} {2}} {5 {2} {1}}}}) -> [7 2 2 1]", "(leaves {1 {8} {5}}) -> [8 5]", "(leaves {4 {1 {7} {7}} {1 {7}}}) -> [7 7 7]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {2 {8} {5 {3} {3}}}) -> [8 3 3]", "(leaves {5 {1 {7 {4} {0}} {9 {8} {3}}} {9}}) -> [4 0 8 3 9]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {1 {9} {1}}) -> [9 1]", "(leaves {}) -> []", "(leaves {5 {5 {8 {6}} {5 {0}}}}) -> [6 0]", "(leaves {2 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {4 {0 {1} {8 {7}}}}) -> [1 7]", "(leaves {}) -> []", "(leaves {4 {5} {0}}) -> [5 0]", "(leaves {}) -> []", "(leaves {8 {8}}) -> [8]", "(leaves {6 {9 {4} {0}}}) -> [4 0]", "(leaves {1}) -> [1]"], "name": "leaves"}
{"time": 1.194652, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {1} {2}}) -> [1 2]", "(leaves {3 {5 {5}} {7 {4 {0}}}}) -> [5 0]", "(leaves {2 {6 {6}} {6}}) -> [6 6]", "(leaves {0}) -> [0]", "(leaves {7 {4}}) -> [4]", "(leaves {5 {0} {8 {7 {6} {9}} {2 {3} {4}}}}) -> [0 6 9 3 4]", "(leaves {6}) -> [6]", "(leaves {5 {2 {8}}}) -> [8]", "(leaves {6}) -> [6]", "(leaves {1}) -> [1]", "(leaves {8 {4 {0 {3} {6}} {6 {6}}} {8}}) -> [3 6 6 8]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {0 {0 {0 {1}} {3 {3} {5}}} {2}}) -> [1 3 5 2]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {2} {6}}) -> [2 6]", "(leaves {6 {5}}) -> [5]", "(leaves {7 {9} {7}}) -> [9 7]", "(leaves {}) -> []", "(leaves {2 {0}}) -> [0]", "(leaves {1}) -> [1]"], "name": "leaves"}
{"time": 0.689428, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {5 {3}} {3}}) -> [3 3]", "(leaves {0}) -> [0]", "(leaves {5 {7}}) -> [7]", "(leaves {3}) -> [3]", "(leaves {7 {1} {5}}) -> [1 5]", "(leaves {4 {1}}) -> [1]", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {2 {7 {1} {4 {0}}} {6 {8}}}) -> [1 0 8]", "(leaves {7 {8} {3}}) -> [8 3]", "(leaves {7 {8 {3} {5}} {6 {9}}}) -> [3 5 9]", "(leaves {6 {2} {8 {3} {2}}}) -> [2 3 2]", "(leaves {8 {6} {1}}) -> [6 1]", "(leaves {4 {4}}) -> [4]", "(leaves {2 {8 {6}}}) -> [6]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {2 {6} {7}}) -> [6 7]", "(leaves {3 {4} {6}}) -> [4 6]", "(leaves {8 {9} {4}}) -> [9 4]"], "name": "leaves"}
{"time": 1.224568, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {5} {0 {1 {0}}}}) -> [5 0]", "(leaves {2 {6 {1 {2}}}}) -> [2]", "(leaves {3 {0 {7} {7 {6}}}}) -> [7 6]", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {6 {1} {8 {7}}}) -> [1 7]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {9 {3} {3}}) -> [3 3]", "(leaves {0 {6} {4}}) -> [6 4]", "(leaves {1 {8 {4 {7} {1}} {1 {1} {5}}}}) -> [7 1 1 5]", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {8 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3}) -> [3]"], "name": "leaves"}
{"time": 1.203683, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1 {2}}) -> [2]", "(leaves {5 {1} {0}}) -> [1 0]", "(leaves {8}) -> [8]", "(leaves {2 {5}}) -> [5]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {2 {9 {5 {0}} {2}}}) -> [0 2]", "(leaves {4}) -> [4]", "(leaves {5 {9 {2} {4}} {4 {1 {2}} {1 {1} {1}}}}) -> [2 4 2 1 1]", "(leaves {3 {8 {9} {0 {7}}}}) -> [9 7]", "(leaves {2 {1 {7}} {1}}) -> [7 1]", "(leaves {7 {4}}) -> [4]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {6 {9 {9} {6}} {7}}) -> [9 6 7]", "(leaves {9 {2} {1}}) -> [2 1]", "(leaves {}) -> []", "(leaves {8}) -> [8]"], "name": "leaves"}
{"time": 1.17991, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {9 {1}}) -> [1]", "(leaves {5 {9 {1} {5}} {2 {9}}}) -> [1 5 9]", "(leaves {2 {7}}) -> [7]", "(leaves {0 {0}}) -> [0]", "(leaves {7}) -> [7]", "(leaves {0 {9 {7 {0} {6}}}}) -> [0 6]", "(leaves {7 {6 {0} {8}} {2}}) -> [0 8 2]", "(leaves {9 {6 {1}} {8}}) -> [1 8]", "(leaves {4}) -> [4]", "(leaves {0 {8} {2 {3} {7}}}) -> [8 3 7]", "(leaves {}) -> []", "(leaves {7 {1} {7}}) -> [1 7]", "(leaves {}) -> []", "(leaves {9 {5}}) -> [5]", "(leaves {}) -> []", "(leaves {1 {1 {6} {1}} {1}}) -> [6 1 1]", "(leaves {0 {0}}) -> [0]", "(leaves {9}) -> [9]", "(leaves {6}) -> [6]", "(leaves {9 {3 {3 {6} {2}} {9 {0} {4}}} {9}}) -> [6 2 0 4 9]"], "name": "leaves"}
{"time": 0.518256, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1 {3} {4}}) -> [3 4]", "(leaves {2}) -> [2]", "(leaves {3 {9 {7} {6}} {7 {6} {7}}}) -> [7 6 6 7]", "(leaves {7 {9 {7} {6}}}) -> [7 6]", "(leaves {0 {8}}) -> [8]", "(leaves {8 {8 {6 {1} {5}} {9 {7}}}}) -> [1 5 7]", "(leaves {8 {5 {1 {1} {3}} {5 {9}}}}) -> [1 3 9]", "(leaves {9 {8} {7}}) -> [8 7]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {4 {6} {3}}) -> [6 3]", "(leaves {0}) -> [0]", "(leaves {9}) -> [9]", "(leaves {1 {0} {4}}) -> [0 4]", "(leaves {6}) -> [6]", "(leaves {9 {4} {6}}) -> [4 6]", "(leaves {6 {6} {0}}) -> [6 0]", "(leaves {3 {6} {9}}) -> [6 9]", "(leaves {5 {6} {8 {8} {1 {4} {6}}}}) -> [6 8 4 6]"], "name": "leaves"}
{"time": 0.510369, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {4}}) -> [4]", "(leaves {}) -> []", "(leaves {3 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {4 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {5 {0 {8}} {6 {0}}}) -> [8 0]", "(leaves {2}) -> [2]", "(leaves {9 {7 {6 {4} {8}} {1}}}) -> [4 8 1]", "(leaves {5 {2} {3}}) -> [2 3]", "(leaves {0 {8 {5 {6}}} {9 {6}}}) -> [6 6]", "(leaves {}) -> []", "(leaves {2 {2}}) -> [2]", "(leaves {5}) -> [5]", "(leaves {3 {0}}) -> [0]", "(leaves {5 {9}}) -> [9]", "(leaves {3 {1 {1} {9}}}) -> [1 9]", "(leaves {0}) -> [0]", "(leaves {4 {9 {0} {4 {0} {6}}}}) -> [0 0 6]", "(leaves {0 {5} {4}}) -> [5 4]", "(leaves {7 {0 {8 {9} {6}}} {0 {5}}}) -> [9 6 5]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 1.065479, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {9 {8 {5} {8 {1} {1}}}}) -> [5 1 1]", "(leaves {7 {5} {4 {0}}}) -> [5 0]", "(leaves {9 {5 {7}} {2 {1}}}) -> [7 1]", "(leaves {8}) -> [8]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {2 {6}}) -> [6]", "(leaves {8 {3 {5}}}) -> [5]", "(leaves {0 {1 {2 {2}} {1}} {1}}) -> [2 1 1]", "(leaves {8}) -> [8]", "(leaves {8 {8} {5}}) -> [8 5]", "(leaves {}) -> []", "(leaves {6 {1 {7 {9} {7}} {2 {4} {8}}} {9 {1 {1}} {3}}}) -> [9 7 4 8 1 3]", "(leaves {5 {2 {1} {8}}}) -> [1 8]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {0}) -> [0]", "(leaves {3 {5}}) -> [5]", "(leaves {9 {4}}) -> [4]", "(leaves {2}) -> [2]"], "name": "leaves"}
{"time": 0.95051, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {8 {4}}}) -> [4]", "(leaves {0 {6}}) -> [6]", "(leaves {5 {2} {7}}) -> [2 7]", "(leaves {7}) -> [7]", "(leaves {4 {0} {4}}) -> [0 4]", "(leaves {4 {5 {5}} {9}}) -> [5 9]", "(leaves {}) -> []", "(leaves {5}) -> [5]", "(leaves {8}) -> [8]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {3 {9}}) -> [9]", "(leaves {8 {2} {8 {2 {4} {1}}}}) -> [2 4 1]", "(leaves {4 {8}}) -> [8]", "(leaves {1 {4}}) -> [4]", "(leaves {0 {6 {5}} {3}}) -> [5 3]", "(leaves {1 {4} {6}}) -> [4 6]", "(leaves {9 {0}}) -> [0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {7}}) -> [7]", "(leaves {7 {1} {8}}) -> [1 8]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.910685, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {3 {4}}) -> [4]", "(leaves {7 {2} {9 {0 {4}}}}) -> [2 4]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {6}) -> [6]", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {6 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {0 {7 {3 {4}}} {1 {6 {1} {7}} {5 {6} {3}}}}) -> [4 1 7 6 3]", "(leaves {4}) -> [4]", "(leaves {3 {0 {4}}}) -> [4]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {0 {3} {9}}) -> [3 9]", "(leaves {}) -> []", "(leaves {8}) -> [8]"], "name": "leaves"}
{"time": 0.578137, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2 {7}}) -> [7]", "(leaves {6 {4}}) -> [4]", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {7 {1 {1}} {1}}) -> [1 1]", "(leaves {4 {4 {7}} {6 {8} {7}}}) -> [7 8 7]", "(leaves {9 {6} {5}}) -> [6 5]", "(leaves {}) -> []", "(leaves {6 {1} {8}}) -> [1 8]", "(leaves {}) -> []", "(leaves {8}) -> [8]", "(leaves {5 {9} {1}}) -> [9 1]", "(leaves {2}) -> [2]", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {4 {5}}) -> [5]", "(leaves {5 {4 {5 {6}}} {4 {5 {4}}}}) -> [6 4]", "(leaves {4 {6 {1 {6}}} {7}}) -> [6 7]", "(leaves {3 {8 {5 {6} {1}}} {6}}) -> [6 1 6]", "(leaves {}) -> []", "(leaves {6 {5}}) -> [5]", "(leaves {6}) -> [6]"], "name": "leaves"}
{"time": 0.803478, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {6} {6}}) -> [6 6]", "(leaves {1 {0 {0}}}) -> [0]", "(leaves {}) -> []", "(leaves {5 {8}}) -> [8]", "(leaves {0 {8}}) -> [8]", "(leaves {9 {0 {1 {3}}} {3}}) -> [3 3]", "(leaves {8}) -> [8]", "(leaves {1 {4} {1}}) -> [4 1]", "(leaves {8 {9 {5}} {3}}) -> [5 3]", "(leaves {6}) -> [6]", "(leaves {8}) -> [8]", "(leaves {2 {0 {9}} {1 {0}}}) -> [9 0]", "(leaves {}) -> []", "(leaves {0 {3} {1}}) -> [3 1]", "(leaves {3 {4} {4 {0} {9}}}) -> [4 0 9]", "(leaves {}) -> []", "(leaves {2 {3} {8 {6} {2 {0} {8}}}}) -> [3 6 0 8]", "(leaves {9}) -> [9]", "(leaves {9 {7}}) -> [7]", "(leaves {0}) -> [0]", "(leaves {9}) -> [9]"], "name": "leaves"}
{"time": 0.510217, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {8 {4}}) -> [4]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {4 {1}}) -> [1]", "(leaves {9 {1}}) -> [1]", "(leaves {1}) -> [1]", "(leaves {2}) -> [2]", "(leaves {3 {7} {0}}) -> [7 0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {9} {0 {4} {1}}}) -> [9 4 1]", "(leaves {9}) -> [9]", "(leaves {5 {6}}) -> [6]", "(leaves {2 {0} {0}}) -> [0 0]", "(leaves {3 {2} {4 {6 {1}}}}) -> [2 1]", "(leaves {3 {2} {4}}) -> [2 4]", "(leaves {7 {7 {2} {1}} {2 {7} {4}}}) -> [2 1 7 4]", "(leaves {0}) -> [0]", "(leaves {2 {7 {6}} {9 {2} {5}}}) -> [6 2 5]", "(leaves {7 {8 {2} {6}} {2 {3}}}) -> [2 6 3]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {5}}) -> [5]"], "name": "leaves"}
{"time": 0.701494, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {}) -> []", "(leaves {1 {9}}) -> [9]", "(leaves {2}) -> [2]", "(leaves {9 {9 {8}} {8 {2}}}) -> [8 2]", "(leaves {1 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {}) -> []", "(leaves {0 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {7 {6}}) -> [6]", "(leaves {9 {5}}) -> [5]", "(leaves {4 {9}}) -> [9]", "(leaves {7 {5}}) -> [5]", "(leaves {9 {9}}) -> [9]", "(leaves {6}) -> [6]", "(leaves {7 {7} {3}}) -> [7 3]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {5 {5} {5}}) -> [5 5]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.454714, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {1 {5}}) -> [5]", "(leaves {0 {2}}) -> [2]", "(leaves {5 {9}}) -> [9]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {}) -> []", "(leaves {6 {7 {6 {7} {5}}}}) -> [7 5]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {8 {4} {4}}) -> [4 4]", "(leaves {4 {2 {6}} {4 {7 {6} {4}}}}) -> [6 6 4]", "(leaves {6}) -> [6]", "(leaves {9 {7}}) -> [7]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {9 {4 {3}}}) -> [3]", "(leaves {0 {0 {3}} {4 {9}}}) -> [3 9]", "(leaves {3 {3}}) -> [3]", "(leaves {8 {7 {5}} {4 {6} {4}}}) -> [5 6 4]"], "name": "leaves"}
{"time": 0.711294, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {2 {8}}) -> [8]", "(leaves {5}) -> [5]", "(leaves {0}) -> [0]", "(leaves {}) -> []", "(leaves {9 {6 {0} {7 {0}}} {1 {0 {3} {1}} {9 {6}}}}) -> [0 0 3 1 6]", "(leaves {9 {2 {9} {8 {8}}}}) -> [9 8]", "(leaves {6 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {1 {3 {4}}}) -> [4]", "(leaves {3 {1}}) -> [1]", "(leaves {9 {4} {3 {0 {7}}}}) -> [4 7]", "(leaves {8 {3}}) -> [3]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {2 {6 {0}}}) -> [0]", "(leaves {}) -> []", "(leaves {0 {9} {4}}) -> [9 4]", "(leaves {4 {4} {3 {9}}}) -> [4 9]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {6 {3 {9}}}) -> [9]", "(leaves {4 {3 {5} {4}}}) -> [5 4]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.70124, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {3}}) -> [3]", "(leaves {}) -> []", "(leaves {8 {0 {6} {0}}}) -> [6 0]", "(leaves {6 {0 {1 {2} {1}} {1 {3} {0}}}}) -> [2 1 3 0]", "(leaves {}) -> []", "(leaves {5 {9 {3} {5}}}) -> [3 5]", "(leaves {4 {7 {0} {0}} {0}}) -> [0 0 0]", "(leaves {}) -> []", "(leaves {9}) -> [9]", "(leaves {4 {8 {2}}}) -> [2]", "(leaves {9}) -> [9]", "(leaves {0 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {2 {4 {8} {7}}}) -> [8 7]", "(leaves {4 {8} {3}}) -> [8 3]", "(leaves {}) -> []", "(leaves {5 {4} {4 {7 {8}} {2 {4}}}}) -> [4 8 4]", "(leaves {1}) -> [1]", "(leaves {5 {0} {0}}) -> [0 0]", "(leaves {9}) -> [9]", "(leaves {0 {0}}) -> [0]", "(leaves {3 {2}}) -> [2]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.637957, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {4}) -> [4]", "(leaves {8}) -> [8]", "(leaves {5 {1} {0}}) -> [1 0]", "(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {6 {3} {6}}) -> [3 6]", "(leaves {4 {1}}) -> [1]", "(leaves {6 {5}}) -> [5]", "(leaves {8}) -> [8]", "(leaves {8}) -> [8]", "(leaves {3 {7}}) -> [7]", "(leaves {}) -> []", "(leaves {6}) -> [6]", "(leaves {5 {5 {2} {8 {2}}}}) -> [2 2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {8 {4 {3} {1}}}) -> [3 1]", "(leaves {6 {0} {6}}) -> [0 6]", "(leaves {2 {4 {5}} {2 {9} {5}}}) -> [5 9 5]", "(leaves {}) -> []", "(leaves {4 {3}}) -> [3]", "(leaves {7 {3 {8 {3}} {3}} {9 {8 {5}}}}) -> [3 3 5]", "(leaves {3}) -> [3]"], "name": "leaves"}
{"time": 0.60913, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7}) -> [7]", "(leaves {5 {7 {1 {8} {6}} {5}}}) -> [8 6 5]", "(leaves {2}) -> [2]", "(leaves {3 {9 {9 {2} {9}} {1 {7}}}}) -> [2 9 7]", "(leaves {}) -> []", "(leaves {3 {4}}) -> [4]", "(leaves {0 {5}}) -> [5]", "(leaves {6 {2}}) -> [2]", "(leaves {5 {8}}) -> [8]", "(leaves {7 {8} {6 {9} {5}}}) -> [8 9 5]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {0 {6 {9} {5}} {6 {3}}}) -> [9 5 3]", "(leaves {9 {4 {4}} {8 {9} {9}}}) -> [4 9 9]", "(leaves {7}) -> [7]", "(leaves {5 {0} {8 {1} {7}}}) -> [0 1 7]", "(leaves {2 {6}}) -> [6]", "(leaves {1 {2 {9}}}) -> [9]", "(leaves {2 {3}}) -> [3]", "(leaves {2}) -> [2]", "(leaves {9 {8} {5}}) -> [8 5]", "(leaves {7 {5}}) -> [5]", "(leaves {4 {1 {4}}}) -> [4]"], "name": "leaves"}
{"time": 0.470395, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {0 {1 {6} {9}} {3 {3} {9}}}}) -> [6 9 3 9]", "(leaves {9 {6} {7}}) -> [6 7]", "(leaves {7 {6 {1}} {4 {2} {0}}}) -> [1 2 0]", "(leaves {4 {8 {0} {6}}}) -> [0 6]", "(leaves {}) -> []", "(leaves {0 {2}}) -> [2]", "(leaves {}) -> []", "(leaves {5 {9 {7} {1}} {1 {9}}}) -> [7 1 9]", "(leaves {}) -> []", "(leaves {1 {3}}) -> [3]", "(leaves {}) -> []", "(leaves {9 {4} {5}}) -> [4 5]", "(leaves {3}) -> [3]", "(leaves {}) -> []", "(leaves {8 {0 {1} {2 {2} {3}}} {0 {1} {9}}}) -> [1 2 3 1 9]", "(leaves {4 {5}}) -> [5]", "(leaves {6 {3 {1} {7}}}) -> [1 7]", "(leaves {6 {0} {9 {1}}}) -> [0 1]", "(leaves {3 {1 {8}} {8 {2} {1}}}) -> [8 2 1]", "(leaves {7 {7 {1 {5}}} {2 {4 {1}} {7 {6} {3}}}}) -> [5 1 6 3]", "(leaves {4}) -> [4]", "(leaves {}) -> []"], "name": "leaves"}
{"time": 0.580763, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {7 {8}}) -> [8]", "(leaves {}) -> []", "(leaves {8 {8 {8 {3} {2}}}}) -> [3 2]", "(leaves {6}) -> [6]", "(leaves {8 {9 {1}} {5}}) -> [1 5]", "(leaves {8 {8 {4 {3}}}}) -> [3]", "(leaves {}) -> []", "(leaves {2 {8 {2 {2}} {1 {0}}}}) -> [2 0]", "(leaves {7 {1 {0}}}) -> [0]", "(leaves {5 {5 {2}} {7 {7}}}) -> [2 7]", "(leaves {9}) -> [9]", "(leaves {}) -> []", "(leaves {8 {1} {0}}) -> [1 0]", "(leaves {9 {8 {6} {0}} {3}}) -> [6 0 3]", "(leaves {6 {6 {2}} {5 {9}}}) -> [2 9]", "(leaves {}) -> []", "(leaves {3}) -> [3]", "(leaves {3 {2}}) -> [2]", "(leaves {6 {5} {5}}) -> [5 5]", "(leaves {8}) -> [8]", "(leaves {5}) -> [5]", "(leaves {0}) -> [0]", "(leaves {5 {5 {9} {5}}}) -> [9 5]"], "name": "leaves"}
{"time": 0.587953, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {4} {6}}) -> [4 6]", "(leaves {7 {5} {2}}) -> [5 2]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {3 {8}}) -> [8]", "(leaves {0 {1}}) -> [1]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {9 {8 {4}}}) -> [4]", "(leaves {3 {4}}) -> [4]", "(leaves {3 {5}}) -> [5]", "(leaves {5 {9 {9 {4}}}}) -> [4]", "(leaves {8}) -> [8]", "(leaves {4}) -> [4]", "(leaves {5 {1} {7 {9}}}) -> [1 9]", "(leaves {9 {2}}) -> [2]", "(leaves {5 {4 {7} {3 {9}}} {1}}) -> [7 9 1]", "(leaves {3}) -> [3]", "(leaves {8 {9} {7}}) -> [9 7]", "(leaves {4 {3 {6}}}) -> [6]", "(leaves {8}) -> [8]"], "name": "leaves"}
{"time": 0.499551, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {0 {6} {3 {1 {6} {0}}}}) -> [6 6 0]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {1}}) -> [1]", "(leaves {2 {0 {0}} {8 {0} {5}}}) -> [0 0 5]", "(leaves {3 {9} {3 {7} {6}}}) -> [9 7 6]", "(leaves {9 {4 {4} {9}}}) -> [4 9]", "(leaves {8 {2}}) -> [2]", "(leaves {9}) -> [9]", "(leaves {7}) -> [7]", "(leaves {5 {6}}) -> [6]", "(leaves {}) -> []", "(leaves {}) -> []", "(leaves {5 {9}}) -> [9]", "(leaves {0 {0} {2}}) -> [0 2]", "(leaves {}) -> []", "(leaves {1 {4}}) -> [4]", "(leaves {1 {2 {0 {8}} {4 {2}}} {5 {7 {5} {1}}}}) -> [8 2 5 1]", "(leaves {2 {6}}) -> [6]", "(leaves {3}) -> [3]", "(leaves {0}) -> [0]", "(leaves {0 {5} {7}}) -> [5 7]"], "name": "leaves"}
{"time": 0.485346, "solution": "(let leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (join d)) (cons c []))) [])) _) _)", "examples": ["(leaves {}) -> []", "(leaves {1}) -> [1]", "(leaves {}) -> []", "(leaves {7 {0 {9}} {6}}) -> [9 6]", "(leaves {}) -> []", "(leaves {1 {5 {9} {9}}}) -> [9 9]", "(leaves {1 {9 {8 {2} {3}} {8 {7}}} {1}}) -> [2 3 7 1]", "(leaves {1}) -> [1]", "(leaves {8 {0 {2}} {8 {7}}}) -> [2 7]", "(leaves {7 {6 {3 {7}}} {3}}) -> [7 3]", "(leaves {6}) -> [6]", "(leaves {3}) -> [3]", "(leaves {6}) -> [6]", "(leaves {}) -> []", "(leaves {2}) -> [2]", "(leaves {0 {6} {1}}) -> [6 1]", "(leaves {4}) -> [4]", "(leaves {9}) -> [9]", "(leaves {9}) -> [9]", "(leaves {3 {2} {8 {8 {5} {0}} {0 {6}}}}) -> [2 5 0 6]", "(leaves {6 {4} {4 {3} {5}}}) -> [4 3 5]", "(leaves {8 {7}}) -> [7]", "(leaves {2}) -> [2]", "(leaves {1}) -> [1]"], "name": "leaves"}
