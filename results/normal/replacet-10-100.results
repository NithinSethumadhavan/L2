{"time": 0.000925, "examples": ["(replacet {} 8 1) -> {}", "(replacet {[5 9] {[4 5]} {[6 6 7 3]}} 2 9) -> {[5 9] {[4 5]} {[6 6 7 3]}}", "(replacet {} 1 7) -> {}", "(replacet {[5 2 1 9] {[5 1 1 5] {[7 0]}}} 8 1) -> {[5 2 1 9] {[5 1 1 5] {[7 0]}}}", "(replacet {[3 0 7 4] {[0 6 2 9]}} 8 3) -> {[3 0 7 4] {[0 6 2 9]}}", "(replacet {[5] {[]}} 7 5) -> {[5] {[]}}", "(replacet {} 0 8) -> {}", "(replacet {[0 7]} 1 4) -> {[0 7]}", "(replacet {[1 8] {[0]}} 9 5) -> {[1 8] {[0]}}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 0.001376, "examples": ["(replacet {} 0 3) -> {}", "(replacet {} 8 2) -> {}", "(replacet {} 5 3) -> {}", "(replacet {[5 4 8] {[]} {[0 4 3 4 9]}} 6 1) -> {[5 4 8] {[]} {[0 4 3 4 9]}}", "(replacet {[1 7] {[5]}} 2 1) -> {[1 7] {[5]}}", "(replacet {[2] {[3 8 0 2] {[3] {[]}} {[1] {[7 5 4]}}} {[4 8 4 5] {[5 2 6 0 3]} {[6 1 8] {[6 7 5]}}}} 9 7) -> {[2] {[3 8 0 2] {[3] {[]}} {[1] {[7 5 4]}}} {[4 8 4 5] {[5 2 6 0 3]} {[6 1 8] {[6 7 5]}}}}", "(replacet {[] {[6 5 9 7]} {[7 9 8 0] {[8 0 0 9]} {[3]}}} 1 9) -> {[] {[6 5 9 7]} {[7 9 8 0] {[8 0 0 9]} {[3]}}}", "(replacet {[5 3 6] {[0 6 8]}} 9 4) -> {[5 3 6] {[0 6 8]}}", "(replacet {[2 4 9]} 5 8) -> {[2 4 9]}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 8.622806, "examples": ["(replacet {} 2 9) -> {}", "(replacet {[7 1]} 8 1) -> {[7 1]}", "(replacet {[] {[] {[8]} {[5 6 5]}} {[9 1 4 8]}} 6 1) -> {[] {[] {[8]} {[5 1 5]}} {[9 1 4 8]}}", "(replacet {[8 1 1 3 5] {[1 5 3 4] {[0 4 8]} {[9 6 8 5 1]}} {[7 3]}} 2 6) -> {[8 1 1 3 5] {[1 5 3 4] {[0 4 8]} {[9 6 8 5 1]}} {[7 3]}}", "(replacet {[3 5 2 6] {[] {[8] {[7]}} {[6] {[5 6 1]} {[6 7 3]}}} {[7 8 7] {[2 7 6] {[7 6 8]} {[5 3]}}}} 0 3) -> {[3 5 2 6] {[] {[8] {[7]}} {[6] {[5 6 1]} {[6 7 3]}}} {[7 8 7] {[2 7 6] {[7 6 8]} {[5 3]}}}}", "(replacet {[0 3 8 0]} 4 7) -> {[0 3 8 0]}", "(replacet {[1 5 2 3] {[2 3 0 0]}} 8 8) -> {[1 5 2 3] {[2 3 0 0]}}", "(replacet {} 5 5) -> {}", "(replacet {[3 8 2 7]} 5 1) -> {[3 8 2 7]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.845211, "examples": ["(replacet {} 0 9) -> {}", "(replacet {[0 7 7 9 1] {[1]}} 1 1) -> {[0 7 7 9 1] {[1]}}", "(replacet {[0 4 8 3 9] {[0] {[7 0 6 6 8] {[0 3 8 4]} {[9 2 5 6]}}} {[7] {[7]}}} 1 3) -> {[0 4 8 3 9] {[0] {[7 0 6 6 8] {[0 3 8 4]} {[9 2 5 6]}}} {[7] {[7]}}}", "(replacet {} 5 9) -> {}", "(replacet {[4] {[]}} 4 8) -> {[8] {[]}}", "(replacet {[1 0 9]} 0 9) -> {[1 9 9]}", "(replacet {[6 7 2 4 8] {[6 9 2]}} 8 5) -> {[6 7 2 4 5] {[6 9 2]}}", "(replacet {} 8 5) -> {}", "(replacet {[6 0]} 2 8) -> {[6 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 0.000838, "examples": ["(replacet {} 7 7) -> {}", "(replacet {} 5 1) -> {}", "(replacet {} 0 1) -> {}", "(replacet {} 2 9) -> {}", "(replacet {[] {[2 4]}} 6 7) -> {[] {[2 4]}}", "(replacet {} 9 7) -> {}", "(replacet {} 0 0) -> {}", "(replacet {} 7 6) -> {}", "(replacet {} 5 5) -> {}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 9.314751, "examples": ["(replacet {} 0 1) -> {}", "(replacet {[] {[]}} 4 7) -> {[] {[]}}", "(replacet {[1 1] {[0 9] {[9 9]} {[7 5 8 2]}}} 5 4) -> {[1 1] {[0 9] {[9 9]} {[7 4 8 2]}}}", "(replacet {} 7 3) -> {}", "(replacet {[8]} 2 7) -> {[8]}", "(replacet {} 2 6) -> {}", "(replacet {[]} 4 7) -> {[]}", "(replacet {[0 0] {[2 4 3] {[] {[]} {[3 4 9]}}} {[1 5 9 5 2] {[0 4 5 1 5] {[8 0 9]}}}} 7 8) -> {[0 0] {[2 4 3] {[] {[]} {[3 4 9]}}} {[1 5 9 5 2] {[0 4 5 1 5] {[8 0 9]}}}}", "(replacet {[8 4 2 8]} 6 2) -> {[8 4 2 8]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 0.001054, "examples": ["(replacet {} 5 5) -> {}", "(replacet {} 5 3) -> {}", "(replacet {[0 9 2]} 6 6) -> {[0 9 2]}", "(replacet {[5 6] {[3]} {[9 6]}} 4 4) -> {[5 6] {[3]} {[9 6]}}", "(replacet {[8 9 7]} 6 5) -> {[8 9 7]}", "(replacet {[7] {[7 2 5 9] {[5 7 6 1]}} {[0 6 9 1] {[6 0]}}} 4 1) -> {[7] {[7 2 5 9] {[5 7 6 1]}} {[0 6 9 1] {[6 0]}}}", "(replacet {[8 9 2] {[6 0]}} 5 1) -> {[8 9 2] {[6 0]}}", "(replacet {} 7 3) -> {}", "(replacet {[4 4] {[6 3 3 5 9]}} 1 4) -> {[4 4] {[6 3 3 5 9]}}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 10.672741, "examples": ["(replacet {} 4 8) -> {}", "(replacet {[6]} 2 5) -> {[6]}", "(replacet {[0 6] {[1]} {[7 3]}} 3 9) -> {[0 6] {[1]} {[7 9]}}", "(replacet {[8 0 7]} 9 0) -> {[8 0 7]}", "(replacet {} 9 5) -> {}", "(replacet {[8 1 0] {[5 9]}} 5 5) -> {[8 1 0] {[5 9]}}", "(replacet {} 2 4) -> {}", "(replacet {[] {[6 2]} {[0 9]}} 0 8) -> {[] {[6 2]} {[8 9]}}", "(replacet {[] {[9 1 6 7 6]}} 7 9) -> {[] {[9 1 6 9 6]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.103106, "examples": ["(replacet {} 0 6) -> {}", "(replacet {} 3 0) -> {}", "(replacet {} 7 0) -> {}", "(replacet {[0 2 9]} 2 0) -> {[0 0 9]}", "(replacet {} 7 6) -> {}", "(replacet {} 1 4) -> {}", "(replacet {[2 6 9]} 0 8) -> {[2 6 9]}", "(replacet {[4 7]} 6 1) -> {[4 7]}", "(replacet {[1 3 3 8] {[8 8 8 7 3]} {[9] {[9 2] {[6 3 8 2 1]}}}} 0 3) -> {[1 3 3 8] {[8 8 8 7 3]} {[9] {[9 2] {[6 3 8 2 1]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.364665, "examples": ["(replacet {} 0 9) -> {}", "(replacet {[]} 8 6) -> {[]}", "(replacet {} 3 8) -> {}", "(replacet {} 1 5) -> {}", "(replacet {[7 5]} 4 7) -> {[7 5]}", "(replacet {} 7 4) -> {}", "(replacet {[2] {[4 9 1 9] {[7 7 2]}} {[] {[4 7 2 0]}}} 4 5) -> {[2] {[5 9 1 9] {[7 7 2]}} {[] {[5 7 2 0]}}}", "(replacet {[5 2]} 1 6) -> {[5 2]}", "(replacet {[7 5 9]} 2 3) -> {[7 5 9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.18009, "examples": ["(replacet {} 0 4) -> {}", "(replacet {[8 6 3 2 7] {[5 0 9]}} 7 8) -> {[8 6 3 2 8] {[5 0 9]}}", "(replacet {[6 1 1 1 7] {[4 4 9 3 5] {[6 5 1 1 7] {[]} {[0 7]}} {[3 0 0 5] {[2]}}} {[4 6 1 0]}} 2 6) -> {[6 1 1 1 7] {[4 4 9 3 5] {[6 5 1 1 7] {[]} {[0 7]}} {[3 0 0 5] {[6]}}} {[4 6 1 0]}}", "(replacet {[0 2 8 8 2]} 0 0) -> {[0 2 8 8 2]}", "(replacet {} 1 0) -> {}", "(replacet {} 1 5) -> {}", "(replacet {[7 3 8 9] {[8 5 1 5 4]}} 3 6) -> {[7 6 8 9] {[8 5 1 5 4]}}", "(replacet {[1] {[9 2 6]} {[8]}} 0 4) -> {[1] {[9 2 6]} {[8]}}", "(replacet {[6 0 8 9 0]} 8 5) -> {[6 0 5 9 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.825339, "examples": ["(replacet {} 2 3) -> {}", "(replacet {} 1 7) -> {}", "(replacet {[] {[7 0 8 5 1]}} 7 9) -> {[] {[9 0 8 5 1]}}", "(replacet {[1 5 1 1 7] {[9 2] {[6 2] {[5]} {[1 7 5 6 1]}} {[1 1 8 7 4] {[]} {[3 9 4 3]}}} {[3 9 3 4 7] {[3 5 6]}}} 4 3) -> {[1 5 1 1 7] {[9 2] {[6 2] {[5]} {[1 7 5 6 1]}} {[1 1 8 7 3] {[]} {[3 9 3 3]}}} {[3 9 3 3 7] {[3 5 6]}}}", "(replacet {} 8 2) -> {}", "(replacet {[1 3 4 3]} 9 6) -> {[1 3 4 3]}", "(replacet {[] {[7 3]}} 0 2) -> {[] {[7 3]}}", "(replacet {[7 4]} 0 3) -> {[7 4]}", "(replacet {[] {[0 7] {[2 2 3]}} {[6 8 4 5 9] {[7 9 7 5]} {[4 1 7 3 7]}}} 2 5) -> {[] {[0 7] {[5 5 3]}} {[6 8 4 5 9] {[7 9 7 5]} {[4 1 7 3 7]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.132191, "examples": ["(replacet {} 1 9) -> {}", "(replacet {[2 2 6 6] {[6 3 6]}} 5 3) -> {[2 2 6 6] {[6 3 6]}}", "(replacet {[] {[] {[7 2 0]}}} 2 2) -> {[] {[] {[7 2 0]}}}", "(replacet {[8 5 4 0] {[2 7]} {[4 1 1 7 5]}} 5 3) -> {[8 3 4 0] {[2 7]} {[4 1 1 7 3]}}", "(replacet {} 4 5) -> {}", "(replacet {[0 4 2 0] {[1 7 2]} {[7 9 0]}} 8 9) -> {[0 4 2 0] {[1 7 2]} {[7 9 0]}}", "(replacet {[1 1 5]} 5 8) -> {[1 1 8]}", "(replacet {[0] {[0 1 2]} {[9 6 3]}} 7 3) -> {[0] {[0 1 2]} {[9 6 3]}}", "(replacet {[3 9] {[5 1]}} 2 3) -> {[3 9] {[5 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.926573, "examples": ["(replacet {} 0 2) -> {}", "(replacet {[8 1] {[3 0 3 5] {[2 3 0 0 4]}} {[4 6 8 2] {[8 8 0 0]}}} 8 0) -> {[0 1] {[3 0 3 5] {[2 3 0 0 4]}} {[4 6 0 2] {[0 0 0 0]}}}", "(replacet {[9]} 9 7) -> {[7]}", "(replacet {[4 3] {[9 1 6 6] {[3 7 8 1 5]}} {[]}} 4 0) -> {[0 3] {[9 1 6 6] {[3 7 8 1 5]}} {[]}}", "(replacet {[2 4 4 6]} 0 6) -> {[2 4 4 6]}", "(replacet {[7 8]} 6 2) -> {[7 8]}", "(replacet {[4 5 5 7 0] {[4 8 9 1 6]}} 8 7) -> {[4 5 5 7 0] {[4 7 9 1 6]}}", "(replacet {[] {[6 9 4 2 8]} {[5 8]}} 9 3) -> {[] {[6 3 4 2 8]} {[5 8]}}", "(replacet {[9 6] {[1] {[5]} {[6 0 0 6 3]}} {[8 1 4 9 9] {[7 6]} {[1]}}} 3 0) -> {[9 6] {[1] {[5]} {[6 0 0 6 0]}} {[8 1 4 9 9] {[7 6]} {[1]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.040184, "examples": ["(replacet {} 7 8) -> {}", "(replacet {[2 2 5 3] {[] {[6 6 2]}} {[8] {[3 6 1 5]}}} 9 7) -> {[2 2 5 3] {[] {[6 6 2]}} {[8] {[3 6 1 5]}}}", "(replacet {[9 3 8]} 0 6) -> {[9 3 8]}", "(replacet {[2 1 5]} 6 3) -> {[2 1 5]}", "(replacet {[3 0]} 0 5) -> {[3 5]}", "(replacet {[9 8]} 8 6) -> {[9 6]}", "(replacet {[1] {[2 2 2 3] {[]}} {[7] {[1 0]} {[9 1 8]}}} 9 4) -> {[1] {[2 2 2 3] {[]}} {[7] {[1 0]} {[4 1 8]}}}", "(replacet {[5] {[]}} 6 5) -> {[5] {[]}}", "(replacet {[]} 5 7) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.272251, "examples": ["(replacet {} 8 6) -> {}", "(replacet {} 4 6) -> {}", "(replacet {[6 2 5 7] {[]}} 3 3) -> {[6 2 5 7] {[]}}", "(replacet {[3 7 0] {[3 4 0]} {[7 8 0 3 2] {[8 4]} {[5 1 5 2]}}} 2 3) -> {[3 7 0] {[3 4 0]} {[7 8 0 3 3] {[8 4]} {[5 1 5 3]}}}", "(replacet {[6]} 5 5) -> {[6]}", "(replacet {[]} 4 4) -> {[]}", "(replacet {[1 6 8 9 7] {[5] {[2 6 7]}} {[3]}} 2 3) -> {[1 6 8 9 7] {[5] {[3 6 7]}} {[3]}}", "(replacet {} 3 8) -> {}", "(replacet {[1] {[4 3 3 4] {[4 2] {[3]} {[]}} {[9 0 5 4]}} {[7]}} 5 7) -> {[1] {[4 3 3 4] {[4 2] {[3]} {[]}} {[9 0 7 4]}} {[7]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.515327, "examples": ["(replacet {} 6 8) -> {}", "(replacet {[3 4] {[1 9] {[5 9]} {[5 2 0 5]}}} 2 0) -> {[3 4] {[1 9] {[5 9]} {[5 0 0 5]}}}", "(replacet {[8 0 4 5] {[5 1]}} 8 6) -> {[6 0 4 5] {[5 1]}}", "(replacet {} 1 1) -> {}", "(replacet {[8 5 0 9 0]} 9 0) -> {[8 5 0 0 0]}", "(replacet {} 0 0) -> {}", "(replacet {[8 5 1]} 4 3) -> {[8 5 1]}", "(replacet {} 6 4) -> {}", "(replacet {} 8 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 16.144301, "examples": ["(replacet {} 0 8) -> {}", "(replacet {[4 4 3 1] {[7 3 3]} {[6 2 8 5] {[5 0 4]} {[7 8]}}} 2 9) -> {[4 4 3 1] {[7 3 3]} {[6 9 8 5] {[5 0 4]} {[7 8]}}}", "(replacet {[8 1 8] {[3 2 3 1]}} 8 2) -> {[2 1 2] {[3 2 3 1]}}", "(replacet {[9 2] {[7 4 4] {[8]}}} 0 8) -> {[9 2] {[7 4 4] {[8]}}}", "(replacet {[3 5 6 2 6] {[2] {[4] {[]} {[4]}}} {[9 6 5 2]}} 8 4) -> {[3 5 6 2 6] {[2] {[4] {[]} {[4]}}} {[9 6 5 2]}}", "(replacet {[6 2 0 7 7]} 1 1) -> {[6 2 0 7 7]}", "(replacet {[8 4 1]} 4 8) -> {[8 8 1]}", "(replacet {} 1 8) -> {}", "(replacet {[9 4] {[9 2]}} 9 7) -> {[7 4] {[7 2]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.799178, "examples": ["(replacet {} 5 1) -> {}", "(replacet {[4 7 0]} 1 5) -> {[4 7 0]}", "(replacet {} 6 7) -> {}", "(replacet {} 8 0) -> {}", "(replacet {} 9 1) -> {}", "(replacet {[5 5 3] {[] {[0 9 3]}}} 0 5) -> {[5 5 3] {[] {[5 9 3]}}}", "(replacet {[5] {[3 1 6] {[5 6 5 4]}} {[7 7 0 3 4]}} 0 5) -> {[5] {[3 1 6] {[5 6 5 4]}} {[7 7 5 3 4]}}", "(replacet {[3 2 1] {[4 6 1 2 3] {[1] {[2]} {[7 1 1 3 6]}} {[6 3] {[3]}}}} 2 1) -> {[3 1 1] {[4 6 1 1 3] {[1] {[1]} {[7 1 1 3 6]}} {[6 3] {[3]}}}}", "(replacet {[3 5 2] {[1 6 2 6 0]} {[5 4 5 6 1]}} 7 7) -> {[3 5 2] {[1 6 2 6 0]} {[5 4 5 6 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 17.115023, "examples": ["(replacet {} 4 7) -> {}", "(replacet {[7 3 8 8] {[0 3] {[2 6 7 3]} {[3 9 2]}} {[] {[9 8 0]}}} 2 9) -> {[7 3 8 8] {[0 3] {[9 6 7 3]} {[3 9 9]}} {[] {[9 8 0]}}}", "(replacet {[] {[] {[1 8 2]} {[1 1]}} {[8 1 4 2]}} 0 4) -> {[] {[] {[1 8 2]} {[1 1]}} {[8 1 4 2]}}", "(replacet {[5 4 3]} 9 9) -> {[5 4 3]}", "(replacet {} 5 1) -> {}", "(replacet {[] {[1 8 5]} {[6 2 2 4] {[2 5]} {[3]}}} 1 7) -> {[] {[7 8 5]} {[6 2 2 4] {[2 5]} {[3]}}}", "(replacet {[4 2] {[7 6 8 5 0]} {[]}} 7 4) -> {[4 2] {[4 6 8 5 0]} {[]}}", "(replacet {} 3 2) -> {}", "(replacet {[7 3 7 5]} 3 4) -> {[7 4 7 5]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.925487, "examples": ["(replacet {} 1 8) -> {}", "(replacet {[3]} 9 8) -> {[3]}", "(replacet {[]} 1 8) -> {[]}", "(replacet {[3 8 5 1 4] {[5 9 0 7]} {[3 3 9 3] {[1]}}} 9 7) -> {[3 8 5 1 4] {[5 7 0 7]} {[3 3 7 3] {[1]}}}", "(replacet {[2 0 0] {[8 4 1] {[] {[9 4 1]} {[6 0 2 2]}} {[3 2 9] {[9 3]}}}} 1 7) -> {[2 0 0] {[8 4 7] {[] {[9 4 7]} {[6 0 2 2]}} {[3 2 9] {[9 3]}}}}", "(replacet {[2 2] {[6]} {[]}} 9 2) -> {[2 2] {[6]} {[]}}", "(replacet {[5 4] {[3]}} 4 9) -> {[5 9] {[3]}}", "(replacet {} 8 5) -> {}", "(replacet {} 9 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.201825, "examples": ["(replacet {} 2 0) -> {}", "(replacet {} 3 3) -> {}", "(replacet {[9 7 8 7]} 8 3) -> {[9 7 3 7]}", "(replacet {[4] {[0 4 0 2 3]} {[]}} 2 1) -> {[4] {[0 4 0 1 3]} {[]}}", "(replacet {} 4 9) -> {}", "(replacet {[]} 8 1) -> {[]}", "(replacet {[0 8 8 5 4]} 7 1) -> {[0 8 8 5 4]}", "(replacet {[6 0 6 6 0] {[]}} 2 8) -> {[6 0 6 6 0] {[]}}", "(replacet {[2 0 7 7 2]} 0 1) -> {[2 1 7 7 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 19.931969, "examples": ["(replacet {} 7 2) -> {}", "(replacet {[5 6 9 2] {[5] {[2 5 4 2 5]} {[1]}} {[4 9] {[6 9 2]} {[1 6]}}} 2 5) -> {[5 6 9 5] {[5] {[5 5 4 5 5]} {[1]}} {[4 9] {[6 9 5]} {[1 6]}}}", "(replacet {} 6 0) -> {}", "(replacet {} 7 0) -> {}", "(replacet {[9 4 5 7] {[8] {[8 2 1 7 7]} {[5 6]}} {[1] {[5 7 6]}}} 9 6) -> {[6 4 5 7] {[8] {[8 2 1 7 7]} {[5 6]}} {[1] {[5 7 6]}}}", "(replacet {[0 9] {[0 5 5 1 5]}} 6 9) -> {[0 9] {[0 5 5 1 5]}}", "(replacet {} 8 9) -> {}", "(replacet {} 8 6) -> {}", "(replacet {[1 2] {[1 9 2 2]} {[6 8] {[2] {[5 4]}}}} 7 1) -> {[1 2] {[1 9 2 2]} {[6 8] {[2] {[5 4]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.861498, "examples": ["(replacet {} 8 7) -> {}", "(replacet {[9 2 6 9 4] {[4 6 2]}} 6 4) -> {[9 2 4 9 4] {[4 4 2]}}", "(replacet {[9 3 3 1] {[3 1 9 2]} {[] {[8 5 9 3]} {[7 8]}}} 6 2) -> {[9 3 3 1] {[3 1 9 2]} {[] {[8 5 9 3]} {[7 8]}}}", "(replacet {[2] {[7 8 5 8 4] {[5 9 2 5 4]}}} 1 4) -> {[2] {[7 8 5 8 4] {[5 9 2 5 4]}}}", "(replacet {[5 6 2]} 1 3) -> {[5 6 2]}", "(replacet {[1 9 2] {[7 4 1 4 5]} {[8 9 5 0]}} 5 2) -> {[1 9 2] {[7 4 1 4 2]} {[8 9 2 0]}}", "(replacet {} 3 8) -> {}", "(replacet {} 6 7) -> {}", "(replacet {[3 0 7 9 4]} 0 7) -> {[3 7 7 9 4]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.117494, "examples": ["(replacet {} 7 1) -> {}", "(replacet {} 3 6) -> {}", "(replacet {[7 1 1 1] {[]} {[]}} 5 7) -> {[7 1 1 1] {[]} {[]}}", "(replacet {} 4 5) -> {}", "(replacet {[3 5 5]} 7 6) -> {[3 5 5]}", "(replacet {[0 4 5]} 0 7) -> {[7 4 5]}", "(replacet {[] {[1 5 0 2]}} 8 3) -> {[] {[1 5 0 2]}}", "(replacet {} 3 5) -> {}", "(replacet {[9 0]} 8 8) -> {[9 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.402722, "examples": ["(replacet {} 5 4) -> {}", "(replacet {[2 9 1 5 3] {[2 8 2]} {[1 2] {[3 5 3 5 8]} {[7 4 0]}}} 7 4) -> {[2 9 1 5 3] {[2 8 2]} {[1 2] {[3 5 3 5 8]} {[4 4 0]}}}", "(replacet {[6 4 0 3]} 5 9) -> {[6 4 0 3]}", "(replacet {} 7 4) -> {}", "(replacet {[]} 8 2) -> {[]}", "(replacet {} 5 3) -> {}", "(replacet {[9 5] {[0 0 1 3] {[5 7 8] {[5]}} {[] {[4 9 2]} {[4 7 9]}}} {[8 1 9] {[7 1 1 1]}}} 7 8) -> {[9 5] {[0 0 1 3] {[5 8 8] {[5]}} {[] {[4 9 2]} {[4 8 9]}}} {[8 1 9] {[8 1 1 1]}}}", "(replacet {[5 4 9 2 8] {[9 5 1]} {[2 9]}} 6 5) -> {[5 4 9 2 8] {[9 5 1]} {[2 9]}}", "(replacet {[9 8 6 4] {[4] {[]} {[5 8 8]}}} 0 6) -> {[9 8 6 4] {[4] {[]} {[5 8 8]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.160131, "examples": ["(replacet {} 8 0) -> {}", "(replacet {[6 8 3 7 1] {[3 8]} {[1 1 0]}} 3 9) -> {[6 8 9 7 1] {[9 8]} {[1 1 0]}}", "(replacet {[1 0 6 1] {[2 0]} {[9 5 2] {[]} {[1]}}} 7 3) -> {[1 0 6 1] {[2 0]} {[9 5 2] {[]} {[1]}}}", "(replacet {[5 9 3 9] {[1 9] {[5 2 6 9 5]}} {[9 6 9 7]}} 9 4) -> {[5 4 3 4] {[1 4] {[5 2 6 4 5]}} {[4 6 4 7]}}", "(replacet {} 4 4) -> {}", "(replacet {[9 6 3 7 8] {[6 5 9]}} 8 4) -> {[9 6 3 7 4] {[6 5 9]}}", "(replacet {[7 8 5] {[7 3 1 6]}} 6 0) -> {[7 8 5] {[7 3 1 0]}}", "(replacet {[8 3 9 1 7]} 9 7) -> {[8 3 7 1 7]}", "(replacet {} 6 8) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.500485, "examples": ["(replacet {} 7 8) -> {}", "(replacet {} 4 6) -> {}", "(replacet {[]} 0 8) -> {[]}", "(replacet {[4 2 4 3 0]} 8 1) -> {[4 2 4 3 0]}", "(replacet {[0 2 2 5] {[5 7 2 4] {[6 4 1 7 6]} {[2 6 6] {[4]} {[2 1 6]}}} {[3 6 9 4 3] {[3 3 6] {[]}}}} 1 8) -> {[0 2 2 5] {[5 7 2 4] {[6 4 8 7 6]} {[2 6 6] {[4]} {[2 8 6]}}} {[3 6 9 4 3] {[3 3 6] {[]}}}}", "(replacet {[5 5]} 0 6) -> {[5 5]}", "(replacet {[5 6 5 6] {[9] {[0]} {[]}} {[7 9 3] {[1 7]}}} 3 9) -> {[5 6 5 6] {[9] {[0]} {[]}} {[7 9 9] {[1 7]}}}", "(replacet {[3 7 0]} 2 0) -> {[3 7 0]}", "(replacet {[5 2 0 7 1] {[1 2 6 2]}} 3 5) -> {[5 2 0 7 1] {[1 2 6 2]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.417399, "examples": ["(replacet {} 3 6) -> {}", "(replacet {[1] {[8 1 7]} {[8 7 2 7 6]}} 8 3) -> {[1] {[3 1 7]} {[3 7 2 7 6]}}", "(replacet {[] {[1]} {[8 7 5 2]}} 9 6) -> {[] {[1]} {[8 7 5 2]}}", "(replacet {} 8 2) -> {}", "(replacet {} 4 0) -> {}", "(replacet {[6 7 0 9 9] {[3 8 0]}} 3 9) -> {[6 7 0 9 9] {[9 8 0]}}", "(replacet {[7 8]} 0 7) -> {[7 8]}", "(replacet {[9]} 2 0) -> {[9]}", "(replacet {[] {[0]} {[4 4 4 3 4]}} 3 9) -> {[] {[0]} {[4 4 4 9 4]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.977278, "examples": ["(replacet {} 0 8) -> {}", "(replacet {} 7 5) -> {}", "(replacet {} 4 9) -> {}", "(replacet {} 4 4) -> {}", "(replacet {[8 8 1]} 9 8) -> {[8 8 1]}", "(replacet {} 9 5) -> {}", "(replacet {[0 5 7] {[2 1]} {[8]}} 5 2) -> {[0 2 7] {[2 1]} {[8]}}", "(replacet {[0] {[7]}} 2 0) -> {[0] {[7]}}", "(replacet {[] {[7 5 1]}} 5 1) -> {[] {[7 1 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.678249, "examples": ["(replacet {} 5 2) -> {}", "(replacet {[4 5 0 9 3] {[2 0 3] {[8]} {[1 6 7 1]}}} 3 4) -> {[4 5 0 9 4] {[2 0 4] {[8]} {[1 6 7 1]}}}", "(replacet {[3 1 7 6 9] {[]}} 0 3) -> {[3 1 7 6 9] {[]}}", "(replacet {[1 5 2] {[3 9 2 1] {[]} {[]}} {[] {[7 2 5 6 2]}}} 0 1) -> {[1 5 2] {[3 9 2 1] {[]} {[]}} {[] {[7 2 5 6 2]}}}", "(replacet {[6 7 8] {[7 2 2] {[]}}} 4 0) -> {[6 7 8] {[7 2 2] {[]}}}", "(replacet {[7 3]} 5 3) -> {[7 3]}", "(replacet {[3 6 2 7] {[5 1 8] {[3] {[]}}}} 2 8) -> {[3 6 8 7] {[5 1 8] {[3] {[]}}}}", "(replacet {[2 9 3] {[2 8 5] {[4]} {[3]}}} 6 6) -> {[2 9 3] {[2 8 5] {[4]} {[3]}}}", "(replacet {} 6 3) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.390919, "examples": ["(replacet {} 5 4) -> {}", "(replacet {[5 7 5 9 6] {[2] {[] {[2 6]}} {[6 6 7] {[3 8]}}}} 3 1) -> {[5 7 5 9 6] {[2] {[] {[2 6]}} {[6 6 7] {[1 8]}}}}", "(replacet {[] {[] {[3 9 1]} {[7 3 0 0]}}} 3 2) -> {[] {[] {[2 9 1]} {[7 2 0 0]}}}", "(replacet {[8 3 2 2] {[1 8 5] {[0 3 9 9]}}} 9 6) -> {[8 3 2 2] {[1 8 5] {[0 3 6 6]}}}", "(replacet {[4] {[2 9] {[] {[8 2 2]}} {[6] {[8]} {[0 7 0 2 6]}}} {[2 7 9 5] {[] {[4 1 9 9 0]}} {[4 0 3 9 7]}}} 1 6) -> {[4] {[2 9] {[] {[8 2 2]}} {[6] {[8]} {[0 7 0 2 6]}}} {[2 7 9 5] {[] {[4 6 9 9 0]}} {[4 0 3 9 7]}}}", "(replacet {[1 1 9 2] {[0 3] {[7]} {[1 5 1]}} {[8 4] {[2 7 7 1]} {[7]}}} 7 4) -> {[1 1 9 2] {[0 3] {[4]} {[1 5 1]}} {[8 4] {[2 4 4 1]} {[4]}}}", "(replacet {[2]} 1 9) -> {[2]}", "(replacet {} 6 9) -> {}", "(replacet {[2 7 0] {[7] {[0 6]}} {[2 4 6 4] {[]}}} 3 0) -> {[2 7 0] {[7] {[0 6]}} {[2 4 6 4] {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.457692, "examples": ["(replacet {} 2 3) -> {}", "(replacet {} 4 4) -> {}", "(replacet {[8 1 7 8] {[1 2 3 7] {[0 3 4 2 6]}}} 8 0) -> {[0 1 7 0] {[1 2 3 7] {[0 3 4 2 6]}}}", "(replacet {[0]} 7 1) -> {[0]}", "(replacet {[0 8] {[7]} {[5 0 1]}} 0 5) -> {[5 8] {[7]} {[5 5 1]}}", "(replacet {} 0 6) -> {}", "(replacet {[8 7] {[9] {[9 1 8]} {[7 0]}} {[5 7 6 5] {[0 7]} {[7 8]}}} 4 2) -> {[8 7] {[9] {[9 1 8]} {[7 0]}} {[5 7 6 5] {[0 7]} {[7 8]}}}", "(replacet {[8 9]} 9 1) -> {[8 1]}", "(replacet {[4 2 2 8]} 8 8) -> {[4 2 2 8]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.579683, "examples": ["(replacet {} 0 4) -> {}", "(replacet {} 3 1) -> {}", "(replacet {[3 5] {[4 4 5]}} 0 3) -> {[3 5] {[4 4 5]}}", "(replacet {[] {[]} {[3 8 8] {[1]}}} 8 8) -> {[] {[]} {[3 8 8] {[1]}}}", "(replacet {[0]} 8 9) -> {[0]}", "(replacet {[]} 8 4) -> {[]}", "(replacet {[] {[5 4 3 9 2]}} 7 4) -> {[] {[5 4 3 9 2]}}", "(replacet {[5 0 8]} 9 6) -> {[5 0 8]}", "(replacet {[7] {[5 9 5 8] {[7] {[3 7]}} {[] {[]} {[]}}} {[5 8] {[]} {[9] {[9 4 8 0]}}}} 4 2) -> {[7] {[5 9 5 8] {[7] {[3 7]}} {[] {[]} {[]}}} {[5 8] {[]} {[9] {[9 2 8 0]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.5789, "examples": ["(replacet {} 8 7) -> {}", "(replacet {} 4 2) -> {}", "(replacet {[9 9] {[8 9 4 5]}} 8 8) -> {[9 9] {[8 9 4 5]}}", "(replacet {[3 9 4 2] {[6 2 8 7 4] {[5]} {[9 6 4 7]}} {[9] {[2]} {[6]}}} 6 7) -> {[3 9 4 2] {[7 2 8 7 4] {[5]} {[9 7 4 7]}} {[9] {[2]} {[7]}}}", "(replacet {[6 4 1 4] {[6 0]} {[] {[6]} {[]}}} 0 1) -> {[6 4 1 4] {[6 1]} {[] {[6]} {[]}}}", "(replacet {} 6 4) -> {}", "(replacet {[0 6 1 0] {[]} {[]}} 2 8) -> {[0 6 1 0] {[]} {[]}}", "(replacet {} 4 2) -> {}", "(replacet {[6]} 8 3) -> {[6]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.653236, "examples": ["(replacet {} 5 6) -> {}", "(replacet {} 3 6) -> {}", "(replacet {} 3 6) -> {}", "(replacet {} 7 8) -> {}", "(replacet {[] {[]}} 1 3) -> {[] {[]}}", "(replacet {} 3 9) -> {}", "(replacet {} 6 8) -> {}", "(replacet {[] {[5]} {[5 4 6 0] {[6]} {[3 8 1 6 8] {[4 8 5 1 9]} {[2 6 0 3]}}}} 4 0) -> {[] {[5]} {[5 0 6 0] {[6]} {[3 8 1 6 8] {[0 8 5 1 9]} {[2 6 0 3]}}}}", "(replacet {[9]} 2 4) -> {[9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.512053, "examples": ["(replacet {} 5 6) -> {}", "(replacet {} 5 9) -> {}", "(replacet {[0 6 8]} 7 7) -> {[0 6 8]}", "(replacet {[6] {[1 2 2 1 2] {[9 9 9]} {[3 3 9 3]}} {[0 3] {[6 8 2 6 3]} {[8 9]}}} 0 2) -> {[6] {[1 2 2 1 2] {[9 9 9]} {[3 3 9 3]}} {[2 3] {[6 8 2 6 3]} {[8 9]}}}", "(replacet {[3 8 9 2 9]} 6 1) -> {[3 8 9 2 9]}", "(replacet {} 9 7) -> {}", "(replacet {[1] {[8]}} 7 8) -> {[1] {[8]}}", "(replacet {[7 3 1 1 1]} 4 8) -> {[7 3 1 1 1]}", "(replacet {[7 0 3 4] {[8 0 8]} {[1 1 3 3] {[3 0] {[]}} {[6 2 0 1 7] {[]}}}} 3 8) -> {[7 0 8 4] {[8 0 8]} {[1 1 8 8] {[8 0] {[]}} {[6 2 0 1 7] {[]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.712877, "examples": ["(replacet {} 1 8) -> {}", "(replacet {[8]} 7 3) -> {[8]}", "(replacet {[3 6 6 6] {[4 3 4 7] {[]} {[]}}} 8 7) -> {[3 6 6 6] {[4 3 4 7] {[]} {[]}}}", "(replacet {} 4 0) -> {}", "(replacet {[9 2 0] {[3 7 7 2 6]}} 9 4) -> {[4 2 0] {[3 7 7 2 6]}}", "(replacet {[8 4 8 9] {[7 7 5 8]} {[5 9 3] {[4 5 3 5 3]} {[3 3 7 9 5] {[0 2 8]} {[2 7 6]}}}} 9 5) -> {[8 4 8 5] {[7 7 5 8]} {[5 5 3] {[4 5 3 5 3]} {[3 3 7 5 5] {[0 2 8]} {[2 7 6]}}}}", "(replacet {[8 7] {[4 6]}} 0 1) -> {[8 7] {[4 6]}}", "(replacet {[5 9 7 6 5] {[8 6 3] {[0 8 2] {[1 0]}}}} 3 9) -> {[5 9 7 6 5] {[8 6 9] {[0 8 2] {[1 0]}}}}", "(replacet {[2 3 6 2]} 6 3) -> {[2 3 3 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.763795, "examples": ["(replacet {} 4 1) -> {}", "(replacet {[0 6] {[1 7 1 2]} {[6 6 5 8]}} 5 9) -> {[0 6] {[1 7 1 2]} {[6 6 9 8]}}", "(replacet {} 8 8) -> {}", "(replacet {[1 2 2]} 5 6) -> {[1 2 2]}", "(replacet {[] {[5 9 6]}} 0 4) -> {[] {[5 9 6]}}", "(replacet {[]} 8 7) -> {[]}", "(replacet {[8 6]} 9 6) -> {[8 6]}", "(replacet {[9 7 1] {[1 7]} {[8 9]}} 0 7) -> {[9 7 1] {[1 7]} {[8 9]}}", "(replacet {[7 1 9 4] {[]}} 3 6) -> {[7 1 9 4] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.896113, "examples": ["(replacet {} 2 5) -> {}", "(replacet {[7 4 5 0] {[1 7] {[] {[8]}}}} 2 6) -> {[7 4 5 0] {[1 7] {[] {[8]}}}}", "(replacet {[4 4] {[7 7 3 6 3] {[5]} {[1 5 4]}}} 4 4) -> {[4 4] {[7 7 3 6 3] {[5]} {[1 5 4]}}}", "(replacet {[8] {[5 7] {[] {[3 0]}}}} 4 7) -> {[8] {[5 7] {[] {[3 0]}}}}", "(replacet {[] {[] {[7 2]}}} 9 1) -> {[] {[] {[7 2]}}}", "(replacet {[6 6 1 1]} 6 9) -> {[9 9 1 1]}", "(replacet {[2 2 2 1 3] {[9 0 2 8 7]} {[0 4 5 2 4] {[6 5 2 9]} {[5 7]}}} 5 1) -> {[2 2 2 1 3] {[9 0 2 8 7]} {[0 4 1 2 4] {[6 1 2 9]} {[1 7]}}}", "(replacet {[7] {[6 1 2 5]} {[7 4 4 7]}} 7 7) -> {[7] {[6 1 2 5]} {[7 4 4 7]}}", "(replacet {[1 2 8 5] {[3 5 7]} {[5 2 1 8 2] {[1 8 6 9]}}} 2 1) -> {[1 1 8 5] {[3 5 7]} {[5 1 1 8 1] {[1 8 6 9]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.699621, "examples": ["(replacet {} 3 6) -> {}", "(replacet {[7 8] {[2] {[2 5 9]} {[0 1 6 1 2] {[3]} {[6 3 0 1 7]}}}} 2 4) -> {[7 8] {[4] {[4 5 9]} {[0 1 6 1 4] {[3]} {[6 3 0 1 7]}}}}", "(replacet {[4]} 3 3) -> {[4]}", "(replacet {[8] {[]}} 9 2) -> {[8] {[]}}", "(replacet {[4 9]} 9 0) -> {[4 0]}", "(replacet {[0 6]} 0 0) -> {[0 6]}", "(replacet {[1 8 1] {[4 2 6] {[4 3 5 9 3]} {[6 1 6 5 2]}}} 1 0) -> {[0 8 0] {[4 2 6] {[4 3 5 9 3]} {[6 0 6 5 2]}}}", "(replacet {[1 8 0] {[6] {[]}} {[4 3 4]}} 2 0) -> {[1 8 0] {[6] {[]}} {[4 3 4]}}", "(replacet {[2 5 4 0] {[6 7] {[6 1 6] {[5 2 5]} {[]}} {[6 4] {[8 0 4 5 3]} {[2]}}}} 9 4) -> {[2 5 4 0] {[6 7] {[6 1 6] {[5 2 5]} {[]}} {[6 4] {[8 0 4 5 3]} {[2]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.9943, "examples": ["(replacet {} 1 3) -> {}", "(replacet {[7 2 0 8 1] {[1 1 3] {[7 2 1]}}} 9 2) -> {[7 2 0 8 1] {[1 1 3] {[7 2 1]}}}", "(replacet {[2 0] {[3 3 8 3]}} 5 6) -> {[2 0] {[3 3 8 3]}}", "(replacet {[0 4] {[5 1 1 0 5]} {[3 2]}} 9 1) -> {[0 4] {[5 1 1 0 5]} {[3 2]}}", "(replacet {[3 5 7 2] {[]} {[7 1 9]}} 1 4) -> {[3 5 7 2] {[]} {[7 4 9]}}", "(replacet {} 1 9) -> {}", "(replacet {} 1 5) -> {}", "(replacet {[1 9 9 6 2]} 3 0) -> {[1 9 9 6 2]}", "(replacet {[0]} 9 4) -> {[0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.184456, "examples": ["(replacet {} 6 3) -> {}", "(replacet {[1 3] {[4 1 0]}} 8 2) -> {[1 3] {[4 1 0]}}", "(replacet {[1 8 5 4 3] {[7 2 7 9 8]}} 6 0) -> {[1 8 5 4 3] {[7 2 7 9 8]}}", "(replacet {[] {[4 0 5 8 8] {[]}} {[6 2] {[5 5]} {[]}}} 6 3) -> {[] {[4 0 5 8 8] {[]}} {[3 2] {[5 5]} {[]}}}", "(replacet {[5 4 7]} 0 1) -> {[5 4 7]}", "(replacet {[7] {[9 5]} {[0]}} 6 5) -> {[7] {[9 5]} {[0]}}", "(replacet {[1 7 8]} 4 5) -> {[1 7 8]}", "(replacet {} 2 2) -> {}", "(replacet {[2 8 4] {[5 2 2 5 5]} {[]}} 8 0) -> {[2 0 4] {[5 2 2 5 5]} {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.614295, "examples": ["(replacet {} 1 8) -> {}", "(replacet {[0 4 1 7 9]} 8 4) -> {[0 4 1 7 9]}", "(replacet {} 8 5) -> {}", "(replacet {[6 8 2 9] {[] {[] {[2 3 5 0]}} {[2] {[7 4 1]}}} {[7 1 7 6 5] {[] {[3 6 4 9]} {[3 6 8 0]}}}} 9 3) -> {[6 8 2 3] {[] {[] {[2 3 5 0]}} {[2] {[7 4 1]}}} {[7 1 7 6 5] {[] {[3 6 4 3]} {[3 6 8 0]}}}}", "(replacet {[6 8 6] {[9] {[3 5]} {[0 9 2 5 8]}}} 7 6) -> {[6 8 6] {[9] {[3 5]} {[0 9 2 5 8]}}}", "(replacet {[1 6 8 0 2]} 9 2) -> {[1 6 8 0 2]}", "(replacet {[5]} 2 1) -> {[5]}", "(replacet {[9 3 6]} 3 9) -> {[9 9 6]}", "(replacet {[5 1 5 3 9] {[5 0 3 9 2]} {[3 3 5]}} 1 8) -> {[5 8 5 3 9] {[5 0 3 9 2]} {[3 3 5]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.490705, "examples": ["(replacet {} 9 4) -> {}", "(replacet {} 8 4) -> {}", "(replacet {[5 2 9 7 3] {[3 9 4 6 9]}} 0 7) -> {[5 2 9 7 3] {[3 9 4 6 9]}}", "(replacet {[0 1 7 5 7] {[9 0 7 8 0] {[2 2 2 5 0] {[1]}}}} 9 2) -> {[0 1 7 5 7] {[2 0 7 8 0] {[2 2 2 5 0] {[1]}}}}", "(replacet {} 8 6) -> {}", "(replacet {[7 4]} 7 6) -> {[6 4]}", "(replacet {[5 9] {[7 0 7] {[0]}}} 4 2) -> {[5 9] {[7 0 7] {[0]}}}", "(replacet {[2 1 7 2 3]} 4 7) -> {[2 1 7 2 3]}", "(replacet {[9]} 3 2) -> {[9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.070343, "examples": ["(replacet {} 9 5) -> {}", "(replacet {[5 0] {[2 2] {[8 2 0]}} {[5 0] {[]}}} 1 8) -> {[5 0] {[2 2] {[8 2 0]}} {[5 0] {[]}}}", "(replacet {[1]} 3 8) -> {[1]}", "(replacet {[1 2] {[8 4 7] {[1 7 2 7 1]} {[0 1 9]}}} 8 2) -> {[1 2] {[2 4 7] {[1 7 2 7 1]} {[0 1 9]}}}", "(replacet {[6 5 5]} 4 4) -> {[6 5 5]}", "(replacet {} 6 5) -> {}", "(replacet {[]} 8 3) -> {[]}", "(replacet {[5 8 3 5] {[4 2 5]} {[4 7 5]}} 8 0) -> {[5 0 3 5] {[4 2 5]} {[4 7 5]}}", "(replacet {} 4 1) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.807097, "examples": ["(replacet {} 6 3) -> {}", "(replacet {} 9 5) -> {}", "(replacet {[] {[9 8 8]} {[4 3 9 5] {[4 7]} {[0 5 5] {[2 9 2 8]}}}} 7 5) -> {[] {[9 8 8]} {[4 3 9 5] {[4 5]} {[0 5 5] {[2 9 2 8]}}}}", "(replacet {[5] {[5]} {[8 4 6]}} 4 5) -> {[5] {[5]} {[8 5 6]}}", "(replacet {[9] {[8 5 7 0]}} 2 4) -> {[9] {[8 5 7 0]}}", "(replacet {[8] {[] {[]}} {[4]}} 5 5) -> {[8] {[] {[]}} {[4]}}", "(replacet {[2] {[0 3 5]}} 2 9) -> {[9] {[0 3 5]}}", "(replacet {[] {[2 9 9 4 4]}} 6 5) -> {[] {[2 9 9 4 4]}}", "(replacet {[2 2 1]} 7 2) -> {[2 2 1]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.627145, "examples": ["(replacet {} 5 8) -> {}", "(replacet {} 9 7) -> {}", "(replacet {[3 3]} 8 5) -> {[3 3]}", "(replacet {[0 0]} 0 9) -> {[9 9]}", "(replacet {[1 5 3 2] {[3] {[3 1 2 2] {[8 8 4]}} {[] {[]}}} {[6 1 6]}} 5 4) -> {[1 4 3 2] {[3] {[3 1 2 2] {[8 8 4]}} {[] {[]}}} {[6 1 6]}}", "(replacet {[7] {[]}} 3 1) -> {[7] {[]}}", "(replacet {[6 4]} 0 3) -> {[6 4]}", "(replacet {[5 4 9]} 5 5) -> {[5 4 9]}", "(replacet {[9] {[4 4 0 8]}} 3 6) -> {[9] {[4 4 0 8]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.483604, "examples": ["(replacet {} 0 6) -> {}", "(replacet {[8 9 8] {[2 0 5 1]}} 1 8) -> {[8 9 8] {[2 0 5 8]}}", "(replacet {[9 5 6 1] {[] {[9 7 9]} {[9] {[7 4]}}} {[1 2 2 4 2] {[5 1 9 7 8]}}} 2 4) -> {[9 5 6 1] {[] {[9 7 9]} {[9] {[7 4]}}} {[1 4 4 4 4] {[5 1 9 7 8]}}}", "(replacet {[] {[7] {[]}}} 4 9) -> {[] {[7] {[]}}}", "(replacet {} 0 1) -> {}", "(replacet {} 1 6) -> {}", "(replacet {[]} 6 2) -> {[]}", "(replacet {[4 3] {[0 1]}} 7 2) -> {[4 3] {[0 1]}}", "(replacet {[1 9]} 8 9) -> {[1 9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.806921, "examples": ["(replacet {} 6 4) -> {}", "(replacet {[3] {[5 0 2 9 2] {[3 9]} {[8 2]}} {[8 6 5] {[5 1 9]} {[1 1 0 2]}}} 2 6) -> {[3] {[5 0 6 9 6] {[3 9]} {[8 6]}} {[8 6 5] {[5 1 9]} {[1 1 0 6]}}}", "(replacet {[]} 6 5) -> {[]}", "(replacet {} 5 7) -> {}", "(replacet {} 1 6) -> {}", "(replacet {[3 2 7] {[8] {[9 2 3 4 8]} {[2 3]}} {[2] {[5 9 2]} {[2 1]}}} 8 0) -> {[3 2 7] {[0] {[9 2 3 4 0]} {[2 3]}} {[2] {[5 9 2]} {[2 1]}}}", "(replacet {} 0 5) -> {}", "(replacet {[] {[5 7 0 3]} {[6 7]}} 1 9) -> {[] {[5 7 0 3]} {[6 7]}}", "(replacet {[7 5 6] {[]} {[5]}} 0 1) -> {[7 5 6] {[]} {[5]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.63154, "examples": ["(replacet {} 8 5) -> {}", "(replacet {[]} 5 2) -> {[]}", "(replacet {} 4 2) -> {}", "(replacet {[5 1] {[0 8] {[8 5 5 7 8] {[7 9]} {[9 5]}}} {[3 9]}} 0 4) -> {[5 1] {[4 8] {[8 5 5 7 8] {[7 9]} {[9 5]}}} {[3 9]}}", "(replacet {} 4 0) -> {}", "(replacet {} 0 1) -> {}", "(replacet {[5 8 1 5 5]} 5 7) -> {[7 8 1 7 7]}", "(replacet {[7 1 8] {[3 8 9 3] {[0 8 4] {[]}} {[4 9]}} {[4 2 5]}} 0 4) -> {[7 1 8] {[3 8 9 3] {[4 8 4] {[]}} {[4 9]}} {[4 2 5]}}", "(replacet {} 9 4) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.500828, "examples": ["(replacet {} 9 3) -> {}", "(replacet {} 1 6) -> {}", "(replacet {[9 0 7 1] {[4]}} 4 1) -> {[9 0 7 1] {[1]}}", "(replacet {} 7 5) -> {}", "(replacet {[]} 0 3) -> {[]}", "(replacet {[3] {[5 7] {[3 3 9 9]} {[8 8] {[0 2 6]}}}} 3 6) -> {[6] {[5 7] {[6 6 9 9]} {[8 8] {[0 2 6]}}}}", "(replacet {[5 3 5 3]} 0 9) -> {[5 3 5 3]}", "(replacet {[1 1 6]} 8 8) -> {[1 1 6]}", "(replacet {[] {[5 0]}} 3 4) -> {[] {[5 0]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.563522, "examples": ["(replacet {} 2 7) -> {}", "(replacet {[0 1] {[5 7 6]} {[4 1 7]}} 4 7) -> {[0 1] {[5 7 6]} {[7 1 7]}}", "(replacet {} 3 7) -> {}", "(replacet {[] {[] {[4 2 8 9 8] {[1 6 8 1]} {[]}}}} 7 3) -> {[] {[] {[4 2 8 9 8] {[1 6 8 1]} {[]}}}}", "(replacet {[1] {[1] {[7]}} {[3 5 5 6 9] {[3 3] {[7 5 0]}} {[8 0 5] {[7 2 3 4 6]}}}} 1 6) -> {[6] {[6] {[7]}} {[3 5 5 6 9] {[3 3] {[7 5 0]}} {[8 0 5] {[7 2 3 4 6]}}}}", "(replacet {} 9 7) -> {}", "(replacet {[5 5 1 2 2] {[5 9]}} 5 6) -> {[6 6 1 2 2] {[6 9]}}", "(replacet {} 8 6) -> {}", "(replacet {[4 6 6 9]} 7 9) -> {[4 6 6 9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.955325, "examples": ["(replacet {} 5 3) -> {}", "(replacet {[6] {[1 2]} {[8 1 2 5]}} 9 5) -> {[6] {[1 2]} {[8 1 2 5]}}", "(replacet {} 2 4) -> {}", "(replacet {[4] {[0 0] {[4 5 9 6] {[]}}}} 0 5) -> {[4] {[5 5] {[4 5 9 6] {[]}}}}", "(replacet {[1 8 4 7 7]} 3 2) -> {[1 8 4 7 7]}", "(replacet {} 2 6) -> {}", "(replacet {[] {[4 2 7 5]}} 2 8) -> {[] {[4 8 7 5]}}", "(replacet {[0]} 3 9) -> {[0]}", "(replacet {} 7 6) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.412908, "examples": ["(replacet {} 1 1) -> {}", "(replacet {[0] {[2 5 7]} {[] {[2]} {[1 2 2 1 7]}}} 4 1) -> {[0] {[2 5 7]} {[] {[2]} {[1 2 2 1 7]}}}", "(replacet {[5 6 8 7 5] {[2 6 8 4 7] {[5 0 3 0 9] {[3 0]} {[3 5 4]}}}} 2 7) -> {[5 6 8 7 5] {[7 6 8 4 7] {[5 0 3 0 9] {[3 0]} {[3 5 4]}}}}", "(replacet {} 8 5) -> {}", "(replacet {[0 1] {[4 5 4 8]} {[8 7 6 6 3]}} 3 9) -> {[0 1] {[4 5 4 8]} {[8 7 6 6 9]}}", "(replacet {[4 5 8 3 8]} 1 9) -> {[4 5 8 3 8]}", "(replacet {[2 4 4 4 0]} 9 6) -> {[2 4 4 4 0]}", "(replacet {[8 9 7] {[2]}} 5 5) -> {[8 9 7] {[2]}}", "(replacet {[]} 8 1) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.692208, "examples": ["(replacet {} 4 7) -> {}", "(replacet {[8 2] {[3 7 2 4 3] {[5]} {[5 1 1 7]}} {[3 0 5 5]}} 8 2) -> {[2 2] {[3 7 2 4 3] {[5]} {[5 1 1 7]}} {[3 0 5 5]}}", "(replacet {[7 3 9 6 4] {[3] {[3 8 5 6 8]}}} 1 0) -> {[7 3 9 6 4] {[3] {[3 8 5 6 8]}}}", "(replacet {} 7 7) -> {}", "(replacet {[] {[1 5 2]} {[1 8] {[0 5 7 0]} {[8]}}} 8 9) -> {[] {[1 5 2]} {[1 9] {[0 5 7 0]} {[9]}}}", "(replacet {} 2 9) -> {}", "(replacet {[8 5]} 5 1) -> {[8 1]}", "(replacet {[5 1 6 1 3] {[4 8 6 8 3]} {[4 4 7 3]}} 8 3) -> {[5 1 6 1 3] {[4 3 6 3 3]} {[4 4 7 3]}}", "(replacet {[5 4] {[0 6 4 2 7] {[7 8 0]} {[2 8] {[1 1 9 8 2]}}} {[2 5 7 3 7] {[4 9 5] {[8 9 9 9]} {[]}}}} 5 6) -> {[6 4] {[0 6 4 2 7] {[7 8 0]} {[2 8] {[1 1 9 8 2]}}} {[2 6 7 3 7] {[4 9 6] {[8 9 9 9]} {[]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.362048, "examples": ["(replacet {} 9 0) -> {}", "(replacet {[3 0 2 4] {[4 6]}} 4 0) -> {[3 0 2 0] {[0 6]}}", "(replacet {[9 9 5 0 8]} 9 5) -> {[5 5 5 0 8]}", "(replacet {} 6 8) -> {}", "(replacet {} 4 9) -> {}", "(replacet {[8] {[7 7 2]} {[3 9 9] {[9 1 6 8]} {[8 9 5 6 1]}}} 6 9) -> {[8] {[7 7 2]} {[3 9 9] {[9 1 9 8]} {[8 9 5 9 1]}}}", "(replacet {[7 7 8]} 5 8) -> {[7 7 8]}", "(replacet {[9 8 1 2 1] {[6] {[4 1 3 5]}}} 8 3) -> {[9 3 1 2 1] {[6] {[4 1 3 5]}}}", "(replacet {[6 1] {[8]} {[7]}} 0 9) -> {[6 1] {[8]} {[7]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 14.276022, "examples": ["(replacet {} 1 3) -> {}", "(replacet {[] {[4 7 6 1]} {[] {[7 8 3]} {[]}}} 2 7) -> {[] {[4 7 6 1]} {[] {[7 8 3]} {[]}}}", "(replacet {[5 0]} 2 9) -> {[5 0]}", "(replacet {} 8 9) -> {}", "(replacet {[0 2 9 0 1]} 1 4) -> {[0 2 9 0 4]}", "(replacet {[3]} 8 9) -> {[3]}", "(replacet {[] {[1 8 1 6 5] {[1 1 2]}} {[4 6 4] {[0 9 1 7 3]} {[4 6 8 4 6]}}} 9 4) -> {[] {[1 8 1 6 5] {[1 1 2]}} {[4 6 4] {[0 4 1 7 3]} {[4 6 8 4 6]}}}", "(replacet {[4 8 9]} 4 7) -> {[7 8 9]}", "(replacet {[2]} 5 0) -> {[2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.115887, "examples": ["(replacet {} 0 7) -> {}", "(replacet {} 6 1) -> {}", "(replacet {[6 1 9 6] {[2]}} 7 7) -> {[6 1 9 6] {[2]}}", "(replacet {[7 6 1 5 2]} 9 4) -> {[7 6 1 5 2]}", "(replacet {} 3 9) -> {}", "(replacet {} 4 0) -> {}", "(replacet {[2 7 9]} 3 8) -> {[2 7 9]}", "(replacet {[2 5]} 5 3) -> {[2 3]}", "(replacet {[4 0 8 9 4] {[3 9 3]}} 6 5) -> {[4 0 8 9 4] {[3 9 3]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.669968, "examples": ["(replacet {} 3 3) -> {}", "(replacet {} 9 0) -> {}", "(replacet {[1] {[7 6 2] {[1]}}} 2 7) -> {[1] {[7 6 7] {[1]}}}", "(replacet {[]} 5 5) -> {[]}", "(replacet {[4 5 3 2 6]} 8 0) -> {[4 5 3 2 6]}", "(replacet {[0 7 0] {[9]} {[0 9]}} 9 9) -> {[0 7 0] {[9]} {[0 9]}}", "(replacet {[4 0 2 8]} 3 1) -> {[4 0 2 8]}", "(replacet {} 0 9) -> {}", "(replacet {[4 8 8]} 7 3) -> {[4 8 8]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.172943, "examples": ["(replacet {} 1 3) -> {}", "(replacet {[5 9 4 6] {[] {[2 7 1 9 9]}} {[5 7 0 6 2] {[8 5 6 9 8]} {[3 7]}}} 2 7) -> {[5 9 4 6] {[] {[7 7 1 9 9]}} {[5 7 0 6 7] {[8 5 6 9 8]} {[3 7]}}}", "(replacet {[8 9 8] {[5 8 2 0 8] {[]} {[8 1]}}} 6 1) -> {[8 9 8] {[5 8 2 0 8] {[]} {[8 1]}}}", "(replacet {[2 1 0 5] {[1] {[3 9 8]}}} 8 0) -> {[2 1 0 5] {[1] {[3 9 0]}}}", "(replacet {[5] {[9 3]}} 9 9) -> {[5] {[9 3]}}", "(replacet {[8 3 8] {[]}} 8 9) -> {[9 3 9] {[]}}", "(replacet {} 5 5) -> {}", "(replacet {} 9 7) -> {}", "(replacet {[9 4 2 2]} 0 2) -> {[9 4 2 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.227699, "examples": ["(replacet {} 0 0) -> {}", "(replacet {[7 3 9 0] {[0 1]}} 9 1) -> {[7 3 1 0] {[0 1]}}", "(replacet {} 9 3) -> {}", "(replacet {[1 2 0 2 7] {[1 9 7 3] {[4 8 4]} {[8 0 7 0 8]}}} 7 2) -> {[1 2 0 2 2] {[1 9 2 3] {[4 8 4]} {[8 0 2 0 8]}}}", "(replacet {[5 1 3 3 5]} 5 2) -> {[2 1 3 3 2]}", "(replacet {[] {[]}} 8 1) -> {[] {[]}}", "(replacet {[8 9] {[7 4 1 0] {[8 8 4] {[0 2 0 2 8]} {[5 6 3 5 5]}}}} 9 2) -> {[8 2] {[7 4 1 0] {[8 8 4] {[0 2 0 2 8]} {[5 6 3 5 5]}}}}", "(replacet {[]} 0 0) -> {[]}", "(replacet {[6 3 6 6] {[]}} 5 8) -> {[6 3 6 6] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.95852, "examples": ["(replacet {} 9 4) -> {}", "(replacet {[5 5] {[2 5 3 3]}} 6 8) -> {[5 5] {[2 5 3 3]}}", "(replacet {} 2 2) -> {}", "(replacet {[3 3] {[0 0 7] {[4 1 0 5] {[8 9 5]}}} {[8 6 2 3 1] {[] {[4 3 2]}} {[2] {[4 6]} {[3 0 0]}}}} 1 4) -> {[3 3] {[0 0 7] {[4 4 0 5] {[8 9 5]}}} {[8 6 2 3 4] {[] {[4 3 2]}} {[2] {[4 6]} {[3 0 0]}}}}", "(replacet {} 8 1) -> {}", "(replacet {} 2 4) -> {}", "(replacet {[] {[2 7 4 1 7] {[0]}} {[9 6 2 8 8] {[8 5 7 5 0]} {[]}}} 1 0) -> {[] {[2 7 4 0 7] {[0]}} {[9 6 2 8 8] {[8 5 7 5 0]} {[]}}}", "(replacet {} 3 0) -> {}", "(replacet {[]} 0 4) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.316018, "examples": ["(replacet {} 7 8) -> {}", "(replacet {} 9 6) -> {}", "(replacet {} 8 9) -> {}", "(replacet {[0 6 0 0]} 6 5) -> {[0 5 0 0]}", "(replacet {[3 4 2] {[6 3]}} 1 1) -> {[3 4 2] {[6 3]}}", "(replacet {[3 5 0]} 2 5) -> {[3 5 0]}", "(replacet {[4 6 4] {[3 1 1 9 7]} {[0]}} 7 5) -> {[4 6 4] {[3 1 1 9 5]} {[0]}}", "(replacet {[] {[5 9 5] {[] {[9 7 4 7 2]}} {[] {[]} {[2 5 5 2]}}} {[6 0 0 5 9]}} 0 7) -> {[] {[5 9 5] {[] {[9 7 4 7 2]}} {[] {[]} {[2 5 5 2]}}} {[6 7 7 5 9]}}", "(replacet {[0 3]} 2 2) -> {[0 3]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.897339, "examples": ["(replacet {} 3 1) -> {}", "(replacet {[8 4 6] {[1 1 8 2 9]}} 8 5) -> {[5 4 6] {[1 1 5 2 9]}}", "(replacet {} 8 5) -> {}", "(replacet {} 8 4) -> {}", "(replacet {[1 0] {[9 1 6 6 0]}} 8 2) -> {[1 0] {[9 1 6 6 0]}}", "(replacet {[6] {[2 2 7 8 4] {[5 6 4 9 9] {[4 2]} {[]}}} {[]}} 0 5) -> {[6] {[2 2 7 8 4] {[5 6 4 9 9] {[4 2]} {[]}}} {[]}}", "(replacet {} 4 2) -> {}", "(replacet {[0] {[]} {[] {[2 8 1]} {[1 2 3]}}} 3 1) -> {[0] {[]} {[] {[2 8 1]} {[1 2 1]}}}", "(replacet {[5 7 1 0]} 4 3) -> {[5 7 1 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.76964, "examples": ["(replacet {} 5 5) -> {}", "(replacet {[9 4]} 2 3) -> {[9 4]}", "(replacet {[3 5 5] {[9]} {[6]}} 2 0) -> {[3 5 5] {[9]} {[6]}}", "(replacet {} 1 7) -> {}", "(replacet {[] {[4 5 5] {[]}} {[0] {[]}}} 8 0) -> {[] {[4 5 5] {[]}} {[0] {[]}}}", "(replacet {[6 0] {[]}} 0 9) -> {[6 9] {[]}}", "(replacet {[] {[8 9 7 3] {[4 0 0] {[]} {[3 1 1 1]}}}} 1 3) -> {[] {[8 9 7 3] {[4 0 0] {[]} {[3 3 3 3]}}}}", "(replacet {[9 8 0 6 3]} 3 9) -> {[9 8 0 6 9]}", "(replacet {[3 8 7] {[7 5 0 3]}} 2 1) -> {[3 8 7] {[7 5 0 3]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.54319, "examples": ["(replacet {} 6 5) -> {}", "(replacet {[] {[6] {[7 6 3 9 7]} {[3 7 8 4]}} {[7 7 5 0] {[8 1 4]}}} 3 9) -> {[] {[6] {[7 6 9 9 7]} {[9 7 8 4]}} {[7 7 5 0] {[8 1 4]}}}", "(replacet {[7 6 2] {[]}} 8 2) -> {[7 6 2] {[]}}", "(replacet {[9] {[]} {[] {[2]} {[]}}} 6 5) -> {[9] {[]} {[] {[2]} {[]}}}", "(replacet {[3 8 5] {[7 1 6]} {[8 5 5 7]}} 8 7) -> {[3 7 5] {[7 1 6]} {[7 5 5 7]}}", "(replacet {[3 2] {[6 2] {[]}} {[6 7] {[]}}} 5 6) -> {[3 2] {[6 2] {[]}} {[6 7] {[]}}}", "(replacet {} 8 0) -> {}", "(replacet {} 2 3) -> {}", "(replacet {[9 4 0 3 7] {[]}} 0 8) -> {[9 4 8 3 7] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 0.001163, "examples": ["(replacet {} 3 8) -> {}", "(replacet {} 7 3) -> {}", "(replacet {} 0 8) -> {}", "(replacet {[] {[8 4 9] {[]}}} 6 3) -> {[] {[8 4 9] {[]}}}", "(replacet {} 3 1) -> {}", "(replacet {[9 7 9 0] {[9 6]}} 8 3) -> {[9 7 9 0] {[9 6]}}", "(replacet {[8 9 2] {[4 9 2] {[9 1 8 6 7] {[]}} {[] {[1 6]}}} {[4 2 1 2]}} 5 2) -> {[8 9 2] {[4 9 2] {[9 1 8 6 7] {[]}} {[] {[1 6]}}} {[4 2 1 2]}}", "(replacet {} 4 7) -> {}", "(replacet {} 7 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 0.001521, "examples": ["(replacet {} 3 4) -> {}", "(replacet {[3 1] {[4 2 7 9 4]}} 5 1) -> {[3 1] {[4 2 7 9 4]}}", "(replacet {} 8 6) -> {}", "(replacet {[1]} 9 3) -> {[1]}", "(replacet {[4 7 8 2 2] {[6 1 1]} {[]}} 3 7) -> {[4 7 8 2 2] {[6 1 1]} {[]}}", "(replacet {[8 9 2] {[7 4 4 6]}} 5 7) -> {[8 9 2] {[7 4 4 6]}}", "(replacet {[]} 3 6) -> {[]}", "(replacet {[5 0 9]} 3 4) -> {[5 0 9]}", "(replacet {[]} 7 0) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 8.414009, "examples": ["(replacet {} 8 2) -> {}", "(replacet {[5]} 1 5) -> {[5]}", "(replacet {[9]} 7 0) -> {[9]}", "(replacet {} 8 0) -> {}", "(replacet {[]} 1 6) -> {[]}", "(replacet {} 2 9) -> {}", "(replacet {[1] {[9 4 2 2 9]}} 9 0) -> {[1] {[0 4 2 2 0]}}", "(replacet {[0 5]} 4 2) -> {[0 5]}", "(replacet {} 5 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 19.496196, "examples": ["(replacet {} 8 0) -> {}", "(replacet {[] {[1 3] {[3] {[]}} {[5 9 6 3] {[2 2]} {[7]}}} {[9] {[] {[7 0 5 0]}}}} 8 6) -> {[] {[1 3] {[3] {[]}} {[5 9 6 3] {[2 2]} {[7]}}} {[9] {[] {[7 0 5 0]}}}}", "(replacet {[8 2 9 7 5] {[8 8 3] {[2]} {[]}} {[3]}} 0 9) -> {[8 2 9 7 5] {[8 8 3] {[2]} {[]}} {[3]}}", "(replacet {[8]} 4 4) -> {[8]}", "(replacet {[1 2 2 9 9]} 4 9) -> {[1 2 2 9 9]}", "(replacet {[] {[]} {[1 6 8] {[] {[6 7 9]}}}} 8 0) -> {[] {[]} {[1 6 0] {[] {[6 7 9]}}}}", "(replacet {[1] {[6 6 3 7 5]} {[2 9 7 2]}} 7 6) -> {[1] {[6 6 3 6 5]} {[2 9 6 2]}}", "(replacet {[2 4]} 9 8) -> {[2 4]}", "(replacet {} 7 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.984222, "examples": ["(replacet {} 8 3) -> {}", "(replacet {[9 5 2 8] {[6 0 5 2 3] {[3 5 6 0] {[9 4 7]} {[0]}}}} 2 8) -> {[9 5 8 8] {[6 0 5 8 3] {[3 5 6 0] {[9 4 7]} {[0]}}}}", "(replacet {[4 5 3 3]} 1 0) -> {[4 5 3 3]}", "(replacet {[5 3 7 2 2] {[] {[1 6]}} {[5 9 4 4 0] {[3 5 8 2]}}} 5 2) -> {[2 3 7 2 2] {[] {[1 6]}} {[2 9 4 4 0] {[3 2 8 2]}}}", "(replacet {[0 9]} 0 3) -> {[3 9]}", "(replacet {[] {[5 0 6 1] {[9 5 9 8 5]}}} 5 4) -> {[] {[4 0 6 1] {[9 4 9 8 4]}}}", "(replacet {} 1 8) -> {}", "(replacet {[5 1 0] {[]}} 4 9) -> {[5 1 0] {[]}}", "(replacet {} 3 9) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.049433, "examples": ["(replacet {} 8 9) -> {}", "(replacet {} 7 0) -> {}", "(replacet {[2 5 0]} 0 9) -> {[2 5 9]}", "(replacet {[9 1 9 8]} 9 0) -> {[0 1 0 8]}", "(replacet {[9 0] {[0 2 0] {[4 1 3 5] {[]}}} {[5 4 6] {[9 6 8 6] {[0 8 6]} {[2 3 6 7]}} {[]}}} 2 3) -> {[9 0] {[0 3 0] {[4 1 3 5] {[]}}} {[5 4 6] {[9 6 8 6] {[0 8 6]} {[3 3 6 7]}} {[]}}}", "(replacet {[1 9 4 9] {[]} {[7 2 8]}} 1 1) -> {[1 9 4 9] {[]} {[7 2 8]}}", "(replacet {[0 1] {[] {[1]}} {[6 9 4 3 0] {[7]}}} 9 0) -> {[0 1] {[] {[1]}} {[6 0 4 3 0] {[7]}}}", "(replacet {[4 0]} 3 3) -> {[4 0]}", "(replacet {[2 7]} 5 8) -> {[2 7]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.164421, "examples": ["(replacet {} 5 7) -> {}", "(replacet {[4 6 2]} 6 4) -> {[4 4 2]}", "(replacet {[7 1 2]} 3 6) -> {[7 1 2]}", "(replacet {[] {[]} {[1] {[8 6 0 3 9] {[6 9 5]} {[7 2 7 7 1]}}}} 8 4) -> {[] {[]} {[1] {[4 6 0 3 9] {[6 9 5]} {[7 2 7 7 1]}}}}", "(replacet {[4]} 1 7) -> {[4]}", "(replacet {[4 1 0]} 2 7) -> {[4 1 0]}", "(replacet {} 7 5) -> {}", "(replacet {[1 2 7 4 1] {[6 6 8] {[7 5] {[6]}}}} 4 6) -> {[1 2 7 6 1] {[6 6 8] {[7 5] {[6]}}}}", "(replacet {[4 0]} 6 8) -> {[4 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.838509, "examples": ["(replacet {} 5 2) -> {}", "(replacet {[] {[7]}} 8 1) -> {[] {[7]}}", "(replacet {} 3 3) -> {}", "(replacet {} 1 6) -> {}", "(replacet {[4 7 7 0 2]} 3 8) -> {[4 7 7 0 2]}", "(replacet {[7 4]} 7 6) -> {[6 4]}", "(replacet {[9] {[3 9] {[9 4] {[9 5 8 4]} {[0 1]}} {[4 3 1 8 5]}} {[6 3 7 3] {[5 8 9] {[2 1 0]} {[5 2]}}}} 8 0) -> {[9] {[3 9] {[9 4] {[9 5 0 4]} {[0 1]}} {[4 3 1 0 5]}} {[6 3 7 3] {[5 0 9] {[2 1 0]} {[5 2]}}}}", "(replacet {} 5 8) -> {}", "(replacet {[3 3 8]} 8 6) -> {[3 3 6]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.709528, "examples": ["(replacet {} 9 5) -> {}", "(replacet {[9 6 7] {[0 6 6]} {[7 2 5 1]}} 8 2) -> {[9 6 7] {[0 6 6]} {[7 2 5 1]}}", "(replacet {[7 4 6] {[] {[9]}}} 4 7) -> {[7 7 6] {[] {[9]}}}", "(replacet {[7] {[] {[9 4 7 8]}}} 0 1) -> {[7] {[] {[9 4 7 8]}}}", "(replacet {} 4 3) -> {}", "(replacet {[8 7] {[5 3 2]} {[1 5 0 7]}} 3 6) -> {[8 7] {[5 6 2]} {[1 5 0 7]}}", "(replacet {[0 3]} 9 6) -> {[0 3]}", "(replacet {[0 4 0 6 7]} 7 7) -> {[0 4 0 6 7]}", "(replacet {} 1 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.887539, "examples": ["(replacet {} 3 2) -> {}", "(replacet {[6 9 9 5 7]} 4 1) -> {[6 9 9 5 7]}", "(replacet {} 6 3) -> {}", "(replacet {[] {[1 1 9 9]}} 0 5) -> {[] {[1 1 9 9]}}", "(replacet {[8 0]} 4 4) -> {[8 0]}", "(replacet {} 5 5) -> {}", "(replacet {[]} 4 3) -> {[]}", "(replacet {} 1 2) -> {}", "(replacet {[3 8] {[9 0] {[4 0 8]} {[1 5 4 3 7]}} {[1 1 0 8] {[6 2]} {[0 1 0 8 8]}}} 0 3) -> {[3 8] {[9 3] {[4 3 8]} {[1 5 4 3 7]}} {[1 1 3 8] {[6 2]} {[3 1 3 8 8]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.30161, "examples": ["(replacet {} 8 3) -> {}", "(replacet {} 2 2) -> {}", "(replacet {[9 5 0 1] {[5 0 4] {[4 6 8 4 9]} {[7] {[1 9 7]}}}} 2 0) -> {[9 5 0 1] {[5 0 4] {[4 6 8 4 9]} {[7] {[1 9 7]}}}}", "(replacet {[7 4 0] {[1 2]} {[7 2 2 9 3]}} 2 7) -> {[7 4 0] {[1 7]} {[7 7 7 9 3]}}", "(replacet {} 4 2) -> {}", "(replacet {} 2 4) -> {}", "(replacet {} 5 4) -> {}", "(replacet {} 8 5) -> {}", "(replacet {[0 3 4 8 2]} 7 9) -> {[0 3 4 8 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.647058, "examples": ["(replacet {} 8 3) -> {}", "(replacet {[2] {[]} {[0 0]}} 6 8) -> {[2] {[]} {[0 0]}}", "(replacet {[2 3] {[1 2 2]}} 6 7) -> {[2 3] {[1 2 2]}}", "(replacet {[5 5]} 7 6) -> {[5 5]}", "(replacet {[]} 4 7) -> {[]}", "(replacet {[6] {[0 0 9 8] {[0 8 8]}} {[0 3]}} 1 7) -> {[6] {[0 0 9 8] {[0 8 8]}} {[0 3]}}", "(replacet {[1 8 1]} 0 2) -> {[1 8 1]}", "(replacet {[1]} 9 6) -> {[1]}", "(replacet {[2 8 8 5] {[2 4 2]}} 4 6) -> {[2 8 8 5] {[2 6 2]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.469391, "examples": ["(replacet {} 6 1) -> {}", "(replacet {[7 6 8 2 9] {[4 8 7 0 8] {[9]}} {[2]}} 5 9) -> {[7 6 8 2 9] {[4 8 7 0 8] {[9]}} {[2]}}", "(replacet {} 0 5) -> {}", "(replacet {} 6 3) -> {}", "(replacet {[9 3 4] {[1 7 9] {[2 1 6 0] {[9]} {[5 5 4]}}}} 2 5) -> {[9 3 4] {[1 7 9] {[5 1 6 0] {[9]} {[5 5 4]}}}}", "(replacet {[8 6 1 0 4] {[1 7 5 4] {[8] {[]}} {[4 6 7 9 6] {[1 7]} {[1]}}} {[2] {[] {[]}}}} 5 4) -> {[8 6 1 0 4] {[1 7 4 4] {[8] {[]}} {[4 6 7 9 6] {[1 7]} {[1]}}} {[2] {[] {[]}}}}", "(replacet {[2] {[6 0 9 5 9] {[1 0 3 0 3]} {[6 6]}} {[6 6 7 7] {[7 2 3 5]} {[8 8 5 1 3]}}} 5 2) -> {[2] {[6 0 9 2 9] {[1 0 3 0 3]} {[6 6]}} {[6 6 7 7] {[7 2 3 2]} {[8 8 2 1 3]}}}", "(replacet {} 4 4) -> {}", "(replacet {[0 4 8 5 2] {[]}} 3 2) -> {[0 4 8 5 2] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.568241, "examples": ["(replacet {} 3 7) -> {}", "(replacet {[3] {[5 5 7 5] {[] {[6 1 9 5]}} {[]}}} 8 3) -> {[3] {[5 5 7 5] {[] {[6 1 9 5]}} {[]}}}", "(replacet {[4 0] {[0 2 0]} {[2 3 4 1 7]}} 0 3) -> {[4 3] {[3 2 3]} {[2 3 4 1 7]}}", "(replacet {[5 1 3]} 2 0) -> {[5 1 3]}", "(replacet {[7 0 5] {[7 5 3 3]} {[1 6 3]}} 2 2) -> {[7 0 5] {[7 5 3 3]} {[1 6 3]}}", "(replacet {[]} 3 3) -> {[]}", "(replacet {} 7 1) -> {}", "(replacet {[] {[3 6] {[6 7] {[6 1]}} {[2] {[1 8 3]} {[5 6 6]}}} {[] {[2 4 4 2 2] {[3]} {[]}} {[1] {[]}}}} 9 3) -> {[] {[3 6] {[6 7] {[6 1]}} {[2] {[1 8 3]} {[5 6 6]}}} {[] {[2 4 4 2 2] {[3]} {[]}} {[1] {[]}}}}", "(replacet {[7 2]} 0 6) -> {[7 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.788158, "examples": ["(replacet {} 7 8) -> {}", "(replacet {[2 8 0 6] {[4]} {[8]}} 0 6) -> {[2 8 6 6] {[4]} {[8]}}", "(replacet {[1]} 6 3) -> {[1]}", "(replacet {[1 0 5 2 6] {[3 3 3 5 5]}} 3 1) -> {[1 0 5 2 6] {[1 1 1 5 5]}}", "(replacet {[1 7]} 8 3) -> {[1 7]}", "(replacet {[7 5 8 0] {[8 3] {[7] {[3 6 2 3 0]}}} {[]}} 0 6) -> {[7 5 8 6] {[8 3] {[7] {[3 6 2 3 6]}}} {[]}}", "(replacet {[6 5 5]} 8 1) -> {[6 5 5]}", "(replacet {[9 8 4] {[8] {[2 7 9]} {[2 3 5 5]}} {[3 3 2] {[5 9 5 2 8]}}} 5 4) -> {[9 8 4] {[8] {[2 7 9]} {[2 3 4 4]}} {[3 3 2] {[4 9 4 2 8]}}}", "(replacet {} 5 8) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.136905, "examples": ["(replacet {} 6 5) -> {}", "(replacet {[9 5]} 5 9) -> {[9 9]}", "(replacet {} 0 3) -> {}", "(replacet {[2 0 7 3] {[] {[]} {[] {[4]} {[0 3 3 6 1]}}}} 9 5) -> {[2 0 7 3] {[] {[]} {[] {[4]} {[0 3 3 6 1]}}}}", "(replacet {[0 8 9]} 1 5) -> {[0 8 9]}", "(replacet {} 2 3) -> {}", "(replacet {[7 7] {[7 4 8]}} 4 3) -> {[7 7] {[7 3 8]}}", "(replacet {} 4 6) -> {}", "(replacet {[4 9 7] {[6]}} 2 2) -> {[4 9 7] {[6]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.606102, "examples": ["(replacet {} 3 1) -> {}", "(replacet {[3 3 3 3 7]} 4 3) -> {[3 3 3 3 7]}", "(replacet {[0 2 2]} 8 7) -> {[0 2 2]}", "(replacet {[4 0 9 6] {[0]}} 4 2) -> {[2 0 9 6] {[0]}}", "(replacet {[4 1 7] {[7 6] {[] {[]} {[1 5 7 4]}}} {[1 3 0] {[9 9 2 8]} {[5 5 8] {[4 3]}}}} 8 3) -> {[4 1 7] {[7 6] {[] {[]} {[1 5 7 4]}}} {[1 3 0] {[9 9 2 3]} {[5 5 3] {[4 3]}}}}", "(replacet {[0 3 4 4 3] {[9]}} 5 3) -> {[0 3 4 4 3] {[9]}}", "(replacet {[]} 0 3) -> {[]}", "(replacet {[1 5 2 5] {[0 4 2 5 4]} {[9 5 3 1 5] {[1 5]}}} 6 6) -> {[1 5 2 5] {[0 4 2 5 4]} {[9 5 3 1 5] {[1 5]}}}", "(replacet {[8 3] {[5 5]}} 6 6) -> {[8 3] {[5 5]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.839481, "examples": ["(replacet {} 1 3) -> {}", "(replacet {[] {[3 3 9]} {[7 6]}} 3 4) -> {[] {[4 4 9]} {[7 6]}}", "(replacet {[]} 1 3) -> {[]}", "(replacet {[9]} 3 4) -> {[9]}", "(replacet {[4] {[7 7 6 3] {[]} {[6 5 2 4 6]}}} 5 8) -> {[4] {[7 7 6 3] {[]} {[6 8 2 4 6]}}}", "(replacet {} 5 8) -> {}", "(replacet {[8 8 0] {[7 4 9 2] {[3 5]} {[2 3 9]}} {[7] {[8 9 8]} {[1 0 5 2 1]}}} 0 0) -> {[8 8 0] {[7 4 9 2] {[3 5]} {[2 3 9]}} {[7] {[8 9 8]} {[1 0 5 2 1]}}}", "(replacet {[8 8 3] {[]}} 1 3) -> {[8 8 3] {[]}}", "(replacet {} 8 2) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.0171, "examples": ["(replacet {} 5 1) -> {}", "(replacet {} 2 8) -> {}", "(replacet {[]} 2 1) -> {[]}", "(replacet {[4 7 6] {[2 1]} {[4 5 9]}} 7 2) -> {[4 2 6] {[2 1]} {[4 5 9]}}", "(replacet {[5 6 3] {[3 7 4] {[1 5]} {[]}}} 9 5) -> {[5 6 3] {[3 7 4] {[1 5]} {[]}}}", "(replacet {[9 4 3 2] {[3] {[4 7 8 2 9]}}} 7 2) -> {[9 4 3 2] {[3] {[4 2 8 2 9]}}}", "(replacet {[] {[2] {[5 1 5 4]} {[8 2 1]}} {[6 3] {[4 9 1]} {[6 3 4 8]}}} 2 2) -> {[] {[2] {[5 1 5 4]} {[8 2 1]}} {[6 3] {[4 9 1]} {[6 3 4 8]}}}", "(replacet {} 2 6) -> {}", "(replacet {[3 0] {[4 0 0 9]} {[9 4 2 8]}} 6 6) -> {[3 0] {[4 0 0 9]} {[9 4 2 8]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.668245, "examples": ["(replacet {} 2 6) -> {}", "(replacet {} 4 1) -> {}", "(replacet {} 3 6) -> {}", "(replacet {[1 4 9] {[8]} {[3] {[] {[5 6 3 0]} {[0 9 8 2 5]}}}} 7 6) -> {[1 4 9] {[8]} {[3] {[] {[5 6 3 0]} {[0 9 8 2 5]}}}}", "(replacet {[4 2]} 3 0) -> {[4 2]}", "(replacet {} 5 9) -> {}", "(replacet {[6 3 0 8] {[]}} 0 5) -> {[6 3 5 8] {[]}}", "(replacet {[9]} 3 4) -> {[9]}", "(replacet {[]} 2 0) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.1588, "examples": ["(replacet {} 0 5) -> {}", "(replacet {[5 1 7] {[3 5]}} 8 9) -> {[5 1 7] {[3 5]}}", "(replacet {[6 7 9 2 8] {[2 8 8 6] {[8 6 2 4 8] {[2 8]}}} {[2 1 2 0] {[1] {[3 5 4 7]}}}} 2 0) -> {[6 7 9 0 8] {[0 8 8 6] {[8 6 0 4 8] {[0 8]}}} {[0 1 0 0] {[1] {[3 5 4 7]}}}}", "(replacet {} 8 7) -> {}", "(replacet {[6] {[] {[4]}} {[]}} 7 5) -> {[6] {[] {[4]}} {[]}}", "(replacet {[1 9] {[1 2 4] {[0 8]}} {[5 2]}} 5 8) -> {[1 9] {[1 2 4] {[0 8]}} {[8 2]}}", "(replacet {[0]} 7 4) -> {[0]}", "(replacet {} 9 4) -> {}", "(replacet {[5] {[6 3] {[9 0 3 7]}}} 0 6) -> {[5] {[6 3] {[9 6 3 7]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.543398, "examples": ["(replacet {} 1 4) -> {}", "(replacet {[3 6 4 3 1]} 5 6) -> {[3 6 4 3 1]}", "(replacet {[]} 0 7) -> {[]}", "(replacet {} 4 9) -> {}", "(replacet {[9 4 4 2 2]} 6 1) -> {[9 4 4 2 2]}", "(replacet {} 9 5) -> {}", "(replacet {[7 5] {[9 4 3] {[5]} {[9 0]}} {[3 7 9 5 4]}} 8 1) -> {[7 5] {[9 4 3] {[5]} {[9 0]}} {[3 7 9 5 4]}}", "(replacet {} 3 4) -> {}", "(replacet {[8 6 7]} 8 5) -> {[5 6 7]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.651593, "examples": ["(replacet {} 2 4) -> {}", "(replacet {[] {[1 6 1]} {[3 4]}} 5 9) -> {[] {[1 6 1]} {[3 4]}}", "(replacet {[0 9 6 8] {[]}} 0 3) -> {[3 9 6 8] {[]}}", "(replacet {[] {[7 0 5 4]}} 0 4) -> {[] {[7 4 5 4]}}", "(replacet {[7 0 9 2] {[6 0 5] {[6 4]} {[7 2 8 9 3]}} {[5 8 6 0]}} 3 3) -> {[7 0 9 2] {[6 0 5] {[6 4]} {[7 2 8 9 3]}} {[5 8 6 0]}}", "(replacet {} 7 1) -> {}", "(replacet {} 2 9) -> {}", "(replacet {[3 8 1 5 4]} 1 6) -> {[3 8 6 5 4]}", "(replacet {[] {[]}} 2 9) -> {[] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.990867, "examples": ["(replacet {} 7 7) -> {}", "(replacet {[5]} 5 0) -> {[0]}", "(replacet {[4 6 2 3 9] {[]} {[0 2 6 5]}} 1 3) -> {[4 6 2 3 9] {[]} {[0 2 6 5]}}", "(replacet {[9 0 6 3 8]} 5 8) -> {[9 0 6 3 8]}", "(replacet {} 7 1) -> {}", "(replacet {[2 9 2 7 8]} 1 4) -> {[2 9 2 7 8]}", "(replacet {[0] {[5 4 6 1 3]}} 4 7) -> {[0] {[5 7 6 1 3]}}", "(replacet {[0 8 5] {[] {[1 7]}} {[4 1] {[7 0]}}} 5 6) -> {[0 8 6] {[] {[1 7]}} {[4 1] {[7 0]}}}", "(replacet {[8 3 7 6 6] {[2] {[0 0 2] {[]} {[]}}} {[4 3 3 1 0] {[9 8 8 3]}}} 9 1) -> {[8 3 7 6 6] {[2] {[0 0 2] {[]} {[]}}} {[4 3 3 1 0] {[1 8 8 3]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.012822, "examples": ["(replacet {} 4 7) -> {}", "(replacet {} 9 7) -> {}", "(replacet {[8 9]} 7 9) -> {[8 9]}", "(replacet {[0 8 0] {[7 0 7 8]}} 8 1) -> {[0 1 0] {[7 0 7 1]}}", "(replacet {[1 8]} 2 3) -> {[1 8]}", "(replacet {[0 0 4 1 3] {[6 6 5 1] {[4 1 0]}}} 2 4) -> {[0 0 4 1 3] {[6 6 5 1] {[4 1 0]}}}", "(replacet {} 4 0) -> {}", "(replacet {[]} 7 0) -> {[]}", "(replacet {[7 7 8 3 6] {[1 7 3 6 4] {[8 7 2] {[4 4 3 4]}}}} 2 9) -> {[7 7 8 3 6] {[1 7 3 6 4] {[8 7 9] {[4 4 3 4]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.233354, "examples": ["(replacet {} 4 8) -> {}", "(replacet {[3]} 5 7) -> {[3]}", "(replacet {[5 4 7 6]} 8 5) -> {[5 4 7 6]}", "(replacet {[2 9]} 4 8) -> {[2 9]}", "(replacet {} 7 8) -> {}", "(replacet {[7 8] {[7 9]}} 7 2) -> {[2 8] {[2 9]}}", "(replacet {[8 8] {[5 6 9]} {[8 2 2 1 6] {[3 5 5 7 9] {[8 6 7 6]} {[9]}} {[3 4 7 7 0] {[8 4 0 0]} {[4 9 6 3 3]}}}} 3 2) -> {[8 8] {[5 6 9]} {[8 2 2 1 6] {[2 5 5 7 9] {[8 6 7 6]} {[9]}} {[2 4 7 7 0] {[8 4 0 0]} {[4 9 6 2 2]}}}}", "(replacet {[9 6 9 2]} 3 0) -> {[9 6 9 2]}", "(replacet {[5 4] {[] {[5 0 0] {[7 5 4 7]}} {[2 9]}}} 5 4) -> {[4 4] {[] {[4 0 0] {[7 4 4 7]}} {[2 9]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.40589, "examples": ["(replacet {} 3 6) -> {}", "(replacet {[3 9 9 3 2] {[8 5]}} 7 7) -> {[3 9 9 3 2] {[8 5]}}", "(replacet {} 4 5) -> {}", "(replacet {[4 8 1 6 8] {[4 8 7 6 6]} {[7 0 4 7]}} 3 3) -> {[4 8 1 6 8] {[4 8 7 6 6]} {[7 0 4 7]}}", "(replacet {[]} 1 5) -> {[]}", "(replacet {[2 9 3 2 0] {[]} {[5]}} 3 7) -> {[2 9 7 2 0] {[]} {[5]}}", "(replacet {[] {[]} {[1 7 6] {[1]}}} 9 8) -> {[] {[]} {[1 7 6] {[1]}}}", "(replacet {[3 9 2 3 6] {[]} {[0]}} 7 4) -> {[3 9 2 3 6] {[]} {[0]}}", "(replacet {[9 0 6 6 5] {[6 4] {[8 4] {[0 7]}} {[9 7 6]}} {[8 9 2 2]}} 5 8) -> {[9 0 6 6 8] {[6 4] {[8 4] {[0 7]}} {[9 7 6]}} {[8 9 2 2]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.866898, "examples": ["(replacet {} 0 8) -> {}", "(replacet {} 3 4) -> {}", "(replacet {[2] {[3 0]} {[6 9 5 1 2]}} 9 5) -> {[2] {[3 0]} {[6 5 5 1 2]}}", "(replacet {} 1 8) -> {}", "(replacet {[]} 1 6) -> {[]}", "(replacet {[] {[]} {[7 4 5 2 3]}} 6 7) -> {[] {[]} {[7 4 5 2 3]}}", "(replacet {[8 6 7 5]} 1 1) -> {[8 6 7 5]}", "(replacet {[7 5 5] {[7 0 1 2 5]} {[7 2 7 6]}} 8 1) -> {[7 5 5] {[7 0 1 2 5]} {[7 2 7 6]}}", "(replacet {[] {[8 4]} {[8] {[2 2]}}} 8 7) -> {[] {[7 4]} {[7] {[2 2]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.631036, "examples": ["(replacet {} 2 4) -> {}", "(replacet {[1 1 0 5]} 1 7) -> {[7 7 0 5]}", "(replacet {} 3 6) -> {}", "(replacet {[2 0 8 9] {[8 4 9 7 1] {[9 0 1 6 7]} {[3 7]}}} 5 7) -> {[2 0 8 9] {[8 4 9 7 1] {[9 0 1 6 7]} {[3 7]}}}", "(replacet {} 6 3) -> {}", "(replacet {} 6 1) -> {}", "(replacet {[0] {[8]} {[3 7]}} 6 8) -> {[0] {[8]} {[3 7]}}", "(replacet {[5 0 5 0]} 8 5) -> {[5 0 5 0]}", "(replacet {[] {[3 0 9 2] {[8 1 7]}} {[3] {[]}}} 7 5) -> {[] {[3 0 9 2] {[8 1 5]}} {[3] {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.7731, "examples": ["(replacet {} 6 3) -> {}", "(replacet {[2 9 9] {[9 3 0 3 0]} {[9 5 3 4] {[8 6] {[9]} {[3 3 8 6 0]}}}} 0 9) -> {[2 9 9] {[9 3 9 3 9]} {[9 5 3 4] {[8 6] {[9]} {[3 3 8 6 9]}}}}", "(replacet {[] {[8 7 0 7 5] {[]}}} 9 3) -> {[] {[8 7 0 7 5] {[]}}}", "(replacet {[8]} 3 4) -> {[8]}", "(replacet {} 0 2) -> {}", "(replacet {} 2 5) -> {}", "(replacet {[8 6 5 8 5] {[6 5 1 5] {[3 1]} {[2 5 0 3 2] {[3 4]} {[5]}}} {[] {[5] {[]} {[6 6 2]}} {[5 7 0 0 7] {[5 6 8 6 1]} {[9 2 7 8 2]}}}} 6 9) -> {[8 9 5 8 5] {[9 5 1 5] {[3 1]} {[2 5 0 3 2] {[3 4]} {[5]}}} {[] {[5] {[]} {[9 9 2]}} {[5 7 0 0 7] {[5 9 8 9 1]} {[9 2 7 8 2]}}}}", "(replacet {[0 4 5 1 2] {[] {[8 3 6 4 3] {[8]}} {[1 9 7 5] {[7 9 0 8 8]}}}} 2 8) -> {[0 4 5 1 8] {[] {[8 3 6 4 3] {[8]}} {[1 9 7 5] {[7 9 0 8 8]}}}}", "(replacet {[6 2 0]} 8 4) -> {[6 2 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.440024, "examples": ["(replacet {} 4 2) -> {}", "(replacet {[4 2 7 5] {[]} {[2] {[8 6 0]}}} 9 1) -> {[4 2 7 5] {[]} {[2] {[8 6 0]}}}", "(replacet {} 0 1) -> {}", "(replacet {[0 3 9] {[8 5 2 8 3]}} 4 5) -> {[0 3 9] {[8 5 2 8 3]}}", "(replacet {[5 3 4] {[]}} 8 3) -> {[5 3 4] {[]}}", "(replacet {[3 2 0 2 2] {[4 7]} {[4 5]}} 3 9) -> {[9 2 0 2 2] {[4 7]} {[4 5]}}", "(replacet {} 4 0) -> {}", "(replacet {[]} 4 5) -> {[]}", "(replacet {[9 3 4] {[]} {[1 1 2 8] {[4 9 3 4 6]}}} 0 3) -> {[9 3 4] {[]} {[1 1 2 8] {[4 9 3 4 6]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.557133, "examples": ["(replacet {} 4 1) -> {}", "(replacet {[] {[3 5 6 5] {[1 8 9 3]}}} 8 1) -> {[] {[3 5 6 5] {[1 1 9 3]}}}", "(replacet {[7 1 3 5 5]} 5 5) -> {[7 1 3 5 5]}", "(replacet {[7]} 7 7) -> {[7]}", "(replacet {} 8 3) -> {}", "(replacet {[3 0 0 9] {[8] {[3 0]} {[] {[4 9 9 3 1]}}} {[] {[] {[1 0 5 7 3]}} {[5 0 0 3] {[]}}}} 8 4) -> {[3 0 0 9] {[4] {[3 0]} {[] {[4 9 9 3 1]}}} {[] {[] {[1 0 5 7 3]}} {[5 0 0 3] {[]}}}}", "(replacet {[4 4 1 2 6]} 2 2) -> {[4 4 1 2 6]}", "(replacet {[5] {[6 3]} {[]}} 8 9) -> {[5] {[6 3]} {[]}}", "(replacet {[9]} 1 6) -> {[9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.524648, "examples": ["(replacet {} 4 3) -> {}", "(replacet {[] {[]} {[8 9 0] {[0] {[8 4 9]} {[8]}} {[5 8 7 3 0] {[4 3 1 8]} {[7 9]}}}} 3 9) -> {[] {[]} {[8 9 0] {[0] {[8 4 9]} {[8]}} {[5 8 7 9 0] {[4 9 1 8]} {[7 9]}}}}", "(replacet {} 8 0) -> {}", "(replacet {[] {[3]} {[8 0]}} 7 0) -> {[] {[3]} {[8 0]}}", "(replacet {[3 7 8] {[1 3 3 0 4] {[2]} {[8 5 2 8 5]}}} 5 4) -> {[3 7 8] {[1 3 3 0 4] {[2]} {[8 4 2 8 4]}}}", "(replacet {[4] {[7 4 3] {[3 5 2 6] {[]} {[2]}}} {[] {[0 4 1 9]}}} 4 8) -> {[8] {[7 8 3] {[3 5 2 6] {[]} {[2]}}} {[] {[0 8 1 9]}}}", "(replacet {[] {[]} {[6 3 4 7 8]}} 9 5) -> {[] {[]} {[6 3 4 7 8]}}", "(replacet {[6 2 0] {[8 7 9 3 0]}} 9 7) -> {[6 2 0] {[8 7 7 3 0]}}", "(replacet {} 0 1) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
