{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000746, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.500947, "name": "sumnodes", "examples": ["(sumnodes {[5 4] {[3]}}) -> {9 {3}}", "(sumnodes {[] {[0 0 3 7]} {[3]}}) -> {0 {10} {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.375427, "name": "sumnodes", "examples": ["(sumnodes {[7 1 4 6 4] {[5 5 3 1 8]}}) -> {22 {22}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.485843, "name": "sumnodes", "examples": ["(sumnodes {[9 0 6 9 1] {[4 9] {[8] {[1 1 2 0]} {[0]}}} {[9] {[3 3 4 3] {[3 5 1 3]}} {[3 2] {[]} {[9 5 7 3 4]}}}}) -> {25 {13 {8 {4} {0}}} {9 {13 {12}} {5 {0} {28}}}}", "(sumnodes {[5] {[0 0 6 2] {[6 2 5 4 8] {[1 0 1 5]} {[]}} {[0 3 5 4] {[0 8]} {[5]}}}}) -> {5 {8 {25 {7} {0}} {12 {8} {5}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.526455, "name": "sumnodes", "examples": ["(sumnodes {[3 6 7 3 3]}) -> {22}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.458195, "name": "sumnodes", "examples": ["(sumnodes {[6] {[]} {[1 9]}}) -> {6 {0} {10}}", "(sumnodes {[8 6 6 4] {[2 0 6 2]}}) -> {24 {10}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.444627, "name": "sumnodes", "examples": ["(sumnodes {[9 6] {[0 8 7] {[4]} {[0 6 2 9 3]}}}) -> {15 {15 {4} {20}}}", "(sumnodes {[] {[5 4 5 3] {[]} {[8]}}}) -> {0 {17 {0} {8}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.402073, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[5 7 0 6]}}) -> {0 {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.59725, "name": "sumnodes", "examples": ["(sumnodes {[8 2 2 8 2] {[1 4 8 0 5]}}) -> {22 {18}}", "(sumnodes {[4 2 8 0 6] {[3 0 1]} {[9 8 0 0 1]}}) -> {20 {4} {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.496213, "name": "sumnodes", "examples": ["(sumnodes {[3] {[1 8] {[5 6] {[2 5 3]}} {[]}} {[] {[4 0] {[]} {[2 2]}}}}) -> {3 {9 {11 {10}} {0}} {0 {4 {0} {4}}}}", "(sumnodes {[1 4 7 9 0]}) -> {21}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.509457, "name": "sumnodes", "examples": ["(sumnodes {[3 1 7 7] {[3] {[7 4 2] {[8]}}}}) -> {18 {3 {13 {8}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.601052, "name": "sumnodes", "examples": ["(sumnodes {[0] {[6 8 4 9]}}) -> {0 {27}}", "(sumnodes {[0] {[4 5 2 5]}}) -> {0 {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.551501, "name": "sumnodes", "examples": ["(sumnodes {[7 9 7 2 3] {[0 3]}}) -> {28 {3}}", "(sumnodes {[5 1] {[6 0]}}) -> {6 {6}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.267612, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[2 3 2 3] {[5 0] {[4]} {[8 1 1]}}}) -> {10 {5 {4} {10}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.606853, "name": "sumnodes", "examples": ["(sumnodes {[6 5 8 1 3]}) -> {23}", "(sumnodes {[0 1 8 4]}) -> {13}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.628455, "name": "sumnodes", "examples": ["(sumnodes {[2 2 6 0]}) -> {10}", "(sumnodes {[9 2 8 3 2] {[4 9 8]}}) -> {24 {21}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.652616, "name": "sumnodes", "examples": ["(sumnodes {[6]}) -> {6}", "(sumnodes {[7 1 8 3] {[5 5 1 8 1]} {[2]}}) -> {19 {20} {2}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000453, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000368, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.240788, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 9 4 1 5] {[3 9 0 2 0] {[3 7 7] {[5]}}} {[] {[5 8 7 0]}}}) -> {20 {14 {17 {5}}} {0 {20}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.205375, "name": "sumnodes", "examples": ["(sumnodes {[6] {[]}}) -> {6 {0}}", "(sumnodes {[4 0] {[] {[8 6 5 6 4]}} {[9 1 4]}}) -> {4 {0 {29}} {14}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.24162, "name": "sumnodes", "examples": ["(sumnodes {[6] {[0 3 2 4 9] {[] {[3]} {[4]}}}}) -> {6 {18 {0 {3} {4}}}}", "(sumnodes {[8 8] {[4 6 5 5]}}) -> {16 {20}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.312708, "name": "sumnodes", "examples": ["(sumnodes {[8 4 2]}) -> {14}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.323283, "name": "sumnodes", "examples": ["(sumnodes {[0 3 8 6 1] {[3 6 2] {[8 0]} {[6] {[3 5 3]}}}}) -> {18 {11 {8} {6 {11}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.232923, "name": "sumnodes", "examples": ["(sumnodes {[8 9 8] {[2 8] {[6]} {[]}}}) -> {25 {10 {6} {0}}}", "(sumnodes {[4 1 7 3 5] {[6 3] {[] {[2 0 9 8]}}} {[8 7 7] {[] {[6]}}}}) -> {20 {9 {0 {19}}} {22 {0 {6}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.381205, "name": "sumnodes", "examples": ["(sumnodes {[6 0 5] {[1 7]} {[8 2 1 9 0]}}) -> {11 {8} {20}}", "(sumnodes {[4 0] {[5 3]} {[2 2 4 7]}}) -> {4 {8} {15}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.001035, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.427724, "name": "sumnodes", "examples": ["(sumnodes {[2 3 2] {[0] {[7 3 9 4] {[2 1 5]} {[1 6]}}} {[5 3 9 0] {[4 9 0] {[1 4 5 8]} {[]}}}}) -> {7 {0 {23 {8} {7}}} {17 {13 {18} {0}}}}", "(sumnodes {[1 4]}) -> {5}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.30736, "name": "sumnodes", "examples": ["(sumnodes {[0 7 8 5 6] {[5 4 1 9]} {[0 2 3 3]}}) -> {26 {19} {8}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.560799, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 9 6 8 0]}) -> {25}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.226918, "name": "sumnodes", "examples": ["(sumnodes {[3 9 9] {[1] {[0]}}}) -> {21 {1 {0}}}", "(sumnodes {[7 2] {[0 8 8 7] {[]} {[2 8]}}}) -> {9 {23 {0} {10}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.60148, "name": "sumnodes", "examples": ["(sumnodes {[1]}) -> {1}", "(sumnodes {[9 6 2 9 2]}) -> {28}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.594759, "name": "sumnodes", "examples": ["(sumnodes {[9 3 1 8]}) -> {21}", "(sumnodes {[5 2 0 3]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.199946, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[1 9 4 0 2] {[9 9]}}) -> {16 {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.189192, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[8]} {[8 8]}}) -> {0 {8} {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.590792, "name": "sumnodes", "examples": ["(sumnodes {[9 4]}) -> {13}", "(sumnodes {[0]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.23032, "name": "sumnodes", "examples": ["(sumnodes {[3 0]}) -> {3}", "(sumnodes {[2 4 9 8 6] {[2 6]} {[]}}) -> {29 {8} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.570646, "name": "sumnodes", "examples": ["(sumnodes {[1] {[1 1 4]} {[0]}}) -> {1 {6} {0}}", "(sumnodes {[7 1 9] {[7 1 7 0 7]} {[8 3 3 5]}}) -> {17 {22} {19}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.592461, "name": "sumnodes", "examples": ["(sumnodes {[7 8 7 5] {[0 5 2 6 7]} {[3 8 4 5]}}) -> {27 {20} {20}}", "(sumnodes {[8] {[1 8]}}) -> {8 {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree (car (value b)) [])) _) _)", "time": 0.015942, "name": "sumnodes", "examples": ["(sumnodes {[4]}) -> {4}", "(sumnodes {[3]}) -> {3}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.514546, "name": "sumnodes", "examples": ["(sumnodes {[5 0 1] {[0 0 9 4 3]}}) -> {6 {16}}", "(sumnodes {[3 3 8 7 6] {[5 6 8] {[0 4 1 3]} {[5 2 7] {[8 1 8 5]} {[4 7 0 6]}}} {[5] {[7 4]}}}) -> {27 {19 {8} {14 {22} {17}}} {5 {11}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.36371, "name": "sumnodes", "examples": ["(sumnodes {[2 2]}) -> {4}", "(sumnodes {[6] {[1 8 8 9 3]} {[2]}}) -> {6 {29} {2}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.25218, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 1] {[9 5 1 3]} {[] {[4 5 8 6 1]}}}) -> {9 {18} {0 {24}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.495685, "name": "sumnodes", "examples": ["(sumnodes {[3 7 5 9] {[8 5 9 9]}}) -> {24 {31}}", "(sumnodes {[2 8 1] {[6 2 7 7 1]}}) -> {11 {23}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.339053, "name": "sumnodes", "examples": ["(sumnodes {[2 7 9 6 9] {[] {[] {[3 9 0 9 9]} {[5 5 2]}} {[0 5 3] {[0 7 2 4]} {[2 3 2 0 3]}}}}) -> {33 {0 {0 {30} {12}} {8 {13} {10}}}}", "(sumnodes {[9] {[1]} {[1 7 7 5 4]}}) -> {9 {1} {24}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.4296, "name": "sumnodes", "examples": ["(sumnodes {[5 2] {[4 8 0 5 3]}}) -> {7 {20}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.258496, "name": "sumnodes", "examples": ["(sumnodes {[9 1 4 2 7]}) -> {23}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.273936, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 8 1] {[9 2 6 4] {[8 9 6] {[3]} {[]}}}}) -> {13 {21 {23 {3} {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.244051, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[8 7 8 0] {[8 9]}} {[]}}) -> {0 {23 {17}} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.265482, "name": "sumnodes", "examples": ["(sumnodes {[] {[4 6 9]} {[4]}}) -> {0 {19} {4}}", "(sumnodes {[3 9]}) -> {12}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.211084, "name": "sumnodes", "examples": ["(sumnodes {[7 2 5 1 4] {[] {[3]} {[]}}}) -> {19 {0 {3} {0}}}", "(sumnodes {[5] {[4 8 0 7 7] {[9 8 9 2]} {[8 2 4 1 2]}} {[1 9 4] {[5 6]} {[]}}}) -> {5 {26 {28} {17}} {14 {11} {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.304133, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[7] {[4 3 2 9] {[3 0]}} {[2 7 4] {[6 2]} {[7 9 3 4]}}}) -> {7 {18 {3}} {13 {8} {23}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.297124, "name": "sumnodes", "examples": ["(sumnodes {[0 4] {[7 2] {[3 8]} {[]}} {[1 8 7 0] {[2 5 7 6]}}}) -> {4 {9 {11} {0}} {16 {20}}}", "(sumnodes {[8] {[6 5 9 9]}}) -> {8 {29}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.399129, "name": "sumnodes", "examples": ["(sumnodes {[7]}) -> {7}", "(sumnodes {[7 3 2 4 3] {[2 2]}}) -> {19 {4}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.40036, "name": "sumnodes", "examples": ["(sumnodes {[6 2 7 4 5] {[9 1 4 8]} {[1]}}) -> {24 {22} {1}}", "(sumnodes {[0 3 5] {[1 8 7]}}) -> {8 {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.220761, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 5 4] {[8 5]} {[] {[3 0]} {[2]}}}) -> {13 {13} {0 {3} {2}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.454483, "name": "sumnodes", "examples": ["(sumnodes {[9 6 7]}) -> {22}", "(sumnodes {[0 4 6 4] {[3 0]} {[5]}}) -> {14 {3} {5}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.37599, "name": "sumnodes", "examples": ["(sumnodes {[0 5] {[3] {[8]} {[2 6 8 3 6]}} {[7] {[3 7 8 6 0]}}}) -> {5 {3 {8} {25}} {7 {24}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)", "time": 0.023327, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1]}) -> {1}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) 0))) _) _)", "time": 0.04395, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.197778, "name": "sumnodes", "examples": ["(sumnodes {[7 5 5 8 3] {[] {[2 0 9]}} {[8] {[]}}}) -> {28 {0 {11}} {8 {0}}}", "(sumnodes {[5 8 4 1]}) -> {18}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.200223, "name": "sumnodes", "examples": ["(sumnodes {[9 3 5 7 8]}) -> {32}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) d) 0)))) _) _)", "time": 0.166789, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 7] {[3]}}) -> {7 {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.287963, "name": "sumnodes", "examples": ["(sumnodes {[6 7]}) -> {13}", "(sumnodes {[] {[0 9 9 6 2]} {[0 9 2 8 0] {[7]}}}) -> {0 {26} {19 {7}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.254492, "name": "sumnodes", "examples": ["(sumnodes {[4] {[2]}}) -> {4 {2}}", "(sumnodes {[4 2 3] {[]}}) -> {9 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.422233, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 5 9 8]}) -> {29}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.231529, "name": "sumnodes", "examples": ["(sumnodes {[1 3 0] {[1 4 5 1] {[4 6]}} {[1 4 3]}}) -> {4 {11 {10}} {8}}", "(sumnodes {[8 0] {[]} {[7] {[0 0 3 2 4]}}}) -> {8 {0} {7 {9}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.353153, "name": "sumnodes", "examples": ["(sumnodes {[6] {[] {[2 4] {[3 1]} {[9 2 5]}} {[5 1 9] {[0]} {[6 2]}}}}) -> {6 {0 {6 {4} {16}} {15 {0} {8}}}}", "(sumnodes {[4 3] {[1 3 0]}}) -> {7 {4}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.314197, "name": "sumnodes", "examples": ["(sumnodes {[7 3 9] {[2 1 1 1] {[3 8]}}}) -> {19 {5 {11}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.360911, "name": "sumnodes", "examples": ["(sumnodes {[6 7 0] {[5]} {[8 8 8 3 2]}}) -> {13 {5} {29}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) 0))) _) _)", "time": 0.02169, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.460136, "name": "sumnodes", "examples": ["(sumnodes {[2 6 9 4] {[9 4 8 1] {[5 4 2 6]} {[0 3 2]}}}) -> {21 {22 {17} {5}}}", "(sumnodes {[8 6 1 3 4] {[7]}}) -> {22 {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.342368, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 4] {[8 6 2] {[9 5 6]} {[2 6 9]}} {[1 9 6 4 6] {[6 0 2 2]}}}) -> {8 {16 {20} {17}} {26 {10}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.308899, "name": "sumnodes", "examples": ["(sumnodes {[2 1 2]}) -> {5}", "(sumnodes {[4] {[]} {[9 3 9] {[]}}}) -> {4 {0} {21 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.469563, "name": "sumnodes", "examples": ["(sumnodes {[3 8 3] {[9 8 6]} {[6 3 1 5 1]}}) -> {14 {23} {16}}", "(sumnodes {[5 5 5 4 7]}) -> {26}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.180947, "name": "sumnodes", "examples": ["(sumnodes {[] {[4 1 0 2]} {[3 3]}}) -> {0 {7} {6}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (car c)))) _) _)", "time": 0.028471, "name": "sumnodes", "examples": ["(sumnodes {[9]}) -> {9}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.176013, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[8 0 2]} {[2 4 3 4]}}) -> {0 {10} {13}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.413422, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2] {[6]} {[3 0 6]}}) -> {2 {6} {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.370966, "name": "sumnodes", "examples": ["(sumnodes {[6 9 0 4]}) -> {19}", "(sumnodes {[1]}) -> {1}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.262556, "name": "sumnodes", "examples": ["(sumnodes {[] {[]}}) -> {0 {0}}", "(sumnodes {[4 2 0]}) -> {6}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.248305, "name": "sumnodes", "examples": ["(sumnodes {[2 7] {[4 7 1] {[5] {[1 7 6 3]}}}}) -> {9 {12 {5 {17}}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.226058, "name": "sumnodes", "examples": ["(sumnodes {[0 3 0] {[0 3 0 6 8] {[9] {[1]}} {[]}}}) -> {3 {17 {9 {1}} {0}}}", "(sumnodes {[] {[9 1 1]} {[2]}}) -> {0 {11} {2}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.423775, "name": "sumnodes", "examples": ["(sumnodes {[2 3] {[5 3]}}) -> {5 {8}}", "(sumnodes {[3 4 4] {[7 5 6 7 2] {[3 3 2 4] {[6 2 6 0 3]}}}}) -> {11 {27 {12 {17}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.193126, "name": "sumnodes", "examples": ["(sumnodes {[8 3 2]}) -> {13}", "(sumnodes {[6 5 1] {[7] {[9] {[4 4]}} {[]}} {[7] {[7 5 5] {[5 7 4 8]} {[7]}} {[4] {[3 1 1 0]}}}}) -> {12 {7 {9 {8}} {0}} {7 {17 {24} {7}} {4 {5}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.307785, "name": "sumnodes", "examples": ["(sumnodes {[7] {[5 9]}}) -> {7 {14}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.315821, "name": "sumnodes", "examples": ["(sumnodes {[] {[9 2]} {[6 0 4]}}) -> {0 {11} {10}}", "(sumnodes {[6 3 7 4 4] {[1 2 3]}}) -> {24 {6}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.419128, "name": "sumnodes", "examples": ["(sumnodes {[6 9 4] {[1 8 2 9]} {[5 6 0 8 6]}}) -> {19 {20} {25}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.494016, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 2 8 0] {[2 1]} {[5 6 6 5]}}) -> {18 {3} {22}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.313148, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1 8 3] {[1 1 4] {[6]}} {[7 7 2 3] {[9 7 1]} {[9 8]}}}) -> {12 {6 {6}} {19 {17} {17}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.148347, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[3 9] {[0 5 3 4]}}) -> {12 {12}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.31592, "name": "sumnodes", "examples": ["(sumnodes {[5 8 8 5 9] {[0 0 3]} {[1 6 9 9] {[8 0 9 2 2] {[]}}}}) -> {35 {3} {25 {21 {0}}}}", "(sumnodes {[1] {[8 2 2]} {[9 9 3 8] {[5 4 0 5] {[7 9]}} {[7 7 1 3 9] {[9]}}}}) -> {1 {12} {29 {14 {16}} {27 {9}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.346588, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 7 6 2 8]}) -> {30}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.240489, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7] {[6 0 9] {[8 6]}} {[0 3] {[5 8]}}}) -> {7 {15 {14}} {3 {13}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.227494, "name": "sumnodes", "examples": ["(sumnodes {[8] {[] {[] {[4]}} {[0 2] {[]} {[]}}} {[] {[6] {[0]} {[]}} {[8 2] {[]} {[6 3 9 6]}}}}) -> {8 {0 {0 {4}} {2 {0} {0}}} {0 {6 {0} {0}} {10 {0} {24}}}}", "(sumnodes {[] {[8]} {[2 5 9 9 0]}}) -> {0 {8} {25}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.249791, "name": "sumnodes", "examples": ["(sumnodes {[2 2 9] {[5]} {[] {[8 0 7 9 4] {[1 1 5 2]}} {[5 6 4 1 4]}}}) -> {13 {5} {0 {28 {9}} {20}}}", "(sumnodes {[5 0 2] {[5 2 6 6]}}) -> {7 {19}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.468018, "name": "sumnodes", "examples": ["(sumnodes {[4 5 0]}) -> {9}", "(sumnodes {[9 1 7] {[9 6 0] {[8 4 2 0]}}}) -> {17 {15 {14}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.359829, "name": "sumnodes", "examples": ["(sumnodes {[8 4 1 1 5]}) -> {19}", "(sumnodes {[7 7 2 5 3]}) -> {24}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.335494, "name": "sumnodes", "examples": ["(sumnodes {[9 7 4 8] {[8 7 1 2] {[9 9]} {[3]}}}) -> {28 {18 {18} {3}}}", "(sumnodes {[5 6 1 8] {[0 0 1 7] {[7 0] {[0]}}}}) -> {20 {8 {7 {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.250164, "name": "sumnodes", "examples": ["(sumnodes {[5 3 4 7]}) -> {19}", "(sumnodes {}) -> {}"]}
