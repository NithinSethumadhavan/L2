{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {0}}) -> [5 0]", "(flatten {4}) -> [4]", "(flatten {8}) -> [8]", "(flatten {7 {1 {6}}}) -> [7 1 6]", "(flatten {}) -> []", "(flatten {6 {0 {1 {1}}}}) -> [6 0 1 1]", "(flatten {5 {9 {2} {2}} {5 {7}}}) -> [5 9 2 2 5 7]", "(flatten {5 {4}}) -> [5 4]", "(flatten {6}) -> [6]", "(flatten {5 {9 {0}}}) -> [5 9 0]", "(flatten {4}) -> [4]", "(flatten {8 {5 {9} {8}}}) -> [8 5 9 8]", "(flatten {9 {9 {5 {5} {5}} {7 {5} {3}}} {3 {3 {0} {0}}}}) -> [9 9 5 5 5 7 5 3 3 3 0 0]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {7 {3}}) -> [7 3]", "(flatten {}) -> []", "(flatten {5 {3}}) -> [5 3]", "(flatten {9 {6 {0 {2} {2}} {6 {1}}} {5 {6} {2 {0} {5}}}}) -> [9 6 0 2 2 6 1 5 6 2 0 5]", "(flatten {}) -> []", "(flatten {0 {4} {8 {0 {8}}}}) -> [0 4 8 0 8]", "(flatten {}) -> []", "(flatten {4 {5}}) -> [4 5]"], "time": 0.148115}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {3 {5}} {5 {3}}}) -> [4 3 5 5 3]", "(flatten {0 {7} {0}}) -> [0 7 0]", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {2 {3 {2} {6}}}) -> [2 3 2 6]", "(flatten {3 {3}}) -> [3 3]", "(flatten {}) -> []", "(flatten {8 {2} {0}}) -> [8 2 0]", "(flatten {7}) -> [7]", "(flatten {1}) -> [1]", "(flatten {4}) -> [4]", "(flatten {5}) -> [5]", "(flatten {9 {2} {1}}) -> [9 2 1]", "(flatten {7 {6}}) -> [7 6]", "(flatten {3 {3} {2}}) -> [3 3 2]", "(flatten {6 {6}}) -> [6 6]", "(flatten {}) -> []", "(flatten {9}) -> [9]"], "time": 0.141566}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {4 {3}}}) -> [5 4 3]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {6 {2 {9 {3} {2}}}}) -> [6 2 9 3 2]", "(flatten {3}) -> [3]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {3 {5 {4 {0}}} {2 {2} {7}}}) -> [3 5 4 0 2 2 7]", "(flatten {9 {1 {7} {5}}}) -> [9 1 7 5]", "(flatten {8}) -> [8]", "(flatten {1 {3} {1}}) -> [1 3 1]", "(flatten {7 {0} {0 {8}}}) -> [7 0 0 8]", "(flatten {6 {6} {5 {1} {2}}}) -> [6 6 5 1 2]", "(flatten {6 {2}}) -> [6 2]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6 {7 {8} {1}}}) -> [6 7 8 1]", "(flatten {}) -> []", "(flatten {4 {6}}) -> [4 6]"], "time": 0.153801}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {3}) -> [3]", "(flatten {0 {9} {8}}) -> [0 9 8]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {0 {2 {5 {7}} {4}} {1 {1 {4}} {1 {2}}}}) -> [0 2 5 7 4 1 1 4 1 2]", "(flatten {}) -> []", "(flatten {7 {9} {7}}) -> [7 9 7]", "(flatten {0}) -> [0]", "(flatten {9 {4}}) -> [9 4]", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {9 {9}}) -> [9 9]", "(flatten {2 {1}}) -> [2 1]", "(flatten {2 {3} {6}}) -> [2 3 6]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {5 {6}}) -> [5 6]", "(flatten {6}) -> [6]", "(flatten {7 {8} {3}}) -> [7 8 3]", "(flatten {5 {9}}) -> [5 9]", "(flatten {6 {1 {7} {7}} {4 {4}}}) -> [6 1 7 7 4 4]", "(flatten {3 {1} {8}}) -> [3 1 8]"], "time": 0.115475}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {5 {5 {4}}}) -> [5 5 4]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {8}) -> [8]", "(flatten {7 {2}}) -> [7 2]", "(flatten {3 {3 {7 {8} {4}} {5 {0} {8}}}}) -> [3 3 7 8 4 5 0 8]", "(flatten {4 {9}}) -> [4 9]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {6}) -> [6]", "(flatten {3 {8 {7 {7} {8}}} {1}}) -> [3 8 7 7 8 1]", "(flatten {9 {6 {1} {0}} {5 {8} {5}}}) -> [9 6 1 0 5 8 5]", "(flatten {9 {6}}) -> [9 6]", "(flatten {1 {0} {8}}) -> [1 0 8]", "(flatten {3 {1} {2 {6 {0}} {2}}}) -> [3 1 2 6 0 2]", "(flatten {8}) -> [8]", "(flatten {9 {3 {6} {2}} {0 {8 {4}}}}) -> [9 3 6 2 0 8 4]", "(flatten {5 {2 {9} {3}}}) -> [5 2 9 3]", "(flatten {5 {4 {3} {0}}}) -> [5 4 3 0]", "(flatten {7 {7 {6}} {9}}) -> [7 7 6 9]", "(flatten {1 {0 {6}}}) -> [1 0 6]", "(flatten {7 {4}}) -> [7 4]"], "time": 0.160486}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {6 {6}}}) -> [6 6 6]", "(flatten {2 {6} {5}}) -> [2 6 5]", "(flatten {}) -> []", "(flatten {4 {5 {5}}}) -> [4 5 5]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {1 {6 {8}} {3 {6} {2}}}) -> [1 6 8 3 6 2]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {5}) -> [5]", "(flatten {1 {3}}) -> [1 3]", "(flatten {0 {0 {0 {8} {5}}}}) -> [0 0 0 8 5]", "(flatten {4 {0} {5}}) -> [4 0 5]", "(flatten {7 {6} {3}}) -> [7 6 3]", "(flatten {}) -> []", "(flatten {0 {6}}) -> [0 6]", "(flatten {2 {5}}) -> [2 5]", "(flatten {}) -> []"], "time": 0.157969}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {1 {6}}) -> [1 6]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {8 {6} {9 {5} {8}}}) -> [8 6 9 5 8]", "(flatten {2 {3 {3}}}) -> [2 3 3]", "(flatten {}) -> []", "(flatten {1 {5 {6 {0}}} {8}}) -> [1 5 6 0 8]", "(flatten {3 {1}}) -> [3 1]", "(flatten {}) -> []", "(flatten {2 {8} {9 {8} {1}}}) -> [2 8 9 8 1]", "(flatten {4}) -> [4]", "(flatten {8 {6 {6 {6} {6}} {5 {5} {0}}}}) -> [8 6 6 6 6 5 5 0]", "(flatten {2 {2} {9}}) -> [2 2 9]", "(flatten {7 {6}}) -> [7 6]", "(flatten {}) -> []", "(flatten {2 {2} {1}}) -> [2 2 1]", "(flatten {6 {2} {8 {0}}}) -> [6 2 8 0]", "(flatten {6 {5} {5}}) -> [6 5 5]", "(flatten {8 {5 {8} {0}}}) -> [8 5 8 0]", "(flatten {5}) -> [5]"], "time": 0.153508}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {6} {2}}) -> [0 6 2]", "(flatten {6 {1} {9}}) -> [6 1 9]", "(flatten {6}) -> [6]", "(flatten {0 {4}}) -> [0 4]", "(flatten {5 {6} {7}}) -> [5 6 7]", "(flatten {2 {1 {2}}}) -> [2 1 2]", "(flatten {7 {0}}) -> [7 0]", "(flatten {7 {9 {3 {3} {6}} {9 {0} {2}}}}) -> [7 9 3 3 6 9 0 2]", "(flatten {7}) -> [7]", "(flatten {5 {3 {3} {2}}}) -> [5 3 3 2]", "(flatten {9}) -> [9]", "(flatten {4 {9 {3}} {2 {3 {1} {1}}}}) -> [4 9 3 2 3 1 1]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {9 {1 {1}} {7}} {8 {7} {2 {1} {4}}}}) -> [9 9 1 1 7 8 7 2 1 4]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {5 {8 {5 {8}} {4 {1}}} {7 {3 {6} {0}}}}) -> [5 8 5 8 4 1 7 3 6 0]", "(flatten {2 {9 {9 {3} {9}} {2 {0} {7}}}}) -> [2 9 9 3 9 2 0 7]"], "time": 0.142253}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {6}}) -> [8 6]", "(flatten {5}) -> [5]", "(flatten {1 {8}}) -> [1 8]", "(flatten {3 {2 {2 {7}} {4 {8} {6}}} {2 {1 {9} {5}}}}) -> [3 2 2 7 4 8 6 2 1 9 5]", "(flatten {9 {3}}) -> [9 3]", "(flatten {7 {9}}) -> [7 9]", "(flatten {8 {3 {6 {8} {9}} {8 {7} {9}}} {3 {1} {8 {5} {8}}}}) -> [8 3 6 8 9 8 7 9 3 1 8 5 8]", "(flatten {3 {9 {5}}}) -> [3 9 5]", "(flatten {6 {2} {9}}) -> [6 2 9]", "(flatten {7}) -> [7]", "(flatten {7 {0} {1}}) -> [7 0 1]", "(flatten {4 {4 {0 {0}}}}) -> [4 4 0 0]", "(flatten {1 {9 {4} {1}} {6 {1}}}) -> [1 9 4 1 6 1]", "(flatten {0 {1 {9} {3 {1}}}}) -> [0 1 9 3 1]", "(flatten {3 {6}}) -> [3 6]", "(flatten {4 {9 {2} {5}} {5 {4}}}) -> [4 9 2 5 5 4]", "(flatten {4}) -> [4]", "(flatten {2 {9}}) -> [2 9]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {1 {8 {5 {2} {1}}} {3 {7 {4}}}}) -> [1 8 5 2 1 3 7 4]", "(flatten {6}) -> [6]"], "time": 0.16815}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {0 {1}}) -> [0 1]", "(flatten {1 {5 {5} {7}}}) -> [1 5 5 7]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {7 {6}}) -> [7 6]", "(flatten {}) -> []", "(flatten {5 {7 {8} {9}} {0 {1} {9}}}) -> [5 7 8 9 0 1 9]", "(flatten {2}) -> [2]", "(flatten {3 {8} {4 {0}}}) -> [3 8 4 0]", "(flatten {}) -> []", "(flatten {8 {0 {1}}}) -> [8 0 1]", "(flatten {9 {9 {7}} {4 {9} {5}}}) -> [9 9 7 4 9 5]", "(flatten {9 {4 {3} {2}} {8 {1}}}) -> [9 4 3 2 8 1]", "(flatten {3 {4} {1}}) -> [3 4 1]", "(flatten {}) -> []", "(flatten {1 {9 {1} {4}}}) -> [1 9 1 4]", "(flatten {8}) -> [8]", "(flatten {3 {7} {5}}) -> [3 7 5]", "(flatten {0 {7} {9}}) -> [0 7 9]", "(flatten {0}) -> [0]", "(flatten {8}) -> [8]", "(flatten {5}) -> [5]"], "time": 0.160928}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {1 {3 {3 {7} {9}} {1}}}) -> [1 3 3 7 9 1]", "(flatten {9}) -> [9]", "(flatten {4}) -> [4]", "(flatten {3 {0 {2} {1}} {1 {0 {9}} {7}}}) -> [3 0 2 1 1 0 9 7]", "(flatten {4}) -> [4]", "(flatten {5}) -> [5]", "(flatten {6}) -> [6]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {7 {0}}) -> [7 0]", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {2 {2 {1} {3}}}) -> [2 2 1 3]", "(flatten {2 {1 {8} {2}}}) -> [2 1 8 2]", "(flatten {1 {4}}) -> [1 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {1}) -> [1]"], "time": 0.142871}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {3} {2}}) -> [5 3 2]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {0 {9} {1}}) -> [0 9 1]", "(flatten {2 {0}}) -> [2 0]", "(flatten {7 {1 {5 {8}} {9 {2} {4}}}}) -> [7 1 5 8 9 2 4]", "(flatten {7 {1 {3} {6}}}) -> [7 1 3 6]", "(flatten {6 {4 {7}}}) -> [6 4 7]", "(flatten {6 {1 {8} {5}} {1}}) -> [6 1 8 5 1]", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {0 {4 {5} {7}}}) -> [0 4 5 7]", "(flatten {5}) -> [5]", "(flatten {0 {2} {6 {5} {8}}}) -> [0 2 6 5 8]", "(flatten {3 {9 {7} {3}} {1 {1} {7}}}) -> [3 9 7 3 1 1 7]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {8 {8 {9} {9}}}) -> [8 8 9 9]", "(flatten {2 {0 {0} {8}}}) -> [2 0 0 8]", "(flatten {5 {3}}) -> [5 3]", "(flatten {0 {9}}) -> [0 9]", "(flatten {7 {5} {8}}) -> [7 5 8]", "(flatten {}) -> []"], "time": 0.158822}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7 {7} {4}}) -> [7 7 4]", "(flatten {7 {8 {8} {5}} {5 {8}}}) -> [7 8 8 5 5 8]", "(flatten {}) -> []", "(flatten {0 {1} {4}}) -> [0 1 4]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {1 {0 {8} {8}} {9}}) -> [1 0 8 8 9]", "(flatten {6 {3 {6 {5} {9}}}}) -> [6 3 6 5 9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {9} {2}}) -> [3 9 2]", "(flatten {8}) -> [8]", "(flatten {3}) -> [3]", "(flatten {4 {0 {5}} {6 {4} {3}}}) -> [4 0 5 6 4 3]", "(flatten {6 {6}}) -> [6 6]", "(flatten {}) -> []", "(flatten {4 {7} {2}}) -> [4 7 2]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {5 {0}}) -> [5 0]", "(flatten {7 {6 {8}} {8 {5}}}) -> [7 6 8 8 5]"], "time": 0.14482}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {3 {4}}) -> [3 4]", "(flatten {}) -> []", "(flatten {7 {0} {0}}) -> [7 0 0]", "(flatten {9 {8} {8}}) -> [9 8 8]", "(flatten {2 {5}}) -> [2 5]", "(flatten {4 {6} {6}}) -> [4 6 6]", "(flatten {4 {6 {3} {3 {6} {2}}} {3}}) -> [4 6 3 3 6 2 3]", "(flatten {5 {2} {3 {6}}}) -> [5 2 3 6]", "(flatten {4 {3} {1}}) -> [4 3 1]", "(flatten {0 {4} {7 {0 {4} {5}}}}) -> [0 4 7 0 4 5]", "(flatten {}) -> []", "(flatten {7 {1 {5} {0}}}) -> [7 1 5 0]", "(flatten {7 {9} {8 {9} {1}}}) -> [7 9 8 9 1]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {5 {5}}) -> [5 5]", "(flatten {8 {8 {4} {3 {8}}}}) -> [8 8 4 3 8]", "(flatten {3 {3 {2} {1}}}) -> [3 3 2 1]", "(flatten {}) -> []", "(flatten {1 {9}}) -> [1 9]", "(flatten {0 {0 {3 {9} {7}}}}) -> [0 0 3 9 7]", "(flatten {0 {1}}) -> [0 1]", "(flatten {}) -> []"], "time": 0.150092}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {4 {1 {0 {1}} {0 {3}}}}) -> [4 1 0 1 0 3]", "(flatten {9}) -> [9]", "(flatten {2 {6 {6 {1}}}}) -> [2 6 6 1]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {3 {1}}) -> [3 1]", "(flatten {}) -> []", "(flatten {8 {9}}) -> [8 9]", "(flatten {}) -> []", "(flatten {4 {1 {7}}}) -> [4 1 7]", "(flatten {0 {1}}) -> [0 1]", "(flatten {9}) -> [9]", "(flatten {8 {3} {8}}) -> [8 3 8]", "(flatten {1 {6} {1 {6 {7}}}}) -> [1 6 1 6 7]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {1 {3 {5} {5}} {1 {2}}}) -> [1 3 5 5 1 2]", "(flatten {7 {1} {0}}) -> [7 1 0]", "(flatten {}) -> []", "(flatten {0 {9}}) -> [0 9]"], "time": 0.150547}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {9 {7} {2}}) -> [9 7 2]", "(flatten {4 {0} {6 {3} {4}}}) -> [4 0 6 3 4]", "(flatten {}) -> []", "(flatten {5 {7} {1}}) -> [5 7 1]", "(flatten {0 {0 {6}} {1}}) -> [0 0 6 1]", "(flatten {5 {1}}) -> [5 1]", "(flatten {3 {1} {9}}) -> [3 1 9]", "(flatten {1 {6} {6}}) -> [1 6 6]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {3 {7} {3}}) -> [3 7 3]", "(flatten {5 {1} {3}}) -> [5 1 3]", "(flatten {}) -> []", "(flatten {9 {9} {1}}) -> [9 9 1]", "(flatten {}) -> []", "(flatten {5 {6} {5}}) -> [5 6 5]", "(flatten {9}) -> [9]", "(flatten {5 {5} {3}}) -> [5 5 3]", "(flatten {}) -> []"], "time": 0.141923}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {3 {0} {6}}) -> [3 0 6]", "(flatten {4}) -> [4]", "(flatten {9 {5 {9 {7}}} {7 {0} {1 {9}}}}) -> [9 5 9 7 7 0 1 9]", "(flatten {2 {9}}) -> [2 9]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {3 {1 {6} {1}}}) -> [3 1 6 1]", "(flatten {5 {3} {9 {4} {8}}}) -> [5 3 9 4 8]", "(flatten {1 {8 {4}} {2}}) -> [1 8 4 2]", "(flatten {7 {7} {0 {3}}}) -> [7 7 0 3]", "(flatten {8 {1}}) -> [8 1]", "(flatten {4 {4} {6}}) -> [4 4 6]", "(flatten {3}) -> [3]", "(flatten {2}) -> [2]", "(flatten {8 {8} {1}}) -> [8 8 1]", "(flatten {8 {7}}) -> [8 7]", "(flatten {5 {3}}) -> [5 3]", "(flatten {6 {7} {5}}) -> [6 7 5]", "(flatten {7}) -> [7]", "(flatten {0 {6 {1}} {6 {9}}}) -> [0 6 1 6 9]", "(flatten {4}) -> [4]"], "time": 0.133849}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7 {3} {0}}) -> [7 3 0]", "(flatten {4 {1 {1 {7} {5}}}}) -> [4 1 1 7 5]", "(flatten {4 {5 {0} {6}}}) -> [4 5 0 6]", "(flatten {9}) -> [9]", "(flatten {6 {5 {8} {3}}}) -> [6 5 8 3]", "(flatten {6 {5}}) -> [6 5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {3 {4}}) -> [3 4]", "(flatten {8 {6} {5 {8} {3}}}) -> [8 6 5 8 3]", "(flatten {6}) -> [6]", "(flatten {6 {0 {4}} {1 {2}}}) -> [6 0 4 1 2]", "(flatten {9}) -> [9]", "(flatten {8}) -> [8]", "(flatten {9 {0} {4}}) -> [9 0 4]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {9 {9}}) -> [9 9]", "(flatten {1 {2 {5}}}) -> [1 2 5]", "(flatten {5 {1} {0}}) -> [5 1 0]"], "time": 0.148047}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6 {9 {8}}}) -> [6 9 8]", "(flatten {}) -> []", "(flatten {1 {7}}) -> [1 7]", "(flatten {4}) -> [4]", "(flatten {6 {8}}) -> [6 8]", "(flatten {5 {6}}) -> [5 6]", "(flatten {6 {1 {8 {7}}} {3 {6} {2 {3} {1}}}}) -> [6 1 8 7 3 6 2 3 1]", "(flatten {2 {6} {0}}) -> [2 6 0]", "(flatten {5 {0 {2} {5}} {7 {3}}}) -> [5 0 2 5 7 3]", "(flatten {6 {9 {6} {3}} {8 {7} {3}}}) -> [6 9 6 3 8 7 3]", "(flatten {2 {0 {9 {7} {0}} {3 {2} {8}}} {6 {3} {0}}}) -> [2 0 9 7 0 3 2 8 6 3 0]", "(flatten {1 {2 {5 {7} {0}} {1 {0} {8}}} {9 {3}}}) -> [1 2 5 7 0 1 0 8 9 3]", "(flatten {1}) -> [1]", "(flatten {0 {3}}) -> [0 3]", "(flatten {0 {5 {2}} {9}}) -> [0 5 2 9]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {0 {9} {1}}) -> [0 9 1]", "(flatten {4 {3} {8}}) -> [4 3 8]", "(flatten {0 {4 {2 {3}}}}) -> [0 4 2 3]", "(flatten {0}) -> [0]", "(flatten {4}) -> [4]"], "time": 0.113732}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {0 {0} {0}} {9}}) -> [0 0 0 0 9]", "(flatten {6 {4 {6 {8}}} {8}}) -> [6 4 6 8 8]", "(flatten {1 {6 {1 {1} {7}} {4 {4} {4}}}}) -> [1 6 1 1 7 4 4 4]", "(flatten {2 {0 {4 {3}} {2}} {8 {3 {2}}}}) -> [2 0 4 3 2 8 3 2]", "(flatten {3 {7 {7}} {3}}) -> [3 7 7 3]", "(flatten {5 {0 {6}}}) -> [5 0 6]", "(flatten {8 {4 {9}}}) -> [8 4 9]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {9 {1 {0}}}) -> [9 1 0]", "(flatten {1 {1 {3 {8} {5}}} {2 {8}}}) -> [1 1 3 8 5 2 8]", "(flatten {3 {4} {5 {3 {6} {1}}}}) -> [3 4 5 3 6 1]", "(flatten {1 {6} {4}}) -> [1 6 4]", "(flatten {3 {3 {6 {7} {5}} {7 {5} {6}}} {0}}) -> [3 3 6 7 5 7 5 6 0]", "(flatten {5 {8 {0 {0} {8}}}}) -> [5 8 0 0 8]"], "time": 0.134361}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {3 {7 {8}} {4}}) -> [3 7 8 4]", "(flatten {3 {3} {8}}) -> [3 3 8]", "(flatten {6}) -> [6]", "(flatten {1}) -> [1]", "(flatten {0 {2 {7} {9}}}) -> [0 2 7 9]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {9 {0 {4}}}) -> [9 0 4]", "(flatten {5 {8 {3 {9}} {7 {2} {4}}} {7 {7 {0}}}}) -> [5 8 3 9 7 2 4 7 7 0]", "(flatten {6}) -> [6]", "(flatten {0 {3 {5}} {0 {0}}}) -> [0 3 5 0 0]", "(flatten {9 {6 {9}}}) -> [9 6 9]", "(flatten {1}) -> [1]", "(flatten {2 {9 {2} {4}} {0}}) -> [2 9 2 4 0]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {5 {7 {5} {9}}}) -> [5 7 5 9]", "(flatten {9 {5}}) -> [9 5]", "(flatten {5}) -> [5]"], "time": 0.142536}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {8 {0 {7} {3}}} {1 {6} {2 {9}}}}) -> [6 8 0 7 3 1 6 2 9]", "(flatten {0 {2} {4 {4}}}) -> [0 2 4 4]", "(flatten {6 {7 {3} {9}}}) -> [6 7 3 9]", "(flatten {9 {7 {3} {2}} {9 {9}}}) -> [9 7 3 2 9 9]", "(flatten {4 {9} {7 {5} {4}}}) -> [4 9 7 5 4]", "(flatten {5 {8} {5}}) -> [5 8 5]", "(flatten {}) -> []", "(flatten {3 {3} {5}}) -> [3 3 5]", "(flatten {1 {7 {9}} {6}}) -> [1 7 9 6]", "(flatten {5}) -> [5]", "(flatten {3 {1}}) -> [3 1]", "(flatten {6}) -> [6]", "(flatten {1 {4}}) -> [1 4]", "(flatten {}) -> []", "(flatten {2 {4 {5 {3} {3}} {3}}}) -> [2 4 5 3 3 3]", "(flatten {8}) -> [8]", "(flatten {8 {2} {8 {9 {2}}}}) -> [8 2 8 9 2]", "(flatten {2 {1 {5}}}) -> [2 1 5]", "(flatten {3 {0 {2} {8}}}) -> [3 0 2 8]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {4 {0 {0}} {1 {4} {5}}}) -> [4 0 0 1 4 5]"], "time": 0.161575}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {9}) -> [9]", "(flatten {1 {5}}) -> [1 5]", "(flatten {1}) -> [1]", "(flatten {6 {9 {2 {5} {8}}} {1 {2}}}) -> [6 9 2 5 8 1 2]", "(flatten {1 {7 {2} {2}} {1}}) -> [1 7 2 2 1]", "(flatten {6 {6} {6 {2}}}) -> [6 6 6 2]", "(flatten {7}) -> [7]", "(flatten {7 {9 {7} {4}}}) -> [7 9 7 4]", "(flatten {3 {1 {2} {2}}}) -> [3 1 2 2]", "(flatten {}) -> []", "(flatten {2 {7}}) -> [2 7]", "(flatten {8}) -> [8]", "(flatten {2}) -> [2]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {1 {6 {9}} {7 {0}}}) -> [1 6 9 7 0]", "(flatten {9 {6} {1 {6} {4}}}) -> [9 6 1 6 4]", "(flatten {1 {8} {4 {1 {2}} {4}}}) -> [1 8 4 1 2 4]", "(flatten {3}) -> [3]", "(flatten {3 {5 {3 {2} {2}} {7 {3}}} {8}}) -> [3 5 3 2 2 7 3 8]"], "time": 0.184286}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7 {0 {3 {8} {3}}}}) -> [7 0 3 8 3]", "(flatten {2 {8} {7 {8}}}) -> [2 8 7 8]", "(flatten {}) -> []", "(flatten {0 {0 {8}} {9 {0}}}) -> [0 0 8 9 0]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {8 {4 {9} {5}} {1 {5} {1}}}) -> [8 4 9 5 1 5 1]", "(flatten {2}) -> [2]", "(flatten {8 {2}}) -> [8 2]", "(flatten {3 {6 {1 {6}} {3}}}) -> [3 6 1 6 3]", "(flatten {0 {9 {7}}}) -> [0 9 7]", "(flatten {6}) -> [6]", "(flatten {1 {7 {4}} {5 {2 {8} {5}}}}) -> [1 7 4 5 2 8 5]", "(flatten {3 {8 {0 {8}}}}) -> [3 8 0 8]", "(flatten {9}) -> [9]", "(flatten {8}) -> [8]", "(flatten {9 {2 {7 {7}} {2 {0} {3}}}}) -> [9 2 7 7 2 0 3]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {1 {4} {7}}) -> [1 4 7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {2}) -> [2]"], "time": 0.147649}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {5} {8}}) -> [6 5 8]", "(flatten {8 {1} {0}}) -> [8 1 0]", "(flatten {}) -> []", "(flatten {0 {0 {1} {4}} {4 {8 {3} {0}}}}) -> [0 0 1 4 4 8 3 0]", "(flatten {8 {2 {5} {6 {0} {8}}}}) -> [8 2 5 6 0 8]", "(flatten {0 {3 {4} {7}} {9 {6} {6}}}) -> [0 3 4 7 9 6 6]", "(flatten {4}) -> [4]", "(flatten {1 {5 {1 {0} {1}} {4 {3} {0}}}}) -> [1 5 1 0 1 4 3 0]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {8 {2 {4} {5}} {0 {6}}}) -> [8 2 4 5 0 6]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {8}) -> [8]", "(flatten {0 {4 {7 {8}}}}) -> [0 4 7 8]", "(flatten {5}) -> [5]", "(flatten {5}) -> [5]"], "time": 0.158372}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {6 {6} {1}}}) -> [8 6 6 1]", "(flatten {5 {1 {2} {2}} {6}}) -> [5 1 2 2 6]", "(flatten {1}) -> [1]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {3 {1}}) -> [3 1]", "(flatten {}) -> []", "(flatten {1 {2 {1 {3}} {6 {6} {5}}}}) -> [1 2 1 3 6 6 5]", "(flatten {6}) -> [6]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {8 {7 {8 {3}} {0 {1} {4}}}}) -> [8 7 8 3 0 1 4]", "(flatten {8}) -> [8]", "(flatten {2}) -> [2]", "(flatten {6}) -> [6]", "(flatten {8 {8} {9}}) -> [8 8 9]", "(flatten {6 {8}}) -> [6 8]", "(flatten {0 {9}}) -> [0 9]", "(flatten {}) -> []"], "time": 0.148383}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2 {9}}) -> [2 9]", "(flatten {4 {5 {4 {0}}}}) -> [4 5 4 0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {2 {9} {6}}) -> [2 9 6]", "(flatten {8 {3 {3}}}) -> [8 3 3]", "(flatten {2 {8 {9} {4 {6} {3}}} {2 {6 {6}}}}) -> [2 8 9 4 6 3 2 6 6]", "(flatten {2 {1} {8 {2} {9}}}) -> [2 1 8 2 9]", "(flatten {7 {8}}) -> [7 8]", "(flatten {8 {9} {8 {2}}}) -> [8 9 8 2]", "(flatten {0}) -> [0]", "(flatten {6 {4 {4}}}) -> [6 4 4]", "(flatten {6 {7 {3} {5}}}) -> [6 7 3 5]", "(flatten {}) -> []", "(flatten {0 {9 {1 {4} {9}} {5}}}) -> [0 9 1 4 9 5]", "(flatten {}) -> []", "(flatten {9 {8 {8} {2}}}) -> [9 8 8 2]", "(flatten {0 {2 {9} {6}}}) -> [0 2 9 6]", "(flatten {3 {7 {1}}}) -> [3 7 1]", "(flatten {9 {8 {3 {1} {1}} {8 {1} {3}}}}) -> [9 8 3 1 1 8 1 3]", "(flatten {8 {5}}) -> [8 5]", "(flatten {}) -> []", "(flatten {0}) -> [0]"], "time": 0.157155}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {4}}) -> [3 4]", "(flatten {8 {4 {2 {6} {2}} {0}}}) -> [8 4 2 6 2 0]", "(flatten {}) -> []", "(flatten {6 {3 {4}} {8}}) -> [6 3 4 8]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {4} {7 {3} {0}}}) -> [3 4 7 3 0]", "(flatten {1 {4 {6 {4} {3}} {5 {3}}} {5 {8} {0}}}) -> [1 4 6 4 3 5 3 5 8 0]", "(flatten {4}) -> [4]", "(flatten {2 {2} {4}}) -> [2 2 4]", "(flatten {2 {9} {5 {5 {6}} {6 {3} {2}}}}) -> [2 9 5 5 6 6 3 2]", "(flatten {1 {1}}) -> [1 1]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {9 {0}}) -> [9 0]", "(flatten {9 {2}}) -> [9 2]", "(flatten {0}) -> [0]", "(flatten {5 {6}}) -> [5 6]", "(flatten {6 {5}}) -> [6 5]"], "time": 0.156971}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1 {8} {4}}) -> [1 8 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {4} {4 {0} {8 {4} {1}}}}) -> [4 4 4 0 8 4 1]", "(flatten {}) -> []", "(flatten {9 {2} {9}}) -> [9 2 9]", "(flatten {8}) -> [8]", "(flatten {5 {4 {1}} {4 {2}}}) -> [5 4 1 4 2]", "(flatten {2 {6}}) -> [2 6]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {6 {3 {3} {0 {1}}}}) -> [6 3 3 0 1]", "(flatten {5}) -> [5]", "(flatten {9}) -> [9]", "(flatten {8 {0}}) -> [8 0]", "(flatten {}) -> []", "(flatten {9 {8 {3 {4} {1}}}}) -> [9 8 3 4 1]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {0 {2} {2}}) -> [0 2 2]", "(flatten {4 {3 {3} {3}}}) -> [4 3 3 3]", "(flatten {7 {2} {3}}) -> [7 2 3]"], "time": 0.13563}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7 {4 {4} {8}} {1 {7}}}) -> [7 4 4 8 1 7]", "(flatten {7}) -> [7]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {4 {7 {2} {4 {1}}}}) -> [4 7 2 4 1]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {8}) -> [8]", "(flatten {6}) -> [6]", "(flatten {4 {2 {6 {7}}}}) -> [4 2 6 7]", "(flatten {2 {0}}) -> [2 0]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {9 {3} {7}}) -> [9 3 7]", "(flatten {1 {6}}) -> [1 6]", "(flatten {2}) -> [2]", "(flatten {8 {1 {2} {5}}}) -> [8 1 2 5]", "(flatten {9 {8}}) -> [9 8]", "(flatten {4 {8} {2}}) -> [4 8 2]"], "time": 0.137014}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {6 {8} {0}}) -> [6 8 0]", "(flatten {3}) -> [3]", "(flatten {8 {9} {6}}) -> [8 9 6]", "(flatten {9 {4} {9}}) -> [9 4 9]", "(flatten {3 {3} {5}}) -> [3 3 5]", "(flatten {}) -> []", "(flatten {2 {6 {1}} {8 {7} {8}}}) -> [2 6 1 8 7 8]", "(flatten {4 {1 {5 {3}} {2 {5} {7}}} {2}}) -> [4 1 5 3 2 5 7 2]", "(flatten {0 {1 {4}} {1 {2 {9} {6}}}}) -> [0 1 4 1 2 9 6]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {4 {1 {5}}} {7 {5 {6} {3}}}}) -> [0 4 1 5 7 5 6 3]", "(flatten {}) -> []", "(flatten {0 {3 {2} {2 {7}}} {1 {8 {4} {5}}}}) -> [0 3 2 2 7 1 8 4 5]", "(flatten {4 {3 {1}}}) -> [4 3 1]", "(flatten {1 {6} {8}}) -> [1 6 8]", "(flatten {8}) -> [8]", "(flatten {2}) -> [2]", "(flatten {3}) -> [3]", "(flatten {5 {3}}) -> [5 3]"], "time": 0.162162}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1 {3} {9 {7}}}) -> [1 3 9 7]", "(flatten {2 {9} {4}}) -> [2 9 4]", "(flatten {4 {8}}) -> [4 8]", "(flatten {3 {8 {1} {0}}}) -> [3 8 1 0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {2} {0}}) -> [9 2 0]", "(flatten {}) -> []", "(flatten {3 {1}}) -> [3 1]", "(flatten {}) -> []", "(flatten {2 {6}}) -> [2 6]", "(flatten {1}) -> [1]", "(flatten {9}) -> [9]", "(flatten {2}) -> [2]", "(flatten {8}) -> [8]", "(flatten {0 {7}}) -> [0 7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {5 {5} {6}}) -> [5 5 6]", "(flatten {3 {6} {7}}) -> [3 6 7]", "(flatten {2 {0 {2}}}) -> [2 0 2]"], "time": 0.121543}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7 {0 {4 {2} {3}}} {0 {4} {2}}}) -> [7 0 4 2 3 0 4 2]", "(flatten {3 {4} {6}}) -> [3 4 6]", "(flatten {8 {9}}) -> [8 9]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {2 {6} {7}}) -> [2 6 7]"], "time": 0.14994}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {9 {4} {0 {7}}}) -> [9 4 0 7]", "(flatten {2}) -> [2]", "(flatten {5 {3} {5}}) -> [5 3 5]", "(flatten {}) -> []", "(flatten {5 {7} {6 {9}}}) -> [5 7 6 9]", "(flatten {3 {2 {0}}}) -> [3 2 0]", "(flatten {1 {1 {4}} {4 {1}}}) -> [1 1 4 4 1]", "(flatten {9 {4}}) -> [9 4]", "(flatten {5}) -> [5]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {9 {4 {6}}}) -> [9 4 6]", "(flatten {2 {0} {5}}) -> [2 0 5]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {9 {0} {0}}) -> [9 0 0]", "(flatten {3 {1} {8}}) -> [3 1 8]", "(flatten {}) -> []", "(flatten {}) -> []"], "time": 0.113336}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {1 {2} {8}}) -> [1 2 8]", "(flatten {6 {6} {6}}) -> [6 6 6]", "(flatten {0 {2 {9}}}) -> [0 2 9]", "(flatten {0 {8}}) -> [0 8]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {6 {3 {9}} {6}}) -> [6 3 9 6]", "(flatten {7}) -> [7]", "(flatten {7 {1}}) -> [7 1]", "(flatten {6 {7}}) -> [6 7]", "(flatten {3}) -> [3]", "(flatten {6 {4}}) -> [6 4]", "(flatten {}) -> []", "(flatten {9 {3 {4}}}) -> [9 3 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {4 {4 {9 {1}} {5 {8}}} {0}}) -> [4 4 9 1 5 8 0]", "(flatten {}) -> []", "(flatten {7}) -> [7]"], "time": 0.134835}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {8 {9} {6}}) -> [8 9 6]", "(flatten {4 {7}}) -> [4 7]", "(flatten {2 {6} {2 {8} {0}}}) -> [2 6 2 8 0]", "(flatten {1 {2} {8}}) -> [1 2 8]", "(flatten {1 {2} {9}}) -> [1 2 9]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {1 {8 {0 {1} {6}} {7 {6}}} {1 {6 {0} {3}}}}) -> [1 8 0 1 6 7 6 1 6 0 3]", "(flatten {5 {7}}) -> [5 7]", "(flatten {3 {8} {6}}) -> [3 8 6]", "(flatten {1 {0 {5 {6} {5}} {8}}}) -> [1 0 5 6 5 8]", "(flatten {9 {6 {3 {6}} {2 {0} {2}}}}) -> [9 6 3 6 2 0 2]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {0 {4} {2}}) -> [0 4 2]", "(flatten {6 {9}}) -> [6 9]", "(flatten {8 {1}}) -> [8 1]", "(flatten {}) -> []", "(flatten {}) -> []"], "time": 0.144001}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {2 {0} {9}}}) -> [5 2 0 9]", "(flatten {1}) -> [1]", "(flatten {4 {4} {5}}) -> [4 4 5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {8} {5}}) -> [0 8 5]", "(flatten {0}) -> [0]", "(flatten {1 {7} {8 {0} {7}}}) -> [1 7 8 0 7]", "(flatten {3 {5}}) -> [3 5]", "(flatten {2 {3}}) -> [2 3]", "(flatten {3}) -> [3]", "(flatten {9 {6 {4} {2}} {0 {0}}}) -> [9 6 4 2 0 0]", "(flatten {8 {9}}) -> [8 9]", "(flatten {9 {3 {4} {5}}}) -> [9 3 4 5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {3 {2}}) -> [3 2]", "(flatten {7}) -> [7]", "(flatten {5}) -> [5]", "(flatten {5 {7} {6 {1} {6}}}) -> [5 7 6 1 6]"], "time": 0.173218}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2 {8 {4} {7}}}) -> [2 8 4 7]", "(flatten {3}) -> [3]", "(flatten {4 {8}}) -> [4 8]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {1} {0}}) -> [8 1 0]", "(flatten {4 {2 {2} {1}} {7}}) -> [4 2 2 1 7]", "(flatten {7}) -> [7]", "(flatten {3 {2 {9} {3}} {0 {9}}}) -> [3 2 9 3 0 9]", "(flatten {}) -> []", "(flatten {5 {1 {2 {4}}} {3 {5 {7} {8}}}}) -> [5 1 2 4 3 5 7 8]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {2 {5} {1}} {6 {3} {1}}}) -> [3 2 5 1 6 3 1]", "(flatten {}) -> []", "(flatten {4 {2} {0}}) -> [4 2 0]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {6 {0 {8}}}) -> [6 0 8]"], "time": 0.144875}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {6 {5 {6}} {0}} {6}}) -> [6 6 5 6 0 6]", "(flatten {3 {5} {9}}) -> [3 5 9]", "(flatten {3 {1 {5 {8} {1}}} {9}}) -> [3 1 5 8 1 9]", "(flatten {5 {4} {4}}) -> [5 4 4]", "(flatten {}) -> []", "(flatten {3 {5 {6}}}) -> [3 5 6]", "(flatten {7 {2 {5 {9} {1}}}}) -> [7 2 5 9 1]", "(flatten {0 {7}}) -> [0 7]", "(flatten {6 {7 {8 {6}}}}) -> [6 7 8 6]", "(flatten {9 {7} {8}}) -> [9 7 8]", "(flatten {2}) -> [2]", "(flatten {4}) -> [4]", "(flatten {0 {6 {4} {3}} {7}}) -> [0 6 4 3 7]", "(flatten {4 {3 {2}}}) -> [4 3 2]", "(flatten {}) -> []", "(flatten {8 {9 {0 {2} {5}} {0 {3} {9}}} {7 {9} {6 {2}}}}) -> [8 9 0 2 5 0 3 9 7 9 6 2]", "(flatten {6 {1} {8}}) -> [6 1 8]", "(flatten {1 {4 {4} {3}}}) -> [1 4 4 3]", "(flatten {6}) -> [6]", "(flatten {9 {8}}) -> [9 8]", "(flatten {9 {0 {8}}}) -> [9 0 8]", "(flatten {5 {2}}) -> [5 2]", "(flatten {5 {0 {4}} {4}}) -> [5 0 4 4]"], "time": 0.152794}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {7}}) -> [5 7]", "(flatten {3}) -> [3]", "(flatten {5 {6 {4}} {6}}) -> [5 6 4 6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {1}) -> [1]", "(flatten {6}) -> [6]", "(flatten {3 {3 {7 {6} {2}}}}) -> [3 3 7 6 2]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {2 {9 {4 {7} {8}}} {1 {9 {5}}}}) -> [2 9 4 7 8 1 9 5]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {2 {5 {7 {1}} {7}} {2 {8 {6} {4}}}}) -> [2 5 7 1 7 2 8 6 4]", "(flatten {4 {5 {1}} {6 {5} {4}}}) -> [4 5 1 6 5 4]", "(flatten {5}) -> [5]", "(flatten {2 {9} {3}}) -> [2 9 3]", "(flatten {1 {0}}) -> [1 0]", "(flatten {5 {7} {7 {9}}}) -> [5 7 7 9]", "(flatten {3}) -> [3]", "(flatten {4 {9}}) -> [4 9]", "(flatten {}) -> []"], "time": 0.131922}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {5}}) -> [8 5]", "(flatten {}) -> []", "(flatten {9 {9 {6}} {5 {4} {6}}}) -> [9 9 6 5 4 6]", "(flatten {8}) -> [8]", "(flatten {5}) -> [5]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {8}) -> [8]", "(flatten {3 {2 {3} {4}}}) -> [3 2 3 4]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {7 {1 {4} {6}} {9}}) -> [7 1 4 6 9]"], "time": 0.149235}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {3 {2 {7 {9} {9}}} {6 {3 {3}}}}) -> [3 2 7 9 9 6 3 3]", "(flatten {8}) -> [8]", "(flatten {6 {0 {9 {6}} {8}}}) -> [6 0 9 6 8]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {2 {5} {5}}) -> [2 5 5]", "(flatten {7}) -> [7]", "(flatten {1 {6 {3}} {3 {6}}}) -> [1 6 3 3 6]", "(flatten {9 {2 {4}}}) -> [9 2 4]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {2 {2 {1 {5} {4}} {1 {1}}} {4 {2 {8} {1}}}}) -> [2 2 1 5 4 1 1 4 2 8 1]", "(flatten {0 {8 {2 {8}} {3}} {3 {8 {8} {8}}}}) -> [0 8 2 8 3 3 8 8 8]", "(flatten {5 {5}}) -> [5 5]", "(flatten {}) -> []", "(flatten {2 {3 {8} {1}}}) -> [2 3 8 1]", "(flatten {3 {2 {2 {3} {3}}} {5}}) -> [3 2 2 3 3 5]", "(flatten {9 {8} {8 {6 {6}}}}) -> [9 8 8 6 6]", "(flatten {1}) -> [1]", "(flatten {0 {4} {3}}) -> [0 4 3]"], "time": 0.164284}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {3 {1} {7}}) -> [3 1 7]", "(flatten {1 {6 {9 {8}}}}) -> [1 6 9 8]", "(flatten {2 {0 {4} {8}} {3 {1} {0}}}) -> [2 0 4 8 3 1 0]", "(flatten {8 {6} {7}}) -> [8 6 7]", "(flatten {3 {6}}) -> [3 6]", "(flatten {0 {1 {7 {1}}} {3 {1 {4}}}}) -> [0 1 7 1 3 1 4]", "(flatten {5 {8 {8 {6}}}}) -> [5 8 8 6]", "(flatten {2 {5} {1}}) -> [2 5 1]", "(flatten {}) -> []", "(flatten {0 {2} {0}}) -> [0 2 0]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {1 {1 {4} {2}}}) -> [1 1 4 2]", "(flatten {3 {6} {2}}) -> [3 6 2]", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {9 {0}}) -> [9 0]", "(flatten {}) -> []", "(flatten {5 {8 {7 {6} {1}}}}) -> [5 8 7 6 1]", "(flatten {6}) -> [6]"], "time": 0.135954}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {1 {9}}) -> [1 9]", "(flatten {}) -> []", "(flatten {0 {5 {0} {2}}}) -> [0 5 0 2]", "(flatten {6 {1 {9} {4}} {2 {4} {5}}}) -> [6 1 9 4 2 4 5]", "(flatten {5}) -> [5]", "(flatten {7}) -> [7]", "(flatten {7 {1 {1}} {5 {7}}}) -> [7 1 1 5 7]", "(flatten {9 {0 {0} {4}} {9}}) -> [9 0 0 4 9]", "(flatten {}) -> []", "(flatten {1 {5} {5}}) -> [1 5 5]", "(flatten {}) -> []", "(flatten {6 {3 {5 {0} {9}} {3 {7}}} {7 {4}}}) -> [6 3 5 0 9 3 7 7 4]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {1 {3 {3} {3}} {9}}) -> [1 3 3 3 9]", "(flatten {}) -> []", "(flatten {7 {0}}) -> [7 0]", "(flatten {2 {3} {6 {3}}}) -> [2 3 6 3]", "(flatten {1}) -> [1]", "(flatten {4 {1 {6 {8} {2}}}}) -> [4 1 6 8 2]", "(flatten {}) -> []"], "time": 0.145159}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {4}}) -> [6 4]", "(flatten {}) -> []", "(flatten {6 {3} {6 {5}}}) -> [6 3 6 5]", "(flatten {}) -> []", "(flatten {0 {3 {3}}}) -> [0 3 3]", "(flatten {5 {9 {8} {6 {8}}} {7 {9 {6}}}}) -> [5 9 8 6 8 7 9 6]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {0}) -> [0]", "(flatten {3 {4 {8 {6}} {4}}}) -> [3 4 8 6 4]", "(flatten {2 {9 {3}}}) -> [2 9 3]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {3 {6}}) -> [3 6]", "(flatten {6 {4}}) -> [6 4]", "(flatten {3 {3}}) -> [3 3]", "(flatten {4 {2} {0}}) -> [4 2 0]", "(flatten {4 {4} {8}}) -> [4 4 8]", "(flatten {1 {2 {9}} {3}}) -> [1 2 9 3]"], "time": 0.144333}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {9}) -> [9]", "(flatten {1 {9 {9}}}) -> [1 9 9]", "(flatten {6 {5} {4}}) -> [6 5 4]", "(flatten {0}) -> [0]", "(flatten {2 {6} {4}}) -> [2 6 4]", "(flatten {6 {0} {9}}) -> [6 0 9]", "(flatten {7}) -> [7]", "(flatten {4 {9}}) -> [4 9]", "(flatten {7}) -> [7]", "(flatten {9 {0 {8} {8}} {9 {4}}}) -> [9 0 8 8 9 4]", "(flatten {3 {3} {8 {0 {5}} {5 {4}}}}) -> [3 3 8 0 5 5 4]", "(flatten {0 {3} {3 {1} {0}}}) -> [0 3 3 1 0]", "(flatten {0 {3 {5 {7}} {0 {0}}}}) -> [0 3 5 7 0 0]", "(flatten {5}) -> [5]", "(flatten {4 {2 {2 {3}} {2}} {5 {7 {7} {1}} {2}}}) -> [4 2 2 3 2 5 7 7 1 2]", "(flatten {2}) -> [2]", "(flatten {6}) -> [6]", "(flatten {0 {2} {1}}) -> [0 2 1]", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {6 {9} {8}}) -> [6 9 8]"], "time": 0.145371}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1 {5}}) -> [1 5]", "(flatten {0 {5 {2 {4} {2}} {4 {9}}}}) -> [0 5 2 4 2 4 9]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {2} {9 {4 {9} {4}}}}) -> [8 2 9 4 9 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {4 {7 {0}} {9}}}) -> [9 4 7 0 9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {1}) -> [1]", "(flatten {6}) -> [6]", "(flatten {9 {4} {3}}) -> [9 4 3]", "(flatten {2 {4} {4 {1 {6} {8}} {3 {4} {6}}}}) -> [2 4 4 1 6 8 3 4 6]", "(flatten {1 {3} {3 {3} {1}}}) -> [1 3 3 3 1]", "(flatten {9 {5}}) -> [9 5]", "(flatten {3 {6 {4}}}) -> [3 6 4]", "(flatten {6}) -> [6]", "(flatten {7 {9 {7 {1} {0}}}}) -> [7 9 7 1 0]", "(flatten {}) -> []", "(flatten {8 {9 {1 {1}} {3 {7} {8}}} {8}}) -> [8 9 1 1 3 7 8 8]"], "time": 0.146014}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {1}) -> [1]", "(flatten {4 {4 {0}} {8 {4} {5}}}) -> [4 4 0 8 4 5]", "(flatten {6}) -> [6]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {0 {6}}) -> [0 6]", "(flatten {7}) -> [7]", "(flatten {9 {3 {2 {3}} {9 {0} {9}}}}) -> [9 3 2 3 9 0 9]", "(flatten {}) -> []", "(flatten {7 {8}}) -> [7 8]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {2 {9 {6 {1} {4}} {3 {2} {5}}} {5}}) -> [2 9 6 1 4 3 2 5 5]", "(flatten {4}) -> [4]", "(flatten {3 {2 {4 {4}} {1}}}) -> [3 2 4 4 1]", "(flatten {7 {8}}) -> [7 8]", "(flatten {9 {9 {8 {9}}}}) -> [9 9 8 9]", "(flatten {}) -> []", "(flatten {9 {1}}) -> [9 1]", "(flatten {9 {3} {9}}) -> [9 3 9]", "(flatten {2}) -> [2]", "(flatten {9 {8 {6}}}) -> [9 8 6]"], "time": 0.138527}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {5 {0 {7} {9}}} {4 {1}}}) -> [4 5 0 7 9 4 1]", "(flatten {}) -> []", "(flatten {7 {8}}) -> [7 8]", "(flatten {}) -> []", "(flatten {8 {8}}) -> [8 8]", "(flatten {7}) -> [7]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {6 {9 {9} {1}} {8}}) -> [6 9 9 1 8]", "(flatten {0 {9 {8 {3}}} {4 {0 {7}} {4 {4}}}}) -> [0 9 8 3 4 0 7 4 4]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {9}) -> [9]", "(flatten {9 {2} {6 {2}}}) -> [9 2 6 2]", "(flatten {6}) -> [6]", "(flatten {8 {9}}) -> [8 9]", "(flatten {2 {1} {1}}) -> [2 1 1]", "(flatten {5 {5}}) -> [5 5]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {2 {7}}) -> [2 7]"], "time": 0.137357}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2 {8} {2}}) -> [2 8 2]", "(flatten {}) -> []", "(flatten {4 {1 {7}} {1 {3}}}) -> [4 1 7 1 3]", "(flatten {6 {2 {7} {3}}}) -> [6 2 7 3]", "(flatten {1 {5 {8 {2} {2}} {3 {0}}}}) -> [1 5 8 2 2 3 0]", "(flatten {9}) -> [9]", "(flatten {5}) -> [5]", "(flatten {2 {5} {5 {7}}}) -> [2 5 5 7]", "(flatten {2}) -> [2]", "(flatten {0 {0 {7 {7}}} {6}}) -> [0 0 7 7 6]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {2 {0 {2} {7}}}) -> [2 0 2 7]", "(flatten {7 {8} {0 {1 {0}}}}) -> [7 8 0 1 0]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {7 {2}}) -> [7 2]", "(flatten {4}) -> [4]", "(flatten {9 {8}}) -> [9 8]", "(flatten {}) -> []"], "time": 0.133067}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8 {9 {6 {2} {1}} {4}} {3 {3} {8 {4}}}}) -> [8 9 6 2 1 4 3 3 8 4]", "(flatten {7 {6}}) -> [7 6]", "(flatten {1}) -> [1]", "(flatten {5 {5}}) -> [5 5]", "(flatten {7}) -> [7]", "(flatten {9 {5}}) -> [9 5]", "(flatten {2}) -> [2]", "(flatten {3 {3}}) -> [3 3]", "(flatten {7 {7 {9} {0}} {1 {5}}}) -> [7 7 9 0 1 5]", "(flatten {2 {4 {0}} {5}}) -> [2 4 0 5]", "(flatten {5}) -> [5]", "(flatten {2 {6} {5}}) -> [2 6 5]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {0 {0} {3 {4} {9 {8} {9}}}}) -> [0 0 3 4 9 8 9]", "(flatten {5 {4}}) -> [5 4]", "(flatten {7 {8 {9 {7}}} {2}}) -> [7 8 9 7 2]", "(flatten {}) -> []", "(flatten {9 {0}}) -> [9 0]", "(flatten {7 {3 {4}} {4}}) -> [7 3 4 4]", "(flatten {}) -> []", "(flatten {2 {0 {5}} {4}}) -> [2 0 5 4]", "(flatten {}) -> []"], "time": 0.12012}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {5}}) -> [3 5]", "(flatten {7 {9 {7 {0} {1}}}}) -> [7 9 7 0 1]", "(flatten {1 {5 {1 {9} {0}}}}) -> [1 5 1 9 0]", "(flatten {4 {2 {1}}}) -> [4 2 1]", "(flatten {3}) -> [3]", "(flatten {9 {9} {0 {5} {8}}}) -> [9 9 0 5 8]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {6}) -> [6]", "(flatten {3}) -> [3]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {7 {5 {0 {8} {8}} {3}}}) -> [7 5 0 8 8 3]", "(flatten {9 {9 {1} {7}}}) -> [9 9 1 7]", "(flatten {1}) -> [1]", "(flatten {5 {7} {7}}) -> [5 7 7]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {8 {5 {9} {1}}}) -> [8 5 9 1]", "(flatten {0}) -> [0]"], "time": 0.125808}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8 {0}}) -> [8 0]", "(flatten {}) -> []", "(flatten {1 {4}}) -> [1 4]", "(flatten {}) -> []", "(flatten {6 {4} {5}}) -> [6 4 5]", "(flatten {3}) -> [3]", "(flatten {7}) -> [7]", "(flatten {4 {4 {2}} {0}}) -> [4 4 2 0]", "(flatten {2 {0 {7 {3} {9}} {6 {6}}} {4 {9 {9} {5}}}}) -> [2 0 7 3 9 6 6 4 9 9 5]", "(flatten {}) -> []", "(flatten {5 {5 {4}}}) -> [5 5 4]", "(flatten {4 {7} {3}}) -> [4 7 3]", "(flatten {1}) -> [1]", "(flatten {7 {3 {4}}}) -> [7 3 4]", "(flatten {2 {6}}) -> [2 6]", "(flatten {5}) -> [5]", "(flatten {6 {8 {0}} {2 {0 {0} {5}}}}) -> [6 8 0 2 0 0 5]", "(flatten {6 {9} {1 {4} {5}}}) -> [6 9 1 4 5]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {8 {2 {9}}}) -> [8 2 9]", "(flatten {7}) -> [7]", "(flatten {4 {4 {0}}}) -> [4 4 0]"], "time": 0.156795}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {0}) -> [0]", "(flatten {4 {4 {5}} {2 {6 {3} {0}}}}) -> [4 4 5 2 6 3 0]", "(flatten {5 {0} {8}}) -> [5 0 8]", "(flatten {6 {0} {1}}) -> [6 0 1]", "(flatten {}) -> []", "(flatten {0 {2} {4}}) -> [0 2 4]", "(flatten {}) -> []", "(flatten {9 {7 {3} {0}}}) -> [9 7 3 0]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {2 {8 {9 {0} {2}} {8 {4} {5}}} {4}}) -> [2 8 9 0 2 8 4 5 4]", "(flatten {1 {7 {4} {0}} {3 {7}}}) -> [1 7 4 0 3 7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {5 {2 {3} {6}}}) -> [5 2 3 6]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {}) -> []"], "time": 0.126138}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {6}) -> [6]", "(flatten {8 {4 {3 {6} {4}} {3 {6} {5}}}}) -> [8 4 3 6 4 3 6 5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {9 {1 {6 {2} {7}} {9}} {1 {5 {8}}}}) -> [9 1 6 2 7 9 1 5 8]", "(flatten {3 {3}}) -> [3 3]", "(flatten {9 {2 {7 {8} {2}}}}) -> [9 2 7 8 2]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {5 {4 {2 {3}} {9 {7}}} {1}}) -> [5 4 2 3 9 7 1]", "(flatten {8 {8 {6} {0}} {0}}) -> [8 8 6 0 0]", "(flatten {4 {5 {5 {3}}}}) -> [4 5 5 3]", "(flatten {2}) -> [2]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7 {3} {1 {7 {6}}}}) -> [7 3 1 7 6]"], "time": 0.146968}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {9} {3}}) -> [5 9 3]", "(flatten {7 {1 {6 {4}} {2 {1}}} {4 {2} {1 {8}}}}) -> [7 1 6 4 2 1 4 2 1 8]", "(flatten {0 {2 {7}} {8}}) -> [0 2 7 8]", "(flatten {6 {8 {7 {8}}} {5 {4}}}) -> [6 8 7 8 5 4]", "(flatten {3 {8}}) -> [3 8]", "(flatten {5 {0} {5}}) -> [5 0 5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {8 {5 {8} {1}} {7 {8} {6}}}) -> [8 5 8 1 7 8 6]", "(flatten {3 {9 {8}} {9}}) -> [3 9 8 9]", "(flatten {5}) -> [5]", "(flatten {4}) -> [4]", "(flatten {5 {4}}) -> [5 4]", "(flatten {7}) -> [7]", "(flatten {5}) -> [5]", "(flatten {5 {5} {7 {4} {1}}}) -> [5 5 7 4 1]", "(flatten {4 {0}}) -> [4 0]", "(flatten {1}) -> [1]", "(flatten {2 {6 {4}} {2}}) -> [2 6 4 2]"], "time": 0.150951}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {1 {4 {7} {9}} {8 {6} {8}}}}) -> [5 1 4 7 9 8 6 8]", "(flatten {}) -> []", "(flatten {6 {5 {5 {9}}} {3 {7 {9} {9}} {9 {0}}}}) -> [6 5 5 9 3 7 9 9 9 0]", "(flatten {8}) -> [8]", "(flatten {2}) -> [2]", "(flatten {1 {9 {8 {4} {9}} {1 {4} {2}}}}) -> [1 9 8 4 9 1 4 2]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {0 {4 {3} {3}}}) -> [0 4 3 3]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {5 {2 {1}}} {8 {4}}}) -> [3 5 2 1 8 4]", "(flatten {9}) -> [9]", "(flatten {5 {0}}) -> [5 0]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {2 {8 {7} {0}}}) -> [2 8 7 0]", "(flatten {4 {8}}) -> [4 8]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []"], "time": 0.149852}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {5 {4}}) -> [5 4]", "(flatten {1 {9}}) -> [1 9]", "(flatten {1 {8}}) -> [1 8]", "(flatten {1 {7} {1 {0}}}) -> [1 7 1 0]", "(flatten {}) -> []", "(flatten {5 {2 {9 {9} {0}}} {9}}) -> [5 2 9 9 0 9]", "(flatten {2 {8 {6} {1}} {4}}) -> [2 8 6 1 4]", "(flatten {9}) -> [9]", "(flatten {7 {9 {2 {8}} {5 {3} {7}}}}) -> [7 9 2 8 5 3 7]", "(flatten {6}) -> [6]", "(flatten {4 {2}}) -> [4 2]", "(flatten {9 {8 {3} {2 {3}}} {1 {3 {6}}}}) -> [9 8 3 2 3 1 3 6]", "(flatten {1 {1} {5}}) -> [1 1 5]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {4 {3}}) -> [4 3]", "(flatten {}) -> []", "(flatten {7 {0}}) -> [7 0]", "(flatten {5}) -> [5]"], "time": 0.154863}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6 {0} {6}}) -> [6 0 6]", "(flatten {2}) -> [2]", "(flatten {6 {5 {7} {6 {0} {8}}} {4 {5 {2}}}}) -> [6 5 7 6 0 8 4 5 2]", "(flatten {0 {7} {3}}) -> [0 7 3]", "(flatten {8 {5}}) -> [8 5]", "(flatten {}) -> []", "(flatten {8 {3 {9 {1}}}}) -> [8 3 9 1]", "(flatten {0 {2} {5}}) -> [0 2 5]", "(flatten {0 {1 {6 {2}}}}) -> [0 1 6 2]", "(flatten {3}) -> [3]", "(flatten {3 {1 {3 {4}} {1 {4}}} {9 {1 {8}}}}) -> [3 1 3 4 1 4 9 1 8]", "(flatten {5 {1}}) -> [5 1]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {3 {4 {8}} {5 {3} {9}}}) -> [3 4 8 5 3 9]", "(flatten {5 {9 {2} {9}}}) -> [5 9 2 9]", "(flatten {9}) -> [9]", "(flatten {3}) -> [3]", "(flatten {3 {2 {3 {8} {9}} {4 {7}}} {1}}) -> [3 2 3 8 9 4 7 1]", "(flatten {9 {8 {1}} {8 {3 {1}} {3}}}) -> [9 8 1 8 3 1 3]", "(flatten {0}) -> [0]", "(flatten {2}) -> [2]"], "time": 0.145523}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {1 {9 {9}} {9 {5} {1}}}) -> [1 9 9 9 5 1]", "(flatten {}) -> []", "(flatten {9 {9}}) -> [9 9]", "(flatten {2 {7} {9}}) -> [2 7 9]", "(flatten {7 {6 {9}} {6 {2} {3}}}) -> [7 6 9 6 2 3]", "(flatten {6}) -> [6]", "(flatten {8 {2 {1 {9}}}}) -> [8 2 1 9]", "(flatten {4 {7 {3} {6}}}) -> [4 7 3 6]", "(flatten {2}) -> [2]", "(flatten {9 {5}}) -> [9 5]", "(flatten {}) -> []", "(flatten {8 {0 {4 {6} {7}} {1 {0}}}}) -> [8 0 4 6 7 1 0]", "(flatten {9 {2}}) -> [9 2]", "(flatten {3 {6}}) -> [3 6]", "(flatten {6 {9 {5} {2 {6}}}}) -> [6 9 5 2 6]", "(flatten {1}) -> [1]", "(flatten {6 {3}}) -> [6 3]", "(flatten {9}) -> [9]", "(flatten {7}) -> [7]", "(flatten {7}) -> [7]", "(flatten {8}) -> [8]"], "time": 0.141439}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {5 {3}}}) -> [6 5 3]", "(flatten {}) -> []", "(flatten {0 {4}}) -> [0 4]", "(flatten {9 {3} {7 {2 {0} {5}} {0 {5}}}}) -> [9 3 7 2 0 5 0 5]", "(flatten {7 {9}}) -> [7 9]", "(flatten {4 {9} {4}}) -> [4 9 4]", "(flatten {}) -> []", "(flatten {3 {4} {4}}) -> [3 4 4]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {7 {0 {8} {2}} {4 {4} {6}}}) -> [7 0 8 2 4 4 6]", "(flatten {1 {1} {7 {4 {8}} {6 {5} {7}}}}) -> [1 1 7 4 8 6 5 7]", "(flatten {4 {8 {1} {4}} {7 {9} {5}}}) -> [4 8 1 4 7 9 5]", "(flatten {}) -> []", "(flatten {8 {7 {7} {2}} {2 {3} {0}}}) -> [8 7 7 2 2 3 0]", "(flatten {1 {2}}) -> [1 2]", "(flatten {2}) -> [2]", "(flatten {7 {1 {8}} {1 {5} {8}}}) -> [7 1 8 1 5 8]", "(flatten {5}) -> [5]", "(flatten {9 {4 {8 {3}} {3 {5}}} {0}}) -> [9 4 8 3 3 5 0]", "(flatten {1 {4 {7 {5} {6}} {3 {8} {6}}} {5 {2 {1} {0}} {8 {8}}}}) -> [1 4 7 5 6 3 8 6 5 2 1 0 8 8]", "(flatten {4 {4}}) -> [4 4]", "(flatten {}) -> []"], "time": 0.159441}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {3 {2} {7}}) -> [3 2 7]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {4 {5 {0} {1}} {1 {9}}}) -> [4 5 0 1 1 9]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {6 {2 {7 {4}}}}) -> [6 2 7 4]", "(flatten {7}) -> [7]", "(flatten {3 {7 {6} {6}} {7}}) -> [3 7 6 6 7]", "(flatten {9 {3 {1} {9}}}) -> [9 3 1 9]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {5} {0}}) -> [8 5 0]", "(flatten {2}) -> [2]", "(flatten {7 {8}}) -> [7 8]", "(flatten {2 {2 {0} {9}}}) -> [2 2 0 9]", "(flatten {0 {6}}) -> [0 6]", "(flatten {3}) -> [3]", "(flatten {2 {1 {7 {2}}}}) -> [2 1 7 2]"], "time": 0.145547}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {6 {7}}) -> [6 7]", "(flatten {7}) -> [7]", "(flatten {7 {5} {8 {0}}}) -> [7 5 8 0]", "(flatten {9 {2} {8}}) -> [9 2 8]", "(flatten {1 {7 {8} {5}}}) -> [1 7 8 5]", "(flatten {5 {9 {1 {1} {5}} {4 {4} {5}}} {5 {2 {4} {9}}}}) -> [5 9 1 1 5 4 4 5 5 2 4 9]", "(flatten {6 {0 {2 {0}}} {3 {2 {7}}}}) -> [6 0 2 0 3 2 7]", "(flatten {6 {4}}) -> [6 4]", "(flatten {7 {8 {0} {3}}}) -> [7 8 0 3]", "(flatten {0}) -> [0]", "(flatten {1 {0 {1}} {0 {1} {9}}}) -> [1 0 1 0 1 9]", "(flatten {8 {2}}) -> [8 2]", "(flatten {8}) -> [8]", "(flatten {8 {4}}) -> [8 4]", "(flatten {2 {3} {9}}) -> [2 3 9]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {6 {6}}) -> [6 6]", "(flatten {6 {6} {4}}) -> [6 6 4]", "(flatten {3}) -> [3]", "(flatten {4 {0} {4 {7}}}) -> [4 0 4 7]"], "time": 0.140031}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {9}) -> [9]", "(flatten {0 {4 {1 {8}}}}) -> [0 4 1 8]", "(flatten {9 {5 {5} {0}}}) -> [9 5 5 0]", "(flatten {}) -> []", "(flatten {8 {6} {0}}) -> [8 6 0]", "(flatten {2 {1}}) -> [2 1]", "(flatten {2 {1} {9}}) -> [2 1 9]", "(flatten {2 {9}}) -> [2 9]", "(flatten {5 {4 {4}}}) -> [5 4 4]", "(flatten {0 {2 {2 {1}} {3}} {8 {4} {4 {6} {5}}}}) -> [0 2 2 1 3 8 4 4 6 5]", "(flatten {9}) -> [9]", "(flatten {6}) -> [6]", "(flatten {8}) -> [8]", "(flatten {4 {9}}) -> [4 9]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {0 {0 {7}}}) -> [0 0 7]", "(flatten {8 {6} {2 {8}}}) -> [8 6 2 8]", "(flatten {}) -> []", "(flatten {8 {2 {0} {0}}}) -> [8 2 0 0]"], "time": 0.140496}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {7 {9} {0}}) -> [7 9 0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {0}}) -> [9 0]", "(flatten {1}) -> [1]", "(flatten {6}) -> [6]", "(flatten {9 {2 {7}}}) -> [9 2 7]", "(flatten {8 {5} {3}}) -> [8 5 3]", "(flatten {8 {3}}) -> [8 3]", "(flatten {9 {2}}) -> [9 2]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {8}) -> [8]", "(flatten {3 {8}}) -> [3 8]", "(flatten {}) -> []", "(flatten {3 {2}}) -> [3 2]", "(flatten {4 {1} {1}}) -> [4 1 1]"], "time": 0.080804}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {0 {6}}) -> [0 6]", "(flatten {7 {0 {5}}}) -> [7 0 5]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {4 {7}}) -> [4 7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {7 {4} {1 {6} {9}}}) -> [7 4 1 6 9]", "(flatten {6}) -> [6]", "(flatten {0 {9}}) -> [0 9]", "(flatten {}) -> []", "(flatten {5 {1 {6 {1} {0}}}}) -> [5 1 6 1 0]", "(flatten {4 {7 {0}}}) -> [4 7 0]", "(flatten {7 {5 {7} {0}}}) -> [7 5 7 0]", "(flatten {1}) -> [1]", "(flatten {6}) -> [6]", "(flatten {7 {6}}) -> [7 6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {8 {4}} {8 {5 {2}}}}) -> [0 8 4 8 5 2]"], "time": 0.133183}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2 {5 {8}} {1 {3 {9}} {9 {1} {1}}}}) -> [2 5 8 1 3 9 9 1 1]", "(flatten {3 {5}}) -> [3 5]", "(flatten {5 {6}}) -> [5 6]", "(flatten {0}) -> [0]", "(flatten {6 {5}}) -> [6 5]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {8 {5 {9}} {5 {9}}}) -> [8 5 9 5 9]", "(flatten {0 {8 {9 {1} {1}} {7}}}) -> [0 8 9 1 1 7]", "(flatten {2 {3}}) -> [2 3]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5 {2 {3 {6} {4}} {1}}}) -> [5 2 3 6 4 1]", "(flatten {6}) -> [6]", "(flatten {6}) -> [6]", "(flatten {0 {1} {0 {1 {3}}}}) -> [0 1 0 1 3]", "(flatten {6 {9} {0 {9 {0} {0}}}}) -> [6 9 0 9 0 0]", "(flatten {4 {2 {6} {5}} {6 {8}}}) -> [4 2 6 5 6 8]", "(flatten {1}) -> [1]", "(flatten {}) -> []"], "time": 0.088319}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2 {1 {7 {0}} {8 {0}}}}) -> [2 1 7 0 8 0]", "(flatten {8 {2}}) -> [8 2]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {8 {5 {0 {7}}} {4}}) -> [8 5 0 7 4]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {1 {8 {7}} {1}}) -> [1 8 7 1]", "(flatten {5 {0} {6}}) -> [5 0 6]", "(flatten {}) -> []", "(flatten {3 {1}}) -> [3 1]", "(flatten {1 {9 {5}} {8 {9} {4}}}) -> [1 9 5 8 9 4]", "(flatten {4 {5}}) -> [4 5]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {0 {1} {1}}) -> [0 1 1]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7 {8}}) -> [7 8]", "(flatten {}) -> []"], "time": 0.141774}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {2 {0}}}) -> [5 2 0]", "(flatten {7 {1 {8}} {7 {8}}}) -> [7 1 8 7 8]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {7 {4} {5}}}) -> [9 7 4 5]", "(flatten {0 {9}}) -> [0 9]", "(flatten {}) -> []", "(flatten {7 {5}}) -> [7 5]", "(flatten {3 {0 {8 {5} {4}}} {3 {8 {9} {0}} {7 {1} {9}}}}) -> [3 0 8 5 4 3 8 9 0 7 1 9]", "(flatten {4 {8} {9}}) -> [4 8 9]", "(flatten {4}) -> [4]", "(flatten {8}) -> [8]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5 {1} {5 {1} {0}}}) -> [5 1 5 1 0]", "(flatten {9 {4 {1} {8}}}) -> [9 4 1 8]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {3 {6}}) -> [3 6]", "(flatten {}) -> []"], "time": 0.123286}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {8 {0}}}) -> [0 8 0]", "(flatten {6 {5 {0}} {3 {8}}}) -> [6 5 0 3 8]", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {9 {1 {0} {9}} {8 {4} {4}}}) -> [9 1 0 9 8 4 4]", "(flatten {0 {0} {5 {1}}}) -> [0 0 5 1]", "(flatten {4 {4 {6} {7}}}) -> [4 4 6 7]", "(flatten {9 {2} {4}}) -> [9 2 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {9}}) -> [3 9]", "(flatten {4 {5 {9} {4 {5} {3}}}}) -> [4 5 9 4 5 3]", "(flatten {4 {3}}) -> [4 3]", "(flatten {3 {0 {6 {0}} {9 {8} {6}}} {1 {5 {9}} {9}}}) -> [3 0 6 0 9 8 6 1 5 9 9]", "(flatten {0 {6 {3 {7} {3}}}}) -> [0 6 3 7 3]", "(flatten {2 {5} {0}}) -> [2 5 0]"], "time": 0.120457}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1 {8 {3 {0}} {8 {3} {0}}} {0}}) -> [1 8 3 0 8 3 0 0]", "(flatten {5 {2 {3}}}) -> [5 2 3]", "(flatten {8 {3 {8 {0} {9}} {5}}}) -> [8 3 8 0 9 5]", "(flatten {0 {4 {8}} {6 {0 {4}} {1 {7}}}}) -> [0 4 8 6 0 4 1 7]", "(flatten {0 {2}}) -> [0 2]", "(flatten {3 {6}}) -> [3 6]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {3 {0 {6} {2}} {0 {4} {4}}}}) -> [4 3 0 6 2 0 4 4]", "(flatten {8 {8} {8}}) -> [8 8 8]", "(flatten {}) -> []", "(flatten {6 {6 {9} {5}} {8 {5}}}) -> [6 6 9 5 8 5]", "(flatten {8}) -> [8]", "(flatten {0 {6 {0} {8}}}) -> [0 6 0 8]", "(flatten {1}) -> [1]", "(flatten {6 {7}}) -> [6 7]", "(flatten {5 {5}}) -> [5 5]", "(flatten {2 {4 {5}}}) -> [2 4 5]", "(flatten {}) -> []", "(flatten {4 {2}}) -> [4 2]"], "time": 0.148835}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {6}) -> [6]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {2 {2} {1}}) -> [2 2 1]", "(flatten {}) -> []", "(flatten {0 {5} {7 {2 {9} {4}}}}) -> [0 5 7 2 9 4]", "(flatten {0 {9}}) -> [0 9]", "(flatten {6}) -> [6]", "(flatten {1 {2 {3 {4}}} {5}}) -> [1 2 3 4 5]", "(flatten {3 {1}}) -> [3 1]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {9 {9 {0}} {6 {7}}}) -> [9 9 0 6 7]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {9 {6}}) -> [9 6]"], "time": 0.140676}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {4 {3}}) -> [4 3]", "(flatten {0 {6 {3 {9}}}}) -> [0 6 3 9]", "(flatten {7 {1} {4}}) -> [7 1 4]", "(flatten {0}) -> [0]", "(flatten {0 {7 {4 {6} {0}}}}) -> [0 7 4 6 0]", "(flatten {8 {6 {4} {8}}}) -> [8 6 4 8]", "(flatten {6 {2 {9 {6} {4}}} {1 {9}}}) -> [6 2 9 6 4 1 9]", "(flatten {8}) -> [8]", "(flatten {7 {7} {1}}) -> [7 7 1]", "(flatten {8 {8}}) -> [8 8]", "(flatten {}) -> []", "(flatten {6 {8} {6 {6}}}) -> [6 8 6 6]", "(flatten {}) -> []", "(flatten {1 {1 {6 {2} {8}}} {8 {3 {7} {9}} {8 {8} {8}}}}) -> [1 1 6 2 8 8 3 7 9 8 8 8]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {3 {6} {9}}) -> [3 6 9]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {8 {6} {8 {1}}}) -> [8 6 8 1]", "(flatten {1 {2 {2} {6}}}) -> [1 2 2 6]", "(flatten {8}) -> [8]"], "time": 0.148903}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {5 {4}}) -> [5 4]", "(flatten {4 {6}}) -> [4 6]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {1 {2} {9}}) -> [1 2 9]", "(flatten {7}) -> [7]", "(flatten {0 {1 {5 {6} {0}}}}) -> [0 1 5 6 0]", "(flatten {}) -> []", "(flatten {3 {6 {5} {2}}}) -> [3 6 5 2]", "(flatten {4}) -> [4]", "(flatten {4 {1 {5 {1} {4}} {2 {0}}} {5 {0 {9}}}}) -> [4 1 5 1 4 2 0 5 0 9]", "(flatten {0 {7}}) -> [0 7]", "(flatten {9 {6} {7 {9} {5}}}) -> [9 6 7 9 5]", "(flatten {}) -> []", "(flatten {5 {0 {6}} {1 {4} {0}}}) -> [5 0 6 1 4 0]", "(flatten {3}) -> [3]", "(flatten {8 {9 {9}} {0 {7}}}) -> [8 9 9 0 7]", "(flatten {}) -> []", "(flatten {1 {9}}) -> [1 9]", "(flatten {6}) -> [6]", "(flatten {8 {7}}) -> [8 7]", "(flatten {4 {4} {1}}) -> [4 4 1]", "(flatten {6 {2} {7 {3} {4}}}) -> [6 2 7 3 4]"], "time": 0.117328}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1 {1 {0} {2}} {2 {7} {4}}}) -> [1 1 0 2 2 7 4]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {5 {0} {8}}) -> [5 0 8]", "(flatten {5 {4}}) -> [5 4]", "(flatten {}) -> []", "(flatten {8 {0}}) -> [8 0]", "(flatten {7 {3 {5}}}) -> [7 3 5]", "(flatten {2 {7 {7} {4}} {0 {3} {4}}}) -> [2 7 7 4 0 3 4]", "(flatten {8 {4 {2} {6 {7}}} {7}}) -> [8 4 2 6 7 7]", "(flatten {}) -> []", "(flatten {4 {5 {5} {3}} {7}}) -> [4 5 5 3 7]", "(flatten {6 {7} {4}}) -> [6 7 4]", "(flatten {8}) -> [8]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6 {6} {4}}) -> [6 6 4]", "(flatten {8 {1}}) -> [8 1]", "(flatten {}) -> []", "(flatten {2 {5} {3}}) -> [2 5 3]"], "time": 0.14595}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {0 {6} {2}}) -> [0 6 2]", "(flatten {9 {0} {0}}) -> [9 0 0]", "(flatten {1}) -> [1]", "(flatten {4}) -> [4]", "(flatten {0 {8}}) -> [0 8]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {8 {5 {4 {1} {5}} {5 {0}}} {5 {9 {1} {5}}}}) -> [8 5 4 1 5 5 0 5 9 1 5]", "(flatten {5 {8 {2} {8}}}) -> [5 8 2 8]", "(flatten {2 {1}}) -> [2 1]", "(flatten {0 {4} {6}}) -> [0 4 6]", "(flatten {9 {1 {8 {3} {4}} {9 {5} {4}}} {4 {5 {8}} {5}}}) -> [9 1 8 3 4 9 5 4 4 5 8 5]", "(flatten {}) -> []", "(flatten {4 {7}}) -> [4 7]", "(flatten {}) -> []", "(flatten {0 {4}}) -> [0 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5 {5 {7} {9}} {4 {3 {3} {4}}}}) -> [5 5 7 9 4 3 3 4]", "(flatten {1}) -> [1]", "(flatten {1 {0 {6} {4}}}) -> [1 0 6 4]", "(flatten {1}) -> [1]", "(flatten {}) -> []"], "time": 0.157153}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {1} {2}}) -> [3 1 2]", "(flatten {7 {8 {1 {7} {3}}}}) -> [7 8 1 7 3]", "(flatten {2}) -> [2]", "(flatten {0 {0} {9 {1}}}) -> [0 0 9 1]", "(flatten {0}) -> [0]", "(flatten {2 {9} {0 {3}}}) -> [2 9 0 3]", "(flatten {9 {9 {9 {1}} {7}} {2 {4} {7 {5}}}}) -> [9 9 9 1 7 2 4 7 5]", "(flatten {}) -> []", "(flatten {1 {1}}) -> [1 1]", "(flatten {}) -> []", "(flatten {1 {0 {7} {7}} {1 {5} {1}}}) -> [1 0 7 7 1 5 1]", "(flatten {}) -> []", "(flatten {1 {8}}) -> [1 8]", "(flatten {9 {8}}) -> [9 8]", "(flatten {9}) -> [9]", "(flatten {4 {4}}) -> [4 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {2 {6} {8}}) -> [2 6 8]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {5 {6} {2 {2 {9} {3}} {7}}}) -> [5 6 2 2 9 3 7]"], "time": 0.132082}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7 {5}}) -> [7 5]", "(flatten {}) -> []", "(flatten {9 {7} {0 {6} {8 {3} {7}}}}) -> [9 7 0 6 8 3 7]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {4 {3} {6}}) -> [4 3 6]", "(flatten {2 {0} {9 {9} {7}}}) -> [2 0 9 9 7]", "(flatten {5}) -> [5]", "(flatten {7 {9 {3} {0}}}) -> [7 9 3 0]", "(flatten {}) -> []", "(flatten {5 {9}}) -> [5 9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6 {8}}) -> [6 8]", "(flatten {4 {6 {4 {9} {7}} {6 {8}}} {7 {5} {1 {8} {9}}}}) -> [4 6 4 9 7 6 8 7 5 1 8 9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {0 {4 {3 {5} {2}} {4 {1}}}}) -> [0 4 3 5 2 4 1]", "(flatten {2 {9}}) -> [2 9]", "(flatten {3}) -> [3]", "(flatten {6}) -> [6]", "(flatten {3}) -> [3]", "(flatten {6 {8 {2}}}) -> [6 8 2]"], "time": 0.129809}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {4 {4 {6}} {9 {6} {8 {3} {1}}}}) -> [4 4 6 9 6 8 3 1]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {0} {4}}) -> [9 0 4]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {6 {9 {7}}}) -> [6 9 7]", "(flatten {7 {0}}) -> [7 0]", "(flatten {6 {1} {3 {8}}}) -> [6 1 3 8]", "(flatten {4 {7}}) -> [4 7]", "(flatten {8 {4}}) -> [8 4]", "(flatten {0 {6} {1 {2 {5} {4}} {2 {5}}}}) -> [0 6 1 2 5 4 2 5]", "(flatten {}) -> []", "(flatten {2 {4 {0 {2}} {1}}}) -> [2 4 0 2 1]", "(flatten {4 {9} {4}}) -> [4 9 4]", "(flatten {1 {4 {3} {0}}}) -> [1 4 3 0]", "(flatten {3 {6}}) -> [3 6]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {8 {4 {9} {6}}}) -> [8 4 9 6]", "(flatten {}) -> []", "(flatten {2 {5}}) -> [2 5]"], "time": 0.157077}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {1 {2} {3}}) -> [1 2 3]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {8 {6 {7}}}) -> [8 6 7]", "(flatten {}) -> []", "(flatten {9 {6} {2}}) -> [9 6 2]", "(flatten {}) -> []", "(flatten {3 {7 {0}} {2}}) -> [3 7 0 2]", "(flatten {}) -> []", "(flatten {0}) -> [0]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {0}) -> [0]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {5 {6 {1}}}) -> [5 6 1]", "(flatten {9 {9 {0 {0} {1}} {1}} {6 {4 {0} {0}}}}) -> [9 9 0 0 1 1 6 4 0 0]", "(flatten {2}) -> [2]", "(flatten {2}) -> [2]", "(flatten {1 {3}}) -> [1 3]", "(flatten {}) -> []", "(flatten {}) -> []"], "time": 0.150328}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {4}}) -> [4 4]", "(flatten {0 {3}}) -> [0 3]", "(flatten {9 {1 {0 {1} {6}} {2}} {8 {3} {6 {6}}}}) -> [9 1 0 1 6 2 8 3 6 6]", "(flatten {}) -> []", "(flatten {8 {5 {0 {6} {4}} {2}}}) -> [8 5 0 6 4 2]", "(flatten {}) -> []", "(flatten {9 {3}}) -> [9 3]", "(flatten {1}) -> [1]", "(flatten {5 {1} {4}}) -> [5 1 4]", "(flatten {9 {8}}) -> [9 8]", "(flatten {5}) -> [5]", "(flatten {9}) -> [9]", "(flatten {7 {3 {6}} {1 {1} {3}}}) -> [7 3 6 1 1 3]", "(flatten {8 {3 {5} {4}} {3 {7} {9}}}) -> [8 3 5 4 3 7 9]", "(flatten {}) -> []", "(flatten {3 {9}}) -> [3 9]", "(flatten {}) -> []", "(flatten {6 {1}}) -> [6 1]", "(flatten {1}) -> [1]", "(flatten {7}) -> [7]", "(flatten {2}) -> [2]", "(flatten {5}) -> [5]"], "time": 0.094776}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {3 {8 {5} {7}}}) -> [3 8 5 7]", "(flatten {8}) -> [8]", "(flatten {7 {1} {5}}) -> [7 1 5]", "(flatten {9 {0 {1} {4}} {4 {3} {2}}}) -> [9 0 1 4 4 3 2]", "(flatten {2}) -> [2]", "(flatten {5}) -> [5]", "(flatten {4 {8}}) -> [4 8]", "(flatten {4 {9}}) -> [4 9]", "(flatten {2}) -> [2]", "(flatten {1}) -> [1]", "(flatten {5 {6}}) -> [5 6]", "(flatten {1 {0} {8}}) -> [1 0 8]", "(flatten {9 {6 {6 {0}}}}) -> [9 6 6 0]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {4 {2}}) -> [4 2]", "(flatten {8 {9}}) -> [8 9]", "(flatten {}) -> []", "(flatten {9 {8 {4} {2}} {4}}) -> [9 8 4 2 4]", "(flatten {1 {4 {4}} {4}}) -> [1 4 4 4]", "(flatten {2 {9} {8 {0} {1}}}) -> [2 9 8 0 1]", "(flatten {6 {7 {5} {3}}}) -> [6 7 5 3]"], "time": 0.114808}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {3 {7} {2}}) -> [3 7 2]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {3 {9 {4} {9}} {2}}) -> [3 9 4 9 2]", "(flatten {2}) -> [2]", "(flatten {4 {1} {3}}) -> [4 1 3]", "(flatten {3 {8}}) -> [3 8]", "(flatten {1 {8}}) -> [1 8]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {1 {0} {4 {0 {2} {1}} {7}}}) -> [1 0 4 0 2 1 7]", "(flatten {1}) -> [1]", "(flatten {1}) -> [1]", "(flatten {6 {4} {3 {9 {3} {0}}}}) -> [6 4 3 9 3 0]", "(flatten {1}) -> [1]", "(flatten {6 {9}}) -> [6 9]", "(flatten {8}) -> [8]", "(flatten {5 {0 {0 {3} {9}}}}) -> [5 0 0 3 9]", "(flatten {8 {6 {5} {5}}}) -> [8 6 5 5]", "(flatten {7 {7} {5}}) -> [7 7 5]", "(flatten {0 {2 {8 {5}} {7 {6}}} {5}}) -> [0 2 8 5 7 6 5]", "(flatten {6}) -> [6]"], "time": 0.134177}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {3 {7}}) -> [3 7]", "(flatten {7 {9}}) -> [7 9]", "(flatten {6 {9} {2}}) -> [6 9 2]", "(flatten {8 {5}}) -> [8 5]", "(flatten {}) -> []", "(flatten {4 {1 {2}}}) -> [4 1 2]", "(flatten {7}) -> [7]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {2}) -> [2]", "(flatten {3 {2 {4 {2} {2}} {5 {9} {5}}} {8 {1 {7} {8}} {3 {4}}}}) -> [3 2 4 2 2 5 9 5 8 1 7 8 3 4]", "(flatten {8}) -> [8]", "(flatten {7 {6} {3}}) -> [7 6 3]", "(flatten {8 {4 {5} {9}} {6}}) -> [8 4 5 9 6]", "(flatten {5}) -> [5]", "(flatten {3 {9 {7} {4}} {2 {6} {7}}}) -> [3 9 7 4 2 6 7]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {3 {3} {6 {6}}}) -> [3 3 6 6]", "(flatten {6 {7 {3} {8}}}) -> [6 7 3 8]", "(flatten {6 {9}}) -> [6 9]", "(flatten {7 {4 {0}} {1 {8}}}) -> [7 4 0 1 8]", "(flatten {9}) -> [9]"], "time": 0.124441}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {9 {9 {3 {5} {3}}} {6 {2 {7} {8}}}}) -> [9 9 3 5 3 6 2 7 8]", "(flatten {0 {0 {1 {4} {2}} {7 {6}}} {3 {5} {4}}}) -> [0 0 1 4 2 7 6 3 5 4]", "(flatten {}) -> []", "(flatten {7 {1 {0 {8}}}}) -> [7 1 0 8]", "(flatten {8 {0 {9}}}) -> [8 0 9]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {9 {4} {1}}) -> [9 4 1]", "(flatten {6 {8}}) -> [6 8]", "(flatten {4}) -> [4]", "(flatten {9 {1} {1 {7 {7}} {0}}}) -> [9 1 1 7 7 0]", "(flatten {2 {5 {5} {7}} {0}}) -> [2 5 5 7 0]", "(flatten {4 {0 {7}}}) -> [4 0 7]", "(flatten {0 {4}}) -> [0 4]", "(flatten {5}) -> [5]", "(flatten {2 {4} {1}}) -> [2 4 1]", "(flatten {5 {9} {6}}) -> [5 9 6]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5 {2 {3 {8}}} {3 {7 {6}} {4 {0} {4}}}}) -> [5 2 3 8 3 7 6 4 0 4]"], "time": 0.127117}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {6 {5 {9} {4}}}) -> [6 5 9 4]", "(flatten {8}) -> [8]", "(flatten {8 {4} {8 {4} {4}}}) -> [8 4 8 4 4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5 {9 {5} {4}}}) -> [5 9 5 4]", "(flatten {}) -> []", "(flatten {9 {4 {9}} {9}}) -> [9 4 9 9]", "(flatten {2 {7}}) -> [2 7]", "(flatten {}) -> []", "(flatten {6 {9}}) -> [6 9]", "(flatten {}) -> []", "(flatten {4 {2} {7}}) -> [4 2 7]", "(flatten {7 {3 {2}} {5}}) -> [7 3 2 5]", "(flatten {3 {3 {6} {2}} {5 {6} {9}}}) -> [3 3 6 2 5 6 9]", "(flatten {3 {6}}) -> [3 6]", "(flatten {7 {6} {4}}) -> [7 6 4]", "(flatten {6 {6}}) -> [6 6]", "(flatten {2 {1 {9}} {9 {1} {0}}}) -> [2 1 9 9 1 0]", "(flatten {3 {8 {1}}}) -> [3 8 1]", "(flatten {1 {1}}) -> [1 1]", "(flatten {5}) -> [5]"], "time": 0.108039}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {0 {2 {4 {5} {3}}} {0}}) -> [0 2 4 5 3 0]", "(flatten {8 {4 {4 {7}}}}) -> [8 4 4 7]", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {3 {2 {5 {8}}} {3 {8}}}) -> [3 2 5 8 3 8]", "(flatten {4 {5} {3}}) -> [4 5 3]", "(flatten {3}) -> [3]", "(flatten {6 {7 {9}} {7}}) -> [6 7 9 7]", "(flatten {0 {9 {2 {8}}} {7 {5}}}) -> [0 9 2 8 7 5]", "(flatten {8}) -> [8]", "(flatten {7}) -> [7]", "(flatten {7}) -> [7]", "(flatten {4 {7} {5}}) -> [4 7 5]", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {6 {3} {8}}) -> [6 3 8]", "(flatten {0 {8 {6} {9}} {5 {7} {7}}}) -> [0 8 6 9 5 7 7]", "(flatten {5 {1 {8} {8}} {7 {2}}}) -> [5 1 8 8 7 2]", "(flatten {6 {9}}) -> [6 9]", "(flatten {6}) -> [6]", "(flatten {9 {5} {9 {8}}}) -> [9 5 9 8]"], "time": 0.149495}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {7 {0}} {7 {0} {3}}}) -> [6 7 0 7 0 3]", "(flatten {1 {0}}) -> [1 0]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {3 {5 {2}} {0}}) -> [3 5 2 0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {9 {5} {2}} {6 {7}}}) -> [8 9 5 2 6 7]", "(flatten {9 {1}}) -> [9 1]", "(flatten {8 {6 {5}}}) -> [8 6 5]", "(flatten {0}) -> [0]", "(flatten {6 {1} {1}}) -> [6 1 1]", "(flatten {}) -> []", "(flatten {0 {8 {2 {6} {8}}} {2 {1}}}) -> [0 8 2 6 8 2 1]", "(flatten {7 {9}}) -> [7 9]", "(flatten {0 {1}}) -> [0 1]", "(flatten {9}) -> [9]", "(flatten {3}) -> [3]", "(flatten {3 {5}}) -> [3 5]", "(flatten {1 {5}}) -> [1 5]", "(flatten {3}) -> [3]"], "time": 0.131135}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {4 {3 {9} {3}} {0 {7}}}) -> [4 3 9 3 0 7]", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {8 {1 {2 {3}} {7}}}) -> [8 1 2 3 7]", "(flatten {9 {8 {1 {8}}}}) -> [9 8 1 8]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7 {8}}) -> [7 8]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {8 {1}}) -> [8 1]", "(flatten {4}) -> [4]", "(flatten {1}) -> [1]", "(flatten {0 {2}}) -> [0 2]", "(flatten {0}) -> [0]", "(flatten {}) -> []", "(flatten {6 {1} {0 {6 {7} {5}}}}) -> [6 1 0 6 7 5]", "(flatten {2}) -> [2]", "(flatten {3 {3} {2}}) -> [3 3 2]", "(flatten {}) -> []", "(flatten {8}) -> [8]"], "time": 0.147994}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {0 {6}}) -> [0 6]", "(flatten {}) -> []", "(flatten {0 {5} {5}}) -> [0 5 5]", "(flatten {9 {6 {9} {2}} {1 {2} {9}}}) -> [9 6 9 2 1 2 9]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {}) -> []", "(flatten {8}) -> [8]", "(flatten {1 {7}}) -> [1 7]", "(flatten {8 {0}}) -> [8 0]", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {9 {8 {2}} {1 {6} {2 {1} {5}}}}) -> [9 8 2 1 6 2 1 5]", "(flatten {}) -> []", "(flatten {7 {2 {4 {8} {2}} {0}} {6}}) -> [7 2 4 8 2 0 6]", "(flatten {5 {6 {4 {8} {4}} {0 {1} {5}}}}) -> [5 6 4 8 4 0 1 5]", "(flatten {6 {8}}) -> [6 8]", "(flatten {1}) -> [1]", "(flatten {5 {6 {8}} {2}}) -> [5 6 8 2]"], "time": 0.134696}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {1 {7}}) -> [1 7]", "(flatten {}) -> []", "(flatten {9 {1 {5} {6}} {5}}) -> [9 1 5 6 5]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {4 {7 {0}} {9 {9 {5}}}}) -> [4 7 0 9 9 5]", "(flatten {8 {1} {5 {2 {4} {8}} {1 {1}}}}) -> [8 1 5 2 4 8 1 1]", "(flatten {9}) -> [9]", "(flatten {3 {3}}) -> [3 3]", "(flatten {4 {8}}) -> [4 8]", "(flatten {2}) -> [2]", "(flatten {2 {3 {0} {5 {2}}}}) -> [2 3 0 5 2]", "(flatten {0}) -> [0]", "(flatten {9 {8} {2 {9 {8}}}}) -> [9 8 2 9 8]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {7 {7}}) -> [7 7]", "(flatten {7 {7}}) -> [7 7]", "(flatten {}) -> []", "(flatten {8}) -> [8]"], "time": 0.143262}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {9 {6} {2}}) -> [9 6 2]", "(flatten {1 {7 {2}} {7 {1 {4}} {3}}}) -> [1 7 2 7 1 4 3]", "(flatten {0 {5}}) -> [0 5]", "(flatten {}) -> []", "(flatten {0 {7 {5 {7}}} {5 {0 {6}} {3 {8} {7}}}}) -> [0 7 5 7 5 0 6 3 8 7]", "(flatten {8 {0 {7 {5}} {1 {4}}}}) -> [8 0 7 5 1 4]", "(flatten {1 {9}}) -> [1 9]", "(flatten {8}) -> [8]", "(flatten {0 {0 {7}}}) -> [0 0 7]", "(flatten {9 {1} {8}}) -> [9 1 8]", "(flatten {9 {6} {8}}) -> [9 6 8]", "(flatten {}) -> []", "(flatten {9}) -> [9]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {0 {2} {8}}) -> [0 2 8]", "(flatten {2 {5 {2 {9}}} {6 {7}}}) -> [2 5 2 9 6 7]", "(flatten {6}) -> [6]", "(flatten {2 {3}}) -> [2 3]"], "time": 0.119586}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {9 {1} {7}}) -> [9 1 7]", "(flatten {1 {2}}) -> [1 2]", "(flatten {8 {8}}) -> [8 8]", "(flatten {4 {0}}) -> [4 0]", "(flatten {9 {0}}) -> [9 0]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {5} {0}}) -> [4 5 0]", "(flatten {6 {3} {4 {3} {8}}}) -> [6 3 4 3 8]", "(flatten {2 {3 {6} {3}} {0}}) -> [2 3 6 3 0]", "(flatten {6}) -> [6]", "(flatten {0 {3 {8}} {3 {9} {7}}}) -> [0 3 8 3 9 7]", "(flatten {3}) -> [3]", "(flatten {2}) -> [2]", "(flatten {8}) -> [8]", "(flatten {3}) -> [3]", "(flatten {9 {4}}) -> [9 4]", "(flatten {9}) -> [9]", "(flatten {9 {7}}) -> [9 7]", "(flatten {2 {0 {7}} {3 {1}}}) -> [2 0 7 3 1]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {6 {4} {3 {5 {7}} {3}}}) -> [6 4 3 5 7 3]"], "time": 0.124877}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {5}) -> [5]", "(flatten {0 {2}}) -> [0 2]", "(flatten {9 {4} {5}}) -> [9 4 5]", "(flatten {0 {7} {3 {2}}}) -> [0 7 3 2]", "(flatten {2 {4 {6} {3 {6} {4}}}}) -> [2 4 6 3 6 4]", "(flatten {1}) -> [1]", "(flatten {2 {0} {4}}) -> [2 0 4]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {}) -> []", "(flatten {8 {4 {8} {3}} {6 {5} {8}}}) -> [8 4 8 3 6 5 8]", "(flatten {8 {6}}) -> [8 6]", "(flatten {}) -> []", "(flatten {7 {9 {1 {8}} {0 {1}}}}) -> [7 9 1 8 0 1]", "(flatten {3 {0} {3}}) -> [3 0 3]", "(flatten {5 {0} {1}}) -> [5 0 1]", "(flatten {}) -> []", "(flatten {0 {8 {7}} {7}}) -> [0 8 7 7]", "(flatten {8 {4}}) -> [8 4]", "(flatten {1 {0}}) -> [1 0]", "(flatten {}) -> []", "(flatten {3 {0 {4 {8} {3}}}}) -> [3 0 4 8 3]"], "time": 0.13028}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {7 {5 {3} {8}} {4 {7} {3}}}) -> [7 5 3 8 4 7 3]", "(flatten {}) -> []", "(flatten {0 {0}}) -> [0 0]", "(flatten {0 {8} {3}}) -> [0 8 3]", "(flatten {}) -> []", "(flatten {8 {2}}) -> [8 2]", "(flatten {}) -> []", "(flatten {1 {7} {5 {8 {3}}}}) -> [1 7 5 8 3]", "(flatten {7 {4 {6} {8}}}) -> [7 4 6 8]", "(flatten {2 {2 {9} {3}}}) -> [2 2 9 3]", "(flatten {}) -> []", "(flatten {9 {8}}) -> [9 8]", "(flatten {}) -> []", "(flatten {1 {1 {1} {6}}}) -> [1 1 1 6]", "(flatten {4}) -> [4]", "(flatten {}) -> []", "(flatten {0 {8 {2}} {5 {8}}}) -> [0 8 2 5 8]", "(flatten {7 {9} {0 {8} {4}}}) -> [7 9 0 8 4]", "(flatten {6 {5 {0} {1}}}) -> [6 5 0 1]", "(flatten {}) -> []", "(flatten {3}) -> [3]"], "time": 0.130595}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {4}) -> [4]", "(flatten {4 {6} {1}}) -> [4 6 1]", "(flatten {0}) -> [0]", "(flatten {0}) -> [0]", "(flatten {9 {4 {5} {7}} {7 {0}}}) -> [9 4 5 7 7 0]", "(flatten {6}) -> [6]", "(flatten {5 {9 {5 {1}} {3 {2} {4}}}}) -> [5 9 5 1 3 2 4]", "(flatten {7 {7}}) -> [7 7]", "(flatten {8 {6 {6} {3}} {3}}) -> [8 6 6 3 3]", "(flatten {9 {0} {5}}) -> [9 0 5]", "(flatten {9 {7} {3}}) -> [9 7 3]", "(flatten {3}) -> [3]", "(flatten {6 {3}}) -> [6 3]", "(flatten {7 {8 {1}} {7}}) -> [7 8 1 7]", "(flatten {9}) -> [9]", "(flatten {4 {0 {4}} {7 {6} {8}}}) -> [4 0 4 7 6 8]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {0 {4} {4 {9}}}) -> [0 4 4 9]", "(flatten {8}) -> [8]", "(flatten {}) -> []", "(flatten {8 {5} {5}}) -> [8 5 5]", "(flatten {2 {5 {5 {3}}}}) -> [2 5 5 3]"], "time": 0.137884}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {2} {8}}) -> [4 2 8]", "(flatten {3}) -> [3]", "(flatten {3 {6 {0 {4} {0}} {9 {0} {7}}}}) -> [3 6 0 4 0 9 0 7]", "(flatten {8 {9} {1 {5}}}) -> [8 9 1 5]", "(flatten {4 {7}}) -> [4 7]", "(flatten {1 {5 {4 {7}}} {8 {2 {7}} {3}}}) -> [1 5 4 7 8 2 7 3]", "(flatten {4}) -> [4]", "(flatten {2 {6}}) -> [2 6]", "(flatten {1 {4 {9} {2}}}) -> [1 4 9 2]", "(flatten {7 {3} {7 {2}}}) -> [7 3 7 2]", "(flatten {}) -> []", "(flatten {3}) -> [3]", "(flatten {1}) -> [1]", "(flatten {}) -> []", "(flatten {5}) -> [5]", "(flatten {6 {8} {0}}) -> [6 8 0]", "(flatten {3 {7}}) -> [3 7]", "(flatten {8 {2 {5 {6}}} {7 {4} {6}}}) -> [8 2 5 6 7 4 6]", "(flatten {}) -> []", "(flatten {1}) -> [1]", "(flatten {0 {8} {6}}) -> [0 8 6]", "(flatten {1 {7 {8}} {7 {5}}}) -> [1 7 8 7 5]"], "time": 0.081004}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {4 {7 {0 {1} {9}}}}) -> [4 7 0 1 9]", "(flatten {9}) -> [9]", "(flatten {4 {4 {5}} {7}}) -> [4 4 5 7]", "(flatten {}) -> []", "(flatten {5 {2}}) -> [5 2]", "(flatten {5 {0} {3 {6 {7} {6}}}}) -> [5 0 3 6 7 6]", "(flatten {8 {4}}) -> [8 4]", "(flatten {7}) -> [7]", "(flatten {4 {0 {8 {7} {0}} {4 {7}}}}) -> [4 0 8 7 0 4 7]", "(flatten {6 {2 {4}} {2}}) -> [6 2 4 2]", "(flatten {}) -> []", "(flatten {}) -> []", "(flatten {8 {2}}) -> [8 2]", "(flatten {5 {2 {0} {1}} {5}}) -> [5 2 0 1 5]", "(flatten {2 {1 {9} {0}} {2}}) -> [2 1 9 0 2]", "(flatten {4 {1}}) -> [4 1]", "(flatten {6 {2}}) -> [6 2]", "(flatten {}) -> []", "(flatten {0 {3}}) -> [0 3]", "(flatten {5 {1 {4} {8}}}) -> [5 1 4 8]", "(flatten {}) -> []"], "time": 0.083589}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {8 {6 {2} {2}} {8 {5} {2}}}) -> [8 6 2 2 8 5 2]", "(flatten {2}) -> [2]", "(flatten {0 {2 {0} {2}} {5 {6} {0}}}) -> [0 2 0 2 5 6 0]", "(flatten {5 {9}}) -> [5 9]", "(flatten {}) -> []", "(flatten {7}) -> [7]", "(flatten {7}) -> [7]", "(flatten {7 {9 {7}}}) -> [7 9 7]", "(flatten {3}) -> [3]", "(flatten {1}) -> [1]", "(flatten {8 {8} {4}}) -> [8 8 4]", "(flatten {}) -> []", "(flatten {0 {2} {7}}) -> [0 2 7]", "(flatten {}) -> []", "(flatten {7 {5 {0}} {9}}) -> [7 5 0 9]", "(flatten {}) -> []", "(flatten {6}) -> [6]", "(flatten {1 {4} {5}}) -> [1 4 5]", "(flatten {4 {2}}) -> [4 2]", "(flatten {}) -> []", "(flatten {5 {7}}) -> [5 7]", "(flatten {3 {5} {4}}) -> [3 5 4]", "(flatten {}) -> []"], "time": 0.081792}
{"name": "flatten", "solution": "(let flatten (let a (lambda (b) (foldt b (lambda (d c) (cons c (join d))) [])) _) _)", "examples": ["(flatten {}) -> []", "(flatten {6 {9 {7}} {2 {2} {0}}}) -> [6 9 7 2 2 0]", "(flatten {4 {9 {1}}}) -> [4 9 1]", "(flatten {1 {4} {4 {2 {3}}}}) -> [1 4 4 2 3]", "(flatten {8 {3 {9} {2}}}) -> [8 3 9 2]", "(flatten {4 {0} {7}}) -> [4 0 7]", "(flatten {2}) -> [2]", "(flatten {4 {5}}) -> [4 5]", "(flatten {4 {0 {9}} {4 {6} {7}}}) -> [4 0 9 4 6 7]", "(flatten {8 {9}}) -> [8 9]", "(flatten {8}) -> [8]", "(flatten {3}) -> [3]", "(flatten {}) -> []", "(flatten {3 {6} {4}}) -> [3 6 4]", "(flatten {8 {4 {2}} {5}}) -> [8 4 2 5]", "(flatten {4}) -> [4]", "(flatten {1 {3} {9}}) -> [1 3 9]", "(flatten {2}) -> [2]", "(flatten {}) -> []", "(flatten {3 {4 {9}} {7 {6}}}) -> [3 4 9 7 6]", "(flatten {8 {7 {5 {4} {1}} {3 {7} {8}}} {8 {2}}}) -> [8 7 5 4 1 3 7 8 8 2]", "(flatten {3 {3 {7}} {3}}) -> [3 3 7 3]", "(flatten {2 {0 {6}}}) -> [2 0 6]", "(flatten {}) -> []"], "time": 0.080677}
