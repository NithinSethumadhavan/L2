{"time": 0.000667, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000677, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.038448, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036205, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029238, "examples": ["(incrt {}) -> {}", "(incrt {2 {8}}) -> {3 {9}}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.043277, "examples": ["(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {6 {5}}) -> {7 {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030119, "examples": ["(incrt {}) -> {}", "(incrt {2 {3} {3 {7}}}) -> {3 {4} {4 {8}}}", "(incrt {7 {1} {0}}) -> {8 {2} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024771, "examples": ["(incrt {}) -> {}", "(incrt {6 {9}}) -> {7 {10}}", "(incrt {2 {9}}) -> {3 {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042085, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {8}}) -> {7 {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027485, "examples": ["(incrt {}) -> {}", "(incrt {4 {5 {2} {5}}}) -> {5 {6 {3} {6}}}", "(incrt {4 {6}}) -> {5 {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035976, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {7 {8 {3} {1}}}) -> {8 {9 {4} {2}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029944, "examples": ["(incrt {}) -> {}", "(incrt {4 {0 {8}}}) -> {5 {1 {9}}}", "(incrt {5 {2 {1} {2}}}) -> {6 {3 {2} {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033304, "examples": ["(incrt {}) -> {}", "(incrt {7 {6 {1}}}) -> {8 {7 {2}}}", "(incrt {7 {3 {5 {5} {0}}}}) -> {8 {4 {6 {6} {1}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024754, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {9 {0}}) -> {10 {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023982, "examples": ["(incrt {}) -> {}", "(incrt {9 {6}}) -> {10 {7}}", "(incrt {2 {7} {9}}) -> {3 {8} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025744, "examples": ["(incrt {}) -> {}", "(incrt {3 {3 {0 {9}} {6}} {9 {0}}}) -> {4 {4 {1 {10}} {7}} {10 {1}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037971, "examples": ["(incrt {}) -> {}", "(incrt {3 {4}}) -> {4 {5}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023833, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {4}}) -> {3 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023654, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028217, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {0}}) -> {9 {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02712, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040331, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030356, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {8 {5 {8 {0} {1}} {9 {9}}}}) -> {9 {6 {9 {1} {2}} {10 {10}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024197, "examples": ["(incrt {}) -> {}", "(incrt {4 {9}}) -> {5 {10}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033729, "examples": ["(incrt {}) -> {}", "(incrt {1 {8} {8}}) -> {2 {9} {9}}", "(incrt {4 {2}}) -> {5 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037891, "examples": ["(incrt {}) -> {}", "(incrt {2 {2}}) -> {3 {3}}", "(incrt {4 {6} {0}}) -> {5 {7} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033998, "examples": ["(incrt {}) -> {}", "(incrt {3 {4}}) -> {4 {5}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038147, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {7 {2 {5}} {1 {2} {1 {6}}}}) -> {8 {3 {6}} {2 {3} {2 {7}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032584, "examples": ["(incrt {}) -> {}", "(incrt {3 {4 {8} {1}} {0 {5}}}) -> {4 {5 {9} {2}} {1 {6}}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027669, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026259, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)"}
{"time": 0.034, "examples": ["(incrt {}) -> {}", "(incrt {3 {7} {1}}) -> {4 {8} {2}}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023566, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {5 {4 {7 {7} {8}} {4}}}) -> {6 {5 {8 {8} {9}} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030606, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {7} {2}}) -> {3 {8} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026991, "examples": ["(incrt {}) -> {}", "(incrt {4 {9 {9} {3}} {0}}) -> {5 {10 {10} {4}} {1}}", "(incrt {9 {1} {0}}) -> {10 {2} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034047, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023421, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029824, "examples": ["(incrt {}) -> {}", "(incrt {4 {6}}) -> {5 {7}}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030061, "examples": ["(incrt {}) -> {}", "(incrt {1 {7} {2}}) -> {2 {8} {3}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024186, "examples": ["(incrt {}) -> {}", "(incrt {0 {9} {5}}) -> {1 {10} {6}}", "(incrt {0 {6 {6} {3}}}) -> {1 {7 {7} {4}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02501, "examples": ["(incrt {}) -> {}", "(incrt {6 {1 {6} {6}} {9 {7} {4}}}) -> {7 {2 {7} {7}} {10 {8} {5}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035899, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025412, "examples": ["(incrt {}) -> {}", "(incrt {9 {6}}) -> {10 {7}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036433, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029834, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {8 {3}}) -> {9 {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025359, "examples": ["(incrt {}) -> {}", "(incrt {1 {9} {2}}) -> {2 {10} {3}}", "(incrt {9 {1} {3}}) -> {10 {2} {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026333, "examples": ["(incrt {}) -> {}", "(incrt {7 {9} {4}}) -> {8 {10} {5}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024893, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {2 {1} {6}}) -> {3 {2} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035963, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023756, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {8 {2}}) -> {9 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02477, "examples": ["(incrt {}) -> {}", "(incrt {8 {9} {1 {6} {0}}}) -> {9 {10} {2 {7} {1}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.0267, "examples": ["(incrt {}) -> {}", "(incrt {5 {4}}) -> {6 {5}}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038387, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {7 {0} {9}} {9 {1} {3}}}) -> {3 {8 {1} {10}} {10 {2} {4}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024777, "examples": ["(incrt {}) -> {}", "(incrt {7 {8} {8 {3 {2}} {5 {2}}}}) -> {8 {9} {9 {4 {3}} {6 {3}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024947, "examples": ["(incrt {}) -> {}", "(incrt {4 {1 {7 {6} {5}} {0 {3}}}}) -> {5 {2 {8 {7} {6}} {1 {4}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036756, "examples": ["(incrt {}) -> {}", "(incrt {0 {1 {9}} {3 {0} {2 {1}}}}) -> {1 {2 {10}} {4 {1} {3 {2}}}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036962, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025608, "examples": ["(incrt {}) -> {}", "(incrt {6 {3 {6} {1}} {1}}) -> {7 {4 {7} {2}} {2}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026322, "examples": ["(incrt {}) -> {}", "(incrt {5 {7 {5}}}) -> {6 {8 {6}}}", "(incrt {0 {3 {7}} {5 {6} {7}}}) -> {1 {4 {8}} {6 {7} {8}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036113, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3 {1 {2}}}) -> {4 {2 {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038966, "examples": ["(incrt {}) -> {}", "(incrt {0 {1}}) -> {1 {2}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026242, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0 {1 {5}}}) -> {1 {2 {6}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038298, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2 {2}}) -> {3 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024635, "examples": ["(incrt {}) -> {}", "(incrt {8 {8 {6}}}) -> {9 {9 {7}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023412, "examples": ["(incrt {}) -> {}", "(incrt {8 {1} {9}}) -> {9 {2} {10}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024249, "examples": ["(incrt {}) -> {}", "(incrt {8 {3} {0}}) -> {9 {4} {1}}", "(incrt {1 {8 {6 {9} {8}}}}) -> {2 {9 {7 {10} {9}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034969, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {2 {6 {3} {1}}}) -> {3 {7 {4} {2}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037705, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {4 {0}}) -> {5 {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024011, "examples": ["(incrt {}) -> {}", "(incrt {4 {6} {6}}) -> {5 {7} {7}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000394, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.000748, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.029456, "examples": ["(incrt {}) -> {}", "(incrt {8 {5}}) -> {9 {6}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.000724, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.037567, "examples": ["(incrt {}) -> {}", "(incrt {9 {7}}) -> {10 {8}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.03203, "examples": ["(incrt {}) -> {}", "(incrt {8 {0 {9}}}) -> {9 {1 {10}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023663, "examples": ["(incrt {}) -> {}", "(incrt {5 {0}}) -> {6 {1}}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024222, "examples": ["(incrt {}) -> {}", "(incrt {0 {5} {4}}) -> {1 {6} {5}}", "(incrt {6 {9 {2} {2}} {7 {0}}}) -> {7 {10 {3} {3}} {8 {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025887, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4 {3 {3 {8} {9}} {4}} {9}}) -> {5 {4 {4 {9} {10}} {5}} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024652, "examples": ["(incrt {}) -> {}", "(incrt {0 {6}}) -> {1 {7}}", "(incrt {8 {7 {0}} {3 {8} {8}}}) -> {9 {8 {1}} {4 {9} {9}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024251, "examples": ["(incrt {}) -> {}", "(incrt {4 {1} {8 {6} {3}}}) -> {5 {2} {9 {7} {4}}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027347, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038912, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02589, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {7 {8} {7}}) -> {8 {9} {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030977, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024596, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023839, "examples": ["(incrt {}) -> {}", "(incrt {2 {2}}) -> {3 {3}}", "(incrt {8 {9 {1 {1} {1}} {6 {7} {5}}} {0 {3} {2}}}) -> {9 {10 {2 {2} {2}} {7 {8} {6}}} {1 {4} {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030415, "examples": ["(incrt {}) -> {}", "(incrt {9 {2} {1}}) -> {10 {3} {2}}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.041237, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {9 {8} {0}}) -> {10 {9} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.00049, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.037899, "examples": ["(incrt {}) -> {}", "(incrt {9 {8} {1 {8}}}) -> {10 {9} {2 {9}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024105, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {1 {0 {9} {0}} {5}}) -> {2 {1 {10} {1}} {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023693, "examples": ["(incrt {}) -> {}", "(incrt {0 {0} {6}}) -> {1 {1} {7}}", "(incrt {5 {9 {0}}}) -> {6 {10 {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023911, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {0} {6}}) -> {7 {1} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.00038, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) b) _) _)"}
{"time": 0.023741, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {3 {3 {6} {7}}}) -> {4 {4 {7} {8}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023224, "examples": ["(incrt {}) -> {}", "(incrt {2 {2}}) -> {3 {3}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024357, "examples": ["(incrt {}) -> {}", "(incrt {7 {5 {7 {7} {4}} {6 {0} {5}}} {5}}) -> {8 {6 {8 {8} {5}} {7 {1} {6}}} {6}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02324, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024159, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023245, "examples": ["(incrt {}) -> {}", "(incrt {3 {7} {4}}) -> {4 {8} {5}}", "(incrt {3 {2 {2}}}) -> {4 {3 {3}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
