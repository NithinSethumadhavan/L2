{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.112218, "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {0 {0}}) -> 0", "(sumt {0 {0}}) -> 0", "(sumt {3}) -> 3", "(sumt {5 {2 {0}}}) -> 7", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.06436, "examples": ["(sumt {}) -> 0", "(sumt {1 {1} {1}}) -> 3", "(sumt {}) -> 0", "(sumt {9 {2 {0}} {2}}) -> 13", "(sumt {9 {7 {8 {4} {1}}} {6}}) -> 35", "(sumt {0 {2}}) -> 2", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.182253, "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {6}) -> 6", "(sumt {8 {3 {0} {1}} {2}}) -> 14", "(sumt {8 {1}}) -> 9", "(sumt {}) -> 0", "(sumt {0 {8} {4}}) -> 12"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.176744, "examples": ["(sumt {}) -> 0", "(sumt {3 {7 {3 {3} {8}}} {4}}) -> 28", "(sumt {5}) -> 5", "(sumt {0}) -> 0", "(sumt {1 {6} {4}}) -> 11", "(sumt {1 {6}}) -> 7", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.204954, "examples": ["(sumt {}) -> 0", "(sumt {9 {2 {9} {2}} {2 {9} {9}}}) -> 42", "(sumt {3}) -> 3", "(sumt {2 {1}}) -> 3", "(sumt {7 {8 {7 {8}} {2 {9}}}}) -> 41", "(sumt {6 {3 {9}}}) -> 18", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.200904, "examples": ["(sumt {}) -> 0", "(sumt {1 {6 {6 {1}}} {0 {8 {1} {6}}}}) -> 29", "(sumt {6 {5 {6} {5}}}) -> 22", "(sumt {1 {0 {1}}}) -> 2", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.162848, "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {3}) -> 3", "(sumt {4 {8} {1}}) -> 13", "(sumt {2 {4 {4} {4}}}) -> 14", "(sumt {1 {0 {2 {4} {1}} {5 {5} {1}}}}) -> 19", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.101168, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3 {7}}) -> 10", "(sumt {6 {3} {4 {5}}}) -> 18", "(sumt {1 {8 {2 {2} {8}} {8}} {0}}) -> 29", "(sumt {7}) -> 7", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.140527, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {0}) -> 0", "(sumt {0 {5 {9} {0}} {5 {7}}}) -> 26", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {0 {8 {0} {7}}}) -> 15"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.139303, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {2}}) -> 6", "(sumt {0 {7}}) -> 7", "(sumt {2}) -> 2", "(sumt {4}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.255007, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {7}) -> 7", "(sumt {3 {6} {9}}) -> 18", "(sumt {1}) -> 1", "(sumt {9 {5}}) -> 14", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.254238, "examples": ["(sumt {}) -> 0", "(sumt {9 {7} {8}}) -> 24", "(sumt {0}) -> 0", "(sumt {7}) -> 7", "(sumt {1 {4} {4 {5}}}) -> 14", "(sumt {3 {5} {9 {9} {7}}}) -> 33", "(sumt {9 {5 {6}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.221676, "examples": ["(sumt {}) -> 0", "(sumt {5 {3} {3}}) -> 11", "(sumt {3}) -> 3", "(sumt {1}) -> 1", "(sumt {9 {9} {0}}) -> 18", "(sumt {5 {8} {8 {0}}}) -> 21", "(sumt {5 {3 {6 {6}}} {9 {3 {4}}}}) -> 36"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.285, "examples": ["(sumt {}) -> 0", "(sumt {3 {8} {8}}) -> 19", "(sumt {7 {6} {8 {4}}}) -> 25", "(sumt {6}) -> 6", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {8 {5} {1}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.233401, "examples": ["(sumt {}) -> 0", "(sumt {7 {6 {4}}}) -> 17", "(sumt {4 {0}}) -> 4", "(sumt {0 {4} {9}}) -> 13", "(sumt {5}) -> 5", "(sumt {4}) -> 4", "(sumt {7}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.263282, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {6 {8}} {3}}) -> 22", "(sumt {6 {0 {5 {1}} {0 {1} {7}}} {4}}) -> 24", "(sumt {2 {1}}) -> 3", "(sumt {5 {2} {2 {4}}}) -> 13", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.999294, "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {0 {7 {0} {2}} {3 {6}}}) -> 18", "(sumt {5}) -> 5", "(sumt {1}) -> 1", "(sumt {3 {4}}) -> 7", "(sumt {3 {4 {6}} {8 {1} {1 {9}}}}) -> 32"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.981771, "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {4 {5} {3 {7 {7}}}}) -> 26", "(sumt {}) -> 0", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.984946, "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {6 {5 {8} {0}}}) -> 19", "(sumt {8 {3} {7}}) -> 18", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.063168, "examples": ["(sumt {}) -> 0", "(sumt {9 {7} {2}}) -> 18", "(sumt {4 {0 {5} {8}} {6}}) -> 23", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {2 {4 {6 {5} {1}} {4 {2} {8}}} {6}}) -> 38", "(sumt {7 {7}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.083068, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {3}}) -> 3", "(sumt {8}) -> 8", "(sumt {6 {9 {5} {9}} {2}}) -> 31", "(sumt {2 {8} {3}}) -> 13", "(sumt {0 {7 {8 {8}}} {6 {4 {3} {6}}}}) -> 42"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.057338, "examples": ["(sumt {}) -> 0", "(sumt {5 {9}}) -> 14", "(sumt {3 {1 {9}}}) -> 13", "(sumt {}) -> 0", "(sumt {2 {0 {9} {2}}}) -> 13", "(sumt {6}) -> 6", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.030254, "examples": ["(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {0}) -> 0", "(sumt {6 {4 {7} {2}}}) -> 19", "(sumt {2 {5} {2}}) -> 9", "(sumt {4 {2 {9} {9}} {2 {3} {9}}}) -> 38", "(sumt {7}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.093391, "examples": ["(sumt {}) -> 0", "(sumt {8 {6} {0}}) -> 14", "(sumt {}) -> 0", "(sumt {1 {2} {5}}) -> 8", "(sumt {5 {2 {6 {5} {3}} {5 {9}}} {2 {4 {2} {3}}}}) -> 46", "(sumt {0 {6} {6}}) -> 12", "(sumt {7 {6}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.039464, "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {2 {2 {2 {5}}}}) -> 11", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {8}) -> 8", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.028081, "examples": ["(sumt {}) -> 0", "(sumt {9 {1} {4}}) -> 14", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {9 {6}}) -> 15", "(sumt {0 {7} {5}}) -> 12", "(sumt {0 {9 {9} {3}} {5}}) -> 26"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.096524, "examples": ["(sumt {}) -> 0", "(sumt {0 {6} {6}}) -> 12", "(sumt {2 {5}}) -> 7", "(sumt {9 {4}}) -> 13", "(sumt {2 {4}}) -> 6", "(sumt {}) -> 0", "(sumt {9 {0 {9 {8} {8}}} {1 {3}}}) -> 38"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.071469, "examples": ["(sumt {}) -> 0", "(sumt {8 {0} {0 {7} {2}}}) -> 17", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {3 {2} {7}}) -> 12", "(sumt {8 {5} {7}}) -> 20", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.027109, "examples": ["(sumt {}) -> 0", "(sumt {0 {8} {3}}) -> 11", "(sumt {3 {1} {6 {5 {8}} {7}}}) -> 30", "(sumt {9}) -> 9", "(sumt {9 {6} {9 {7}}}) -> 31", "(sumt {0 {5} {9 {7} {8}}}) -> 29", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.089804, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {5 {5 {5}}}) -> 15", "(sumt {8 {7 {8} {9}}}) -> 32", "(sumt {4 {6}}) -> 10", "(sumt {2 {4} {8}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.056525, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {5 {9 {3 {0}}} {4 {9 {6}}}}) -> 36", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.167837, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {0 {2 {7} {4}} {4 {0}}}}) -> 18", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {1 {6} {1}}) -> 8", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.997586, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {3 {8}}) -> 11", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.930794, "examples": ["(sumt {}) -> 0", "(sumt {1 {4}}) -> 5", "(sumt {1}) -> 1", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {7 {1 {6 {0}}}}) -> 14", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.927626, "examples": ["(sumt {}) -> 0", "(sumt {0 {4}}) -> 4", "(sumt {7 {3 {1}} {0 {2}}}) -> 13", "(sumt {3 {2 {2 {7} {1}}}}) -> 15", "(sumt {6}) -> 6", "(sumt {2 {1 {0 {7}}}}) -> 10", "(sumt {0 {0} {7}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.014671, "examples": ["(sumt {}) -> 0", "(sumt {8 {1 {1} {9}} {1 {9} {8}}}) -> 37", "(sumt {0 {1 {8}} {0 {9} {9}}}) -> 27", "(sumt {1}) -> 1", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {2 {7}}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.959182, "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {5 {9 {7} {3}} {7 {3 {5} {4}} {7}}}) -> 50", "(sumt {6 {8}}) -> 14", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.050508, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {0 {2} {6}}}) -> 16", "(sumt {}) -> 0", "(sumt {1 {8}}) -> 9", "(sumt {9 {3}}) -> 12"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.983082, "examples": ["(sumt {}) -> 0", "(sumt {6 {7 {9} {0 {2}}}}) -> 24", "(sumt {0 {7 {7}} {6}}) -> 20", "(sumt {}) -> 0", "(sumt {8 {4 {6}} {1}}) -> 19", "(sumt {1 {1 {5} {0 {5} {4}}}}) -> 16", "(sumt {2 {7}}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.273725, "examples": ["(sumt {}) -> 0", "(sumt {2 {0 {2} {5}}}) -> 9", "(sumt {7 {0 {3}} {2 {4} {5}}}) -> 21", "(sumt {}) -> 0", "(sumt {5 {5 {8 {6} {8}}}}) -> 32", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.229012, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {5}) -> 5", "(sumt {5 {3} {5}}) -> 13", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {7 {8}}) -> 15"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.172622, "examples": ["(sumt {}) -> 0", "(sumt {1 {4}}) -> 5", "(sumt {8}) -> 8", "(sumt {6 {3} {6 {5} {7}}}) -> 27", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.237022, "examples": ["(sumt {}) -> 0", "(sumt {1 {5}}) -> 6", "(sumt {1 {4 {6 {7} {3}} {2 {5}}}}) -> 28", "(sumt {8 {0} {8}}) -> 16", "(sumt {4 {2 {4 {8}}} {6 {1}}}) -> 25", "(sumt {1}) -> 1", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.267892, "examples": ["(sumt {}) -> 0", "(sumt {6 {5} {0}}) -> 11", "(sumt {6 {6} {2 {1} {5}}}) -> 20", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {2 {5} {3 {4}}}) -> 14", "(sumt {0 {4}}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.236859, "examples": ["(sumt {}) -> 0", "(sumt {0 {3 {6} {5 {3}}}}) -> 17", "(sumt {8}) -> 8", "(sumt {9}) -> 9", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {8 {8}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.318341, "examples": ["(sumt {}) -> 0", "(sumt {6 {6 {9} {1 {6} {8}}} {2}}) -> 38", "(sumt {}) -> 0", "(sumt {9 {7} {5}}) -> 21", "(sumt {7}) -> 7", "(sumt {8 {7}}) -> 15", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.325342, "examples": ["(sumt {}) -> 0", "(sumt {8 {4 {2} {8}} {9}}) -> 31", "(sumt {2}) -> 2", "(sumt {3 {6}}) -> 9", "(sumt {}) -> 0", "(sumt {2 {6 {8}} {1 {8 {0} {6}}}}) -> 31", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.179611, "examples": ["(sumt {}) -> 0", "(sumt {1 {2} {8}}) -> 11", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.768342, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {8 {5 {9 {7} {6}}} {2}}) -> 37", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.823762, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {8}}) -> 10", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {8 {3}}) -> 11", "(sumt {2 {1}}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.842326, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {7} {0}}) -> 7", "(sumt {4}) -> 4", "(sumt {7 {6} {2}}) -> 15", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.767654, "examples": ["(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {6}) -> 6", "(sumt {0 {9}}) -> 9", "(sumt {}) -> 0", "(sumt {0 {4 {3}}}) -> 7", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.833617, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {5 {8}} {2}}) -> 24", "(sumt {9 {6}}) -> 15", "(sumt {}) -> 0", "(sumt {3 {6}}) -> 9", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.794786, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {6 {3 {5}} {6 {5} {5}}}) -> 30", "(sumt {1 {4}}) -> 5", "(sumt {9}) -> 9", "(sumt {0}) -> 0", "(sumt {9 {4}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.080324, "examples": ["(sumt {}) -> 0", "(sumt {0 {9}}) -> 9", "(sumt {6 {4 {4} {3}} {8 {2} {0}}}) -> 27", "(sumt {0}) -> 0", "(sumt {8 {5} {6}}) -> 19", "(sumt {}) -> 0", "(sumt {3 {5 {1 {5} {7}}}}) -> 21"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.230223, "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {9 {4} {5}}) -> 18", "(sumt {4 {2 {4 {1}} {0 {2} {4}}}}) -> 17", "(sumt {0 {1} {5}}) -> 6", "(sumt {1 {1 {5 {3} {1}} {3}} {5 {3 {4}} {8}}}) -> 34", "(sumt {2 {1} {5 {9} {3}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.232132, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {4 {7}}) -> 11", "(sumt {1 {2 {8}} {4 {7} {5}}}) -> 27", "(sumt {7 {0}}) -> 7", "(sumt {6}) -> 6", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.804081, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {6 {3} {3}} {4 {6}}}) -> 31", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {1 {3}}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.652423, "examples": ["(sumt {}) -> 0", "(sumt {3 {7} {8}}) -> 18", "(sumt {}) -> 0", "(sumt {7 {0} {7}}) -> 14", "(sumt {}) -> 0", "(sumt {9 {5}}) -> 14", "(sumt {0 {1}}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.68825, "examples": ["(sumt {}) -> 0", "(sumt {0 {4 {9 {0}}} {2 {8}}}) -> 23", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.406311, "examples": ["(sumt {}) -> 0", "(sumt {5 {6} {4}}) -> 15", "(sumt {5}) -> 5", "(sumt {2}) -> 2", "(sumt {2 {2 {4 {5}} {6}}}) -> 19", "(sumt {2}) -> 2", "(sumt {3 {8 {6} {3 {7} {2}}} {1 {7 {4}}}}) -> 41"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.389041, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {9 {0} {9}}}) -> 24", "(sumt {3 {4 {0}} {3 {2} {3}}}) -> 15", "(sumt {8 {1 {0 {3}}}}) -> 12", "(sumt {3 {2 {9}}}) -> 14", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.492091, "examples": ["(sumt {}) -> 0", "(sumt {0 {3 {1} {8}}}) -> 12", "(sumt {1}) -> 1", "(sumt {4 {4} {7}}) -> 15", "(sumt {4 {1 {0 {9} {4}}} {6 {9 {6} {7}}}}) -> 46", "(sumt {0 {9 {0}} {9}}) -> 18", "(sumt {1 {6 {2} {2}} {4 {0}}}) -> 15"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.472542, "examples": ["(sumt {}) -> 0", "(sumt {2 {2 {6} {6 {1}}} {6}}) -> 23", "(sumt {9 {7}}) -> 16", "(sumt {3 {5 {3} {0}}}) -> 11", "(sumt {3 {0} {1}}) -> 4", "(sumt {2 {8 {1} {6 {1}}} {0 {2 {9}} {1 {9}}}}) -> 39", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.451962, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {8}) -> 8", "(sumt {5 {0 {1} {8 {2}}} {1 {0} {1 {3}}}}) -> 21", "(sumt {7 {1 {8}}}) -> 16", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.597242, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {9 {9 {4}}}) -> 22", "(sumt {1 {8 {9}} {6 {9}}}) -> 33", "(sumt {}) -> 0", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.49692, "examples": ["(sumt {}) -> 0", "(sumt {0 {1}}) -> 1", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {1 {2} {7}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.573541, "examples": ["(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {6 {6}}) -> 12", "(sumt {6 {5 {9} {4}} {4 {3} {4}}}) -> 35", "(sumt {8 {8 {1} {7}}}) -> 24", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.523848, "examples": ["(sumt {}) -> 0", "(sumt {2 {3 {4 {6} {8}}}}) -> 23", "(sumt {6 {8 {9} {9}} {6 {8}}}) -> 46", "(sumt {3 {1} {6 {0}}}) -> 10", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.679881, "examples": ["(sumt {}) -> 0", "(sumt {9 {9 {9 {1}}}}) -> 28", "(sumt {7 {9 {4} {0}}}) -> 20", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {2 {6} {0 {4} {0}}}}) -> 12", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.582236, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {7 {9 {0 {2}} {5 {9} {6}}}}) -> 38", "(sumt {9 {2 {1}}}) -> 12", "(sumt {0}) -> 0", "(sumt {4 {7} {9 {8} {2}}}) -> 30", "(sumt {9 {1 {2 {9}}} {0 {5 {3} {6}}}}) -> 35"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.628035, "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {6}) -> 6", "(sumt {0 {8}}) -> 8", "(sumt {5 {0} {6}}) -> 11", "(sumt {8 {8 {0}} {2 {9}}}) -> 27", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.66834, "examples": ["(sumt {}) -> 0", "(sumt {7 {4 {1} {3 {2} {4}}}}) -> 21", "(sumt {3}) -> 3", "(sumt {3 {0}}) -> 3", "(sumt {4 {8}}) -> 12", "(sumt {3}) -> 3", "(sumt {1 {2} {3 {9} {8 {2} {1}}}}) -> 26"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.60848, "examples": ["(sumt {}) -> 0", "(sumt {9 {8 {5 {8}}}}) -> 30", "(sumt {1 {0}}) -> 1", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {2 {1 {6}} {9 {4}}} {1 {0 {3} {4}} {7 {9}}}}) -> 48", "(sumt {5 {1} {4 {8}}}) -> 18"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.693689, "examples": ["(sumt {}) -> 0", "(sumt {3 {5 {6}} {9 {4}}}) -> 27", "(sumt {7 {4 {5} {8 {9} {5}}}}) -> 38", "(sumt {7}) -> 7", "(sumt {1}) -> 1", "(sumt {7}) -> 7", "(sumt {7 {7}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.581179, "examples": ["(sumt {}) -> 0", "(sumt {4 {1 {2 {7}} {4}}}) -> 18", "(sumt {1 {6} {4}}) -> 11", "(sumt {9 {9 {7} {6}} {5}}) -> 36", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {4}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.318726, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {8 {2 {6} {4 {2} {7}}} {6}}) -> 35", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c f)) c)) 0)) _) _)", "time": 1.481912, "examples": ["(sumt {}) -> 0", "(sumt {3 {1 {4}} {1}}) -> 9", "(sumt {0}) -> 0", "(sumt {7 {6} {8}}) -> 21", "(sumt {1}) -> 1", "(sumt {5}) -> 5", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.763988, "examples": ["(sumt {}) -> 0", "(sumt {1 {0 {4 {3}} {4 {7} {2}}} {3 {7}}}) -> 31", "(sumt {1}) -> 1", "(sumt {6 {1} {7}}) -> 14", "(sumt {6}) -> 6", "(sumt {9 {0} {0}}) -> 9", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.361207, "examples": ["(sumt {}) -> 0", "(sumt {6 {7} {9 {0}}}) -> 22", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {5 {4 {6 {6} {1}}}}) -> 22", "(sumt {9 {9} {3 {2} {1}}}) -> 24", "(sumt {7 {8 {0} {5}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.365338, "examples": ["(sumt {}) -> 0", "(sumt {9 {1} {0}}) -> 10", "(sumt {3 {6 {3} {1}} {0 {8}}}) -> 21", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {7 {1}}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.386691, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {9 {1 {7 {5}}}}) -> 22", "(sumt {}) -> 0", "(sumt {9 {2}}) -> 11", "(sumt {3 {4 {5 {1}}}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.731359, "examples": ["(sumt {}) -> 0", "(sumt {8 {1} {2}}) -> 11", "(sumt {8 {4 {4}} {3}}) -> 19", "(sumt {0}) -> 0", "(sumt {9 {7 {0} {5}} {0}}) -> 21", "(sumt {9 {7} {8}}) -> 24", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.691326, "examples": ["(sumt {}) -> 0", "(sumt {2 {9}}) -> 11", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {4 {3 {0 {3}}}}) -> 10", "(sumt {5 {2}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.286709, "examples": ["(sumt {}) -> 0", "(sumt {9 {1} {6}}) -> 16", "(sumt {1}) -> 1", "(sumt {7}) -> 7", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {1 {8 {7}} {9 {3} {0}}}) -> 28"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.785426, "examples": ["(sumt {}) -> 0", "(sumt {7 {4 {1 {9}}}}) -> 21", "(sumt {5}) -> 5", "(sumt {4 {3} {6}}) -> 13", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {5 {6 {5 {0}} {0 {4}}} {6 {3 {7} {6}}}}) -> 42"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.902546, "examples": ["(sumt {}) -> 0", "(sumt {4 {7 {3}} {5 {1 {8} {2}} {1 {0} {7}}}}) -> 38", "(sumt {0 {4 {9} {6}}}) -> 19", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {8 {8} {0}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.846975, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {2 {9 {2} {8}} {1}}) -> 22", "(sumt {4 {2 {4}} {4}}) -> 14", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.920547, "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {1 {4 {9} {1}} {2 {8} {5}}}) -> 30", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {5 {5 {2 {2}} {8}}}) -> 22", "(sumt {8 {7} {5}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.799928, "examples": ["(sumt {}) -> 0", "(sumt {2 {1}}) -> 3", "(sumt {9 {9}}) -> 18", "(sumt {}) -> 0", "(sumt {4 {8} {6}}) -> 18", "(sumt {8}) -> 8", "(sumt {5 {2} {8 {0} {1}}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.167541, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3 {6 {1 {0}}} {5 {5} {4 {0}}}}) -> 24", "(sumt {6 {0} {0}}) -> 6", "(sumt {0 {6 {8}}}) -> 14", "(sumt {3}) -> 3", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.555279, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {5 {7} {3 {5} {2}}}) -> 22", "(sumt {7}) -> 7", "(sumt {6 {6}}) -> 12", "(sumt {8 {6 {8} {7}} {0 {9} {2}}}) -> 40"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.764352, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {7} {1 {8}}}) -> 20", "(sumt {4 {9} {3}}) -> 16", "(sumt {9 {0 {1} {7 {7} {4}}} {2 {0}}}) -> 30", "(sumt {}) -> 0", "(sumt {9 {0 {9}} {0}}) -> 18"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.555972, "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {4 {8} {8 {0}}}) -> 20", "(sumt {2 {3}}) -> 5", "(sumt {8 {8 {6} {6}} {0 {3} {2}}}) -> 33", "(sumt {}) -> 0", "(sumt {3 {7} {3}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.553446, "examples": ["(sumt {}) -> 0", "(sumt {5 {1}}) -> 6", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {8 {2 {8 {2}} {9 {6} {1}}} {1 {6}}}) -> 43", "(sumt {0 {3 {2} {1}}}) -> 6", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.702317, "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {6 {5} {6}}) -> 17", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.629182, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {9 {2}} {2}}) -> 19", "(sumt {2 {3} {9}}) -> 14", "(sumt {}) -> 0", "(sumt {8 {0} {8}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.603022, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {8}}) -> 13", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {0 {6}}) -> 6", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.696074, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {3 {9} {6}}}) -> 27", "(sumt {}) -> 0", "(sumt {3 {1 {1 {9}}} {6 {2 {0}} {7 {7}}}}) -> 36", "(sumt {2 {0} {5}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.724035, "examples": ["(sumt {}) -> 0", "(sumt {6 {7 {8} {8}} {4 {8} {0}}}) -> 41", "(sumt {8 {2 {1} {1 {8}}}}) -> 20", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
