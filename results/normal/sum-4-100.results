{"time": 0.000301, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) 0) _) _)", "name": "sum"}
{"time": 0.037664, "examples": ["(sum []) -> 0", "(sum [3 4]) -> 7", "(sum [9 8 9]) -> 26"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.036873, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [6 5 4 0 7]) -> 22"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.034307, "examples": ["(sum []) -> 0", "(sum [5]) -> 5", "(sum [7 1]) -> 8"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.040744, "examples": ["(sum []) -> 0", "(sum [3]) -> 3", "(sum [6 5 2]) -> 13"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.036249, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [4 6 7 4 7]) -> 28"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.040419, "examples": ["(sum []) -> 0", "(sum [3 1 1 2 5]) -> 12", "(sum [7]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.032137, "examples": ["(sum []) -> 0", "(sum [1 7 5 9 1]) -> 23", "(sum [0 0 0 4]) -> 4"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.042799, "examples": ["(sum []) -> 0", "(sum [8 7]) -> 15", "(sum [7]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.027537, "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.031002, "examples": ["(sum []) -> 0", "(sum [2 2 6 0]) -> 10", "(sum [8 3 3 5 7]) -> 26"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.032601, "examples": ["(sum []) -> 0", "(sum [3 7 9 5]) -> 24", "(sum [6 1]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.043986, "examples": ["(sum []) -> 0", "(sum [2]) -> 2", "(sum [0 2 8 8]) -> 18"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.044761, "examples": ["(sum []) -> 0", "(sum [3 4]) -> 7", "(sum [9 2 2 1 4]) -> 18"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.023726, "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.039691, "examples": ["(sum []) -> 0", "(sum [8 8 6 8 5]) -> 35", "(sum [2 5 9 2]) -> 18"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.031908, "examples": ["(sum []) -> 0", "(sum [8 8 8 9 1]) -> 34", "(sum [5 2 7 7 9]) -> 30"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.02934, "examples": ["(sum []) -> 0", "(sum [5]) -> 5", "(sum [6 8]) -> 14"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030215, "examples": ["(sum []) -> 0", "(sum [2 7]) -> 9", "(sum [2 2 8 0 4]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.046885, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [3 0 4 9]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.037526, "examples": ["(sum []) -> 0", "(sum [0 8 3 0 4]) -> 15", "(sum [3]) -> 3"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03072, "examples": ["(sum []) -> 0", "(sum [3 6 0 8 1]) -> 18", "(sum [3 7 5 0 1]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.033978, "examples": ["(sum []) -> 0", "(sum [7 8 2 3]) -> 20", "(sum [4 3 8 5]) -> 20"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.034073, "examples": ["(sum []) -> 0", "(sum [8 5]) -> 13", "(sum [1]) -> 1"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.035003, "examples": ["(sum []) -> 0", "(sum [8 3 3 2 1]) -> 17", "(sum [6 9]) -> 15"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.035235, "examples": ["(sum []) -> 0", "(sum [3 8 3 2]) -> 16", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.049312, "examples": ["(sum []) -> 0", "(sum [1 4]) -> 5", "(sum [8 5 5 8]) -> 26"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.044222, "examples": ["(sum []) -> 0", "(sum [9 1 3]) -> 13", "(sum [2]) -> 2"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.034367, "examples": ["(sum []) -> 0", "(sum [3 6 0]) -> 9", "(sum [5 9 0 5]) -> 19"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.033261, "examples": ["(sum []) -> 0", "(sum [5 5 4 4]) -> 18", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.045, "examples": ["(sum []) -> 0", "(sum [3 2 4]) -> 9", "(sum [8 7 7 6]) -> 28"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.040938, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [5 5]) -> 10"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.046931, "examples": ["(sum []) -> 0", "(sum [2 5 6 7]) -> 20", "(sum [0]) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028809, "examples": ["(sum []) -> 0", "(sum [2 3]) -> 5", "(sum [4 3]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030882, "examples": ["(sum []) -> 0", "(sum [4 1]) -> 5", "(sum [5 9 7 0]) -> 21"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03966, "examples": ["(sum []) -> 0", "(sum [5 2 0 6 5]) -> 18", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.051451, "examples": ["(sum []) -> 0", "(sum [2 7 6]) -> 15", "(sum [5]) -> 5"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.050155, "examples": ["(sum []) -> 0", "(sum [6 4]) -> 10", "(sum [3]) -> 3"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.041862, "examples": ["(sum []) -> 0", "(sum [4 0 2 4]) -> 10", "(sum [1 3 7 1]) -> 12"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028962, "examples": ["(sum []) -> 0", "(sum [2 7]) -> 9", "(sum [5 0 8 7 8]) -> 28"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.038166, "examples": ["(sum []) -> 0", "(sum [8 2 9 2]) -> 21", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.034865, "examples": ["(sum []) -> 0", "(sum [6 9 6]) -> 21", "(sum [7 6 1 8 5]) -> 27"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.047656, "examples": ["(sum []) -> 0", "(sum [4 1]) -> 5", "(sum [2 8 5 5 2]) -> 22"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.035354, "examples": ["(sum []) -> 0", "(sum [6 6 9 7 5]) -> 33", "(sum [8]) -> 8"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.044601, "examples": ["(sum []) -> 0", "(sum [3 8 1 6 7]) -> 25", "(sum [7]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.044654, "examples": ["(sum []) -> 0", "(sum [7 6 5 7]) -> 25", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.044177, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [3 6 0 7]) -> 16"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030058, "examples": ["(sum []) -> 0", "(sum [4]) -> 4", "(sum [4 3 7 6]) -> 20"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029449, "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum [0 5 4 8 9]) -> 26"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029568, "examples": ["(sum []) -> 0", "(sum [9 7 3 1]) -> 20", "(sum [4 8 9]) -> 21"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.024618, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [9]) -> 9"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.030365, "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.046185, "examples": ["(sum []) -> 0", "(sum [8 1]) -> 9", "(sum [5 8 2]) -> 15"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.041614, "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.033193, "examples": ["(sum []) -> 0", "(sum [1 5 2 1 4]) -> 13", "(sum [0 9]) -> 9"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.032875, "examples": ["(sum []) -> 0", "(sum [4 3]) -> 7", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03154, "examples": ["(sum []) -> 0", "(sum [5]) -> 5", "(sum [5 8 0 0 6]) -> 19"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.039513, "examples": ["(sum []) -> 0", "(sum [4]) -> 4", "(sum [3 7]) -> 10"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.043415, "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum [5 9 3 3 4]) -> 24"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029086, "examples": ["(sum []) -> 0", "(sum [8 1 8 5]) -> 22", "(sum [4 3 5]) -> 12"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.051033, "examples": ["(sum []) -> 0", "(sum [0 1 9 8]) -> 18", "(sum [1 1]) -> 2"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.046512, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [6 4 4 5]) -> 19"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.042064, "examples": ["(sum []) -> 0", "(sum [3 7 8 9 2]) -> 29", "(sum [6 4 8]) -> 18"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.04886, "examples": ["(sum []) -> 0", "(sum [4]) -> 4", "(sum [7 6 2 0]) -> 15"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029643, "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum [0 0]) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.029746, "examples": ["(sum []) -> 0", "(sum [8]) -> 8", "(sum [3 8 2 5]) -> 18"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.038734, "examples": ["(sum []) -> 0", "(sum [3 8]) -> 11", "(sum [4 0 3]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.039984, "examples": ["(sum []) -> 0", "(sum [9 9 5]) -> 23", "(sum [8 4]) -> 12"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.032273, "examples": ["(sum []) -> 0", "(sum [6 1 8 0]) -> 15", "(sum [3]) -> 3"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030206, "examples": ["(sum []) -> 0", "(sum [4 5 2]) -> 11", "(sum [3 0 7 5]) -> 15"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.050178, "examples": ["(sum []) -> 0", "(sum [7 0 3 6]) -> 16", "(sum [7]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030043, "examples": ["(sum []) -> 0", "(sum [0 9 6 3 3]) -> 21", "(sum [3 0]) -> 3"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03615, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [0 8 7 8]) -> 23"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030505, "examples": ["(sum []) -> 0", "(sum [2 2 0]) -> 4", "(sum [4 2 4]) -> 10"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.042251, "examples": ["(sum []) -> 0", "(sum [9]) -> 9", "(sum [5 7]) -> 12"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.04573, "examples": ["(sum []) -> 0", "(sum [6 7 9 9]) -> 31", "(sum [1]) -> 1"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.044793, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [3 1]) -> 4"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.03815, "examples": ["(sum []) -> 0", "(sum [5 8 4 8]) -> 25", "(sum [1 3 7]) -> 11"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.050016, "examples": ["(sum []) -> 0", "(sum [1]) -> 1", "(sum [7 2 8 5]) -> 22"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.036212, "examples": ["(sum []) -> 0", "(sum [3 1 2]) -> 6", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.042715, "examples": ["(sum []) -> 0", "(sum [6 7]) -> 13", "(sum [0]) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029727, "examples": ["(sum []) -> 0", "(sum [7 0 0 4 5]) -> 16", "(sum [2 6]) -> 8"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.030292, "examples": ["(sum []) -> 0", "(sum [7 1 2 1 3]) -> 14", "(sum [0 5 3 6 9]) -> 23"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029689, "examples": ["(sum []) -> 0", "(sum [5 9]) -> 14", "(sum [1 4 5 1 3]) -> 14"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.041751, "examples": ["(sum []) -> 0", "(sum [9 9 1 9]) -> 28", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.049703, "examples": ["(sum []) -> 0", "(sum [9 5 8 1 3]) -> 26", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.043188, "examples": ["(sum []) -> 0", "(sum [8 4 0]) -> 12", "(sum [5]) -> 5"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.037669, "examples": ["(sum []) -> 0", "(sum [6]) -> 6", "(sum [0 1 9 3 6]) -> 19"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.033249, "examples": ["(sum []) -> 0", "(sum [6 9 2]) -> 17", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.038129, "examples": ["(sum []) -> 0", "(sum [3 5 8 8]) -> 24", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.042133, "examples": ["(sum []) -> 0", "(sum [2 5 5]) -> 12", "(sum [0 2 5]) -> 7"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.031078, "examples": ["(sum []) -> 0", "(sum [8 5 6 4]) -> 23", "(sum [3 1]) -> 4"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.052121, "examples": ["(sum []) -> 0", "(sum []) -> 0", "(sum [2 8 6 2]) -> 18"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029612, "examples": ["(sum []) -> 0", "(sum [3 0]) -> 3", "(sum [2 7 6]) -> 15"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029338, "examples": ["(sum []) -> 0", "(sum [5 2 0 9 8]) -> 24", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.029848, "examples": ["(sum []) -> 0", "(sum [3 9 6]) -> 18", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028694, "examples": ["(sum []) -> 0", "(sum [4 6]) -> 10", "(sum [8 4 1 8]) -> 21"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.023158, "examples": ["(sum []) -> 0", "(sum [7]) -> 7", "(sum []) -> 0"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "name": "sum"}
{"time": 0.028484, "examples": ["(sum []) -> 0", "(sum [8 4 3 6]) -> 21", "(sum [4 2 8 2 9]) -> 25"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
{"time": 0.028183, "examples": ["(sum []) -> 0", "(sum [1]) -> 1", "(sum [8 4 3 4]) -> 19"], "solution": "(let sum (let a (lambda (b) (foldl b (lambda (d c) (+ d c)) 0)) _) _)", "name": "sum"}
