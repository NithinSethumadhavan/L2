{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) d) 0)))) _) _)", "name": "sumtrees", "time": 0.433149, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{6} {1} {1} {1}]) -> [6 1 1 1]", "(sumtrees [{} {}]) -> [0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.377577, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{2 {9} {6}}]) -> [17]", "(sumtrees [{7} {0 {5} {5 {5 {1} {4}} {3}}} {6 {0 {2}} {4 {7} {0}}} {4}]) -> [7 23 19 4]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.428255, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {9 {8}} {3 {0}} {5 {5 {9} {6 {6}}} {8 {5 {6}} {8 {3} {6}}}}]) -> [0 17 3 67]", "(sumtrees [{1 {5 {8} {4}} {9 {3}}} {8} {1} {}]) -> [30 8 1 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.663222, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {} {} {} {3 {9 {7}} {9 {5} {6}}}]) -> [0 0 0 0 39]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.517128, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{6} {0 {3} {8}} {7 {7 {4 {2}} {9 {9} {3}}}} {}]) -> [6 11 41 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (value c)))) _) _)", "name": "sumtrees", "time": 0.044109, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{3}]) -> [3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 51.319946, "examples": ["(sumtrees []) -> []", "(sumtrees [{6} {} {8 {4 {7 {5}}}} {}]) -> [6 0 24 0]", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {1 {9} {5}} {3 {7}} {8}]) -> [0 15 10 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 51.983681, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0 {2}} {8 {1 {8} {9 {4}}} {8}} {}]) -> [0 2 38 0]", "(sumtrees [{}]) -> [0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.331376, "examples": ["(sumtrees []) -> []", "(sumtrees [{8}]) -> [8]", "(sumtrees [{0 {6}} {3 {5} {0}} {} {1 {9 {4 {5} {3}} {5 {0} {4}}}}]) -> [6 8 0 31]", "(sumtrees [{2} {8} {3} {} {7 {1}}]) -> [2 8 3 0 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.984308, "examples": ["(sumtrees []) -> []", "(sumtrees [{0}]) -> [0]", "(sumtrees [{8 {3 {4 {2} {8}}} {0}} {5 {0} {4}} {2} {2}]) -> [25 9 2 2]", "(sumtrees [{5} {6 {9 {2 {5} {1}}} {9}} {} {6 {2}}]) -> [5 32 0 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.833848, "examples": ["(sumtrees []) -> []", "(sumtrees [{6} {} {} {4 {0 {2} {3}} {9 {8} {6}}}]) -> [6 0 0 32]", "(sumtrees [{3 {5} {4}}]) -> [12]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.247267, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {2 {9} {9}}} {9 {1} {8 {1} {9}}} {5 {1} {8}}]) -> [23 28 14]", "(sumtrees [{1 {6}}]) -> [7]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.736888, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {1 {6} {3}} {6}} {5 {5 {4 {9} {2}} {6 {1}}}} {5 {1 {7} {4}} {7 {7} {0}}} {7}]) -> [25 32 31 7]", "(sumtrees [{} {6} {5}]) -> [0 6 5]", "(sumtrees [{4 {5 {2 {7}} {4 {1} {6}}} {5}}]) -> [34]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 65.104066, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{} {8 {6}} {1} {5 {6}}]) -> [0 14 1 11]", "(sumtrees [{8} {1 {2}} {0} {5} {9}]) -> [8 3 0 5 9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 66.129365, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {7} {4}} {5}]) -> [14 5]", "(sumtrees [{9} {4 {3 {2} {9}} {8 {2} {8}}} {9} {5} {1 {6} {4 {8} {4 {4} {3}}}}]) -> [9 36 9 5 30]", "(sumtrees [{} {9 {5} {4}} {7 {8}} {2} {4}]) -> [0 18 15 2 4]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 66.585433, "examples": ["(sumtrees []) -> []", "(sumtrees [{0} {9} {8 {0 {2 {9}}} {5 {4 {8} {0}} {2}}}]) -> [0 9 38]", "(sumtrees [{} {2 {1}} {0} {}]) -> [0 3 0 0]", "(sumtrees [{2} {}]) -> [2 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 67.58528, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9 {7} {1}} {5 {8 {0 {2} {2}} {1 {9}}}}]) -> [0 17 27]", "(sumtrees [{2 {4 {6} {7}}} {6 {7 {8} {9}} {2 {9}}} {4 {5} {3}} {6 {7 {5} {4}}} {9 {0}}]) -> [19 41 12 22 9]", "(sumtrees [{4 {1 {4 {6} {4}} {7}}} {3} {9 {4}} {}]) -> [26 3 13 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.479663, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0} {7 {2}} {}]) -> [0 0 9 0]", "(sumtrees [{4} {7 {0}} {2 {7 {1} {5}}} {3}]) -> [4 7 15 3]", "(sumtrees [{5} {} {6 {7 {1}} {6}}]) -> [5 0 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.812286, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {0}}]) -> [7]", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{1} {7 {9} {5}} {5 {6 {6 {0}} {5 {6}}}} {} {}]) -> [1 21 28 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 31.462831, "examples": ["(sumtrees []) -> []", "(sumtrees [{7} {}]) -> [7 0]", "(sumtrees [{7 {0 {6}} {6 {3}}}]) -> [22]", "(sumtrees [{} {5 {5} {4}}]) -> [0 14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.46426, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {8 {4 {1} {8}} {8 {1}}}} {5} {0}]) -> [32 5 0]", "(sumtrees [{4 {7}}]) -> [11]", "(sumtrees [{0} {0 {8}} {1 {9 {6 {0}} {7 {0}}}} {}]) -> [0 8 23 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.940312, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {3 {9} {3 {7} {0}}} {1 {6 {3}} {2}}} {}]) -> [34 0]", "(sumtrees []) -> []", "(sumtrees [{} {} {3}]) -> [0 0 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.798019, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {0} {1}} {} {4 {5 {9} {6 {6}}} {7 {3}}}]) -> [3 0 40]", "(sumtrees [{6 {0}}]) -> [6]", "(sumtrees [{} {8 {6}}]) -> [0 14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.882811, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{7 {1 {1}}} {5 {7 {2} {6}}} {6 {8 {4} {8}} {1 {0} {4}}} {6 {2 {9 {8}}} {0}} {}]) -> [9 20 31 25 0]", "(sumtrees [{5 {7}}]) -> [12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.43027, "examples": ["(sumtrees []) -> []", "(sumtrees [{1}]) -> [1]", "(sumtrees [{4} {0 {9} {3}}]) -> [4 12]", "(sumtrees [{9 {4}} {}]) -> [13 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.304044, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{3 {7 {0}}} {2} {0}]) -> [10 2 0]", "(sumtrees [{2 {8}} {5} {5 {7 {1}} {4 {7}}} {7}]) -> [10 5 24 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 41.612268, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{2 {8 {0} {8}} {8 {7} {0}}}]) -> [33]", "(sumtrees [{5 {8 {9 {4} {6}}} {6}} {4 {1} {3}} {0 {8} {0}} {}]) -> [38 8 8 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.788748, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {7}} {9 {4}} {6 {4 {2}} {5}} {0 {6 {0} {2}} {9 {5} {9}}} {0 {0} {4}}]) -> [13 13 17 31 4]", "(sumtrees [{4 {9}} {4} {} {}]) -> [13 4 0 0]", "(sumtrees [{8 {6 {9}}}]) -> [23]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.434739, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {3 {2} {5}}} {1 {8}} {}]) -> [11 9 0]", "(sumtrees [{6} {9 {9 {9} {2}} {0 {7}}}]) -> [6 36]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 65.001614, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9 {1 {5 {0}}}} {0} {0} {0 {1 {2 {7} {3}} {8 {3}}}}]) -> [0 15 0 0 24]", "(sumtrees [{8} {2}]) -> [8 2]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.82381, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {2 {2}}} {}]) -> [8 0]", "(sumtrees []) -> []", "(sumtrees [{5 {9}} {1}]) -> [14 1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 52.22907, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {3}} {6 {5 {7} {0}}} {} {}]) -> [11 18 0 0]", "(sumtrees [{8} {} {7 {7} {7}} {5 {4 {5} {7 {9}}} {8}} {5}]) -> [8 0 21 38 5]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.685107, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {1}} {8 {2} {9}} {6 {0 {3}}}]) -> [5 19 9]", "(sumtrees []) -> []", "(sumtrees [{7} {3 {7} {2}}]) -> [7 12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 68.298817, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {2 {8} {4}}} {9 {7} {3 {0}}} {2 {9 {5}} {0}} {1 {0 {4 {3} {1}} {8 {2}}}}]) -> [17 19 16 19]", "(sumtrees [{7 {4} {2}} {7} {4 {7}} {5 {2} {4}}]) -> [13 7 11 11]", "(sumtrees [{5 {9}} {4} {7 {8} {4}}]) -> [14 4 19]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.042805, "examples": ["(sumtrees []) -> []", "(sumtrees [{1} {} {} {6}]) -> [1 0 0 6]", "(sumtrees [{8 {1}} {} {5 {3}}]) -> [9 0 8]", "(sumtrees [{1}]) -> [1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.135735, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {1 {7} {2}} {6 {4}}]) -> [0 10 10]", "(sumtrees [{3 {7} {7}}]) -> [17]", "(sumtrees [{8 {2 {7 {3} {0}}} {2 {6 {3} {7}}}}]) -> [38]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.56613, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {1 {8} {3}}}]) -> [21]", "(sumtrees [{7 {5} {2}} {8 {7} {9}} {9} {8 {4}} {}]) -> [14 24 9 12 0]", "(sumtrees [{2 {2 {8 {5}} {0 {6}}} {4}} {} {} {7 {0} {8 {9} {9}}} {2 {4} {7}}]) -> [27 0 0 33 13]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 35.295798, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{3 {0 {4 {3} {3}} {0 {4}}} {2 {1 {4}}}}]) -> [24]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.825574, "examples": ["(sumtrees []) -> []", "(sumtrees [{9}]) -> [9]", "(sumtrees [{} {7} {} {9 {3} {2 {0}}} {}]) -> [0 7 0 14 0]", "(sumtrees [{3 {3 {1}} {6}} {8 {0 {3 {8} {4}}}} {7 {2 {0} {5}} {5}} {7 {5} {4}}]) -> [13 23 19 16]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.936549, "examples": ["(sumtrees []) -> []", "(sumtrees [{9} {9} {} {0 {6} {7}}]) -> [9 9 0 13]", "(sumtrees [{4} {} {6} {}]) -> [4 0 6 0]", "(sumtrees [{2 {3 {9}}} {} {2 {7 {7} {0}}} {8 {0 {2 {0} {4}} {5 {7}}} {5 {1 {0}} {4}}}]) -> [14 0 16 36]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.775723, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {6 {2 {0} {7}}}} {} {6}]) -> [19 0 6]", "(sumtrees []) -> []", "(sumtrees [{7 {0 {9}} {5}} {3} {6} {1 {5 {5} {5}} {0 {0 {5}} {1}}}]) -> [21 3 6 22]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.635097, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {2 {4 {2} {4 {4}}}} {}]) -> [4 16 0]", "(sumtrees [{6} {1 {9 {8 {6} {8}} {9}} {6 {3 {3}} {7}}} {}]) -> [6 60 0]", "(sumtrees [{3 {6} {0}} {8} {} {1 {8 {0} {7}}}]) -> [9 8 0 16]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.359825, "examples": ["(sumtrees []) -> []", "(sumtrees [{9} {7} {} {3 {8 {2} {6}}}]) -> [9 7 0 19]", "(sumtrees []) -> []", "(sumtrees [{1 {5 {7} {9}}}]) -> [22]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.700894, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {2 {2} {7}} {8}}]) -> [20]", "(sumtrees [{} {4 {8} {9}} {3 {9 {6 {3}}}} {9 {6 {0}} {4 {3}}} {9}]) -> [0 21 21 22 9]", "(sumtrees [{} {1} {8 {8 {6}} {6 {9}}} {3 {6 {9 {8} {0}} {0 {3}}}} {2 {2} {6}}]) -> [0 1 37 29 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 57.200437, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {9}} {} {9 {1} {4}}]) -> [17 0 14]", "(sumtrees [{} {1} {3 {6} {0}} {2 {9}} {4}]) -> [0 1 9 11 4]", "(sumtrees [{6 {8} {6}} {6} {5} {9} {5 {5}}]) -> [20 6 5 9 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.804767, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {8 {9}}]) -> [0 17]", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{} {3 {3} {4}} {4 {1 {4 {2} {1}}}} {3}]) -> [0 10 12 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 52.224638, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {9}]) -> [4 9]", "(sumtrees [{5 {4}} {8 {6 {7 {4} {9}} {0 {7}}} {9 {3 {5} {4}}}} {4 {9 {1 {8}} {3 {1}}} {9}}]) -> [9 62 35]", "(sumtrees [{1 {6 {4 {9}} {6}} {1 {9 {1} {7}} {3 {5}}}} {} {} {7}]) -> [52 0 0 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.436168, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {9 {1} {2}} {5 {3} {0}}]) -> [0 12 8]", "(sumtrees [{} {5 {1}}]) -> [0 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.564656, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {1}}]) -> [2]", "(sumtrees [{} {3} {} {}]) -> [0 3 0 0]", "(sumtrees [{1} {1 {8 {0} {6 {9}}} {2}} {9} {3 {0}} {}]) -> [1 26 9 3 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.865682, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9 {6 {3}}} {} {4} {2 {5} {8}}]) -> [0 18 0 4 15]", "(sumtrees []) -> []", "(sumtrees [{} {} {} {0}]) -> [0 0 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.003979, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{1 {1 {2 {7}} {4 {0}}} {5 {9 {8}} {8}}} {}]) -> [45 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.431385, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {1}}]) -> [7]", "(sumtrees [{6 {6 {6}}} {7 {0 {1 {0} {7}} {6}} {1 {3 {6}} {5 {0}}}}]) -> [18 36]", "(sumtrees [{2 {6 {0} {1}}} {3 {9}} {4 {2}} {5 {8 {7}} {6}} {7}]) -> [9 12 6 26 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.862552, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {8}} {}]) -> [15 0]", "(sumtrees [{2 {3 {0 {1} {7}}} {4}} {5}]) -> [17 5]", "(sumtrees [{9} {} {4 {0 {4} {0}} {5 {2} {3}}}]) -> [9 0 18]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.089677, "examples": ["(sumtrees []) -> []", "(sumtrees [{8}]) -> [8]", "(sumtrees [{0}]) -> [0]", "(sumtrees [{7 {1} {7}} {3 {0 {3}}} {3}]) -> [15 6 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.098279, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {8 {4 {7}} {1 {2}}} {5 {6 {8}} {0}} {8 {0}} {9 {6 {6} {8}} {4 {7}}}]) -> [0 22 19 8 40]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.328033, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {4} {0 {8}}}]) -> [13]", "(sumtrees [{6 {9}} {1 {6}}]) -> [15 7]", "(sumtrees [{2 {9} {1}} {2 {2} {2}} {}]) -> [12 6 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.618301, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {8 {5}} {5 {7} {9}} {0 {3}}]) -> [0 13 21 3]", "(sumtrees [{2 {9} {2}} {3 {3}} {3 {9 {0} {6}}} {3 {4 {7} {5}} {3 {6}}}]) -> [13 6 18 28]", "(sumtrees [{3 {8}}]) -> [11]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 64.673115, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {2 {2 {5} {9}}}} {} {4 {2 {1}}} {} {7 {1}}]) -> [18 0 7 0 8]", "(sumtrees [{5} {1 {3 {9} {5}} {9 {8} {0}}} {}]) -> [5 35 0]", "(sumtrees [{0 {7 {7 {7} {2}} {9 {5}}} {0 {9 {9} {4}}}} {3 {0}} {}]) -> [59 3 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 42.529485, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {2}}]) -> [2]", "(sumtrees [{} {0} {2} {7}]) -> [0 0 2 7]", "(sumtrees [{6 {0}}]) -> [6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.509243, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {2 {4}} {} {} {2 {4}}]) -> [0 6 0 0 6]", "(sumtrees [{5} {2 {4} {8 {1} {1}}} {}]) -> [5 16 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 34.666294, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {3} {}]) -> [0 3 0]", "(sumtrees [{3}]) -> [3]", "(sumtrees [{9} {2 {9} {6}} {} {} {4 {6 {8} {1}}}]) -> [9 17 0 0 19]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.257671, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {8 {2}}} {0 {6 {0 {5}}}} {1 {9}} {7 {3} {2}}]) -> [17 11 10 12]", "(sumtrees [{4 {8 {3} {4 {1} {9}}} {6 {4 {9}}}} {6} {8 {9}} {}]) -> [48 6 17 0]", "(sumtrees [{8 {2 {9}}} {4 {2} {8}} {0} {2 {0}}]) -> [19 14 0 2]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.75178, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {5 {1}} {9}} {2 {6}} {7} {7} {5}]) -> [18 8 7 7 5]", "(sumtrees [{8 {5} {0}} {} {6 {4} {5}} {5 {4 {2 {4}}}}]) -> [13 0 15 15]", "(sumtrees [{9} {6 {4}}]) -> [9 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.244668, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {6 {5} {6 {9 {0}} {3}}} {9 {6 {4 {6} {6}} {3}} {0 {1 {7}}}} {0}]) -> [0 29 42 0]", "(sumtrees [{8 {0}} {}]) -> [8 0]", "(sumtrees [{0} {} {7 {3 {2}} {5}} {0 {2} {0 {1 {0} {4}}}} {}]) -> [0 0 17 7 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.956809, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{1 {5 {5 {3} {4}}} {5 {4 {1}}}} {2 {0} {4 {6}}} {9 {6}}]) -> [28 12 15]", "(sumtrees [{1}]) -> [1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.659635, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{} {2 {8 {4} {0}}} {4} {7}]) -> [0 14 4 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 42.523463, "examples": ["(sumtrees []) -> []", "(sumtrees [{0} {7} {2 {5 {4}}} {1} {3 {3 {6 {8} {5}}}}]) -> [0 7 11 1 25]", "(sumtrees [{} {4 {3} {3 {5} {7}}} {} {} {0}]) -> [0 22 0 0 0]", "(sumtrees [{3}]) -> [3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.858412, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0 {2} {0 {9}}}]) -> [0 11]", "(sumtrees [{} {3 {5}} {4 {8}} {}]) -> [0 8 12 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.254234, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {0 {7} {7 {5 {0}}}} {8}]) -> [0 19 8]", "(sumtrees [{1 {2} {1}} {5 {8} {5}} {9 {2 {8} {4}} {0 {9} {5}}} {7 {3}}]) -> [4 18 37 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.349331, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{1} {1} {1 {3} {9}} {3 {9} {0}}]) -> [1 1 13 12]", "(sumtrees [{5 {9}}]) -> [14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.774127, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {6 {3}} {3}} {1 {6 {0} {3}} {4}} {8 {9} {2}} {8 {1 {4}}}]) -> [14 14 19 13]", "(sumtrees [{9 {0} {2}} {}]) -> [11 0]", "(sumtrees [{7} {6 {9} {8 {0 {9} {0}}}} {0 {2 {3 {9}}} {5}} {1}]) -> [7 32 19 1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.662901, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {9}} {8 {0}}]) -> [12 8]", "(sumtrees [{0 {1 {5}}} {2 {7 {6}}}]) -> [6 15]", "(sumtrees [{8} {}]) -> [8 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 41.641647, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{8}]) -> [8]", "(sumtrees [{3 {7 {1 {3} {8}}} {2}}]) -> [24]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.494344, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {3 {4}}} {7}]) -> [15 7]", "(sumtrees [{3 {8}} {1} {2 {2 {2}} {1 {8 {9} {0}} {6 {1}}}} {5} {}]) -> [11 1 31 5 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.096868, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {7} {1}}]) -> [10]", "(sumtrees [{7 {0} {6 {7 {1}} {2}}} {9} {8}]) -> [23 9 8]", "(sumtrees [{5 {5} {1}} {} {4 {6 {0} {8}}} {2 {8 {8 {5} {5}}}}]) -> [11 0 18 28]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.305274, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0 {4 {3 {0} {8}}}} {6 {1} {0}} {}]) -> [0 15 7 0]", "(sumtrees []) -> []", "(sumtrees [{} {} {4 {3} {3 {1 {2} {2}} {6 {5}}}} {2} {}]) -> [0 0 26 2 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.011936, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{6 {4 {5}}} {3 {2 {7} {0}} {3 {8}}} {2 {4 {8 {8} {7}} {0 {8}}} {7 {4 {1}}}} {} {}]) -> [15 23 49 0 0]", "(sumtrees [{1 {2}} {} {} {3} {2}]) -> [3 0 0 3 2]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 46.407104, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {9 {8} {7}}} {} {}]) -> [30 0 0]", "(sumtrees [{9} {}]) -> [9 0]", "(sumtrees [{} {0 {2 {5}} {1 {8}}} {4 {1}} {}]) -> [0 16 5 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 46.300418, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {6} {0}} {5} {9} {1}]) -> [7 5 9 1]", "(sumtrees [{7 {2 {4} {0}} {7 {5}}}]) -> [25]", "(sumtrees [{} {2 {6} {0}} {} {} {}]) -> [0 8 0 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.331875, "examples": ["(sumtrees []) -> []", "(sumtrees [{5 {6 {4}} {0 {8} {6}}}]) -> [29]", "(sumtrees [{0} {} {} {1}]) -> [0 0 0 1]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g g)) d)) 0)))) _) _)", "name": "sumtrees", "time": 33.267269, "examples": ["(sumtrees []) -> []", "(sumtrees [{6} {} {} {4}]) -> [6 0 0 4]", "(sumtrees [{6 {5} {0 {4} {9}}} {} {} {2}]) -> [24 0 0 2]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 57.208612, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {4} {5} {}]) -> [4 4 5 0]", "(sumtrees [{9 {4 {9 {1}}}} {1} {4 {7} {2 {1} {5 {7}}}}]) -> [23 1 26]", "(sumtrees [{8 {2 {3} {1}}} {} {}]) -> [14 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d d)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.900393, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {7}}]) -> [14]", "(sumtrees [{}]) -> [0]", "(sumtrees [{2}]) -> [2]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 43.013666, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {2 {4 {2 {8}} {6}} {7 {7} {4}}}]) -> [0 0 40]", "(sumtrees [{0 {0 {5 {9}} {6}}}]) -> [20]", "(sumtrees [{1 {8}} {} {2} {4} {5 {7}}]) -> [9 0 2 4 12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "name": "sumtrees", "time": 0.037309, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees []) -> []", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.240136, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {8 {9}} {7 {6} {2}}} {6} {9 {3 {7 {7} {1}}}}]) -> [36 6 27]", "(sumtrees [{1}]) -> [1]", "(sumtrees [{} {4 {7}} {5} {}]) -> [0 11 5 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.232447, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {7 {4 {6}}}]) -> [0 17]", "(sumtrees [{} {5 {5 {6} {7 {7} {2}}} {9 {8 {7}}}} {}]) -> [0 56 0]", "(sumtrees [{6 {7 {8} {3 {9} {1}}} {2 {7 {7} {1}} {1 {0} {9}}}} {4 {4}} {6} {3 {6}}]) -> [61 8 6 9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 43.450079, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {5 {2}} {} {9}]) -> [0 7 0 9]", "(sumtrees [{9 {0 {4} {8}} {7 {6}}}]) -> [34]", "(sumtrees [{} {6} {3} {6 {7}}]) -> [0 6 3 13]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.744728, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {9}}]) -> [15]", "(sumtrees [{9 {2} {5}}]) -> [16]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.744349, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {4}} {7} {2 {0 {6}} {4}} {0}]) -> [13 7 12 0]", "(sumtrees [{8}]) -> [8]", "(sumtrees [{} {1 {4}} {}]) -> [0 5 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 33.448649, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{2 {0}}]) -> [2]", "(sumtrees [{} {8 {1 {1}} {6}} {5 {1}} {5 {0 {3} {4}}}]) -> [0 16 6 12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 42.284286, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {8}]) -> [0 8]", "(sumtrees [{} {} {2 {4 {2} {7}}} {4 {4 {8}} {2}} {}]) -> [0 0 15 18 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.955722, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {0} {3 {5 {7}} {3 {6}}}} {9 {9 {1}} {3 {4}}}]) -> [24 26]", "(sumtrees [{2 {3} {8}} {}]) -> [13 0]", "(sumtrees [{4 {7 {5}}} {0} {7 {3 {2 {5} {1}} {0 {4}}} {1 {2 {3} {9}} {8}}} {9 {9 {8 {6}} {1}}} {7 {3}}]) -> [16 0 45 33 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.850693, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{4} {5} {}]) -> [4 5 0]", "(sumtrees [{1} {6 {3 {5} {2}} {4 {6}}} {7 {0 {5} {5}}} {1}]) -> [1 26 17 1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 55.459099, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {1 {4 {7} {8}}}} {2 {9 {3 {7} {2}}}} {6 {0}} {6} {9 {3}}]) -> [20 23 6 6 12]", "(sumtrees [{} {} {}]) -> [0 0 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 52.255575, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{0 {2} {5}} {4} {6 {0 {8 {7}}}}]) -> [7 4 21]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.807196, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{2 {1} {2}} {} {0}]) -> [5 0 0]", "(sumtrees [{} {8 {0} {3}}]) -> [0 11]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.722343, "examples": ["(sumtrees []) -> []", "(sumtrees [{9} {0 {1 {6}}} {9 {2 {3} {5 {9} {6}}} {1 {2 {4} {4}}}} {}]) -> [9 7 45 0]", "(sumtrees [{3 {0}} {7 {6 {4 {8}} {5 {9} {9}}}} {3} {}]) -> [3 48 3 0]", "(sumtrees [{7 {1}} {0 {1}} {1 {5 {8 {4} {5}}} {6}} {7} {0 {3} {7 {8} {2}}}]) -> [8 1 29 7 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.41931, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {3} {5 {6 {5} {3}} {5}}} {9 {0 {3 {6} {7}}}} {7 {1} {2}} {4 {7} {6}} {2}]) -> [28 25 10 17 2]", "(sumtrees [{8 {9}} {5} {1} {3 {7 {8}} {9}}]) -> [17 5 1 27]", "(sumtrees [{1} {0} {2 {1}}]) -> [1 0 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 33.286199, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {1 {0}}} {5 {2} {9}} {1 {5}} {} {6 {8}}]) -> [1 16 6 0 14]", "(sumtrees [{6 {4 {6}}} {} {} {}]) -> [16 0 0 0]", "(sumtrees []) -> []"]}
