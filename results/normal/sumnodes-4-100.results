{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) 1))) _) _)", "time": 0.025864, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[1]}) -> {1}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.242823, "name": "sumnodes", "examples": ["(sumnodes {[] {[3 4 4] {[1 2 2 0 6]}} {[2 6 7 5 7] {[0] {[6 6 1]} {[7]}} {[0 5] {[3 2 0 1]}}}}) -> {0 {11 {11}} {27 {0 {13} {7}} {5 {6}}}}", "(sumnodes {[6 1] {[]} {[0 2 5 2]}}) -> {7 {0} {9}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.233869, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[9 9 0] {[]}}) -> {18 {0}}", "(sumnodes {[1 2]}) -> {3}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.293696, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[9 0] {[3 8] {[6 4 0]}} {[] {[0 2]}}}) -> {9 {11 {10}} {0 {2}}}", "(sumnodes {[] {[0 6]} {[4 3]}}) -> {0 {6} {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.26717, "name": "sumnodes", "examples": ["(sumnodes {[2 0 0 8] {[2 7 3] {[6 5 5 8]} {[2 6]}} {[] {[]}}}) -> {10 {12 {24} {8}} {0 {0}}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[2 1 2 5]}}) -> {0 {10}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.295354, "name": "sumnodes", "examples": ["(sumnodes {[0] {[] {[4 7 8 5]}} {[] {[4 9]}}}) -> {0 {0 {24}} {0 {13}}}", "(sumnodes {[] {[7 4] {[]} {[1 1 8 1 3]}}}) -> {0 {11 {0} {14}}}", "(sumnodes {[] {[6]} {[8 5 7 3]}}) -> {0 {6} {23}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.308367, "name": "sumnodes", "examples": ["(sumnodes {[4 9 9] {[0 0 7 7 7] {[6 9]}} {[4 3 5] {[7 2 3 8]}}}) -> {22 {21 {15}} {12 {20}}}", "(sumnodes {[2 1 9 9 4] {[] {[3 2 2] {[0 8 3 0 9]}}} {[5 0 8 4 0] {[8 5 3] {[7]}}}}) -> {25 {0 {7 {20}}} {17 {16 {7}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.322761, "name": "sumnodes", "examples": ["(sumnodes {[1] {[6 3 9] {[]} {[2]}}}) -> {1 {18 {0} {2}}}", "(sumnodes {[0 2 6 4]}) -> {12}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.333734, "name": "sumnodes", "examples": ["(sumnodes {[7 9 9] {[6 3]}}) -> {25 {9}}", "(sumnodes {[] {[3 3 9] {[]} {[]}} {[6 5 5 7 5] {[4 7 9]} {[5 8]}}}) -> {0 {15 {0} {0}} {28 {20} {13}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.360506, "name": "sumnodes", "examples": ["(sumnodes {[] {[3 8] {[7 8 3 9 8]} {[6 1 0 8]}}}) -> {0 {11 {35} {15}}}", "(sumnodes {[9 9 3]}) -> {21}", "(sumnodes {[] {[]}}) -> {0 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.43548, "name": "sumnodes", "examples": ["(sumnodes {[2 4 2] {[6 7 2 2]} {[4]}}) -> {8 {17} {4}}", "(sumnodes {[5] {[2 3 9]}}) -> {5 {14}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.388468, "name": "sumnodes", "examples": ["(sumnodes {[9 4 4 6 3] {[0 2 3]}}) -> {26 {5}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[] {[] {[1 1 4]} {[5 5 0 3]}}}) -> {0 {0 {6} {13}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.4675, "name": "sumnodes", "examples": ["(sumnodes {[7 8]}) -> {15}", "(sumnodes {[2]}) -> {2}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.5036, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3] {[4 8 5]}}) -> {3 {17}}", "(sumnodes {[9 3 4 2]}) -> {18}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.412798, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 4] {[5 9 6]}}) -> {8 {20}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) 0))) _) _)", "time": 0.027805, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0]}) -> {0}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.51599, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 6 6 6]}) -> {20}", "(sumnodes {[8 7 5] {[0 4]} {[2 2 7 1] {[6 2]}}}) -> {20 {4} {12 {8}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.307713, "name": "sumnodes", "examples": ["(sumnodes {[7] {[]}}) -> {7 {0}}", "(sumnodes {[] {[9 5 7 1] {[7 2 3 2 0]}}}) -> {0 {22 {14}}}", "(sumnodes {[6 5] {[5 2 9 5 6]} {[4] {[6 1 1] {[0]} {[1 4 3]}}}}) -> {11 {27} {4 {8 {0} {8}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000511, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.269535, "name": "sumnodes", "examples": ["(sumnodes {[] {[5 1 0 3]} {[8 5 9 0 3] {[1] {[]} {[8 9 4 1 9]}} {[8 4 1 0 9] {[3 8]} {[3 8 6 9 9]}}}}) -> {0 {9} {25 {1 {0} {31}} {22 {11} {35}}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.232765, "name": "sumnodes", "examples": ["(sumnodes {[5 1 5 2 3] {[7 8 8 1 0]}}) -> {16 {24}}", "(sumnodes {[0 5 6 9 2] {[2 7 6 3 9] {[3 4 0 4]}} {[5 4 0] {[6 5 7 1]} {[3 0]}}}) -> {22 {27 {11}} {9 {19} {3}}}", "(sumnodes {[3 8 1] {[]} {[5 6] {[]}}}) -> {12 {0} {11 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.268452, "name": "sumnodes", "examples": ["(sumnodes {[4 1] {[9] {[0 2 0 5 7]} {[8 4 4 4]}} {[]}}) -> {5 {9 {14} {20}} {0}}", "(sumnodes {[5]}) -> {5}", "(sumnodes {[4 9]}) -> {13}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.285406, "name": "sumnodes", "examples": ["(sumnodes {[3 7 6] {[5 3 0 9 1]}}) -> {16 {18}}", "(sumnodes {[4 5 5 8] {[5 0 3 8 3] {[8 2]}} {[7 1 2 8] {[4]} {[0]}}}) -> {22 {19 {10}} {18 {4} {0}}}", "(sumnodes {[] {[]} {[1 4]}}) -> {0 {0} {5}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.198092, "name": "sumnodes", "examples": ["(sumnodes {[0 4 8] {[3 4 0 5]} {[] {[7 7 6] {[2 0 2 9 6]}} {[8 3 7 0] {[5 4 0 9 1]} {[]}}}}) -> {12 {12} {0 {20 {19}} {18 {19} {0}}}}", "(sumnodes {}) -> {}", "(sumnodes {[7 4 0]}) -> {11}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.341817, "name": "sumnodes", "examples": ["(sumnodes {[9 1 0 1] {[9 1]} {[3 3 9] {[9 8 4]} {[8]}}}) -> {11 {10} {15 {21} {8}}}", "(sumnodes {[] {[]}}) -> {0 {0}}", "(sumnodes {[7 6] {[7 6 0]}}) -> {13 {13}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.356809, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[7 5 3]}) -> {15}", "(sumnodes {[4 8 0 3 2] {[3 2 8] {[5 0 9 5 1]} {[6 3 6 9 6]}} {[8 0 1] {[8 3 4]}}}) -> {17 {13 {20} {30}} {9 {15}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.203713, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 9 8 4 3] {[5 5 3 1 7]} {[4] {[5 6]}}}) -> {26 {21} {4 {11}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.355186, "name": "sumnodes", "examples": ["(sumnodes {[7 0 0 9 5] {[3 7 3 0 2]}}) -> {21 {15}}", "(sumnodes {[3 6 6 2] {[3 6 1 8 2]} {[7 5 4 1 1]}}) -> {17 {20} {18}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.670313, "name": "sumnodes", "examples": ["(sumnodes {[1 8 9 6 9] {[2 1] {[7 4 0]} {[9 8 9 7]}} {[2 4 9] {[3 2]}}}) -> {33 {3 {11} {33}} {15 {5}}}", "(sumnodes {[6 8] {[9]}}) -> {14 {9}}", "(sumnodes {[7 6 6] {[0 5]}}) -> {19 {5}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.454094, "name": "sumnodes", "examples": ["(sumnodes {[4 7 1 1 5] {[1]} {[] {[9]}}}) -> {18 {1} {0 {9}}}", "(sumnodes {[2 9 1 9]}) -> {21}", "(sumnodes {[5 6 7] {[] {[6 9 8 9 7] {[7 5 4 5 4]}}}}) -> {18 {0 {39 {25}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.486573, "name": "sumnodes", "examples": ["(sumnodes {[7]}) -> {7}", "(sumnodes {[8 2] {[3]} {[3 6 5 7]}}) -> {10 {3} {21}}", "(sumnodes {[0] {[1 2 6 6]} {[] {[] {[9]} {[6 1]}}}}) -> {0 {15} {0 {0 {9} {7}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.709266, "name": "sumnodes", "examples": ["(sumnodes {[6 9 8 1] {[8 3 4 2 2]} {[3 8]}}) -> {24 {19} {11}}", "(sumnodes {[8 2 2 4]}) -> {16}", "(sumnodes {[9 8 5 5]}) -> {27}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.490767, "name": "sumnodes", "examples": ["(sumnodes {[6 6 2 7 3] {[2 3 4 8 5]} {[0]}}) -> {24 {22} {0}}", "(sumnodes {[] {[6 7 3 6 0]} {[] {[3 1]} {[6 6 4]}}}) -> {0 {22} {0 {4} {16}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.611603, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 0 4]}) -> {6}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.354191, "name": "sumnodes", "examples": ["(sumnodes {[8 3 4 0 3] {[8 2 7] {[]} {[0 6 4 2 1]}}}) -> {18 {17 {0} {13}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.481113, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 9 8 3]}) -> {28}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.470478, "name": "sumnodes", "examples": ["(sumnodes {[3 8 5 2 2] {[]}}) -> {20 {0}}", "(sumnodes {[9]}) -> {9}", "(sumnodes {[0 8 0 2]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.207895, "name": "sumnodes", "examples": ["(sumnodes {[] {[]} {[]}}) -> {0 {0} {0}}", "(sumnodes {[1 0 8 1 4] {[9] {[1 7 9]}} {[5 2 9 0 3] {[6]}}}) -> {14 {9 {17}} {19 {6}}}", "(sumnodes {[0] {[6 4 2 5 0] {[2 0 8 6] {[]} {[7 2 7]}} {[0] {[7]} {[2]}}}}) -> {0 {17 {16 {0} {16}} {0 {7} {2}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.335532, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[4 6]} {[3 7 3 4 5]}}) -> {0 {10} {22}}", "(sumnodes {[] {[2 8]} {[6 2 6 7 7]}}) -> {0 {10} {28}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.384102, "name": "sumnodes", "examples": ["(sumnodes {[] {[5 7 0 5]} {[] {[]}}}) -> {0 {17} {0 {0}}}", "(sumnodes {[8]}) -> {8}", "(sumnodes {[2 5] {[3 5 4]} {[0]}}) -> {7 {12} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.202454, "name": "sumnodes", "examples": ["(sumnodes {[] {[] {[6 4 5]} {[0 5 6]}}}) -> {0 {0 {15} {11}}}", "(sumnodes {[] {[4 4 3 7 5]}}) -> {0 {23}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.577002, "name": "sumnodes", "examples": ["(sumnodes {[0 1 1]}) -> {2}", "(sumnodes {}) -> {}", "(sumnodes {[7 5 8 2 9] {[3]}}) -> {31 {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.362217, "name": "sumnodes", "examples": ["(sumnodes {[6 6] {[4 7]}}) -> {12 {11}}", "(sumnodes {[3] {[9 0] {[7 2]}} {[9 0 6 3] {[2 6 4 1 2]}}}) -> {3 {9 {9}} {18 {15}}}", "(sumnodes {[2 8 8 3] {[0 2 2 7]}}) -> {21 {11}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.732631, "name": "sumnodes", "examples": ["(sumnodes {[9 3 0]}) -> {12}", "(sumnodes {[8 4] {[2]} {[5 7]}}) -> {12 {2} {12}}", "(sumnodes {[5 0 5] {[7]} {[7]}}) -> {10 {7} {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.425766, "name": "sumnodes", "examples": ["(sumnodes {[2] {[8 5 3 4 4]} {[1 9 8] {[5 8 2 5 7]}}}) -> {2 {24} {18 {27}}}", "(sumnodes {[7 0 1 4] {[5 8 6]}}) -> {12 {19}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.291885, "name": "sumnodes", "examples": ["(sumnodes {[5 7 7 7 9] {[6 8]}}) -> {35 {14}}", "(sumnodes {}) -> {}", "(sumnodes {[1 1 9 2] {[1 2]} {[4 9 6 9 6]}}) -> {13 {3} {34}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.24796, "name": "sumnodes", "examples": ["(sumnodes {[] {[1 2 6]} {[1 4 2 0]}}) -> {0 {9} {7}}", "(sumnodes {[3 3 0 1] {[4] {[3]}}}) -> {7 {4 {3}}}", "(sumnodes {[7 3 0]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.223903, "name": "sumnodes", "examples": ["(sumnodes {[9]}) -> {9}", "(sumnodes {[2] {[5 6 5 5 7] {[0 6 6] {[]} {[3 4 5 1 5]}} {[8 4]}} {[]}}) -> {2 {28 {12 {0} {18}} {12}} {0}}", "(sumnodes {[6 4 3] {[9]} {[9 2 0 0 0]}}) -> {13 {9} {11}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.193777, "name": "sumnodes", "examples": ["(sumnodes {[] {[3 2]} {[6 7]}}) -> {0 {5} {13}}", "(sumnodes {[7]}) -> {7}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.287938, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[3 7 4 3] {[4 1 9]} {[0 6 9]}}) -> {17 {14} {15}}", "(sumnodes {[] {[1 1 4 9]} {[6 3 8] {[7 9 5 4]} {[]}}}) -> {0 {15} {17 {25} {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.415324, "name": "sumnodes", "examples": ["(sumnodes {[9 2 8 2]}) -> {21}", "(sumnodes {}) -> {}", "(sumnodes {[2 8 4 7 4]}) -> {25}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.494512, "name": "sumnodes", "examples": ["(sumnodes {[1 5 3 9 3]}) -> {21}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.204301, "name": "sumnodes", "examples": ["(sumnodes {[1 8 6 1] {[0 6]}}) -> {16 {6}}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.614489, "name": "sumnodes", "examples": ["(sumnodes {[8]}) -> {8}", "(sumnodes {[7 2 0]}) -> {9}", "(sumnodes {[4 9 4 3]}) -> {20}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.540707, "name": "sumnodes", "examples": ["(sumnodes {[6 7] {[1 7]}}) -> {13 {8}}", "(sumnodes {}) -> {}", "(sumnodes {[3 5 9 8] {[2 3 4 1] {[1 9 8 6 4] {[2 1 2]}}}}) -> {25 {10 {28 {5}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.287118, "name": "sumnodes", "examples": ["(sumnodes {[5] {[1 2 7]}}) -> {5 {10}}", "(sumnodes {}) -> {}", "(sumnodes {[9 9] {[6 1 9 1]}}) -> {18 {17}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.285173, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 8 4 8] {[9 4]}}) -> {20 {13}}", "(sumnodes {[5 4 2 5 6] {[6] {[8 7 5]}} {[] {[]} {[6 4 0 7 7]}}}) -> {22 {6 {20}} {0 {0} {24}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.264314, "name": "sumnodes", "examples": ["(sumnodes {[7 9 3 1] {[4] {[0 5 8 3 4] {[1 4 8]}} {[] {[1 8 3 2 0]} {[6 5 5 7 0]}}} {[5 7] {[0]} {[2] {[1 6]} {[7 8 3]}}}}) -> {20 {4 {20 {13}} {0 {14} {23}}} {12 {0} {2 {7} {18}}}}", "(sumnodes {[8] {[5 0 6]} {[0 1 1]}}) -> {8 {11} {2}}", "(sumnodes {[] {[9 9 8 0 9]}}) -> {0 {35}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.209207, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[6 6 1 1]}}) -> {0 {14}}", "(sumnodes {[2 9 4]}) -> {15}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.223796, "name": "sumnodes", "examples": ["(sumnodes {[] {[9 7]}}) -> {0 {16}}", "(sumnodes {[0] {[5 7 5]} {[5 0 0 6]}}) -> {0 {17} {11}}", "(sumnodes {[1 2 9] {[6 1 1 4 7] {[8 2 3 4 0] {[8 0]}}} {[] {[4 3] {[]}} {[]}}}) -> {12 {19 {17 {8}}} {0 {7 {0}} {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.223692, "name": "sumnodes", "examples": ["(sumnodes {[3 7] {[5 4 8 9 6]}}) -> {10 {32}}", "(sumnodes {[] {[3] {[1 1]}}}) -> {0 {3 {2}}}", "(sumnodes {[2 4 9 6 4] {[7 6 3]} {[3 1 5]}}) -> {25 {16} {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.32941, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 7 2] {[7 7 0]} {[6]}}) -> {9 {14} {6}}", "(sumnodes {[7 4] {[8 1 4]}}) -> {11 {13}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.20894, "name": "sumnodes", "examples": ["(sumnodes {[5 9 0 5 1] {[7]} {[]}}) -> {20 {7} {0}}", "(sumnodes {[] {[8]} {[4 6 1] {[1]}}}) -> {0 {8} {11 {1}}}", "(sumnodes {[2 3 6] {[4 0 9 6 1]}}) -> {11 {20}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.319206, "name": "sumnodes", "examples": ["(sumnodes {[0 6 7 8 8] {[]}}) -> {29 {0}}", "(sumnodes {[7 1 6 0]}) -> {14}", "(sumnodes {[1]}) -> {1}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.35257, "name": "sumnodes", "examples": ["(sumnodes {[7 3 7 1] {[] {[4 3 7] {[5 2 8 2]} {[0 0 3 3]}}} {[2 6]}}) -> {18 {0 {14 {17} {6}}} {8}}", "(sumnodes {[] {[6 6]}}) -> {0 {12}}", "(sumnodes {[] {[2 5]}}) -> {0 {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.187653, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 0 4 0 8]}) -> {20}", "(sumnodes {[5 9] {[1 9]} {[7 5 1] {[]} {[8]}}}) -> {14 {10} {13 {0} {8}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.446846, "name": "sumnodes", "examples": ["(sumnodes {[1 9 2]}) -> {12}", "(sumnodes {}) -> {}", "(sumnodes {[2 8 8 5] {[8 6 4 9 6]} {[0 3 6 6]}}) -> {23 {33} {15}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.365885, "name": "sumnodes", "examples": ["(sumnodes {[5 4 2 8] {[3 0 0 8 3] {[] {[]}} {[4 4]}} {[1 6 5 5] {[0 8 4]}}}) -> {19 {14 {0 {0}} {8}} {17 {12}}}", "(sumnodes {[4 4 1 7 9]}) -> {25}", "(sumnodes {[9] {[4 2 9 6 9]}}) -> {9 {30}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.303359, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 3] {[0 0 2 9 4] {[6 4 9]}}}) -> {10 {15 {19}}}", "(sumnodes {[] {[]}}) -> {0 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.353663, "name": "sumnodes", "examples": ["(sumnodes {[8 2 7] {[9 9 3] {[1]} {[4 0 0 9 9]}}}) -> {17 {21 {1} {22}}}", "(sumnodes {[4 4 7]}) -> {15}", "(sumnodes {[4 6 3 5] {[4 4]}}) -> {18 {8}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.245587, "name": "sumnodes", "examples": ["(sumnodes {[1 9 1]}) -> {11}", "(sumnodes {[] {[0 8 8] {[]} {[7 7 7 8]}}}) -> {0 {16 {0} {29}}}", "(sumnodes {[6 0 8 0 1]}) -> {15}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.249499, "name": "sumnodes", "examples": ["(sumnodes {[7] {[] {[0 4] {[2 3 6 0 5]} {[5 4 0]}}} {[]}}) -> {7 {0 {4 {16} {9}}} {0}}", "(sumnodes {}) -> {}", "(sumnodes {[9 2]}) -> {11}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.280284, "name": "sumnodes", "examples": ["(sumnodes {[] {[7 5 9 8] {[2 6 6 7] {[0]}} {[6]}}}) -> {0 {29 {21 {0}} {6}}}", "(sumnodes {[7] {[7]} {[5 3 9 8 9] {[]} {[3 7 0 3]}}}) -> {7 {7} {34 {0} {13}}}", "(sumnodes {[3 3 7 0] {[1]}}) -> {13 {1}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.520868, "name": "sumnodes", "examples": ["(sumnodes {[8 4 6]}) -> {18}", "(sumnodes {[4 5 0] {[9 6] {[7 8 8 2 1]}} {[9 4 5 9] {[3 3 3] {[3 9 7 5 4]}} {[1 5 0 5 3] {[2 7 8 3 7]} {[1 7]}}}}) -> {9 {15 {26}} {27 {9 {28}} {14 {27} {8}}}}", "(sumnodes {[9 3] {[6 9 6]}}) -> {12 {21}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.188452, "name": "sumnodes", "examples": ["(sumnodes {[7 8]}) -> {15}", "(sumnodes {[7 8]}) -> {15}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.295013, "name": "sumnodes", "examples": ["(sumnodes {[5 4 3 1 6]}) -> {19}", "(sumnodes {[5]}) -> {5}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.454013, "name": "sumnodes", "examples": ["(sumnodes {[7]}) -> {7}", "(sumnodes {[9 6 1]}) -> {16}", "(sumnodes {[4] {[9 2 7 4]} {[5 6 9 0 8] {[6 1 9]}}}) -> {4 {22} {28 {16}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.321682, "name": "sumnodes", "examples": ["(sumnodes {[9] {[9 0 4] {[8 7 8 4 9]} {[9 3]}}}) -> {9 {13 {36} {12}}}", "(sumnodes {}) -> {}", "(sumnodes {[7 3 2] {[5 4 7 7 5]} {[8 2 3 2 3]}}) -> {12 {28} {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.233807, "name": "sumnodes", "examples": ["(sumnodes {[8]}) -> {8}", "(sumnodes {[1 1]}) -> {2}", "(sumnodes {[2 7 9 7] {[9 0 9 2 8] {[]}}}) -> {25 {28 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.263578, "name": "sumnodes", "examples": ["(sumnodes {[3]}) -> {3}", "(sumnodes {[] {[8 4 8 1 5]}}) -> {0 {26}}", "(sumnodes {[0 1 2 5]}) -> {8}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.225598, "name": "sumnodes", "examples": ["(sumnodes {[6 8 6] {[2 5] {[6 9 5 8] {[9 4]} {[1 5]}} {[5 8 1 0]}} {[] {[]}}}) -> {20 {7 {28 {13} {6}} {14}} {0 {0}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.252255, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}", "(sumnodes {[3] {[4 3 4 1 9] {[7 2]} {[3 2]}}}) -> {3 {21 {9} {5}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.294515, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[7 3 1] {[3 2 9 7] {[3 8 6 2 0]} {[3]}} {[0 5 2 5] {[]}}}) -> {11 {21 {19} {3}} {12 {0}}}", "(sumnodes {[6]}) -> {6}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.319061, "name": "sumnodes", "examples": ["(sumnodes {[4 1 8 3]}) -> {16}", "(sumnodes {}) -> {}", "(sumnodes {[2 6 7 6] {[1 2]}}) -> {21 {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.401353, "name": "sumnodes", "examples": ["(sumnodes {[3 1 8 0]}) -> {12}", "(sumnodes {[2 4 2 4] {[3]}}) -> {12 {3}}", "(sumnodes {[5 9 6 6]}) -> {26}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.326861, "name": "sumnodes", "examples": ["(sumnodes {[0 7 5 5] {[3 9]} {[7 4] {[2 8] {[7 6 0 2 6]} {[1 5 7 9 9]}} {[7 0 6] {[1 4 1 0 5]}}}}) -> {17 {12} {11 {10 {21} {31}} {13 {11}}}}", "(sumnodes {[9] {[] {[0 7 0 8]}}}) -> {9 {0 {15}}}", "(sumnodes {[4 4 3 1]}) -> {12}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.364207, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0 7 8 7]}) -> {22}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.236964, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[2 8 9] {[]}}) -> {19 {0}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.365724, "name": "sumnodes", "examples": ["(sumnodes {[7 2 8 0] {[1 9 7 1 1] {[6 4 8 1 6]} {[1 2]}}}) -> {17 {19 {25} {3}}}", "(sumnodes {}) -> {}", "(sumnodes {[6 1 9 8]}) -> {24}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.320184, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 5]}) -> {5}", "(sumnodes {[3 6 0] {[2 2 3 8]} {[7]}}) -> {9 {15} {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.323972, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 2 2 5] {[4 1 8] {[0 3 8 5]} {[2 4 8]}}}) -> {13 {13 {16} {14}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.251622, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[6 0 3 9 5]}) -> {23}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.27512, "name": "sumnodes", "examples": ["(sumnodes {[6 8] {[2]} {[1]}}) -> {14 {2} {1}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.290704, "name": "sumnodes", "examples": ["(sumnodes {[4 8 3 3 4]}) -> {22}", "(sumnodes {}) -> {}", "(sumnodes {[7 1 6 2 4]}) -> {20}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.173251, "name": "sumnodes", "examples": ["(sumnodes {[7 2 2 8] {[3] {[0 5 0]} {[4 2 1 7]}}}) -> {19 {3 {5} {14}}}", "(sumnodes {[8 7 3] {[]} {[9 4 5 7]}}) -> {18 {0} {25}}", "(sumnodes {[5]}) -> {5}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.150399, "name": "sumnodes", "examples": ["(sumnodes {[1 5 1 3 5] {[] {[9 3 2 7] {[1 9 9]} {[4 7 9]}} {[3]}}}) -> {15 {0 {21 {19} {20}} {3}}}", "(sumnodes {[6 9 1 6] {[0 2 7] {[5 1]} {[] {[3 2 0]}}} {[6] {[4 7 3] {[4 3 2]} {[4]}}}}) -> {22 {9 {6} {0 {5}}} {6 {14 {9} {4}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.093846, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[9 5 5 8] {[]} {[3 8 5]}}) -> {27 {0} {16}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.197811, "name": "sumnodes", "examples": ["(sumnodes {[2 2] {[7 6 1]}}) -> {4 {14}}", "(sumnodes {[6 7 7]}) -> {20}", "(sumnodes {[5 1 2 3 4] {[4]}}) -> {15 {4}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.192973, "name": "sumnodes", "examples": ["(sumnodes {[9 0 1]}) -> {10}", "(sumnodes {[5 6 6] {[7 5 9 2]} {[0 7]}}) -> {17 {23} {7}}", "(sumnodes {[0 4] {[7 0 6 2 6] {[8]} {[5] {[7]}}}}) -> {4 {21 {8} {5 {7}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.217858, "name": "sumnodes", "examples": ["(sumnodes {[1 4 1 0] {[4 6 9] {[7 4 9]}}}) -> {6 {19 {20}}}", "(sumnodes {[7 6] {[8 9] {[7 4 7 6 8]} {[9 8 9 1 6]}} {[6 8 2] {[5]}}}) -> {13 {17 {32} {33}} {16 {5}}}", "(sumnodes {[6 7] {[5 1]}}) -> {13 {6}}"]}
