{"time": 0.000532, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [0]) -> [0]", "(multfirst [1]) -> [1]"]}
{"time": 0.00063, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"]}
{"time": 0.022906, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 7]) -> [0 0]", "(multfirst [1]) -> [1]"]}
{"time": 0.033951, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 1 3 1]) -> [5 5 5 5]", "(multfirst [6]) -> [6]"]}
{"time": 0.026652, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 9 2 2]) -> [8 8 8 8]", "(multfirst [4]) -> [4]"]}
{"time": 0.024211, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4]) -> [4]", "(multfirst [6 2]) -> [6 6]"]}
{"time": 0.000603, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"]}
{"time": 0.02346, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 9 2 9]) -> [2 2 2 2]", "(multfirst []) -> []"]}
{"time": 0.032686, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 4]) -> [9 9]", "(multfirst [8]) -> [8]"]}
{"time": 0.033643, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [9 1 3 6]) -> [9 9 9 9]"]}
{"time": 0.023998, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 9 4 0]) -> [6 6 6 6]", "(multfirst [4 2 5 4 1]) -> [4 4 4 4 4]"]}
{"time": 0.034134, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [8 3 3 7]) -> [8 8 8 8]"]}
{"time": 0.035127, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [2 6 3 1 7]) -> [2 2 2 2 2]"]}
{"time": 0.035113, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 8 3 4 8]) -> [2 2 2 2 2]", "(multfirst []) -> []"]}
{"time": 0.024965, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 2 7 8]) -> [0 0 0 0]", "(multfirst [7 1 7 1 8]) -> [7 7 7 7 7]"]}
{"time": 0.036008, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "examples": ["(multfirst [0 2]) -> [0 0]", "(multfirst []) -> []"]}
{"time": 0.021859, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 3 6 5]) -> [7 7 7 7]", "(multfirst [1 3 8 9 9]) -> [1 1 1 1 1]"]}
{"time": 0.000426, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [1]) -> [1]", "(multfirst [5]) -> [5]"]}
{"time": 0.021802, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 7]) -> [2 2]", "(multfirst [0 6 7 6]) -> [0 0 0 0]"]}
{"time": 0.031462, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6]) -> [6]", "(multfirst [1 2 2 5 7]) -> [1 1 1 1 1]"]}
{"time": 0.034841, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 3 8 2 0]) -> [9 9 9 9 9]", "(multfirst []) -> []"]}
{"time": 0.026009, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 8 1 0 5]) -> [3 3 3 3 3]", "(multfirst [5]) -> [5]"]}
{"time": 0.03152, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1 4 0 0 0]) -> [1 1 1 1 1]", "(multfirst [7]) -> [7]"]}
{"time": 0.000409, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [0]) -> [0]"]}
{"time": 0.026278, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1 2]) -> [1 1]", "(multfirst [0]) -> [0]"]}
{"time": 0.038089, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5]) -> [5]", "(multfirst [6 5 1 4]) -> [6 6 6 6]"]}
{"time": 0.030382, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3]) -> [3]", "(multfirst [2 8 5 7 0]) -> [2 2 2 2 2]"]}
{"time": 0.028351, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 3 8 3]) -> [8 8 8 8]", "(multfirst []) -> []"]}
{"time": 0.029036, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1 3]) -> [1 1]", "(multfirst [2 1]) -> [2 2]"]}
{"time": 0.036504, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 2 9 9 5]) -> [6 6 6 6 6]", "(multfirst [4]) -> [4]"]}
{"time": 0.036453, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1]) -> [1]", "(multfirst [0 6]) -> [0 0]"]}
{"time": 0.026847, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 7 0 7]) -> [0 0 0 0]", "(multfirst [5 9 6]) -> [5 5 5]"]}
{"time": 0.031426, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 0]) -> [2 2]", "(multfirst [5 8 8]) -> [5 5 5]"]}
{"time": 0.02936, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 0 6 0]) -> [2 2 2 2]", "(multfirst [3 4]) -> [3 3]"]}
{"time": 0.033498, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 7 8 7 6]) -> [0 0 0 0 0]", "(multfirst [2 7 9]) -> [2 2 2]"]}
{"time": 0.02202, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 3 8]) -> [3 3 3]", "(multfirst [6 6 8 1 8]) -> [6 6 6 6 6]"]}
{"time": 0.00039, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"]}
{"time": 0.025907, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 0 1 6]) -> [2 2 2 2]", "(multfirst [2 6 2 5]) -> [2 2 2 2]"]}
{"time": 0.037127, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 1 9 9 9]) -> [9 9 9 9 9]", "(multfirst [2 2 3 2 5]) -> [2 2 2 2 2]"]}
{"time": 0.023826, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 0 6]) -> [8 8 8]", "(multfirst [1 2]) -> [1 1]"]}
{"time": 0.02405, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 2 3]) -> [5 5 5]", "(multfirst [7 9 4 4]) -> [7 7 7 7]"]}
{"time": 0.022134, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2]) -> [2]", "(multfirst [3 2 5]) -> [3 3 3]"]}
{"time": 0.031585, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [8 0]) -> [8 8]"]}
{"time": 0.032705, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 6]) -> [4 4]", "(multfirst [7]) -> [7]"]}
{"time": 0.031228, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 9 7]) -> [9 9 9]", "(multfirst []) -> []"]}
{"time": 0.000542, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [1]) -> [1]"]}
{"time": 0.023493, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 5]) -> [9 9]", "(multfirst [9 4 6 4]) -> [9 9 9 9]"]}
{"time": 0.022256, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 8 1 1]) -> [4 4 4 4]", "(multfirst [4 8]) -> [4 4]"]}
{"time": 0.022694, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "examples": ["(multfirst [1 8 0]) -> [1 1 1]", "(multfirst []) -> []"]}
{"time": 0.000315, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [2]) -> [2]", "(multfirst [6]) -> [6]"]}
{"time": 0.023318, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 4 0 3 8]) -> [8 8 8 8 8]", "(multfirst [5 6 7]) -> [5 5 5]"]}
{"time": 0.021718, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 7 8 2]) -> [7 7 7 7]", "(multfirst [8]) -> [8]"]}
{"time": 0.024675, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 7]) -> [9 9]", "(multfirst []) -> []"]}
{"time": 0.022299, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 8]) -> [3 3]", "(multfirst [7]) -> [7]"]}
{"time": 0.033083, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 0]) -> [0 0]", "(multfirst [4 7 6 2 3]) -> [4 4 4 4 4]"]}
{"time": 0.0241, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1 4]) -> [1 1]", "(multfirst [9]) -> [9]"]}
{"time": 0.022164, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 2 3 5 9]) -> [9 9 9 9 9]", "(multfirst [9 9 0]) -> [9 9 9]"]}
{"time": 0.035803, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5]) -> [5]", "(multfirst [8 9]) -> [8 8]"]}
{"time": 0.027585, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [7 3 4 7]) -> [7 7 7 7]"]}
{"time": 0.023108, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 6 6 1]) -> [9 9 9 9]", "(multfirst [2 4]) -> [2 2]"]}
{"time": 0.026038, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 6 2 9 3]) -> [5 5 5 5 5]", "(multfirst [6 0 9]) -> [6 6 6]"]}
{"time": 0.031916, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3]) -> [3]", "(multfirst [5 3 4 8]) -> [5 5 5 5]"]}
{"time": 0.03049, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 6 3]) -> [2 2 2]", "(multfirst [5]) -> [5]"]}
{"time": 0.025421, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1 5]) -> [1 1]", "(multfirst [8 2]) -> [8 8]"]}
{"time": 0.022527, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 5 3 1]) -> [2 2 2 2]", "(multfirst [6]) -> [6]"]}
{"time": 0.022251, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 2 9 9]) -> [6 6 6 6]", "(multfirst [1]) -> [1]"]}
{"time": 0.03105, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6]) -> [6]", "(multfirst [7 7 5 1 6]) -> [7 7 7 7 7]"]}
{"time": 0.036598, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 7 6 0 3]) -> [6 6 6 6 6]", "(multfirst [7 1 2 5 5]) -> [7 7 7 7 7]"]}
{"time": 0.031174, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 2 2]) -> [3 3 3]", "(multfirst [3]) -> [3]"]}
{"time": 0.000383, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [7]) -> [7]", "(multfirst []) -> []"]}
{"time": 0.000391, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [5]) -> [5]", "(multfirst []) -> []"]}
{"time": 0.025289, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [5 7 8 7]) -> [5 5 5 5]"]}
{"time": 0.027813, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 6 8 7]) -> [3 3 3 3]", "(multfirst [9 3 6]) -> [9 9 9]"]}
{"time": 0.023923, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 3 5 4 2]) -> [3 3 3 3 3]", "(multfirst []) -> []"]}
{"time": 0.000323, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [8]) -> [8]", "(multfirst [4]) -> [4]"]}
{"time": 0.022349, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 7 9 9]) -> [9 9 9 9]", "(multfirst [8 5 1 2 6]) -> [8 8 8 8 8]"]}
{"time": 0.037374, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 1 0 0]) -> [0 0 0 0]", "(multfirst [9 8 2 5 0]) -> [9 9 9 9 9]"]}
{"time": 0.030129, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 2 8]) -> [3 3 3]", "(multfirst [8 9]) -> [8 8]"]}
{"time": 0.000441, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []", "(multfirst []) -> []"]}
{"time": 0.035394, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 5 6 0]) -> [3 3 3 3]", "(multfirst [8 2 5]) -> [8 8 8]"]}
{"time": 0.037526, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst []) -> []", "(multfirst [2 7]) -> [2 2]"]}
{"time": 0.021305, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 2 3 2 3]) -> [5 5 5 5 5]", "(multfirst [6 1 0]) -> [6 6 6]"]}
{"time": 0.025251, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9]) -> [9]", "(multfirst [5 2 0 5 5]) -> [5 5 5 5 5]"]}
{"time": 0.023683, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 1 5 8 2]) -> [2 2 2 2 2]", "(multfirst [3 5 1 3 2]) -> [3 3 3 3 3]"]}
{"time": 0.039288, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 1]) -> [7 7]", "(multfirst [3 2]) -> [3 3]"]}
{"time": 0.0384, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 6 2 8 2]) -> [2 2 2 2 2]", "(multfirst [3 8 9]) -> [3 3 3]"]}
{"time": 0.021887, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 4 4 4 5]) -> [8 8 8 8 8]", "(multfirst [5 2 5 6 4]) -> [5 5 5 5 5]"]}
{"time": 0.000317, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [0]) -> [0]", "(multfirst []) -> []"]}
{"time": 0.021667, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3]) -> [3]", "(multfirst [4 9]) -> [4 4]"]}
{"time": 0.02346, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [0 8 7]) -> [0 0 0]", "(multfirst [9 1 7 8 0]) -> [9 9 9 9 9]"]}
{"time": 0.027137, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 6]) -> [4 4]", "(multfirst [9]) -> [9]"]}
{"time": 0.035872, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 9 2 9 8]) -> [2 2 2 2 2]", "(multfirst [3 3 9 7 2]) -> [3 3 3 3 3]"]}
{"time": 0.020855, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "examples": ["(multfirst [0]) -> [0]", "(multfirst [0 1]) -> [0 0]"]}
{"time": 0.021564, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 8 8 5 4]) -> [4 4 4 4 4]", "(multfirst [9]) -> [9]"]}
{"time": 0.037011, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 7 0 7 0]) -> [2 2 2 2 2]", "(multfirst [1 2]) -> [1 1]"]}
{"time": 0.021114, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [1 3]) -> [1 1]", "(multfirst [0 1 2]) -> [0 0 0]"]}
{"time": 0.021442, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 5]) -> [6 6]", "(multfirst []) -> []"]}
