{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 30.962054, "examples": ["(sumtrees []) -> []", "(sumtrees [{8}]) -> [8]", "(sumtrees [{9 {5 {3 {0} {3}}}}]) -> [20]", "(sumtrees [{}]) -> [0]", "(sumtrees [{7} {7 {4}} {0}]) -> [7 11 0]", "(sumtrees [{3 {8} {5 {2 {2} {7}}}} {8 {5 {1}}}]) -> [27 14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 32.969989, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {7 {0}}}]) -> [15]", "(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{8 {7 {7}}} {5 {6} {7}} {} {8 {0 {9} {5}}} {0 {4}}]) -> [22 18 0 22 4]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.867354, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{9 {8 {1 {7}} {0 {6} {0}}}}]) -> [31]", "(sumtrees [{7 {4}} {1}]) -> [11 1]", "(sumtrees [{4 {9 {1}}} {0 {0}} {7 {3 {4 {2} {0}} {1}} {0 {5}}} {1 {6} {1 {0}}} {2}]) -> [14 0 22 8 2]", "(sumtrees [{0} {5}]) -> [0 5]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.831704, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {2 {0} {2}}} {} {} {0} {}]) -> [7 0 0 0 0]", "(sumtrees [{1 {7}} {} {8 {4 {7 {8}} {9 {3}}}} {3}]) -> [8 0 39 3]", "(sumtrees [{} {8} {1 {8 {4 {4} {8}} {0 {0} {0}}}} {9 {6 {0 {7}}} {5 {7} {1}}} {8 {2}}]) -> [0 8 25 35 10]", "(sumtrees [{} {} {0 {4}}]) -> [0 0 4]", "(sumtrees [{8}]) -> [8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 41.280446, "examples": ["(sumtrees []) -> []", "(sumtrees [{4}]) -> [4]", "(sumtrees [{0 {1}} {3}]) -> [1 3]", "(sumtrees [{7 {0 {9}} {6 {8} {3}}} {8 {1} {9}} {} {1 {3 {2 {3} {0}}}}]) -> [33 18 0 9]", "(sumtrees [{6 {0 {7 {6}} {9 {5} {6}}} {1}} {} {0 {5 {9} {2}} {9}}]) -> [40 0 25]", "(sumtrees [{6} {3 {5 {2 {7} {2}}} {3}}]) -> [6 22]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.462385, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {1 {9} {9}}} {7 {9 {7}}} {2 {5 {4} {8}} {1 {1}}}]) -> [22 23 21]", "(sumtrees [{0} {2 {2}}]) -> [0 4]", "(sumtrees [{} {8 {6} {0}} {3}]) -> [0 14 3]", "(sumtrees [{1 {9}} {6} {} {}]) -> [10 6 0 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.913432, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {4 {3} {3 {5} {0}}} {4 {6 {4}} {7 {7}}}} {4} {5 {3}} {}]) -> [47 4 8 0]", "(sumtrees [{} {1 {8} {7}} {1} {}]) -> [0 16 1 0]", "(sumtrees []) -> []", "(sumtrees [{} {9} {3 {1 {7} {5}} {0}} {9 {1}} {}]) -> [0 9 16 10 0]", "(sumtrees [{} {4 {2} {8 {9} {6 {5}}}} {3 {8} {8}} {6}]) -> [0 34 19 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.653631, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9 {0}}]) -> [0 9]", "(sumtrees [{0} {7 {9 {4 {7} {2}} {6}}} {8}]) -> [0 35 8]", "(sumtrees [{6 {8} {5}} {9 {1} {2}} {6 {2}}]) -> [19 12 8]", "(sumtrees [{5 {5} {9}} {}]) -> [19 0]", "(sumtrees [{} {6} {2 {8 {7 {9} {9}}} {7 {1 {0} {7}}}} {3}]) -> [0 6 50 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.987117, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{3} {}]) -> [3 0]", "(sumtrees [{3 {3}} {1} {} {}]) -> [6 1 0 0]", "(sumtrees [{} {4 {0} {5}} {3 {0} {2}} {0 {7} {5}} {4 {5 {0}} {0 {1}}}]) -> [0 9 5 12 10]", "(sumtrees [{4} {6 {4}} {3} {2} {9}]) -> [4 10 3 2 9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.810793, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{1 {6 {5 {6} {7}} {0 {6}}} {9 {1} {0 {9} {4}}}} {1 {4 {7 {3}}}} {} {} {3 {6}}]) -> [54 15 0 0 9]", "(sumtrees []) -> []", "(sumtrees [{7} {8 {8} {3}} {5 {6 {4} {8}}} {2 {9} {3}} {}]) -> [7 19 23 14 0]", "(sumtrees [{1 {8 {6 {4}}} {9 {4 {0}}}} {9 {1}} {1} {} {5 {8 {1}} {8 {7} {3}}}]) -> [32 10 1 0 32]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.553587, "examples": ["(sumtrees []) -> []", "(sumtrees [{2} {} {4}]) -> [2 0 4]", "(sumtrees [{9} {1 {2}}]) -> [9 3]", "(sumtrees [{3 {6}} {2 {2 {6} {1}} {3 {6} {8}}} {9} {} {3}]) -> [9 28 9 0 3]", "(sumtrees [{4 {6 {3} {8 {8} {9}}} {7}} {} {6}]) -> [45 0 6]", "(sumtrees [{} {6} {} {4 {8}}]) -> [0 6 0 12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 64.333349, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {5}} {} {} {}]) -> [9 0 0 0]", "(sumtrees [{4 {7}} {5}]) -> [11 5]", "(sumtrees [{0 {0 {9}} {7 {6}}} {8} {}]) -> [22 8 0]", "(sumtrees [{4 {0 {9} {7}} {1}} {6 {4 {4 {2}} {7}}} {9 {7}}]) -> [21 23 16]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 65.326086, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {6}} {9} {3 {1 {7} {1}} {8 {8} {8}}} {9 {1} {4}} {3}]) -> [13 9 36 14 3]", "(sumtrees [{5} {6} {8 {6 {5 {9} {9}} {0 {3}}}}]) -> [5 6 40]", "(sumtrees [{6 {2 {6}} {3}}]) -> [17]", "(sumtrees [{2} {8}]) -> [2 8]", "(sumtrees [{0 {2 {6 {2}} {1 {3}}}} {1 {1} {2 {2 {7}} {9 {7}}}}]) -> [14 29]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 69.901217, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{9 {7}} {0 {0} {0}} {6} {8}]) -> [16 0 6 8]", "(sumtrees [{4} {1 {0 {8} {9}}} {} {}]) -> [4 18 0 0]", "(sumtrees []) -> []", "(sumtrees [{3} {3} {}]) -> [3 3 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.386389, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {3 {5} {7}}} {1 {0} {5}} {4 {2 {0} {4 {6}}}} {} {}]) -> [22 6 16 0 0]", "(sumtrees [{1 {8}} {8 {6 {6} {5 {1}}} {8 {1} {6 {1}}}} {9 {4 {7 {2} {9}} {8 {4} {7}}}}]) -> [9 42 50]", "(sumtrees [{2 {1 {1 {8} {5}} {5}} {6 {4 {2} {2}}}} {} {4}]) -> [36 0 4]", "(sumtrees [{1 {2 {1} {3}} {5 {6}}} {0 {7}} {2 {8} {6 {8}}}]) -> [18 7 24]", "(sumtrees [{} {2 {6} {5}} {} {6 {9}}]) -> [0 13 0 15]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 71.94554, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {3} {1 {7} {4}}} {3} {} {} {1}]) -> [21 3 0 0 1]", "(sumtrees [{9 {4 {7 {9} {2}} {3}}} {9} {}]) -> [34 9 0]", "(sumtrees []) -> []", "(sumtrees [{9} {8} {0} {} {}]) -> [9 8 0 0 0]", "(sumtrees [{} {}]) -> [0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.488871, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{2} {3}]) -> [2 3]", "(sumtrees [{0 {2}} {1 {7} {4}} {8 {2 {4}}}]) -> [2 12 14]", "(sumtrees []) -> []", "(sumtrees [{3} {7 {5}} {7 {0 {7} {6}}}]) -> [3 12 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.034558, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {7}} {} {9 {3}}]) -> [11 0 12]", "(sumtrees [{0} {} {9 {8 {8}}}]) -> [0 0 25]", "(sumtrees [{1} {1}]) -> [1 1]", "(sumtrees [{1 {0} {5 {3 {0} {7}}}} {0} {} {} {0 {3}}]) -> [16 0 0 0 3]", "(sumtrees [{7} {0 {0} {1}} {8 {0} {5}}]) -> [7 1 13]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.49951, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {1 {5}} {8 {7} {2}}} {3 {4 {6 {5}} {1 {6} {1}}} {2}} {8 {0}}]) -> [30 28 8]", "(sumtrees []) -> []", "(sumtrees [{4 {9}} {8 {5} {5 {8 {0} {4}}}} {1 {5 {5 {0}}} {9 {6}}}]) -> [13 30 26]", "(sumtrees [{5 {0 {6} {3}}}]) -> [14]", "(sumtrees [{6}]) -> [6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 51.443588, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {2 {8}}} {8 {3}} {1 {0 {6 {0} {4}} {2 {0} {0}}} {3 {6 {8}} {5 {3}}}} {4 {2 {5 {6}}} {3 {4}}}]) -> [16 11 38 24]", "(sumtrees [{2}]) -> [2]", "(sumtrees [{2 {1 {5}}}]) -> [8]", "(sumtrees [{} {8 {8}} {9 {2} {5}}]) -> [0 16 16]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 43.445041, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {8 {9} {3}}} {1 {1 {3}}} {} {}]) -> [26 5 0 0]", "(sumtrees [{5 {5 {3 {5} {8}} {1}}}]) -> [27]", "(sumtrees []) -> []", "(sumtrees [{2 {1 {9 {1} {0}} {7}}} {5 {4} {1 {2} {8}}} {6 {5 {3}} {4 {0} {5}}} {5} {2}]) -> [20 20 23 5 2]", "(sumtrees [{9 {0}}]) -> [9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 41.509774, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{}]) -> [0]", "(sumtrees [{8 {7} {4}} {5 {7 {1} {2 {7}}} {7 {5 {6}} {1 {2}}}} {} {} {3 {4 {6}}}]) -> [19 43 0 0 13]", "(sumtrees [{4 {3}} {8 {7}} {4} {7 {0 {3}}} {2 {5} {2 {6}}}]) -> [7 15 4 10 15]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 35.513949, "examples": ["(sumtrees []) -> []", "(sumtrees [{8} {1 {7 {5 {1}}}}]) -> [8 14]", "(sumtrees []) -> []", "(sumtrees [{2 {2 {9}}} {6} {8 {7}} {}]) -> [13 6 15 0]", "(sumtrees []) -> []", "(sumtrees [{4 {8} {6 {7} {1}}}]) -> [26]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.487663, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{9 {1 {0}} {3}}]) -> [13]", "(sumtrees [{4 {5} {1}} {6}]) -> [10 6]", "(sumtrees [{6} {8} {7} {1}]) -> [6 8 7 1]", "(sumtrees [{8 {4 {0}} {8}} {} {0 {1} {3}} {9} {6 {4}}]) -> [20 0 4 9 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.462848, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{}]) -> [0]", "(sumtrees [{4 {1 {5 {4} {5}}}} {4 {8} {5}} {8 {8} {6}}]) -> [19 17 22]", "(sumtrees [{3}]) -> [3]", "(sumtrees [{9 {9 {6}} {7}}]) -> [31]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.898442, "examples": ["(sumtrees []) -> []", "(sumtrees [{5} {}]) -> [5 0]", "(sumtrees [{0} {6 {6 {4 {8} {5}} {0 {4} {5}}} {6 {8}}} {9 {3 {5 {1} {5}} {7 {4} {7}}} {9}} {6 {2}}]) -> [0 52 50 8]", "(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{8 {3}} {} {9 {5} {1}} {8} {9 {8} {3}}]) -> [11 0 15 8 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.983599, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {3}} {1 {0} {1}} {4 {1 {2 {2} {3}} {8 {1}}} {6 {3 {9} {0}} {6 {5}}}} {4 {0} {2}}]) -> [12 2 50 6]", "(sumtrees [{3 {0} {4}} {} {6 {7 {7}} {8 {5}}} {}]) -> [7 0 33 0]", "(sumtrees [{3 {8} {7}} {} {4} {5}]) -> [18 0 4 5]", "(sumtrees [{6 {4 {1 {0} {6}}} {4 {4 {2} {2}} {6 {3}}}} {9 {5} {4}}]) -> [38 18]", "(sumtrees [{0 {4}} {1 {6}} {2 {1}} {} {8 {0} {4 {9} {6}}}]) -> [4 7 3 0 27]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 67.928792, "examples": ["(sumtrees []) -> []", "(sumtrees [{0} {1} {7 {5 {9}}} {8 {0}} {7 {0 {7 {0} {2}}}}]) -> [0 1 21 8 16]", "(sumtrees []) -> []", "(sumtrees [{} {8 {7} {7}}]) -> [0 22]", "(sumtrees [{} {} {0 {1 {9 {2}}}} {4} {}]) -> [0 0 12 4 0]", "(sumtrees [{5 {5}} {0} {3} {8 {0} {4}} {0 {7 {7 {1}}}}]) -> [10 0 3 12 15]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.732034, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {2} {0 {9 {0} {7 {7}}}} {3} {6}]) -> [0 2 23 3 6]", "(sumtrees [{6 {5} {4}} {2 {9 {1 {6} {0}}} {5 {5 {9} {8}}}} {8} {6} {1 {2 {1}} {7 {1}}}]) -> [15 45 8 6 12]", "(sumtrees [{4} {1 {9}} {8 {3} {8}}]) -> [4 10 19]", "(sumtrees [{6 {9 {9} {0}} {4}} {9 {8}}]) -> [28 17]", "(sumtrees [{2} {} {9 {5}} {4 {1}} {}]) -> [2 0 14 5 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.586896, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{2} {} {9 {6 {5} {2}}} {0 {1 {8 {9}}} {0}}]) -> [2 0 22 18]", "(sumtrees [{4 {8}} {1 {6 {9}} {6}} {0} {7 {9 {4}}} {5}]) -> [12 22 0 20 5]", "(sumtrees [{2 {6} {6}} {0} {5 {7}} {} {}]) -> [14 0 12 0 0]", "(sumtrees [{6} {} {} {3 {4 {5 {8} {3}} {8 {8} {5}}} {8 {0 {5} {7}}}} {}]) -> [6 0 0 64 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.771381, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {9 {7}}} {6}]) -> [17 6]", "(sumtrees [{4 {9}} {} {5 {2} {9}}]) -> [13 0 16]", "(sumtrees [{7 {0} {3}} {4 {8}}]) -> [10 12]", "(sumtrees []) -> []", "(sumtrees [{8} {0 {5} {0}} {4 {3} {1}} {}]) -> [8 5 8 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 52.717922, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {7 {3 {1} {7}} {0}} {6 {2 {8} {3}} {7 {8}}}} {8 {7}}]) -> [53 15]", "(sumtrees [{6} {1 {5} {2 {1}}} {2} {}]) -> [6 9 2 0]", "(sumtrees []) -> []", "(sumtrees [{9 {9} {8}} {5} {5 {4 {7} {9}} {4 {6} {5 {7} {1}}}} {} {}]) -> [26 5 48 0 0]", "(sumtrees [{} {4} {8 {5} {4}}]) -> [0 4 17]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.495621, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {6 {1} {2}}} {7 {3 {6 {9} {9}}}} {5} {9} {}]) -> [16 34 5 9 0]", "(sumtrees []) -> []", "(sumtrees [{6 {8} {6}} {4 {5 {4}}} {1 {6 {9 {4}} {2 {0} {8}}} {3 {3 {6} {8}} {4 {1}}}} {5 {0} {0}}]) -> [20 13 55 5]", "(sumtrees [{1}]) -> [1]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 31.420581, "examples": ["(sumtrees []) -> []", "(sumtrees [{8} {7 {4}}]) -> [8 11]", "(sumtrees [{}]) -> [0]", "(sumtrees [{6} {6 {0} {1}} {8 {9} {1}} {} {4}]) -> [6 7 18 0 4]", "(sumtrees []) -> []", "(sumtrees [{0 {0}} {3 {4} {4}}]) -> [0 11]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 51.087641, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {3 {1 {5} {9}} {7 {0}}}]) -> [0 0 25]", "(sumtrees [{6 {2 {5}} {5 {4 {3} {3}} {8 {7}}}} {8 {5} {6 {0} {6}}}]) -> [43 25]", "(sumtrees []) -> []", "(sumtrees [{} {0 {6} {8}} {} {2}]) -> [0 14 0 2]", "(sumtrees [{} {3 {6 {8}} {4 {0} {0}}} {3} {8 {5} {2 {4} {6}}}]) -> [0 21 3 25]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.055715, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {8}} {} {4} {} {}]) -> [12 0 4 0 0]", "(sumtrees [{} {8 {3} {6}} {7 {3 {2} {7}}} {} {6}]) -> [0 17 19 0 6]", "(sumtrees [{4} {4 {3 {7}}} {2 {8 {7}} {1 {4}}} {} {8 {9} {1}}]) -> [4 14 22 0 18]", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {9 {8}} {} {3 {0 {9}}} {}]) -> [0 17 0 12 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.648489, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {3 {6 {3} {5}}} {8}} {} {6 {0 {5 {9} {3}}}} {5}]) -> [25 0 23 5]", "(sumtrees [{7} {}]) -> [7 0]", "(sumtrees [{9 {3} {9 {5} {0}}}]) -> [26]", "(sumtrees [{5}]) -> [5]", "(sumtrees [{0 {2}} {2 {7} {1}}]) -> [2 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 34.834235, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {2 {8}} {2 {3}}]) -> [4 10 5]", "(sumtrees [{} {6 {7 {2}} {9 {9 {0} {4}}}} {} {1 {8 {4 {0}}} {3 {7}}} {2}]) -> [0 37 0 23 2]", "(sumtrees [{7 {1 {5} {9}} {9 {4}}} {4} {8 {0 {5} {7}}} {1 {7 {5} {8}}} {5}]) -> [35 4 20 21 5]", "(sumtrees [{2 {7}} {} {9 {8 {9 {6} {8}} {2 {3}}} {7}}]) -> [9 0 52]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 36.390101, "examples": ["(sumtrees []) -> []", "(sumtrees [{5 {5 {1} {1 {6}}} {7 {6 {4}}}}]) -> [35]", "(sumtrees [{} {2} {} {} {2 {3} {4 {4} {5}}}]) -> [0 2 0 0 18]", "(sumtrees [{4 {3 {9} {8}}} {7} {} {3 {2 {2 {8}} {5 {7} {6}}}}]) -> [24 7 0 33]", "(sumtrees [{} {8 {4} {5}} {7} {} {}]) -> [0 17 7 0 0]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.257366, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {2 {5 {1 {2} {2}}}} {2 {6 {8}}} {8}]) -> [0 12 16 8]", "(sumtrees [{2 {4} {9 {1 {4} {2}}}} {9} {} {} {0 {7} {6}}]) -> [22 9 0 0 13]", "(sumtrees [{6 {7}} {} {3 {8} {8}} {5} {1 {0} {9}}]) -> [13 0 19 5 10]", "(sumtrees [{7 {1}} {3} {0}]) -> [8 3 0]", "(sumtrees [{} {1} {} {6 {6} {3}} {7}]) -> [0 1 0 15 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.485992, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {0 {2}} {}]) -> [0 0 2 0]", "(sumtrees [{2 {3 {9} {3}} {9 {9}}}]) -> [35]", "(sumtrees [{2 {5} {0}} {} {} {4 {5}} {7 {2}}]) -> [7 0 0 9 9]", "(sumtrees [{1 {8} {8}}]) -> [17]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.875764, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {3 {8} {0}}} {6} {}]) -> [15 6 0]", "(sumtrees [{} {} {6 {0}} {}]) -> [0 0 6 0]", "(sumtrees []) -> []", "(sumtrees [{7 {1 {7 {7}}}} {} {} {5}]) -> [22 0 0 5]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.383062, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {1}]) -> [0 1]", "(sumtrees [{7 {3 {2}}} {6}]) -> [12 6]", "(sumtrees []) -> []", "(sumtrees [{9} {}]) -> [9 0]", "(sumtrees [{8 {8 {8}} {5 {9} {7}}} {7 {8} {6}} {5 {8 {1}}} {8 {6 {3} {5}}} {2 {0} {0}}]) -> [45 21 14 22 2]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.223507, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {6 {5}}} {}]) -> [15 0]", "(sumtrees [{2 {4 {0 {5} {3}}} {7 {9}}}]) -> [30]", "(sumtrees [{8 {8 {7}} {4}} {1} {9} {8 {5 {1 {2} {8}}} {1}} {7 {1 {9}}}]) -> [27 1 9 25 17]", "(sumtrees [{2 {7 {1 {8}} {1}}}]) -> [19]", "(sumtrees [{1} {8 {7} {0}} {0 {9 {0}} {4}} {1 {4} {0}} {8 {6 {1 {1}}}}]) -> [1 15 13 5 16]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.395191, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{3 {8} {4}} {4 {1}} {4 {3 {8 {3} {1}}}} {5 {8}}]) -> [15 5 19 13]", "(sumtrees [{8} {2} {4 {1 {8} {0}} {7 {6} {1}}} {0 {1 {3}} {5}}]) -> [8 2 27 9]", "(sumtrees [{6 {5 {7} {6}}}]) -> [24]", "(sumtrees [{} {} {6} {} {8 {8 {8 {3} {7}}} {4 {1}}}]) -> [0 0 6 0 39]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 35.915051, "examples": ["(sumtrees []) -> []", "(sumtrees [{6}]) -> [6]", "(sumtrees [{5 {0 {9}} {1}} {7 {9}} {8 {3} {3 {7 {8} {0}}}}]) -> [15 16 29]", "(sumtrees [{9 {9 {7} {1}}} {0 {5 {7} {1}} {5 {1} {9}}} {5 {4}} {}]) -> [26 28 9 0]", "(sumtrees [{1 {1} {8 {0}}} {} {5 {5}} {6}]) -> [10 0 10 6]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 55.633366, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {8 {1}} {1 {1} {7}}} {}]) -> [27 0]", "(sumtrees [{1 {6 {2} {5}}} {1} {}]) -> [14 1 0]", "(sumtrees []) -> []", "(sumtrees [{4} {0 {4}}]) -> [4 4]", "(sumtrees [{6 {2}} {6} {5 {0 {7}} {6}} {4 {8}} {}]) -> [8 6 18 12 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.499504, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {2 {6}}]) -> [0 8]", "(sumtrees [{3} {7} {} {5 {6 {7} {3}}}]) -> [3 7 0 21]", "(sumtrees []) -> []", "(sumtrees [{} {3} {0} {9}]) -> [0 3 0 9]", "(sumtrees [{} {1 {2 {1} {2}}}]) -> [0 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.825375, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{8} {3} {5 {0} {0}} {2} {6}]) -> [8 3 5 2 6]", "(sumtrees [{}]) -> [0]", "(sumtrees [{8 {9}} {5 {0 {4 {2} {6}}} {5}}]) -> [17 22]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.455228, "examples": ["(sumtrees []) -> []", "(sumtrees [{5 {0} {5}} {} {}]) -> [10 0 0]", "(sumtrees []) -> []", "(sumtrees [{5 {2} {6}} {6 {2}} {8 {2 {5} {3}} {6}} {4}]) -> [13 8 24 4]", "(sumtrees [{2 {5 {0} {2}} {8 {3} {6}}} {1}]) -> [26 1]", "(sumtrees [{} {9 {1}} {}]) -> [0 10 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 32.149365, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {3}}]) -> [4]", "(sumtrees []) -> []", "(sumtrees [{} {1 {2} {2}} {7}]) -> [0 5 7]", "(sumtrees [{5} {8 {4} {9}}]) -> [5 21]", "(sumtrees [{} {8}]) -> [0 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.847764, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {1 {9} {6}} {9} {6 {4} {7}} {6 {0}}]) -> [0 16 9 17 6]", "(sumtrees []) -> []", "(sumtrees [{6 {9}} {}]) -> [15 0]", "(sumtrees [{3} {2} {9} {2 {3} {3}}]) -> [3 2 9 8]", "(sumtrees [{} {6 {1 {5}} {0 {1} {9}}}]) -> [0 22]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 41.067526, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {4 {9 {6}} {1}} {} {1}]) -> [0 20 0 1]", "(sumtrees []) -> []", "(sumtrees [{9 {2}}]) -> [11]", "(sumtrees [{} {0 {2} {7}} {9 {6 {5 {4} {2}} {7 {6}}} {7 {7}}}]) -> [0 9 53]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.109185, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {5}} {} {0 {2} {3 {7 {7}}}} {1 {9 {0 {0} {5}}}}]) -> [13 0 19 15]", "(sumtrees []) -> []", "(sumtrees [{2 {2 {4 {3} {6}} {7 {5}}}} {7} {} {}]) -> [29 7 0 0]", "(sumtrees [{0 {9} {5 {4}}}]) -> [18]", "(sumtrees [{5 {2}} {2} {} {5 {4} {0 {5}}}]) -> [7 2 0 14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 65.08009, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {2 {5 {2} {9}}} {9}} {4 {5 {5}}} {4 {3 {7}} {8}} {3} {1 {0}}]) -> [33 14 22 3 1]", "(sumtrees []) -> []", "(sumtrees [{4 {7} {1}} {8} {1} {6 {5 {2 {6} {6}} {9 {2}}} {7 {1 {3}}}}]) -> [12 8 1 47]", "(sumtrees [{1 {1 {7} {0}}} {3 {4} {7}} {}]) -> [9 14 0]", "(sumtrees [{} {2 {2 {9}}}]) -> [0 13]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.463588, "examples": ["(sumtrees []) -> []", "(sumtrees [{9}]) -> [9]", "(sumtrees [{9 {6 {3}} {8}} {6} {6}]) -> [26 6 6]", "(sumtrees [{3 {9} {2}}]) -> [14]", "(sumtrees [{8 {6} {9 {3} {8}}}]) -> [34]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.769456, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {1}} {}]) -> [7 0]", "(sumtrees [{4 {0 {7}} {0 {8 {9}} {1 {4} {0}}}} {} {0 {1 {5 {4}}}}]) -> [33 0 10]", "(sumtrees [{9 {2}} {}]) -> [11 0]", "(sumtrees [{} {} {5 {7}} {}]) -> [0 0 12 0]", "(sumtrees [{} {}]) -> [0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 30.18831, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {6} {4} {8}]) -> [0 6 4 8]", "(sumtrees []) -> []", "(sumtrees [{1 {0 {6 {2}}}} {4} {3 {4} {1}} {2}]) -> [9 4 8 2]", "(sumtrees [{} {3 {9}} {2 {8 {8}}} {7 {1} {9}}]) -> [0 12 18 17]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.952669, "examples": ["(sumtrees []) -> []", "(sumtrees [{1} {0 {0 {8} {7}} {1}} {6 {2 {2}}} {}]) -> [1 16 10 0]", "(sumtrees [{9 {5 {3 {0} {4}} {2 {5} {3}}}}]) -> [31]", "(sumtrees [{} {4} {2} {7 {4} {5}} {}]) -> [0 4 2 16 0]", "(sumtrees [{4} {6 {4 {9 {4} {5}} {6 {6} {6}}} {7 {4}}} {2 {0}}]) -> [4 57 2]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 57.422743, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {4} {7} {}]) -> [0 4 7 0]", "(sumtrees [{} {4} {6} {} {}]) -> [0 4 6 0 0]", "(sumtrees [{0 {9}} {6 {7}} {} {7 {8} {3}}]) -> [9 13 0 18]", "(sumtrees [{3 {8} {3}} {} {1 {8 {3 {5} {7}} {4 {6} {0}}}} {1 {7 {8}} {5 {8}}}]) -> [14 0 34 29]", "(sumtrees [{9 {5 {2 {6}}}} {3 {3 {0}} {8 {5} {9}}} {2 {4 {7}}} {0} {}]) -> [22 28 13 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.62499, "examples": ["(sumtrees []) -> []", "(sumtrees [{6} {2 {7}} {} {6 {2} {7 {8}}}]) -> [6 9 0 23]", "(sumtrees [{8 {2} {3}} {7 {9 {2} {0}}} {8} {7 {7 {4}}}]) -> [13 18 8 18]", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{} {3}]) -> [0 3]", "(sumtrees [{3} {} {5 {1 {8 {0} {8}} {5 {8} {2}}}} {5} {6 {9 {1 {9}} {1 {4}}} {3}}]) -> [3 0 37 5 33]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.074352, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{5 {2 {6 {5}}}}]) -> [18]", "(sumtrees [{0 {9}} {6 {1 {1}}}]) -> [9 8]", "(sumtrees [{} {6 {4 {2 {5}}}} {8 {3} {2}}]) -> [0 17 13]", "(sumtrees [{8} {} {} {2}]) -> [8 0 0 2]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 34.245146, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {7 {4}} {} {0}]) -> [0 11 0 0]", "(sumtrees [{2 {3}} {} {5} {} {0 {0 {5}}}]) -> [5 0 5 0 5]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 30.862685, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {3 {6 {9}} {6 {4}}} {7}]) -> [0 28 7]", "(sumtrees [{0 {5 {2}} {2}} {6 {6} {6}} {4 {5} {5}}]) -> [9 18 14]", "(sumtrees [{7 {0}} {4} {8 {9}} {1 {3}} {}]) -> [7 4 17 4 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.064621, "examples": ["(sumtrees []) -> []", "(sumtrees [{5} {6} {4 {5}} {6}]) -> [5 6 9 6]", "(sumtrees [{6 {7 {6 {7} {3}} {2 {8}}}} {}]) -> [39 0]", "(sumtrees [{2 {1} {6 {5} {0}}} {8} {7 {5} {6 {5} {8}}} {4 {5} {8}} {8 {1}}]) -> [14 8 31 17 9]", "(sumtrees [{8}]) -> [8]", "(sumtrees [{9 {6 {2}} {9}} {1}]) -> [26 1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.320597, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {5 {3}} {3}} {2 {0}}]) -> [20 2]", "(sumtrees [{8 {7} {3}}]) -> [18]", "(sumtrees [{2} {}]) -> [2 0]", "(sumtrees [{4 {5}} {} {3 {9 {2} {6}} {6 {1} {9}}} {7 {2 {4}}}]) -> [9 0 36 13]", "(sumtrees [{7 {7 {3} {9}} {3 {8}}} {2 {9 {8 {7} {3}}} {1 {4 {6} {2}} {8 {8}}}}]) -> [37 58]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.058924, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {2 {1 {5}}} {1 {7 {6} {4}}}} {4 {0}} {} {0 {6} {4}} {5 {5 {0} {8}}}]) -> [27 4 0 10 18]", "(sumtrees [{}]) -> [0]", "(sumtrees [{6 {4} {2}} {3 {2} {0 {5 {6}} {7 {4} {3}}}}]) -> [12 30]", "(sumtrees [{2 {2 {9 {4} {2}}}} {} {}]) -> [19 0 0]", "(sumtrees [{} {6 {0}}]) -> [0 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.589687, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {} {7 {5 {9}}} {0}]) -> [4 0 21 0]", "(sumtrees [{5 {9}}]) -> [14]", "(sumtrees [{6 {3 {6}}} {} {}]) -> [15 0 0]", "(sumtrees [{3}]) -> [3]", "(sumtrees [{4} {7 {2} {1 {1} {2}}} {}]) -> [4 13 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.346799, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {7 {6 {6}}} {0}]) -> [0 19 0]", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{8} {2}]) -> [8 2]", "(sumtrees [{2 {3} {0 {0} {3}}}]) -> [8]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 32.540555, "examples": ["(sumtrees []) -> []", "(sumtrees [{7}]) -> [7]", "(sumtrees [{1} {2} {4 {1} {9 {0}}}]) -> [1 2 14]", "(sumtrees [{} {7 {4 {0} {1}}} {} {9 {3} {5}}]) -> [0 12 0 17]", "(sumtrees [{1 {2 {7 {6} {5}}} {8}} {4}]) -> [29 4]", "(sumtrees [{8} {8} {7 {0 {8 {4}}}} {3}]) -> [8 8 19 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 42.382164, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {6 {2 {2 {6} {9}}} {9}}]) -> [0 0 34]", "(sumtrees [{3 {8} {5 {0 {0} {8}}}}]) -> [24]", "(sumtrees [{} {8} {1} {1 {9 {9}} {3}}]) -> [0 8 1 22]", "(sumtrees [{7 {4} {1 {0} {8}}} {8 {8}} {2 {4}} {0 {4 {1} {7}} {8 {6} {9}}} {7 {3 {4}}}]) -> [20 16 6 35 14]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 36.334017, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0} {7 {8 {3 {1} {6}}}}]) -> [0 0 25]", "(sumtrees [{}]) -> [0]", "(sumtrees [{2 {6}} {6 {9} {2}} {3 {4 {9 {5}} {0}}} {}]) -> [8 17 21 0]", "(sumtrees [{9} {}]) -> [9 0]", "(sumtrees [{7} {}]) -> [7 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 36.046656, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{9 {7} {0}}]) -> [16]", "(sumtrees [{2} {7 {1}} {6 {3 {6 {3}} {2 {2} {4}}} {5 {1}}} {1 {7}} {3 {0 {4 {1} {5}}}}]) -> [2 8 32 8 13]", "(sumtrees [{} {3 {4} {0}} {1}]) -> [0 7 1]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.412889, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {4} {4 {9} {2}}]) -> [0 0 4 15]", "(sumtrees [{} {5 {2}} {8 {6 {1}}} {} {5}]) -> [0 7 15 0 5]", "(sumtrees [{1} {8 {0} {5}} {5}]) -> [1 13 5]", "(sumtrees [{6 {2}} {1 {7}} {} {} {}]) -> [8 8 0 0 0]", "(sumtrees [{0 {7}} {1} {5 {2} {8}} {8}]) -> [7 1 15 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.386768, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{7 {5 {2}}} {} {9}]) -> [14 0 9]", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{} {3 {9}} {2 {4 {0} {6}} {2}} {} {6 {9 {7}} {7}}]) -> [0 12 14 0 29]", "(sumtrees [{4 {4 {0 {5}}}} {2} {4 {5} {2}} {3}]) -> [13 2 11 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.539171, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {3}} {} {9} {} {6 {9}}]) -> [9 0 9 0 15]", "(sumtrees []) -> []", "(sumtrees [{6 {3} {4}} {1}]) -> [13 1]", "(sumtrees [{3 {3}} {0 {3} {2 {2} {0 {0} {2}}}}]) -> [6 9]", "(sumtrees [{9 {3} {8}} {7 {3} {4}}]) -> [20 14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 35.127537, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0}]) -> [0 0]", "(sumtrees [{} {3 {2} {4}} {3} {0 {2 {2}} {8 {9} {3}}}]) -> [0 9 3 24]", "(sumtrees [{} {7} {} {}]) -> [0 7 0 0]", "(sumtrees [{4} {2 {7} {4 {6 {5} {9}} {4 {9}}}} {8 {9} {5}} {} {7 {2 {2 {5}} {1}}}]) -> [4 46 22 0 17]", "(sumtrees [{0 {2 {5}} {1}}]) -> [8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.524268, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {9}} {9}]) -> [16 9]", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {} {9}]) -> [0 0 9]", "(sumtrees [{} {2 {4} {5 {4}}} {7}]) -> [0 15 7]", "(sumtrees [{1}]) -> [1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.930131, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9} {7}]) -> [0 9 7]", "(sumtrees [{7}]) -> [7]", "(sumtrees [{0} {0} {4 {6} {9}}]) -> [0 0 19]", "(sumtrees [{6 {6}}]) -> [12]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.80224, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {5}} {4 {1 {3} {2}} {8 {4}}} {3 {6 {3}}} {6 {1 {3} {4}}}]) -> [14 22 12 14]", "(sumtrees [{6}]) -> [6]", "(sumtrees [{}]) -> [0]", "(sumtrees [{7} {4} {6 {6} {0}} {}]) -> [7 4 12 0]", "(sumtrees [{2}]) -> [2]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 35.382995, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {} {0 {2}} {5 {2}}]) -> [0 0 0 2 7]", "(sumtrees [{0 {7}} {4 {9}}]) -> [7 13]", "(sumtrees [{}]) -> [0]", "(sumtrees [{5 {8} {7 {5 {8} {8}}}} {1 {3 {2 {2} {0}} {9}} {7 {3 {9}} {5 {3}}}}]) -> [41 44]", "(sumtrees [{2} {5 {3 {0}} {0 {9} {6}}} {} {3 {8 {1} {1}} {2 {9}}} {1 {0} {2}}]) -> [2 23 0 24 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.309585, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {8 {0}} {3}]) -> [0 8 3]", "(sumtrees [{5 {6 {6}} {1 {6}}}]) -> [24]", "(sumtrees [{7}]) -> [7]", "(sumtrees [{} {6 {3 {7 {7}}}} {1 {3}}]) -> [0 23 4]", "(sumtrees [{6} {} {9} {2} {6}]) -> [6 0 9 2 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 36.829659, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {4} {9}} {0 {9} {8}}]) -> [21 17]", "(sumtrees [{} {0 {3} {2}} {0 {0}}]) -> [0 5 0]", "(sumtrees [{9 {4}} {9}]) -> [13 9]", "(sumtrees [{}]) -> [0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 52.867122, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {0}} {8 {3 {5 {5}} {2 {2} {6}}}} {8 {7}} {}]) -> [6 31 15 0]", "(sumtrees [{0 {7 {0} {1 {8} {7}}}} {9 {0}}]) -> [23 9]", "(sumtrees [{8 {2} {2 {1}}} {6 {2}} {} {6 {9 {4} {6 {2}}} {3 {1 {0} {6}}}} {9}]) -> [13 8 0 37 9]", "(sumtrees [{5 {8 {1 {6}}}} {5 {3 {2 {9} {1}} {7}}} {4 {9} {0}} {1 {2}}]) -> [20 27 13 3]", "(sumtrees [{9} {4 {7 {4 {9}} {0 {7}}}}]) -> [9 31]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.120311, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {5}} {1} {}]) -> [8 1 0]", "(sumtrees [{2} {2 {1} {5}}]) -> [2 8]", "(sumtrees [{3} {5 {8} {6}} {4 {4 {4} {6}}}]) -> [3 19 18]", "(sumtrees [{} {3} {} {1 {1} {3 {4} {7}}} {2 {0}}]) -> [0 3 0 16 2]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 63.031145, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{6 {1}} {4 {3} {2}} {3}]) -> [7 9 3]", "(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{8 {1} {9 {5 {7} {5}}}} {}]) -> [35 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.46463, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {2} {4 {6}}]) -> [0 2 10]", "(sumtrees [{5 {8}}]) -> [13]", "(sumtrees [{} {5 {5} {3}} {6 {3} {9}}]) -> [0 13 18]", "(sumtrees [{2}]) -> [2]", "(sumtrees [{5 {0}} {9}]) -> [5 9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 41.540198, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {1 {5}}]) -> [4 6]", "(sumtrees [{8} {} {} {2}]) -> [8 0 0 2]", "(sumtrees [{2} {2 {4}}]) -> [2 6]", "(sumtrees [{} {6 {9 {5}} {0 {2}}}]) -> [0 22]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 40.050085, "examples": ["(sumtrees []) -> []", "(sumtrees [{0} {1 {0}} {}]) -> [0 1 0]", "(sumtrees []) -> []", "(sumtrees [{0 {9} {5}} {5 {9}} {8 {7}} {9 {6} {4 {3}}} {7}]) -> [14 14 15 22 7]", "(sumtrees [{8 {2 {2} {9}}}]) -> [21]", "(sumtrees [{} {0} {0}]) -> [0 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.413302, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {4}} {3} {6 {0} {3}}]) -> [13 3 9]", "(sumtrees [{9} {} {0 {9 {1 {7} {4}}} {3 {3 {6}} {0 {0}}}} {9 {6} {4}}]) -> [9 0 33 19]", "(sumtrees [{5 {2 {1}} {8 {9}}} {0 {2}}]) -> [25 2]", "(sumtrees [{7 {4}} {2} {0}]) -> [11 2 0]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 57.59905, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {2} {7}} {9} {2} {6 {5 {2} {2}}}]) -> [11 9 2 15]", "(sumtrees [{2} {3}]) -> [2 3]", "(sumtrees [{1 {1}} {8 {3 {9 {3}}}} {}]) -> [2 23 0]", "(sumtrees [{0} {7 {3 {5}}} {} {} {}]) -> [0 15 0 0 0]", "(sumtrees [{3 {4}} {8}]) -> [7 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.510276, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {6}} {8 {4}} {5 {3} {1}} {2}]) -> [10 12 9 2]", "(sumtrees [{2 {4 {1} {4}} {0 {9}}} {5} {7 {0} {9 {8} {2}}}]) -> [20 5 26]", "(sumtrees [{9 {9 {6 {4}} {2 {9} {8}}} {5 {7 {0}}}} {9 {0 {7} {9}}} {} {}]) -> [59 25 0 0]", "(sumtrees [{9 {7}}]) -> [16]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 25.593251, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {9 {1 {2} {1}} {6 {1} {7}}} {0 {9 {0}} {6 {6}}}} {1 {9} {2}} {7 {2} {6}}]) -> [54 12 15]", "(sumtrees [{4 {5 {6}} {2 {1}}} {}]) -> [18 0]", "(sumtrees [{7} {0 {0 {6}}}]) -> [7 6]", "(sumtrees [{}]) -> [0]", "(sumtrees [{} {8 {7 {5}}}]) -> [0 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 32.124682, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {2}}]) -> [5]", "(sumtrees [{3 {7} {7}} {6} {1} {6 {5}} {4 {9}}]) -> [17 6 1 11 13]", "(sumtrees [{0 {8} {3 {1} {0}}}]) -> [12]", "(sumtrees [{7 {6}} {2 {1 {7} {5}}}]) -> [13 15]", "(sumtrees [{0 {6 {5} {9 {7}}} {3}} {} {8 {4} {7}} {}]) -> [30 0 19 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.386481, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {4}} {3 {8 {9}} {2}} {4} {}]) -> [6 22 4 0]", "(sumtrees [{9} {2 {5 {6 {7}}}} {9} {2 {6} {2 {7}}}]) -> [9 20 9 17]", "(sumtrees []) -> []", "(sumtrees [{} {6} {8 {2 {9 {2}}}} {8}]) -> [0 6 21 8]", "(sumtrees [{9 {3} {5 {3}}} {5 {3} {8}} {} {} {3 {4 {3 {0}}}}]) -> [20 16 0 0 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 35.24818, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {4 {4 {8} {8}}}} {} {4}]) -> [25 0 4]", "(sumtrees [{9 {6} {2}}]) -> [17]", "(sumtrees [{7}]) -> [7]", "(sumtrees [{6} {0 {6} {5}} {7} {}]) -> [6 11 7 0]", "(sumtrees [{1 {7} {6}} {}]) -> [14 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 28.8312, "examples": ["(sumtrees []) -> []", "(sumtrees [{3} {0 {1} {6}} {}]) -> [3 7 0]", "(sumtrees [{0} {5} {8 {7} {8 {3 {1}}}}]) -> [0 5 27]", "(sumtrees [{} {5} {5}]) -> [0 5 5]", "(sumtrees [{8 {5} {5}} {6 {4} {9 {6} {8}}} {2} {9 {2 {4} {9}} {6}} {}]) -> [18 33 2 30 0]", "(sumtrees [{2 {3}} {8}]) -> [5 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 31.618028, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {8 {0} {0}}} {1 {2 {3 {3}} {4 {2} {4}}}} {2 {1 {6 {1}}}}]) -> [12 19 10]", "(sumtrees [{0} {7 {7 {1} {6}}} {}]) -> [0 21 0]", "(sumtrees [{1} {5 {1}} {4 {5 {7}} {0 {7} {4}}} {2 {1}} {5 {1}}]) -> [1 6 27 3 6]", "(sumtrees [{9} {4 {1} {9}} {8} {4 {9}} {2 {2 {0} {3 {3} {3}}} {8}}]) -> [9 14 8 13 21]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 33.309146, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {4 {0} {5}} {7 {6}} {8 {5}} {8 {8} {7}}]) -> [0 9 13 13 23]", "(sumtrees [{5 {3}} {5 {0}} {1 {0 {8}}} {8 {6}} {1 {1 {7}}}]) -> [8 5 9 14 9]", "(sumtrees [{} {2 {8 {3 {1}}} {1 {6}}}]) -> [0 21]", "(sumtrees [{} {}]) -> [0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 24.95363, "examples": ["(sumtrees []) -> []", "(sumtrees [{5} {6} {9 {5}}]) -> [5 6 14]", "(sumtrees [{6 {8} {5}} {2 {2 {4}}} {0 {9} {4}} {0 {8} {4}}]) -> [19 8 13 12]", "(sumtrees [{7 {8} {6}} {5 {3}} {} {2 {0 {6} {1}}} {1}]) -> [21 8 0 9 1]", "(sumtrees [{0 {1 {8 {7}} {1}} {7 {1}}} {6 {3 {5}}} {0 {2 {2 {0} {0}}} {8 {9} {0 {7}}}} {1}]) -> [25 14 28 1]", "(sumtrees [{8 {8} {4}} {3 {7 {2} {5}}}]) -> [20 17]"]}
