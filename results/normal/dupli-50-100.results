{"examples": ["(dupli []) -> []", "(dupli [4 0 0 2 7]) -> [4 4 0 0 0 0 2 2 7 7]", "(dupli []) -> []", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [0 6 4]) -> [0 0 6 6 4 4]", "(dupli [0 2 3]) -> [0 0 2 2 3 3]", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [1 5 8 2 9]) -> [1 1 5 5 8 8 2 2 9 9]", "(dupli []) -> []", "(dupli [7 5 3]) -> [7 7 5 5 3 3]", "(dupli []) -> []", "(dupli [9 6 6 0]) -> [9 9 6 6 6 6 0 0]", "(dupli [7 3 7 9 0]) -> [7 7 3 3 7 7 9 9 0 0]", "(dupli [2 0]) -> [2 2 0 0]", "(dupli [1 5]) -> [1 1 5 5]", "(dupli [1 2 0 2]) -> [1 1 2 2 0 0 2 2]", "(dupli []) -> []", "(dupli [6 7 9 5 6]) -> [6 6 7 7 9 9 5 5 6 6]", "(dupli [9 0 1 7]) -> [9 9 0 0 1 1 7 7]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [6 2]) -> [6 6 2 2]", "(dupli [3 4 6 1]) -> [3 3 4 4 6 6 1 1]", "(dupli [7 8 4 2]) -> [7 7 8 8 4 4 2 2]", "(dupli [2 4 9 0]) -> [2 2 4 4 9 9 0 0]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [6]) -> [6 6]", "(dupli [8 1 8 6]) -> [8 8 1 1 8 8 6 6]", "(dupli [5]) -> [5 5]", "(dupli [2 6]) -> [2 2 6 6]", "(dupli [4 1 8]) -> [4 4 1 1 8 8]", "(dupli [8 6 9 2]) -> [8 8 6 6 9 9 2 2]", "(dupli [6 0 6]) -> [6 6 0 0 6 6]", "(dupli []) -> []", "(dupli [3 9]) -> [3 3 9 9]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [8 5 6]) -> [8 8 5 5 6 6]", "(dupli [2 6 2 8]) -> [2 2 6 6 2 2 8 8]", "(dupli [8 5 4 2]) -> [8 8 5 5 4 4 2 2]", "(dupli [5 9 4]) -> [5 5 9 9 4 4]", "(dupli [1 0 6]) -> [1 1 0 0 6 6]", "(dupli []) -> []", "(dupli [3 8 5 0 2]) -> [3 3 8 8 5 5 0 0 2 2]", "(dupli [5 5 7 9]) -> [5 5 5 5 7 7 9 9]", "(dupli [1 8 7 2 5]) -> [1 1 8 8 7 7 2 2 5 5]", "(dupli [4 0 6 5]) -> [4 4 0 0 6 6 5 5]", "(dupli [6 0 8 8]) -> [6 6 0 0 8 8 8 8]", "(dupli [1]) -> [1 1]", "(dupli [6 4]) -> [6 6 4 4]"], "time": 0.261312, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [7 4 3]) -> [7 7 4 4 3 3]", "(dupli [4 3 4 5]) -> [4 4 3 3 4 4 5 5]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli [7 2 9 5]) -> [7 7 2 2 9 9 5 5]", "(dupli []) -> []", "(dupli [3 7 5 1 5]) -> [3 3 7 7 5 5 1 1 5 5]", "(dupli []) -> []", "(dupli [8 6 4]) -> [8 8 6 6 4 4]", "(dupli [4 2 9]) -> [4 4 2 2 9 9]", "(dupli []) -> []", "(dupli [5 3 8]) -> [5 5 3 3 8 8]", "(dupli [6 8 5]) -> [6 6 8 8 5 5]", "(dupli [5 6 6 2 5]) -> [5 5 6 6 6 6 2 2 5 5]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [9 2 6]) -> [9 9 2 2 6 6]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli []) -> []", "(dupli [6 5 7 6]) -> [6 6 5 5 7 7 6 6]", "(dupli [0]) -> [0 0]", "(dupli [0 1 9]) -> [0 0 1 1 9 9]", "(dupli [2 0]) -> [2 2 0 0]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli []) -> []", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [8 4 3 8]) -> [8 8 4 4 3 3 8 8]", "(dupli [1 3 3 9]) -> [1 1 3 3 3 3 9 9]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [6 4 8 9 9]) -> [6 6 4 4 8 8 9 9 9 9]", "(dupli [6 8 5 3 1]) -> [6 6 8 8 5 5 3 3 1 1]", "(dupli [7 8 9 8]) -> [7 7 8 8 9 9 8 8]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [9 8 9 1 3]) -> [9 9 8 8 9 9 1 1 3 3]", "(dupli []) -> []", "(dupli [6 4 0 1]) -> [6 6 4 4 0 0 1 1]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli [8]) -> [8 8]", "(dupli [8 2]) -> [8 8 2 2]", "(dupli [2 0 8 6]) -> [2 2 0 0 8 8 6 6]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli [4]) -> [4 4]", "(dupli [8 4]) -> [8 8 4 4]"], "time": 0.269071, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 7 0 5]) -> [5 5 7 7 0 0 5 5]", "(dupli [3 0 9 6 5]) -> [3 3 0 0 9 9 6 6 5 5]", "(dupli [0]) -> [0 0]", "(dupli [2 8 2 7]) -> [2 2 8 8 2 2 7 7]", "(dupli [0]) -> [0 0]", "(dupli [5]) -> [5 5]", "(dupli [1]) -> [1 1]", "(dupli [2 7 4]) -> [2 2 7 7 4 4]", "(dupli []) -> []", "(dupli [3 1 4 4]) -> [3 3 1 1 4 4 4 4]", "(dupli [3 7 3 0]) -> [3 3 7 7 3 3 0 0]", "(dupli [1 7 5]) -> [1 1 7 7 5 5]", "(dupli [0 8 6 0 9]) -> [0 0 8 8 6 6 0 0 9 9]", "(dupli [3]) -> [3 3]", "(dupli [9 9 3]) -> [9 9 9 9 3 3]", "(dupli [5]) -> [5 5]", "(dupli [7 4 1 6 9]) -> [7 7 4 4 1 1 6 6 9 9]", "(dupli [2 5 2 9]) -> [2 2 5 5 2 2 9 9]", "(dupli [9 5 1 5]) -> [9 9 5 5 1 1 5 5]", "(dupli [7]) -> [7 7]", "(dupli [9 0 5]) -> [9 9 0 0 5 5]", "(dupli [3 4 0 1 7]) -> [3 3 4 4 0 0 1 1 7 7]", "(dupli [3]) -> [3 3]", "(dupli [7]) -> [7 7]", "(dupli [7 6 0 1 8]) -> [7 7 6 6 0 0 1 1 8 8]", "(dupli [7 0 4 4]) -> [7 7 0 0 4 4 4 4]", "(dupli [4 3 0 4 4]) -> [4 4 3 3 0 0 4 4 4 4]", "(dupli [4 5 2 7 0]) -> [4 4 5 5 2 2 7 7 0 0]", "(dupli [4 3 2 5 8]) -> [4 4 3 3 2 2 5 5 8 8]", "(dupli [0 3 0]) -> [0 0 3 3 0 0]", "(dupli [7]) -> [7 7]", "(dupli [7 0]) -> [7 7 0 0]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [8 3 2 1 7]) -> [8 8 3 3 2 2 1 1 7 7]", "(dupli [0 7 7 9 6]) -> [0 0 7 7 7 7 9 9 6 6]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [8 7 6 2 1]) -> [8 8 7 7 6 6 2 2 1 1]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [6 1 1 7]) -> [6 6 1 1 1 1 7 7]", "(dupli [0 4]) -> [0 0 4 4]", "(dupli []) -> []", "(dupli [5 8 5 6]) -> [5 5 8 8 5 5 6 6]", "(dupli [8 7 9 8 8]) -> [8 8 7 7 9 9 8 8 8 8]", "(dupli [5]) -> [5 5]", "(dupli [7 3 7]) -> [7 7 3 3 7 7]", "(dupli [2 1 5 3 2]) -> [2 2 1 1 5 5 3 3 2 2]"], "time": 0.208427, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 1 5]) -> [0 0 1 1 5 5]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [4 4 2 5]) -> [4 4 4 4 2 2 5 5]", "(dupli [1 3 0 5]) -> [1 1 3 3 0 0 5 5]", "(dupli [7 9 7 0]) -> [7 7 9 9 7 7 0 0]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli []) -> []", "(dupli [1 3 8 0]) -> [1 1 3 3 8 8 0 0]", "(dupli [5 0]) -> [5 5 0 0]", "(dupli [7 8 4]) -> [7 7 8 8 4 4]", "(dupli []) -> []", "(dupli [1 1 5 3]) -> [1 1 1 1 5 5 3 3]", "(dupli [6 0]) -> [6 6 0 0]", "(dupli [0 2 7]) -> [0 0 2 2 7 7]", "(dupli [8 5 3 1]) -> [8 8 5 5 3 3 1 1]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [1 8 2]) -> [1 1 8 8 2 2]", "(dupli [6 6 5]) -> [6 6 6 6 5 5]", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [0 7 4]) -> [0 0 7 7 4 4]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli [4]) -> [4 4]", "(dupli [0 5 6 8]) -> [0 0 5 5 6 6 8 8]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [0 6 0 0]) -> [0 0 6 6 0 0 0 0]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [6 6 7]) -> [6 6 6 6 7 7]", "(dupli [8 1 0 4 6]) -> [8 8 1 1 0 0 4 4 6 6]", "(dupli [2]) -> [2 2]", "(dupli [8 2 7]) -> [8 8 2 2 7 7]", "(dupli []) -> []", "(dupli [1 7 9]) -> [1 1 7 7 9 9]", "(dupli [3 6 1]) -> [3 3 6 6 1 1]", "(dupli [9 1 1 4]) -> [9 9 1 1 1 1 4 4]", "(dupli [7 8 5]) -> [7 7 8 8 5 5]", "(dupli [1]) -> [1 1]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [9 5 2 4]) -> [9 9 5 5 2 2 4 4]", "(dupli [7 7 7 9 0]) -> [7 7 7 7 7 7 9 9 0 0]", "(dupli [6 1 2 8 9]) -> [6 6 1 1 2 2 8 8 9 9]", "(dupli [6 0 3 9 6]) -> [6 6 0 0 3 3 9 9 6 6]", "(dupli [6 5]) -> [6 6 5 5]", "(dupli [6 7 5 0]) -> [6 6 7 7 5 5 0 0]", "(dupli [3 5]) -> [3 3 5 5]", "(dupli [6 7 2 6 4]) -> [6 6 7 7 2 2 6 6 4 4]"], "time": 0.263424, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [6 7 6]) -> [6 6 7 7 6 6]", "(dupli [6 0 4 0 9]) -> [6 6 0 0 4 4 0 0 9 9]", "(dupli []) -> []", "(dupli [3 0 0]) -> [3 3 0 0 0 0]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [2 5 1 8 2]) -> [2 2 5 5 1 1 8 8 2 2]", "(dupli [5]) -> [5 5]", "(dupli [8 6 7]) -> [8 8 6 6 7 7]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [5 5 8 1 2]) -> [5 5 5 5 8 8 1 1 2 2]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [1 0 8]) -> [1 1 0 0 8 8]", "(dupli [2 8 0 0 4]) -> [2 2 8 8 0 0 0 0 4 4]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [4 1 8]) -> [4 4 1 1 8 8]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [2 6 0 4 3]) -> [2 2 6 6 0 0 4 4 3 3]", "(dupli [6]) -> [6 6]", "(dupli [9 6 9 3]) -> [9 9 6 6 9 9 3 3]", "(dupli [6 8]) -> [6 6 8 8]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [5 2 7 3 5]) -> [5 5 2 2 7 7 3 3 5 5]", "(dupli [2 1 2 9]) -> [2 2 1 1 2 2 9 9]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [2 7 0 6]) -> [2 2 7 7 0 0 6 6]", "(dupli [8]) -> [8 8]", "(dupli [0 3 9 6]) -> [0 0 3 3 9 9 6 6]", "(dupli [3 7]) -> [3 3 7 7]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [5 0 5 1 8]) -> [5 5 0 0 5 5 1 1 8 8]", "(dupli [5 6 3 7 6]) -> [5 5 6 6 3 3 7 7 6 6]", "(dupli [2 1 9 6 3]) -> [2 2 1 1 9 9 6 6 3 3]", "(dupli [2 2]) -> [2 2 2 2]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 1]) -> [5 5 1 1]", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [8 8 3 8 1]) -> [8 8 8 8 3 3 8 8 1 1]", "(dupli [5 2 0 1]) -> [5 5 2 2 0 0 1 1]"], "time": 0.247777, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 0 4 5 1]) -> [3 3 0 0 4 4 5 5 1 1]", "(dupli [9 3 7]) -> [9 9 3 3 7 7]", "(dupli []) -> []", "(dupli [9 3 2]) -> [9 9 3 3 2 2]", "(dupli [6 2 0 5 4]) -> [6 6 2 2 0 0 5 5 4 4]", "(dupli [6 9 6 0]) -> [6 6 9 9 6 6 0 0]", "(dupli []) -> []", "(dupli [0 5 8 0 8]) -> [0 0 5 5 8 8 0 0 8 8]", "(dupli [9 9 8 9 7]) -> [9 9 9 9 8 8 9 9 7 7]", "(dupli [4 6 8]) -> [4 4 6 6 8 8]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli [5 5 6 2 7]) -> [5 5 5 5 6 6 2 2 7 7]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli []) -> []", "(dupli [6 3 6]) -> [6 6 3 3 6 6]", "(dupli [0 9 2]) -> [0 0 9 9 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 0 8 1]) -> [8 8 0 0 8 8 1 1]", "(dupli [0 8 7 8]) -> [0 0 8 8 7 7 8 8]", "(dupli [9 2 1 5]) -> [9 9 2 2 1 1 5 5]", "(dupli [2 1 4 3 0]) -> [2 2 1 1 4 4 3 3 0 0]", "(dupli [0 0 9 4]) -> [0 0 0 0 9 9 4 4]", "(dupli []) -> []", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [5 6 9 9]) -> [5 5 6 6 9 9 9 9]", "(dupli [9 2]) -> [9 9 2 2]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [4 7 7 0]) -> [4 4 7 7 7 7 0 0]", "(dupli [7 9 7 7 5]) -> [7 7 9 9 7 7 7 7 5 5]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 9 3 8 2]) -> [8 8 9 9 3 3 8 8 2 2]", "(dupli [1]) -> [1 1]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [1 1 1 2]) -> [1 1 1 1 1 1 2 2]", "(dupli [4 2 4 8]) -> [4 4 2 2 4 4 8 8]"], "time": 0.289708, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7 5 1]) -> [7 7 5 5 1 1]", "(dupli []) -> []", "(dupli [9 6]) -> [9 9 6 6]", "(dupli [7 5 3 7 8]) -> [7 7 5 5 3 3 7 7 8 8]", "(dupli [2 8 9 3]) -> [2 2 8 8 9 9 3 3]", "(dupli [0]) -> [0 0]", "(dupli [3 0 5 4 6]) -> [3 3 0 0 5 5 4 4 6 6]", "(dupli [7 9 9 6]) -> [7 7 9 9 9 9 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 5 4 6 1]) -> [3 3 5 5 4 4 6 6 1 1]", "(dupli [6]) -> [6 6]", "(dupli [7 7 4 1 8]) -> [7 7 7 7 4 4 1 1 8 8]", "(dupli [1 8 9 7 8]) -> [1 1 8 8 9 9 7 7 8 8]", "(dupli [9 1 3 8 7]) -> [9 9 1 1 3 3 8 8 7 7]", "(dupli [7 9 9 2]) -> [7 7 9 9 9 9 2 2]", "(dupli [1 8 6 6 3]) -> [1 1 8 8 6 6 6 6 3 3]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [8 2]) -> [8 8 2 2]", "(dupli []) -> []", "(dupli [5 0 7]) -> [5 5 0 0 7 7]", "(dupli [8 7 1 6 9]) -> [8 8 7 7 1 1 6 6 9 9]", "(dupli [5]) -> [5 5]", "(dupli [9 9 4 5]) -> [9 9 9 9 4 4 5 5]", "(dupli [0]) -> [0 0]", "(dupli [2 2 9]) -> [2 2 2 2 9 9]", "(dupli []) -> []", "(dupli [7 7 4]) -> [7 7 7 7 4 4]", "(dupli [7 3 9 6]) -> [7 7 3 3 9 9 6 6]", "(dupli [7]) -> [7 7]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [8]) -> [8 8]", "(dupli [3 3 9 0]) -> [3 3 3 3 9 9 0 0]", "(dupli []) -> []", "(dupli [8 3 3]) -> [8 8 3 3 3 3]", "(dupli [3 7]) -> [3 3 7 7]", "(dupli [7 5 3 0 8]) -> [7 7 5 5 3 3 0 0 8 8]", "(dupli [4 0 3]) -> [4 4 0 0 3 3]", "(dupli [0 0 7 4 8]) -> [0 0 0 0 7 7 4 4 8 8]", "(dupli [1 9 3 4]) -> [1 1 9 9 3 3 4 4]", "(dupli [6 7 7 5 4]) -> [6 6 7 7 7 7 5 5 4 4]", "(dupli []) -> []", "(dupli [8 5 1 8 5]) -> [8 8 5 5 1 1 8 8 5 5]", "(dupli []) -> []"], "time": 0.264972, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [1]) -> [1 1]", "(dupli [4 3 9 2]) -> [4 4 3 3 9 9 2 2]", "(dupli [4 8 4]) -> [4 4 8 8 4 4]", "(dupli [6 2 8 2]) -> [6 6 2 2 8 8 2 2]", "(dupli [4]) -> [4 4]", "(dupli [8]) -> [8 8]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [0 1 4 2 2]) -> [0 0 1 1 4 4 2 2 2 2]", "(dupli [5]) -> [5 5]", "(dupli [5 4]) -> [5 5 4 4]", "(dupli [8 9 3 4 3]) -> [8 8 9 9 3 3 4 4 3 3]", "(dupli [5 6]) -> [5 5 6 6]", "(dupli [9 4 7 4 5]) -> [9 9 4 4 7 7 4 4 5 5]", "(dupli [9 4 5]) -> [9 9 4 4 5 5]", "(dupli [6 9 4 3 9]) -> [6 6 9 9 4 4 3 3 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [1]) -> [1 1]", "(dupli [8 2 1 8 6]) -> [8 8 2 2 1 1 8 8 6 6]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli []) -> []", "(dupli [0 5 6 2 9]) -> [0 0 5 5 6 6 2 2 9 9]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [2 7 8 3 2]) -> [2 2 7 7 8 8 3 3 2 2]", "(dupli []) -> []", "(dupli [8 9]) -> [8 8 9 9]", "(dupli []) -> []", "(dupli [1 3 2 1]) -> [1 1 3 3 2 2 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 3 0 2 4]) -> [7 7 3 3 0 0 2 2 4 4]", "(dupli [4 8 1 9 2]) -> [4 4 8 8 1 1 9 9 2 2]", "(dupli [8 6 7]) -> [8 8 6 6 7 7]", "(dupli [6 8]) -> [6 6 8 8]", "(dupli [5 7 0 4]) -> [5 5 7 7 0 0 4 4]", "(dupli [2 1 6 0 2]) -> [2 2 1 1 6 6 0 0 2 2]", "(dupli [7 4 2 9]) -> [7 7 4 4 2 2 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 7 6 7]) -> [4 4 7 7 6 6 7 7]", "(dupli [2 9 0 1 5]) -> [2 2 9 9 0 0 1 1 5 5]", "(dupli [4]) -> [4 4]", "(dupli [9 1 2]) -> [9 9 1 1 2 2]"], "time": 0.211915, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7 2 1 6]) -> [7 7 2 2 1 1 6 6]", "(dupli [6 3]) -> [6 6 3 3]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [7 1 8]) -> [7 7 1 1 8 8]", "(dupli [6 2 9]) -> [6 6 2 2 9 9]", "(dupli [7 6 5 8]) -> [7 7 6 6 5 5 8 8]", "(dupli [6 0 3 9]) -> [6 6 0 0 3 3 9 9]", "(dupli [1 5 1 8 9]) -> [1 1 5 5 1 1 8 8 9 9]", "(dupli []) -> []", "(dupli [4 4 8 0]) -> [4 4 4 4 8 8 0 0]", "(dupli [2]) -> [2 2]", "(dupli [5 7 1 1]) -> [5 5 7 7 1 1 1 1]", "(dupli [6 9 8 9]) -> [6 6 9 9 8 8 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 3 9 0]) -> [0 0 3 3 9 9 0 0]", "(dupli [5 4]) -> [5 5 4 4]", "(dupli [6 7 2 1 5]) -> [6 6 7 7 2 2 1 1 5 5]", "(dupli [2]) -> [2 2]", "(dupli [7]) -> [7 7]", "(dupli [9 4 5 4 9]) -> [9 9 4 4 5 5 4 4 9 9]", "(dupli [5 0 9]) -> [5 5 0 0 9 9]", "(dupli [2 2 9]) -> [2 2 2 2 9 9]", "(dupli [7 2 0]) -> [7 7 2 2 0 0]", "(dupli [1 8]) -> [1 1 8 8]", "(dupli [3 7 7 4]) -> [3 3 7 7 7 7 4 4]", "(dupli [9 9 8]) -> [9 9 9 9 8 8]", "(dupli [7]) -> [7 7]", "(dupli [1 5]) -> [1 1 5 5]", "(dupli []) -> []", "(dupli [9 7 5]) -> [9 9 7 7 5 5]", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [1 9 8 0]) -> [1 1 9 9 8 8 0 0]", "(dupli [6 4 5 2 3]) -> [6 6 4 4 5 5 2 2 3 3]", "(dupli [9 3 2]) -> [9 9 3 3 2 2]", "(dupli [4 1 9]) -> [4 4 1 1 9 9]", "(dupli []) -> []", "(dupli [5 7 2 4]) -> [5 5 7 7 2 2 4 4]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [9 5 6]) -> [9 9 5 5 6 6]", "(dupli [3 7]) -> [3 3 7 7]", "(dupli [2]) -> [2 2]", "(dupli [3 4 1 1]) -> [3 3 4 4 1 1 1 1]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [8 0 8 4]) -> [8 8 0 0 8 8 4 4]", "(dupli [6 3 8 1]) -> [6 6 3 3 8 8 1 1]"], "time": 0.235556, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 4 9]) -> [5 5 4 4 9 9]", "(dupli [2 4 3 6]) -> [2 2 4 4 3 3 6 6]", "(dupli [0 2 0 7 5]) -> [0 0 2 2 0 0 7 7 5 5]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [6 2 1]) -> [6 6 2 2 1 1]", "(dupli []) -> []", "(dupli [2 6]) -> [2 2 6 6]", "(dupli [8]) -> [8 8]", "(dupli [0]) -> [0 0]", "(dupli [3 0 1]) -> [3 3 0 0 1 1]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [5]) -> [5 5]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 8 2 4]) -> [0 0 8 8 2 2 4 4]", "(dupli [4 0 5]) -> [4 4 0 0 5 5]", "(dupli [8]) -> [8 8]", "(dupli [2]) -> [2 2]", "(dupli [9 0 1 1]) -> [9 9 0 0 1 1 1 1]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [4 9 8 1 4]) -> [4 4 9 9 8 8 1 1 4 4]", "(dupli [7 7 6 3]) -> [7 7 7 7 6 6 3 3]", "(dupli [6 9 5 3 8]) -> [6 6 9 9 5 5 3 3 8 8]", "(dupli [5 9]) -> [5 5 9 9]", "(dupli []) -> []", "(dupli [4 2 8]) -> [4 4 2 2 8 8]", "(dupli []) -> []", "(dupli [0 9 5 7 4]) -> [0 0 9 9 5 5 7 7 4 4]", "(dupli [2 4 7 0 1]) -> [2 2 4 4 7 7 0 0 1 1]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [2 0 0 1]) -> [2 2 0 0 0 0 1 1]", "(dupli [3 5]) -> [3 3 5 5]", "(dupli [7 2 5 9 1]) -> [7 7 2 2 5 5 9 9 1 1]", "(dupli [0 9 0 3 1]) -> [0 0 9 9 0 0 3 3 1 1]", "(dupli [9]) -> [9 9]", "(dupli [7 3 6 4 2]) -> [7 7 3 3 6 6 4 4 2 2]", "(dupli [1 4 5 9 2]) -> [1 1 4 4 5 5 9 9 2 2]", "(dupli [9 2 4 5]) -> [9 9 2 2 4 4 5 5]", "(dupli [8 2 9]) -> [8 8 2 2 9 9]", "(dupli [8 6 2 9]) -> [8 8 6 6 2 2 9 9]", "(dupli []) -> []", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [8 3 3 6 3]) -> [8 8 3 3 3 3 6 6 3 3]", "(dupli [7]) -> [7 7]", "(dupli [6 8 3 0]) -> [6 6 8 8 3 3 0 0]", "(dupli []) -> []"], "time": 0.239941, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 4 9 5]) -> [4 4 4 4 9 9 5 5]", "(dupli [9]) -> [9 9]", "(dupli [8 8 3 6]) -> [8 8 8 8 3 3 6 6]", "(dupli [7 5 1 3 2]) -> [7 7 5 5 1 1 3 3 2 2]", "(dupli [9 1 4 1]) -> [9 9 1 1 4 4 1 1]", "(dupli [9 3 3 7 9]) -> [9 9 3 3 3 3 7 7 9 9]", "(dupli [5]) -> [5 5]", "(dupli [6]) -> [6 6]", "(dupli [9 9]) -> [9 9 9 9]", "(dupli [6 5 2 9]) -> [6 6 5 5 2 2 9 9]", "(dupli [1 5 5 3 6]) -> [1 1 5 5 5 5 3 3 6 6]", "(dupli [6 3 5]) -> [6 6 3 3 5 5]", "(dupli [7]) -> [7 7]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [1 6 0]) -> [1 1 6 6 0 0]", "(dupli [8 2 7]) -> [8 8 2 2 7 7]", "(dupli []) -> []", "(dupli [1 9 4]) -> [1 1 9 9 4 4]", "(dupli [0]) -> [0 0]", "(dupli [8 6 4 1 9]) -> [8 8 6 6 4 4 1 1 9 9]", "(dupli [7 4 4]) -> [7 7 4 4 4 4]", "(dupli [6 7 1 9]) -> [6 6 7 7 1 1 9 9]", "(dupli [8 8 1]) -> [8 8 8 8 1 1]", "(dupli [3 8]) -> [3 3 8 8]", "(dupli [8 2 2 6]) -> [8 8 2 2 2 2 6 6]", "(dupli [9 5]) -> [9 9 5 5]", "(dupli []) -> []", "(dupli [4 0 3 5 0]) -> [4 4 0 0 3 3 5 5 0 0]", "(dupli [3]) -> [3 3]", "(dupli [4 2 5 2]) -> [4 4 2 2 5 5 2 2]", "(dupli [7 9 3]) -> [7 7 9 9 3 3]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [8]) -> [8 8]", "(dupli [6 6 2]) -> [6 6 6 6 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [4 5 4 8 6]) -> [4 4 5 5 4 4 8 8 6 6]", "(dupli [4 5 1]) -> [4 4 5 5 1 1]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [3 4 1 6]) -> [3 3 4 4 1 1 6 6]", "(dupli [4 9 5 2]) -> [4 4 9 9 5 5 2 2]", "(dupli [7 0 9]) -> [7 7 0 0 9 9]", "(dupli [8 3 7]) -> [8 8 3 3 7 7]", "(dupli [0 2 5]) -> [0 0 2 2 5 5]"], "time": 0.215095, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 5 0 2 3]) -> [5 5 5 5 0 0 2 2 3 3]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [3 5 8]) -> [3 3 5 5 8 8]", "(dupli [3 0 1]) -> [3 3 0 0 1 1]", "(dupli [4]) -> [4 4]", "(dupli [6]) -> [6 6]", "(dupli [3]) -> [3 3]", "(dupli [0 6 8 3 0]) -> [0 0 6 6 8 8 3 3 0 0]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [9 2 6 4]) -> [9 9 2 2 6 6 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 4 2 2 4]) -> [7 7 4 4 2 2 2 2 4 4]", "(dupli [1 8 5 6 5]) -> [1 1 8 8 5 5 6 6 5 5]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli [6 0 2]) -> [6 6 0 0 2 2]", "(dupli [3 5 2]) -> [3 3 5 5 2 2]", "(dupli []) -> []", "(dupli [8 2]) -> [8 8 2 2]", "(dupli [8 3]) -> [8 8 3 3]", "(dupli []) -> []", "(dupli [2 7 2 9]) -> [2 2 7 7 2 2 9 9]", "(dupli [0 3 4]) -> [0 0 3 3 4 4]", "(dupli [0 3]) -> [0 0 3 3]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [3 9 7 1 4]) -> [3 3 9 9 7 7 1 1 4 4]", "(dupli [2 8 3 4 5]) -> [2 2 8 8 3 3 4 4 5 5]", "(dupli [4 1 7]) -> [4 4 1 1 7 7]", "(dupli [0 9 4 8 8]) -> [0 0 9 9 4 4 8 8 8 8]", "(dupli [1 6 8 0 3]) -> [1 1 6 6 8 8 0 0 3 3]", "(dupli [3 6 6 2 3]) -> [3 3 6 6 6 6 2 2 3 3]", "(dupli [6 9 0 3]) -> [6 6 9 9 0 0 3 3]", "(dupli [1 5 2]) -> [1 1 5 5 2 2]", "(dupli []) -> []", "(dupli [1 1 4 3]) -> [1 1 1 1 4 4 3 3]", "(dupli [2]) -> [2 2]", "(dupli [3]) -> [3 3]", "(dupli [6]) -> [6 6]", "(dupli [6 5 4]) -> [6 6 5 5 4 4]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [5 2 3 3 3]) -> [5 5 2 2 3 3 3 3 3 3]", "(dupli [4 4 9 0]) -> [4 4 4 4 9 9 0 0]", "(dupli [4 7 1 7]) -> [4 4 7 7 1 1 7 7]", "(dupli [3 5 7 3]) -> [3 3 5 5 7 7 3 3]", "(dupli [1]) -> [1 1]", "(dupli [8 3 9]) -> [8 8 3 3 9 9]"], "time": 0.301642, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [9 9 5 2 9]) -> [9 9 9 9 5 5 2 2 9 9]", "(dupli []) -> []", "(dupli [3 8 9 7]) -> [3 3 8 8 9 9 7 7]", "(dupli [2 6 4 4]) -> [2 2 6 6 4 4 4 4]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [2 5 5 9]) -> [2 2 5 5 5 5 9 9]", "(dupli [4 9 4 4]) -> [4 4 9 9 4 4 4 4]", "(dupli [7]) -> [7 7]", "(dupli [1]) -> [1 1]", "(dupli [2 4 2]) -> [2 2 4 4 2 2]", "(dupli [2]) -> [2 2]", "(dupli [0 4 3 4 9]) -> [0 0 4 4 3 3 4 4 9 9]", "(dupli [4 0 2]) -> [4 4 0 0 2 2]", "(dupli [0 8 9 6]) -> [0 0 8 8 9 9 6 6]", "(dupli [4 3 9 0 4]) -> [4 4 3 3 9 9 0 0 4 4]", "(dupli [0 6 9 2]) -> [0 0 6 6 9 9 2 2]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [4 9 7]) -> [4 4 9 9 7 7]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [5 2 0 3]) -> [5 5 2 2 0 0 3 3]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [5 0]) -> [5 5 0 0]", "(dupli [4 9 1 8]) -> [4 4 9 9 1 1 8 8]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [4 3 9 7]) -> [4 4 3 3 9 9 7 7]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli []) -> []", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [3 3 8]) -> [3 3 3 3 8 8]", "(dupli [5 0 8 1]) -> [5 5 0 0 8 8 1 1]", "(dupli [0 2 6]) -> [0 0 2 2 6 6]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [1 4 6]) -> [1 1 4 4 6 6]", "(dupli [5 2 9]) -> [5 5 2 2 9 9]", "(dupli [0]) -> [0 0]", "(dupli [4 1 8 3]) -> [4 4 1 1 8 8 3 3]", "(dupli []) -> []", "(dupli [6 8 2 3 9]) -> [6 6 8 8 2 2 3 3 9 9]", "(dupli [3 6 2 2]) -> [3 3 6 6 2 2 2 2]", "(dupli [8]) -> [8 8]"], "time": 0.18697, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 9 3 2 6]) -> [8 8 9 9 3 3 2 2 6 6]", "(dupli []) -> []", "(dupli [7 7 1 0 7]) -> [7 7 7 7 1 1 0 0 7 7]", "(dupli [6 3 3 0]) -> [6 6 3 3 3 3 0 0]", "(dupli [1 1 4 3 0]) -> [1 1 1 1 4 4 3 3 0 0]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli []) -> []", "(dupli [5 2 8 1 1]) -> [5 5 2 2 8 8 1 1 1 1]", "(dupli [4 8 3]) -> [4 4 8 8 3 3]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [9 8 7 6 1]) -> [9 9 8 8 7 7 6 6 1 1]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli []) -> []", "(dupli [3 3 7]) -> [3 3 3 3 7 7]", "(dupli [9 5 0]) -> [9 9 5 5 0 0]", "(dupli [9 7 7 6]) -> [9 9 7 7 7 7 6 6]", "(dupli [4 3 0 5]) -> [4 4 3 3 0 0 5 5]", "(dupli [0 8 5 6 1]) -> [0 0 8 8 5 5 6 6 1 1]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [6 1]) -> [6 6 1 1]", "(dupli [2 7 9 6]) -> [2 2 7 7 9 9 6 6]", "(dupli [1 8 1 9]) -> [1 1 8 8 1 1 9 9]", "(dupli [9 6 9 4]) -> [9 9 6 6 9 9 4 4]", "(dupli [1]) -> [1 1]", "(dupli [5 8 8 4 0]) -> [5 5 8 8 8 8 4 4 0 0]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [9]) -> [9 9]", "(dupli [3 6 3 9]) -> [3 3 6 6 3 3 9 9]", "(dupli [3 3 6 2]) -> [3 3 3 3 6 6 2 2]", "(dupli [8]) -> [8 8]", "(dupli [8 0 6]) -> [8 8 0 0 6 6]", "(dupli [0 3 8]) -> [0 0 3 3 8 8]", "(dupli [0 3 3]) -> [0 0 3 3 3 3]", "(dupli []) -> []", "(dupli [0 2 9 9 4]) -> [0 0 2 2 9 9 9 9 4 4]", "(dupli [2 5 5 4]) -> [2 2 5 5 5 5 4 4]", "(dupli [1 2 1 0 5]) -> [1 1 2 2 1 1 0 0 5 5]", "(dupli [6]) -> [6 6]", "(dupli [6]) -> [6 6]", "(dupli [5 1]) -> [5 5 1 1]", "(dupli []) -> []"], "time": 0.216035, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 2 8]) -> [9 9 2 2 8 8]", "(dupli [2 7 9 0]) -> [2 2 7 7 9 9 0 0]", "(dupli [9]) -> [9 9]", "(dupli [3 0 2 4]) -> [3 3 0 0 2 2 4 4]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [4 8 7 1 7]) -> [4 4 8 8 7 7 1 1 7 7]", "(dupli [0 1 4 0]) -> [0 0 1 1 4 4 0 0]", "(dupli [3 4 0 5 8]) -> [3 3 4 4 0 0 5 5 8 8]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [7 8 6]) -> [7 7 8 8 6 6]", "(dupli [6 6 5]) -> [6 6 6 6 5 5]", "(dupli [0 4 0]) -> [0 0 4 4 0 0]", "(dupli []) -> []", "(dupli [4 6 4]) -> [4 4 6 6 4 4]", "(dupli [9]) -> [9 9]", "(dupli [6 4 8 1]) -> [6 6 4 4 8 8 1 1]", "(dupli [8 1]) -> [8 8 1 1]", "(dupli []) -> []", "(dupli [6 8 8]) -> [6 6 8 8 8 8]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [5 5 0]) -> [5 5 5 5 0 0]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [6 0 3 8 8]) -> [6 6 0 0 3 3 8 8 8 8]", "(dupli [1 3 9 5 3]) -> [1 1 3 3 9 9 5 5 3 3]", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [5 7 4 7 4]) -> [5 5 7 7 4 4 7 7 4 4]", "(dupli [3 3 7 4]) -> [3 3 3 3 7 7 4 4]", "(dupli [6 0]) -> [6 6 0 0]", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [4 6 5]) -> [4 4 6 6 5 5]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [0]) -> [0 0]", "(dupli [2]) -> [2 2]", "(dupli [4 6 0 4 3]) -> [4 4 6 6 0 0 4 4 3 3]", "(dupli [7 8 5]) -> [7 7 8 8 5 5]", "(dupli [8 6 4 8]) -> [8 8 6 6 4 4 8 8]", "(dupli [1 0 1]) -> [1 1 0 0 1 1]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [3 1 2]) -> [3 3 1 1 2 2]", "(dupli [8 6 6 3]) -> [8 8 6 6 6 6 3 3]", "(dupli [1 9 9 9 6]) -> [1 1 9 9 9 9 9 9 6 6]", "(dupli []) -> []", "(dupli [7 9 2 1 4]) -> [7 7 9 9 2 2 1 1 4 4]", "(dupli [2 7 1 4]) -> [2 2 7 7 1 1 4 4]"], "time": 0.257635, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [1 5 9 9]) -> [1 1 5 5 9 9 9 9]", "(dupli [3 6 3]) -> [3 3 6 6 3 3]", "(dupli []) -> []", "(dupli [4 4 7]) -> [4 4 4 4 7 7]", "(dupli [2 9 3 2]) -> [2 2 9 9 3 3 2 2]", "(dupli []) -> []", "(dupli [5 9 6 8]) -> [5 5 9 9 6 6 8 8]", "(dupli [2 9 6 7]) -> [2 2 9 9 6 6 7 7]", "(dupli []) -> []", "(dupli [2 4 1 0]) -> [2 2 4 4 1 1 0 0]", "(dupli [5 1 0 0 1]) -> [5 5 1 1 0 0 0 0 1 1]", "(dupli [1 9 5]) -> [1 1 9 9 5 5]", "(dupli []) -> []", "(dupli [8 9]) -> [8 8 9 9]", "(dupli [3 1 5 3]) -> [3 3 1 1 5 5 3 3]", "(dupli [2]) -> [2 2]", "(dupli [4 5 1 3 0]) -> [4 4 5 5 1 1 3 3 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [8]) -> [8 8]", "(dupli [7 3 4 7]) -> [7 7 3 3 4 4 7 7]", "(dupli [6]) -> [6 6]", "(dupli [6 4 8 1]) -> [6 6 4 4 8 8 1 1]", "(dupli []) -> []", "(dupli [4 2 1]) -> [4 4 2 2 1 1]", "(dupli [1 9 6]) -> [1 1 9 9 6 6]", "(dupli [4]) -> [4 4]", "(dupli [5 7 4 6 6]) -> [5 5 7 7 4 4 6 6 6 6]", "(dupli [8 3 4 8 2]) -> [8 8 3 3 4 4 8 8 2 2]", "(dupli [6 0 0]) -> [6 6 0 0 0 0]", "(dupli [7 8 4 4 4]) -> [7 7 8 8 4 4 4 4 4 4]", "(dupli [9]) -> [9 9]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [7]) -> [7 7]", "(dupli [8 1 0]) -> [8 8 1 1 0 0]", "(dupli [3 3 9 8 4]) -> [3 3 3 3 9 9 8 8 4 4]", "(dupli [1 7 5 2]) -> [1 1 7 7 5 5 2 2]", "(dupli [6]) -> [6 6]", "(dupli [7 8 1 7 8]) -> [7 7 8 8 1 1 7 7 8 8]", "(dupli [5 5 4 9]) -> [5 5 5 5 4 4 9 9]", "(dupli [6 8 4 8]) -> [6 6 8 8 4 4 8 8]", "(dupli [6 4 5 8]) -> [6 6 4 4 5 5 8 8]", "(dupli []) -> []", "(dupli [7 9 1 2 0]) -> [7 7 9 9 1 1 2 2 0 0]", "(dupli [7 5 0 0 3]) -> [7 7 5 5 0 0 0 0 3 3]", "(dupli [8 0 0]) -> [8 8 0 0 0 0]"], "time": 0.23072, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [0 0]) -> [0 0 0 0]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [5 0 4 0]) -> [5 5 0 0 4 4 0 0]", "(dupli [3 1 9]) -> [3 3 1 1 9 9]", "(dupli [3 7 4]) -> [3 3 7 7 4 4]", "(dupli []) -> []", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [5 5 4 4]) -> [5 5 5 5 4 4 4 4]", "(dupli [4 8 6]) -> [4 4 8 8 6 6]", "(dupli [4 5 0 8]) -> [4 4 5 5 0 0 8 8]", "(dupli [8 7 2]) -> [8 8 7 7 2 2]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [5 5 5 9]) -> [5 5 5 5 5 5 9 9]", "(dupli [5]) -> [5 5]", "(dupli [4 3 5]) -> [4 4 3 3 5 5]", "(dupli [3 8 5 4]) -> [3 3 8 8 5 5 4 4]", "(dupli []) -> []", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [2 0 5 4 2]) -> [2 2 0 0 5 5 4 4 2 2]", "(dupli [3 9 1 8]) -> [3 3 9 9 1 1 8 8]", "(dupli [0 6 1]) -> [0 0 6 6 1 1]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [1 3 3]) -> [1 1 3 3 3 3]", "(dupli [1 1 5 0]) -> [1 1 1 1 5 5 0 0]", "(dupli [6 0 2 8]) -> [6 6 0 0 2 2 8 8]", "(dupli []) -> []", "(dupli [2 5]) -> [2 2 5 5]", "(dupli []) -> []", "(dupli [1 7 9]) -> [1 1 7 7 9 9]", "(dupli [3 8]) -> [3 3 8 8]", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [7 8 4]) -> [7 7 8 8 4 4]", "(dupli [7 7 3]) -> [7 7 7 7 3 3]", "(dupli [6 4 8 6 2]) -> [6 6 4 4 8 8 6 6 2 2]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [5 7]) -> [5 5 7 7]", "(dupli []) -> []", "(dupli [8 7 3 9 4]) -> [8 8 7 7 3 3 9 9 4 4]", "(dupli [9 6 5 7]) -> [9 9 6 6 5 5 7 7]", "(dupli [8 8 8 5]) -> [8 8 8 8 8 8 5 5]", "(dupli []) -> []"], "time": 0.198535, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 1]) -> [5 5 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 7 1]) -> [4 4 7 7 1 1]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [6 1]) -> [6 6 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 6 1 2 8]) -> [8 8 6 6 1 1 2 2 8 8]", "(dupli [0 5 0 5]) -> [0 0 5 5 0 0 5 5]", "(dupli [6 2]) -> [6 6 2 2]", "(dupli [2]) -> [2 2]", "(dupli [9]) -> [9 9]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli []) -> []", "(dupli [1 7 6 0]) -> [1 1 7 7 6 6 0 0]", "(dupli [9 5 0 7]) -> [9 9 5 5 0 0 7 7]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli [7]) -> [7 7]", "(dupli [2]) -> [2 2]", "(dupli [4 2 8]) -> [4 4 2 2 8 8]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1 1 7 6]) -> [1 1 1 1 7 7 6 6]", "(dupli []) -> []", "(dupli [9 4 7]) -> [9 9 4 4 7 7]", "(dupli [2 8 8 7 2]) -> [2 2 8 8 8 8 7 7 2 2]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [7 5]) -> [7 7 5 5]", "(dupli [8]) -> [8 8]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli [2 2]) -> [2 2 2 2]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [7]) -> [7 7]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [2 5 5 3]) -> [2 2 5 5 5 5 3 3]", "(dupli [5 1]) -> [5 5 1 1]", "(dupli []) -> []"], "time": 0.259266, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [6 5 1]) -> [6 6 5 5 1 1]", "(dupli [2 5 0 6]) -> [2 2 5 5 0 0 6 6]", "(dupli []) -> []", "(dupli [4 8 2]) -> [4 4 8 8 2 2]", "(dupli [6 0 2]) -> [6 6 0 0 2 2]", "(dupli []) -> []", "(dupli [8 5 7 2 9]) -> [8 8 5 5 7 7 2 2 9 9]", "(dupli [5 0 4 5 0]) -> [5 5 0 0 4 4 5 5 0 0]", "(dupli [3]) -> [3 3]", "(dupli [1]) -> [1 1]", "(dupli [4 1 9]) -> [4 4 1 1 9 9]", "(dupli [5]) -> [5 5]", "(dupli [1 6 9]) -> [1 1 6 6 9 9]", "(dupli [4]) -> [4 4]", "(dupli [2 4 5 6 3]) -> [2 2 4 4 5 5 6 6 3 3]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [4 3 7 6 0]) -> [4 4 3 3 7 7 6 6 0 0]", "(dupli [4 2 4 6]) -> [4 4 2 2 4 4 6 6]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [8 6 4 8 7]) -> [8 8 6 6 4 4 8 8 7 7]", "(dupli []) -> []", "(dupli [6 7]) -> [6 6 7 7]", "(dupli []) -> []", "(dupli [0 1 0 4]) -> [0 0 1 1 0 0 4 4]", "(dupli [4 8 2]) -> [4 4 8 8 2 2]", "(dupli []) -> []", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [1 2 5]) -> [1 1 2 2 5 5]", "(dupli [9 3 5 2]) -> [9 9 3 3 5 5 2 2]", "(dupli [7 6 9 7 0]) -> [7 7 6 6 9 9 7 7 0 0]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [9 3 5 5]) -> [9 9 3 3 5 5 5 5]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [0 7]) -> [0 0 7 7]", "(dupli [6 0 4 4 1]) -> [6 6 0 0 4 4 4 4 1 1]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [9 2]) -> [9 9 2 2]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [7 8 6 7]) -> [7 7 8 8 6 6 7 7]", "(dupli [8 6 8]) -> [8 8 6 6 8 8]", "(dupli []) -> []", "(dupli [8 4 4]) -> [8 8 4 4 4 4]"], "time": 0.203543, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [3]) -> [3 3]", "(dupli [0 6 6 4 0]) -> [0 0 6 6 6 6 4 4 0 0]", "(dupli [7 0 3 7]) -> [7 7 0 0 3 3 7 7]", "(dupli [4]) -> [4 4]", "(dupli [7 5]) -> [7 7 5 5]", "(dupli [6 3]) -> [6 6 3 3]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [4]) -> [4 4]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [6 0 9 3 9]) -> [6 6 0 0 9 9 3 3 9 9]", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [6 5 6]) -> [6 6 5 5 6 6]", "(dupli [5 8 9]) -> [5 5 8 8 9 9]", "(dupli [8]) -> [8 8]", "(dupli [9 4 0 2 0]) -> [9 9 4 4 0 0 2 2 0 0]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [5 9 6]) -> [5 5 9 9 6 6]", "(dupli [1]) -> [1 1]", "(dupli [9 5 1 6]) -> [9 9 5 5 1 1 6 6]", "(dupli [5 2 4]) -> [5 5 2 2 4 4]", "(dupli [8 2 3]) -> [8 8 2 2 3 3]", "(dupli [7 2 1 5 6]) -> [7 7 2 2 1 1 5 5 6 6]", "(dupli [7 5 2 4]) -> [7 7 5 5 2 2 4 4]", "(dupli [8 1 1 6]) -> [8 8 1 1 1 1 6 6]", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [2]) -> [2 2]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [7 5 2]) -> [7 7 5 5 2 2]", "(dupli [4 9 5]) -> [4 4 9 9 5 5]", "(dupli [5 6 3 8 2]) -> [5 5 6 6 3 3 8 8 2 2]", "(dupli [6 4 4 2]) -> [6 6 4 4 4 4 2 2]", "(dupli [7]) -> [7 7]", "(dupli [1]) -> [1 1]", "(dupli [1 9 4]) -> [1 1 9 9 4 4]", "(dupli [6]) -> [6 6]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [6 3 8 4 4]) -> [6 6 3 3 8 8 4 4 4 4]", "(dupli [5 1 8]) -> [5 5 1 1 8 8]", "(dupli [0]) -> [0 0]", "(dupli [5]) -> [5 5]", "(dupli [5 0 5]) -> [5 5 0 0 5 5]", "(dupli [3 4 3]) -> [3 3 4 4 3 3]"], "time": 0.270503, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [8 2 3 7 9]) -> [8 8 2 2 3 3 7 7 9 9]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli [7 7 4 6 8]) -> [7 7 7 7 4 4 6 6 8 8]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [4 5 6 5]) -> [4 4 5 5 6 6 5 5]", "(dupli [8]) -> [8 8]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [4 5 8]) -> [4 4 5 5 8 8]", "(dupli [2 6]) -> [2 2 6 6]", "(dupli [7 8 4 9 1]) -> [7 7 8 8 4 4 9 9 1 1]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli []) -> []", "(dupli [7 6 6]) -> [7 7 6 6 6 6]", "(dupli [4 8 4 1]) -> [4 4 8 8 4 4 1 1]", "(dupli []) -> []", "(dupli [6 8 6]) -> [6 6 8 8 6 6]", "(dupli [1 9 1]) -> [1 1 9 9 1 1]", "(dupli []) -> []", "(dupli [1 1 6 9 1]) -> [1 1 1 1 6 6 9 9 1 1]", "(dupli [2 2 6 6 5]) -> [2 2 2 2 6 6 6 6 5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 7 4 7 0]) -> [4 4 7 7 4 4 7 7 0 0]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [3 5 2]) -> [3 3 5 5 2 2]", "(dupli [6]) -> [6 6]", "(dupli [9]) -> [9 9]", "(dupli [7 9 1]) -> [7 7 9 9 1 1]", "(dupli [9 5 7 6]) -> [9 9 5 5 7 7 6 6]", "(dupli [2 7 2 2]) -> [2 2 7 7 2 2 2 2]", "(dupli [2]) -> [2 2]", "(dupli [2 1 2 1]) -> [2 2 1 1 2 2 1 1]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [6 2]) -> [6 6 2 2]", "(dupli [4 8 4 6 6]) -> [4 4 8 8 4 4 6 6 6 6]", "(dupli [1 7 1 3 9]) -> [1 1 7 7 1 1 3 3 9 9]", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [7 3 5 6]) -> [7 7 3 3 5 5 6 6]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [3 2 7 6 2]) -> [3 3 2 2 7 7 6 6 2 2]", "(dupli [1]) -> [1 1]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli []) -> []"], "time": 0.229248, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [0]) -> [0 0]", "(dupli [5 4 2 1 8]) -> [5 5 4 4 2 2 1 1 8 8]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 7 3]) -> [0 0 7 7 3 3]", "(dupli [9 7 8 2]) -> [9 9 7 7 8 8 2 2]", "(dupli [2 0 5 3 5]) -> [2 2 0 0 5 5 3 3 5 5]", "(dupli [0 4 5 7]) -> [0 0 4 4 5 5 7 7]", "(dupli [5 6 7]) -> [5 5 6 6 7 7]", "(dupli [7 6 1 8]) -> [7 7 6 6 1 1 8 8]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [3 0 3 9]) -> [3 3 0 0 3 3 9 9]", "(dupli [4 1 3 1]) -> [4 4 1 1 3 3 1 1]", "(dupli []) -> []", "(dupli [9 7 1]) -> [9 9 7 7 1 1]", "(dupli []) -> []", "(dupli [0 1 7]) -> [0 0 1 1 7 7]", "(dupli [3 7 2 6]) -> [3 3 7 7 2 2 6 6]", "(dupli [5 2 1]) -> [5 5 2 2 1 1]", "(dupli [6 9 6 9]) -> [6 6 9 9 6 6 9 9]", "(dupli [2 3 4 7]) -> [2 2 3 3 4 4 7 7]", "(dupli [4 8 1 9 3]) -> [4 4 8 8 1 1 9 9 3 3]", "(dupli []) -> []", "(dupli [0 4 9 6 2]) -> [0 0 4 4 9 9 6 6 2 2]", "(dupli [3]) -> [3 3]", "(dupli [0 3 0]) -> [0 0 3 3 0 0]", "(dupli [6]) -> [6 6]", "(dupli [0 8 6 8 3]) -> [0 0 8 8 6 6 8 8 3 3]", "(dupli [7 8 0 6]) -> [7 7 8 8 0 0 6 6]", "(dupli [1]) -> [1 1]", "(dupli [8 5 1 0 0]) -> [8 8 5 5 1 1 0 0 0 0]", "(dupli [0 4 9]) -> [0 0 4 4 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [6 1 3]) -> [6 6 1 1 3 3]", "(dupli [2]) -> [2 2]", "(dupli [5]) -> [5 5]", "(dupli [5]) -> [5 5]", "(dupli [5 3 9 1 8]) -> [5 5 3 3 9 9 1 1 8 8]", "(dupli [8 2 4 9]) -> [8 8 2 2 4 4 9 9]", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [6]) -> [6 6]", "(dupli [3 6 6 7]) -> [3 3 6 6 6 6 7 7]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [2 1 1 5 5]) -> [2 2 1 1 1 1 5 5 5 5]"], "time": 0.237609, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [3 9 4 9]) -> [3 3 9 9 4 4 9 9]", "(dupli [7]) -> [7 7]", "(dupli [2]) -> [2 2]", "(dupli [4 6 6]) -> [4 4 6 6 6 6]", "(dupli [4 2 9 4 3]) -> [4 4 2 2 9 9 4 4 3 3]", "(dupli [0 0 5 7 7]) -> [0 0 0 0 5 5 7 7 7 7]", "(dupli [4 1 1 8]) -> [4 4 1 1 1 1 8 8]", "(dupli [0 8 5 6 5]) -> [0 0 8 8 5 5 6 6 5 5]", "(dupli []) -> []", "(dupli [7 8 4]) -> [7 7 8 8 4 4]", "(dupli [1 1 9]) -> [1 1 1 1 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 5 8 9]) -> [0 0 5 5 8 8 9 9]", "(dupli [4 2 4]) -> [4 4 2 2 4 4]", "(dupli [0 2 5 1 4]) -> [0 0 2 2 5 5 1 1 4 4]", "(dupli [3 1 7]) -> [3 3 1 1 7 7]", "(dupli [6 2 7 3]) -> [6 6 2 2 7 7 3 3]", "(dupli [3 9 8 8 0]) -> [3 3 9 9 8 8 8 8 0 0]", "(dupli [4 9 6 4 5]) -> [4 4 9 9 6 6 4 4 5 5]", "(dupli [5 5 7 1 2]) -> [5 5 5 5 7 7 1 1 2 2]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [0 6 5]) -> [0 0 6 6 5 5]", "(dupli [4 4 9 5]) -> [4 4 4 4 9 9 5 5]", "(dupli [2 6 3]) -> [2 2 6 6 3 3]", "(dupli [1 5 2 2]) -> [1 1 5 5 2 2 2 2]", "(dupli [7]) -> [7 7]", "(dupli [6 2 2 2]) -> [6 6 2 2 2 2 2 2]", "(dupli [3 1 9 4]) -> [3 3 1 1 9 9 4 4]", "(dupli [9 5 5 9 4]) -> [9 9 5 5 5 5 9 9 4 4]", "(dupli [8 0 8 0 4]) -> [8 8 0 0 8 8 0 0 4 4]", "(dupli [2]) -> [2 2]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [4]) -> [4 4]", "(dupli [5 4 5 3]) -> [5 5 4 4 5 5 3 3]", "(dupli [4]) -> [4 4]", "(dupli [8 0 3 7 9]) -> [8 8 0 0 3 3 7 7 9 9]", "(dupli [7 0]) -> [7 7 0 0]", "(dupli [4]) -> [4 4]", "(dupli [0 8 8 4 7]) -> [0 0 8 8 8 8 4 4 7 7]", "(dupli [4]) -> [4 4]"], "time": 0.185296, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7 7 3 9 1]) -> [7 7 7 7 3 3 9 9 1 1]", "(dupli [0 6 3]) -> [0 0 6 6 3 3]", "(dupli []) -> []", "(dupli [7 1 5 7 1]) -> [7 7 1 1 5 5 7 7 1 1]", "(dupli [8 3 7 8 4]) -> [8 8 3 3 7 7 8 8 4 4]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [7]) -> [7 7]", "(dupli [1 2 7 2 5]) -> [1 1 2 2 7 7 2 2 5 5]", "(dupli []) -> []", "(dupli [5 4]) -> [5 5 4 4]", "(dupli [7 9 1 1]) -> [7 7 9 9 1 1 1 1]", "(dupli [9 8 5 8 0]) -> [9 9 8 8 5 5 8 8 0 0]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [7 8 2 5 1]) -> [7 7 8 8 2 2 5 5 1 1]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [1 8]) -> [1 1 8 8]", "(dupli []) -> []", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [3 7 4 1 5]) -> [3 3 7 7 4 4 1 1 5 5]", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [7 0 3 4]) -> [7 7 0 0 3 3 4 4]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [0 4 8]) -> [0 0 4 4 8 8]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [9 5]) -> [9 9 5 5]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [9 3 0 8]) -> [9 9 3 3 0 0 8 8]", "(dupli [8 1 5]) -> [8 8 1 1 5 5]", "(dupli [7 3 8 1]) -> [7 7 3 3 8 8 1 1]", "(dupli [4 9 8 4 7]) -> [4 4 9 9 8 8 4 4 7 7]", "(dupli [2 5 8 1 6]) -> [2 2 5 5 8 8 1 1 6 6]", "(dupli [6 4 7 2 9]) -> [6 6 4 4 7 7 2 2 9 9]", "(dupli [3 7 3]) -> [3 3 7 7 3 3]", "(dupli [4 9 1]) -> [4 4 9 9 1 1]", "(dupli [9 5 1 3 2]) -> [9 9 5 5 1 1 3 3 2 2]", "(dupli [2]) -> [2 2]", "(dupli [9 9 8 0 5]) -> [9 9 9 9 8 8 0 0 5 5]", "(dupli [4]) -> [4 4]", "(dupli [0 0 0 5]) -> [0 0 0 0 0 0 5 5]", "(dupli [9 9 2]) -> [9 9 9 9 2 2]"], "time": 0.232077, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 1 2]) -> [5 5 1 1 2 2]", "(dupli []) -> []", "(dupli [3 5 6 3 9]) -> [3 3 5 5 6 6 3 3 9 9]", "(dupli []) -> []", "(dupli [0 5 5 7]) -> [0 0 5 5 5 5 7 7]", "(dupli [6]) -> [6 6]", "(dupli [0 6 4 3 2]) -> [0 0 6 6 4 4 3 3 2 2]", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [4 8 9 4]) -> [4 4 8 8 9 9 4 4]", "(dupli [8 6 5]) -> [8 8 6 6 5 5]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [2 7 7]) -> [2 2 7 7 7 7]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [7 4 4 7 9]) -> [7 7 4 4 4 4 7 7 9 9]", "(dupli [5 5 5]) -> [5 5 5 5 5 5]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [9 8 6]) -> [9 9 8 8 6 6]", "(dupli []) -> []", "(dupli [3 6 4 6 0]) -> [3 3 6 6 4 4 6 6 0 0]", "(dupli []) -> []", "(dupli [0 4]) -> [0 0 4 4]", "(dupli []) -> []", "(dupli [9 1 0 7 0]) -> [9 9 1 1 0 0 7 7 0 0]", "(dupli [2 8 2 3 0]) -> [2 2 8 8 2 2 3 3 0 0]", "(dupli [8 9]) -> [8 8 9 9]", "(dupli []) -> []", "(dupli [6 3 9]) -> [6 6 3 3 9 9]", "(dupli [5 3 0 2 8]) -> [5 5 3 3 0 0 2 2 8 8]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [1 6 2 6]) -> [1 1 6 6 2 2 6 6]", "(dupli []) -> []", "(dupli [9 2 0]) -> [9 9 2 2 0 0]", "(dupli []) -> []", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [7 1 7 8 4]) -> [7 7 1 1 7 7 8 8 4 4]", "(dupli [6 9 4 6 7]) -> [6 6 9 9 4 4 6 6 7 7]", "(dupli [1 0 8 6 7]) -> [1 1 0 0 8 8 6 6 7 7]", "(dupli [9 7 3 0]) -> [9 9 7 7 3 3 0 0]", "(dupli [5 4 8]) -> [5 5 4 4 8 8]", "(dupli [5 6 1 5]) -> [5 5 6 6 1 1 5 5]", "(dupli []) -> []", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [2]) -> [2 2]"], "time": 0.215581, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [4]) -> [4 4]", "(dupli [4 0 6]) -> [4 4 0 0 6 6]", "(dupli [6]) -> [6 6]", "(dupli [8]) -> [8 8]", "(dupli [8 6 8]) -> [8 8 6 6 8 8]", "(dupli [0 0 1 3]) -> [0 0 0 0 1 1 3 3]", "(dupli [9 4 4 2]) -> [9 9 4 4 4 4 2 2]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [3]) -> [3 3]", "(dupli [0 2 8 1]) -> [0 0 2 2 8 8 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 0]) -> [6 6 0 0]", "(dupli [0]) -> [0 0]", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [4 2 9 3 0]) -> [4 4 2 2 9 9 3 3 0 0]", "(dupli [2 3 0 3 4]) -> [2 2 3 3 0 0 3 3 4 4]", "(dupli [8 7 5 7 1]) -> [8 8 7 7 5 5 7 7 1 1]", "(dupli [5 6 7]) -> [5 5 6 6 7 7]", "(dupli [7 9 5]) -> [7 7 9 9 5 5]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [8 3 7 8 4]) -> [8 8 3 3 7 7 8 8 4 4]", "(dupli [6 0 5 7]) -> [6 6 0 0 5 5 7 7]", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [1 2 8 7 9]) -> [1 1 2 2 8 8 7 7 9 9]", "(dupli []) -> []", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [1 8 1 3 9]) -> [1 1 8 8 1 1 3 3 9 9]", "(dupli [9 1 1]) -> [9 9 1 1 1 1]", "(dupli [3 7 3 8 5]) -> [3 3 7 7 3 3 8 8 5 5]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [6 0 7]) -> [6 6 0 0 7 7]", "(dupli [5]) -> [5 5]", "(dupli [2]) -> [2 2]", "(dupli [6 9 1 6 6]) -> [6 6 9 9 1 1 6 6 6 6]", "(dupli [0 4]) -> [0 0 4 4]", "(dupli [0 6 0]) -> [0 0 6 6 0 0]", "(dupli [6 4 0]) -> [6 6 4 4 0 0]", "(dupli [9]) -> [9 9]", "(dupli [7]) -> [7 7]", "(dupli [2 7 6 2 0]) -> [2 2 7 7 6 6 2 2 0 0]", "(dupli []) -> []", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [9]) -> [9 9]", "(dupli [2 6 6 5]) -> [2 2 6 6 6 6 5 5]"], "time": 0.23948, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [8 9]) -> [8 8 9 9]", "(dupli [1 6 4 6]) -> [1 1 6 6 4 4 6 6]", "(dupli [7 6 8]) -> [7 7 6 6 8 8]", "(dupli [4 1 5]) -> [4 4 1 1 5 5]", "(dupli [4 4 2]) -> [4 4 4 4 2 2]", "(dupli [1 3 1 9]) -> [1 1 3 3 1 1 9 9]", "(dupli [3 0 1 8 7]) -> [3 3 0 0 1 1 8 8 7 7]", "(dupli [6 8 1 3 7]) -> [6 6 8 8 1 1 3 3 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [5]) -> [5 5]", "(dupli [5 5 1 5 8]) -> [5 5 5 5 1 1 5 5 8 8]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [7 0 5]) -> [7 7 0 0 5 5]", "(dupli [1 6 4 3 1]) -> [1 1 6 6 4 4 3 3 1 1]", "(dupli []) -> []", "(dupli [7 1 7 9 3]) -> [7 7 1 1 7 7 9 9 3 3]", "(dupli [2 2 9 5]) -> [2 2 2 2 9 9 5 5]", "(dupli []) -> []", "(dupli [9 1 4]) -> [9 9 1 1 4 4]", "(dupli []) -> []", "(dupli [7 3 6]) -> [7 7 3 3 6 6]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [3 1 2 5 6]) -> [3 3 1 1 2 2 5 5 6 6]", "(dupli [8 0 7 0]) -> [8 8 0 0 7 7 0 0]", "(dupli [1 2 3 0]) -> [1 1 2 2 3 3 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 9]) -> [5 5 9 9]", "(dupli [6 6 6 8]) -> [6 6 6 6 6 6 8 8]", "(dupli [2]) -> [2 2]", "(dupli [3 9 3 9]) -> [3 3 9 9 3 3 9 9]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [5 2 2]) -> [5 5 2 2 2 2]", "(dupli [3 4 1]) -> [3 3 4 4 1 1]", "(dupli [8]) -> [8 8]", "(dupli [1 3 7]) -> [1 1 3 3 7 7]", "(dupli [6 8 1]) -> [6 6 8 8 1 1]", "(dupli []) -> []", "(dupli [7 4 2]) -> [7 7 4 4 2 2]", "(dupli []) -> []", "(dupli [4 3 7 7 0]) -> [4 4 3 3 7 7 7 7 0 0]", "(dupli [1]) -> [1 1]", "(dupli [1 9 6]) -> [1 1 9 9 6 6]", "(dupli [5]) -> [5 5]"], "time": 0.211386, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [6 8 1 6]) -> [6 6 8 8 1 1 6 6]", "(dupli [5]) -> [5 5]", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [1 2 6]) -> [1 1 2 2 6 6]", "(dupli [6 1 6 4]) -> [6 6 1 1 6 6 4 4]", "(dupli [3 5]) -> [3 3 5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 2 5 2]) -> [5 5 2 2 5 5 2 2]", "(dupli [8]) -> [8 8]", "(dupli [1 8 6 0 6]) -> [1 1 8 8 6 6 0 0 6 6]", "(dupli [6]) -> [6 6]", "(dupli [8 2 3 0 5]) -> [8 8 2 2 3 3 0 0 5 5]", "(dupli [1 3 8 1]) -> [1 1 3 3 8 8 1 1]", "(dupli [1 6 8]) -> [1 1 6 6 8 8]", "(dupli [1 7 2]) -> [1 1 7 7 2 2]", "(dupli [1 1 0 6]) -> [1 1 1 1 0 0 6 6]", "(dupli []) -> []", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [8 9 0 7]) -> [8 8 9 9 0 0 7 7]", "(dupli []) -> []", "(dupli [3 8 7 9]) -> [3 3 8 8 7 7 9 9]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [5 9 8 0 8]) -> [5 5 9 9 8 8 0 0 8 8]", "(dupli []) -> []", "(dupli [3 8 1 8 2]) -> [3 3 8 8 1 1 8 8 2 2]", "(dupli [7]) -> [7 7]", "(dupli [7]) -> [7 7]", "(dupli [1 3]) -> [1 1 3 3]", "(dupli [2 0 2]) -> [2 2 0 0 2 2]", "(dupli [8 4 1 2]) -> [8 8 4 4 1 1 2 2]", "(dupli [2 1 4 3]) -> [2 2 1 1 4 4 3 3]", "(dupli [4 2 4 6]) -> [4 4 2 2 4 4 6 6]", "(dupli [0]) -> [0 0]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [8 7 7 1]) -> [8 8 7 7 7 7 1 1]", "(dupli [3 2 2 9 1]) -> [3 3 2 2 2 2 9 9 1 1]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [3 7 6 6 3]) -> [3 3 7 7 6 6 6 6 3 3]", "(dupli [2 4]) -> [2 2 4 4]", "(dupli [5 4]) -> [5 5 4 4]", "(dupli [2 9 8]) -> [2 2 9 9 8 8]", "(dupli [8]) -> [8 8]", "(dupli [4 5 0]) -> [4 4 5 5 0 0]", "(dupli [2 4 4 1]) -> [2 2 4 4 4 4 1 1]", "(dupli [7 6 3]) -> [7 7 6 6 3 3]", "(dupli [5 8]) -> [5 5 8 8]"], "time": 0.232984, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 5 5 9]) -> [4 4 5 5 5 5 9 9]", "(dupli [7 1 9 3]) -> [7 7 1 1 9 9 3 3]", "(dupli [7 7 3 8]) -> [7 7 7 7 3 3 8 8]", "(dupli [3 9]) -> [3 3 9 9]", "(dupli [1]) -> [1 1]", "(dupli [1 4]) -> [1 1 4 4]", "(dupli [8 3]) -> [8 8 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 4 0]) -> [6 6 4 4 0 0]", "(dupli [0 0 3 7 7]) -> [0 0 0 0 3 3 7 7 7 7]", "(dupli [2]) -> [2 2]", "(dupli [0 9 0]) -> [0 0 9 9 0 0]", "(dupli [7 5 0 2 9]) -> [7 7 5 5 0 0 2 2 9 9]", "(dupli [4 1 9 0 5]) -> [4 4 1 1 9 9 0 0 5 5]", "(dupli [1]) -> [1 1]", "(dupli [6 0 3]) -> [6 6 0 0 3 3]", "(dupli []) -> []", "(dupli [8 9 5 2]) -> [8 8 9 9 5 5 2 2]", "(dupli [7 1 7]) -> [7 7 1 1 7 7]", "(dupli [9 6 7 1 9]) -> [9 9 6 6 7 7 1 1 9 9]", "(dupli [6 5 4]) -> [6 6 5 5 4 4]", "(dupli []) -> []", "(dupli [4 9 3]) -> [4 4 9 9 3 3]", "(dupli []) -> []", "(dupli [2 0 8 8]) -> [2 2 0 0 8 8 8 8]", "(dupli [1]) -> [1 1]", "(dupli [0 4]) -> [0 0 4 4]", "(dupli [3]) -> [3 3]", "(dupli [4]) -> [4 4]", "(dupli [7 5 2 9 7]) -> [7 7 5 5 2 2 9 9 7 7]", "(dupli [0 0 3 1]) -> [0 0 0 0 3 3 1 1]", "(dupli [1 0 3 7 4]) -> [1 1 0 0 3 3 7 7 4 4]", "(dupli []) -> []", "(dupli [1 6 1 8 4]) -> [1 1 6 6 1 1 8 8 4 4]", "(dupli [1 4 2 5 7]) -> [1 1 4 4 2 2 5 5 7 7]", "(dupli [8 3 9]) -> [8 8 3 3 9 9]", "(dupli [9 8 1]) -> [9 9 8 8 1 1]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1 2 0 0 6]) -> [1 1 2 2 0 0 0 0 6 6]", "(dupli [5]) -> [5 5]", "(dupli [1 5 1]) -> [1 1 5 5 1 1]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [2 2 3 5 9]) -> [2 2 2 2 3 3 5 5 9 9]"], "time": 0.260194, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [8 5 4 4]) -> [8 8 5 5 4 4 4 4]", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [6 6 0]) -> [6 6 6 6 0 0]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [7]) -> [7 7]", "(dupli [3]) -> [3 3]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [9 8 1 6 7]) -> [9 9 8 8 1 1 6 6 7 7]", "(dupli []) -> []", "(dupli [9 4 4]) -> [9 9 4 4 4 4]", "(dupli [3 9 2]) -> [3 3 9 9 2 2]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [0 9 2]) -> [0 0 9 9 2 2]", "(dupli [1 2]) -> [1 1 2 2]", "(dupli [6]) -> [6 6]", "(dupli [4 3 4 9]) -> [4 4 3 3 4 4 9 9]", "(dupli [7 2 2]) -> [7 7 2 2 2 2]", "(dupli [0 9 2 4 7]) -> [0 0 9 9 2 2 4 4 7 7]", "(dupli [0 9 5 8 4]) -> [0 0 9 9 5 5 8 8 4 4]", "(dupli [7 1 5]) -> [7 7 1 1 5 5]", "(dupli [7 0 8 5 2]) -> [7 7 0 0 8 8 5 5 2 2]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [0 0 3 2 3]) -> [0 0 0 0 3 3 2 2 3 3]", "(dupli [6 4 2 0 1]) -> [6 6 4 4 2 2 0 0 1 1]", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [3 8 3 1]) -> [3 3 8 8 3 3 1 1]", "(dupli [9]) -> [9 9]", "(dupli [4 0 0]) -> [4 4 0 0 0 0]", "(dupli [7 8 7]) -> [7 7 8 8 7 7]", "(dupli [1 1 6 8 6]) -> [1 1 1 1 6 6 8 8 6 6]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli [6 2]) -> [6 6 2 2]", "(dupli [6 1 8 5]) -> [6 6 1 1 8 8 5 5]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [4 8 5]) -> [4 4 8 8 5 5]", "(dupli [0 3 6]) -> [0 0 3 3 6 6]", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [0]) -> [0 0]", "(dupli [5 2 2]) -> [5 5 2 2 2 2]", "(dupli [0 6 7 2]) -> [0 0 6 6 7 7 2 2]", "(dupli [3 7]) -> [3 3 7 7]"], "time": 0.217702, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 3 1 4]) -> [0 0 3 3 1 1 4 4]", "(dupli [9]) -> [9 9]", "(dupli [3 5 0 5]) -> [3 3 5 5 0 0 5 5]", "(dupli [6 6 9 9 6]) -> [6 6 6 6 9 9 9 9 6 6]", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [5 4 8 2 8]) -> [5 5 4 4 8 8 2 2 8 8]", "(dupli []) -> []", "(dupli [5 5 9 3]) -> [5 5 5 5 9 9 3 3]", "(dupli [6 1 4]) -> [6 6 1 1 4 4]", "(dupli [4 7 1]) -> [4 4 7 7 1 1]", "(dupli [0]) -> [0 0]", "(dupli [6]) -> [6 6]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [4 8 7]) -> [4 4 8 8 7 7]", "(dupli [2 8 9 8 4]) -> [2 2 8 8 9 9 8 8 4 4]", "(dupli [0 5 7 9 4]) -> [0 0 5 5 7 7 9 9 4 4]", "(dupli []) -> []", "(dupli [5 8 7 5]) -> [5 5 8 8 7 7 5 5]", "(dupli []) -> []", "(dupli [0 3]) -> [0 0 3 3]", "(dupli []) -> []", "(dupli [7 7 9 2]) -> [7 7 7 7 9 9 2 2]", "(dupli [4 3 4 4]) -> [4 4 3 3 4 4 4 4]", "(dupli [8 9 9 6 2]) -> [8 8 9 9 9 9 6 6 2 2]", "(dupli [4 8 6 9]) -> [4 4 8 8 6 6 9 9]", "(dupli [0]) -> [0 0]", "(dupli [8 3 4 4 7]) -> [8 8 3 3 4 4 4 4 7 7]", "(dupli [8 1 5 1]) -> [8 8 1 1 5 5 1 1]", "(dupli [2 3 3 0]) -> [2 2 3 3 3 3 0 0]", "(dupli [0 4 6 7 3]) -> [0 0 4 4 6 6 7 7 3 3]", "(dupli [1 2 0]) -> [1 1 2 2 0 0]", "(dupli [7 7 5 7 8]) -> [7 7 7 7 5 5 7 7 8 8]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [4]) -> [4 4]", "(dupli [3 7]) -> [3 3 7 7]", "(dupli [3 0 2 4]) -> [3 3 0 0 2 2 4 4]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [4 9 5]) -> [4 4 9 9 5 5]", "(dupli [4]) -> [4 4]", "(dupli [4 0 1]) -> [4 4 0 0 1 1]", "(dupli []) -> []", "(dupli [6 6 2]) -> [6 6 6 6 2 2]", "(dupli [9 0 6]) -> [9 9 0 0 6 6]", "(dupli [7]) -> [7 7]"], "time": 0.244674, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 1 7 2]) -> [4 4 1 1 7 7 2 2]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [6 4 8]) -> [6 6 4 4 8 8]", "(dupli [0 6 2 1]) -> [0 0 6 6 2 2 1 1]", "(dupli [3 1 8 1]) -> [3 3 1 1 8 8 1 1]", "(dupli [5 8 2 2 6]) -> [5 5 8 8 2 2 2 2 6 6]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [5 9]) -> [5 5 9 9]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [3 8 4 1]) -> [3 3 8 8 4 4 1 1]", "(dupli [8 9 1]) -> [8 8 9 9 1 1]", "(dupli [9 2 8]) -> [9 9 2 2 8 8]", "(dupli [9 8 6]) -> [9 9 8 8 6 6]", "(dupli []) -> []", "(dupli [0 5 1]) -> [0 0 5 5 1 1]", "(dupli [1 2 2]) -> [1 1 2 2 2 2]", "(dupli [8 3 9]) -> [8 8 3 3 9 9]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [8 5 7 2 7]) -> [8 8 5 5 7 7 2 2 7 7]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [9 6 0 2]) -> [9 9 6 6 0 0 2 2]", "(dupli [7 6 4 0 2]) -> [7 7 6 6 4 4 0 0 2 2]", "(dupli [2 4 2 5 1]) -> [2 2 4 4 2 2 5 5 1 1]", "(dupli [1 8]) -> [1 1 8 8]", "(dupli [2 5]) -> [2 2 5 5]", "(dupli [0]) -> [0 0]", "(dupli [7 1 4 7]) -> [7 7 1 1 4 4 7 7]", "(dupli [1 9 1 5 2]) -> [1 1 9 9 1 1 5 5 2 2]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [1 1 5 9]) -> [1 1 1 1 5 5 9 9]", "(dupli [8 8 9 3]) -> [8 8 8 8 9 9 3 3]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [2 6 2]) -> [2 2 6 6 2 2]", "(dupli [2 4 1 9]) -> [2 2 4 4 1 1 9 9]", "(dupli [8 6 7]) -> [8 8 6 6 7 7]", "(dupli [7 3 0 0]) -> [7 7 3 3 0 0 0 0]", "(dupli []) -> []", "(dupli [2 4 1 2 6]) -> [2 2 4 4 1 1 2 2 6 6]", "(dupli [5 9 6 0]) -> [5 5 9 9 6 6 0 0]", "(dupli [7]) -> [7 7]", "(dupli [8]) -> [8 8]", "(dupli [4 6 0]) -> [4 4 6 6 0 0]"], "time": 0.235031, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 7 9]) -> [9 9 7 7 9 9]", "(dupli [0]) -> [0 0]", "(dupli [1 7 4 7 1]) -> [1 1 7 7 4 4 7 7 1 1]", "(dupli [7 2 5]) -> [7 7 2 2 5 5]", "(dupli []) -> []", "(dupli [9 4 0]) -> [9 9 4 4 0 0]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [9 6 8]) -> [9 9 6 6 8 8]", "(dupli [9 9 5 2 8]) -> [9 9 9 9 5 5 2 2 8 8]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [0 6 6 0]) -> [0 0 6 6 6 6 0 0]", "(dupli [7 8 9]) -> [7 7 8 8 9 9]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 3 3 7]) -> [7 7 3 3 3 3 7 7]", "(dupli [2 0]) -> [2 2 0 0]", "(dupli [4 5 3 9]) -> [4 4 5 5 3 3 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 3 2 7]) -> [4 4 3 3 2 2 7 7]", "(dupli [5 9 7 8]) -> [5 5 9 9 7 7 8 8]", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [1 5]) -> [1 1 5 5]", "(dupli [9 3 3 2]) -> [9 9 3 3 3 3 2 2]", "(dupli [3 0 4 0 8]) -> [3 3 0 0 4 4 0 0 8 8]", "(dupli []) -> []", "(dupli [3 5 3 8]) -> [3 3 5 5 3 3 8 8]", "(dupli [0 3 6]) -> [0 0 3 3 6 6]", "(dupli [8 5 3 7]) -> [8 8 5 5 3 3 7 7]", "(dupli [6]) -> [6 6]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [0 3 3 4 8]) -> [0 0 3 3 3 3 4 4 8 8]", "(dupli [5 5 4]) -> [5 5 5 5 4 4]", "(dupli [5 1 2 7 4]) -> [5 5 1 1 2 2 7 7 4 4]", "(dupli [2 5 7]) -> [2 2 5 5 7 7]", "(dupli [1 0 6 2 7]) -> [1 1 0 0 6 6 2 2 7 7]", "(dupli [1 2 4]) -> [1 1 2 2 4 4]", "(dupli [6 0 4 1]) -> [6 6 0 0 4 4 1 1]", "(dupli []) -> []", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [6 5 0]) -> [6 6 5 5 0 0]", "(dupli [9 3 3]) -> [9 9 3 3 3 3]", "(dupli [7 4]) -> [7 7 4 4]", "(dupli [6]) -> [6 6]", "(dupli []) -> []"], "time": 0.223725, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 1]) -> [4 4 1 1]", "(dupli []) -> []", "(dupli [7 3 0 9]) -> [7 7 3 3 0 0 9 9]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [0 3 2 6]) -> [0 0 3 3 2 2 6 6]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 4 8]) -> [6 6 4 4 8 8]", "(dupli [5]) -> [5 5]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [6 5 4]) -> [6 6 5 5 4 4]", "(dupli [3 0 7 7]) -> [3 3 0 0 7 7 7 7]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [1 2 3]) -> [1 1 2 2 3 3]", "(dupli [6]) -> [6 6]", "(dupli [0 7]) -> [0 0 7 7]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [9 5 7 8 5]) -> [9 9 5 5 7 7 8 8 5 5]", "(dupli [2]) -> [2 2]", "(dupli [6]) -> [6 6]", "(dupli [2]) -> [2 2]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [4 7 9]) -> [4 4 7 7 9 9]", "(dupli [3 5 0 0]) -> [3 3 5 5 0 0 0 0]", "(dupli [4 2 8 2]) -> [4 4 2 2 8 8 2 2]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [5]) -> [5 5]", "(dupli [3 8 2]) -> [3 3 8 8 2 2]", "(dupli [4 6 3 7 9]) -> [4 4 6 6 3 3 7 7 9 9]", "(dupli []) -> []", "(dupli [9 8 2 4]) -> [9 9 8 8 2 2 4 4]", "(dupli []) -> []", "(dupli [6 8 2 6 4]) -> [6 6 8 8 2 2 6 6 4 4]", "(dupli [2 1 7]) -> [2 2 1 1 7 7]", "(dupli [8 8 8]) -> [8 8 8 8 8 8]", "(dupli [6 9 6 9 8]) -> [6 6 9 9 6 6 9 9 8 8]", "(dupli [9 0 4 3]) -> [9 9 0 0 4 4 3 3]", "(dupli [8]) -> [8 8]", "(dupli [6 7]) -> [6 6 7 7]", "(dupli []) -> []", "(dupli [0 1 0]) -> [0 0 1 1 0 0]", "(dupli [4 3 1 8]) -> [4 4 3 3 1 1 8 8]", "(dupli [1 3 8 3 0]) -> [1 1 3 3 8 8 3 3 0 0]", "(dupli [1 2 6 4]) -> [1 1 2 2 6 6 4 4]"], "time": 0.21601, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 2]) -> [3 3 2 2]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [6 2 9]) -> [6 6 2 2 9 9]", "(dupli [3 2 0]) -> [3 3 2 2 0 0]", "(dupli [8 2 0 2 7]) -> [8 8 2 2 0 0 2 2 7 7]", "(dupli [9 6 1 8]) -> [9 9 6 6 1 1 8 8]", "(dupli []) -> []", "(dupli [5 0 7 7 3]) -> [5 5 0 0 7 7 7 7 3 3]", "(dupli []) -> []", "(dupli [5 3 0]) -> [5 5 3 3 0 0]", "(dupli [0]) -> [0 0]", "(dupli [4 2 4 5 0]) -> [4 4 2 2 4 4 5 5 0 0]", "(dupli [6]) -> [6 6]", "(dupli [2]) -> [2 2]", "(dupli [3 1 7]) -> [3 3 1 1 7 7]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [6 4 9 2 1]) -> [6 6 4 4 9 9 2 2 1 1]", "(dupli [8 7 4 8]) -> [8 8 7 7 4 4 8 8]", "(dupli [0 3 7]) -> [0 0 3 3 7 7]", "(dupli [3 1 5]) -> [3 3 1 1 5 5]", "(dupli [4 4 0 7]) -> [4 4 4 4 0 0 7 7]", "(dupli [6 2 8]) -> [6 6 2 2 8 8]", "(dupli [2 8 1 2 4]) -> [2 2 8 8 1 1 2 2 4 4]", "(dupli [8 6 3 9 6]) -> [8 8 6 6 3 3 9 9 6 6]", "(dupli [4 4 9]) -> [4 4 4 4 9 9]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [8 8 7 9 0]) -> [8 8 8 8 7 7 9 9 0 0]", "(dupli [3 8]) -> [3 3 8 8]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [6 4 8 7 7]) -> [6 6 4 4 8 8 7 7 7 7]", "(dupli [7]) -> [7 7]", "(dupli [1 4 7 9]) -> [1 1 4 4 7 7 9 9]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli []) -> []", "(dupli [6 9 1]) -> [6 6 9 9 1 1]", "(dupli [5 0 4 9 1]) -> [5 5 0 0 4 4 9 9 1 1]", "(dupli [2 2 9]) -> [2 2 2 2 9 9]", "(dupli [6 5]) -> [6 6 5 5]", "(dupli [6 6 0]) -> [6 6 6 6 0 0]", "(dupli [1 4 6 9 9]) -> [1 1 4 4 6 6 9 9 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 8 3 5]) -> [7 7 8 8 3 3 5 5]", "(dupli [8]) -> [8 8]"], "time": 0.218977, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [1 8 5 1]) -> [1 1 8 8 5 5 1 1]", "(dupli [8 6 8 4]) -> [8 8 6 6 8 8 4 4]", "(dupli [0 2 0 9 6]) -> [0 0 2 2 0 0 9 9 6 6]", "(dupli [7 1 0 3 1]) -> [7 7 1 1 0 0 3 3 1 1]", "(dupli []) -> []", "(dupli [8 1 8 7]) -> [8 8 1 1 8 8 7 7]", "(dupli [9 2]) -> [9 9 2 2]", "(dupli []) -> []", "(dupli [0 3 6 2 1]) -> [0 0 3 3 6 6 2 2 1 1]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [7 4 9 2 1]) -> [7 7 4 4 9 9 2 2 1 1]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [9 2 3 2]) -> [9 9 2 2 3 3 2 2]", "(dupli [9 6 1 1 6]) -> [9 9 6 6 1 1 1 1 6 6]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [1 7 5 4 3]) -> [1 1 7 7 5 5 4 4 3 3]", "(dupli [0 7 5 9]) -> [0 0 7 7 5 5 9 9]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [4]) -> [4 4]", "(dupli [4]) -> [4 4]", "(dupli [3 5]) -> [3 3 5 5]", "(dupli [4]) -> [4 4]", "(dupli [8 7 9]) -> [8 8 7 7 9 9]", "(dupli [8 7 8 6]) -> [8 8 7 7 8 8 6 6]", "(dupli [6 9 7 8 4]) -> [6 6 9 9 7 7 8 8 4 4]", "(dupli [3 2 4]) -> [3 3 2 2 4 4]", "(dupli [5]) -> [5 5]", "(dupli [4 9 3 1]) -> [4 4 9 9 3 3 1 1]", "(dupli [7 6 8 6 6]) -> [7 7 6 6 8 8 6 6 6 6]", "(dupli [6 4 5 6 7]) -> [6 6 4 4 5 5 6 6 7 7]", "(dupli [7 0 5]) -> [7 7 0 0 5 5]", "(dupli [2 4 9 6 5]) -> [2 2 4 4 9 9 6 6 5 5]", "(dupli []) -> []", "(dupli [0 5 1 3]) -> [0 0 5 5 1 1 3 3]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli []) -> []", "(dupli [4 4 7]) -> [4 4 4 4 7 7]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [8 5 3 3]) -> [8 8 5 5 3 3 3 3]", "(dupli [8]) -> [8 8]", "(dupli [5 8 3 8]) -> [5 5 8 8 3 3 8 8]", "(dupli [5 4 0 5]) -> [5 5 4 4 0 0 5 5]"], "time": 0.250279, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [8 3 5]) -> [8 8 3 3 5 5]", "(dupli [7]) -> [7 7]", "(dupli [5]) -> [5 5]", "(dupli [9 6 0 7]) -> [9 9 6 6 0 0 7 7]", "(dupli [1 1 6]) -> [1 1 1 1 6 6]", "(dupli [8]) -> [8 8]", "(dupli [9 5 1]) -> [9 9 5 5 1 1]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [8 5 4 5 1]) -> [8 8 5 5 4 4 5 5 1 1]", "(dupli [0 4 4]) -> [0 0 4 4 4 4]", "(dupli [9 9 2 8 7]) -> [9 9 9 9 2 2 8 8 7 7]", "(dupli [2 0 7 5 1]) -> [2 2 0 0 7 7 5 5 1 1]", "(dupli [1 7 7 4]) -> [1 1 7 7 7 7 4 4]", "(dupli [0 3 0 3 7]) -> [0 0 3 3 0 0 3 3 7 7]", "(dupli [1 1 8 4 3]) -> [1 1 1 1 8 8 4 4 3 3]", "(dupli [3 8 6 8 3]) -> [3 3 8 8 6 6 8 8 3 3]", "(dupli [6 4 2 4]) -> [6 6 4 4 2 2 4 4]", "(dupli [9 8 5]) -> [9 9 8 8 5 5]", "(dupli [0 6 8 0]) -> [0 0 6 6 8 8 0 0]", "(dupli [4 1 7 5]) -> [4 4 1 1 7 7 5 5]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [1 6 3 6]) -> [1 1 6 6 3 3 6 6]", "(dupli [4 5 8]) -> [4 4 5 5 8 8]", "(dupli [4 4 4 0 2]) -> [4 4 4 4 4 4 0 0 2 2]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [6 3 1 5]) -> [6 6 3 3 1 1 5 5]", "(dupli [3 8 0 5 4]) -> [3 3 8 8 0 0 5 5 4 4]", "(dupli [3 9 1 4]) -> [3 3 9 9 1 1 4 4]", "(dupli []) -> []", "(dupli [1 7 1]) -> [1 1 7 7 1 1]", "(dupli [0 4 2 6 7]) -> [0 0 4 4 2 2 6 6 7 7]", "(dupli [8 4 3 3]) -> [8 8 4 4 3 3 3 3]", "(dupli [9 3 9 3 7]) -> [9 9 3 3 9 9 3 3 7 7]", "(dupli [8 3 7 9]) -> [8 8 3 3 7 7 9 9]", "(dupli [2 4 0 9]) -> [2 2 4 4 0 0 9 9]", "(dupli [7 4]) -> [7 7 4 4]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [4 8 7]) -> [4 4 8 8 7 7]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [9 9]) -> [9 9 9 9]", "(dupli [4 4 4]) -> [4 4 4 4 4 4]", "(dupli [1 9 9 4]) -> [1 1 9 9 9 9 4 4]"], "time": 0.193855, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [9 8 1 1]) -> [9 9 8 8 1 1 1 1]", "(dupli [5 7 6 6]) -> [5 5 7 7 6 6 6 6]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [4]) -> [4 4]", "(dupli [1 8]) -> [1 1 8 8]", "(dupli [6 3 2 2]) -> [6 6 3 3 2 2 2 2]", "(dupli []) -> []", "(dupli [8 1 0]) -> [8 8 1 1 0 0]", "(dupli []) -> []", "(dupli [5 7 0 6]) -> [5 5 7 7 0 0 6 6]", "(dupli [7 1 2]) -> [7 7 1 1 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 6 8 1 8]) -> [4 4 6 6 8 8 1 1 8 8]", "(dupli []) -> []", "(dupli [8 4 7 6]) -> [8 8 4 4 7 7 6 6]", "(dupli [3 5 7 3]) -> [3 3 5 5 7 7 3 3]", "(dupli [7 1 3 8]) -> [7 7 1 1 3 3 8 8]", "(dupli [7 8 8 2]) -> [7 7 8 8 8 8 2 2]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [5 6]) -> [5 5 6 6]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [7 4 7]) -> [7 7 4 4 7 7]", "(dupli [4 7 0 1 3]) -> [4 4 7 7 0 0 1 1 3 3]", "(dupli [8 9]) -> [8 8 9 9]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [7 2 4 2 2]) -> [7 7 2 2 4 4 2 2 2 2]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [5 7 0 7 7]) -> [5 5 7 7 0 0 7 7 7 7]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [4 0 3]) -> [4 4 0 0 3 3]", "(dupli [5]) -> [5 5]", "(dupli [1 0 6]) -> [1 1 0 0 6 6]", "(dupli [4 7 3 2]) -> [4 4 7 7 3 3 2 2]", "(dupli []) -> []", "(dupli [0 8 8 7]) -> [0 0 8 8 8 8 7 7]", "(dupli [3 1 9 6]) -> [3 3 1 1 9 9 6 6]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [5]) -> [5 5]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [4 8 4 1]) -> [4 4 8 8 4 4 1 1]", "(dupli [5 1 5]) -> [5 5 1 1 5 5]", "(dupli [3 2 9 6]) -> [3 3 2 2 9 9 6 6]"], "time": 0.250859, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 7 5 7 9]) -> [3 3 7 7 5 5 7 7 9 9]", "(dupli [2 6 6 5]) -> [2 2 6 6 6 6 5 5]", "(dupli [9 2 3 7 0]) -> [9 9 2 2 3 3 7 7 0 0]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [8 4]) -> [8 8 4 4]", "(dupli [9 9 5 4 0]) -> [9 9 9 9 5 5 4 4 0 0]", "(dupli [9 7 9]) -> [9 9 7 7 9 9]", "(dupli [2 1 6 1 3]) -> [2 2 1 1 6 6 1 1 3 3]", "(dupli [1 5 1]) -> [1 1 5 5 1 1]", "(dupli [4 9 4 5]) -> [4 4 9 9 4 4 5 5]", "(dupli [9]) -> [9 9]", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [5 5 1 7]) -> [5 5 5 5 1 1 7 7]", "(dupli [9 7 7 2]) -> [9 9 7 7 7 7 2 2]", "(dupli [2 4 7]) -> [2 2 4 4 7 7]", "(dupli [4 5]) -> [4 4 5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 1 6]) -> [0 0 1 1 6 6]", "(dupli [8 9 1]) -> [8 8 9 9 1 1]", "(dupli [2 4 5 5 6]) -> [2 2 4 4 5 5 5 5 6 6]", "(dupli [3]) -> [3 3]", "(dupli [3 4 2 8 1]) -> [3 3 4 4 2 2 8 8 1 1]", "(dupli [4 5 6 5 3]) -> [4 4 5 5 6 6 5 5 3 3]", "(dupli [7 5 9 6 1]) -> [7 7 5 5 9 9 6 6 1 1]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [8 7 3 9]) -> [8 8 7 7 3 3 9 9]", "(dupli [3 9 3 4 1]) -> [3 3 9 9 3 3 4 4 1 1]", "(dupli [3 7 8]) -> [3 3 7 7 8 8]", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [4 1 1 1 2]) -> [4 4 1 1 1 1 1 1 2 2]", "(dupli [5 4 3]) -> [5 5 4 4 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [2 7 0]) -> [2 2 7 7 0 0]", "(dupli [7 3 7]) -> [7 7 3 3 7 7]", "(dupli [6]) -> [6 6]", "(dupli [1 8 1]) -> [1 1 8 8 1 1]", "(dupli [5 5 7 5]) -> [5 5 5 5 7 7 5 5]", "(dupli [7]) -> [7 7]", "(dupli [1 5 2 2]) -> [1 1 5 5 2 2 2 2]"], "time": 0.228612, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [1 6 9 5]) -> [1 1 6 6 9 9 5 5]", "(dupli [6 8]) -> [6 6 8 8]", "(dupli [9]) -> [9 9]", "(dupli [1 8 4 0 1]) -> [1 1 8 8 4 4 0 0 1 1]", "(dupli [7 8 2 9]) -> [7 7 8 8 2 2 9 9]", "(dupli [0 9 0]) -> [0 0 9 9 0 0]", "(dupli [6 0 5 1]) -> [6 6 0 0 5 5 1 1]", "(dupli [1 3 1]) -> [1 1 3 3 1 1]", "(dupli [0 2 5 5]) -> [0 0 2 2 5 5 5 5]", "(dupli [5]) -> [5 5]", "(dupli [7]) -> [7 7]", "(dupli [5 1 4 5 9]) -> [5 5 1 1 4 4 5 5 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 4 1]) -> [5 5 4 4 1 1]", "(dupli [6 4 0 6 0]) -> [6 6 4 4 0 0 6 6 0 0]", "(dupli [4 3 7]) -> [4 4 3 3 7 7]", "(dupli [6 8 9 7]) -> [6 6 8 8 9 9 7 7]", "(dupli [0 5 3]) -> [0 0 5 5 3 3]", "(dupli [3 3 9 8]) -> [3 3 3 3 9 9 8 8]", "(dupli [6 3 9 1 2]) -> [6 6 3 3 9 9 1 1 2 2]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [1 9 0]) -> [1 1 9 9 0 0]", "(dupli [2 9 1 7 0]) -> [2 2 9 9 1 1 7 7 0 0]", "(dupli [0 0 4 3 6]) -> [0 0 0 0 4 4 3 3 6 6]", "(dupli [2 6 0 0 4]) -> [2 2 6 6 0 0 0 0 4 4]", "(dupli [6 2 0 2 3]) -> [6 6 2 2 0 0 2 2 3 3]", "(dupli [8 8 9]) -> [8 8 8 8 9 9]", "(dupli [9 0 9]) -> [9 9 0 0 9 9]", "(dupli [8 7 5]) -> [8 8 7 7 5 5]", "(dupli [6 4 0]) -> [6 6 4 4 0 0]", "(dupli [8 6 6 5 6]) -> [8 8 6 6 6 6 5 5 6 6]", "(dupli []) -> []", "(dupli [6 0 7]) -> [6 6 0 0 7 7]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli [5 6]) -> [5 5 6 6]", "(dupli [3 0 7 1]) -> [3 3 0 0 7 7 1 1]", "(dupli [0 1 8 7 6]) -> [0 0 1 1 8 8 7 7 6 6]", "(dupli [4 9 9]) -> [4 4 9 9 9 9]", "(dupli [9 1 1]) -> [9 9 1 1 1 1]", "(dupli [4]) -> [4 4]", "(dupli [2 8 1]) -> [2 2 8 8 1 1]", "(dupli []) -> []", "(dupli [4 2 0 6]) -> [4 4 2 2 0 0 6 6]"], "time": 0.235957, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [1 0 2]) -> [1 1 0 0 2 2]", "(dupli [5 7 5 9]) -> [5 5 7 7 5 5 9 9]", "(dupli [6 1]) -> [6 6 1 1]", "(dupli [0 4]) -> [0 0 4 4]", "(dupli [2 4]) -> [2 2 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 2 1 3]) -> [3 3 2 2 1 1 3 3]", "(dupli [2 2 9]) -> [2 2 2 2 9 9]", "(dupli [3]) -> [3 3]", "(dupli [8 6 8 6]) -> [8 8 6 6 8 8 6 6]", "(dupli [8 5 4]) -> [8 8 5 5 4 4]", "(dupli [7]) -> [7 7]", "(dupli [4 1 1 2]) -> [4 4 1 1 1 1 2 2]", "(dupli [8 2]) -> [8 8 2 2]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [0 2 6 9]) -> [0 0 2 2 6 6 9 9]", "(dupli [2 2 2]) -> [2 2 2 2 2 2]", "(dupli []) -> []", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli [3 2 6 4 8]) -> [3 3 2 2 6 6 4 4 8 8]", "(dupli [5 6 6 6 8]) -> [5 5 6 6 6 6 6 6 8 8]", "(dupli [7 0 9]) -> [7 7 0 0 9 9]", "(dupli [9 8 0 2]) -> [9 9 8 8 0 0 2 2]", "(dupli []) -> []", "(dupli [0 8 4 9]) -> [0 0 8 8 4 4 9 9]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [3 5 1 1 3]) -> [3 3 5 5 1 1 1 1 3 3]", "(dupli [0 5 6 7 6]) -> [0 0 5 5 6 6 7 7 6 6]", "(dupli []) -> []", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [6 0 4 8 9]) -> [6 6 0 0 4 4 8 8 9 9]", "(dupli [3 5 7]) -> [3 3 5 5 7 7]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli []) -> []", "(dupli [0 7]) -> [0 0 7 7]", "(dupli [1 4 6 2]) -> [1 1 4 4 6 6 2 2]", "(dupli [8 6 8]) -> [8 8 6 6 8 8]", "(dupli [1 5 7 2 2]) -> [1 1 5 5 7 7 2 2 2 2]", "(dupli [6]) -> [6 6]", "(dupli [2 1 4 6 6]) -> [2 2 1 1 4 4 6 6 6 6]", "(dupli [8 9 3]) -> [8 8 9 9 3 3]", "(dupli [9]) -> [9 9]", "(dupli [3 5 5]) -> [3 3 5 5 5 5]", "(dupli [1 6 7 0]) -> [1 1 6 6 7 7 0 0]", "(dupli [5 0 3 6 1]) -> [5 5 0 0 3 3 6 6 1 1]"], "time": 0.273477, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [3]) -> [3 3]", "(dupli [0 4 8]) -> [0 0 4 4 8 8]", "(dupli [3 7 6 9 4]) -> [3 3 7 7 6 6 9 9 4 4]", "(dupli [5 6 2 1 4]) -> [5 5 6 6 2 2 1 1 4 4]", "(dupli [6 8 7 7]) -> [6 6 8 8 7 7 7 7]", "(dupli [5 9 3 1 5]) -> [5 5 9 9 3 3 1 1 5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 0 7]) -> [8 8 0 0 7 7]", "(dupli [7]) -> [7 7]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [1 5 1 8 0]) -> [1 1 5 5 1 1 8 8 0 0]", "(dupli []) -> []", "(dupli [2 8 6 1 2]) -> [2 2 8 8 6 6 1 1 2 2]", "(dupli [1 8 7]) -> [1 1 8 8 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [5 7 9 2 8]) -> [5 5 7 7 9 9 2 2 8 8]", "(dupli [8 2 3 6]) -> [8 8 2 2 3 3 6 6]", "(dupli [4 7 8 9]) -> [4 4 7 7 8 8 9 9]", "(dupli [0 5 9 4]) -> [0 0 5 5 9 9 4 4]", "(dupli [6 7 5 1]) -> [6 6 7 7 5 5 1 1]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [4]) -> [4 4]", "(dupli [3 1 8 2 8]) -> [3 3 1 1 8 8 2 2 8 8]", "(dupli []) -> []", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [6]) -> [6 6]", "(dupli [1 7 7]) -> [1 1 7 7 7 7]", "(dupli [6 4 5 1]) -> [6 6 4 4 5 5 1 1]", "(dupli [2 5 6 0]) -> [2 2 5 5 6 6 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 8 9 2 1]) -> [7 7 8 8 9 9 2 2 1 1]", "(dupli [6 5 5 7 0]) -> [6 6 5 5 5 5 7 7 0 0]", "(dupli [8 1 0 5]) -> [8 8 1 1 0 0 5 5]", "(dupli [1 9 8]) -> [1 1 9 9 8 8]", "(dupli [5 0 8 2 7]) -> [5 5 0 0 8 8 2 2 7 7]", "(dupli [8 2]) -> [8 8 2 2]", "(dupli [5 8 9 4]) -> [5 5 8 8 9 9 4 4]", "(dupli [5 6]) -> [5 5 6 6]", "(dupli [8]) -> [8 8]", "(dupli [2 7 4 4 1]) -> [2 2 7 7 4 4 4 4 1 1]", "(dupli [0]) -> [0 0]", "(dupli [5 6 0 6 8]) -> [5 5 6 6 0 0 6 6 8 8]", "(dupli [7 9 2]) -> [7 7 9 9 2 2]"], "time": 0.246729, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli []) -> []", "(dupli [0 4 5 5]) -> [0 0 4 4 5 5 5 5]", "(dupli [0 3]) -> [0 0 3 3]", "(dupli [9 9 5 8]) -> [9 9 9 9 5 5 8 8]", "(dupli [2]) -> [2 2]", "(dupli [9 8 9 2 7]) -> [9 9 8 8 9 9 2 2 7 7]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [5 1 5]) -> [5 5 1 1 5 5]", "(dupli [1 3 8 9 8]) -> [1 1 3 3 8 8 9 9 8 8]", "(dupli [7 6 3]) -> [7 7 6 6 3 3]", "(dupli [1 6 9 1 7]) -> [1 1 6 6 9 9 1 1 7 7]", "(dupli [5 0]) -> [5 5 0 0]", "(dupli []) -> []", "(dupli [7 2 5 5 7]) -> [7 7 2 2 5 5 5 5 7 7]", "(dupli [5]) -> [5 5]", "(dupli [9 5 3 4]) -> [9 9 5 5 3 3 4 4]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli [3]) -> [3 3]", "(dupli [0 7 1]) -> [0 0 7 7 1 1]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [5 0 2 5 2]) -> [5 5 0 0 2 2 5 5 2 2]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [1]) -> [1 1]", "(dupli [5 5 6]) -> [5 5 5 5 6 6]", "(dupli [0 1 3 3 3]) -> [0 0 1 1 3 3 3 3 3 3]", "(dupli []) -> []", "(dupli [0 4 7 6 5]) -> [0 0 4 4 7 7 6 6 5 5]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [1]) -> [1 1]", "(dupli [5 3 1 7]) -> [5 5 3 3 1 1 7 7]", "(dupli []) -> []", "(dupli [7 4 6 6 1]) -> [7 7 4 4 6 6 6 6 1 1]", "(dupli [2 6 9 3 9]) -> [2 2 6 6 9 9 3 3 9 9]", "(dupli [4]) -> [4 4]", "(dupli [5 7 7]) -> [5 5 7 7 7 7]", "(dupli [8 0 9]) -> [8 8 0 0 9 9]", "(dupli [0 3 6 1]) -> [0 0 3 3 6 6 1 1]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [1 7 0 4 0]) -> [1 1 7 7 0 0 4 4 0 0]", "(dupli [8 1 4 9]) -> [8 8 1 1 4 4 9 9]", "(dupli [7 4 5]) -> [7 7 4 4 5 5]", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [8 6 9]) -> [8 8 6 6 9 9]"], "time": 0.211836, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [8 5 3 5]) -> [8 8 5 5 3 3 5 5]", "(dupli [7 0 7 0]) -> [7 7 0 0 7 7 0 0]", "(dupli [5 6 5]) -> [5 5 6 6 5 5]", "(dupli [8]) -> [8 8]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [6 3]) -> [6 6 3 3]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [0 7 9]) -> [0 0 7 7 9 9]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [5]) -> [5 5]", "(dupli [8 1 7]) -> [8 8 1 1 7 7]", "(dupli []) -> []", "(dupli [1 0 8 0]) -> [1 1 0 0 8 8 0 0]", "(dupli []) -> []", "(dupli [6 9 0 3]) -> [6 6 9 9 0 0 3 3]", "(dupli [8 3 1 0 9]) -> [8 8 3 3 1 1 0 0 9 9]", "(dupli [1 4 8 1]) -> [1 1 4 4 8 8 1 1]", "(dupli [2 8 0 1]) -> [2 2 8 8 0 0 1 1]", "(dupli [0 1 4 0 1]) -> [0 0 1 1 4 4 0 0 1 1]", "(dupli [8 8 8 0 7]) -> [8 8 8 8 8 8 0 0 7 7]", "(dupli [9 8 1 6]) -> [9 9 8 8 1 1 6 6]", "(dupli [9 1 4 6]) -> [9 9 1 1 4 4 6 6]", "(dupli []) -> []", "(dupli [0 4 3 1]) -> [0 0 4 4 3 3 1 1]", "(dupli [7 5]) -> [7 7 5 5]", "(dupli [6 6 0 1]) -> [6 6 6 6 0 0 1 1]", "(dupli [9 6 2 9]) -> [9 9 6 6 2 2 9 9]", "(dupli [3 3 6 0 6]) -> [3 3 3 3 6 6 0 0 6 6]", "(dupli [1 2 2 1 6]) -> [1 1 2 2 2 2 1 1 6 6]", "(dupli [5 8 4 4]) -> [5 5 8 8 4 4 4 4]", "(dupli [4 4 6 8]) -> [4 4 4 4 6 6 8 8]", "(dupli [2 5 4 5]) -> [2 2 5 5 4 4 5 5]", "(dupli [2 4 2 7]) -> [2 2 4 4 2 2 7 7]", "(dupli [4]) -> [4 4]", "(dupli [2 3 8]) -> [2 2 3 3 8 8]", "(dupli []) -> []", "(dupli [0 8 9 3 8]) -> [0 0 8 8 9 9 3 3 8 8]", "(dupli []) -> []", "(dupli [6 5 4 8 3]) -> [6 6 5 5 4 4 8 8 3 3]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [5 1]) -> [5 5 1 1]", "(dupli [6]) -> [6 6]", "(dupli [5 7 6]) -> [5 5 7 7 6 6]", "(dupli [1 0 4 1]) -> [1 1 0 0 4 4 1 1]", "(dupli [5]) -> [5 5]", "(dupli [0 7 5]) -> [0 0 7 7 5 5]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [0 4]) -> [0 0 4 4]"], "time": 0.20049, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [2 4]) -> [2 2 4 4]", "(dupli [6 6 7]) -> [6 6 6 6 7 7]", "(dupli []) -> []", "(dupli [3 4 7 5]) -> [3 3 4 4 7 7 5 5]", "(dupli [1 3 7 3]) -> [1 1 3 3 7 7 3 3]", "(dupli [2 7 2 9 1]) -> [2 2 7 7 2 2 9 9 1 1]", "(dupli [4 1 0 1]) -> [4 4 1 1 0 0 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [6 0 1]) -> [6 6 0 0 1 1]", "(dupli [0 6 5 5]) -> [0 0 6 6 5 5 5 5]", "(dupli [0 7 5 9 3]) -> [0 0 7 7 5 5 9 9 3 3]", "(dupli []) -> []", "(dupli [8 8 4]) -> [8 8 8 8 4 4]", "(dupli [6 8 3 1]) -> [6 6 8 8 3 3 1 1]", "(dupli [2]) -> [2 2]", "(dupli [5 0 0]) -> [5 5 0 0 0 0]", "(dupli []) -> []", "(dupli [6 0]) -> [6 6 0 0]", "(dupli [2 4 1 1 9]) -> [2 2 4 4 1 1 1 1 9 9]", "(dupli [6 5 1 4 3]) -> [6 6 5 5 1 1 4 4 3 3]", "(dupli [4 8 6 1]) -> [4 4 8 8 6 6 1 1]", "(dupli [3]) -> [3 3]", "(dupli [3 7]) -> [3 3 7 7]", "(dupli [6 6 5 1]) -> [6 6 6 6 5 5 1 1]", "(dupli [8 1 9 2 1]) -> [8 8 1 1 9 9 2 2 1 1]", "(dupli [4 7 9 3]) -> [4 4 7 7 9 9 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 0 6 6]) -> [3 3 0 0 6 6 6 6]", "(dupli [0 6 8 3]) -> [0 0 6 6 8 8 3 3]", "(dupli []) -> []", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [7 4 9 1]) -> [7 7 4 4 9 9 1 1]", "(dupli [0 1 0 9]) -> [0 0 1 1 0 0 9 9]", "(dupli [1 5 3 7 0]) -> [1 1 5 5 3 3 7 7 0 0]", "(dupli [2 8 3]) -> [2 2 8 8 3 3]", "(dupli [9 9]) -> [9 9 9 9]", "(dupli [3 0 1]) -> [3 3 0 0 1 1]", "(dupli []) -> []", "(dupli [9 3 3]) -> [9 9 3 3 3 3]", "(dupli [4]) -> [4 4]", "(dupli [0 9 9 4]) -> [0 0 9 9 9 9 4 4]", "(dupli [3 8 7 4]) -> [3 3 8 8 7 7 4 4]", "(dupli [2 5]) -> [2 2 5 5]", "(dupli [4 9]) -> [4 4 9 9]"], "time": 0.196501, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 8 1 6]) -> [2 2 8 8 1 1 6 6]", "(dupli [1 9 7 7 7]) -> [1 1 9 9 7 7 7 7 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [9 4 1 7]) -> [9 9 4 4 1 1 7 7]", "(dupli [4 0 1]) -> [4 4 0 0 1 1]", "(dupli [8 0 1]) -> [8 8 0 0 1 1]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli []) -> []", "(dupli [6 1]) -> [6 6 1 1]", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [8 5 2 1]) -> [8 8 5 5 2 2 1 1]", "(dupli [4 3 1 4]) -> [4 4 3 3 1 1 4 4]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [8 4 8 8 4]) -> [8 8 4 4 8 8 8 8 4 4]", "(dupli [1 2 4 2 2]) -> [1 1 2 2 4 4 2 2 2 2]", "(dupli [9 4 6 4 4]) -> [9 9 4 4 6 6 4 4 4 4]", "(dupli [2 3 0 7 2]) -> [2 2 3 3 0 0 7 7 2 2]", "(dupli [1 4 5 4 8]) -> [1 1 4 4 5 5 4 4 8 8]", "(dupli [7]) -> [7 7]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 1 9]) -> [4 4 1 1 9 9]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [1 1 9 4 8]) -> [1 1 1 1 9 9 4 4 8 8]", "(dupli [8 7 6 9]) -> [8 8 7 7 6 6 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [1]) -> [1 1]", "(dupli [7 0 1]) -> [7 7 0 0 1 1]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [2 4 3]) -> [2 2 4 4 3 3]", "(dupli [3]) -> [3 3]", "(dupli [1]) -> [1 1]", "(dupli [9 5 1]) -> [9 9 5 5 1 1]", "(dupli [0 3 9 5]) -> [0 0 3 3 9 9 5 5]", "(dupli [0 2 2]) -> [0 0 2 2 2 2]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [6 2]) -> [6 6 2 2]", "(dupli [7 0 6 7 3]) -> [7 7 0 0 6 6 7 7 3 3]", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [3]) -> [3 3]", "(dupli [4 3 4 9 1]) -> [4 4 3 3 4 4 9 9 1 1]"], "time": 0.236822, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 9 9 8]) -> [4 4 9 9 9 9 8 8]", "(dupli [4]) -> [4 4]", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [7 5 2]) -> [7 7 5 5 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [2 1 6]) -> [2 2 1 1 6 6]", "(dupli [4]) -> [4 4]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli []) -> []", "(dupli [0 3 2 6]) -> [0 0 3 3 2 2 6 6]", "(dupli [7 2 6]) -> [7 7 2 2 6 6]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [4 2 2 4]) -> [4 4 2 2 2 2 4 4]", "(dupli [9 2 6 0]) -> [9 9 2 2 6 6 0 0]", "(dupli [2 2 5]) -> [2 2 2 2 5 5]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [1 6 1]) -> [1 1 6 6 1 1]", "(dupli [7]) -> [7 7]", "(dupli [9]) -> [9 9]", "(dupli [1]) -> [1 1]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [5 2 6]) -> [5 5 2 2 6 6]", "(dupli [5 6 5]) -> [5 5 6 6 5 5]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli [2 5 0 1 9]) -> [2 2 5 5 0 0 1 1 9 9]", "(dupli [2 2 5]) -> [2 2 2 2 5 5]", "(dupli [1 8 5 0]) -> [1 1 8 8 5 5 0 0]", "(dupli [7 8 2 4]) -> [7 7 8 8 2 2 4 4]", "(dupli [7 9 9 2 3]) -> [7 7 9 9 9 9 2 2 3 3]", "(dupli []) -> []", "(dupli [5 0 7 9]) -> [5 5 0 0 7 7 9 9]", "(dupli [9 4 7]) -> [9 9 4 4 7 7]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli [5]) -> [5 5]", "(dupli [1 1 2]) -> [1 1 1 1 2 2]", "(dupli [3 1 6]) -> [3 3 1 1 6 6]", "(dupli []) -> []", "(dupli [4 7 1 2]) -> [4 4 7 7 1 1 2 2]"], "time": 0.256188, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 6 5 7]) -> [0 0 6 6 5 5 7 7]", "(dupli [2]) -> [2 2]", "(dupli [1 5 5 3 0]) -> [1 1 5 5 5 5 3 3 0 0]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [3 3 8 1 8]) -> [3 3 3 3 8 8 1 1 8 8]", "(dupli [8 3 6 7]) -> [8 8 3 3 6 6 7 7]", "(dupli [5 8 4]) -> [5 5 8 8 4 4]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli [7]) -> [7 7]", "(dupli [3 5 9 6 7]) -> [3 3 5 5 9 9 6 6 7 7]", "(dupli []) -> []", "(dupli [3 1]) -> [3 3 1 1]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [9 3 8 3 9]) -> [9 9 3 3 8 8 3 3 9 9]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 6]) -> [4 4 6 6]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [1 7 8 2]) -> [1 1 7 7 8 8 2 2]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [3 5 1 3 7]) -> [3 3 5 5 1 1 3 3 7 7]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [1 1 0]) -> [1 1 1 1 0 0]", "(dupli [1]) -> [1 1]", "(dupli [0 1 5 4 0]) -> [0 0 1 1 5 5 4 4 0 0]", "(dupli [1 9 1 9]) -> [1 1 9 9 1 1 9 9]", "(dupli [0 7 4 7 8]) -> [0 0 7 7 4 4 7 7 8 8]", "(dupli [9 9 5 1]) -> [9 9 9 9 5 5 1 1]", "(dupli [8 3 2 4 0]) -> [8 8 3 3 2 2 4 4 0 0]", "(dupli []) -> []", "(dupli [9 5 2 3 8]) -> [9 9 5 5 2 2 3 3 8 8]", "(dupli []) -> []", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [0 5 9]) -> [0 0 5 5 9 9]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [5 1 8 8]) -> [5 5 1 1 8 8 8 8]", "(dupli [1 1 2]) -> [1 1 1 1 2 2]", "(dupli [8 6 0]) -> [8 8 6 6 0 0]", "(dupli [6 8 0]) -> [6 6 8 8 0 0]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [9 2 2]) -> [9 9 2 2 2 2]", "(dupli [5 8 6 4 5]) -> [5 5 8 8 6 6 4 4 5 5]", "(dupli [7 6 7]) -> [7 7 6 6 7 7]"], "time": 0.263724, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7 1 1 5]) -> [7 7 1 1 1 1 5 5]", "(dupli [7]) -> [7 7]", "(dupli [4]) -> [4 4]", "(dupli [9]) -> [9 9]", "(dupli [2 1 4 0]) -> [2 2 1 1 4 4 0 0]", "(dupli [7 6 3 6 7]) -> [7 7 6 6 3 3 6 6 7 7]", "(dupli [7 8 9]) -> [7 7 8 8 9 9]", "(dupli [8 9]) -> [8 8 9 9]", "(dupli [5 4 0]) -> [5 5 4 4 0 0]", "(dupli []) -> []", "(dupli [6 7 4]) -> [6 6 7 7 4 4]", "(dupli [6 1 1 1]) -> [6 6 1 1 1 1 1 1]", "(dupli [2 9 3 0]) -> [2 2 9 9 3 3 0 0]", "(dupli [0 5 7]) -> [0 0 5 5 7 7]", "(dupli []) -> []", "(dupli [6 7 6 9]) -> [6 6 7 7 6 6 9 9]", "(dupli [9 9 1]) -> [9 9 9 9 1 1]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [0 7 6 8 8]) -> [0 0 7 7 6 6 8 8 8 8]", "(dupli [4]) -> [4 4]", "(dupli [6 9]) -> [6 6 9 9]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [6 6 5]) -> [6 6 6 6 5 5]", "(dupli [6 9 5 6]) -> [6 6 9 9 5 5 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 4]) -> [6 6 4 4]", "(dupli []) -> []", "(dupli [5 1 4]) -> [5 5 1 1 4 4]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [2 6 9]) -> [2 2 6 6 9 9]", "(dupli []) -> []", "(dupli [7 4 5 6 8]) -> [7 7 4 4 5 5 6 6 8 8]", "(dupli [4 0 9 4 1]) -> [4 4 0 0 9 9 4 4 1 1]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [0 2 9]) -> [0 0 2 2 9 9]", "(dupli [2 4 9]) -> [2 2 4 4 9 9]", "(dupli [0 0 8 6]) -> [0 0 0 0 8 8 6 6]", "(dupli []) -> []", "(dupli [4 8]) -> [4 4 8 8]", "(dupli []) -> []", "(dupli [1 1 0 5 8]) -> [1 1 1 1 0 0 5 5 8 8]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [2 1 8 3]) -> [2 2 1 1 8 8 3 3]"], "time": 0.198946, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 9 4]) -> [4 4 9 9 4 4]", "(dupli [1 0 4 1 7]) -> [1 1 0 0 4 4 1 1 7 7]", "(dupli [7 4]) -> [7 7 4 4]", "(dupli [0 0 5 5]) -> [0 0 0 0 5 5 5 5]", "(dupli [9 1 3 1]) -> [9 9 1 1 3 3 1 1]", "(dupli [5]) -> [5 5]", "(dupli [7 8 5 9 5]) -> [7 7 8 8 5 5 9 9 5 5]", "(dupli [6]) -> [6 6]", "(dupli [6 1 0 3 9]) -> [6 6 1 1 0 0 3 3 9 9]", "(dupli [0 3 0 7]) -> [0 0 3 3 0 0 7 7]", "(dupli [4 5 4 6 9]) -> [4 4 5 5 4 4 6 6 9 9]", "(dupli [4 0 4]) -> [4 4 0 0 4 4]", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [7 3 8 6]) -> [7 7 3 3 8 8 6 6]", "(dupli [5 8 8 6]) -> [5 5 8 8 8 8 6 6]", "(dupli [3 8 1 8]) -> [3 3 8 8 1 1 8 8]", "(dupli [6 4 9 2]) -> [6 6 4 4 9 9 2 2]", "(dupli [1 7 8 3]) -> [1 1 7 7 8 8 3 3]", "(dupli [9]) -> [9 9]", "(dupli [1 4 7]) -> [1 1 4 4 7 7]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [9 7 8]) -> [9 9 7 7 8 8]", "(dupli [0 5 2 7]) -> [0 0 5 5 2 2 7 7]", "(dupli [8 1]) -> [8 8 1 1]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli []) -> []", "(dupli [9 0 6]) -> [9 9 0 0 6 6]", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [8 1 4 8]) -> [8 8 1 1 4 4 8 8]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [7 6 1]) -> [7 7 6 6 1 1]", "(dupli [7 8 5]) -> [7 7 8 8 5 5]", "(dupli [5 3 5 7 1]) -> [5 5 3 3 5 5 7 7 1 1]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [6 7 7 0 1]) -> [6 6 7 7 7 7 0 0 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 1]) -> [5 5 1 1]", "(dupli []) -> []", "(dupli [8 0 8 0]) -> [8 8 0 0 8 8 0 0]", "(dupli [0 0 7]) -> [0 0 0 0 7 7]", "(dupli [2 8 6 7 9]) -> [2 2 8 8 6 6 7 7 9 9]", "(dupli []) -> []", "(dupli [9 5 7 0]) -> [9 9 5 5 7 7 0 0]"], "time": 0.203767, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [3 7 1]) -> [3 3 7 7 1 1]", "(dupli []) -> []", "(dupli [3 6 1 0 2]) -> [3 3 6 6 1 1 0 0 2 2]", "(dupli [7]) -> [7 7]", "(dupli [3 1 5 7]) -> [3 3 1 1 5 5 7 7]", "(dupli [9 7 7]) -> [9 9 7 7 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 3 9 1]) -> [7 7 3 3 9 9 1 1]", "(dupli [6 5 2]) -> [6 6 5 5 2 2]", "(dupli [9 4 1 8 2]) -> [9 9 4 4 1 1 8 8 2 2]", "(dupli [2 1 7 4]) -> [2 2 1 1 7 7 4 4]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli []) -> []", "(dupli [0 0 3 1]) -> [0 0 0 0 3 3 1 1]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [5 4 2]) -> [5 5 4 4 2 2]", "(dupli [6 0 1 3]) -> [6 6 0 0 1 1 3 3]", "(dupli [2 5 4 4 5]) -> [2 2 5 5 4 4 4 4 5 5]", "(dupli []) -> []", "(dupli [3 8 9]) -> [3 3 8 8 9 9]", "(dupli [1]) -> [1 1]", "(dupli [2 6 1 5]) -> [2 2 6 6 1 1 5 5]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [3 1 2]) -> [3 3 1 1 2 2]", "(dupli [5]) -> [5 5]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli []) -> []", "(dupli [9 5 3 9]) -> [9 9 5 5 3 3 9 9]", "(dupli [7 4 6 4]) -> [7 7 4 4 6 6 4 4]", "(dupli [9 4 0]) -> [9 9 4 4 0 0]", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli []) -> []", "(dupli [1 5 4 0 1]) -> [1 1 5 5 4 4 0 0 1 1]", "(dupli [9 5 6 8]) -> [9 9 5 5 6 6 8 8]", "(dupli []) -> []", "(dupli [5 1 3]) -> [5 5 1 1 3 3]", "(dupli [8 5 7 5]) -> [8 8 5 5 7 7 5 5]", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [5]) -> [5 5]", "(dupli [6 3 5]) -> [6 6 3 3 5 5]", "(dupli [4 3 4 6]) -> [4 4 3 3 4 4 6 6]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [3 0 1 5]) -> [3 3 0 0 1 1 5 5]", "(dupli []) -> []"], "time": 0.205556, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [0 6 2]) -> [0 0 6 6 2 2]", "(dupli [2 6 3 0 6]) -> [2 2 6 6 3 3 0 0 6 6]", "(dupli [5]) -> [5 5]", "(dupli [4 4 4 8]) -> [4 4 4 4 4 4 8 8]", "(dupli []) -> []", "(dupli [5 7 0 6]) -> [5 5 7 7 0 0 6 6]", "(dupli [9 5 0]) -> [9 9 5 5 0 0]", "(dupli []) -> []", "(dupli [8 0 4 2]) -> [8 8 0 0 4 4 2 2]", "(dupli [3 5 0 7]) -> [3 3 5 5 0 0 7 7]", "(dupli [6]) -> [6 6]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli []) -> []", "(dupli [5 7 4]) -> [5 5 7 7 4 4]", "(dupli [6 3 1 6 2]) -> [6 6 3 3 1 1 6 6 2 2]", "(dupli [2 5 5 2]) -> [2 2 5 5 5 5 2 2]", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [2]) -> [2 2]", "(dupli [1 7 5]) -> [1 1 7 7 5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 4 3 6 0]) -> [0 0 4 4 3 3 6 6 0 0]", "(dupli [6 6 0 1 4]) -> [6 6 6 6 0 0 1 1 4 4]", "(dupli [3 0 7 8 3]) -> [3 3 0 0 7 7 8 8 3 3]", "(dupli [0]) -> [0 0]", "(dupli [6 0 0 0]) -> [6 6 0 0 0 0 0 0]", "(dupli [8]) -> [8 8]", "(dupli [3 1 4]) -> [3 3 1 1 4 4]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [8]) -> [8 8]", "(dupli [3 2 9 4 2]) -> [3 3 2 2 9 9 4 4 2 2]", "(dupli [4]) -> [4 4]", "(dupli [4]) -> [4 4]", "(dupli [6 8 4 0 6]) -> [6 6 8 8 4 4 0 0 6 6]", "(dupli [7 9 1 1]) -> [7 7 9 9 1 1 1 1]", "(dupli []) -> []", "(dupli [1 8 3 6 5]) -> [1 1 8 8 3 3 6 6 5 5]", "(dupli [5 9 1 8 5]) -> [5 5 9 9 1 1 8 8 5 5]", "(dupli [7 1 1 7 7]) -> [7 7 1 1 1 1 7 7 7 7]", "(dupli [1 4 8 1 8]) -> [1 1 4 4 8 8 1 1 8 8]", "(dupli [9]) -> [9 9]", "(dupli [8]) -> [8 8]", "(dupli [6]) -> [6 6]", "(dupli [8 6 9]) -> [8 8 6 6 9 9]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [6 9 9 9]) -> [6 6 9 9 9 9 9 9]"], "time": 0.224868, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7 4 8]) -> [7 7 4 4 8 8]", "(dupli [7 0 7]) -> [7 7 0 0 7 7]", "(dupli [2 4 3]) -> [2 2 4 4 3 3]", "(dupli [1 2 4 2 0]) -> [1 1 2 2 4 4 2 2 0 0]", "(dupli [2 0 2]) -> [2 2 0 0 2 2]", "(dupli [9 0 1]) -> [9 9 0 0 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 6]) -> [6 6 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [0 7 4]) -> [0 0 7 7 4 4]", "(dupli [2]) -> [2 2]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [5 2 8 1 2]) -> [5 5 2 2 8 8 1 1 2 2]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [4]) -> [4 4]", "(dupli [8 7 8 5]) -> [8 8 7 7 8 8 5 5]", "(dupli [0 1 9 0]) -> [0 0 1 1 9 9 0 0]", "(dupli []) -> []", "(dupli [8 3 3 4]) -> [8 8 3 3 3 3 4 4]", "(dupli [6 8 7]) -> [6 6 8 8 7 7]", "(dupli [9 0 4]) -> [9 9 0 0 4 4]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [9 6 8 7]) -> [9 9 6 6 8 8 7 7]", "(dupli [2 7 7 9 3]) -> [2 2 7 7 7 7 9 9 3 3]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [6 0 2]) -> [6 6 0 0 2 2]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [5 7 1 8 3]) -> [5 5 7 7 1 1 8 8 3 3]", "(dupli [7 9 5 0 0]) -> [7 7 9 9 5 5 0 0 0 0]", "(dupli [1 7 5 8]) -> [1 1 7 7 5 5 8 8]", "(dupli [1]) -> [1 1]", "(dupli [9]) -> [9 9]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [7 9 0]) -> [7 7 9 9 0 0]", "(dupli [2 1 3]) -> [2 2 1 1 3 3]", "(dupli []) -> []", "(dupli [3 1 0 6]) -> [3 3 1 1 0 0 6 6]", "(dupli [4 9 6 2]) -> [4 4 9 9 6 6 2 2]", "(dupli [6 6]) -> [6 6 6 6]"], "time": 0.217139, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 1 4]) -> [9 9 1 1 4 4]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [5 6 5 6]) -> [5 5 6 6 5 5 6 6]", "(dupli [4 5 0 3]) -> [4 4 5 5 0 0 3 3]", "(dupli []) -> []", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [4 0 3 7]) -> [4 4 0 0 3 3 7 7]", "(dupli [5 7 3 1 4]) -> [5 5 7 7 3 3 1 1 4 4]", "(dupli [6 5]) -> [6 6 5 5]", "(dupli [9 6 3 7 9]) -> [9 9 6 6 3 3 7 7 9 9]", "(dupli [2 7 9 1]) -> [2 2 7 7 9 9 1 1]", "(dupli [6 7]) -> [6 6 7 7]", "(dupli [0 3 4 5]) -> [0 0 3 3 4 4 5 5]", "(dupli [3 5 2 3 1]) -> [3 3 5 5 2 2 3 3 1 1]", "(dupli [0]) -> [0 0]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [9 4 3 2 8]) -> [9 9 4 4 3 3 2 2 8 8]", "(dupli [2 5 2]) -> [2 2 5 5 2 2]", "(dupli [0 0 8 8]) -> [0 0 0 0 8 8 8 8]", "(dupli [4 0 8 7]) -> [4 4 0 0 8 8 7 7]", "(dupli [3]) -> [3 3]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli []) -> []", "(dupli [8 3 2 9]) -> [8 8 3 3 2 2 9 9]", "(dupli [5 1]) -> [5 5 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 7 5 1]) -> [8 8 7 7 5 5 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [9 7 3 3 1]) -> [9 9 7 7 3 3 3 3 1 1]", "(dupli []) -> []", "(dupli [4 7]) -> [4 4 7 7]", "(dupli []) -> []", "(dupli [9 9 5 3]) -> [9 9 9 9 5 5 3 3]", "(dupli [0 2 5 9]) -> [0 0 2 2 5 5 9 9]", "(dupli []) -> []", "(dupli [1 0 3 4 7]) -> [1 1 0 0 3 3 4 4 7 7]", "(dupli [2]) -> [2 2]", "(dupli [3 9]) -> [3 3 9 9]", "(dupli [6]) -> [6 6]", "(dupli [9 1 7 4 5]) -> [9 9 1 1 7 7 4 4 5 5]"], "time": 0.22153, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 7 6]) -> [2 2 7 7 6 6]", "(dupli [1 4 9 4]) -> [1 1 4 4 9 9 4 4]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [7 5 3 2 3]) -> [7 7 5 5 3 3 2 2 3 3]", "(dupli [8]) -> [8 8]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [0 3]) -> [0 0 3 3]", "(dupli [5 1 9 2 6]) -> [5 5 1 1 9 9 2 2 6 6]", "(dupli [9]) -> [9 9]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [8 9 2 9]) -> [8 8 9 9 2 2 9 9]", "(dupli [2 0 2]) -> [2 2 0 0 2 2]", "(dupli [9]) -> [9 9]", "(dupli [1 7 6 5 1]) -> [1 1 7 7 6 6 5 5 1 1]", "(dupli [6]) -> [6 6]", "(dupli [2]) -> [2 2]", "(dupli [0 1 3 8 5]) -> [0 0 1 1 3 3 8 8 5 5]", "(dupli [0 9 0]) -> [0 0 9 9 0 0]", "(dupli [6 2 7]) -> [6 6 2 2 7 7]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [8]) -> [8 8]", "(dupli [8 5 9 7 0]) -> [8 8 5 5 9 9 7 7 0 0]", "(dupli [4 0 0 7 8]) -> [4 4 0 0 0 0 7 7 8 8]", "(dupli [0 7 6]) -> [0 0 7 7 6 6]", "(dupli [0 5 2 9 3]) -> [0 0 5 5 2 2 9 9 3 3]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [6 5 9]) -> [6 6 5 5 9 9]", "(dupli [5 7 3 8]) -> [5 5 7 7 3 3 8 8]", "(dupli [0 0 3]) -> [0 0 0 0 3 3]", "(dupli [5]) -> [5 5]", "(dupli [3 7 5]) -> [3 3 7 7 5 5]", "(dupli []) -> []", "(dupli [0 6 8]) -> [0 0 6 6 8 8]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [8 9 8 4 3]) -> [8 8 9 9 8 8 4 4 3 3]", "(dupli [1 5 0 0 3]) -> [1 1 5 5 0 0 0 0 3 3]", "(dupli []) -> []", "(dupli [7 3]) -> [7 7 3 3]", "(dupli []) -> []", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [7 8 1 3 4]) -> [7 7 8 8 1 1 3 3 4 4]", "(dupli []) -> []", "(dupli [8 9 9]) -> [8 8 9 9 9 9]"], "time": 0.21585, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [2]) -> [2 2]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli [3 4 9 4 6]) -> [3 3 4 4 9 9 4 4 6 6]", "(dupli [7 4 0]) -> [7 7 4 4 0 0]", "(dupli [9 6 0]) -> [9 9 6 6 0 0]", "(dupli [6 1]) -> [6 6 1 1]", "(dupli [5 7 9 8 9]) -> [5 5 7 7 9 9 8 8 9 9]", "(dupli [2 5 3 2 1]) -> [2 2 5 5 3 3 2 2 1 1]", "(dupli [7 5 0 2 7]) -> [7 7 5 5 0 0 2 2 7 7]", "(dupli [1 6 4 5]) -> [1 1 6 6 4 4 5 5]", "(dupli [4 2 7 3 7]) -> [4 4 2 2 7 7 3 3 7 7]", "(dupli [8 2 9 3 9]) -> [8 8 2 2 9 9 3 3 9 9]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli [9 4 3 6]) -> [9 9 4 4 3 3 6 6]", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [2]) -> [2 2]", "(dupli [6 6 5 7]) -> [6 6 6 6 5 5 7 7]", "(dupli []) -> []", "(dupli [0 1 0]) -> [0 0 1 1 0 0]", "(dupli [7 1 5 5 8]) -> [7 7 1 1 5 5 5 5 8 8]", "(dupli [3 4 9 8 6]) -> [3 3 4 4 9 9 8 8 6 6]", "(dupli [7 3 7]) -> [7 7 3 3 7 7]", "(dupli []) -> []", "(dupli [7 0 0 0 3]) -> [7 7 0 0 0 0 0 0 3 3]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli [8 2 4 5 2]) -> [8 8 2 2 4 4 5 5 2 2]", "(dupli [3]) -> [3 3]", "(dupli [5 5 6 3]) -> [5 5 5 5 6 6 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 9 6]) -> [0 0 9 9 6 6]", "(dupli [1 0 0 4]) -> [1 1 0 0 0 0 4 4]", "(dupli []) -> []", "(dupli [0 3 8]) -> [0 0 3 3 8 8]", "(dupli [9 1 4 2 5]) -> [9 9 1 1 4 4 2 2 5 5]", "(dupli [1 6 5]) -> [1 1 6 6 5 5]", "(dupli [1 7 4]) -> [1 1 7 7 4 4]", "(dupli [7 8 5 3]) -> [7 7 8 8 5 5 3 3]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [3 9 7 1]) -> [3 3 9 9 7 7 1 1]", "(dupli [7 6 5]) -> [7 7 6 6 5 5]", "(dupli [0 1 3]) -> [0 0 1 1 3 3]", "(dupli [9 3 9 2 0]) -> [9 9 3 3 9 9 2 2 0 0]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [4]) -> [4 4]", "(dupli [5]) -> [5 5]"], "time": 0.23728, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 5]) -> [2 2 5 5]", "(dupli [5 8 9 1 0]) -> [5 5 8 8 9 9 1 1 0 0]", "(dupli [7 5 9]) -> [7 7 5 5 9 9]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [2 3 1 1]) -> [2 2 3 3 1 1 1 1]", "(dupli [9 6 0 3]) -> [9 9 6 6 0 0 3 3]", "(dupli [5 2 6 1]) -> [5 5 2 2 6 6 1 1]", "(dupli [2]) -> [2 2]", "(dupli [2 0 7 3 5]) -> [2 2 0 0 7 7 3 3 5 5]", "(dupli [1]) -> [1 1]", "(dupli [3 6 9 0]) -> [3 3 6 6 9 9 0 0]", "(dupli []) -> []", "(dupli [9 2 2]) -> [9 9 2 2 2 2]", "(dupli [7 0 8 1 0]) -> [7 7 0 0 8 8 1 1 0 0]", "(dupli [4 1 6]) -> [4 4 1 1 6 6]", "(dupli [8 5 9]) -> [8 8 5 5 9 9]", "(dupli [3 7]) -> [3 3 7 7]", "(dupli [5 0 2 8]) -> [5 5 0 0 2 2 8 8]", "(dupli [9 8 8 9 2]) -> [9 9 8 8 8 8 9 9 2 2]", "(dupli []) -> []", "(dupli [5 4]) -> [5 5 4 4]", "(dupli [6 6 3 1 4]) -> [6 6 6 6 3 3 1 1 4 4]", "(dupli [0 6 5 9]) -> [0 0 6 6 5 5 9 9]", "(dupli [1 4 8 5 3]) -> [1 1 4 4 8 8 5 5 3 3]", "(dupli [0]) -> [0 0]", "(dupli [2 4]) -> [2 2 4 4]", "(dupli [6 5 7 0 6]) -> [6 6 5 5 7 7 0 0 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 1 1]) -> [3 3 1 1 1 1]", "(dupli [9 4 9 3]) -> [9 9 4 4 9 9 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [3 8 5]) -> [3 3 8 8 5 5]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [0 5 5 4 7]) -> [0 0 5 5 5 5 4 4 7 7]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [8]) -> [8 8]", "(dupli [6 3 8 7 2]) -> [6 6 3 3 8 8 7 7 2 2]", "(dupli [7 6 7]) -> [7 7 6 6 7 7]", "(dupli [9 5 9]) -> [9 9 5 5 9 9]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [5 0 2]) -> [5 5 0 0 2 2]"], "time": 0.231269, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 5]) -> [3 3 5 5]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [3 5 2 9]) -> [3 3 5 5 2 2 9 9]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [0]) -> [0 0]", "(dupli [0 8 2]) -> [0 0 8 8 2 2]", "(dupli [4 0 5]) -> [4 4 0 0 5 5]", "(dupli [4 7 4]) -> [4 4 7 7 4 4]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [3 2 8]) -> [3 3 2 2 8 8]", "(dupli [9 6 6 3 8]) -> [9 9 6 6 6 6 3 3 8 8]", "(dupli [3 5 5 4 3]) -> [3 3 5 5 5 5 4 4 3 3]", "(dupli [8 0 9 6 7]) -> [8 8 0 0 9 9 6 6 7 7]", "(dupli []) -> []", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [3 8 3 6 8]) -> [3 3 8 8 3 3 6 6 8 8]", "(dupli [7]) -> [7 7]", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [7 2 1 6 1]) -> [7 7 2 2 1 1 6 6 1 1]", "(dupli [3 7 2 5 2]) -> [3 3 7 7 2 2 5 5 2 2]", "(dupli []) -> []", "(dupli [6 1 2 2 8]) -> [6 6 1 1 2 2 2 2 8 8]", "(dupli [0]) -> [0 0]", "(dupli [4 1 2]) -> [4 4 1 1 2 2]", "(dupli [1 8 7]) -> [1 1 8 8 7 7]", "(dupli [4 3 7 9]) -> [4 4 3 3 7 7 9 9]", "(dupli [8 2]) -> [8 8 2 2]", "(dupli [9 6 4 5 8]) -> [9 9 6 6 4 4 5 5 8 8]", "(dupli [7 8 1]) -> [7 7 8 8 1 1]", "(dupli [5 2 3]) -> [5 5 2 2 3 3]", "(dupli [2 5 0 9 1]) -> [2 2 5 5 0 0 9 9 1 1]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [6 4 9]) -> [6 6 4 4 9 9]", "(dupli [1]) -> [1 1]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [3 8 6]) -> [3 3 8 8 6 6]", "(dupli [0 8 7 7 0]) -> [0 0 8 8 7 7 7 7 0 0]", "(dupli [7]) -> [7 7]", "(dupli [4 9 2 1 9]) -> [4 4 9 9 2 2 1 1 9 9]", "(dupli [6 1 9]) -> [6 6 1 1 9 9]", "(dupli [7 5]) -> [7 7 5 5]", "(dupli [9 3 1 1 2]) -> [9 9 3 3 1 1 1 1 2 2]", "(dupli [4 0]) -> [4 4 0 0]", "(dupli []) -> []", "(dupli [2]) -> [2 2]"], "time": 0.21829, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [5 6 5 5 1]) -> [5 5 6 6 5 5 5 5 1 1]", "(dupli [5 6]) -> [5 5 6 6]", "(dupli [0 5 8 7 6]) -> [0 0 5 5 8 8 7 7 6 6]", "(dupli [3 7 1]) -> [3 3 7 7 1 1]", "(dupli [2 4 4 4 3]) -> [2 2 4 4 4 4 4 4 3 3]", "(dupli [8 2 6]) -> [8 8 2 2 6 6]", "(dupli []) -> []", "(dupli [7 3 1 2]) -> [7 7 3 3 1 1 2 2]", "(dupli [0 4]) -> [0 0 4 4]", "(dupli [2 5 4 2 7]) -> [2 2 5 5 4 4 2 2 7 7]", "(dupli [1 2 4 6 6]) -> [1 1 2 2 4 4 6 6 6 6]", "(dupli [3 1 7 0]) -> [3 3 1 1 7 7 0 0]", "(dupli [8 4 3 9 3]) -> [8 8 4 4 3 3 9 9 3 3]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [8 9 1 7 0]) -> [8 8 9 9 1 1 7 7 0 0]", "(dupli [0 6 7 6]) -> [0 0 6 6 7 7 6 6]", "(dupli []) -> []", "(dupli [5 8 6 0]) -> [5 5 8 8 6 6 0 0]", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [1 7 2 1]) -> [1 1 7 7 2 2 1 1]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [8 4]) -> [8 8 4 4]", "(dupli [1]) -> [1 1]", "(dupli [0 5 3]) -> [0 0 5 5 3 3]", "(dupli [5 2 3 7]) -> [5 5 2 2 3 3 7 7]", "(dupli [5 8 0 8]) -> [5 5 8 8 0 0 8 8]", "(dupli [6 3 3]) -> [6 6 3 3 3 3]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [1]) -> [1 1]", "(dupli [4 8 2]) -> [4 4 8 8 2 2]", "(dupli [9 0 2 3]) -> [9 9 0 0 2 2 3 3]", "(dupli [2 6 8 5 3]) -> [2 2 6 6 8 8 5 5 3 3]", "(dupli [8 3 7]) -> [8 8 3 3 7 7]", "(dupli [5 5 4 2 0]) -> [5 5 5 5 4 4 2 2 0 0]", "(dupli [6]) -> [6 6]", "(dupli [5 1]) -> [5 5 1 1]", "(dupli [9 6 0 4 8]) -> [9 9 6 6 0 0 4 4 8 8]", "(dupli []) -> []", "(dupli [3 0]) -> [3 3 0 0]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [2 2]) -> [2 2 2 2]"], "time": 0.221946, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [4 6 2 1]) -> [4 4 6 6 2 2 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 2 4 7]) -> [0 0 2 2 4 4 7 7]", "(dupli []) -> []", "(dupli [9 0 4]) -> [9 9 0 0 4 4]", "(dupli [5 3 0 5]) -> [5 5 3 3 0 0 5 5]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [1]) -> [1 1]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [5 7 6]) -> [5 5 7 7 6 6]", "(dupli [2]) -> [2 2]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [5]) -> [5 5]", "(dupli [1 2 7 3 6]) -> [1 1 2 2 7 7 3 3 6 6]", "(dupli []) -> []", "(dupli [5 2 4 4]) -> [5 5 2 2 4 4 4 4]", "(dupli [4 4 3]) -> [4 4 4 4 3 3]", "(dupli [8 2 9]) -> [8 8 2 2 9 9]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [9 3]) -> [9 9 3 3]", "(dupli []) -> []", "(dupli [2 5]) -> [2 2 5 5]", "(dupli []) -> []", "(dupli [9 9 0 1 8]) -> [9 9 9 9 0 0 1 1 8 8]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [1 0 4]) -> [1 1 0 0 4 4]", "(dupli [7 3 3 5]) -> [7 7 3 3 3 3 5 5]", "(dupli [9 4 2]) -> [9 9 4 4 2 2]", "(dupli [4 8 9]) -> [4 4 8 8 9 9]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [5 0 6 6 3]) -> [5 5 0 0 6 6 6 6 3 3]", "(dupli [0 1 3 9]) -> [0 0 1 1 3 3 9 9]", "(dupli [2 5 1]) -> [2 2 5 5 1 1]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [9 8 5 4 4]) -> [9 9 8 8 5 5 4 4 4 4]", "(dupli [2]) -> [2 2]", "(dupli [3 3 4]) -> [3 3 3 3 4 4]", "(dupli [4 1 2]) -> [4 4 1 1 2 2]", "(dupli []) -> []", "(dupli [6 4 5 1 8]) -> [6 6 4 4 5 5 1 1 8 8]", "(dupli [0 4 6]) -> [0 0 4 4 6 6]"], "time": 0.234966, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 3 7 6]) -> [9 9 3 3 7 7 6 6]", "(dupli [0 5 1]) -> [0 0 5 5 1 1]", "(dupli [3 1 4]) -> [3 3 1 1 4 4]", "(dupli [5 3 3 9 6]) -> [5 5 3 3 3 3 9 9 6 6]", "(dupli [1 4]) -> [1 1 4 4]", "(dupli [4]) -> [4 4]", "(dupli [9 4 3 8 2]) -> [9 9 4 4 3 3 8 8 2 2]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [4]) -> [4 4]", "(dupli [6 6 7]) -> [6 6 6 6 7 7]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli [4 7 8 6]) -> [4 4 7 7 8 8 6 6]", "(dupli [6 6 8]) -> [6 6 6 6 8 8]", "(dupli [5]) -> [5 5]", "(dupli [5 0 0]) -> [5 5 0 0 0 0]", "(dupli []) -> []", "(dupli [6 6 8]) -> [6 6 6 6 8 8]", "(dupli [6]) -> [6 6]", "(dupli [4 6 0 9]) -> [4 4 6 6 0 0 9 9]", "(dupli [2 3 7]) -> [2 2 3 3 7 7]", "(dupli [0]) -> [0 0]", "(dupli [1 5 5 1 3]) -> [1 1 5 5 5 5 1 1 3 3]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli [9 9 3]) -> [9 9 9 9 3 3]", "(dupli [7 1 5 3]) -> [7 7 1 1 5 5 3 3]", "(dupli [1 8 8 8 1]) -> [1 1 8 8 8 8 8 8 1 1]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [3 3 7 9 2]) -> [3 3 3 3 7 7 9 9 2 2]", "(dupli [0 7 4 0]) -> [0 0 7 7 4 4 0 0]", "(dupli [6]) -> [6 6]", "(dupli [0]) -> [0 0]", "(dupli [2]) -> [2 2]", "(dupli [7 3 9]) -> [7 7 3 3 9 9]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli [6 0 3 2]) -> [6 6 0 0 3 3 2 2]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [5 9 4 8]) -> [5 5 9 9 4 4 8 8]", "(dupli [8 4]) -> [8 8 4 4]", "(dupli [6]) -> [6 6]", "(dupli [0 4 7]) -> [0 0 4 4 7 7]"], "time": 0.239689, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [8 0 0 0 5]) -> [8 8 0 0 0 0 0 0 5 5]", "(dupli []) -> []", "(dupli [3 8 1]) -> [3 3 8 8 1 1]", "(dupli [2 5 3 6 9]) -> [2 2 5 5 3 3 6 6 9 9]", "(dupli [6 9 1]) -> [6 6 9 9 1 1]", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [2 2 5 3 4]) -> [2 2 2 2 5 5 3 3 4 4]", "(dupli [6]) -> [6 6]", "(dupli [0]) -> [0 0]", "(dupli [6 3 3]) -> [6 6 3 3 3 3]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [0 5 2 3]) -> [0 0 5 5 2 2 3 3]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [3 4 1]) -> [3 3 4 4 1 1]", "(dupli [7]) -> [7 7]", "(dupli [2 7 8 3 7]) -> [2 2 7 7 8 8 3 3 7 7]", "(dupli [6 9 4 7]) -> [6 6 9 9 4 4 7 7]", "(dupli [5 6 0 2]) -> [5 5 6 6 0 0 2 2]", "(dupli [2 6 3 0 9]) -> [2 2 6 6 3 3 0 0 9 9]", "(dupli [8 5 8 9 0]) -> [8 8 5 5 8 8 9 9 0 0]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [5]) -> [5 5]", "(dupli [4]) -> [4 4]", "(dupli [6 1]) -> [6 6 1 1]", "(dupli []) -> []", "(dupli [3 7]) -> [3 3 7 7]", "(dupli []) -> []", "(dupli [4 0]) -> [4 4 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [6 3 0 7 6]) -> [6 6 3 3 0 0 7 7 6 6]", "(dupli [9 3 6 7]) -> [9 9 3 3 6 6 7 7]", "(dupli [3 5 2 4 7]) -> [3 3 5 5 2 2 4 4 7 7]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli [8]) -> [8 8]", "(dupli [0 1 1 0 4]) -> [0 0 1 1 1 1 0 0 4 4]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [6 7 2 2 8]) -> [6 6 7 7 2 2 2 2 8 8]", "(dupli [7]) -> [7 7]", "(dupli [9]) -> [9 9]", "(dupli [9 9 3]) -> [9 9 9 9 3 3]", "(dupli [5 3 8]) -> [5 5 3 3 8 8]", "(dupli [2 7 1]) -> [2 2 7 7 1 1]", "(dupli [8 6 6 6 0]) -> [8 8 6 6 6 6 6 6 0 0]"], "time": 0.24579, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [8 5 0]) -> [8 8 5 5 0 0]", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [6]) -> [6 6]", "(dupli [6 9 1]) -> [6 6 9 9 1 1]", "(dupli [2 3 2 4 9]) -> [2 2 3 3 2 2 4 4 9 9]", "(dupli [6 6 7 6 0]) -> [6 6 6 6 7 7 6 6 0 0]", "(dupli [0 7 7 0]) -> [0 0 7 7 7 7 0 0]", "(dupli [0 7 8 8]) -> [0 0 7 7 8 8 8 8]", "(dupli [3 9 6 5]) -> [3 3 9 9 6 6 5 5]", "(dupli [4 1 0 8 0]) -> [4 4 1 1 0 0 8 8 0 0]", "(dupli [5 0 7 7 7]) -> [5 5 0 0 7 7 7 7 7 7]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [3 4 2 3 7]) -> [3 3 4 4 2 2 3 3 7 7]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [1 3 3]) -> [1 1 3 3 3 3]", "(dupli [8]) -> [8 8]", "(dupli [0]) -> [0 0]", "(dupli [0 2 9]) -> [0 0 2 2 9 9]", "(dupli [2 9 0 1 9]) -> [2 2 9 9 0 0 1 1 9 9]", "(dupli [7 0 7 4 8]) -> [7 7 0 0 7 7 4 4 8 8]", "(dupli [6 9]) -> [6 6 9 9]", "(dupli [9 2]) -> [9 9 2 2]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [7 3 8 3]) -> [7 7 3 3 8 8 3 3]", "(dupli [7 5 5 3]) -> [7 7 5 5 5 5 3 3]", "(dupli []) -> []", "(dupli [5 0 0 1]) -> [5 5 0 0 0 0 1 1]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [7]) -> [7 7]", "(dupli [6 2 5]) -> [6 6 2 2 5 5]", "(dupli [1 2 8]) -> [1 1 2 2 8 8]", "(dupli [6 4 3 6]) -> [6 6 4 4 3 3 6 6]", "(dupli [0 9 3]) -> [0 0 9 9 3 3]", "(dupli [6 1 8]) -> [6 6 1 1 8 8]", "(dupli [9]) -> [9 9]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [2 9 0 2 3]) -> [2 2 9 9 0 0 2 2 3 3]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [6 7 8 8]) -> [6 6 7 7 8 8 8 8]", "(dupli []) -> []", "(dupli [3 1 1]) -> [3 3 1 1 1 1]"], "time": 0.229841, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 0 5 4 3]) -> [0 0 0 0 5 5 4 4 3 3]", "(dupli [6]) -> [6 6]", "(dupli [1 7 6]) -> [1 1 7 7 6 6]", "(dupli [3 7 9 0 1]) -> [3 3 7 7 9 9 0 0 1 1]", "(dupli [5]) -> [5 5]", "(dupli [8 2 6 2 2]) -> [8 8 2 2 6 6 2 2 2 2]", "(dupli [9 2 7]) -> [9 9 2 2 7 7]", "(dupli [5 7 4 1 6]) -> [5 5 7 7 4 4 1 1 6 6]", "(dupli [0 8 0 2 7]) -> [0 0 8 8 0 0 2 2 7 7]", "(dupli [5 9]) -> [5 5 9 9]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [7 7 7 1]) -> [7 7 7 7 7 7 1 1]", "(dupli [7 4]) -> [7 7 4 4]", "(dupli []) -> []", "(dupli [2 0]) -> [2 2 0 0]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [8 1 1]) -> [8 8 1 1 1 1]", "(dupli [7 7 4]) -> [7 7 7 7 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 8 5 1 9]) -> [6 6 8 8 5 5 1 1 9 9]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [0 6 1 7]) -> [0 0 6 6 1 1 7 7]", "(dupli [1 9 7 5 9]) -> [1 1 9 9 7 7 5 5 9 9]", "(dupli [1 7 2 0 0]) -> [1 1 7 7 2 2 0 0 0 0]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [4 0 3 5 9]) -> [4 4 0 0 3 3 5 5 9 9]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [6 1]) -> [6 6 1 1]", "(dupli [5 5 9 7 8]) -> [5 5 5 5 9 9 7 7 8 8]", "(dupli [8 1]) -> [8 8 1 1]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [7 0]) -> [7 7 0 0]", "(dupli [8 9 0]) -> [8 8 9 9 0 0]", "(dupli [9 8 5 1 7]) -> [9 9 8 8 5 5 1 1 7 7]", "(dupli [4 5 4]) -> [4 4 5 5 4 4]", "(dupli [6 5 8]) -> [6 6 5 5 8 8]", "(dupli [6 2 4 7]) -> [6 6 2 2 4 4 7 7]"], "time": 0.248185, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 2 5 8 4]) -> [0 0 2 2 5 5 8 8 4 4]", "(dupli [6 0 5]) -> [6 6 0 0 5 5]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [0 0 9 2 4]) -> [0 0 0 0 9 9 2 2 4 4]", "(dupli [6 4 3 9 6]) -> [6 6 4 4 3 3 9 9 6 6]", "(dupli [3 4 1 4 9]) -> [3 3 4 4 1 1 4 4 9 9]", "(dupli [5 1 8 2 4]) -> [5 5 1 1 8 8 2 2 4 4]", "(dupli [8]) -> [8 8]", "(dupli [1 9]) -> [1 1 9 9]", "(dupli [1 2 3]) -> [1 1 2 2 3 3]", "(dupli [4 4 2 6 2]) -> [4 4 4 4 2 2 6 6 2 2]", "(dupli []) -> []", "(dupli [3 9]) -> [3 3 9 9]", "(dupli []) -> []", "(dupli [6 2 9 3]) -> [6 6 2 2 9 9 3 3]", "(dupli [3 9 5 4]) -> [3 3 9 9 5 5 4 4]", "(dupli [4]) -> [4 4]", "(dupli [2 9 8 7 2]) -> [2 2 9 9 8 8 7 7 2 2]", "(dupli [2 8 9 5]) -> [2 2 8 8 9 9 5 5]", "(dupli [1 5 6]) -> [1 1 5 5 6 6]", "(dupli []) -> []", "(dupli [2 3 5]) -> [2 2 3 3 5 5]", "(dupli [2 5 4 2 5]) -> [2 2 5 5 4 4 2 2 5 5]", "(dupli [1 5 8 8 4]) -> [1 1 5 5 8 8 8 8 4 4]", "(dupli [8 7 0 1]) -> [8 8 7 7 0 0 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 4]) -> [0 0 4 4]", "(dupli [6 0 5 0 3]) -> [6 6 0 0 5 5 0 0 3 3]", "(dupli [2 2 9 6]) -> [2 2 2 2 9 9 6 6]", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [9 6 7]) -> [9 9 6 6 7 7]", "(dupli [2]) -> [2 2]", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [3 1 8 3 9]) -> [3 3 1 1 8 8 3 3 9 9]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [9 7 6 2]) -> [9 9 7 7 6 6 2 2]", "(dupli [7 0 7]) -> [7 7 0 0 7 7]", "(dupli []) -> []", "(dupli [8 3 5]) -> [8 8 3 3 5 5]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [6 6 9 5]) -> [6 6 6 6 9 9 5 5]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli []) -> []"], "time": 0.200098, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [5]) -> [5 5]", "(dupli [6 5 6 5 2]) -> [6 6 5 5 6 6 5 5 2 2]", "(dupli [3 3 9 8]) -> [3 3 3 3 9 9 8 8]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [0 2 2]) -> [0 0 2 2 2 2]", "(dupli [3 0 9 9]) -> [3 3 0 0 9 9 9 9]", "(dupli [1 0 3]) -> [1 1 0 0 3 3]", "(dupli [5 6 9]) -> [5 5 6 6 9 9]", "(dupli [1 5 2 0]) -> [1 1 5 5 2 2 0 0]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli []) -> []", "(dupli [9 9 0 6 7]) -> [9 9 9 9 0 0 6 6 7 7]", "(dupli [1 7 3 4 8]) -> [1 1 7 7 3 3 4 4 8 8]", "(dupli [1 5 8 7]) -> [1 1 5 5 8 8 7 7]", "(dupli []) -> []", "(dupli [7 6]) -> [7 7 6 6]", "(dupli []) -> []", "(dupli [6 2]) -> [6 6 2 2]", "(dupli [5 6 2]) -> [5 5 6 6 2 2]", "(dupli [7 1 3]) -> [7 7 1 1 3 3]", "(dupli [3]) -> [3 3]", "(dupli [6 1 5 9]) -> [6 6 1 1 5 5 9 9]", "(dupli [8 5 7 9]) -> [8 8 5 5 7 7 9 9]", "(dupli [9 5 1 1 2]) -> [9 9 5 5 1 1 1 1 2 2]", "(dupli [7 3 8]) -> [7 7 3 3 8 8]", "(dupli [3 4 1 4]) -> [3 3 4 4 1 1 4 4]", "(dupli [4 0 5 0]) -> [4 4 0 0 5 5 0 0]", "(dupli []) -> []", "(dupli [8 8 9 6 1]) -> [8 8 8 8 9 9 6 6 1 1]", "(dupli [9 8 5]) -> [9 9 8 8 5 5]", "(dupli [2 7 9 0]) -> [2 2 7 7 9 9 0 0]", "(dupli [0 7 0]) -> [0 0 7 7 0 0]", "(dupli [0 6 3 8]) -> [0 0 6 6 3 3 8 8]", "(dupli [0 3 7]) -> [0 0 3 3 7 7]", "(dupli [1]) -> [1 1]", "(dupli [4 0 6 4 3]) -> [4 4 0 0 6 6 4 4 3 3]", "(dupli [9 5 5 9 6]) -> [9 9 5 5 5 5 9 9 6 6]", "(dupli [9 5 5 8]) -> [9 9 5 5 5 5 8 8]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [3 5]) -> [3 3 5 5]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [9 1 3 9]) -> [9 9 1 1 3 3 9 9]", "(dupli [9 3 7]) -> [9 9 3 3 7 7]"], "time": 0.195286, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 7 7]) -> [9 9 7 7 7 7]", "(dupli [8 4]) -> [8 8 4 4]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [2]) -> [2 2]", "(dupli [0 4 8]) -> [0 0 4 4 8 8]", "(dupli [0]) -> [0 0]", "(dupli [8 9 1 8 2]) -> [8 8 9 9 1 1 8 8 2 2]", "(dupli [7 8 5 1]) -> [7 7 8 8 5 5 1 1]", "(dupli [7 4 8 1]) -> [7 7 4 4 8 8 1 1]", "(dupli [0 1 8 9 1]) -> [0 0 1 1 8 8 9 9 1 1]", "(dupli [9 3 5 0 7]) -> [9 9 3 3 5 5 0 0 7 7]", "(dupli [7 2 1]) -> [7 7 2 2 1 1]", "(dupli []) -> []", "(dupli [7 6 9 6 8]) -> [7 7 6 6 9 9 6 6 8 8]", "(dupli [4 9 8 2]) -> [4 4 9 9 8 8 2 2]", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [5 8 5]) -> [5 5 8 8 5 5]", "(dupli []) -> []", "(dupli [3 7 6]) -> [3 3 7 7 6 6]", "(dupli [0 4 6]) -> [0 0 4 4 6 6]", "(dupli []) -> []", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [5 7 0]) -> [5 5 7 7 0 0]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [8]) -> [8 8]", "(dupli [2 3 8 8]) -> [2 2 3 3 8 8 8 8]", "(dupli [4 5 7 2]) -> [4 4 5 5 7 7 2 2]", "(dupli [6 8 9 0 7]) -> [6 6 8 8 9 9 0 0 7 7]", "(dupli []) -> []", "(dupli [2 9 9 0 1]) -> [2 2 9 9 9 9 0 0 1 1]", "(dupli [7]) -> [7 7]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [4 9 2]) -> [4 4 9 9 2 2]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [8 1]) -> [8 8 1 1]", "(dupli [2 3]) -> [2 2 3 3]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [9 4]) -> [9 9 4 4]", "(dupli [1 4 4 8 5]) -> [1 1 4 4 4 4 8 8 5 5]", "(dupli [7]) -> [7 7]", "(dupli [5 1 6 4 6]) -> [5 5 1 1 6 6 4 4 6 6]", "(dupli [4]) -> [4 4]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli []) -> []"], "time": 0.222322, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 3 4 3]) -> [9 9 3 3 4 4 3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [6 4 2]) -> [6 6 4 4 2 2]", "(dupli [4 4 7]) -> [4 4 4 4 7 7]", "(dupli [3 4 5]) -> [3 3 4 4 5 5]", "(dupli [4 7 6 4]) -> [4 4 7 7 6 6 4 4]", "(dupli []) -> []", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [1]) -> [1 1]", "(dupli [9]) -> [9 9]", "(dupli [3 2 2]) -> [3 3 2 2 2 2]", "(dupli [3 4 5 0]) -> [3 3 4 4 5 5 0 0]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [1 7 4 4]) -> [1 1 7 7 4 4 4 4]", "(dupli []) -> []", "(dupli [3 9 9 2]) -> [3 3 9 9 9 9 2 2]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli []) -> []", "(dupli [8 0]) -> [8 8 0 0]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli []) -> []", "(dupli [9 9 9]) -> [9 9 9 9 9 9]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [0 9 6 9]) -> [0 0 9 9 6 6 9 9]", "(dupli [7]) -> [7 7]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [8 2 7 3 1]) -> [8 8 2 2 7 7 3 3 1 1]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [6 9 4]) -> [6 6 9 9 4 4]", "(dupli [7 4 5 0]) -> [7 7 4 4 5 5 0 0]", "(dupli [7 2 4 8 2]) -> [7 7 2 2 4 4 8 8 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 9 5 7 0]) -> [3 3 9 9 5 5 7 7 0 0]", "(dupli []) -> []"], "time": 0.222857, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [7]) -> [7 7]", "(dupli [3 2 0 0]) -> [3 3 2 2 0 0 0 0]", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [5 1 2 1]) -> [5 5 1 1 2 2 1 1]", "(dupli [5 6]) -> [5 5 6 6]", "(dupli [2]) -> [2 2]", "(dupli [5]) -> [5 5]", "(dupli [4 4 1 5 4]) -> [4 4 4 4 1 1 5 5 4 4]", "(dupli []) -> []", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [3 2 4 5]) -> [3 3 2 2 4 4 5 5]", "(dupli [6 3 1 8 5]) -> [6 6 3 3 1 1 8 8 5 5]", "(dupli []) -> []", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [4 0 7 2 7]) -> [4 4 0 0 7 7 2 2 7 7]", "(dupli []) -> []", "(dupli [9 3 1 8]) -> [9 9 3 3 1 1 8 8]", "(dupli []) -> []", "(dupli [6 7 6 5 9]) -> [6 6 7 7 6 6 5 5 9 9]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [3 4 8 2 4]) -> [3 3 4 4 8 8 2 2 4 4]", "(dupli [7 8 1 0]) -> [7 7 8 8 1 1 0 0]", "(dupli [1 9 7 5 8]) -> [1 1 9 9 7 7 5 5 8 8]", "(dupli [2]) -> [2 2]", "(dupli [8 3 7]) -> [8 8 3 3 7 7]", "(dupli [1]) -> [1 1]", "(dupli [0 2 9 4 9]) -> [0 0 2 2 9 9 4 4 9 9]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli []) -> []", "(dupli [0 4 5 1]) -> [0 0 4 4 5 5 1 1]", "(dupli [3 4 4]) -> [3 3 4 4 4 4]", "(dupli [7 0 9 3]) -> [7 7 0 0 9 9 3 3]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [8]) -> [8 8]", "(dupli [7 0 7 3]) -> [7 7 0 0 7 7 3 3]", "(dupli [4 9 7]) -> [4 4 9 9 7 7]", "(dupli [4]) -> [4 4]", "(dupli [6 7 8 8]) -> [6 6 7 7 8 8 8 8]", "(dupli [6 7 7 6 0]) -> [6 6 7 7 7 7 6 6 0 0]", "(dupli [7 0 4]) -> [7 7 0 0 4 4]", "(dupli [9]) -> [9 9]", "(dupli [6]) -> [6 6]", "(dupli [0]) -> [0 0]", "(dupli [7]) -> [7 7]", "(dupli [8 5 9 0 5]) -> [8 8 5 5 9 9 0 0 5 5]", "(dupli [7]) -> [7 7]"], "time": 0.172293, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [2 1 6 3 0]) -> [2 2 1 1 6 6 3 3 0 0]", "(dupli []) -> []", "(dupli [0 2 6]) -> [0 0 2 2 6 6]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [6 1 4 4 8]) -> [6 6 1 1 4 4 4 4 8 8]", "(dupli [8 8 6 5]) -> [8 8 8 8 6 6 5 5]", "(dupli [9 9 9]) -> [9 9 9 9 9 9]", "(dupli [2 6 4]) -> [2 2 6 6 4 4]", "(dupli [6]) -> [6 6]", "(dupli [6 6 8 7 7]) -> [6 6 6 6 8 8 7 7 7 7]", "(dupli [6 0 7 9 5]) -> [6 6 0 0 7 7 9 9 5 5]", "(dupli [9 8 0]) -> [9 9 8 8 0 0]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 9 0 7 7]) -> [8 8 9 9 0 0 7 7 7 7]", "(dupli [5 8 4 7]) -> [5 5 8 8 4 4 7 7]", "(dupli [4 7 6 0 6]) -> [4 4 7 7 6 6 0 0 6 6]", "(dupli [7]) -> [7 7]", "(dupli [3 9 6]) -> [3 3 9 9 6 6]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [6 2 4 4 0]) -> [6 6 2 2 4 4 4 4 0 0]", "(dupli [1 1 7 8]) -> [1 1 1 1 7 7 8 8]", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [3 6 4]) -> [3 3 6 6 4 4]", "(dupli [5]) -> [5 5]", "(dupli [0 9 2]) -> [0 0 9 9 2 2]", "(dupli [0]) -> [0 0]", "(dupli [5 5 3]) -> [5 5 5 5 3 3]", "(dupli []) -> []", "(dupli [6 0 7]) -> [6 6 0 0 7 7]", "(dupli [9 3]) -> [9 9 3 3]", "(dupli [2 0 0 5 1]) -> [2 2 0 0 0 0 5 5 1 1]", "(dupli [7]) -> [7 7]", "(dupli [1 0 6 2 9]) -> [1 1 0 0 6 6 2 2 9 9]", "(dupli [6 2 2]) -> [6 6 2 2 2 2]", "(dupli [1]) -> [1 1]", "(dupli [0 8 7 0 6]) -> [0 0 8 8 7 7 0 0 6 6]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli []) -> []", "(dupli [8 7 8]) -> [8 8 7 7 8 8]", "(dupli [4 8 7]) -> [4 4 8 8 7 7]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [6]) -> [6 6]", "(dupli [4 5 6 9]) -> [4 4 5 5 6 6 9 9]"], "time": 0.233897, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [5 2 1 1 7]) -> [5 5 2 2 1 1 1 1 7 7]", "(dupli [5 7 7 4]) -> [5 5 7 7 7 7 4 4]", "(dupli [8 1 8 6]) -> [8 8 1 1 8 8 6 6]", "(dupli [0 5 5 1]) -> [0 0 5 5 5 5 1 1]", "(dupli []) -> []", "(dupli [3 2 0 3 0]) -> [3 3 2 2 0 0 3 3 0 0]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [3 5 6 5]) -> [3 3 5 5 6 6 5 5]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli []) -> []", "(dupli [0 4 2 3]) -> [0 0 4 4 2 2 3 3]", "(dupli [6 7 9 9]) -> [6 6 7 7 9 9 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [6]) -> [6 6]", "(dupli [0 8 2 9]) -> [0 0 8 8 2 2 9 9]", "(dupli [3 7 1 1]) -> [3 3 7 7 1 1 1 1]", "(dupli [1 3 7 1 9]) -> [1 1 3 3 7 7 1 1 9 9]", "(dupli [8 6 4 5]) -> [8 8 6 6 4 4 5 5]", "(dupli [6]) -> [6 6]", "(dupli [0 3 6]) -> [0 0 3 3 6 6]", "(dupli [2 6 4 5 1]) -> [2 2 6 6 4 4 5 5 1 1]", "(dupli [9 8 3 9 3]) -> [9 9 8 8 3 3 9 9 3 3]", "(dupli [2 6 1]) -> [2 2 6 6 1 1]", "(dupli [9 0 8 3]) -> [9 9 0 0 8 8 3 3]", "(dupli []) -> []", "(dupli [3 0 0 2]) -> [3 3 0 0 0 0 2 2]", "(dupli [3 8]) -> [3 3 8 8]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [7]) -> [7 7]", "(dupli [0 2 8]) -> [0 0 2 2 8 8]", "(dupli [7 3 7 6]) -> [7 7 3 3 7 7 6 6]", "(dupli [0 3 7 2 9]) -> [0 0 3 3 7 7 2 2 9 9]", "(dupli []) -> []", "(dupli [6 4 0 1]) -> [6 6 4 4 0 0 1 1]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [4]) -> [4 4]", "(dupli [2 2]) -> [2 2 2 2]", "(dupli [7 9 9 1]) -> [7 7 9 9 9 9 1 1]", "(dupli [7 9 8 0 9]) -> [7 7 9 9 8 8 0 0 9 9]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli []) -> []"], "time": 0.232732, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [1 7 9]) -> [1 1 7 7 9 9]", "(dupli [3 7 5 4 1]) -> [3 3 7 7 5 5 4 4 1 1]", "(dupli []) -> []", "(dupli [3 9 8]) -> [3 3 9 9 8 8]", "(dupli [0 1 7]) -> [0 0 1 1 7 7]", "(dupli [0 4 2 3 4]) -> [0 0 4 4 2 2 3 3 4 4]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [4 2 0 9 7]) -> [4 4 2 2 0 0 9 9 7 7]", "(dupli [6]) -> [6 6]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli [3 6 8 7 2]) -> [3 3 6 6 8 8 7 7 2 2]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [2 0 9 8]) -> [2 2 0 0 9 9 8 8]", "(dupli [2 2]) -> [2 2 2 2]", "(dupli [7 0]) -> [7 7 0 0]", "(dupli [3 5 2 9]) -> [3 3 5 5 2 2 9 9]", "(dupli [5 0]) -> [5 5 0 0]", "(dupli [7]) -> [7 7]", "(dupli [7 2 8 7]) -> [7 7 2 2 8 8 7 7]", "(dupli [1 8 1 4]) -> [1 1 8 8 1 1 4 4]", "(dupli [5 8 2 6 6]) -> [5 5 8 8 2 2 6 6 6 6]", "(dupli [8 7 8 5]) -> [8 8 7 7 8 8 5 5]", "(dupli [3 1]) -> [3 3 1 1]", "(dupli []) -> []", "(dupli [2 5 8 3]) -> [2 2 5 5 8 8 3 3]", "(dupli [4 9 2 4]) -> [4 4 9 9 2 2 4 4]", "(dupli []) -> []", "(dupli [2 0]) -> [2 2 0 0]", "(dupli [2 7]) -> [2 2 7 7]", "(dupli [6 6 9 7 4]) -> [6 6 6 6 9 9 7 7 4 4]", "(dupli [0 4 0 7]) -> [0 0 4 4 0 0 7 7]", "(dupli [8 2 3 7]) -> [8 8 2 2 3 3 7 7]", "(dupli [5 7 3]) -> [5 5 7 7 3 3]", "(dupli [8 5 6]) -> [8 8 5 5 6 6]", "(dupli [5 9 6 9]) -> [5 5 9 9 6 6 9 9]", "(dupli [1 0 6 9]) -> [1 1 0 0 6 6 9 9]", "(dupli [3]) -> [3 3]", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [6 8 4]) -> [6 6 8 8 4 4]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [2 0 6 5 3]) -> [2 2 0 0 6 6 5 5 3 3]", "(dupli [8 7 4 9]) -> [8 8 7 7 4 4 9 9]", "(dupli [5 3 3 8]) -> [5 5 3 3 3 3 8 8]", "(dupli [3 3 2 5]) -> [3 3 3 3 2 2 5 5]", "(dupli [3 5 5 7]) -> [3 3 5 5 5 5 7 7]"], "time": 0.239587, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [2 4 5]) -> [2 2 4 4 5 5]", "(dupli [2 6 7 8 5]) -> [2 2 6 6 7 7 8 8 5 5]", "(dupli [2 2]) -> [2 2 2 2]", "(dupli [0 3]) -> [0 0 3 3]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [4 7 8]) -> [4 4 7 7 8 8]", "(dupli [5 4 4 5 6]) -> [5 5 4 4 4 4 5 5 6 6]", "(dupli []) -> []", "(dupli [2 2 4 5 9]) -> [2 2 2 2 4 4 5 5 9 9]", "(dupli [7 1 8]) -> [7 7 1 1 8 8]", "(dupli [4]) -> [4 4]", "(dupli [7 6 7 9]) -> [7 7 6 6 7 7 9 9]", "(dupli [5 0]) -> [5 5 0 0]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [8]) -> [8 8]", "(dupli [4 6 7]) -> [4 4 6 6 7 7]", "(dupli [6 7]) -> [6 6 7 7]", "(dupli [2 2 8 9]) -> [2 2 2 2 8 8 9 9]", "(dupli [9 3 2 7 2]) -> [9 9 3 3 2 2 7 7 2 2]", "(dupli [7]) -> [7 7]", "(dupli [6 8]) -> [6 6 8 8]", "(dupli [5 8 4 1]) -> [5 5 8 8 4 4 1 1]", "(dupli [5 7 6 4 6]) -> [5 5 7 7 6 6 4 4 6 6]", "(dupli [8]) -> [8 8]", "(dupli [6 9 2]) -> [6 6 9 9 2 2]", "(dupli [1 9 0 2]) -> [1 1 9 9 0 0 2 2]", "(dupli [8 1 4 2 1]) -> [8 8 1 1 4 4 2 2 1 1]", "(dupli [2]) -> [2 2]", "(dupli [6 6 1]) -> [6 6 6 6 1 1]", "(dupli [6 8 6 1 8]) -> [6 6 8 8 6 6 1 1 8 8]", "(dupli [1 9 2 2]) -> [1 1 9 9 2 2 2 2]", "(dupli [2 1 2 9 8]) -> [2 2 1 1 2 2 9 9 8 8]", "(dupli [9 4 8 6]) -> [9 9 4 4 8 8 6 6]", "(dupli [2 3 8]) -> [2 2 3 3 8 8]", "(dupli [4 8]) -> [4 4 8 8]", "(dupli [1 4]) -> [1 1 4 4]", "(dupli [9]) -> [9 9]", "(dupli [6 9 6]) -> [6 6 9 9 6 6]", "(dupli [2 9 9]) -> [2 2 9 9 9 9]", "(dupli []) -> []", "(dupli [1 2]) -> [1 1 2 2]", "(dupli [4]) -> [4 4]", "(dupli [7 9 9]) -> [7 7 9 9 9 9]", "(dupli [7]) -> [7 7]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [7 4]) -> [7 7 4 4]"], "time": 0.241752, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 7]) -> [0 0 7 7]", "(dupli [8]) -> [8 8]", "(dupli [8 3]) -> [8 8 3 3]", "(dupli [7]) -> [7 7]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [6 1 9 0]) -> [6 6 1 1 9 9 0 0]", "(dupli [4 6 2]) -> [4 4 6 6 2 2]", "(dupli [3 3 6 8]) -> [3 3 3 3 6 6 8 8]", "(dupli [8 0 7]) -> [8 8 0 0 7 7]", "(dupli [1 3]) -> [1 1 3 3]", "(dupli [7 2 7 0 8]) -> [7 7 2 2 7 7 0 0 8 8]", "(dupli [7 6 5 6 8]) -> [7 7 6 6 5 5 6 6 8 8]", "(dupli [7 5 9 2]) -> [7 7 5 5 9 9 2 2]", "(dupli [1 1 9]) -> [1 1 1 1 9 9]", "(dupli [8 1 2 6 3]) -> [8 8 1 1 2 2 6 6 3 3]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [8 2 8]) -> [8 8 2 2 8 8]", "(dupli [1]) -> [1 1]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [3 7 8 5 9]) -> [3 3 7 7 8 8 5 5 9 9]", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [3 8]) -> [3 3 8 8]", "(dupli [1 0 5]) -> [1 1 0 0 5 5]", "(dupli [3 7 2 2 2]) -> [3 3 7 7 2 2 2 2 2 2]", "(dupli [9]) -> [9 9]", "(dupli [0]) -> [0 0]", "(dupli [7 7 9 2]) -> [7 7 7 7 9 9 2 2]", "(dupli [2 9 4 4]) -> [2 2 9 9 4 4 4 4]", "(dupli [4 5 1]) -> [4 4 5 5 1 1]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [1 7 8 5]) -> [1 1 7 7 8 8 5 5]", "(dupli [4 0 7 3]) -> [4 4 0 0 7 7 3 3]", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [1]) -> [1 1]", "(dupli [9 5 1 5]) -> [9 9 5 5 1 1 5 5]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [2 7 4 1]) -> [2 2 7 7 4 4 1 1]", "(dupli [1]) -> [1 1]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [7 6 0 7 1]) -> [7 7 6 6 0 0 7 7 1 1]", "(dupli [4 7 7 6]) -> [4 4 7 7 7 7 6 6]", "(dupli [7]) -> [7 7]", "(dupli [2 1 6]) -> [2 2 1 1 6 6]", "(dupli [8 5 3 9]) -> [8 8 5 5 3 3 9 9]"], "time": 0.22179, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [7 8 0]) -> [7 7 8 8 0 0]", "(dupli []) -> []", "(dupli [9 9]) -> [9 9 9 9]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [5 9 5]) -> [5 5 9 9 5 5]", "(dupli [4 2 5 4]) -> [4 4 2 2 5 5 4 4]", "(dupli [5 9 6 0 6]) -> [5 5 9 9 6 6 0 0 6 6]", "(dupli [3 7 7 6]) -> [3 3 7 7 7 7 6 6]", "(dupli [8 6 2]) -> [8 8 6 6 2 2]", "(dupli [9]) -> [9 9]", "(dupli [5 4 4]) -> [5 5 4 4 4 4]", "(dupli [3 1 3]) -> [3 3 1 1 3 3]", "(dupli [6 2 7]) -> [6 6 2 2 7 7]", "(dupli [5 6 5]) -> [5 5 6 6 5 5]", "(dupli [3 8 2 3 1]) -> [3 3 8 8 2 2 3 3 1 1]", "(dupli [0]) -> [0 0]", "(dupli [2]) -> [2 2]", "(dupli [8 2 2 1 4]) -> [8 8 2 2 2 2 1 1 4 4]", "(dupli [9 3 3 4 4]) -> [9 9 3 3 3 3 4 4 4 4]", "(dupli [0 8 9]) -> [0 0 8 8 9 9]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [6 5 8]) -> [6 6 5 5 8 8]", "(dupli [9 3 8 1 9]) -> [9 9 3 3 8 8 1 1 9 9]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [1 2]) -> [1 1 2 2]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [7 4 5 3]) -> [7 7 4 4 5 5 3 3]", "(dupli []) -> []", "(dupli [7 1 4 5 1]) -> [7 7 1 1 4 4 5 5 1 1]", "(dupli [1 3 3 5 9]) -> [1 1 3 3 3 3 5 5 9 9]", "(dupli [6 9]) -> [6 6 9 9]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [0 4 4 9 4]) -> [0 0 4 4 4 4 9 9 4 4]", "(dupli [2 2]) -> [2 2 2 2]", "(dupli [7 4 4 0]) -> [7 7 4 4 4 4 0 0]", "(dupli [0 0 8 2 7]) -> [0 0 0 0 8 8 2 2 7 7]", "(dupli [3 9]) -> [3 3 9 9]", "(dupli [6 0 9 5]) -> [6 6 0 0 9 9 5 5]", "(dupli [9]) -> [9 9]", "(dupli [3 7 0 5]) -> [3 3 7 7 0 0 5 5]", "(dupli [2 3 2 2]) -> [2 2 3 3 2 2 2 2]", "(dupli []) -> []", "(dupli [5]) -> [5 5]"], "time": 0.263179, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [1 7 7 3]) -> [1 1 7 7 7 7 3 3]", "(dupli [3 4 3 8]) -> [3 3 4 4 3 3 8 8]", "(dupli [9 0 6]) -> [9 9 0 0 6 6]", "(dupli [5 3 4 0 7]) -> [5 5 3 3 4 4 0 0 7 7]", "(dupli [3 2 0]) -> [3 3 2 2 0 0]", "(dupli [1 1]) -> [1 1 1 1]", "(dupli [8 6 5 4 5]) -> [8 8 6 6 5 5 4 4 5 5]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [0 9 9 1]) -> [0 0 9 9 9 9 1 1]", "(dupli []) -> []", "(dupli [7 1 7 7]) -> [7 7 1 1 7 7 7 7]", "(dupli [0 3 7]) -> [0 0 3 3 7 7]", "(dupli [3]) -> [3 3]", "(dupli [8 3 8 6 6]) -> [8 8 3 3 8 8 6 6 6 6]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [2 4]) -> [2 2 4 4]", "(dupli [2 1 2 9]) -> [2 2 1 1 2 2 9 9]", "(dupli []) -> []", "(dupli [0 1 1 4]) -> [0 0 1 1 1 1 4 4]", "(dupli [2 1 6 6 5]) -> [2 2 1 1 6 6 6 6 5 5]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [5]) -> [5 5]", "(dupli [1]) -> [1 1]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [6 2 0 3]) -> [6 6 2 2 0 0 3 3]", "(dupli [0 1 8]) -> [0 0 1 1 8 8]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli [4]) -> [4 4]", "(dupli [2 3 5]) -> [2 2 3 3 5 5]", "(dupli [3 4 1 4 7]) -> [3 3 4 4 1 1 4 4 7 7]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [7 4 7 5 3]) -> [7 7 4 4 7 7 5 5 3 3]", "(dupli [8]) -> [8 8]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [0 1]) -> [0 0 1 1]", "(dupli [6 5 7]) -> [6 6 5 5 7 7]", "(dupli []) -> []", "(dupli [4 2 2]) -> [4 4 2 2 2 2]", "(dupli [7 2 0]) -> [7 7 2 2 0 0]", "(dupli []) -> []", "(dupli [2 0]) -> [2 2 0 0]", "(dupli []) -> []", "(dupli [4 5 8 2 0]) -> [4 4 5 5 8 8 2 2 0 0]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli []) -> []", "(dupli [3 4 8 0 2]) -> [3 3 4 4 8 8 0 0 2 2]"], "time": 0.227176, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 9 4 4 1]) -> [3 3 9 9 4 4 4 4 1 1]", "(dupli [6 1 1 8 2]) -> [6 6 1 1 1 1 8 8 2 2]", "(dupli [2 1 9 8]) -> [2 2 1 1 9 9 8 8]", "(dupli []) -> []", "(dupli [3 4 9 1]) -> [3 3 4 4 9 9 1 1]", "(dupli [9]) -> [9 9]", "(dupli [8 5]) -> [8 8 5 5]", "(dupli [7 9 5 1]) -> [7 7 9 9 5 5 1 1]", "(dupli [7]) -> [7 7]", "(dupli [5 9 3]) -> [5 5 9 9 3 3]", "(dupli [9 0 5]) -> [9 9 0 0 5 5]", "(dupli [6]) -> [6 6]", "(dupli [7 1]) -> [7 7 1 1]", "(dupli [3 1 3]) -> [3 3 1 1 3 3]", "(dupli [5 6 2 1 2]) -> [5 5 6 6 2 2 1 1 2 2]", "(dupli [5 5 7 1]) -> [5 5 5 5 7 7 1 1]", "(dupli [1 5 2]) -> [1 1 5 5 2 2]", "(dupli []) -> []", "(dupli [6 9 6 2]) -> [6 6 9 9 6 6 2 2]", "(dupli [5 4 1 9]) -> [5 5 4 4 1 1 9 9]", "(dupli [5 5 4]) -> [5 5 5 5 4 4]", "(dupli [1 9 8 5]) -> [1 1 9 9 8 8 5 5]", "(dupli [3 0 6]) -> [3 3 0 0 6 6]", "(dupli [2 0 7 9 4]) -> [2 2 0 0 7 7 9 9 4 4]", "(dupli [4 3 8 9]) -> [4 4 3 3 8 8 9 9]", "(dupli [2 4 5]) -> [2 2 4 4 5 5]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [7 1 9 9 3]) -> [7 7 1 1 9 9 9 9 3 3]", "(dupli [6 0 4 0]) -> [6 6 0 0 4 4 0 0]", "(dupli []) -> []", "(dupli [7 3 4 8]) -> [7 7 3 3 4 4 8 8]", "(dupli []) -> []", "(dupli [2 0 8]) -> [2 2 0 0 8 8]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [3 6 7 5]) -> [3 3 6 6 7 7 5 5]", "(dupli [7 7 3]) -> [7 7 7 7 3 3]", "(dupli []) -> []", "(dupli [2 5 4 0 8]) -> [2 2 5 5 4 4 0 0 8 8]", "(dupli [8 7 7 5]) -> [8 8 7 7 7 7 5 5]", "(dupli [8 6 3 4 1]) -> [8 8 6 6 3 3 4 4 1 1]", "(dupli [6 4 6]) -> [6 6 4 4 6 6]", "(dupli [0 0 4 1]) -> [0 0 0 0 4 4 1 1]", "(dupli [7]) -> [7 7]", "(dupli [1 6 2 2]) -> [1 1 6 6 2 2 2 2]", "(dupli [2]) -> [2 2]", "(dupli [5 3 0 8 8]) -> [5 5 3 3 0 0 8 8 8 8]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [0 1]) -> [0 0 1 1]"], "time": 0.25031, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [6 3 2]) -> [6 6 3 3 2 2]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [7 4 9 1]) -> [7 7 4 4 9 9 1 1]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1 3]) -> [1 1 3 3]", "(dupli [2 1 9 2 6]) -> [2 2 1 1 9 9 2 2 6 6]", "(dupli [8 3]) -> [8 8 3 3]", "(dupli [3 5 5 6]) -> [3 3 5 5 5 5 6 6]", "(dupli []) -> []", "(dupli [7 0 8]) -> [7 7 0 0 8 8]", "(dupli [9 6 1 4]) -> [9 9 6 6 1 1 4 4]", "(dupli [8 4 1 1]) -> [8 8 4 4 1 1 1 1]", "(dupli [5 9 1 8 7]) -> [5 5 9 9 1 1 8 8 7 7]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [5]) -> [5 5]", "(dupli [8 1 2 5 3]) -> [8 8 1 1 2 2 5 5 3 3]", "(dupli [2 9 8 5]) -> [2 2 9 9 8 8 5 5]", "(dupli []) -> []", "(dupli [8 8]) -> [8 8 8 8]", "(dupli [5 2 9]) -> [5 5 2 2 9 9]", "(dupli [4 6 9 6 8]) -> [4 4 6 6 9 9 6 6 8 8]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [1 9 8 2]) -> [1 1 9 9 8 8 2 2]", "(dupli [3 8 2]) -> [3 3 8 8 2 2]", "(dupli [4 7 7 5 3]) -> [4 4 7 7 7 7 5 5 3 3]", "(dupli [3 0 1 8 9]) -> [3 3 0 0 1 1 8 8 9 9]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [0 0 7 4]) -> [0 0 0 0 7 7 4 4]", "(dupli [4 7 3 8 7]) -> [4 4 7 7 3 3 8 8 7 7]", "(dupli [1 4]) -> [1 1 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 5 3]) -> [3 3 5 5 3 3]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [5 8 3]) -> [5 5 8 8 3 3]", "(dupli [9 5 8]) -> [9 9 5 5 8 8]", "(dupli [7 1 6]) -> [7 7 1 1 6 6]"], "time": 0.224838, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7 2 6 6]) -> [7 7 2 2 6 6 6 6]", "(dupli [2 1 5 0]) -> [2 2 1 1 5 5 0 0]", "(dupli [2 0 6 9 0]) -> [2 2 0 0 6 6 9 9 0 0]", "(dupli [1 3 7]) -> [1 1 3 3 7 7]", "(dupli [3]) -> [3 3]", "(dupli [2 5 6 7 5]) -> [2 2 5 5 6 6 7 7 5 5]", "(dupli [3 4 6]) -> [3 3 4 4 6 6]", "(dupli []) -> []", "(dupli [9 1 0 6]) -> [9 9 1 1 0 0 6 6]", "(dupli [4 0 3 7]) -> [4 4 0 0 3 3 7 7]", "(dupli [4]) -> [4 4]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [7]) -> [7 7]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [1 0 2]) -> [1 1 0 0 2 2]", "(dupli [5 2 0 9 6]) -> [5 5 2 2 0 0 9 9 6 6]", "(dupli []) -> []", "(dupli [0 6 4 6 0]) -> [0 0 6 6 4 4 6 6 0 0]", "(dupli [6 9]) -> [6 6 9 9]", "(dupli []) -> []", "(dupli [5]) -> [5 5]", "(dupli [9 8 4]) -> [9 9 8 8 4 4]", "(dupli [1 9 1 8 7]) -> [1 1 9 9 1 1 8 8 7 7]", "(dupli [5 6 4 8 2]) -> [5 5 6 6 4 4 8 8 2 2]", "(dupli [4 7 4 8]) -> [4 4 7 7 4 4 8 8]", "(dupli [0 6 5 3]) -> [0 0 6 6 5 5 3 3]", "(dupli [7 3 8 3]) -> [7 7 3 3 8 8 3 3]", "(dupli [6]) -> [6 6]", "(dupli [9 7 3]) -> [9 9 7 7 3 3]", "(dupli [4 9 1 2]) -> [4 4 9 9 1 1 2 2]", "(dupli [0 9 1 9]) -> [0 0 9 9 1 1 9 9]", "(dupli [7 8 0 2]) -> [7 7 8 8 0 0 2 2]", "(dupli [4 9]) -> [4 4 9 9]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [9 7 6 7 1]) -> [9 9 7 7 6 6 7 7 1 1]", "(dupli [1 7 8]) -> [1 1 7 7 8 8]", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [2]) -> [2 2]", "(dupli [9]) -> [9 9]", "(dupli [1 9 3 6]) -> [1 1 9 9 3 3 6 6]", "(dupli []) -> []", "(dupli [3 2 5 2 7]) -> [3 3 2 2 5 5 2 2 7 7]", "(dupli [8 8 0]) -> [8 8 8 8 0 0]", "(dupli [2 7 2 3]) -> [2 2 7 7 2 2 3 3]", "(dupli []) -> []", "(dupli []) -> []"], "time": 0.247563, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [0 2 7]) -> [0 0 2 2 7 7]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [9 8 3 6 6]) -> [9 9 8 8 3 3 6 6 6 6]", "(dupli [4 0 7]) -> [4 4 0 0 7 7]", "(dupli [0 8 2]) -> [0 0 8 8 2 2]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 1 1 9 4]) -> [0 0 1 1 1 1 9 9 4 4]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [1 2 5 4 8]) -> [1 1 2 2 5 5 4 4 8 8]", "(dupli [1 2 1 2 7]) -> [1 1 2 2 1 1 2 2 7 7]", "(dupli [7 2 1]) -> [7 7 2 2 1 1]", "(dupli [5]) -> [5 5]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [9 9 3 6 3]) -> [9 9 9 9 3 3 6 6 3 3]", "(dupli [0 7 4 6]) -> [0 0 7 7 4 4 6 6]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [0]) -> [0 0]", "(dupli [0 0]) -> [0 0 0 0]", "(dupli [5 9 3 6]) -> [5 5 9 9 3 3 6 6]", "(dupli [1]) -> [1 1]", "(dupli [8]) -> [8 8]", "(dupli [8 0 5 4 4]) -> [8 8 0 0 5 5 4 4 4 4]", "(dupli [1]) -> [1 1]", "(dupli [0 2 2]) -> [0 0 2 2 2 2]", "(dupli [9 4 7 7]) -> [9 9 4 4 7 7 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 2]) -> [3 3 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [3 0 6 2 1]) -> [3 3 0 0 6 6 2 2 1 1]", "(dupli [4 9 4 3]) -> [4 4 9 9 4 4 3 3]", "(dupli [9 3 4 8]) -> [9 9 3 3 4 4 8 8]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [2 2 8]) -> [2 2 2 2 8 8]"], "time": 0.269428, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [2 3 9]) -> [2 2 3 3 9 9]", "(dupli [3 3 8 8 1]) -> [3 3 3 3 8 8 8 8 1 1]", "(dupli [9 1 3 1]) -> [9 9 1 1 3 3 1 1]", "(dupli []) -> []", "(dupli [1 8 9 2 9]) -> [1 1 8 8 9 9 2 2 9 9]", "(dupli [1 7 7 8 8]) -> [1 1 7 7 7 7 8 8 8 8]", "(dupli [2 8 9 8]) -> [2 2 8 8 9 9 8 8]", "(dupli [1 3 0 7]) -> [1 1 3 3 0 0 7 7]", "(dupli [7 6 1 3 2]) -> [7 7 6 6 1 1 3 3 2 2]", "(dupli [9 1 8]) -> [9 9 1 1 8 8]", "(dupli [7 6 0 4 3]) -> [7 7 6 6 0 0 4 4 3 3]", "(dupli [8 8 2]) -> [8 8 8 8 2 2]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [0 5 3]) -> [0 0 5 5 3 3]", "(dupli []) -> []", "(dupli [5 5 7]) -> [5 5 5 5 7 7]", "(dupli [1 7 6]) -> [1 1 7 7 6 6]", "(dupli [5 2 4 3]) -> [5 5 2 2 4 4 3 3]", "(dupli [0 0 4 9 3]) -> [0 0 0 0 4 4 9 9 3 3]", "(dupli [1 7 8 2]) -> [1 1 7 7 8 8 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [2 1 7 9 3]) -> [2 2 1 1 7 7 9 9 3 3]", "(dupli [3 3 4]) -> [3 3 3 3 4 4]", "(dupli [0 8 1]) -> [0 0 8 8 1 1]", "(dupli [0]) -> [0 0]", "(dupli [8 4 9 8 4]) -> [8 8 4 4 9 9 8 8 4 4]", "(dupli []) -> []", "(dupli [3 1 9]) -> [3 3 1 1 9 9]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [4 4 5]) -> [4 4 4 4 5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 7 4 7]) -> [3 3 7 7 4 4 7 7]", "(dupli []) -> []", "(dupli [0 5 1]) -> [0 0 5 5 1 1]", "(dupli [0 4 4]) -> [0 0 4 4 4 4]", "(dupli [8 6 2 4]) -> [8 8 6 6 2 2 4 4]", "(dupli [1]) -> [1 1]", "(dupli [5 2 8 6 7]) -> [5 5 2 2 8 8 6 6 7 7]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [3 5 5 7]) -> [3 3 5 5 5 5 7 7]", "(dupli [3 3 0 2]) -> [3 3 3 3 0 0 2 2]", "(dupli [1]) -> [1 1]"], "time": 0.178798, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 2 0]) -> [5 5 2 2 0 0]", "(dupli [7]) -> [7 7]", "(dupli [5 9 5 6]) -> [5 5 9 9 5 5 6 6]", "(dupli [9 3 4 6 4]) -> [9 9 3 3 4 4 6 6 4 4]", "(dupli [9 0 4 7 5]) -> [9 9 0 0 4 4 7 7 5 5]", "(dupli []) -> []", "(dupli [8 0 3]) -> [8 8 0 0 3 3]", "(dupli [8 3]) -> [8 8 3 3]", "(dupli [5]) -> [5 5]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [3]) -> [3 3]", "(dupli [1 0]) -> [1 1 0 0]", "(dupli []) -> []", "(dupli [3 9 5]) -> [3 3 9 9 5 5]", "(dupli [5]) -> [5 5]", "(dupli [7 7 7 4 6]) -> [7 7 7 7 7 7 4 4 6 6]", "(dupli [4 3 8 4]) -> [4 4 3 3 8 8 4 4]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [3 5 8]) -> [3 3 5 5 8 8]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli [2 9 6 6]) -> [2 2 9 9 6 6 6 6]", "(dupli [5 3]) -> [5 5 3 3]", "(dupli [8]) -> [8 8]", "(dupli [4 7 5]) -> [4 4 7 7 5 5]", "(dupli []) -> []", "(dupli [8 7 0]) -> [8 8 7 7 0 0]", "(dupli [0 2 5 8]) -> [0 0 2 2 5 5 8 8]", "(dupli []) -> []", "(dupli [1 4 0 1 9]) -> [1 1 4 4 0 0 1 1 9 9]", "(dupli [0 1 7 5]) -> [0 0 1 1 7 7 5 5]", "(dupli [7 4 3]) -> [7 7 4 4 3 3]", "(dupli []) -> []", "(dupli [3 9 7 2]) -> [3 3 9 9 7 7 2 2]", "(dupli [2 9 0 6 2]) -> [2 2 9 9 0 0 6 6 2 2]", "(dupli [0]) -> [0 0]", "(dupli [8 1]) -> [8 8 1 1]", "(dupli [4]) -> [4 4]", "(dupli [1 7 2 7 1]) -> [1 1 7 7 2 2 7 7 1 1]", "(dupli [0]) -> [0 0]", "(dupli [9 1 4]) -> [9 9 1 1 4 4]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [3]) -> [3 3]", "(dupli [9 0 5 8]) -> [9 9 0 0 5 5 8 8]", "(dupli []) -> []", "(dupli [0 3]) -> [0 0 3 3]"], "time": 0.223201, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli [0 6 6 1]) -> [0 0 6 6 6 6 1 1]", "(dupli [1 3 0]) -> [1 1 3 3 0 0]", "(dupli [0 3 5 7]) -> [0 0 3 3 5 5 7 7]", "(dupli [8 1 0 7]) -> [8 8 1 1 0 0 7 7]", "(dupli [0]) -> [0 0]", "(dupli [7 2 4]) -> [7 7 2 2 4 4]", "(dupli [5 2 7 0]) -> [5 5 2 2 7 7 0 0]", "(dupli [5]) -> [5 5]", "(dupli [6 3 2 8]) -> [6 6 3 3 2 2 8 8]", "(dupli [0 0 2 5]) -> [0 0 0 0 2 2 5 5]", "(dupli [8 3]) -> [8 8 3 3]", "(dupli [6 9]) -> [6 6 9 9]", "(dupli [4 1 5]) -> [4 4 1 1 5 5]", "(dupli []) -> []", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [5 4 9 0 6]) -> [5 5 4 4 9 9 0 0 6 6]", "(dupli []) -> []", "(dupli [2 8 7 8]) -> [2 2 8 8 7 7 8 8]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [2 5 6 5 1]) -> [2 2 5 5 6 6 5 5 1 1]", "(dupli [2 3 1 1]) -> [2 2 3 3 1 1 1 1]", "(dupli [6 4 7 6]) -> [6 6 4 4 7 7 6 6]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [6 6 8]) -> [6 6 6 6 8 8]", "(dupli [1 5 6 6]) -> [1 1 5 5 6 6 6 6]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [1 7 7]) -> [1 1 7 7 7 7]", "(dupli [5]) -> [5 5]", "(dupli [6]) -> [6 6]", "(dupli [8]) -> [8 8]", "(dupli [7]) -> [7 7]", "(dupli [8]) -> [8 8]", "(dupli [3 6 9 5]) -> [3 3 6 6 9 9 5 5]", "(dupli [4 1 2]) -> [4 4 1 1 2 2]", "(dupli [6 5 9 1 8]) -> [6 6 5 5 9 9 1 1 8 8]", "(dupli [6]) -> [6 6]", "(dupli [3 9 8 4 5]) -> [3 3 9 9 8 8 4 4 5 5]", "(dupli [2]) -> [2 2]", "(dupli [1]) -> [1 1]", "(dupli [9 3 2 6 2]) -> [9 9 3 3 2 2 6 6 2 2]", "(dupli []) -> []"], "time": 0.226165, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 2]) -> [3 3 2 2]", "(dupli []) -> []", "(dupli [0 5]) -> [0 0 5 5]", "(dupli [5 1 5]) -> [5 5 1 1 5 5]", "(dupli [7]) -> [7 7]", "(dupli [7]) -> [7 7]", "(dupli [9]) -> [9 9]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli [4 1 2 7]) -> [4 4 1 1 2 2 7 7]", "(dupli []) -> []", "(dupli [6 3 3 5 1]) -> [6 6 3 3 3 3 5 5 1 1]", "(dupli [2 3 2 9]) -> [2 2 3 3 2 2 9 9]", "(dupli [2 2 1]) -> [2 2 2 2 1 1]", "(dupli [5]) -> [5 5]", "(dupli [2 9 7]) -> [2 2 9 9 7 7]", "(dupli [1]) -> [1 1]", "(dupli [6 2 1 6]) -> [6 6 2 2 1 1 6 6]", "(dupli [4 3 1 6]) -> [4 4 3 3 1 1 6 6]", "(dupli [6 9 4 2 4]) -> [6 6 9 9 4 4 2 2 4 4]", "(dupli [7 4 0 9]) -> [7 7 4 4 0 0 9 9]", "(dupli [7 8 7 4 7]) -> [7 7 8 8 7 7 4 4 7 7]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [9 0 2 0]) -> [9 9 0 0 2 2 0 0]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [0 0 7]) -> [0 0 0 0 7 7]", "(dupli [0]) -> [0 0]", "(dupli [6 1 3 8]) -> [6 6 1 1 3 3 8 8]", "(dupli [0 9 9]) -> [0 0 9 9 9 9]", "(dupli [2 8 5]) -> [2 2 8 8 5 5]", "(dupli [6 7 4 3 2]) -> [6 6 7 7 4 4 3 3 2 2]", "(dupli [2 6 6]) -> [2 2 6 6 6 6]", "(dupli [2 5]) -> [2 2 5 5]", "(dupli [1]) -> [1 1]", "(dupli [4 2 4 6]) -> [4 4 2 2 4 4 6 6]", "(dupli [1 7 4 5]) -> [1 1 7 7 4 4 5 5]", "(dupli [9 4 1 4]) -> [9 9 4 4 1 1 4 4]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [1 1 1 6 9]) -> [1 1 1 1 1 1 6 6 9 9]", "(dupli [1 7 6]) -> [1 1 7 7 6 6]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [7 4 8]) -> [7 7 4 4 8 8]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli []) -> []"], "time": 0.212063, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [9 7 9 7]) -> [9 9 7 7 9 9 7 7]", "(dupli [4 2 8]) -> [4 4 2 2 8 8]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [5 6 6]) -> [5 5 6 6 6 6]", "(dupli []) -> []", "(dupli [8 6]) -> [8 8 6 6]", "(dupli []) -> []", "(dupli [1 8]) -> [1 1 8 8]", "(dupli [4 0 6 2]) -> [4 4 0 0 6 6 2 2]", "(dupli []) -> []", "(dupli [1 7 0]) -> [1 1 7 7 0 0]", "(dupli [6 5 1 1]) -> [6 6 5 5 1 1 1 1]", "(dupli [3 1 0]) -> [3 3 1 1 0 0]", "(dupli [1]) -> [1 1]", "(dupli [5 3 7 2]) -> [5 5 3 3 7 7 2 2]", "(dupli [8 1 4 8 2]) -> [8 8 1 1 4 4 8 8 2 2]", "(dupli [9 1 9 0 8]) -> [9 9 1 1 9 9 0 0 8 8]", "(dupli [2 1 1 7]) -> [2 2 1 1 1 1 7 7]", "(dupli [2 3 9 1 5]) -> [2 2 3 3 9 9 1 1 5 5]", "(dupli [8 3 1]) -> [8 8 3 3 1 1]", "(dupli [9 9 7 8 2]) -> [9 9 9 9 7 7 8 8 2 2]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [4]) -> [4 4]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli [6 6 3]) -> [6 6 6 6 3 3]", "(dupli [0 3 2]) -> [0 0 3 3 2 2]", "(dupli [2 5 6]) -> [2 2 5 5 6 6]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [5 8]) -> [5 5 8 8]", "(dupli [8]) -> [8 8]", "(dupli [3 2 8 9 7]) -> [3 3 2 2 8 8 9 9 7 7]", "(dupli [3 2 9]) -> [3 3 2 2 9 9]", "(dupli [1]) -> [1 1]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [2 9]) -> [2 2 9 9]", "(dupli [4 6 8 9]) -> [4 4 6 6 8 8 9 9]", "(dupli []) -> []", "(dupli [6 2 3 2 3]) -> [6 6 2 2 3 3 2 2 3 3]", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [1]) -> [1 1]"], "time": 0.221692, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli [9 9]) -> [9 9 9 9]", "(dupli [9 4 3]) -> [9 9 4 4 3 3]", "(dupli [2]) -> [2 2]", "(dupli [0 1 3 1 5]) -> [0 0 1 1 3 3 1 1 5 5]", "(dupli []) -> []", "(dupli [1 2 4]) -> [1 1 2 2 4 4]", "(dupli [5 8 9]) -> [5 5 8 8 9 9]", "(dupli [3 1 6 4]) -> [3 3 1 1 6 6 4 4]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [5]) -> [5 5]", "(dupli [5 9 3 5 4]) -> [5 5 9 9 3 3 5 5 4 4]", "(dupli [1]) -> [1 1]", "(dupli [0 2 8]) -> [0 0 2 2 8 8]", "(dupli [1 0 7 1]) -> [1 1 0 0 7 7 1 1]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [5 9 7 0]) -> [5 5 9 9 7 7 0 0]", "(dupli [8 4 5 7 1]) -> [8 8 4 4 5 5 7 7 1 1]", "(dupli [5 0 4 9 1]) -> [5 5 0 0 4 4 9 9 1 1]", "(dupli [5 9 0 5 9]) -> [5 5 9 9 0 0 5 5 9 9]", "(dupli []) -> []", "(dupli [0 2 0 8]) -> [0 0 2 2 0 0 8 8]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [2 0 6 7]) -> [2 2 0 0 6 6 7 7]", "(dupli [1 0 8 7 1]) -> [1 1 0 0 8 8 7 7 1 1]", "(dupli [0 4 2 2]) -> [0 0 4 4 2 2 2 2]", "(dupli [9]) -> [9 9]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [0 4 7 6 8]) -> [0 0 4 4 7 7 6 6 8 8]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [5 4]) -> [5 5 4 4]", "(dupli [6 3 8 7]) -> [6 6 3 3 8 8 7 7]", "(dupli []) -> []", "(dupli [4 0 0]) -> [4 4 0 0 0 0]", "(dupli [2]) -> [2 2]", "(dupli [6 4 0 2]) -> [6 6 4 4 0 0 2 2]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [5 7]) -> [5 5 7 7]", "(dupli [8 1 2 8]) -> [8 8 1 1 2 2 8 8]", "(dupli []) -> []"], "time": 0.23059, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 8 4 4 1]) -> [4 4 8 8 4 4 4 4 1 1]", "(dupli [8 0]) -> [8 8 0 0]", "(dupli [5 3 0 0 4]) -> [5 5 3 3 0 0 0 0 4 4]", "(dupli [2 5 8 0 5]) -> [2 2 5 5 8 8 0 0 5 5]", "(dupli [8 2 4]) -> [8 8 2 2 4 4]", "(dupli []) -> []", "(dupli [7 2 1 2 2]) -> [7 7 2 2 1 1 2 2 2 2]", "(dupli [3 5 2 6 4]) -> [3 3 5 5 2 2 6 6 4 4]", "(dupli [2]) -> [2 2]", "(dupli [1 3 5]) -> [1 1 3 3 5 5]", "(dupli [8 7]) -> [8 8 7 7]", "(dupli []) -> []", "(dupli [8]) -> [8 8]", "(dupli [7 2 4 7]) -> [7 7 2 2 4 4 7 7]", "(dupli [5]) -> [5 5]", "(dupli [5]) -> [5 5]", "(dupli [4 3 0]) -> [4 4 3 3 0 0]", "(dupli [4 6 7 5]) -> [4 4 6 6 7 7 5 5]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [0 0 0]) -> [0 0 0 0 0 0]", "(dupli []) -> []", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [2]) -> [2 2]", "(dupli [9 5 4]) -> [9 9 5 5 4 4]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [3 4 7]) -> [3 3 4 4 7 7]", "(dupli [1 5]) -> [1 1 5 5]", "(dupli [3 5 1 3 1]) -> [3 3 5 5 1 1 3 3 1 1]", "(dupli []) -> []", "(dupli [3 4 9 8 2]) -> [3 3 4 4 9 9 8 8 2 2]", "(dupli [4 5 7 3]) -> [4 4 5 5 7 7 3 3]", "(dupli [7 8 8]) -> [7 7 8 8 8 8]", "(dupli [2 4 7]) -> [2 2 4 4 7 7]", "(dupli [5 4 0 2 5]) -> [5 5 4 4 0 0 2 2 5 5]", "(dupli [2 1 9]) -> [2 2 1 1 9 9]", "(dupli [7 4 9 3 8]) -> [7 7 4 4 9 9 3 3 8 8]", "(dupli [9 8 7 5 1]) -> [9 9 8 8 7 7 5 5 1 1]", "(dupli [7 0 9 2 4]) -> [7 7 0 0 9 9 2 2 4 4]", "(dupli [9]) -> [9 9]", "(dupli [9 1 9]) -> [9 9 1 1 9 9]", "(dupli [9]) -> [9 9]", "(dupli [9 1 0]) -> [9 9 1 1 0 0]", "(dupli [1 8]) -> [1 1 8 8]", "(dupli []) -> []", "(dupli [6 0 0 1 3]) -> [6 6 0 0 0 0 1 1 3 3]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [2 5 7]) -> [2 2 5 5 7 7]", "(dupli [2]) -> [2 2]"], "time": 0.225814, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 4 8 1 3]) -> [4 4 4 4 8 8 1 1 3 3]", "(dupli [4]) -> [4 4]", "(dupli [1 6 9 8]) -> [1 1 6 6 9 9 8 8]", "(dupli [5 2 6 5 4]) -> [5 5 2 2 6 6 5 5 4 4]", "(dupli [0 4 8 8]) -> [0 0 4 4 8 8 8 8]", "(dupli [8 8 8 0]) -> [8 8 8 8 8 8 0 0]", "(dupli [5 8 4]) -> [5 5 8 8 4 4]", "(dupli [2]) -> [2 2]", "(dupli [1 8 3]) -> [1 1 8 8 3 3]", "(dupli [5 1 4]) -> [5 5 1 1 4 4]", "(dupli [5 7 5]) -> [5 5 7 7 5 5]", "(dupli [3 7 8 8]) -> [3 3 7 7 8 8 8 8]", "(dupli [2 8 3 1]) -> [2 2 8 8 3 3 1 1]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [3 6]) -> [3 3 6 6]", "(dupli [2 7 0]) -> [2 2 7 7 0 0]", "(dupli [9 2 9 6 4]) -> [9 9 2 2 9 9 6 6 4 4]", "(dupli [3 9]) -> [3 3 9 9]", "(dupli [6 8 9 8]) -> [6 6 8 8 9 9 8 8]", "(dupli [3 0 3]) -> [3 3 0 0 3 3]", "(dupli []) -> []", "(dupli [3 9 7 8]) -> [3 3 9 9 7 7 8 8]", "(dupli [6 5 4 7 9]) -> [6 6 5 5 4 4 7 7 9 9]", "(dupli [8 9 7]) -> [8 8 9 9 7 7]", "(dupli [4 2 6]) -> [4 4 2 2 6 6]", "(dupli [3]) -> [3 3]", "(dupli [4 7 5]) -> [4 4 7 7 5 5]", "(dupli [6 6 2]) -> [6 6 6 6 2 2]", "(dupli [8 9 2]) -> [8 8 9 9 2 2]", "(dupli [2 5 8 3]) -> [2 2 5 5 8 8 3 3]", "(dupli [9]) -> [9 9]", "(dupli [4 4]) -> [4 4 4 4]", "(dupli [8 6 2 9]) -> [8 8 6 6 2 2 9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 1 7 0]) -> [4 4 1 1 7 7 0 0]", "(dupli [2 9 6]) -> [2 2 9 9 6 6]", "(dupli [7 0 4]) -> [7 7 0 0 4 4]", "(dupli [3 2 2 0 3]) -> [3 3 2 2 2 2 0 0 3 3]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [1 4]) -> [1 1 4 4]", "(dupli [4 2 2 4 6]) -> [4 4 2 2 2 2 4 4 6 6]", "(dupli [3 8]) -> [3 3 8 8]"], "time": 0.242399, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [1 6 6 9]) -> [1 1 6 6 6 6 9 9]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [2 3 9 5 7]) -> [2 2 3 3 9 9 5 5 7 7]", "(dupli [0 3]) -> [0 0 3 3]", "(dupli [2 2 7 0 0]) -> [2 2 2 2 7 7 0 0 0 0]", "(dupli []) -> []", "(dupli [1 3 7 1]) -> [1 1 3 3 7 7 1 1]", "(dupli [2 9 7 3]) -> [2 2 9 9 7 7 3 3]", "(dupli []) -> []", "(dupli [0 3 7]) -> [0 0 3 3 7 7]", "(dupli [2 6 8 6]) -> [2 2 6 6 8 8 6 6]", "(dupli []) -> []", "(dupli [8 7]) -> [8 8 7 7]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [9 0 3 3]) -> [9 9 0 0 3 3 3 3]", "(dupli [1 5 4 4]) -> [1 1 5 5 4 4 4 4]", "(dupli [4]) -> [4 4]", "(dupli [4 1 7]) -> [4 4 1 1 7 7]", "(dupli [2 3 8 4 9]) -> [2 2 3 3 8 8 4 4 9 9]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli [5]) -> [5 5]", "(dupli [3 4 7]) -> [3 3 4 4 7 7]", "(dupli [4]) -> [4 4]", "(dupli [1 6]) -> [1 1 6 6]", "(dupli []) -> []", "(dupli [2 9 4 2]) -> [2 2 9 9 4 4 2 2]", "(dupli [2]) -> [2 2]", "(dupli [2 5 2 1]) -> [2 2 5 5 2 2 1 1]", "(dupli [7]) -> [7 7]", "(dupli [8 1]) -> [8 8 1 1]", "(dupli [4 9 3]) -> [4 4 9 9 3 3]", "(dupli [8 6 9 0]) -> [8 8 6 6 9 9 0 0]", "(dupli [4 9 6 8 2]) -> [4 4 9 9 6 6 8 8 2 2]", "(dupli []) -> []", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [8]) -> [8 8]", "(dupli [8 1 4 5]) -> [8 8 1 1 4 4 5 5]", "(dupli [2 5 7 8 2]) -> [2 2 5 5 7 7 8 8 2 2]", "(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli [1 8 2 1 0]) -> [1 1 8 8 2 2 1 1 0 0]", "(dupli [7 2 9 5]) -> [7 7 2 2 9 9 5 5]"], "time": 0.244856, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 6 3 1]) -> [2 2 6 6 3 3 1 1]", "(dupli [1 2 3 2 8]) -> [1 1 2 2 3 3 2 2 8 8]", "(dupli []) -> []", "(dupli [9 7 1 4 8]) -> [9 9 7 7 1 1 4 4 8 8]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [6 9 7 7]) -> [6 6 9 9 7 7 7 7]", "(dupli [8 8]) -> [8 8 8 8]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [0 2 1 3]) -> [0 0 2 2 1 1 3 3]", "(dupli []) -> []", "(dupli [6 4 1 0 5]) -> [6 6 4 4 1 1 0 0 5 5]", "(dupli [2 3 1 6]) -> [2 2 3 3 1 1 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 9]) -> [6 6 9 9]", "(dupli [3 5 1]) -> [3 3 5 5 1 1]", "(dupli []) -> []", "(dupli [2]) -> [2 2]", "(dupli [9 1 0]) -> [9 9 1 1 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1 4]) -> [1 1 4 4]", "(dupli [4 5 9]) -> [4 4 5 5 9 9]", "(dupli [0]) -> [0 0]", "(dupli [0 4 3]) -> [0 0 4 4 3 3]", "(dupli [4 2]) -> [4 4 2 2]", "(dupli [2 9 1]) -> [2 2 9 9 1 1]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [7 2]) -> [7 7 2 2]", "(dupli []) -> []", "(dupli [5 5 6 1 2]) -> [5 5 5 5 6 6 1 1 2 2]", "(dupli [9 7]) -> [9 9 7 7]", "(dupli [1 3 3 0]) -> [1 1 3 3 3 3 0 0]", "(dupli [8 7 0 4 3]) -> [8 8 7 7 0 0 4 4 3 3]", "(dupli [7 4 7 5]) -> [7 7 4 4 7 7 5 5]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [7 9 4]) -> [7 7 9 9 4 4]", "(dupli [8 1 0 4 8]) -> [8 8 1 1 0 0 4 4 8 8]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [9 0 2 3]) -> [9 9 0 0 2 2 3 3]", "(dupli [2 4]) -> [2 2 4 4]", "(dupli [4]) -> [4 4]", "(dupli [3 6 0 7 1]) -> [3 3 6 6 0 0 7 7 1 1]"], "time": 0.226185, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [2 5]) -> [2 2 5 5]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [6 8 9]) -> [6 6 8 8 9 9]", "(dupli [5 6 1]) -> [5 5 6 6 1 1]", "(dupli [7 2 2]) -> [7 7 2 2 2 2]", "(dupli [9 0 6 3]) -> [9 9 0 0 6 6 3 3]", "(dupli [4 4 7 7]) -> [4 4 4 4 7 7 7 7]", "(dupli [1]) -> [1 1]", "(dupli [3]) -> [3 3]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [4 9 0 7]) -> [4 4 9 9 0 0 7 7]", "(dupli [3]) -> [3 3]", "(dupli [5 0 3]) -> [5 5 0 0 3 3]", "(dupli [6 8 3 2 2]) -> [6 6 8 8 3 3 2 2 2 2]", "(dupli [4 0]) -> [4 4 0 0]", "(dupli [4 6 2 8]) -> [4 4 6 6 2 2 8 8]", "(dupli [5 2 5]) -> [5 5 2 2 5 5]", "(dupli [3 9]) -> [3 3 9 9]", "(dupli [1 8]) -> [1 1 8 8]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [2 5 7 8]) -> [2 2 5 5 7 7 8 8]", "(dupli [5 7 0 6]) -> [5 5 7 7 0 0 6 6]", "(dupli [7 9 3 6 0]) -> [7 7 9 9 3 3 6 6 0 0]", "(dupli [6 9]) -> [6 6 9 9]", "(dupli [5 3 6 0 3]) -> [5 5 3 3 6 6 0 0 3 3]", "(dupli [4 6 5 0 1]) -> [4 4 6 6 5 5 0 0 1 1]", "(dupli [9 7 0 7]) -> [9 9 7 7 0 0 7 7]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli [8 8 9]) -> [8 8 8 8 9 9]", "(dupli [3 4 7]) -> [3 3 4 4 7 7]", "(dupli [4 3 4 9 7]) -> [4 4 3 3 4 4 9 9 7 7]", "(dupli [6 8 5 6]) -> [6 6 8 8 5 5 6 6]", "(dupli [7]) -> [7 7]", "(dupli [6 4 5]) -> [6 6 4 4 5 5]", "(dupli [2 1 4 2 5]) -> [2 2 1 1 4 4 2 2 5 5]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli [5 0]) -> [5 5 0 0]", "(dupli [7 7 6 8]) -> [7 7 7 7 6 6 8 8]", "(dupli [3 2]) -> [3 3 2 2]", "(dupli []) -> []", "(dupli [3 1 0 3 8]) -> [3 3 1 1 0 0 3 3 8 8]", "(dupli []) -> []", "(dupli [1 6 3]) -> [1 1 6 6 3 3]", "(dupli [3]) -> [3 3]", "(dupli [8 9 2]) -> [8 8 9 9 2 2]", "(dupli []) -> []", "(dupli [9 6 9 5]) -> [9 9 6 6 9 9 5 5]"], "time": 0.224306, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 1 3 2 8]) -> [3 3 1 1 3 3 2 2 8 8]", "(dupli [6 2 5 3]) -> [6 6 2 2 5 5 3 3]", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [3 8 5]) -> [3 3 8 8 5 5]", "(dupli [5 1 7]) -> [5 5 1 1 7 7]", "(dupli [5 5 9]) -> [5 5 5 5 9 9]", "(dupli []) -> []", "(dupli [4 2 6 8 5]) -> [4 4 2 2 6 6 8 8 5 5]", "(dupli []) -> []", "(dupli [6 3 9 9 4]) -> [6 6 3 3 9 9 9 9 4 4]", "(dupli [0 7 4 5 4]) -> [0 0 7 7 4 4 5 5 4 4]", "(dupli [8 0 6]) -> [8 8 0 0 6 6]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli []) -> []", "(dupli [5 3 2 9 3]) -> [5 5 3 3 2 2 9 9 3 3]", "(dupli [3 5 7 8 8]) -> [3 3 5 5 7 7 8 8 8 8]", "(dupli [4 4 7 6]) -> [4 4 4 4 7 7 6 6]", "(dupli [3 8 5]) -> [3 3 8 8 5 5]", "(dupli [7 6]) -> [7 7 6 6]", "(dupli [4 6 3 9]) -> [4 4 6 6 3 3 9 9]", "(dupli [6 5 3]) -> [6 6 5 5 3 3]", "(dupli [8 5 6 8 0]) -> [8 8 5 5 6 6 8 8 0 0]", "(dupli [5 2 4 6]) -> [5 5 2 2 4 4 6 6]", "(dupli [9 2 3]) -> [9 9 2 2 3 3]", "(dupli [1 2 0 0 9]) -> [1 1 2 2 0 0 0 0 9 9]", "(dupli []) -> []", "(dupli [6]) -> [6 6]", "(dupli [6]) -> [6 6]", "(dupli [0 9]) -> [0 0 9 9]", "(dupli [1 3 9 9 4]) -> [1 1 3 3 9 9 9 9 4 4]", "(dupli [3 0]) -> [3 3 0 0]", "(dupli []) -> []", "(dupli [7 7 6]) -> [7 7 7 7 6 6]", "(dupli [9 7 1]) -> [9 9 7 7 1 1]", "(dupli [0 9 6 9]) -> [0 0 9 9 6 6 9 9]", "(dupli [0 4 1]) -> [0 0 4 4 1 1]", "(dupli [5 0 4 3]) -> [5 5 0 0 4 4 3 3]", "(dupli [9 0 7]) -> [9 9 0 0 7 7]", "(dupli [5]) -> [5 5]", "(dupli [0 4 6]) -> [0 0 4 4 6 6]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [7]) -> [7 7]", "(dupli [7 8]) -> [7 7 8 8]", "(dupli [9 8 6 4 4]) -> [9 9 8 8 6 6 4 4 4 4]", "(dupli [9 8 7]) -> [9 9 8 8 7 7]", "(dupli [2 2 0 5 2]) -> [2 2 2 2 0 0 5 5 2 2]", "(dupli [0]) -> [0 0]"], "time": 0.215616, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3 3 0 8]) -> [3 3 3 3 0 0 8 8]", "(dupli [3 7 9]) -> [3 3 7 7 9 9]", "(dupli [4 6 9 4 4]) -> [4 4 6 6 9 9 4 4 4 4]", "(dupli [8 9 0 7 5]) -> [8 8 9 9 0 0 7 7 5 5]", "(dupli [6 4 0]) -> [6 6 4 4 0 0]", "(dupli [2 7 6 2]) -> [2 2 7 7 6 6 2 2]", "(dupli [4]) -> [4 4]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli [1 4 1 6 9]) -> [1 1 4 4 1 1 6 6 9 9]", "(dupli [5 2 7 0 7]) -> [5 5 2 2 7 7 0 0 7 7]", "(dupli []) -> []", "(dupli [1 4 9 1 9]) -> [1 1 4 4 9 9 1 1 9 9]", "(dupli [3 5 8]) -> [3 3 5 5 8 8]", "(dupli [3]) -> [3 3]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [1 4 3]) -> [1 1 4 4 3 3]", "(dupli [1 0 0 5 9]) -> [1 1 0 0 0 0 5 5 9 9]", "(dupli []) -> []", "(dupli [7 4 0 3 3]) -> [7 7 4 4 0 0 3 3 3 3]", "(dupli []) -> []", "(dupli [2 4 2 1 7]) -> [2 2 4 4 2 2 1 1 7 7]", "(dupli [4 1 7 7 4]) -> [4 4 1 1 7 7 7 7 4 4]", "(dupli [8 4 1 6 7]) -> [8 8 4 4 1 1 6 6 7 7]", "(dupli [8]) -> [8 8]", "(dupli [3 7 0 0 7]) -> [3 3 7 7 0 0 0 0 7 7]", "(dupli [3 9 0]) -> [3 3 9 9 0 0]", "(dupli [7 9 1 7]) -> [7 7 9 9 1 1 7 7]", "(dupli [7]) -> [7 7]", "(dupli [7 7]) -> [7 7 7 7]", "(dupli [0]) -> [0 0]", "(dupli [5]) -> [5 5]", "(dupli [0 2 6]) -> [0 0 2 2 6 6]", "(dupli [8 4 4]) -> [8 8 4 4 4 4]", "(dupli []) -> []", "(dupli [1 3 3 1]) -> [1 1 3 3 3 3 1 1]", "(dupli [9 5 3]) -> [9 9 5 5 3 3]", "(dupli [5 6 8 7]) -> [5 5 6 6 8 8 7 7]", "(dupli [2 3 6 6 3]) -> [2 2 3 3 6 6 6 6 3 3]", "(dupli []) -> []", "(dupli [7 4 2 8 1]) -> [7 7 4 4 2 2 8 8 1 1]", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [7 2 0 6 4]) -> [7 7 2 2 0 0 6 6 4 4]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli []) -> []", "(dupli [8 6 7]) -> [8 8 6 6 7 7]", "(dupli [7]) -> [7 7]", "(dupli [0 1 0]) -> [0 0 1 1 0 0]"], "time": 0.216516, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [3]) -> [3 3]", "(dupli [8 1 5]) -> [8 8 1 1 5 5]", "(dupli [6 6 2]) -> [6 6 6 6 2 2]", "(dupli [0]) -> [0 0]", "(dupli [8 6]) -> [8 8 6 6]", "(dupli [9 5 8 0 2]) -> [9 9 5 5 8 8 0 0 2 2]", "(dupli [8 7 4 5 2]) -> [8 8 7 7 4 4 5 5 2 2]", "(dupli []) -> []", "(dupli [7 3 6 5]) -> [7 7 3 3 6 6 5 5]", "(dupli [4 7 6]) -> [4 4 7 7 6 6]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli [9 9 0 8]) -> [9 9 9 9 0 0 8 8]", "(dupli [5 3 3 8 1]) -> [5 5 3 3 3 3 8 8 1 1]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [4 5]) -> [4 4 5 5]", "(dupli []) -> []", "(dupli [9 8 4 0]) -> [9 9 8 8 4 4 0 0]", "(dupli [7 0 1 9 5]) -> [7 7 0 0 1 1 9 9 5 5]", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli [2 3 9 8 9]) -> [2 2 3 3 9 9 8 8 9 9]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [0 9 1 2 5]) -> [0 0 9 9 1 1 2 2 5 5]", "(dupli [5]) -> [5 5]", "(dupli [9 8 6 9 9]) -> [9 9 8 8 6 6 9 9 9 9]", "(dupli [7 4]) -> [7 7 4 4]", "(dupli [8]) -> [8 8]", "(dupli [9 9 0]) -> [9 9 9 9 0 0]", "(dupli [4 8 3 4 2]) -> [4 4 8 8 3 3 4 4 2 2]", "(dupli [3 7 3 1 7]) -> [3 3 7 7 3 3 1 1 7 7]", "(dupli [7 6 7 0 1]) -> [7 7 6 6 7 7 0 0 1 1]", "(dupli [8 4 8 2]) -> [8 8 4 4 8 8 2 2]", "(dupli [3 4 5]) -> [3 3 4 4 5 5]", "(dupli [0 8 9 6 8]) -> [0 0 8 8 9 9 6 6 8 8]", "(dupli [6 6]) -> [6 6 6 6]", "(dupli []) -> []", "(dupli [4 5]) -> [4 4 5 5]", "(dupli [9 0 5]) -> [9 9 0 0 5 5]", "(dupli [0 3]) -> [0 0 3 3]", "(dupli []) -> []", "(dupli [6 5 2]) -> [6 6 5 5 2 2]", "(dupli [4 6 7]) -> [4 4 6 6 7 7]", "(dupli [0 1 6]) -> [0 0 1 1 6 6]", "(dupli [1]) -> [1 1]"], "time": 0.265303, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [0 5 2 2]) -> [0 0 5 5 2 2 2 2]", "(dupli [9 1]) -> [9 9 1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 7 9 8 2]) -> [4 4 7 7 9 9 8 8 2 2]", "(dupli [6 5 5 9]) -> [6 6 5 5 5 5 9 9]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [8 4 4 0]) -> [8 8 4 4 4 4 0 0]", "(dupli [9 7 5]) -> [9 9 7 7 5 5]", "(dupli [8 8 6]) -> [8 8 8 8 6 6]", "(dupli [9 9 5 5 6]) -> [9 9 9 9 5 5 5 5 6 6]", "(dupli [7 0]) -> [7 7 0 0]", "(dupli []) -> []", "(dupli [4]) -> [4 4]", "(dupli []) -> []", "(dupli [0 2]) -> [0 0 2 2]", "(dupli [3 8 2 1 3]) -> [3 3 8 8 2 2 1 1 3 3]", "(dupli []) -> []", "(dupli [3 5 4 8]) -> [3 3 5 5 4 4 8 8]", "(dupli [5 8 6 2]) -> [5 5 8 8 6 6 2 2]", "(dupli [7 2 3 1]) -> [7 7 2 2 3 3 1 1]", "(dupli [5 6 0 5 5]) -> [5 5 6 6 0 0 5 5 5 5]", "(dupli [5 1 2 3 7]) -> [5 5 1 1 2 2 3 3 7 7]", "(dupli [2 4 3 7]) -> [2 2 4 4 3 3 7 7]", "(dupli [5 7 3]) -> [5 5 7 7 3 3]", "(dupli [7 3]) -> [7 7 3 3]", "(dupli [1 2]) -> [1 1 2 2]", "(dupli [9 6 6 0]) -> [9 9 6 6 6 6 0 0]", "(dupli [6 4]) -> [6 6 4 4]", "(dupli [3 4 2 1]) -> [3 3 4 4 2 2 1 1]", "(dupli [9]) -> [9 9]", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [3 1 8 4]) -> [3 3 1 1 8 8 4 4]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [6 5 2 2]) -> [6 6 5 5 2 2 2 2]", "(dupli [2 3 1 2 9]) -> [2 2 3 3 1 1 2 2 9 9]", "(dupli [1 0 7]) -> [1 1 0 0 7 7]", "(dupli [3]) -> [3 3]", "(dupli [4 5 0]) -> [4 4 5 5 0 0]", "(dupli [7 9 1 2]) -> [7 7 9 9 1 1 2 2]", "(dupli [8 2 0]) -> [8 8 2 2 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 8 8 2]) -> [5 5 8 8 8 8 2 2]", "(dupli [8 9 7 3 9]) -> [8 8 9 9 7 7 3 3 9 9]", "(dupli [7]) -> [7 7]", "(dupli [2 3 2]) -> [2 2 3 3 2 2]", "(dupli [0]) -> [0 0]"], "time": 0.231485, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [5 6 5 8 4]) -> [5 5 6 6 5 5 8 8 4 4]", "(dupli [6 3 0 9]) -> [6 6 3 3 0 0 9 9]", "(dupli [6 0 7]) -> [6 6 0 0 7 7]", "(dupli [8 5 6 4]) -> [8 8 5 5 6 6 4 4]", "(dupli [9 0]) -> [9 9 0 0]", "(dupli [2 8 6 2 5]) -> [2 2 8 8 6 6 2 2 5 5]", "(dupli [5 1]) -> [5 5 1 1]", "(dupli [0 6 3]) -> [0 0 6 6 3 3]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [7 5 6]) -> [7 7 5 5 6 6]", "(dupli [6 3 2 6]) -> [6 6 3 3 2 2 6 6]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 7]) -> [8 8 7 7]", "(dupli [5 8 9]) -> [5 5 8 8 9 9]", "(dupli [1 3 3 3 9]) -> [1 1 3 3 3 3 3 3 9 9]", "(dupli [7 9]) -> [7 7 9 9]", "(dupli [4 5 2 7 4]) -> [4 4 5 5 2 2 7 7 4 4]", "(dupli [1 2 8 9]) -> [1 1 2 2 8 8 9 9]", "(dupli [4 8 0 3]) -> [4 4 8 8 0 0 3 3]", "(dupli [8 5 3]) -> [8 8 5 5 3 3]", "(dupli [3 8]) -> [3 3 8 8]", "(dupli [8 9]) -> [8 8 9 9]", "(dupli [8]) -> [8 8]", "(dupli [0 7 1 2]) -> [0 0 7 7 1 1 2 2]", "(dupli [2 2 8]) -> [2 2 2 2 8 8]", "(dupli [6 4 4 6 8]) -> [6 6 4 4 4 4 6 6 8 8]", "(dupli [2 8]) -> [2 2 8 8]", "(dupli [5 1 4]) -> [5 5 1 1 4 4]", "(dupli [3 1 1]) -> [3 3 1 1 1 1]", "(dupli [3 4 9 9 3]) -> [3 3 4 4 9 9 9 9 3 3]", "(dupli [7]) -> [7 7]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [8]) -> [8 8]", "(dupli [5 3 6]) -> [5 5 3 3 6 6]", "(dupli [6 8]) -> [6 6 8 8]", "(dupli [8]) -> [8 8]", "(dupli [3]) -> [3 3]", "(dupli [6 8 3 4 4]) -> [6 6 8 8 3 3 4 4 4 4]", "(dupli [6]) -> [6 6]", "(dupli [7 9 0]) -> [7 7 9 9 0 0]", "(dupli [4 2 8 5]) -> [4 4 2 2 8 8 5 5]", "(dupli [1 7 8 1 6]) -> [1 1 7 7 8 8 1 1 6 6]", "(dupli []) -> []", "(dupli [3 8 3]) -> [3 3 8 8 3 3]", "(dupli [3]) -> [3 3]"], "time": 0.218194, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [3 0 6]) -> [3 3 0 0 6 6]", "(dupli [5 0 4]) -> [5 5 0 0 4 4]", "(dupli [9 9 3 1 0]) -> [9 9 9 9 3 3 1 1 0 0]", "(dupli [4 8 6 0]) -> [4 4 8 8 6 6 0 0]", "(dupli [8 9 3]) -> [8 8 9 9 3 3]", "(dupli [5 5]) -> [5 5 5 5]", "(dupli []) -> []", "(dupli [0 9 6 0]) -> [0 0 9 9 6 6 0 0]", "(dupli [8 6 4 1]) -> [8 8 6 6 4 4 1 1]", "(dupli [8]) -> [8 8]", "(dupli [8 8 4]) -> [8 8 8 8 4 4]", "(dupli [5 7 4]) -> [5 5 7 7 4 4]", "(dupli []) -> []", "(dupli [9 6 9 3]) -> [9 9 6 6 9 9 3 3]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [8 9 7 8]) -> [8 8 9 9 7 7 8 8]", "(dupli []) -> []", "(dupli [4 5 1]) -> [4 4 5 5 1 1]", "(dupli [8 4 8 1]) -> [8 8 4 4 8 8 1 1]", "(dupli [5 2 6 3]) -> [5 5 2 2 6 6 3 3]", "(dupli [4 4 7 8 2]) -> [4 4 4 4 7 7 8 8 2 2]", "(dupli [2 2 5]) -> [2 2 2 2 5 5]", "(dupli [6 4 7]) -> [6 6 4 4 7 7]", "(dupli [7 9 0 5 7]) -> [7 7 9 9 0 0 5 5 7 7]", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [1]) -> [1 1]", "(dupli [0 0 6 0]) -> [0 0 0 0 6 6 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [4 8 3]) -> [4 4 8 8 3 3]", "(dupli [0 2 1]) -> [0 0 2 2 1 1]", "(dupli [5 9 4 9 2]) -> [5 5 9 9 4 4 9 9 2 2]", "(dupli [4 3 8]) -> [4 4 3 3 8 8]", "(dupli [8 8 3 2 9]) -> [8 8 8 8 3 3 2 2 9 9]", "(dupli [0 3 3 8]) -> [0 0 3 3 3 3 8 8]", "(dupli [8 2 1 0]) -> [8 8 2 2 1 1 0 0]", "(dupli [8 8 3]) -> [8 8 8 8 3 3]", "(dupli [7 8 2 2 1]) -> [7 7 8 8 2 2 2 2 1 1]", "(dupli [8 6 6 5]) -> [8 8 6 6 6 6 5 5]", "(dupli []) -> []", "(dupli [5 0]) -> [5 5 0 0]", "(dupli [7 6 1 2]) -> [7 7 6 6 1 1 2 2]", "(dupli [8]) -> [8 8]", "(dupli [4 5 4 7]) -> [4 4 5 5 4 4 7 7]", "(dupli [2 1 9 4]) -> [2 2 1 1 9 9 4 4]", "(dupli [4 9 2 2 4]) -> [4 4 9 9 2 2 2 2 4 4]"], "time": 0.113069, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [9 6 2 9]) -> [9 9 6 6 2 2 9 9]", "(dupli [7]) -> [7 7]", "(dupli [4 1 4]) -> [4 4 1 1 4 4]", "(dupli [6 1 6 4 4]) -> [6 6 1 1 6 6 4 4 4 4]", "(dupli []) -> []", "(dupli [4 8 0 9 7]) -> [4 4 8 8 0 0 9 9 7 7]", "(dupli [2 0 2 6 3]) -> [2 2 0 0 2 2 6 6 3 3]", "(dupli [1]) -> [1 1]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 0 9 5 2]) -> [5 5 0 0 9 9 5 5 2 2]", "(dupli [1 8 0 1 3]) -> [1 1 8 8 0 0 1 1 3 3]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [7 0 4 4 6]) -> [7 7 0 0 4 4 4 4 6 6]", "(dupli [8]) -> [8 8]", "(dupli []) -> []", "(dupli [0 4 8 3 5]) -> [0 0 4 4 8 8 3 3 5 5]", "(dupli [7]) -> [7 7]", "(dupli [9 2 7 6 5]) -> [9 9 2 2 7 7 6 6 5 5]", "(dupli [9 6]) -> [9 9 6 6]", "(dupli [5 5 4]) -> [5 5 5 5 4 4]", "(dupli [0 8]) -> [0 0 8 8]", "(dupli [6 5 7]) -> [6 6 5 5 7 7]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [4 7]) -> [4 4 7 7]", "(dupli [4 6 3 4 7]) -> [4 4 6 6 3 3 4 4 7 7]", "(dupli [7 2 5 0]) -> [7 7 2 2 5 5 0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 5 2]) -> [5 5 5 5 2 2]", "(dupli [1 8 7 1]) -> [1 1 8 8 7 7 1 1]", "(dupli [0 6 2 3 9]) -> [0 0 6 6 2 2 3 3 9 9]", "(dupli [3 2 4]) -> [3 3 2 2 4 4]", "(dupli [2 1]) -> [2 2 1 1]", "(dupli [1 7 8 2]) -> [1 1 7 7 8 8 2 2]", "(dupli []) -> []", "(dupli [9 2 8]) -> [9 9 2 2 8 8]", "(dupli [2 5 2]) -> [2 2 5 5 2 2]", "(dupli [4 9 1 1]) -> [4 4 9 9 1 1 1 1]", "(dupli [6 1 1 7]) -> [6 6 1 1 1 1 7 7]", "(dupli [3 4]) -> [3 3 4 4]", "(dupli [1 3 7 2]) -> [1 1 3 3 7 7 2 2]", "(dupli [8 2 3]) -> [8 8 2 2 3 3]", "(dupli []) -> []", "(dupli [9 9 5 9 5]) -> [9 9 9 9 5 5 9 9 5 5]"], "time": 0.107518, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 6]) -> [4 4 6 6]", "(dupli [6]) -> [6 6]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [4 6 0 1 8]) -> [4 4 6 6 0 0 1 1 8 8]", "(dupli [0 4]) -> [0 0 4 4]", "(dupli [9 2 2 5]) -> [9 9 2 2 2 2 5 5]", "(dupli [8 3 1 8 1]) -> [8 8 3 3 1 1 8 8 1 1]", "(dupli [5 8 2 1 6]) -> [5 5 8 8 2 2 1 1 6 6]", "(dupli [4]) -> [4 4]", "(dupli [0 5 0]) -> [0 0 5 5 0 0]", "(dupli [2 0 8 5]) -> [2 2 0 0 8 8 5 5]", "(dupli [8]) -> [8 8]", "(dupli [4 6 0]) -> [4 4 6 6 0 0]", "(dupli [2 9 4 7]) -> [2 2 9 9 4 4 7 7]", "(dupli [1 5 5 4 4]) -> [1 1 5 5 5 5 4 4 4 4]", "(dupli [9]) -> [9 9]", "(dupli [7]) -> [7 7]", "(dupli [4]) -> [4 4]", "(dupli [0]) -> [0 0]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [5 0 7 6 3]) -> [5 5 0 0 7 7 6 6 3 3]", "(dupli [1 7]) -> [1 1 7 7]", "(dupli [2]) -> [2 2]", "(dupli [2 7 0]) -> [2 2 7 7 0 0]", "(dupli [7 5]) -> [7 7 5 5]", "(dupli [6]) -> [6 6]", "(dupli []) -> []", "(dupli [6 4 1 1 9]) -> [6 6 4 4 1 1 1 1 9 9]", "(dupli [7]) -> [7 7]", "(dupli [0 4 6]) -> [0 0 4 4 6 6]", "(dupli [8 5 2]) -> [8 8 5 5 2 2]", "(dupli [4]) -> [4 4]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli []) -> []", "(dupli [1]) -> [1 1]", "(dupli [5 3 7 0 6]) -> [5 5 3 3 7 7 0 0 6 6]", "(dupli [7 7 9]) -> [7 7 7 7 9 9]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [4 1]) -> [4 4 1 1]", "(dupli []) -> []", "(dupli [0]) -> [0 0]", "(dupli [6 8]) -> [6 6 8 8]", "(dupli [8 9]) -> [8 8 9 9]", "(dupli [2 6 1 6 0]) -> [2 2 6 6 1 1 6 6 0 0]", "(dupli [9 3 5]) -> [9 9 3 3 5 5]", "(dupli [1 9 0 2]) -> [1 1 9 9 0 0 2 2]"], "time": 0.106308, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
{"examples": ["(dupli []) -> []", "(dupli [4 3 4 8]) -> [4 4 3 3 4 4 8 8]", "(dupli [5 3 7 3]) -> [5 5 3 3 7 7 3 3]", "(dupli []) -> []", "(dupli [7]) -> [7 7]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli [4 3]) -> [4 4 3 3]", "(dupli []) -> []", "(dupli [5 2 4]) -> [5 5 2 2 4 4]", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli [3 2]) -> [3 3 2 2]", "(dupli [0 9 3 8]) -> [0 0 9 9 3 3 8 8]", "(dupli [9 5 3 9]) -> [9 9 5 5 3 3 9 9]", "(dupli [0 6]) -> [0 0 6 6]", "(dupli [4 3]) -> [4 4 3 3]", "(dupli [8 2]) -> [8 8 2 2]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [9]) -> [9 9]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [6 6 1 8 8]) -> [6 6 6 6 1 1 8 8 8 8]", "(dupli [3 3]) -> [3 3 3 3]", "(dupli [4 6 8 7 4]) -> [4 4 6 6 8 8 7 7 4 4]", "(dupli []) -> []", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 9 7 2]) -> [8 8 9 9 7 7 2 2]", "(dupli [2 7 2 9]) -> [2 2 7 7 2 2 9 9]", "(dupli []) -> []", "(dupli [8 4]) -> [8 8 4 4]", "(dupli [2 6 7]) -> [2 2 6 6 7 7]", "(dupli [5]) -> [5 5]", "(dupli []) -> []", "(dupli []) -> []", "(dupli [8 9 6]) -> [8 8 9 9 6 6]", "(dupli [2 4 1 9 6]) -> [2 2 4 4 1 1 9 9 6 6]", "(dupli [9 2 8 5 3]) -> [9 9 2 2 8 8 5 5 3 3]", "(dupli [9 4 7]) -> [9 9 4 4 7 7]", "(dupli [2]) -> [2 2]", "(dupli []) -> []", "(dupli [8 0 0 3]) -> [8 8 0 0 0 0 3 3]", "(dupli [0 0 2 0]) -> [0 0 0 0 2 2 0 0]", "(dupli [1 1 1]) -> [1 1 1 1 1 1]", "(dupli [5 2]) -> [5 5 2 2]", "(dupli [9 8]) -> [9 9 8 8]", "(dupli [2]) -> [2 2]"], "time": 0.108286, "solution": "(let dupli (let a (lambda (b) (foldr b (lambda (d c) (cons c (cons c d))) [])) _) _)", "name": "dupli"}
