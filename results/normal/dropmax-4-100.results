{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.031562, "examples": ["(dropmax []) -> []", "(dropmax [1 0]) -> [0]", "(dropmax [9 2 4 2]) -> [2 4 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.040353, "examples": ["(dropmax []) -> []", "(dropmax [7 2]) -> [2]", "(dropmax [3]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 0 c)))) _) _)", "name": "dropmax", "time": 0.051764, "examples": ["(dropmax []) -> []", "(dropmax [0 7]) -> [0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.045097, "examples": ["(dropmax []) -> []", "(dropmax [3 1]) -> [1]", "(dropmax [9 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.182449, "examples": ["(dropmax []) -> []", "(dropmax [6 4 7 7]) -> [6 4]", "(dropmax [1 6 2 2 9]) -> [1 6 2 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.174284, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [3 3 9 6]) -> [3 3 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.199361, "examples": ["(dropmax []) -> []", "(dropmax [0 3 3 8]) -> [0 3 3]", "(dropmax [7 9 5]) -> [7 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.191616, "examples": ["(dropmax []) -> []", "(dropmax [4 8 8 6 6]) -> [4 6 6]", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.185075, "examples": ["(dropmax []) -> []", "(dropmax [2 2]) -> []", "(dropmax [9 5 7 9 8]) -> [5 7 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177761, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 6 5 0]) -> [4 5 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.14774, "examples": ["(dropmax []) -> []", "(dropmax [6 1]) -> [1]", "(dropmax [0 9 7 1]) -> [0 7 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.130573, "examples": ["(dropmax []) -> []", "(dropmax [6 3 9 5 6]) -> [6 3 5 6]", "(dropmax [9 3 5 7 9]) -> [3 5 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.177572, "examples": ["(dropmax []) -> []", "(dropmax [5 0 0]) -> [0 0]", "(dropmax [8 0 9 5 3]) -> [8 0 5 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.182161, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 8 3]) -> [4 3]"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000517, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.150918, "examples": ["(dropmax []) -> []", "(dropmax [9 0 4 1 6]) -> [0 4 1 6]", "(dropmax [4 5 0 0 0]) -> [4 0 0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.146975, "examples": ["(dropmax []) -> []", "(dropmax [1 8 1]) -> [1 1]", "(dropmax [2 5 9 0 4]) -> [2 5 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldr b (lambda (d c) (cons c [])) [])) _) _)", "name": "dropmax", "time": 0.036856, "examples": ["(dropmax []) -> []", "(dropmax [3 5 5]) -> [3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.107014, "examples": ["(dropmax []) -> []", "(dropmax [6 8 3 7]) -> [6 3 7]", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.150511, "examples": ["(dropmax []) -> []", "(dropmax [4 0 3 6]) -> [4 0 3]", "(dropmax [8 6 6 3 3]) -> [6 6 3 3]"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000556, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.027332, "examples": ["(dropmax []) -> []", "(dropmax [6 1]) -> [1]", "(dropmax [6 1 5]) -> [1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.035038, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [7 0 6 1 3]) -> [0 6 1 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.038087, "examples": ["(dropmax []) -> []", "(dropmax [3]) -> []", "(dropmax [9 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.039338, "examples": ["(dropmax []) -> []", "(dropmax [5 3]) -> [3]", "(dropmax [7 6 4]) -> [6 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldr b (lambda (d c) (cons c [])) [])) _) _)", "name": "dropmax", "time": 0.057247, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 9]) -> [4]"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.000776, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.154479, "examples": ["(dropmax []) -> []", "(dropmax [6 3 9 0 7]) -> [6 3 0 7]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.033082, "examples": ["(dropmax []) -> []", "(dropmax [4 2]) -> [2]", "(dropmax [6 3 1 1]) -> [3 1 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.040246, "examples": ["(dropmax []) -> []", "(dropmax [7 0]) -> [0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.120049, "examples": ["(dropmax []) -> []", "(dropmax [5 9 0 4 1]) -> [5 0 4 1]", "(dropmax [0 9 1 1 6]) -> [0 1 1 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.119019, "examples": ["(dropmax []) -> []", "(dropmax [9 5]) -> [5]", "(dropmax [3 7 1 8]) -> [3 7 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158426, "examples": ["(dropmax []) -> []", "(dropmax [8 8 9 1 1]) -> [8 8 1 1]", "(dropmax [9 2 4 8]) -> [2 4 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.140944, "examples": ["(dropmax []) -> []", "(dropmax [4 2 3 5 3]) -> [4 2 3 3]", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.159021, "examples": ["(dropmax []) -> []", "(dropmax [3 7 3 5 1]) -> [3 3 5 1]", "(dropmax [0 2 8]) -> [0 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.130139, "examples": ["(dropmax []) -> []", "(dropmax [8 2 1 1 9]) -> [8 2 1 1]", "(dropmax [1 5 7 7]) -> [1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.16322, "examples": ["(dropmax []) -> []", "(dropmax [3 3 4 4 3]) -> [3 3 3]", "(dropmax [7 0 0]) -> [0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 1 c)))) _) _)", "name": "dropmax", "time": 0.037934, "examples": ["(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax [1 2]) -> [1]"]}
