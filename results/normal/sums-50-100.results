{"examples": ["(sums []) -> []", "(sums [[6 0] [8 0]]) -> [6 8]", "(sums [[0 4 2 6 9] [5 4 9 3] [] [9 7] [6 8 6 2 7]]) -> [21 21 0 16 29]", "(sums []) -> []", "(sums [[2 7]]) -> [9]", "(sums [[9 3 2 2 9] [3 0 0 9] [4 0 5 4 7] [0 2 9] [5 9 9 6]]) -> [25 12 20 11 29]", "(sums [[4 7] [3 3] [3 0 7]]) -> [11 6 10]", "(sums [[0 0 8 4] [5] [3 6 4 9]]) -> [12 5 22]", "(sums [[4 8 4 2 8] [8] [] [6] []]) -> [26 8 0 6 0]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[3 9 9]]) -> [21]", "(sums [[3 1 2 3 4]]) -> [13]", "(sums [[2 6 5 3 6] [] [3 1 6 5 6] []]) -> [22 0 21 0]", "(sums [[4 8 8] [3 7 5 6 9] [3 2 8 3] []]) -> [20 30 16 0]", "(sums [[1 4 3] [3 9 7 2]]) -> [8 21]", "(sums [[5 3 5] [8 2 9]]) -> [13 19]", "(sums [[9]]) -> [9]", "(sums [[2]]) -> [2]", "(sums [[7 6] [6 3] [1 6 6 3] [0 3 7 1] []]) -> [13 9 16 11 0]", "(sums [[7] [9] [4]]) -> [7 9 4]", "(sums [[6 6]]) -> [12]", "(sums [[3 8] [0 2 1 4]]) -> [11 7]", "(sums [[]]) -> [0]", "(sums [[0] [4 5 6] [9 1 0]]) -> [0 15 10]", "(sums [[3 2 8 0]]) -> [13]", "(sums [[8 4 9 9] [1 7 3 4 1] [0 7 4 9] []]) -> [30 16 20 0]", "(sums [[] [8 0] [4 4 9 5]]) -> [0 8 22]", "(sums [[5 4] [7 7 5 5] [6 6 2] [8 7 9 0] [0]]) -> [9 24 14 24 0]", "(sums [[3 5 2 7] [9] [6 3 5]]) -> [17 9 14]", "(sums [[2 8 7 2] [] [0 9] [] [8 4 8 9 1]]) -> [19 0 9 0 30]", "(sums [[] [8 3 8 5]]) -> [0 24]", "(sums []) -> []", "(sums [[9 9 4 3 6] [8 2] [4 6 2]]) -> [31 10 12]", "(sums []) -> []", "(sums [[] [2] [9 8 5] [2 2 8 7 6] [7 1 2]]) -> [0 2 22 25 10]", "(sums []) -> []", "(sums [[2 1 0] [3 7 5 7] [0 5] [2 5 2 3 8] [6 4 7 6]]) -> [3 22 5 20 23]", "(sums [[3 5 6 4 6] [0 9 8]]) -> [24 17]", "(sums [[3 8] [0 1 6 9 0] [6 6 7] [0 1]]) -> [11 16 19 1]", "(sums [[9 1 0] [] [7 1 0 4] [9] [8 3 6 0 7]]) -> [10 0 12 9 24]", "(sums [[7 7 9 6] [6 9 3 8 7] [5]]) -> [29 33 5]", "(sums [[6 2] [3] [5 8 5 9 4] [2 4 1 4 5] [8 5 8 0]]) -> [8 3 31 16 21]", "(sums [[1] [5 9 9 7 3] [0 9 4 1] [2 8 6 1] [8]]) -> [1 33 14 17 8]", "(sums [[4 2 3] [8 6 5] [6] [4 0 0]]) -> [9 19 6 4]", "(sums []) -> []", "(sums [[] [2 7 4 7 2] [6 1 5] [5 0 4] [2 6 8 8]]) -> [0 22 12 9 24]", "(sums []) -> []"], "time": 0.595589, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[7] []]) -> [7 0]", "(sums [[5 2 8 1 0]]) -> [16]", "(sums [[5 1 5] [9]]) -> [11 9]", "(sums [[0 6 7 6] [4 4] [2 1]]) -> [19 8 3]", "(sums [[5 3 8]]) -> [16]", "(sums [[] [9 9 5] [7 0 0] [9 2 3 7] [7 6 5 0]]) -> [0 23 7 21 18]", "(sums [[0 0 6 8 9]]) -> [23]", "(sums []) -> []", "(sums [[0] [0 8] [5 7 4] [3 9] [8 0 7 4 3]]) -> [0 8 16 12 22]", "(sums [[] [6 7 5 5] [9 2] [0 0 7 0]]) -> [0 23 11 7]", "(sums [[3 7 7 8 5]]) -> [30]", "(sums [[1 2 4 8] [4 8] [6 5 4 1 5] [3 9 8 2] [1]]) -> [15 12 21 22 1]", "(sums [[0 9] [7 0 6 2]]) -> [9 15]", "(sums []) -> []", "(sums [[5 6 2 2]]) -> [15]", "(sums [[4] [8 9 7] [2 4 3]]) -> [4 24 9]", "(sums [[1 1]]) -> [2]", "(sums [[7 0 4 0 8]]) -> [19]", "(sums [[4 9 2 8 8] [] [3 1 1 0] [5 5]]) -> [31 0 5 10]", "(sums [[] [7] [7 9 6 6 0] [5 2 0 2 5] [5 3 9 0 5]]) -> [0 7 28 14 22]", "(sums [[1] [4 1 8 3] [9 1 6] [0 3 7]]) -> [1 16 16 10]", "(sums [[] [9 9 3 3] [2 9 8 3 7] [] [5 7 9 9 7]]) -> [0 24 29 0 37]", "(sums [[8 1 0 7 7] [3 4 6 3 9] [7 1 3 6] []]) -> [23 25 17 0]", "(sums []) -> []", "(sums [[4 2] [5 8] [2 6 1 7]]) -> [6 13 16]", "(sums [[2 4 0] [2] [6 3 0] []]) -> [6 2 9 0]", "(sums []) -> []", "(sums [[6 9] [7 8] [7 6 1] [7 2 6 1 4]]) -> [15 15 14 20]", "(sums [[] [2 0 1 4] [4 9 9 2 3] [9 6 4] [9 9 1]]) -> [0 7 27 19 19]", "(sums [[9] [3 1 7 6]]) -> [9 17]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 8 6 9]]) -> [25]", "(sums [[7 6 5]]) -> [18]", "(sums [[2] [7 5 5 4 4] [] [8 6 6] [8 6]]) -> [2 25 0 20 14]", "(sums [[2 1] [] [2 7 3] [5 9 8]]) -> [3 0 12 22]", "(sums [[6 0 8 9 6] [4] [5 0 0]]) -> [29 4 5]", "(sums [[2 2] [] [9 8]]) -> [4 0 17]", "(sums [[6 2 6 3] [6 2 2 3 3]]) -> [17 16]", "(sums [[1 9 3] []]) -> [13 0]", "(sums [[8 5 7 5 2] [5 6 9 3]]) -> [27 23]", "(sums [[7] [9 7 4 4 1] [0 6] [9 7 4]]) -> [7 25 6 20]", "(sums [[4] [3 6 6 5] [0 5 8 6 9]]) -> [4 20 28]", "(sums [[0 6 5 8 1] []]) -> [20 0]", "(sums []) -> []", "(sums [[8 3] [5 3]]) -> [11 8]"], "time": 0.62803, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 2] [1 9 9] [5 2]]) -> [2 19 7]", "(sums [[1 9 8 0] [4 2 8 8 4] [] []]) -> [18 26 0 0]", "(sums [[] [1 0 9 7]]) -> [0 17]", "(sums [[5 2 0 0]]) -> [7]", "(sums [[2 2 5 4] [] [0 7 9] [] [1 2]]) -> [13 0 16 0 3]", "(sums []) -> []", "(sums [[7 4 2 5 8] [0 5 1 8] [7] [1 9 4 5 7] [9 4]]) -> [26 14 7 26 13]", "(sums [[] [] [9 3 7] [4]]) -> [0 0 19 4]", "(sums [[2] [0 3]]) -> [2 3]", "(sums [[9 4 3 2 8] [] [2 2 2 3 5] [7 8 8 9 9] [9 0 1]]) -> [26 0 14 41 10]", "(sums [[9 9 3 3] [2 7 4] [9 8 5 0 6]]) -> [24 13 28]", "(sums [[5 0 8 8] [3 6 9 8] [2 7 3]]) -> [21 26 12]", "(sums [[9 3 3 5 1] [] [8 0 1 8 5]]) -> [21 0 22]", "(sums [[1 9] [5 2 1 4] [1 8 8 9 5]]) -> [10 12 31]", "(sums [[0 1 4 5 9] [8 2 8 5]]) -> [19 23]", "(sums []) -> []", "(sums []) -> []", "(sums [[1 1 7 4] [3 1 3] [4 6 0 9 0] [4 0 3 1] []]) -> [13 7 19 8 0]", "(sums []) -> []", "(sums [[] [] [4 3]]) -> [0 0 7]", "(sums [[8 4 1 9] [6 6 9 8]]) -> [22 29]", "(sums [[4 9 5 5 4] [9 5 6] [5 8 3] [5 4 5 7 5]]) -> [27 20 16 26]", "(sums [[6 7 7 7 0] [] [4 8] [3] [1 8]]) -> [27 0 12 3 9]", "(sums []) -> []", "(sums [[7 0 7 6 1]]) -> [21]", "(sums [[6] [6 4]]) -> [6 10]", "(sums [[6] [4 8 8 3 0] [8] [0 7 6 6]]) -> [6 23 8 19]", "(sums []) -> []", "(sums [[0] [7 6 1]]) -> [0 14]", "(sums [[7 4 5 1] [6 0] [1 2 9] [8]]) -> [17 6 12 8]", "(sums [[7] [2]]) -> [7 2]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [0 9 7] [2] [4 8]]) -> [0 16 2 12]", "(sums [[9 5 1]]) -> [15]", "(sums [[3 5] [5] [2] [2 5 0]]) -> [8 5 2 7]", "(sums [[6] [] [0 1 5 2 4] [1]]) -> [6 0 12 1]", "(sums [[0 2 5 6] [3] [3 9 1 4 9]]) -> [13 3 26]", "(sums [[3 6] [] [6 4 2 9]]) -> [9 0 21]", "(sums []) -> []", "(sums [[] [7 4] [4 1 3 2 7] [1]]) -> [0 11 17 1]", "(sums [[] [0 9 8 4 3] [2 1 1] [4 4 5 1 5]]) -> [0 24 4 19]", "(sums [[9 6 6 7] [1 0 1 4 5] [2 4 6]]) -> [28 11 12]", "(sums [[8 5 0] [4 1 2 7]]) -> [13 14]", "(sums [[0 7 9 4 4] [0] [5 9 7 0 8] [7 1]]) -> [24 0 29 8]", "(sums [[2 2 3] [4 5] [6 8 9 9 0] [1 1]]) -> [7 9 32 2]", "(sums []) -> []", "(sums []) -> []"], "time": 0.652949, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 0 9 8]]) -> [24]", "(sums []) -> []", "(sums []) -> []", "(sums [[6] [6 4 6]]) -> [6 16]", "(sums [[5 7] [3] [8 4 7 0 0] [5 4 7 4 7]]) -> [12 3 19 27]", "(sums [[3] [2 5 7] [9 9] [3 6 7] [5 4 1 5 0]]) -> [3 14 18 16 15]", "(sums [[4] [2 0] [5] [6 5 1]]) -> [4 2 5 12]", "(sums [[8]]) -> [8]", "(sums [[6 4 5] [2 2 7] [3] [6 2 4] [8 0]]) -> [15 11 3 12 8]", "(sums [[2 9 5 5] [] [1 5 9 5 2]]) -> [21 0 22]", "(sums []) -> []", "(sums []) -> []", "(sums [[5] [] [7 3 9 0]]) -> [5 0 19]", "(sums [[] [3 9 6 2 6] [3 7 8 1 2] [7 6]]) -> [0 26 21 13]", "(sums [[7 5 8 0] [3] [1 2 2 1 0] [5 9 7 1 7] [3 1 5]]) -> [20 3 6 29 9]", "(sums [[] [1 7 8] [7 2 4 8 8] []]) -> [0 16 29 0]", "(sums []) -> []", "(sums [[0 2 0]]) -> [2]", "(sums [[] [3 7] [] [9 6] [7]]) -> [0 10 0 15 7]", "(sums [[5 4] [7 0 6 2] [4 4 8 7 9] [] [7 4 7 9 0]]) -> [9 15 32 0 27]", "(sums [[9 3] [1 0 4 3 2] [] [3 7]]) -> [12 10 0 10]", "(sums [[4 4] [9 9 3] [] [] []]) -> [8 21 0 0 0]", "(sums [[2] [] [0 9 6] [7 8 0 6]]) -> [2 0 15 21]", "(sums [[0 1 2] [4 6] [1 6 4 9 8]]) -> [3 10 28]", "(sums [[2 3 8] [3 7] [] [4 9] [6]]) -> [13 10 0 13 6]", "(sums []) -> []", "(sums [[1 9 3 7 7] [3 9 5 6] [] [1 8 5]]) -> [27 23 0 14]", "(sums [[3 0 8 4]]) -> [15]", "(sums [[9 6] [6 4] [7 9 5 3 1] [] [1]]) -> [15 10 25 0 1]", "(sums [[1 4 8] [5 2 7] [9 5 5 0 7]]) -> [13 14 26]", "(sums [[4] []]) -> [4 0]", "(sums [[6 0] [3 8 0] [1 7 1] [9 3] [9 7]]) -> [6 11 9 12 16]", "(sums []) -> []", "(sums [[8 8 8 0 4]]) -> [28]", "(sums [[6] [0 4 5 1 7]]) -> [6 17]", "(sums [[0 1] [6 9 2] [5 7 6] []]) -> [1 17 18 0]", "(sums [[]]) -> [0]", "(sums [[5 7 6 8]]) -> [26]", "(sums [[4 3 6 7 3] [1 4] [7] [1 2 3 6] [1 6]]) -> [23 5 7 12 7]", "(sums [[3 6 5] [6 3 5 8] [8 2 9] [] [5 1]]) -> [14 22 19 0 6]", "(sums [[] [7 8 7 7] [0 6 7]]) -> [0 29 13]", "(sums [[6] [5 3] [3 2] [4 8 2 3] []]) -> [6 8 5 17 0]", "(sums [[] [6 7 8 6 5]]) -> [0 32]", "(sums [[6 9 1 4 1]]) -> [21]", "(sums [[4 3 8 6 6] [4 1 3 1 5] [7]]) -> [27 14 7]", "(sums []) -> []", "(sums [[4 4 0 2] [5 6] [5 0 9 7 8]]) -> [10 11 29]", "(sums [[6 2 2 4 1] [6 4 4] [2 7] [0 3 6 3] [3 4 3 9]]) -> [15 14 9 12 19]"], "time": 0.652356, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[9] [5 5] [7 3 8 0 2]]) -> [9 10 20]", "(sums [[4] []]) -> [4 0]", "(sums []) -> []", "(sums [[9 2 9] [5 1]]) -> [20 6]", "(sums [[2 8 0] [5 6]]) -> [10 11]", "(sums []) -> []", "(sums [[0]]) -> [0]", "(sums [[9] [5 9 6 9 3] [4]]) -> [9 32 4]", "(sums [[5 3 5] [1 5] [] [6 3] []]) -> [13 6 0 9 0]", "(sums [[3 4 9] [] [3 8 4] [3]]) -> [16 0 15 3]", "(sums [[6 0 6 0] [4 6 7 2 7]]) -> [12 26]", "(sums []) -> []", "(sums []) -> []", "(sums [[8 8 2]]) -> [18]", "(sums []) -> []", "(sums [[4 6 7 4 5]]) -> [26]", "(sums [[] [7 5 4 2 8] [9 9] [7 4 8 0 5] [0 9 1 7 1]]) -> [0 26 18 24 18]", "(sums [[] [] [0 0]]) -> [0 0 0]", "(sums [[6 3 1 1 2] []]) -> [13 0]", "(sums [[7 3 2 1 0] [] [3 5 3] [7 3 7 2] [8 6 2 3]]) -> [13 0 11 19 19]", "(sums [[] [3 7 6 0] [0 8 9] [4 1 3 2 6]]) -> [0 16 17 16]", "(sums [[9] [] [6] []]) -> [9 0 6 0]", "(sums [[1 7 6 2 9] [8 9] [9 7 1 5 1]]) -> [25 17 23]", "(sums [[3 6] [5 7 7 0 2] [4 6 3 2] [4 9 1 2] [0 8 1 9 9]]) -> [9 21 15 16 27]", "(sums [[0] [1 9] [1 3 9 5 7] [7] [7 0 3]]) -> [0 10 25 7 10]", "(sums [[7 2 1 7 8] [6 5 9]]) -> [25 20]", "(sums [[1] [7 3] [2 9] [9 2] [3 1]]) -> [1 10 11 11 4]", "(sums [[7] [0 7 0 6 4] [3 9 1 9 9] [4 0]]) -> [7 17 31 4]", "(sums []) -> []", "(sums [[0] [4 1 7] [7 4] [] [8 1 8]]) -> [0 12 11 0 17]", "(sums [[5 5 9 7 9]]) -> [35]", "(sums [[5] [6] [] [1 7 6 2]]) -> [5 6 0 16]", "(sums [[6 1 5 9] [] [2 5 5]]) -> [21 0 12]", "(sums []) -> []", "(sums [[5] [9 2 2 1 0] [0 0 5 7]]) -> [5 14 12]", "(sums [[9]]) -> [9]", "(sums []) -> []", "(sums [[7] [8] [6 8 0 9] [8 8 5 3]]) -> [7 8 23 24]", "(sums [[9] [] [8 7 1 4]]) -> [9 0 20]", "(sums [[]]) -> [0]", "(sums [[3 7 6 1 3] [5 1 3 6 1] [3 5 0 5 4]]) -> [20 16 17]", "(sums [[]]) -> [0]", "(sums [[4 0 8] [] [4 1 2 5] []]) -> [12 0 12 0]", "(sums [[]]) -> [0]", "(sums [[9 7 1 3] []]) -> [20 0]", "(sums []) -> []", "(sums [[] [4 5 8] [5]]) -> [0 17 5]", "(sums []) -> []"], "time": 0.654377, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [3 7 1 0 8] []]) -> [0 19 0]", "(sums [[] [9 5 1 5]]) -> [0 20]", "(sums []) -> []", "(sums [[7 5] [4 6 4 0 3] [5 9 8] [5 9 5]]) -> [12 17 22 19]", "(sums [[] [7 2]]) -> [0 9]", "(sums [[] [1 1 5] [1 7 0] [2 1 3 3 7] [3 7 6]]) -> [0 7 8 16 16]", "(sums [[] []]) -> [0 0]", "(sums [[] [8 5] [4 4] [8 7 1]]) -> [0 13 8 16]", "(sums [[] [0 9 6 5 5]]) -> [0 25]", "(sums [[]]) -> [0]", "(sums [[6 3 8 8 5]]) -> [30]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 6 5 0 5] [8 0 6 1]]) -> [22 15]", "(sums [[6 4 9] [4] [3]]) -> [19 4 3]", "(sums [[3 3 1 8 2] [5] [0 2 9] [7 3 1 8 1] [5 0 9 8 6]]) -> [17 5 11 20 28]", "(sums [[] []]) -> [0 0]", "(sums [[3 2 5 3] [9 8 9 5 4]]) -> [13 35]", "(sums [[7 4 1] [] [6 0 0 2] [2] []]) -> [12 0 8 2 0]", "(sums [[8 8 7] [] [5 3] [3 3 8 4]]) -> [23 0 8 18]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[7 0 5 7 4] [3 1 7 3] [6 9 2]]) -> [23 14 17]", "(sums [[3 7 4 6] [9 9] [3 3 7] []]) -> [20 18 13 0]", "(sums [[7] [4 3 7 7 4] [0]]) -> [7 25 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[0 7 4 4] [] [] [7] []]) -> [15 0 0 7 0]", "(sums [[3 2 0 3 5]]) -> [13]", "(sums [[2 2 3] [] [4 1 6]]) -> [7 0 11]", "(sums [[9 8 3 2 5] [4 3 8 1] [2 0] [2 0 6] [1]]) -> [27 16 2 8 1]", "(sums [[1 7] [] [1 0 7 7 8]]) -> [8 0 23]", "(sums [[6 7 3 2] [7 6 8] []]) -> [18 21 0]", "(sums [[3 3] [9] [6]]) -> [6 9 6]", "(sums [[7]]) -> [7]", "(sums [[8 2] [1 9 8 8] []]) -> [10 26 0]", "(sums [[7 2 7 1 5] [2] [5 1 3 9 4] [0 7]]) -> [22 2 22 7]", "(sums [[5 9 4 4 1] [0 7 6] [3 3 9 7] [2 6]]) -> [23 13 22 8]", "(sums [[]]) -> [0]", "(sums [[2] [5 7 9 9 1] []]) -> [2 31 0]", "(sums [[1] [3 7 4 4] [4 2 0 7] [0 8] [0 9 6]]) -> [1 18 13 8 15]", "(sums [[4 2 2 1] [1]]) -> [9 1]", "(sums [[] [7 6 0 9]]) -> [0 22]", "(sums []) -> []", "(sums []) -> []", "(sums [[3 0] [7 6]]) -> [3 13]", "(sums [[5 3 7 4 4] [7 3 4 0]]) -> [23 14]", "(sums [[0 4] [9 6 3 7 1] [8] [1 2 9]]) -> [4 26 8 12]"], "time": 0.682408, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[5] [3 7 2] [] []]) -> [5 12 0 0]", "(sums []) -> []", "(sums [[4 4 7 1 8] [] [2 7 9 1 8] [2 9 6 7] [8 7 1 8 2]]) -> [24 0 27 24 26]", "(sums [[5 3] [7 3 0] [] [6 8 0 2 5] [6 8 3 6]]) -> [8 10 0 21 23]", "(sums [[5 3 7 5 7] [0 3 1 0]]) -> [27 4]", "(sums [[9 4 7 3] [7 2 2 5 5] []]) -> [23 21 0]", "(sums [[4] [4 5] [4 2 8 1] [8 8 6 3 3]]) -> [4 9 15 28]", "(sums [[3 5] [9 5] [] [5 5 1 8 1]]) -> [8 14 0 20]", "(sums [[3 8] [0] [4 9 7 2] [3 6] [3 0 9]]) -> [11 0 22 9 12]", "(sums [[2 9 7 6 7]]) -> [31]", "(sums [[] []]) -> [0 0]", "(sums [[3 4 7 5 7] [4 9 3] [6 4 8 1 4]]) -> [26 16 23]", "(sums [[4 1] [5] [] [6] [3 6 4 8 7]]) -> [5 5 0 6 28]", "(sums [[0 3 7] [] [8 9] [8 1] [5 4 8 2]]) -> [10 0 17 9 19]", "(sums [[3 0 0 4] [9]]) -> [7 9]", "(sums [[2]]) -> [2]", "(sums [[] [6 2 6 3] [0] [9 3 1]]) -> [0 17 0 13]", "(sums [[0 6 9] [9 9 7 6 4]]) -> [15 35]", "(sums [[] [3] [5 1]]) -> [0 3 6]", "(sums [[7 0] [3 7] [3 3] [7]]) -> [7 10 6 7]", "(sums [[4] [4 1 5 4 1]]) -> [4 15]", "(sums [[9 0 6 7] [8 2 1 3] [7 3 1 8 0] [8]]) -> [22 14 19 8]", "(sums [[4 0 2] [9 8] [6 2 3 0 5] [] [9 2 8 9 8]]) -> [6 17 16 0 36]", "(sums [[8 8 9] [9 5 4 4 2]]) -> [25 24]", "(sums [[] [9 9 7 9 5]]) -> [0 39]", "(sums [[7 3 7] [9 0 8 8] [8 7 7] [9]]) -> [17 25 22 9]", "(sums [[] [] [2 5 1 9 8] [0 6] [3]]) -> [0 0 25 6 3]", "(sums [[4 6 8 6 5] [2 7 0] [2 5] [0 4 1 7]]) -> [29 9 7 12]", "(sums [[7] [9 3 3] [0 5 8 9]]) -> [7 15 22]", "(sums [[4] [0 1] [4 6]]) -> [4 1 10]", "(sums []) -> []", "(sums [[6] [0 6 5 6 9]]) -> [6 26]", "(sums [[7 2] [0 2 7] [2 2] []]) -> [9 9 4 0]", "(sums [[] [3 7 8] [7 0 6] []]) -> [0 18 13 0]", "(sums [[4 9 0] [3 5] [7 5 2 7]]) -> [13 8 21]", "(sums [[4 5 8 7 0] [6 2 0 3 8] [7 2 6 8] [9 5 7 6 8] [7 6 8 5 8]]) -> [24 19 23 35 34]", "(sums [[1 4] [] [8 8 0 5] [1 3 6 4 3] [0 7 2 7]]) -> [5 0 21 17 16]", "(sums [[7 0] [6 6 2] [6 1 4 7] []]) -> [7 14 18 0]", "(sums [[2 5] [1 9 3]]) -> [7 13]", "(sums []) -> []", "(sums [[] [9] [3 8 5 9] [8 5 3]]) -> [0 9 25 16]", "(sums [[7 3 4 7 5]]) -> [26]", "(sums [[4 2 0] [8 4 9] [1 4 8] [7 9 3 6] [9 6 2]]) -> [6 21 13 25 17]", "(sums [[4 9 5] [9 5 4] [6 3] [4 0]]) -> [18 18 9 4]", "(sums [[3 4 9 0 3]]) -> [19]", "(sums [[] [0] [4 6 9 9] [9 1] [3 0 5]]) -> [0 0 28 10 8]", "(sums [[0 6] [8 3 1] [] [3 9 1 5 9]]) -> [6 12 0 27]"], "time": 0.671503, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[1 7 1 5]]) -> [14]", "(sums [[1 9 2 2 3] [6 4] [6 7] [5]]) -> [17 10 13 5]", "(sums [[3] []]) -> [3 0]", "(sums [[9 9 0 4 5] [5 9 6 8]]) -> [27 28]", "(sums [[] [6 9 4] [] [1] [4]]) -> [0 19 0 1 4]", "(sums [[] [1 8 7 7] [] [2 3 9 6 0] [2 3 2 1 1]]) -> [0 23 0 20 9]", "(sums [[3 0]]) -> [3]", "(sums [[2 2 1] [2 2] [0 7] [] [2 7 6]]) -> [5 4 7 0 15]", "(sums [[0 7 4 8 3] [0 3 9 9] [2]]) -> [22 21 2]", "(sums [[] [3 1 3] [] [8 4 9 1] [8 7 5 3 5]]) -> [0 7 0 22 28]", "(sums [[6 9 7 7 6] [9 0 1] [9 8 1 3] [9]]) -> [35 10 21 9]", "(sums [[] [7 9 3 2 8]]) -> [0 29]", "(sums [[9 6 7 2] [7 8 7 7] [1]]) -> [24 29 1]", "(sums [[7 0] [7 1 6] [1 8 5 6 3]]) -> [7 14 23]", "(sums [[3] [1 3 1] [] [4 5 2] [8 1]]) -> [3 5 0 11 9]", "(sums [[]]) -> [0]", "(sums [[4 5 3 4 1] [3 4 4] [0] [1 9] [7]]) -> [17 11 0 10 7]", "(sums []) -> []", "(sums [[1] [3] [] [] [5]]) -> [1 3 0 0 5]", "(sums [[7 0 0 9 9]]) -> [25]", "(sums []) -> []", "(sums [[] [] [1 0 2 0 5]]) -> [0 0 8]", "(sums [[9 0] [2] [0 5 2 5 3] [0 7 5 6] [2]]) -> [9 2 15 18 2]", "(sums [[9 8 8 0 7] [] [6 5 2]]) -> [32 0 13]", "(sums [[] [3] []]) -> [0 3 0]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[8 5] [7] [1 0 6 3]]) -> [13 7 10]", "(sums [[2 8] [3 6] [2 1 7 5] [6 3] [5 6]]) -> [10 9 15 9 11]", "(sums [[]]) -> [0]", "(sums [[6 9 2 7]]) -> [24]", "(sums []) -> []", "(sums [[1 6 0 1 9] []]) -> [17 0]", "(sums [[8 2 2 5] [1 4 7 3 5] [4 2 5 9] [9] [2 5]]) -> [17 20 20 9 7]", "(sums [[] [] [9 7] [7 9 7 1] [3 7 6 8 1]]) -> [0 0 16 24 25]", "(sums [[8 8 2 4 0] [9 5 4 6 4]]) -> [22 28]", "(sums [[3 7] [7 1 5 6] [6]]) -> [10 19 6]", "(sums [[9 3 7 6]]) -> [25]", "(sums []) -> []", "(sums [[] [1 8 1]]) -> [0 10]", "(sums [[4 4 3 7] [3 0 3] [2 9 5]]) -> [18 6 16]", "(sums [[9 1 7 6 4] [0 2 8 6] [] [2 9 0] [1 0 5]]) -> [27 16 0 11 6]", "(sums [[2 9] [8 3 9] [5 3] [9 1 2 6 0] [7 7 4]]) -> [11 20 8 18 18]", "(sums [[6] [1 1 5]]) -> [6 7]", "(sums [[] [2 7 9 7 4] [9] [9 1]]) -> [0 29 9 10]", "(sums [[8 8 8] [2 0] [5 7]]) -> [24 2 12]", "(sums []) -> []"], "time": 0.683129, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[1 5 9 1 6] [] [9 5 5 7 6] [4 9] [4 6 8 6 0]]) -> [22 0 32 13 24]", "(sums [[0 4 7 3]]) -> [14]", "(sums [[9 9 4] []]) -> [22 0]", "(sums [[7 6 5 6 2] []]) -> [26 0]", "(sums []) -> []", "(sums [[2] [3 2 2 7 6] [7 1 0] [7]]) -> [2 20 8 7]", "(sums [[] [0 1 4 7] []]) -> [0 12 0]", "(sums [[] [2 1 6 5] []]) -> [0 14 0]", "(sums [[5 4 5 6] [3 7 4]]) -> [20 14]", "(sums [[] [3 7 1 4] [3 6 3 0] [0 1 1 0]]) -> [0 15 12 2]", "(sums [[1] [0 8 3] [7 4]]) -> [1 11 11]", "(sums [[6 3 2 0 5] [5] [0 3 6 9] [7 7 0]]) -> [16 5 18 14]", "(sums [[1 6 7 4 0] [0 7 6] [0 2 7] [8]]) -> [18 13 9 8]", "(sums []) -> []", "(sums [[6 2 0 7] [0]]) -> [15 0]", "(sums [[7 3] [6]]) -> [10 6]", "(sums [[2 4]]) -> [6]", "(sums [[6 4 8 0] [3 6]]) -> [18 9]", "(sums [[6 6]]) -> [12]", "(sums [[] [7] [6] [0 9] [2 0]]) -> [0 7 6 9 2]", "(sums [[9 2 0] []]) -> [11 0]", "(sums [[6 7 9] [6 4 8] [2 1] [8 5 8] []]) -> [22 18 3 21 0]", "(sums [[]]) -> [0]", "(sums [[2 4 9 0 3] []]) -> [18 0]", "(sums [[3] [4 1 1]]) -> [3 6]", "(sums [[3 4 2 3 2] [9] [1]]) -> [14 9 1]", "(sums [[8]]) -> [8]", "(sums [[9 8] [0 9] [0 4 0 4] [3 7]]) -> [17 9 8 10]", "(sums [[5 9] [] [9 4 9 4] [7 3 3 5]]) -> [14 0 26 18]", "(sums [[5 2 9 5] [4 2]]) -> [21 6]", "(sums [[3 5 9 5 7] [4 2 1] [0 0 0 1]]) -> [29 7 1]", "(sums [[7 1 4 6] [2 7 4 9] [7 5 0 1] [4 2]]) -> [18 22 13 6]", "(sums [[9 3 5 1] [9 4 2 0 4] [5]]) -> [18 19 5]", "(sums [[] [0 5 7] [6 0 9 5 8] [3] []]) -> [0 12 28 3 0]", "(sums []) -> []", "(sums [[3 0 0 7] [2 7] [7]]) -> [10 9 7]", "(sums [[] [] [6] [4 7] [6 5 2]]) -> [0 0 6 11 13]", "(sums [[]]) -> [0]", "(sums [[6 4 7] [0 0 9 4]]) -> [17 13]", "(sums [[4 2 8 2] [0 0 6] [] []]) -> [16 6 0 0]", "(sums [[3 0] [9] [] [2]]) -> [3 9 0 2]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 6 3] [9 9 8 2] [3] [3 6 5 2] [6 6 4 0]]) -> [15 28 3 16 16]", "(sums [[] [1]]) -> [0 1]", "(sums [[2] [9 4]]) -> [2 13]", "(sums [[8 6] [0 7 8] [1 0 3 4]]) -> [14 15 8]"], "time": 0.69265, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[5 2 0] [2 5] []]) -> [7 7 0]", "(sums [[2] [0 0] [9] []]) -> [2 0 9 0]", "(sums []) -> []", "(sums [[5 6] [3 8]]) -> [11 11]", "(sums [[] [4 6 4] [] [3]]) -> [0 14 0 3]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [1 2 5 6 6] [9 5] [] [3 9 8 6]]) -> [0 20 14 0 26]", "(sums [[6 4 4] [9 1 9 8] [8 7 7 8 6] [7 5]]) -> [14 27 36 12]", "(sums [[5 8 0]]) -> [13]", "(sums [[8 2 0 8] [2 8] [0 3 3] [5 1 8 0]]) -> [18 10 6 14]", "(sums [[8 9 0 7 5] [6 1 5] [7 6] [8 8] [2 8 5]]) -> [29 12 13 16 15]", "(sums [[7 1]]) -> [8]", "(sums [[] [] [6 2 0] [5 9 7 5 1] [4]]) -> [0 0 8 27 4]", "(sums [[3 7] [] []]) -> [10 0 0]", "(sums [[6 8 1 5]]) -> [20]", "(sums [[6 0] [6 5]]) -> [6 11]", "(sums [[9] [] [5 3 7 6] [8 0] [3 9 1 1 7]]) -> [9 0 21 8 21]", "(sums [[] [6 3 0 4 8] [7 5 8 9] [0 9]]) -> [0 21 29 9]", "(sums [[] [0] [4 9 1] [3 3]]) -> [0 0 14 6]", "(sums [[7 1 3]]) -> [11]", "(sums [[3 7] [5 6 6 0] [8 4 1] [3 6 1 5 3]]) -> [10 17 13 18]", "(sums [[1] [2 1 6 7] [0 0 7 5] [3 6 6 3 3] [3 7]]) -> [1 16 12 21 10]", "(sums [[6 7 8 0] [7] [4 8] [8 1]]) -> [21 7 12 9]", "(sums []) -> []", "(sums [[7 1 7 5] [7 1 4 8] [4 9 9] [7 0 2 0] [4 4]]) -> [20 20 22 9 8]", "(sums [[] [9] [8 1 2]]) -> [0 9 11]", "(sums [[8 6] [8 6 3] [8 6 6 2] [6 4 8 4] [6 0 3 5]]) -> [14 17 22 22 14]", "(sums [[8 3 2 4 1] [1 1] [0 8 8 5 2]]) -> [18 2 23]", "(sums [[3 1] [3] [3 7] [1 6 8] [8 5]]) -> [4 3 10 15 13]", "(sums []) -> []", "(sums [[1] [2 4 9] [2 8 9 5 4] [0 5 5 1 8] [1]]) -> [1 15 28 19 1]", "(sums [[9] [0] [3 2]]) -> [9 0 5]", "(sums [[] [] [] [6] [2 3]]) -> [0 0 0 6 5]", "(sums [[5] [3 0 3 3] [8 9 4 3] [1 6 3 8] [1]]) -> [5 9 24 18 1]", "(sums [[3 4] [2]]) -> [7 2]", "(sums [[7 5 0 2 2] [5 9 9 3] [2 6]]) -> [16 26 8]", "(sums [[6 7] [2 2 4 0] [5 4] [3 4 6]]) -> [13 8 9 13]", "(sums []) -> []", "(sums [[6 3] [3 8 3] [6 2] [1 6]]) -> [9 14 8 7]", "(sums []) -> []", "(sums [[4]]) -> [4]", "(sums [[5 9 7 4 0] [] [1 5 5 2] [3] [1 9 0]]) -> [25 0 13 3 10]", "(sums [[2 4 2 5] [0]]) -> [13 0]", "(sums [[9 9] [8 8 2 9] [5 9] [8 5 9] [2]]) -> [18 27 14 22 2]", "(sums [[6 4] [] [1 1 2 8 7] []]) -> [10 0 19 0]", "(sums []) -> []"], "time": 0.702695, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7]]) -> [7]", "(sums [[7] [] [2 9 7 7 1] []]) -> [7 0 26 0]", "(sums [[] [1]]) -> [0 1]", "(sums [[6 2] [2 7 9 2 3] [1 2 8 7 7] [0 4 2]]) -> [8 23 25 6]", "(sums [[] [1 5 7 2 2]]) -> [0 17]", "(sums [[2 8] [0 2 1 3 1] [8 2] [] [0 4 0 2]]) -> [10 7 10 0 6]", "(sums [[5 3 5 2 2] [8] [4 2] [6 4 3 4 3] [7 2 5 1 2]]) -> [17 8 6 20 17]", "(sums [[] [1 6 1 0] [3 4 3 6 4] [4 3]]) -> [0 8 20 7]", "(sums [[3 7 0 6] [] [7]]) -> [16 0 7]", "(sums [[1 5 9 5 3] [5 8] [7 4 9 7]]) -> [23 13 27]", "(sums [[6 3 4 6] [5 4 2 6 5] []]) -> [19 22 0]", "(sums [[8 8 4 4 8] [7] [] []]) -> [32 7 0 0]", "(sums [[6 1 2 6] [8 9 2 2 2]]) -> [15 23]", "(sums [[3] [9 6 5 8 3] [] [0 5 3 6] [9 2 0]]) -> [3 31 0 14 11]", "(sums []) -> []", "(sums [[2 4 9 3 6] [] [9]]) -> [24 0 9]", "(sums []) -> []", "(sums []) -> []", "(sums [[8 3 3 3] [1 6 4 0 6]]) -> [17 17]", "(sums [[] [2 7 2]]) -> [0 11]", "(sums [[] [4 5 5 5 6] [6] [1 3 3]]) -> [0 25 6 7]", "(sums []) -> []", "(sums [[1 1 6 3 8]]) -> [19]", "(sums [[] [6 9 5]]) -> [0 20]", "(sums []) -> []", "(sums [[3 4] [5 2 7 1] [6 5 4 5 3] [5] [6]]) -> [7 15 23 5 6]", "(sums [[7 9 0 2 8] [] [7 7 2 9 5] [7 6 8]]) -> [26 0 30 21]", "(sums []) -> []", "(sums [[2 5] [7 1 5 4 8] [7]]) -> [7 25 7]", "(sums [[1] [8 2]]) -> [1 10]", "(sums [[1] [0 0 7 2 8]]) -> [1 17]", "(sums [[2] [4 3 9 7] [6 7 6 7] [6 5 9 0] []]) -> [2 23 26 20 0]", "(sums [[] [5 9 6 2] [] [2]]) -> [0 22 0 2]", "(sums []) -> []", "(sums [[7 5 3]]) -> [15]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 8 3] [4 5 8] [0 7 5 0 3] [9 5 7] [2 1 0 7 0]]) -> [13 17 15 21 10]", "(sums [[7 8 4] [3 1 0] [2 9] [8 7 4 3] [1 2 1 7 5]]) -> [19 4 11 22 16]", "(sums [[3 5] [7 0 9] [] [7] [2 1]]) -> [8 16 0 7 3]", "(sums [[5 9 1 8 7] [2 2 2 0] [6 8 9 1 7] [2 6] [7 8 8 7 7]]) -> [30 6 31 8 37]", "(sums [[6] [2] [] [] []]) -> [6 2 0 0 0]", "(sums [[3 9]]) -> [12]", "(sums [[2]]) -> [2]", "(sums [[0 1 0] [7 9 5]]) -> [1 21]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums []) -> []"], "time": 0.644769, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[9 8] [7 3] [9 3 6 6 2] [2 1 2 7]]) -> [17 10 26 12]", "(sums [[7 8]]) -> [15]", "(sums [[5 7] [7 1] [8 3 3] [] [4 4]]) -> [12 8 14 0 8]", "(sums [[7 4] [6 0 7 3 5] [8 9 5 9 5] []]) -> [11 21 36 0]", "(sums [[8 3 7] [3 7 1 6 1] [0 5 8 0] [2 7 5] [3 1]]) -> [18 18 13 14 4]", "(sums []) -> []", "(sums [[8 1]]) -> [9]", "(sums [[2] [3 0 6 2] [8 6] [2 2 0 4 8]]) -> [2 11 14 16]", "(sums []) -> []", "(sums [[3 1 1] [4 6 9 7] [4 7 3]]) -> [5 26 14]", "(sums [[5]]) -> [5]", "(sums [[1]]) -> [1]", "(sums []) -> []", "(sums [[] [5 3 0 5] [8 5 5] [1 3]]) -> [0 13 18 4]", "(sums [[9 5 5] [5 9 0]]) -> [19 14]", "(sums []) -> []", "(sums [[2 2 5 9 0] [2 3 6] [8 4 1 8] [] [7 5 5 8 8]]) -> [18 11 21 0 33]", "(sums [[9 7 2 5 6] [5] [1 0 7 5] [6 8]]) -> [29 5 13 14]", "(sums [[7]]) -> [7]", "(sums [[0 6] [9 7 5 5] [3 7 8 6]]) -> [6 26 24]", "(sums [[9] [6 5 0 2 2] [5 3 9]]) -> [9 15 17]", "(sums [[1 8 2 7] [0 0 5] [4 5] [4 3 6 7] [4 0]]) -> [18 5 9 20 4]", "(sums [[5 8 5] [] [0 3 7] [5 8 8]]) -> [18 0 10 21]", "(sums [[2 3 2 2] [9] [6] [4 8 1 6 6]]) -> [9 9 6 25]", "(sums [[8 1 2 9] [] [] [9] [4]]) -> [20 0 0 9 4]", "(sums [[2 0] [5 3 8 3 0] [1 9 0 7 1]]) -> [2 19 18]", "(sums [[1 9] [9 2 9] [3] [1] [7 2]]) -> [10 20 3 1 9]", "(sums [[8] [7 0] [8] [8] [4 2 5 8]]) -> [8 7 8 8 19]", "(sums [[8 7]]) -> [15]", "(sums []) -> []", "(sums [[0 5 6 3] []]) -> [14 0]", "(sums [[5 3] [] [3 3 3 0] [3 1 0]]) -> [8 0 9 4]", "(sums [[9 4 9 8] [7]]) -> [30 7]", "(sums [[] [2 8]]) -> [0 10]", "(sums [[5 7] [2 8]]) -> [12 10]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[6 0 4]]) -> [10]", "(sums [[8 5 2] [3 3 1 5 8] [1] [3] [6 6]]) -> [15 20 1 3 12]", "(sums []) -> []", "(sums [[0 3 5 8] [8 5 1 4 6] [8] [0 9]]) -> [16 24 8 9]", "(sums [[4 3 9] [3 1 0 2] [4 6] [1 3 1] [2 2 6]]) -> [16 6 10 5 10]", "(sums []) -> []", "(sums []) -> []", "(sums [[4] [5 3 4 5 0]]) -> [4 17]", "(sums [[6 6 4 7 3] [9 9 9 0]]) -> [26 27]"], "time": 0.675679, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[8 1 3 8] [6 8 8 0] [1] [7 4 4 7]]) -> [20 22 1 22]", "(sums []) -> []", "(sums [[] [3 7 8 8 5] [9 2 1 2 5] [] [8 8 2 4 3]]) -> [0 31 19 0 25]", "(sums [[7 2] [7 0 2] [9 2 0 4 0]]) -> [9 9 15]", "(sums [[8] [] [8 0] [] [6 2 9 6]]) -> [8 0 8 0 23]", "(sums []) -> []", "(sums [[7 2] []]) -> [9 0]", "(sums [[1 7 2 1 1] [8 9 3 2] [7 6 8 8 2]]) -> [12 22 31]", "(sums [[3 3]]) -> [6]", "(sums [[0 3 0 2 5] [0 1 9 7 0] [7 7]]) -> [10 17 14]", "(sums [[0 1 7 5 2] [4 7 2] [1 4] [5] [1 7]]) -> [15 13 5 5 8]", "(sums [[1 2] []]) -> [3 0]", "(sums [[1 3 2] [7 0 8 4] []]) -> [6 19 0]", "(sums [[] [0 0 5 4] [0] [4 7 7 1 4] [2 4]]) -> [0 9 0 23 6]", "(sums [[2]]) -> [2]", "(sums [[0 2 3] [0 7 5]]) -> [5 12]", "(sums [[6] [6 0 3 8 3] [7 7] [6 1 2 2] []]) -> [6 20 14 11 0]", "(sums [[] [0 4 3 1] [0] [5 3 7 2 4] [7 0 4 9]]) -> [0 8 0 21 20]", "(sums []) -> []", "(sums [[8 8 1 1] [] []]) -> [18 0 0]", "(sums [[6 8 2 2]]) -> [18]", "(sums [[0 9] [5 5] [2 4] [] [6]]) -> [9 10 6 0 6]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[8 0 1 9 1] [] [3]]) -> [19 0 3]", "(sums []) -> []", "(sums [[6 2] [9 9 9] [1 6 6 6 6] [] [5 0 3]]) -> [8 27 25 0 8]", "(sums [[1] [1 1 7 3]]) -> [1 12]", "(sums [[4]]) -> [4]", "(sums [[5 5 4] [1] [1 4 9] [5 5 6 6] []]) -> [14 1 14 22 0]", "(sums [[7 5] [5 0 2 1] [1 1 2 3] [] []]) -> [12 8 7 0 0]", "(sums [[3 7 5 4] [9 5 3 4]]) -> [19 21]", "(sums [[9 2 4 0 7] [6 4] [1 9 6] [3 5] [5]]) -> [22 10 16 8 5]", "(sums [[8 2 1 2] [8 4]]) -> [13 12]", "(sums []) -> []", "(sums [[0 3 1] [5 1 6 3 3] []]) -> [4 18 0]", "(sums [[2 2 4] [1 0 8 0] [] [] [5 5]]) -> [8 9 0 0 10]", "(sums [[8 6 6] [2 4] [8] [0]]) -> [20 6 8 0]", "(sums [[4 4] [6] [9 4 8]]) -> [8 6 21]", "(sums [[6] [1]]) -> [6 1]", "(sums [[] [] [5]]) -> [0 0 5]", "(sums [[] [3 8 7 0 8]]) -> [0 26]", "(sums [[] [1] [4 4 7]]) -> [0 1 15]", "(sums [[7 1]]) -> [8]", "(sums [[6]]) -> [6]", "(sums []) -> []"], "time": 0.701434, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 8 1 1 4] [7 8 9 8] [6 1 4 6 5] [] [3 8 9]]) -> [14 32 22 0 20]", "(sums [[2 1 5] [2]]) -> [8 2]", "(sums []) -> []", "(sums [[0] [] [7 4 7 2] [4]]) -> [0 0 20 4]", "(sums [[] [] [3 8 4] [] [7 8 2]]) -> [0 0 15 0 17]", "(sums [[1 1 7 3] [6 9 8 8 8]]) -> [12 39]", "(sums []) -> []", "(sums [[4 9] [4 4 4] [8]]) -> [13 12 8]", "(sums []) -> []", "(sums []) -> []", "(sums [[4 2]]) -> [6]", "(sums [[] [1 9 3 2 4]]) -> [0 19]", "(sums []) -> []", "(sums [[8 8 5 3] [9]]) -> [24 9]", "(sums [[5 9 2] []]) -> [16 0]", "(sums []) -> []", "(sums [[0 7 6] [] [8]]) -> [13 0 8]", "(sums [[0] [6] [1]]) -> [0 6 1]", "(sums [[] [4 4 3] [8 0 3 9 1] [3 3 1 8 7] [9 0]]) -> [0 11 21 22 9]", "(sums [[4 6 7]]) -> [17]", "(sums [[8] [] [7 6] [1 9 4 1] [1 5 6]]) -> [8 0 13 15 12]", "(sums []) -> []", "(sums [[3] [9 5 2 3 7]]) -> [3 26]", "(sums [[4 1] [8 4] [9 1 1 7 8] [1 4 1 8 4] [3 6 1 1]]) -> [5 12 26 18 11]", "(sums [[6 7 0 7] [] [] [2 6 6 0]]) -> [20 0 0 14]", "(sums []) -> []", "(sums [[6] [8] [3] [7 4 5 8 4] [9 3 1]]) -> [6 8 3 28 13]", "(sums [[4 7 9 1 2] [1 0 9 5] [7 7 0 9 7] [6 3 3]]) -> [23 15 30 12]", "(sums [[3] [3 2] [2 0] [4 0 9] [9]]) -> [3 5 2 13 9]", "(sums [[2 8 6] [] [8 1 2] [6 9 9]]) -> [16 0 11 24]", "(sums [[1] [] [1 0 0] [9]]) -> [1 0 1 9]", "(sums [[] [] [9 3 2 2 7] [0 8 3]]) -> [0 0 23 11]", "(sums [[3 9 0]]) -> [12]", "(sums [[0] [2 8]]) -> [0 10]", "(sums [[] [3 2 4]]) -> [0 9]", "(sums [[9 4 5] [8 0]]) -> [18 8]", "(sums [[5 9] []]) -> [14 0]", "(sums [[5] [9 4] [0 9] [1 5 1] []]) -> [5 13 9 7 0]", "(sums [[2 2 6 5 1] [2] [3] [] [0 2 2 8]]) -> [16 2 3 0 12]", "(sums [[0 4 2 2 5] [4 7] [3] [6 8 2 4]]) -> [13 11 3 20]", "(sums [[7 6 4 2] [4 3 3 1 8]]) -> [19 19]", "(sums [[9 0 4 9 2] [] [] [8 8 2 1 2]]) -> [24 0 0 21]", "(sums [[4 0 7 3 6] [9 9]]) -> [20 18]", "(sums [[0 0 6 0]]) -> [6]", "(sums []) -> []", "(sums [[2 0 9] [0 1] [4 5 9 2 0] [9 4] [4]]) -> [11 1 20 13 4]", "(sums [[5 9] [7 8 2 2 9] [0]]) -> [14 28 0]", "(sums [[4 8 0] [8]]) -> [12 8]"], "time": 0.714491, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[3 5 1 7] [2 4 1] [2 7 4 0 9] [6 5 8 1 7] [6 2]]) -> [16 7 22 27 8]", "(sums [[1] [] [3 5 3] [0 5 2 9 9]]) -> [1 0 11 25]", "(sums [[3 9 1]]) -> [13]", "(sums []) -> []", "(sums [[7 8 1] []]) -> [16 0]", "(sums [[7 5 0 5 9] [0 3 7 2] [9 4 1 8] [7 6 9]]) -> [26 12 22 22]", "(sums [[0 1] [4 2 8 2] [8] [] []]) -> [1 16 8 0 0]", "(sums [[1 3 2] [] [6] [5 3 3]]) -> [6 0 6 11]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 9 0 3 7] [8 1] [2 7 8] []]) -> [28 9 17 0]", "(sums [[4 6 0 7 2] [4] [5] [5 0 0 4]]) -> [19 4 5 9]", "(sums [[4 7 4 6] [9 8] [8 8 5 6]]) -> [21 17 27]", "(sums [[4 0]]) -> [4]", "(sums [[6 3 8] [4 7 6] [5 1 3 0 4] [7 0 6 5 1]]) -> [17 17 13 19]", "(sums [[4 9] [7 3] [8 0 0]]) -> [13 10 8]", "(sums [[0 3 7 5 1] [] [1] [1 9 3 9]]) -> [16 0 1 22]", "(sums [[7 3 3] [8 3 5] [2 6 2 6 1]]) -> [13 16 17]", "(sums [[0 4 6 3 4]]) -> [17]", "(sums [[1 3 6 8] [] [4 2 5] [1 1]]) -> [18 0 11 2]", "(sums [[6 7]]) -> [13]", "(sums [[] [1 4 5 2 1]]) -> [0 13]", "(sums [[4]]) -> [4]", "(sums [[] [1 1 2 2] [0 4 3] [9 5 7] [0 0 4 1]]) -> [0 6 7 21 5]", "(sums [[7 4 0] [0] [6 2 3 9] [0 4 3 6]]) -> [11 0 20 13]", "(sums [[8] []]) -> [8 0]", "(sums [[2] [] [0 6 6 9 3] [8 0 8 1]]) -> [2 0 24 17]", "(sums [[] [1 9 0 1 1] [5]]) -> [0 12 5]", "(sums [[3 5 8] [5 3 7 2] [4]]) -> [16 17 4]", "(sums [[5 5 6 6 0] [7 0 1 4 6]]) -> [22 18]", "(sums [[9 8 2 0] [0 9] [7] [6] []]) -> [19 9 7 6 0]", "(sums [[4 1] [9 9 7 5] [0 4 5 8] [0 4 0] [7]]) -> [5 30 17 4 7]", "(sums [[4 3 9 2 8]]) -> [26]", "(sums [[] [9 3 4 1]]) -> [0 17]", "(sums [[7] []]) -> [7 0]", "(sums [[1 7 4 3 1] [4]]) -> [16 4]", "(sums []) -> []", "(sums [[4 9 9 3] [5 6]]) -> [25 11]", "(sums [[6 4]]) -> [10]", "(sums [[4 6] [4 8 4 1 0] [1 3 9 8 4] []]) -> [10 17 25 0]", "(sums [[] [4 8 3]]) -> [0 15]", "(sums [[2]]) -> [2]", "(sums [[0 6] [0 1 9 3 0]]) -> [6 13]", "(sums [[0 3 9 3 6]]) -> [21]", "(sums [[8 1 9 2]]) -> [20]", "(sums []) -> []", "(sums [[4 2 0 2] [0 7 2 9 9] [2 8 9] [0 7 6] []]) -> [8 27 19 13 0]"], "time": 0.711447, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 3 5 1] [6 9 1] [6 6 8 6] [7 2] [3 1 3 9 7]]) -> [14 16 26 9 23]", "(sums [[3 5 3]]) -> [11]", "(sums [[4 7 2 4 6] [5 9 7] [1 8 4] [0 5] [2 3]]) -> [23 21 13 5 5]", "(sums [[9]]) -> [9]", "(sums [[7 1 9 5] [5 3 1 6] [] [0 5 2]]) -> [22 15 0 7]", "(sums []) -> []", "(sums [[4]]) -> [4]", "(sums [[7 6 5 2] [5 3 1 3 6] [0 4 9 3] [2]]) -> [20 18 16 2]", "(sums [[4 2] [7 8 6 7] [] [0 4 9 7]]) -> [6 28 0 20]", "(sums [[9] [6] [2 8 5 1] [1 4 7 0] [1 8 5 9 2]]) -> [9 6 16 12 25]", "(sums []) -> []", "(sums [[3] [] [3 1 4] [] [3 0]]) -> [3 0 8 0 3]", "(sums [[3] [2 4] [3 8 2 7 0] [] [1 5 5]]) -> [3 6 20 0 11]", "(sums []) -> []", "(sums [[1] [8 8] [4 1] [8 9] [1 4 1]]) -> [1 16 5 17 6]", "(sums [[8 9 7 0 2] [7 2 8 3 0]]) -> [26 20]", "(sums [[] [] [8 1 5 2 4]]) -> [0 0 20]", "(sums [[7 4 4] [0] [5 3 5 3] [0 8 9 7]]) -> [15 0 16 24]", "(sums [[0 4 5 8] [9 5] [] []]) -> [17 14 0 0]", "(sums [[7 3 6] []]) -> [16 0]", "(sums [[5 1 9 0 2] [] [9] []]) -> [17 0 9 0]", "(sums [[4 8 1] [8 2] [1 6] [0 3] [8 6 1 4 2]]) -> [13 10 7 3 21]", "(sums [[9 7] [8 4] [7 5 8 3 9]]) -> [16 12 32]", "(sums [[4 6 4 4] [1 0 0 7 3] [9 6]]) -> [18 11 15]", "(sums [[1 1 3 9 9] []]) -> [23 0]", "(sums [[2 9] [9 4 3] [] [3]]) -> [11 16 0 3]", "(sums [[2 9 1 3 3] [0 3 0 1 5] [7 0 0]]) -> [18 9 7]", "(sums [[6 1] [4 0 4] [6 4 2 0 0] [6]]) -> [7 8 12 6]", "(sums [[7 6 5 6] [9 8 2 2] [] [0 0 3 8] [6 9 4]]) -> [24 21 0 11 19]", "(sums [[] [7] [7 4 8 8] [3 6 9] [5]]) -> [0 7 27 18 5]", "(sums [[2 8 7 8] [9 0 8 8 0] [] [5 0 0 6] [4 8]]) -> [25 25 0 11 12]", "(sums [[4]]) -> [4]", "(sums [[9 8 5 6 5]]) -> [33]", "(sums [[4 0 4 8] [8 0 7]]) -> [16 15]", "(sums []) -> []", "(sums [[6 5] [1]]) -> [11 1]", "(sums []) -> []", "(sums [[1 1 7 0 4] [6 9 2 1 6] [2 4] [9 4 2]]) -> [13 24 6 15]", "(sums [[3 9 0 8] [3 7 9] [] []]) -> [20 19 0 0]", "(sums [[5] [8 5]]) -> [5 13]", "(sums []) -> []", "(sums [[2 1]]) -> [3]", "(sums [[0 8 9 2 8]]) -> [27]", "(sums [[] [0 8 9 1 1] [7] [5 6 2 6 1]]) -> [0 19 7 20]", "(sums [[5]]) -> [5]", "(sums [[6 1 9 7] [2 3 4]]) -> [23 9]", "(sums [[6 6 4 9] [] [3 8] [6]]) -> [25 0 11 6]", "(sums [[9] [8 9 6 0] [] [7 7 3 5 6]]) -> [9 23 0 28]"], "time": 0.72363, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[6 2 2 5 6] [7] [2 5] [4 7 5 8]]) -> [21 7 7 24]", "(sums [[]]) -> [0]", "(sums [[4 0 7 0 6] [] [3 3 7 3 4] [8] [4]]) -> [17 0 20 8 4]", "(sums [[]]) -> [0]", "(sums [[1 7] [4 3 5 2] [8] [8 1 2 1 0]]) -> [8 14 8 12]", "(sums [[1 0 8]]) -> [9]", "(sums [[2 1 9 2 1] [] [8 2 3 7] [3 7 4 3 9]]) -> [15 0 20 26]", "(sums [[1 0 2 5] [1] [7 0 0] [6 3 2]]) -> [8 1 7 11]", "(sums [[9 6 5 6 4] [0 6 5] [6 1] [] [6 6 2 9]]) -> [30 11 7 0 23]", "(sums [[4] [8 9 3 8] [4]]) -> [4 28 4]", "(sums [[5 4]]) -> [9]", "(sums [[2 0 9 8 3] [] [8 1 3] [6 4 6 9 1] [9]]) -> [22 0 12 26 9]", "(sums [[3 2] [5 2 5 9 6] [6] [3 8 1 3 0] [8 9 4 3]]) -> [5 27 6 15 24]", "(sums [[9 3 0 2] [] [] [6 0]]) -> [14 0 0 6]", "(sums [[5 5] [6] [2 0 4 6] [9 7 7]]) -> [10 6 12 23]", "(sums [[0 7 7] [2 2 7 7] [6 1 2]]) -> [14 18 9]", "(sums [[9 9] []]) -> [18 0]", "(sums [[] [9 6]]) -> [0 15]", "(sums [[8] [4 7 1 8] [8 1 9 8 5] [0 2 6] [8 6 5 3 9]]) -> [8 20 31 8 31]", "(sums []) -> []", "(sums [[2 3]]) -> [5]", "(sums [[]]) -> [0]", "(sums [[4]]) -> [4]", "(sums [[2 5 9 4] [1 0 2 0 2] [4 3 8] [4 4 9 9 2]]) -> [20 5 15 28]", "(sums [[1] [0 0] [1 8 4]]) -> [1 0 13]", "(sums [[7] [8 7] [3] [7 7]]) -> [7 15 3 14]", "(sums []) -> []", "(sums [[1] []]) -> [1 0]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[0 0 8]]) -> [8]", "(sums [[4 5 5] [6 0 6 7]]) -> [14 19]", "(sums [[4] [0 2]]) -> [4 2]", "(sums [[5 5 4 2 7] []]) -> [23 0]", "(sums [[5 6 4]]) -> [15]", "(sums [[9 6 3 6 8] [9 8]]) -> [32 17]", "(sums [[0 4 1 4] [0 6]]) -> [9 6]", "(sums [[2 0 1 7]]) -> [10]", "(sums [[8] [1] [7 5 6 7 8] [0]]) -> [8 1 33 0]", "(sums []) -> []", "(sums [[8 9] [3 4 0 7 0]]) -> [17 14]", "(sums [[] [7 9] [4 9 9] [3 1]]) -> [0 16 22 4]", "(sums []) -> []", "(sums [[5 2 0] [7 9] [1 4 7] [1 2] [7 6 5 6]]) -> [7 16 12 3 24]", "(sums [[] [] [4] [] [5 4 4]]) -> [0 0 4 0 13]", "(sums [[5 3 3] [7]]) -> [11 7]", "(sums [[0 8 7]]) -> [15]", "(sums [[4 4 0] []]) -> [8 0]"], "time": 0.54478, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 1]]) -> [8]", "(sums [[3 1 2 0] [9] [4 1]]) -> [6 9 5]", "(sums [[0 9 7 7 1] [6] [2 8]]) -> [24 6 10]", "(sums [[3 8] [1] [7 5 1 9 4]]) -> [11 1 26]", "(sums [[3 4 2 7] [3 9 3 3] [8 8 9 5 8] [3 0 0] []]) -> [16 18 38 3 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [4 5] [0 7 2 5] [5 8 9 6] [7 3 7 1]]) -> [0 9 14 28 18]", "(sums [[5 6 3 6 3] [7 6 7 2]]) -> [23 22]", "(sums [[] [] [3 5 8 2] [4 3] []]) -> [0 0 18 7 0]", "(sums [[3] [7 5] [] []]) -> [3 12 0 0]", "(sums [[7 5 8 3 4] [6 2 4 5 0]]) -> [27 17]", "(sums [[1 3]]) -> [4]", "(sums [[8 4 7] [7 1 5 0] [9 0 8] [7 1 4 0 6]]) -> [19 13 17 18]", "(sums []) -> []", "(sums [[6 7] [6 7 0] [4] [] [6 7]]) -> [13 13 4 0 13]", "(sums [[8 1 8]]) -> [17]", "(sums [[2 7] [1 9 2 7 9]]) -> [9 28]", "(sums [[1 0] [3 7 2 5 1] [6 0 8 2] [4] [4 2 8 2 4]]) -> [1 18 16 4 20]", "(sums [[] [9] []]) -> [0 9 0]", "(sums [[]]) -> [0]", "(sums [[7 3 8 1 2]]) -> [21]", "(sums []) -> []", "(sums [[8 5 0 0 3] [] [0 7 3 0] [] []]) -> [16 0 10 0 0]", "(sums [[9] [0 4 5 8]]) -> [9 17]", "(sums [[0 7 2 3]]) -> [12]", "(sums []) -> []", "(sums [[6 3 9 8 9] [] [8 8 4]]) -> [35 0 20]", "(sums [[0 0 3 8] [5] []]) -> [11 5 0]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[3 2 4 7] [3] [7]]) -> [16 3 7]", "(sums [[2] [0 3 8 6 2] [6 9 3 7] [7 6 2 2]]) -> [2 19 25 17]", "(sums [[2 2] [5 1 7 7] [5 9] [1 7 4 6 3] [4 7 4 7]]) -> [4 20 14 21 22]", "(sums [[8] [3 8 3 0] [0 4 9] [3 3 1]]) -> [8 14 13 7]", "(sums [[4 0 5 5 7] [6 3] []]) -> [21 9 0]", "(sums [[2 1] [4 9 1] [7]]) -> [3 14 7]", "(sums [[]]) -> [0]", "(sums [[] [5 7] [7]]) -> [0 12 7]", "(sums [[1] [9 7] [1 3 3 4]]) -> [1 16 11]", "(sums [[6 4 0 7]]) -> [17]", "(sums [[6 9 8]]) -> [23]", "(sums [[1 9 6 9 2] [1 0 3]]) -> [27 4]", "(sums [[3 4 3 8] [7] []]) -> [18 7 0]", "(sums []) -> []", "(sums [[7 2 7]]) -> [16]", "(sums [[1 1 3 6] [8 1 2]]) -> [11 11]"], "time": 0.530335, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 7] [7 8] [] [6]]) -> [14 15 0 6]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[3] [] [3 4 3] [1 3 8 7 9]]) -> [3 0 10 28]", "(sums [[3 0] [3 9 5]]) -> [3 17]", "(sums [[0 9 3 5] [] [] [4 0 7 8]]) -> [17 0 0 19]", "(sums []) -> []", "(sums [[5 5] [] [3] [7 5 9 7] [6 5 3 5]]) -> [10 0 3 28 19]", "(sums [[3 6 5 3 5]]) -> [22]", "(sums [[9 1 1 8]]) -> [19]", "(sums [[4 3 6 0] [2 3] [1 8 9 0 7] [3 8] []]) -> [13 5 25 11 0]", "(sums [[] [0 1 5 1 5]]) -> [0 12]", "(sums [[3] [2 1]]) -> [3 3]", "(sums [[2] [2 8] [0 6 3 8 6] [6 6 3 2]]) -> [2 10 23 17]", "(sums [[] [1 9]]) -> [0 10]", "(sums [[] [5 3 0 3] [5 6] []]) -> [0 11 11 0]", "(sums [[] [7 7 1 1]]) -> [0 16]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[9 5 7] [] [9] [8 1 0 0] []]) -> [21 0 9 9 0]", "(sums [[7 1 2 2] [6 2 1 3 7] [] [2 5 8 8 4]]) -> [12 19 0 27]", "(sums [[] []]) -> [0 0]", "(sums [[]]) -> [0]", "(sums [[1 4] [8 1 4 1]]) -> [5 14]", "(sums [[2] [2 8] [2 6] [6] [3]]) -> [2 10 8 6 3]", "(sums [[] [4 0 8 5 5] [2 1 6] []]) -> [0 22 9 0]", "(sums []) -> []", "(sums [[1]]) -> [1]", "(sums [[0]]) -> [0]", "(sums [[1] [4 8 7 6] [2 1 9 6] [2 3 7 4]]) -> [1 25 18 16]", "(sums [[] [6 6 3 4] [0 8]]) -> [0 19 8]", "(sums [[1 0 5] [0 5] [7 4] [8 8 3 3] [3 1]]) -> [6 5 11 22 4]", "(sums [[7] [6 0 3]]) -> [7 9]", "(sums [[1 1] [] [4 6 8 5 4] [7]]) -> [2 0 27 7]", "(sums [[4 5 9 0] []]) -> [18 0]", "(sums [[5] [4 3]]) -> [5 7]", "(sums [[] [4 3 6 1] [9] [] []]) -> [0 14 9 0 0]", "(sums [[9] [9 2] [1 6] [8 7 4 8 9] [6 4 2 4]]) -> [9 11 7 36 16]", "(sums [[4 0 2] [5 4]]) -> [6 9]", "(sums [[7]]) -> [7]", "(sums []) -> []", "(sums [[8] [1 6] [9]]) -> [8 7 9]", "(sums [[7 9 8] [5 3] [6] [2 6 9 0]]) -> [24 8 6 17]", "(sums [[6 8 1 4 9]]) -> [28]", "(sums [[6] [7] [2 4 3] [] [4 5 5 3 5]]) -> [6 7 9 0 22]", "(sums [[8 2 6 5]]) -> [21]"], "time": 0.587774, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 5 7 0 8] [3 4 2 7 8] [7] [9 3 0 5] [2 5 4]]) -> [20 24 7 17 11]", "(sums [[8 7] [] [2 7] [5 2 2]]) -> [15 0 9 9]", "(sums [[]]) -> [0]", "(sums [[9 9]]) -> [18]", "(sums [[7 9 8 6 8] [7 3 9 4] [0 5 3] [8 5 5 9 8] [7 1]]) -> [38 23 8 35 8]", "(sums [[3]]) -> [3]", "(sums [[9 6 4 1 0] []]) -> [20 0]", "(sums [[3 6 8 4]]) -> [21]", "(sums [[8 3 3 9] [6 0 0 0] [] [0 8]]) -> [23 6 0 8]", "(sums [[9 8] [5 7 0 6]]) -> [17 18]", "(sums [[9 7 9 5 6]]) -> [36]", "(sums [[4]]) -> [4]", "(sums [[1 4 6 7 4] [9 2 1 5] [9 3]]) -> [22 17 12]", "(sums []) -> []", "(sums []) -> []", "(sums [[1 5] [1]]) -> [6 1]", "(sums [[0 5] [6 5]]) -> [5 11]", "(sums [[] [8] [5 2 1 4]]) -> [0 8 12]", "(sums [[9 6 3] [1 2] [2 8 0 4] [2 2 7 5 6] [3]]) -> [18 3 14 22 3]", "(sums [[6 2 1 0]]) -> [9]", "(sums [[4 2 4 8 1] [8]]) -> [19 8]", "(sums [[7 1 5]]) -> [13]", "(sums [[0 7 8 8] [4 5 8] [8 8 6]]) -> [23 17 22]", "(sums [[] [8 7 4 3 7] [0 3 2] [0] [0 3]]) -> [0 29 5 0 3]", "(sums [[0 1] [9 9] [5 5] [1 9 4]]) -> [1 18 10 14]", "(sums [[] []]) -> [0 0]", "(sums [[]]) -> [0]", "(sums [[3 8 0 2] [] [6 0 8 7]]) -> [13 0 21]", "(sums [[] [1] [9 4 1] [3 4 4] []]) -> [0 1 14 11 0]", "(sums [[0] []]) -> [0 0]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[]]) -> [0]", "(sums [[4 2 0] [7 3]]) -> [6 10]", "(sums []) -> []", "(sums [[] [3 8]]) -> [0 11]", "(sums [[2 7 2] [2 9 7]]) -> [11 18]", "(sums [[4 7 0 8 7] [8]]) -> [26 8]", "(sums [[8] [] [7 4 3 4 9]]) -> [8 0 27]", "(sums [[2 4 7 2 5] [0] [0] [1]]) -> [20 0 0 1]", "(sums [[1 0 1 8]]) -> [10]", "(sums [[6 9] [5 5 7 6] [0 3 0 3] [6] [2]]) -> [15 23 6 6 2]", "(sums []) -> []", "(sums [[4 5] [1] [1 6] [5 1 4 3]]) -> [9 1 7 13]", "(sums [[6 3 1 5 9] [2]]) -> [24 2]", "(sums [[4 1 7] [2] [] [2 5 0]]) -> [12 2 0 7]", "(sums [[] [3 2 1 0 0]]) -> [0 6]", "(sums [[2 6] [2]]) -> [8 2]"], "time": 0.600586, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 5 4 0 1] [4 4 6 6]]) -> [15 20]", "(sums [[2 9]]) -> [11]", "(sums [[] [5 6 3] [6 8 8 2] [4]]) -> [0 14 24 4]", "(sums [[2 9 8 3 1]]) -> [23]", "(sums [[6] [0 7] [5 9 2 3] [5 2 2 3]]) -> [6 7 19 12]", "(sums [[0 2 8 6] [] [0 1] [0]]) -> [16 0 1 0]", "(sums [[6 8 1 7 2] []]) -> [24 0]", "(sums [[4 5 0 7]]) -> [16]", "(sums [[3 7] [8 2 7 9] [] [0 9 7 5] [3 9 4 7]]) -> [10 26 0 21 23]", "(sums [[1 7 5]]) -> [13]", "(sums [[5 9 5 8]]) -> [27]", "(sums [[] [4 9 6 0 8] []]) -> [0 27 0]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[0] [1 6 1 1 9] [5 6 3] [8 1 6] [5 3 0]]) -> [0 18 14 15 8]", "(sums [[9] [] [3 5 1 8 3] [] [8]]) -> [9 0 20 0 8]", "(sums [[0 9 1 8] [6 5 5 9]]) -> [18 25]", "(sums [[1]]) -> [1]", "(sums []) -> []", "(sums [[5 3 2] []]) -> [10 0]", "(sums [[4 1 8 3]]) -> [16]", "(sums []) -> []", "(sums [[9 4]]) -> [13]", "(sums [[4 5 7] [7 0 5] [5 1 9] [4 1 1 4 1]]) -> [16 12 15 11]", "(sums [[1 3 3 0 3] [6 1 7 8]]) -> [10 22]", "(sums [[5 0 9 9 2] [8] [8 9] [] [6 1 7 1 8]]) -> [25 8 17 0 23]", "(sums []) -> []", "(sums [[5 5 1 2 7] [4 5 3 3] [] [2 1]]) -> [20 15 0 3]", "(sums [[6 3] [7 5 7 0 8] [8] [6 2 3 5]]) -> [9 27 8 16]", "(sums [[] [0 4 8 6 5] [7 2] [1 2 1 4 1]]) -> [0 23 9 9]", "(sums [[4 2 6 5] [4 1 9 3 8] [5] [] [5 5]]) -> [17 25 5 0 10]", "(sums []) -> []", "(sums [[7] [2 7 5 0 6] []]) -> [7 20 0]", "(sums [[] [2 1 0 5 6] [4 7] [4 2 7 2 3] [9]]) -> [0 14 11 18 9]", "(sums [[8 2]]) -> [10]", "(sums [[] [6 8 2 6]]) -> [0 22]", "(sums [[4 6 3] [] [5]]) -> [13 0 5]", "(sums [[1 9] []]) -> [10 0]", "(sums []) -> []", "(sums [[7 6 5 9 7] [8 9 9] [2 1 8 3] [5] []]) -> [34 26 14 5 0]", "(sums []) -> []", "(sums [[8 1 6] [1] [5 0] [1 0 0 1]]) -> [15 1 5 2]", "(sums [[6 7 2] [4 9] [3 4 5 0] [2 2] [3 7 2 6]]) -> [15 13 12 4 18]", "(sums [[8 7] [8 7 5 8 1] [9] [7] [6 8]]) -> [15 29 9 7 14]", "(sums [[7 4 5] [9 0] [7 7 4] [3]]) -> [16 9 18 3]", "(sums [[1 2 7] [3 4 7 0] []]) -> [10 14 0]", "(sums []) -> []", "(sums [[6 0 0 2] [] [9 1]]) -> [8 0 10]"], "time": 0.531303, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[] [1 7] [0 8 7] [] [6 9 2 5 7]]) -> [0 8 15 0 29]", "(sums [[4 8 0 8 1]]) -> [21]", "(sums [[8 6] []]) -> [14 0]", "(sums [[1 3 8] [6 8 6 6 0] [5 9 7 9 6] [1] [5 1 2]]) -> [12 26 36 1 8]", "(sums [[0 8 5 9]]) -> [22]", "(sums [[7 4 4 9]]) -> [24]", "(sums [[4 7 9 0] [9 7]]) -> [20 16]", "(sums []) -> []", "(sums [[4] [3 1 1 2 2] [1 6 7 6 8]]) -> [4 9 28]", "(sums [[0 1]]) -> [1]", "(sums [[5 5 9 5 0] [1 0 1] [4 5 8 7]]) -> [24 2 24]", "(sums []) -> []", "(sums [[0 9] [9 2 7 1]]) -> [9 19]", "(sums [[7 2 1 7] [9 4 8] [] [5 9] [2 8 6 1 7]]) -> [17 21 0 14 24]", "(sums [[9]]) -> [9]", "(sums [[] [8] [2 6 5 1 6]]) -> [0 8 20]", "(sums [[9 4 3 3 5] [0 9 3] [0 2 0] [4 9 8 2]]) -> [24 12 2 23]", "(sums [[5 2 2] [7 8 2 7]]) -> [9 24]", "(sums [[1 0 7]]) -> [8]", "(sums [[5 1] [5] [] [4 6 1 5] [7 1 0]]) -> [6 5 0 16 8]", "(sums [[1 5] [] [0]]) -> [6 0 0]", "(sums [[] [6 2 1 2] [5 8 3 2 2]]) -> [0 11 20]", "(sums [[9] []]) -> [9 0]", "(sums [[2 0 6 8 6] [0 8 7 9]]) -> [22 24]", "(sums [[2 5]]) -> [7]", "(sums [[] [3 5 9] [9 8 5 6] [3]]) -> [0 17 28 3]", "(sums []) -> []", "(sums [[7 0 3 7 7] [9 3 9] [2]]) -> [24 21 2]", "(sums [[] []]) -> [0 0]", "(sums [[1 6] [] [8 1] [] [9 4 0 2]]) -> [7 0 9 0 15]", "(sums [[4] [5 9 1 4 3] [4 0 7 2 1] [3 0 2 6 6] [2 1 7 9 8]]) -> [4 22 14 17 27]", "(sums [[9 7] [] [1 6 7 1 6]]) -> [16 0 21]", "(sums [[0 5 9 9] [6 0 6] [2 0] [3 5] [9 7 2 0 4]]) -> [23 12 2 8 22]", "(sums [[6 2] [2 6] [1 7 3 1 0] [8 4 4]]) -> [8 8 12 16]", "(sums [[3 7 4]]) -> [14]", "(sums [[7 0 1 1] [9 1 7 9] [7 7 0 0 1] [1 2 5 5 3]]) -> [9 26 15 16]", "(sums [[8 1 5 7] []]) -> [21 0]", "(sums [[] [9 5] [] [4 4] [8 3 7 5 9]]) -> [0 14 0 8 32]", "(sums [[0 4 0 6] [5] [4 7 3] [8 0 9 6 6] [8 3]]) -> [10 5 14 29 11]", "(sums [[1 8 6] [5 2] [3 4 3 4 6] [3 3 1 5 5]]) -> [15 7 20 17]", "(sums [[7 7 0 6 4] [0] [3 1 9 1 3] [8 1 0 5 0] [6 8 8]]) -> [24 0 17 14 22]", "(sums []) -> []", "(sums [[] [0 1]]) -> [0 1]", "(sums [[8 4 9 5 3] [4 3]]) -> [29 7]", "(sums [[8] [8] [] [8 2 4 3 5] [5 3 8 3 4]]) -> [8 8 0 22 23]", "(sums [[1 1] [3 2 1 4] [7] [5 2]]) -> [2 10 7 7]", "(sums []) -> []"], "time": 0.547102, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[1 6 7 2] [1 8 6]]) -> [16 15]", "(sums [[0] [7 7 3 5 9]]) -> [0 31]", "(sums []) -> []", "(sums [[5 2 9] [3] [8 3 9 3] [3 2 9]]) -> [16 3 23 14]", "(sums [[3 8 0] [2 1] [4 4 3 8] [4 5 1 8 8] [2 6]]) -> [11 3 19 26 8]", "(sums [[1 1 5 6 3]]) -> [16]", "(sums [[2 2 5 0] [7 0 2] [4 5 7] [6 9] [5]]) -> [9 9 16 15 5]", "(sums [[7 0 7 2 5] [] []]) -> [21 0 0]", "(sums [[4 4 3]]) -> [11]", "(sums [[2 6] [0 6 0 5]]) -> [8 11]", "(sums [[8 7 1] [4 4 9 7] [4]]) -> [16 24 4]", "(sums [[2 9]]) -> [11]", "(sums []) -> []", "(sums [[1 8 0 8] [2 4 5 5 0] [2 5 3 7] [4 0 0 8] [8 0 4 9]]) -> [17 16 17 12 21]", "(sums [[0 5 1 1 0] [3 7 4] [4] [1]]) -> [7 14 4 1]", "(sums [[]]) -> [0]", "(sums [[8 1]]) -> [9]", "(sums [[3 9]]) -> [12]", "(sums []) -> []", "(sums [[5] [8 2 3 9] [7 1 6 8 4]]) -> [5 22 26]", "(sums [[9 5] [6 9 0 3 4] [8 9 1 8] [9 4 2 4] [3 5 3 1 9]]) -> [14 22 26 19 21]", "(sums [[3 3 4] [3]]) -> [10 3]", "(sums [[5 2 2] [] [0 1 6 0] [] [2 7 4]]) -> [9 0 7 0 13]", "(sums [[8 0 1] [2 8 0] [4 6 0]]) -> [9 10 10]", "(sums [[4] [1 8] [2 4 7 1]]) -> [4 9 14]", "(sums [[6] [5 9 5 0] [2 5] [4 1 0 3 6] [8 2 7 6 3]]) -> [6 19 7 14 26]", "(sums []) -> []", "(sums [[1 0] [3 0 0] [5 2 4 2]]) -> [1 3 13]", "(sums []) -> []", "(sums [[5 9] [5 8 8 5] [2] [9 9]]) -> [14 26 2 18]", "(sums [[1 0 0] [7 3] [3 6 1 8 4] [6 9]]) -> [1 10 22 15]", "(sums [[0 2] [6 9 7] [7 7 3 0] [1 1 4 4 3] [3 9 5]]) -> [2 22 17 13 17]", "(sums [[1 0 1 5 5] [0 4 4 1]]) -> [12 9]", "(sums []) -> []", "(sums [[2] [8] [6]]) -> [2 8 6]", "(sums [[2 4 0 3] [5 5 5 2 1] [2 4 9] [9 1 3 3 0] []]) -> [9 18 15 16 0]", "(sums [[6]]) -> [6]", "(sums [[5 9]]) -> [14]", "(sums [[5] [2 9] [3 4 6] [1 2]]) -> [5 11 13 3]", "(sums [[6 5 2] [3 8 7 8 8] [1 3 0] [7 5 7 4 4] [4 7 2 1]]) -> [13 34 4 27 14]", "(sums [[9]]) -> [9]", "(sums []) -> []", "(sums [[2 6 6 9 3] [5] [5] [0] [7 6 8 6 5]]) -> [26 5 5 0 32]", "(sums [[2 6 9] [6 5] [4 5] [2 5 5 7 5] [7 9 2 1 5]]) -> [17 11 9 24 24]", "(sums [[2 3] [1 0 6] [8 0]]) -> [5 7 8]", "(sums [[2 3] [7 7 7 1 5] [3 4 7 1] [4]]) -> [5 27 15 4]", "(sums [[8 3 9] [9 7 1]]) -> [20 17]", "(sums [[6 6 1 5] []]) -> [18 0]"], "time": 0.572792, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7] [4 2] [4 6 1 1] [9 9 3]]) -> [7 6 12 21]", "(sums [[8 4 5] [7 0 3 3 3] [3 5 1 7]]) -> [17 16 16]", "(sums [[]]) -> [0]", "(sums [[7 9 7] [7 2 5] [0]]) -> [23 14 0]", "(sums [[] [7 8 9 1 7] [8 7 4 0] [2 1 8 3]]) -> [0 32 19 14]", "(sums [[6 2] [9 2 7]]) -> [8 18]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 3 9 8] [6 3 0 2] [9]]) -> [22 11 9]", "(sums [[4]]) -> [4]", "(sums [[0 6 4 3 8] [] [2] [9] [5 3 7 6 6]]) -> [21 0 2 9 27]", "(sums [[4 7 7 4 0]]) -> [22]", "(sums [[]]) -> [0]", "(sums [[9 9 2 3] [6 9 2 4 1] [] [4 8 2 3] [4 2]]) -> [23 22 0 17 6]", "(sums [[4]]) -> [4]", "(sums [[5 5 9 8 9]]) -> [36]", "(sums [[1 0]]) -> [1]", "(sums [[] [9] [3 5 1 9 6]]) -> [0 9 24]", "(sums [[9 1 9] [6 1] [] [4 2 6]]) -> [19 7 0 12]", "(sums [[7 1 2 0 8] [8 6 2] [9 4 7 9] [7 4 1 6] [8 6]]) -> [18 16 29 18 14]", "(sums [[7 2 4 8 5] [1 9 0 4 2] [3 9 4 8]]) -> [26 16 24]", "(sums [[7 3 1 9 4]]) -> [24]", "(sums []) -> []", "(sums [[5 3 3]]) -> [11]", "(sums []) -> []", "(sums [[9 0 0 2 8] [7 3 0 7 9] [5 1 2 2]]) -> [19 26 10]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[2 8 8 4] [4 8 2] [3 1 9] [2 6] [4 6 3 1 5]]) -> [22 14 13 8 19]", "(sums [[7 7 0 2 4]]) -> [20]", "(sums []) -> []", "(sums [[2]]) -> [2]", "(sums [[0 4] [8 0] [0 7 8 5] [4 4 9 9 5]]) -> [4 8 20 31]", "(sums [[3 4 1] [] [6]]) -> [8 0 6]", "(sums [[0 8 3]]) -> [11]", "(sums [[0] [6] [5 5 4 7] [2 0 2] [3 9]]) -> [0 6 21 4 12]", "(sums [[7 5] [6 4 0 2 4] [9 1 5 8 4] [] [1 2 0 0 5]]) -> [12 16 27 0 8]", "(sums [[8] [6]]) -> [8 6]", "(sums []) -> []", "(sums [[0 4 5 8 9] []]) -> [26 0]", "(sums []) -> []", "(sums [[1 5 6 6]]) -> [18]", "(sums [[1 1 5]]) -> [7]", "(sums [[] [0 3]]) -> [0 3]", "(sums [[6 7 3 4] [0 9 6 0] [0 4 8 8]]) -> [20 15 20]", "(sums [[8] [1 7 2 1 5] [1 1] [] [5 3 8 0]]) -> [8 16 2 0 16]", "(sums [[0 6]]) -> [6]", "(sums []) -> []"], "time": 0.626326, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 7] [5 0]]) -> [10 5]", "(sums [[5 6 2 5 5] [2] [] [7 8 6 7]]) -> [23 2 0 28]", "(sums [[9] [8]]) -> [9 8]", "(sums [[] [0 0]]) -> [0 0]", "(sums [[] [4 2 1 3]]) -> [0 10]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[5] [7] [4] [3 4 1 3]]) -> [5 7 4 11]", "(sums [[7] [4 1]]) -> [7 5]", "(sums [[9 2 5 8] [8 5 7] [0 4 0 3 1]]) -> [24 20 8]", "(sums [[4 8 4 3 1] [6 0 0 6]]) -> [20 12]", "(sums []) -> []", "(sums [[3 2] [2 7 6 0 5] [] []]) -> [5 20 0 0]", "(sums [[8 7 2 0 9] [1 1 1] [6]]) -> [26 3 6]", "(sums [[9 0 6] [5 5 2] [9 0 5]]) -> [15 12 14]", "(sums [[6 8 2 8 1] [6 0 2 9] [0 1 8] [1 5 5 0] [1]]) -> [25 17 9 11 1]", "(sums [[] [1] [9 6] [1 8 9]]) -> [0 1 15 18]", "(sums []) -> []", "(sums [[9 4 8 1 7] [7 7 4 8] [0 0 0 7 0] [6 6 0 0 5] [6 5 7 0 2]]) -> [29 26 7 17 20]", "(sums [[8] [3 8 4 7 2]]) -> [8 24]", "(sums [[] [4 8] [6] [9 6 4] [3 3 8]]) -> [0 12 6 19 14]", "(sums [[4 0] [0 1 4 4] [9 0] [9 4 2 3 1] [7 9 4 3]]) -> [4 9 9 19 23]", "(sums [[8] [7 7 8 3] [9]]) -> [8 25 9]", "(sums [[5] [3 1 7] [1 3] [2]]) -> [5 11 4 2]", "(sums [[6 3 1 0 3] [8]]) -> [13 8]", "(sums [[0 7 2 1 2] [2] [5] [5]]) -> [12 2 5 5]", "(sums [[0]]) -> [0]", "(sums [[8] [5 4]]) -> [8 9]", "(sums [[3 9]]) -> [12]", "(sums [[4] [9 5] []]) -> [4 14 0]", "(sums [[7 1 9 9] [9 3 5 6] [] [6 5] [2 9 9 1]]) -> [26 23 0 11 21]", "(sums [[] [5 4 2 0] [] [5 7 9 9 3] [2 1]]) -> [0 11 0 33 3]", "(sums [[9] [2 5 7 5] [7 1 5 7 2] [0]]) -> [9 19 22 0]", "(sums []) -> []", "(sums [[] [4 8 5 8 2] [8] [9 4 1 3 3]]) -> [0 27 8 20]", "(sums [[] [] [8 6 2 5 2] [4 1 0 7] [5 4]]) -> [0 0 23 12 9]", "(sums []) -> []", "(sums [[8] [1 9 7 6] [4] [4 9]]) -> [8 23 4 13]", "(sums []) -> []", "(sums [[5 3 3 1 2] [] [7 8 7 1 8]]) -> [14 0 31]", "(sums [[8] [] [4 1 0 7 7] [] []]) -> [8 0 19 0 0]", "(sums [[5 7 9 4 2] [6 7 6 0]]) -> [27 19]", "(sums [[7 9] [] [2 4 3]]) -> [16 0 9]", "(sums [[2] []]) -> [2 0]", "(sums [[7 3 5] []]) -> [15 0]", "(sums [[2] [9 3 7 6 1] [2 9]]) -> [2 26 11]", "(sums [[4] [8 7 1 1 2]]) -> [4 19]"], "time": 0.569583, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[5 3 0] [] [9 1 5 4 5]]) -> [8 0 24]", "(sums [[4 9] [2 8]]) -> [13 10]", "(sums [[5] [9 1 2 3 2] [9 4 3 8 9] [3 6 8 8 5] [3 0 4]]) -> [5 17 33 30 7]", "(sums [[] [6 1 2] [5 8]]) -> [0 9 13]", "(sums [[3 3] [] [5] [6 4 6]]) -> [6 0 5 16]", "(sums [[1 9 4 9 5] [9 0 5] [2 8] [4 5 8]]) -> [28 14 10 17]", "(sums [[3 6 5 7 5] []]) -> [26 0]", "(sums []) -> []", "(sums [[6 2 1 0] []]) -> [9 0]", "(sums [[8 1 7]]) -> [16]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 6]]) -> [15]", "(sums [[4 3 6 5]]) -> [18]", "(sums [[3 4 1 4 4] [0 6] [8 3] [] [3 2 6 1 1]]) -> [16 6 11 0 13]", "(sums []) -> []", "(sums [[5 0 2 1] [4 2 9 9] [8 5 4 5] [1 0]]) -> [8 24 22 1]", "(sums [[9 1 4 7 3] [4 4 2 2]]) -> [24 12]", "(sums [[3 1 1 6] [3]]) -> [11 3]", "(sums [[9 8 8]]) -> [25]", "(sums [[6]]) -> [6]", "(sums [[2 9 6 4] [0 3 7] [0 8] [3 9 9 4 7]]) -> [21 10 8 32]", "(sums [[4 6] [2 6 9 1] [] [8 3 1] [3 0 1 4 8]]) -> [10 18 0 12 16]", "(sums [[5] [7] [9 1] [7 7]]) -> [5 7 10 14]", "(sums [[8]]) -> [8]", "(sums [[5 0 3 1 3]]) -> [12]", "(sums [[8 7 3] [0 4 4] [6] [6 6] [6 9 7 3 0]]) -> [18 8 6 12 25]", "(sums [[9 1] []]) -> [10 0]", "(sums [[4 8] [] [5 1] [9 7] [0 8 3 0]]) -> [12 0 6 16 11]", "(sums []) -> []", "(sums [[6 3 6] [8 4] [8]]) -> [15 12 8]", "(sums [[2 8]]) -> [10]", "(sums [[0] [8]]) -> [0 8]", "(sums [[4 3] [7 7 7]]) -> [7 21]", "(sums [[9] []]) -> [9 0]", "(sums [[4] [4 3]]) -> [4 7]", "(sums [[9]]) -> [9]", "(sums [[2 0 0 7] [5 4] [] [6 8] []]) -> [9 9 0 14 0]", "(sums [[2 6]]) -> [8]", "(sums [[]]) -> [0]", "(sums [[6]]) -> [6]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[] [2 7 8 4 1]]) -> [0 22]", "(sums [[] [6] [8 8]]) -> [0 6 16]", "(sums []) -> []", "(sums [[6 2]]) -> [8]"], "time": 0.613301, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[4 5 2] [2 8 0] [5 7]]) -> [11 10 12]", "(sums [[9 3 3 4] [9 6 0]]) -> [19 15]", "(sums [[3 4] [0 6] [5 6 7]]) -> [7 6 18]", "(sums []) -> []", "(sums [[3 0] [3 5 1 5 1]]) -> [3 15]", "(sums [[] [5 7 4 0 5] [7 1 4 7] [7 6] [8 0]]) -> [0 21 19 13 8]", "(sums [[6 3 3] [4 6 2 2] [3 4 5]]) -> [12 14 12]", "(sums [[2 1] [9] [5 9] [2 5 3 5]]) -> [3 9 14 15]", "(sums [[1 7 1] [8 9]]) -> [9 17]", "(sums [[3] [5]]) -> [3 5]", "(sums [[4 6 3 0 7] [] [6 5 4 1 9] [5 6 3] [5 2]]) -> [20 0 25 14 7]", "(sums []) -> []", "(sums [[1 9 8 2] [4 2 2 1] [4] [1 5 3 0]]) -> [20 9 4 9]", "(sums [[9 4 0 8 6] [4] [9 6 4 6] [] [2 5 1 0]]) -> [27 4 25 0 8]", "(sums []) -> []", "(sums [[] [3 3 2]]) -> [0 8]", "(sums [[0 8 6 0 1] [7 8] [3] [6 0 5 0]]) -> [15 15 3 11]", "(sums []) -> []", "(sums []) -> []", "(sums [[5] [6 2 6 4]]) -> [5 18]", "(sums []) -> []", "(sums [[4 4 1 7 5]]) -> [21]", "(sums [[0 2 7 5] [4 4 7 6 5]]) -> [14 26]", "(sums [[6 0 8] [] [0 3 9 2]]) -> [14 0 14]", "(sums [[8 7]]) -> [15]", "(sums [[5 5] [7 3 7 7] [2 2 8 4 5]]) -> [10 24 21]", "(sums [[] [] [] [3 4 8 9]]) -> [0 0 0 24]", "(sums [[6 0 4] [2 6]]) -> [10 8]", "(sums [[] [0 6 6]]) -> [0 12]", "(sums [[1 4 4 1 9] [1 0 5 7] []]) -> [19 13 0]", "(sums [[]]) -> [0]", "(sums [[3 2 5 2] [6 4 0 0 2] [6 5 0]]) -> [12 12 11]", "(sums [[4 5 3 0 0] [1] [6 3] [1]]) -> [12 1 9 1]", "(sums [[4 1 1 5] [3]]) -> [11 3]", "(sums [[2 6 9]]) -> [17]", "(sums [[2 4 0 0 6]]) -> [12]", "(sums [[5 9 6 4 2] [1 6 7] [6]]) -> [26 14 6]", "(sums [[] [6] [1 2 7 8] [0 9 9 0 4]]) -> [0 6 18 22]", "(sums [[2 3 3 7] [2 2 3] [7] [] [2 8 8]]) -> [15 7 7 0 18]", "(sums [[3 1] [8] [7]]) -> [4 8 7]", "(sums [[5 0 8 0] [9 7 7 6]]) -> [13 29]", "(sums [[8] [] [6 0 2 7 6]]) -> [8 0 21]", "(sums [[3 4 0 2 1] [8 0] [9 5 7 3]]) -> [10 8 24]", "(sums [[] [8 5] [3 6 3]]) -> [0 13 12]", "(sums [[] [9 7 1 6]]) -> [0 23]", "(sums []) -> []", "(sums [[3 7 5 5 1] [4 2 0 7] [5 3 6 0] [2 5 8 3] [3 1 8]]) -> [21 13 14 18 12]"], "time": 0.604923, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2] []]) -> [2 0]", "(sums [[] [6] [5] [0 5 4 0]]) -> [0 6 5 9]", "(sums [[1] [6] [4]]) -> [1 6 4]", "(sums [[7 1 4 6] [5 6 8] [7 1 1] [2 3 4]]) -> [18 19 9 9]", "(sums [[1 2 1 5 5] [] [5] [] [7]]) -> [14 0 5 0 7]", "(sums []) -> []", "(sums [[] [] [6] [6 2 2 0 0]]) -> [0 0 6 10]", "(sums [[] [4 4 0] [9 2 5] [9] [3 1 5 8]]) -> [0 8 16 9 17]", "(sums [[] [8 2] [] [6 7 6 8]]) -> [0 10 0 27]", "(sums [[0] [2 9 1 4 0] [9 9 6] [9 5]]) -> [0 16 24 14]", "(sums [[3 6 1 9 2] [0] [0 0 9 2 0] [] [8 5]]) -> [21 0 11 0 13]", "(sums [[] [6] [7 5 3] [6 2 7 2 7]]) -> [0 6 15 24]", "(sums [[] [5 4 7] [4]]) -> [0 16 4]", "(sums [[3 0] [4 1 7 3 3]]) -> [3 18]", "(sums [[2 5 6 1 9] [1 2 0 7 6] [2 6 9 0]]) -> [23 16 17]", "(sums [[9 5 2 9 4] [4 9 3] [1 5 8 3 2] [8 7] [8 1]]) -> [29 16 19 15 9]", "(sums [[1] [] [4 5 1 1] [] [8]]) -> [1 0 11 0 8]", "(sums []) -> []", "(sums [[9 4 1 8 2]]) -> [24]", "(sums [[1 5 9] [1 0 1 9] [2 7] [2 4 7] [6 4]]) -> [15 11 9 13 10]", "(sums [[0 0] [8 1 3 2]]) -> [0 14]", "(sums [[6] [7 5 8]]) -> [6 20]", "(sums [[9 8]]) -> [17]", "(sums [[9 5 4 1 4]]) -> [23]", "(sums [[0 4 4 1] [8 8 0 8]]) -> [9 24]", "(sums [[9]]) -> [9]", "(sums [[8 4] [1 5 7 5 8]]) -> [12 26]", "(sums [[6 8 7 4 7] [6 8 6 7 8] []]) -> [32 35 0]", "(sums [[6 2 2 2 3] [0 7 3 6 2]]) -> [15 18]", "(sums [[0] [8 6 4] [] [0 0 2 3]]) -> [0 18 0 5]", "(sums [[] [9 0 6 7] [6 3 1]]) -> [0 22 10]", "(sums [[7 0 1] [0 0 9] [9 6]]) -> [8 9 15]", "(sums [[0] [] [3 4 7 7 1]]) -> [0 0 22]", "(sums [[4 5 5] [] [7 9 1 2] [2 7]]) -> [14 0 19 9]", "(sums [[4 5 5 7] [1 0] [1 0 9] [0 8 3 1 5]]) -> [21 1 10 17]", "(sums []) -> []", "(sums [[4 3 8 9] [5 4 3 2] [8] [3 0 5 4 7]]) -> [24 14 8 19]", "(sums [[4 3] [] [9 3 7 6]]) -> [7 0 25]", "(sums [[]]) -> [0]", "(sums [[5 1 8 0 4] [1 4] [] [2]]) -> [18 5 0 2]", "(sums []) -> []", "(sums [[1] [5 0] [5] [8 2]]) -> [1 5 5 10]", "(sums [[5 6 8] [9 7 7 4]]) -> [19 27]", "(sums [[6 7]]) -> [13]", "(sums []) -> []", "(sums []) -> []", "(sums [[5 0 8] [0 1] [] [1 7 1 6 1] []]) -> [13 1 0 16 0]", "(sums [[1] [7] [0] [9]]) -> [1 7 0 9]"], "time": 0.599851, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2 1 6 8] [0 3] [] [7 3 2 2] [1]]) -> [17 3 0 14 1]", "(sums [[4 4 9 9 2] [7 7 2 6] [0 3]]) -> [28 22 3]", "(sums []) -> []", "(sums [[7 5 2] [2 5]]) -> [14 7]", "(sums [[5 0 4 3 3] [] [2 4 4] [8 7 0 0 5]]) -> [15 0 10 20]", "(sums []) -> []", "(sums [[] [7 8 7] [9 3 8 6] [9 5 2 6] []]) -> [0 22 26 22 0]", "(sums []) -> []", "(sums [[5 5] [3 3 5] [9 4 3] [4 3 5 2 1]]) -> [10 11 16 15]", "(sums []) -> []", "(sums [[1] []]) -> [1 0]", "(sums [[7 7] [7 6 3 7 8] [8 6 0 8] [9 6 4 1 9] []]) -> [14 31 22 29 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 9 1 4 7]]) -> [30]", "(sums [[7]]) -> [7]", "(sums [[5 7 2 9] [7 3] [] [9 9]]) -> [23 10 0 18]", "(sums [[5 3 1] [8 2 4]]) -> [9 14]", "(sums [[6 2] [9 3 6 7] [8 3 1] [7 0 9 3] [2 8 8 9]]) -> [8 25 12 19 27]", "(sums [[8 3 6] [5] [9 6] [6]]) -> [17 5 15 6]", "(sums [[6] [] [8 6 6 3] [7 1 2] []]) -> [6 0 23 10 0]", "(sums [[1 1] [1 8] [1 2 3] [2 2 8 3 9]]) -> [2 9 6 24]", "(sums []) -> []", "(sums [[2 0] [0 1 3 2] [3 7 3 7 1] [4] [5 0 6 2 9]]) -> [2 6 21 4 22]", "(sums []) -> []", "(sums [[0 2 1] [5 5 2 4]]) -> [3 16]", "(sums [[2 1 7 6 2] [3] []]) -> [18 3 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[5 2 2 9 5] [9 1 1 2] [8 1 3 5 1] []]) -> [23 13 18 0]", "(sums [[3 4 4 2] [6 0 1] [1 4 1 4] [9 1 8 2] [9]]) -> [13 7 10 20 9]", "(sums []) -> []", "(sums [[1 7] [0 8 7 4 0] [5 6 2 2]]) -> [8 19 15]", "(sums []) -> []", "(sums [[1 5 3]]) -> [9]", "(sums [[6 8 1 4 7] [0]]) -> [26 0]", "(sums [[6] []]) -> [6 0]", "(sums [[7 3 3 9] [1 5 4] [6 4]]) -> [22 10 10]", "(sums [[8 0 5 0 8] [3 5 4 7 5]]) -> [21 24]", "(sums [[7 0 6 9] [2 1] [2 0 7 0] [1 8 5 6 0] []]) -> [22 3 9 20 0]", "(sums [[1 9 2 9] [7 5]]) -> [21 12]", "(sums [[] [] [] [1 8 6 3]]) -> [0 0 0 18]", "(sums [[7 2] [5 4 8 6] [7 4 5 0] [6 7] [9 6 5 0 7]]) -> [9 23 16 13 27]", "(sums [[5 9] [5 5 1 7 1] [5] [3 7 2 5] [4 1 1 6]]) -> [14 19 5 17 12]", "(sums [[6 5 0] [2] [6] []]) -> [11 2 6 0]", "(sums [[2 5 3] [6 9] [1 7 1 0 2]]) -> [10 15 11]", "(sums [[4 3] [9 4 6 0] [6 7]]) -> [7 19 13]", "(sums [[] [2 8 2] [9 6 6] [3] [3 4]]) -> [0 12 21 3 7]"], "time": 0.653341, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [6 7 3 0] [7 0 3 4 1]]) -> [0 16 15]", "(sums [[7]]) -> [7]", "(sums [[9] [4 2] [3 1] [2 1] [0 6 6]]) -> [9 6 4 3 12]", "(sums [[0]]) -> [0]", "(sums [[7]]) -> [7]", "(sums [[]]) -> [0]", "(sums [[9 3 5 6 3] []]) -> [26 0]", "(sums [[4] [8 9 7]]) -> [4 24]", "(sums []) -> []", "(sums [[8 4 9 5 4]]) -> [30]", "(sums [[8 4 9 5] [1 4] [9 3 2 8 9] [1 7 0 3 8]]) -> [26 5 31 19]", "(sums [[4 7 0 6 3] [2 4] [0 3] [5 1 0 7]]) -> [20 6 3 13]", "(sums [[] []]) -> [0 0]", "(sums [[4 1]]) -> [5]", "(sums []) -> []", "(sums [[3 2] [7] [2 8 7] []]) -> [5 7 17 0]", "(sums [[] [] [5 2] [8 5 5]]) -> [0 0 7 18]", "(sums [[7 1] [4 6 6] []]) -> [8 16 0]", "(sums [[9 5 0 4 1] [3 8] [] [8]]) -> [19 11 0 8]", "(sums [[6] [1 7 4 7 4]]) -> [6 23]", "(sums [[2 7]]) -> [9]", "(sums [[7 8] [2 2 1] []]) -> [15 5 0]", "(sums [[8 9]]) -> [17]", "(sums [[7 1 2 3] [] [7 5 1] [3 7 8] [7 3]]) -> [13 0 13 18 10]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[9 0 4] [4 5] [] [] [4 9 3]]) -> [13 9 0 0 16]", "(sums [[8] [2 8 5] [8 0 9 6] [7]]) -> [8 15 23 7]", "(sums [[2] [0] [7 5 3 0 3]]) -> [2 0 18]", "(sums [[] [2 1 1] [9 8 2 4 3] [] [3 8 1]]) -> [0 4 26 0 12]", "(sums [[5] [1 1]]) -> [5 2]", "(sums [[1 8 2] [3 3 9]]) -> [11 15]", "(sums []) -> []", "(sums [[0 3] [4] [6 8 4] [9 8 6]]) -> [3 4 18 23]", "(sums [[6 1 1 2] [8 5 3 7] [1] [0] [0 1 7 3 9]]) -> [10 23 1 0 20]", "(sums [[4 7 5 5] [0 6 1] [6 4 5] [6]]) -> [21 7 15 6]", "(sums [[5 1 0 5]]) -> [11]", "(sums [[] [3 5 8]]) -> [0 16]", "(sums [[5 3] [2]]) -> [8 2]", "(sums [[7 4] [6 1]]) -> [11 7]", "(sums [[] [] [0 4 7 8 8] [1 5 0 3]]) -> [0 0 27 9]", "(sums [[1 4 4 0 5]]) -> [14]", "(sums [[4] [0] [8 4]]) -> [4 0 12]", "(sums [[8 9 7 4 0] [1]]) -> [28 1]", "(sums [[2 1 8 3 0] [6 6 4 6] [5 5 5 7 8] [7]]) -> [14 22 30 7]", "(sums []) -> []", "(sums [[3 9 0 7] [] [0 4 2 6 1]]) -> [19 0 13]"], "time": 0.63711, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[8 0]]) -> [8]", "(sums [[5 3 3] [2 9 0 2]]) -> [11 13]", "(sums [[] [6 9 4 5 3]]) -> [0 27]", "(sums [[1] [] [7 7 8 7] [9 9]]) -> [1 0 29 18]", "(sums [[8 2 0 4 6] [0] [0 8 6 2]]) -> [20 0 16]", "(sums [[5 0 4 2] [0 1] []]) -> [11 1 0]", "(sums [[0 4 0 0] [4 0 9 8] [6 7 2]]) -> [4 21 15]", "(sums [[3 1 2] [] [7 1 9] [5 0] [3 5]]) -> [6 0 17 5 8]", "(sums [[3 7 9 2 8]]) -> [29]", "(sums [[] [7 8 1 5 7] [8 9 6 8 7] [5] [2 4 6]]) -> [0 28 38 5 12]", "(sums [[6 9 8 1 8] [1 5 5 3] [0]]) -> [32 14 0]", "(sums [[] [6 7 2 1 7] [8] [1 6 0]]) -> [0 23 8 7]", "(sums [[6 8 0 6 7] [7 7] [7 5 5] [1 4 5 3 4] []]) -> [27 14 17 17 0]", "(sums [[5 5 0 4 8] []]) -> [22 0]", "(sums [[3 8 7 9] [2 3 5 7]]) -> [27 17]", "(sums [[] [3 4] [9 1 6] [8 0 3 8]]) -> [0 7 16 19]", "(sums []) -> []", "(sums [[8] []]) -> [8 0]", "(sums []) -> []", "(sums [[0 4] []]) -> [4 0]", "(sums [[6 1] [4 6 0 2 6] [0 6] [8 7 5 2 1] [5 8 4 0]]) -> [7 18 6 23 17]", "(sums []) -> []", "(sums [[5 4 0 6] [6 4 1]]) -> [15 11]", "(sums [[2 8] [0 4 6] [6 4 9 0 5] [7 5 2] [9]]) -> [10 10 24 14 9]", "(sums [[8 0 1] [6 3] [4] [3 8]]) -> [9 9 4 11]", "(sums [[0 2 1] [7 3]]) -> [3 10]", "(sums [[] [5 6] [4 4 1 9] [1 3 9 4 9]]) -> [0 11 18 26]", "(sums [[4 3] [2 1 3 7]]) -> [7 13]", "(sums [[4 8 0 3] [] [3 8 7 9 6]]) -> [15 0 33]", "(sums [[0 8 2 2] [] [0 5 3 9]]) -> [12 0 17]", "(sums [[1 3 1 5 7] [3 2] [] []]) -> [17 5 0 0]", "(sums [[0 4 1 8] [] [2] [6 9 7 8]]) -> [13 0 2 30]", "(sums [[3 8 1]]) -> [12]", "(sums [[] [4 6 2 8 7] [7 6 6]]) -> [0 27 19]", "(sums [[3] [0 9 3 3 7]]) -> [3 22]", "(sums [[8] [8 8 8 0] [5 2] [1] [0]]) -> [8 24 7 1 0]", "(sums [[9 1 9 2] [1 2 1] [1 2 6]]) -> [21 4 9]", "(sums [[3 2 8 8 5]]) -> [26]", "(sums [[]]) -> [0]", "(sums [[8 3 7] []]) -> [18 0]", "(sums [[6 0 1 1 3] []]) -> [11 0]", "(sums [[3 6] [4 9 0 2]]) -> [9 15]", "(sums [[2 7 5 8] [9] [5]]) -> [22 9 5]", "(sums [[3 1] [2] []]) -> [4 2 0]", "(sums [[1 3 7] [6 3 0 6 2] [] [] [9 9]]) -> [11 17 0 0 18]", "(sums [[1 7 0 3 4] [8 5 2 6 1] [2 4 8 2] []]) -> [15 22 16 0]", "(sums []) -> []", "(sums []) -> []"], "time": 0.563796, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [6 4 5] [3 5] [0 1 2] [5 5 7 3 4]]) -> [0 15 8 3 24]", "(sums []) -> []", "(sums [[9 0 3 5]]) -> [17]", "(sums [[5 7 6]]) -> [18]", "(sums [[4 2 2 5] [2 2] [1 6] [1 9]]) -> [13 4 7 10]", "(sums [[9 1 4 1] []]) -> [15 0]", "(sums [[4 1 3 2 4]]) -> [14]", "(sums [[6 9 8 3]]) -> [26]", "(sums [[7] [0 2 1] [0 5] []]) -> [7 3 5 0]", "(sums [[]]) -> [0]", "(sums [[6 5 0] [7 1] [6 2]]) -> [11 8 8]", "(sums [[6 5 8 6] [1 8 6] []]) -> [25 15 0]", "(sums [[5 8 4 8] [0 2 0] [4 3]]) -> [25 2 7]", "(sums []) -> []", "(sums [[] [3 2 2 8] [4 2 4] [8]]) -> [0 15 10 8]", "(sums [[]]) -> [0]", "(sums [[8 2 8 4 2] [6 3 8] [4 1 7 8] []]) -> [24 17 20 0]", "(sums [[6 4]]) -> [10]", "(sums [[8 5]]) -> [13]", "(sums [[] [3] [] [1 9 4 3 9] [2]]) -> [0 3 0 26 2]", "(sums [[8] [9 5 9 5 4] [9 9 9 4 5] [8 2 6]]) -> [8 32 36 16]", "(sums [[3 1 8 3] [9 1]]) -> [15 10]", "(sums [[7 1 3 7] [2 4 3 4 6] [4 7 4 6] [2 9 1]]) -> [18 19 21 12]", "(sums [[1 9 6 7]]) -> [23]", "(sums [[1 7 9] [3 6] [2 8 0 7] [6 1 9]]) -> [17 9 17 16]", "(sums []) -> []", "(sums [[] [3 9 1] [8 1 6] []]) -> [0 13 15 0]", "(sums [[1] [] [7 5 1 4 6] [] [3]]) -> [1 0 23 0 3]", "(sums [[4] [6] [2 1 3]]) -> [4 6 6]", "(sums [[]]) -> [0]", "(sums [[5 9 8] [5 1 2 3 8]]) -> [22 19]", "(sums [[] [1 6 2 3]]) -> [0 12]", "(sums [[6 6 7 5 3] [8 8 3] [1 7] [9 4 2 7 3] [1 8 8 7 1]]) -> [27 19 8 25 25]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [5]]) -> [0 5]", "(sums [[6 3 3] [3 1] [9 5] [5 6 3] [7 5 5 7 8]]) -> [12 4 14 14 32]", "(sums [[2 3] [1 7] [1 2 1 9]]) -> [5 8 13]", "(sums [[7]]) -> [7]", "(sums [[0 2] [8 9]]) -> [2 17]", "(sums [[3 6 2 6 5] [8 0 5]]) -> [22 13]", "(sums [[6] [9] [] [4 5]]) -> [6 9 0 9]", "(sums [[]]) -> [0]", "(sums [[6 1 1 0 1] [1 7 8 7]]) -> [9 23]", "(sums [[] [6 8 8] [7 4 1 5] [6 3 8] [5 0]]) -> [0 22 17 17 5]", "(sums [[3] [5 0 0 4 0] [8 8] [8 4] [5]]) -> [3 9 16 12 5]", "(sums [[] [3 2 9] [0 1]]) -> [0 14 1]", "(sums [[6 9 9 1] [1 5 5]]) -> [25 11]"], "time": 0.618821, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2] [9 6 5] [2 3] [3 1 7]]) -> [2 20 5 11]", "(sums [[8]]) -> [8]", "(sums [[9 0 0] [1 1 5 4 8] [6 4] []]) -> [9 19 10 0]", "(sums [[7 1] [2 1 0 4] [1 7 9 4 0] [1 6] [5]]) -> [8 7 21 7 5]", "(sums [[9 2] [7 9 2 5 4] [] [8 4] [0 8 6 0]]) -> [11 27 0 12 14]", "(sums []) -> []", "(sums [[6 2]]) -> [8]", "(sums [[1 1 6 7 1]]) -> [16]", "(sums [[2 9 7]]) -> [18]", "(sums []) -> []", "(sums []) -> []", "(sums [[7 6]]) -> [13]", "(sums [[3] [3] []]) -> [3 3 0]", "(sums [[0] [5 1] [0 8 8 1] [4 2] []]) -> [0 6 17 6 0]", "(sums [[2 5 3 9]]) -> [19]", "(sums [[7 7]]) -> [14]", "(sums [[6 4] [6 8 3 1] [9] []]) -> [10 18 9 0]", "(sums [[] [9 7 9 2] [8 5 2 9] [9]]) -> [0 27 24 9]", "(sums [[4] [] [2 2 1]]) -> [4 0 5]", "(sums [[9 2 9 1] [4] [0 3 0 5]]) -> [21 4 8]", "(sums [[6 1 0 4 8] [1 7 7 2]]) -> [19 17]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[2 9 4] [] [9 9 7 6]]) -> [15 0 31]", "(sums [[4 5 0 4] [9 6 5 9]]) -> [13 29]", "(sums [[0 2 3 2 9] [] [0 5] [1 1 4 6 8]]) -> [16 0 5 20]", "(sums [[2 5]]) -> [7]", "(sums [[9 1 9] [] [7 5 9]]) -> [19 0 21]", "(sums [[8 8 3 8] [5 5 3 5] [7 9 2 5] [7]]) -> [27 18 23 7]", "(sums [[8]]) -> [8]", "(sums [[0 6 3] [3]]) -> [9 3]", "(sums [[] [5 6] [0 8 1 9]]) -> [0 11 18]", "(sums [[4 5] [6] [5 2 8] [2 5 7] [8 5 9]]) -> [9 6 15 14 22]", "(sums [[6 9 5 8 3]]) -> [31]", "(sums [[5]]) -> [5]", "(sums [[5] [8] [] [1 5] [4 2 4]]) -> [5 8 0 6 10]", "(sums [[3 2 6 9 6] [4 3 6 6] [9 2] [7 4 2 7] [6 3 6 7 4]]) -> [26 19 11 20 26]", "(sums [[6 2 0 8 2]]) -> [18]", "(sums [[0 6 5] [8 3 4 9] [1 2 5 2] [] [6 4]]) -> [11 24 10 0 10]", "(sums [[0 5 3 2] [2 1 0] [3 7] [1 1]]) -> [10 3 10 2]", "(sums [[] [] [6] [5 9 7 0 3] [0 7 1 8 9]]) -> [0 0 6 24 25]", "(sums [[2] [] [5 6 1 7]]) -> [2 0 19]", "(sums [[9 2 8 8 3] [1 5 2] [] [2 7 3 0] []]) -> [30 8 0 12 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[6]]) -> [6]"], "time": 0.574441, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 4 4 0] [9 9] [2 2 6 2] [8] [4]]) -> [13 18 12 8 4]", "(sums [[] [8 1 9] [4 5 4 7] [0] []]) -> [0 18 20 0 0]", "(sums [[0 3 4 1 0] [] [] [2 2]]) -> [8 0 0 4]", "(sums [[9 8 4 0 3]]) -> [24]", "(sums [[3 1 8] [6 0 1 1 4]]) -> [12 12]", "(sums [[] [1 1] [4 9 8 1 7] [] [6 4 4 3 1]]) -> [0 2 29 0 18]", "(sums []) -> []", "(sums [[6 2]]) -> [8]", "(sums [[9 2 9 8]]) -> [28]", "(sums [[0 6 0 3] [5 5 4 3 3] [3 1 9 4]]) -> [9 20 17]", "(sums [[4]]) -> [4]", "(sums [[6] [6] [5]]) -> [6 6 5]", "(sums [[] [5 3 2 1 3]]) -> [0 14]", "(sums [[3] [8 6] [] [6] [2 0]]) -> [3 14 0 6 2]", "(sums [[4]]) -> [4]", "(sums [[2 2 4]]) -> [8]", "(sums [[3 1 1] [1 1 2 1 3] [3 6 0]]) -> [5 8 9]", "(sums []) -> []", "(sums []) -> []", "(sums [[4 6]]) -> [10]", "(sums [[8 4 7 6] [4 1 3 9 7] [3]]) -> [25 24 3]", "(sums [[1 5 4 3] [1] [8 7] [6 4 3 5] [3 7 4]]) -> [13 1 15 18 14]", "(sums [[2 4 6 2 0] [] [1 1 9 7] [8 8 5]]) -> [14 0 18 21]", "(sums [[7 9 0 8] [2] [] [8 9 6 5]]) -> [24 2 0 28]", "(sums [[1 9] [2 7 9 8] [4 0 9 0 2]]) -> [10 26 15]", "(sums []) -> []", "(sums [[4 7 3 0 8]]) -> [22]", "(sums [[4 5 8]]) -> [17]", "(sums [[]]) -> [0]", "(sums [[4 0 7 0 3] [] [4 7 5 4] [] []]) -> [14 0 20 0 0]", "(sums [[2 0 2 9 3] [7 6 1 5] [7 1 8]]) -> [16 19 16]", "(sums [[9 0]]) -> [9]", "(sums [[5] [2 2] [0 3]]) -> [5 4 3]", "(sums [[4 8 7 4] [1 0]]) -> [23 1]", "(sums [[6 5 1 4] [1 5]]) -> [16 6]", "(sums [[1 5 0 8] [1] [9 0 7 5 6] [8 9 4 7 4]]) -> [14 1 27 32]", "(sums [[7 4]]) -> [11]", "(sums []) -> []", "(sums []) -> []", "(sums [[8 8 5 5 4]]) -> [30]", "(sums []) -> []", "(sums [[3 7] [4 2 6] [] [8 3 4] [1 2 4 9 8]]) -> [10 12 0 15 24]", "(sums [[9 9 6 1] [2]]) -> [25 2]", "(sums []) -> []", "(sums [[5 3 1 8 1] [] [9 4]]) -> [18 0 13]", "(sums [[0 9 1 1 9] [2 7] [1] [3 9 8] [3 7]]) -> [20 9 1 20 10]", "(sums [[3 2 6 6 6] [1 8 7]]) -> [23 16]", "(sums [[1] [3 5 2 4] [3]]) -> [1 14 3]"], "time": 0.487995, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 3] [1 6 6 9] [9 5]]) -> [10 22 14]", "(sums [[3 4 2 3 3] [7 8 4]]) -> [15 19]", "(sums [[9 5 9] [] []]) -> [23 0 0]", "(sums [[6 5] [6 3] [9] [3 0 5 0 9]]) -> [11 9 9 17]", "(sums [[8 5 5 8 3]]) -> [29]", "(sums []) -> []", "(sums [[5]]) -> [5]", "(sums [[] [6 5] []]) -> [0 11 0]", "(sums []) -> []", "(sums [[7 4 1 1] [9 0 8 6 2] [2 8 0 0 5] [1 8 7 4] [0 6 5]]) -> [13 25 15 20 11]", "(sums [[7 5 5 3 5] [9 3 1 5] [8 2 9 5] [] [9 8 4]]) -> [25 18 24 0 21]", "(sums [[1 9]]) -> [10]", "(sums [[8 9 7 7] [8 2] [9 2] [5 2 2 2 1] [9 4]]) -> [31 10 11 12 13]", "(sums [[8 5] []]) -> [13 0]", "(sums [[8 4] [] [] [9 0 1]]) -> [12 0 0 10]", "(sums [[]]) -> [0]", "(sums [[3 2 7 9 7] [5 8]]) -> [28 13]", "(sums [[5 5 8 6 5] [1 4 5 3] [3 6 0 1 0] [2 6 8 4 1]]) -> [29 13 10 21]", "(sums [[3 5] []]) -> [8 0]", "(sums []) -> []", "(sums [[3 7 3 1 3] [5 1 0] [8 1 3 8] []]) -> [17 6 20 0]", "(sums [[1 9 7] [1 2]]) -> [17 3]", "(sums [[] []]) -> [0 0]", "(sums [[9 2 8] [2 8 9 6] [1 6 2 0 7] [9] [8 8]]) -> [19 25 16 9 16]", "(sums [[9 9 5 0] [6 3] [1 0 8] [7]]) -> [23 9 9 7]", "(sums []) -> []", "(sums [[3] [8 0] [2]]) -> [3 8 2]", "(sums []) -> []", "(sums [[] []]) -> [0 0]", "(sums [[] [8 6] [] []]) -> [0 14 0 0]", "(sums [[2 0 6 2 5] [0 5 7 4 1] [7 5 1 8 0]]) -> [15 17 21]", "(sums [[] [2 1]]) -> [0 3]", "(sums [[8 4 9 0]]) -> [21]", "(sums [[6 6] [3] [3]]) -> [12 3 3]", "(sums [[] [9 4 1 3] []]) -> [0 17 0]", "(sums []) -> []", "(sums [[0 7 0] [9 2] [8]]) -> [7 11 8]", "(sums []) -> []", "(sums [[4 8] [1 6 6 0 2] [5 6 2 0]]) -> [12 15 13]", "(sums [[8 7] [5 3 8 7 1]]) -> [15 24]", "(sums []) -> []", "(sums [[] [1 6 7 6 6] [2 9] [8 2 8 3 7]]) -> [0 26 11 28]", "(sums [[9 4 8 0] [3 5 8 4]]) -> [21 20]", "(sums [[2 8 1 3] []]) -> [14 0]", "(sums [[9 4]]) -> [13]", "(sums [[4] [2 0] [0 2] [0] [7]]) -> [4 2 2 0 7]", "(sums [[1 5 0 0] [7 5 0]]) -> [6 12]", "(sums [[8 9] [8] [2 7]]) -> [17 8 9]"], "time": 0.571516, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[1 5 9]]) -> [15]", "(sums [[6 4] [4 7 3 8 5]]) -> [10 27]", "(sums [[7 9 5 6] [8 6 6 9] [7 3 3] [4 3] [1 7 4]]) -> [27 29 13 7 12]", "(sums [[5 0 7] [7 7 4 9] [3 1 4] [] [7 0 6]]) -> [12 27 8 0 13]", "(sums [[1]]) -> [1]", "(sums [[7 5] [2 0 4] []]) -> [12 6 0]", "(sums [[3 4] [2 9 1 1] [5 1 5 0 0] [3 0 1]]) -> [7 13 11 4]", "(sums []) -> []", "(sums [[5 2 3 9 8] [6] [8 0 1 2]]) -> [27 6 11]", "(sums [[] [2 3 1] [0] [4] []]) -> [0 6 0 4 0]", "(sums [[7 1 1] [6]]) -> [9 6]", "(sums [[8 7 8 9 5] [9] [6 2]]) -> [37 9 8]", "(sums [[9 9 2] [9 7 4]]) -> [20 20]", "(sums [[4 4 8] [8 3 4] [2 6 4 7 0] [5 7 7 0] [4 9]]) -> [16 15 19 19 13]", "(sums []) -> []", "(sums [[4 3] [8 5 1 6 9]]) -> [7 29]", "(sums [[1 7] [] [2 3 9 7 2] [] [9 2 3 6 5]]) -> [8 0 23 0 25]", "(sums [[9 0 5 0] [0 8 4] [8 3 7]]) -> [14 12 18]", "(sums [[1 7] [4] [2 3 7] []]) -> [8 4 12 0]", "(sums [[9] [6 1 9] [9 9] [6] [6 3]]) -> [9 16 18 6 9]", "(sums [[3 7 5] [9 2] [0] [8 7] [5 8]]) -> [15 11 0 15 13]", "(sums []) -> []", "(sums [[0] [7 4 1 4 9] [6 1] [5]]) -> [0 25 7 5]", "(sums [[3 2] [2 9] [5 2] [2 1 7 5 3]]) -> [5 11 7 18]", "(sums [[7 3 3 1] [5 3 9 8] [] [2 1 6 7 9]]) -> [14 25 0 25]", "(sums [[8 4 3] [2 3 5 1] [] [] []]) -> [15 11 0 0 0]", "(sums [[1 0 2 4] [5 2 6] [7 1] []]) -> [7 13 8 0]", "(sums []) -> []", "(sums [[8 4 3 4 2]]) -> [21]", "(sums [[9] [5 7 2] [6 0 2 4 3]]) -> [9 14 15]", "(sums [[] [] []]) -> [0 0 0]", "(sums [[0 9 8 0 9] [3 5 8 3 8] [7]]) -> [26 27 7]", "(sums [[5]]) -> [5]", "(sums [[] [] [0]]) -> [0 0 0]", "(sums [[] [1 3 3] [5 9]]) -> [0 7 14]", "(sums []) -> []", "(sums [[9 4 5 7] [] []]) -> [25 0 0]", "(sums [[1 6]]) -> [7]", "(sums [[5 3 8 5]]) -> [21]", "(sums []) -> []", "(sums [[9] [] [9 4 0 9]]) -> [9 0 22]", "(sums [[9 7] [2 2] [6 2] [0]]) -> [16 4 8 0]", "(sums [[9]]) -> [9]", "(sums []) -> []", "(sums [[1 3 5 2 9] [] [9 3 4 1] [2]]) -> [20 0 17 2]", "(sums [[5 9 8 2]]) -> [24]", "(sums [[4 2] [3 7 9 8] [5 6 7 4] [6 0]]) -> [6 27 22 6]", "(sums [[8 4 9]]) -> [21]"], "time": 0.574886, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7] [6 5 3] [] [5] [5 8 3 3]]) -> [7 14 0 5 19]", "(sums [[7 2 7 5 9] [4] [5 8 9 5] [7 4 7 3] []]) -> [30 4 27 21 0]", "(sums [[8 4 5 9 2] [1 4 6 0 5] [5 9 7 4]]) -> [28 16 25]", "(sums [[]]) -> [0]", "(sums [[2]]) -> [2]", "(sums [[2 8 6 1] [6 4 0 9] [6] [3 9]]) -> [17 19 6 12]", "(sums [[7 7 8 3 9] [9 4 4 5] [0 4 3 0 4] [5]]) -> [34 22 11 5]", "(sums [[] [1 4 4] [9 6 1 7 7]]) -> [0 9 30]", "(sums [[0 4]]) -> [4]", "(sums [[8 3 1 5 4]]) -> [21]", "(sums [[7 8 4]]) -> [19]", "(sums []) -> []", "(sums [[0 5 4 9 6] [4 3]]) -> [24 7]", "(sums []) -> []", "(sums [[] [2 0]]) -> [0 2]", "(sums [[2 9 9 4 3] [8 8] [0 1 8 1 7]]) -> [27 16 17]", "(sums [[3 7] [4 9 7] [1 0 9 2] []]) -> [10 20 12 0]", "(sums []) -> []", "(sums [[1]]) -> [1]", "(sums [[9 4 2 9 9] [3 1 1]]) -> [33 5]", "(sums [[2 6 2 5 8] [0 5 6]]) -> [23 11]", "(sums []) -> []", "(sums [[3]]) -> [3]", "(sums [[2 1 9 4 0]]) -> [16]", "(sums [[] [5 3 8]]) -> [0 16]", "(sums [[9 2 1] [3 1 5 7 1] [6]]) -> [12 17 6]", "(sums [[] [4 4 2 2 7] [6] [3] [4 9 9]]) -> [0 19 6 3 22]", "(sums [[6] [7 4]]) -> [6 11]", "(sums []) -> []", "(sums []) -> []", "(sums [[5 2 2] [0 6 0] [1]]) -> [9 6 1]", "(sums [[0 0 4] [8 8 8] [0 6 3 1]]) -> [4 24 10]", "(sums [[9 1 1]]) -> [11]", "(sums [[2] [] [8]]) -> [2 0 8]", "(sums [[1] [2 3 7]]) -> [1 12]", "(sums [[3 6 2] [7 9] [4 8 2]]) -> [11 16 14]", "(sums [[3 2 1]]) -> [6]", "(sums [[1 9 3] [0] [0 5 4]]) -> [13 0 9]", "(sums [[1 0] [3] [4 5 6] [9 9]]) -> [1 3 15 18]", "(sums []) -> []", "(sums [[0 0 4 1 2] [] [5 0 1 6] [0 8] [8 5]]) -> [7 0 12 8 13]", "(sums [[5 7 6] [4] [9] [6 7]]) -> [18 4 9 13]", "(sums []) -> []", "(sums [[3 1 1 8 1] [9 1 4] [] [7 0 3 7]]) -> [14 14 0 17]", "(sums [[5] [5] [9 7] [5 8]]) -> [5 5 16 13]", "(sums []) -> []", "(sums [[] [8 3 7] [7] [5 0 9 5 4]]) -> [0 18 7 23]", "(sums [[6]]) -> [6]"], "time": 0.506183, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [3 0 5]]) -> [0 8]", "(sums [[3 7] [5 2 5] [5 5 1 9 4] []]) -> [10 12 24 0]", "(sums [[5 9 5 3] [5 1 2 0]]) -> [22 8]", "(sums [[6 6 7 4]]) -> [23]", "(sums [[0 0 3 6 3] [6 2 7] [4 3 3 3] [4 5 6 1 4] [2 0]]) -> [12 15 13 20 2]", "(sums [[9 9] []]) -> [18 0]", "(sums []) -> []", "(sums [[6 0 2 9 0]]) -> [17]", "(sums [[2] [1 3] [2 6]]) -> [2 4 8]", "(sums [[8 6 7 4] [4 9] [1 3 6 1] [6 0 2 7 3] [3 2]]) -> [25 13 11 18 5]", "(sums [[] [3 4 3 9 5] [3 2] [6]]) -> [0 24 5 6]", "(sums [[6 8]]) -> [14]", "(sums [[5 3 9 0] [] [1 0 6 5 5] [0 0 6] [6 6 5]]) -> [17 0 17 6 17]", "(sums []) -> []", "(sums [[6 9] [3] []]) -> [15 3 0]", "(sums [[9 6 0 0] [] [7 4 0 5 4] [8] [9 1 6 9]]) -> [15 0 20 8 25]", "(sums []) -> []", "(sums [[2 2 6 5 4] [5 2 6 2 9]]) -> [19 24]", "(sums [[7 0 1 1] [6 8 3 2 0] [0 3] []]) -> [9 19 3 0]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[] [1]]) -> [0 1]", "(sums [[] [5 6 0 4 3] [0 5] [1 1 1]]) -> [0 18 5 3]", "(sums [[2 9 8 1] [] [] [6 8 2 1]]) -> [20 0 0 17]", "(sums []) -> []", "(sums [[9 6 6] [4 9 4]]) -> [21 17]", "(sums [[8 1 8] [] [] [0] []]) -> [17 0 0 0 0]", "(sums [[9 9 8 1] [9 2 9 7 0] [0 9 4 4 7]]) -> [27 27 24]", "(sums []) -> []", "(sums [[4 6]]) -> [10]", "(sums [[] [] [8 5 5 6 1]]) -> [0 0 25]", "(sums [[] [7 2]]) -> [0 9]", "(sums [[6 0 1 2 6]]) -> [15]", "(sums [[6] [6 1 8 7 3] [9 1 1] [9 0 5]]) -> [6 25 11 14]", "(sums [[9 7 2] [8 3 9] [0]]) -> [18 20 0]", "(sums [[9 4 7] []]) -> [20 0]", "(sums [[0 5] []]) -> [5 0]", "(sums [[] [2 8 1 0 1] [5] [] [9 0 4]]) -> [0 12 5 0 13]", "(sums [[3 7] [7 3 8 7 4] [7] [7]]) -> [10 29 7 7]", "(sums [[7 6 3 0] [2 0 1 3]]) -> [16 6]", "(sums [[5 8 4 1 4] [] [4 5]]) -> [22 0 9]", "(sums [[7 7] [1 3 1 8] [1 3 7 5 6]]) -> [14 13 22]", "(sums [[] [3 5 3 8] [6 4 2] [1]]) -> [0 19 12 1]", "(sums [[5 3 7 1 1]]) -> [17]", "(sums [[5 9 3 7 1]]) -> [25]", "(sums [[6 2 3 1 4] [8]]) -> [16 8]", "(sums [[] [7 3 7]]) -> [0 17]", "(sums [[4 8 4 6 0] [0 9 1 1 0] [1 5 6 0 0]]) -> [22 11 12]"], "time": 0.45529, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[8]]) -> [8]", "(sums []) -> []", "(sums [[] [7 0] [1 8 1 0 7]]) -> [0 7 17]", "(sums []) -> []", "(sums [[9 8 4 4] [7 3 3]]) -> [25 13]", "(sums [[2 2 6] [] [1 7 0] [7 1 5 5 1] [6 6]]) -> [10 0 8 19 12]", "(sums [[9 6 8 2 9] [] [7]]) -> [34 0 7]", "(sums [[1 8 1 2] [0]]) -> [12 0]", "(sums [[7 4]]) -> [11]", "(sums []) -> []", "(sums []) -> []", "(sums [[5 6 4 2] [0] [1] [2 6]]) -> [17 0 1 8]", "(sums [[8 1 2 3 0] [4 0]]) -> [14 4]", "(sums [[6 9] [4 7 6 2] [6 1 8 2 9]]) -> [15 19 26]", "(sums [[4 0 9 2] [2 2] [6 8 9]]) -> [15 4 23]", "(sums [[5 1 5]]) -> [11]", "(sums [[] [] [9 6 5 8 2] [7 5 4 2] [4 4 8 9 6]]) -> [0 0 30 18 31]", "(sums [[8 6]]) -> [14]", "(sums [[] [] [5]]) -> [0 0 5]", "(sums [[5 7 8] [0 6 3] [6 8 6 7] []]) -> [20 9 27 0]", "(sums []) -> []", "(sums [[3 4 9] [1 6 1 3]]) -> [16 11]", "(sums [[8 6 0 1 5] [8 9 4] [9 5] [] []]) -> [20 21 14 0 0]", "(sums [[3 7 4 6 5]]) -> [25]", "(sums [[] [0]]) -> [0 0]", "(sums [[1 0 9 9]]) -> [19]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [6 1 6 4 5]]) -> [0 22]", "(sums [[6] [8] [4 8 7]]) -> [6 8 19]", "(sums [[5 0 4] [6 8] [3 7] [4 0 0 3 6]]) -> [9 14 10 13]", "(sums [[3 7 6 2] []]) -> [18 0]", "(sums [[2 6 3 3 8] [9 1 1] [3] [2 7 9] [4 1 2 3 7]]) -> [22 11 3 18 17]", "(sums [[6 4] [5 8 6 1] [2] [1]]) -> [10 20 2 1]", "(sums [[4 8 9 2] [] [3 8 8 5 6] [2 5] [2 2]]) -> [23 0 30 7 4]", "(sums [[1 5 3 1] [8 1 3 0 0] [8 3 2 1] [8 9 5 4 6]]) -> [10 12 14 32]", "(sums [[1 6 6 9] [7 7 5 6] [] [5 3] [2 6]]) -> [22 25 0 8 8]", "(sums [[]]) -> [0]", "(sums [[5 9 1 4 4] [9] [6 1 7 1 6]]) -> [23 9 21]", "(sums [[] [7]]) -> [0 7]", "(sums []) -> []", "(sums [[7 6 9] [2 2] [1] [0 9] [9]]) -> [22 4 1 9 9]", "(sums [[]]) -> [0]", "(sums [[] [7 3 5]]) -> [0 15]", "(sums [[8] [3]]) -> [8 3]", "(sums []) -> []", "(sums [[5 5 1] [7 8 4] [2 5 5 6 3]]) -> [11 19 21]"], "time": 0.59069, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [6 7 6 6 2] [1 9 6] [6]]) -> [0 27 16 6]", "(sums [[] [7 1 1 6] []]) -> [0 15 0]", "(sums [[9 1 3 1] []]) -> [14 0]", "(sums []) -> []", "(sums [[0 7] [6 6 5] [3 0] []]) -> [7 17 3 0]", "(sums [[7 2] [0 7 5 0] [] []]) -> [9 12 0 0]", "(sums [[6 5 2 0 0]]) -> [13]", "(sums [[1 2 8 4] [6 4 8 5 1] [4] [9 0 2] [6 2 4]]) -> [15 24 4 11 12]", "(sums [[] [8 7 0 3 9]]) -> [0 27]", "(sums [[5 2 0 1] [6 4 9 4 5] [7 4] [9 5 5] [6 2 3 1]]) -> [8 28 11 19 12]", "(sums [[7] [1 4 2 2] [2 1]]) -> [7 9 3]", "(sums [[9 8 5 9 6] [9 6 7 4 8] [5] [6 9]]) -> [37 34 5 15]", "(sums [[9 7]]) -> [16]", "(sums [[]]) -> [0]", "(sums [[6 1 7] [2 9 3 6 7] []]) -> [14 27 0]", "(sums [[1 8 7 1]]) -> [17]", "(sums []) -> []", "(sums [[5 4 9] [0 0 8] [4 2 7 0] [4 3 8] [8 8 2 1]]) -> [18 8 13 15 19]", "(sums [[1] [9 3 5]]) -> [1 17]", "(sums [[9 6 5] [1 3 4 5]]) -> [20 13]", "(sums [[1 0] [] [7 8 0 2 5] [2] []]) -> [1 0 22 2 0]", "(sums []) -> []", "(sums [[3 8 0 8 7] [2] [4] [4 2 7 9 0] []]) -> [26 2 4 22 0]", "(sums [[5 0 8 7]]) -> [20]", "(sums [[4 8 8 1]]) -> [21]", "(sums []) -> []", "(sums [[] [] [0 1] [3 6 7 5] [6 3 2 6 4]]) -> [0 0 1 21 21]", "(sums [[3 1 2 4 2] [4]]) -> [12 4]", "(sums [[0 7] [4 4 0 4]]) -> [7 12]", "(sums [[5 5 7]]) -> [17]", "(sums []) -> []", "(sums [[1 1 7 5 7]]) -> [21]", "(sums []) -> []", "(sums [[7 6 8 9] [9]]) -> [30 9]", "(sums [[0 9 6] [] [2 5]]) -> [15 0 7]", "(sums [[4 0 6 4] [0 5 6]]) -> [14 11]", "(sums [[7 3 2] [2] [7 4 1 4 0] [1 0] []]) -> [12 2 16 1 0]", "(sums [[6 2 7] [2 9 7 5 4]]) -> [15 27]", "(sums [[6 6] [2 2 7]]) -> [12 11]", "(sums [[7 1 7] [6] [2 1 7 8 1] [6 0 3] [3 8 5]]) -> [15 6 19 9 16]", "(sums [[8 7 3 3] [1 5 1 0 7] [8 2 0 3] [8 2 3] [8 0 6 4 5]]) -> [21 14 13 13 23]", "(sums [[]]) -> [0]", "(sums [[9] [7 0 5 3 0] [2 3 3 1 3] [3 2 7 7 0] [3 4 8 9 9]]) -> [9 15 12 19 33]", "(sums [[3 9 4 5 2] [1 5 8 1] [5 1 1 8 3]]) -> [23 15 18]", "(sums [[5] [7 2 1 1] [7 1]]) -> [5 11 8]", "(sums [[4 6] [5 4 7]]) -> [10 16]", "(sums [[] [9] [7 6] [4 3] [8 0 9]]) -> [0 9 13 7 17]", "(sums [[6]]) -> [6]"], "time": 0.466173, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 3 9] [5 5] []]) -> [19 10 0]", "(sums [[9] [6 1 2 6] [2 5 6 8 6] [] [9]]) -> [9 15 27 0 9]", "(sums [[2 0 2 9]]) -> [13]", "(sums [[3 8 7] [3]]) -> [18 3]", "(sums [[6]]) -> [6]", "(sums []) -> []", "(sums [[6 4] [0]]) -> [10 0]", "(sums [[] [0] [0 1 6 2] [0 2 6 6 0] [7]]) -> [0 0 9 14 7]", "(sums [[0 7] [9 4 8 1] [0 3] [3] [7 3 5 2 5]]) -> [7 22 3 3 22]", "(sums [[6 3 6 2] [5 0 8] [7 7 9 9 5] [5]]) -> [17 13 37 5]", "(sums []) -> []", "(sums [[6 8 4 3] [4 5 7] [] [2] [2]]) -> [21 16 0 2 2]", "(sums [[8 5 5 2] [] [4] [0 6 4 3 0]]) -> [20 0 4 13]", "(sums [[] [0 4 1] [2 6]]) -> [0 5 8]", "(sums [[6] [9] [6 4] [6 0 9] []]) -> [6 9 10 15 0]", "(sums [[9 8 2] [3 1 6 9 8]]) -> [19 27]", "(sums [[] [1 3] [8]]) -> [0 4 8]", "(sums [[1] [7 7 1 4] [4]]) -> [1 19 4]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 4 5 8 6]]) -> [25]", "(sums [[4 4 0] [] [5 9 4 6]]) -> [8 0 24]", "(sums []) -> []", "(sums [[8] [0 0]]) -> [8 0]", "(sums [[7 6]]) -> [13]", "(sums [[5 2 4 1 1] [9 7 1] [1] [6 0 7 2 5] [4 1 8 2 4]]) -> [13 17 1 20 19]", "(sums [[8 0 9] [2 3 4 9 0] [] [9 8 0 1] [0 4 7 3 7]]) -> [17 18 0 18 21]", "(sums [[7 8 9 7]]) -> [31]", "(sums []) -> []", "(sums [[3 1 6] [2 8 3] [7 2 2 5 0] [4 5] [0]]) -> [10 13 16 9 0]", "(sums []) -> []", "(sums [[9]]) -> [9]", "(sums [[1 5 1] [] [1] [] [6 6 7 6 8]]) -> [7 0 1 0 33]", "(sums [[9 2 5 6] [] [6 0 2 9] [7 0 4 7 0]]) -> [22 0 17 18]", "(sums [[0 9] [] [5 4]]) -> [9 0 9]", "(sums [[]]) -> [0]", "(sums [[7 1 1 1 7]]) -> [17]", "(sums [[5 1 8] [9] [3 4 8 3] [3 2 1 1] []]) -> [14 9 18 7 0]", "(sums [[5 5 7 8 9] [4 7 6 7 1] [0 5] [7 2 8]]) -> [34 25 5 17]", "(sums [[8] [9 9 8] []]) -> [8 26 0]", "(sums [[1 2 8 8] [1 5 9] [5 3]]) -> [19 15 8]", "(sums [[4 0 1]]) -> [5]", "(sums [[1 9] [6 5 4] [3 8 6 8 0] []]) -> [10 15 25 0]", "(sums [[] [6 6 3 8] [3 1] [8 7 1 2 5]]) -> [0 23 4 23]", "(sums [[2 1 0 0] [3 8 5] [8 4 8 0] []]) -> [3 16 20 0]", "(sums [[1 4 8 0 3] [7 3] [4 1 9] [9 6] [1 1 3 6 4]]) -> [16 10 14 15 15]", "(sums [[3 2] [4] [1 8 9 9 0] [1 2 5] [2 8 1]]) -> [5 4 27 8 11]", "(sums []) -> []"], "time": 0.604014, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[1] [] [9 6] []]) -> [1 0 15 0]", "(sums [[9 3 4 9] [8 1] [2] []]) -> [25 9 2 0]", "(sums []) -> []", "(sums [[4] [] [6 5 7]]) -> [4 0 18]", "(sums [[5] [8] [9] [5 8 7]]) -> [5 8 9 20]", "(sums [[7 4] [4 4 0 8 8]]) -> [11 24]", "(sums [[1 1 5 1]]) -> [8]", "(sums [[5 5 6 9 2] [3 8 3 1 1] []]) -> [27 16 0]", "(sums [[6 2 3] [3 6 1 9 7] [5 4]]) -> [11 26 9]", "(sums []) -> []", "(sums [[1 0] [8 1 6] [3 6 2 9 9] [1]]) -> [1 15 29 1]", "(sums []) -> []", "(sums [[2] [0 8 6 2]]) -> [2 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[5 9 4 0] [6 8] [] [9 7 3] [4 1]]) -> [18 14 0 19 5]", "(sums []) -> []", "(sums [[5 2 0]]) -> [7]", "(sums [[9 2 1] [2 2 9 5]]) -> [12 18]", "(sums [[0] [4] [] [3] [9 7]]) -> [0 4 0 3 16]", "(sums [[2 4] [] [3] [9 0 1]]) -> [6 0 3 10]", "(sums [[4] [8 3] [5 3 3 8 0] [3 5 2 2 2]]) -> [4 11 19 14]", "(sums []) -> []", "(sums []) -> []", "(sums [[7 8] [8 6] [7 1 8 0 8] [0 4 7 0] [8 2 7 5 2]]) -> [15 14 24 11 24]", "(sums [[] [8 1 4 5 2] [] [1 6]]) -> [0 20 0 7]", "(sums []) -> []", "(sums [[5 8 8 5]]) -> [26]", "(sums []) -> []", "(sums [[9 4 8 9 4] [1 2] [] [] [9 9 7 2]]) -> [34 3 0 0 27]", "(sums [[3 1 3] [7 6 8 1 9] [0 2] [5 6 2] [6 6 8]]) -> [7 31 2 13 20]", "(sums [[3 0 0] [5 4] [3 9 5 7] [6 0 1 8]]) -> [3 9 24 15]", "(sums [[] [9]]) -> [0 9]", "(sums [[] [4] [3 8 3 0] [5 8 0 8] [4 1]]) -> [0 4 14 21 5]", "(sums []) -> []", "(sums [[6 9] [7 4 1 7] [4 2 2 5] [6 6 6] [1 6]]) -> [15 19 13 18 7]", "(sums [[6 4] [5 1] [2 7] [3 4 0 5 0]]) -> [10 6 9 12]", "(sums []) -> []", "(sums [[4] [] [6 4 5 9] [1 9 0 2] [1]]) -> [4 0 24 12 1]", "(sums [[2 5 7] [4 7 4] [2] []]) -> [14 15 2 0]", "(sums [[5 1 3] [] [1 0 8] [2] [0 2 3 0 5]]) -> [9 0 9 2 10]", "(sums [[5 3 9 9 0]]) -> [26]", "(sums [[5 4 3]]) -> [12]", "(sums []) -> []", "(sums [[8 3 5] [3] [7] []]) -> [16 3 7 0]", "(sums [[3 5 2 3 9] [1 2 1 3] []]) -> [22 7 0]", "(sums []) -> []", "(sums [[2 4 7]]) -> [13]"], "time": 0.532049, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [8 4 4]]) -> [0 16]", "(sums [[3 6 4 3] [7 4 8 9]]) -> [16 28]", "(sums [[9] [9]]) -> [9 9]", "(sums [[8 6 6 2] [4 3 9 0] [7]]) -> [22 16 7]", "(sums [[1] [7]]) -> [1 7]", "(sums [[1]]) -> [1]", "(sums [[6 7 1 8 8] [2 4 9 6] []]) -> [30 21 0]", "(sums [[] [3 2] [4 1 9 6] [7 1 4 1] [0 0 3 8 3]]) -> [0 5 20 13 14]", "(sums [[1 3 0 4 8] [5 5 7 3 2]]) -> [16 22]", "(sums [[] [5 4 5 8 5] [2 7 2 0] [7 5]]) -> [0 27 11 12]", "(sums [[2 1]]) -> [3]", "(sums [[7 9]]) -> [16]", "(sums []) -> []", "(sums [[1 9 6 6] [] [9 6 4 4] [2 1 9 7 3]]) -> [22 0 23 22]", "(sums [[] [5 5 4] [1 6 5] [8 5 1] [5 1 8]]) -> [0 14 12 14 14]", "(sums [[4] [5 8] [2 3 9]]) -> [4 13 14]", "(sums [[] [2 3 2] [8 9 1] [9 3 4 2]]) -> [0 7 18 18]", "(sums [[5 5 1] [4]]) -> [11 4]", "(sums [[9] [] [9 9 6 8]]) -> [9 0 32]", "(sums [[6 8 1 2] [] [4 5 4 2]]) -> [17 0 15]", "(sums [[9 7 3] [] [8 8]]) -> [19 0 16]", "(sums [[2 2 1 1] [3 0 4 1] [1 6] [5 0 1] [5 6 7 7]]) -> [6 8 7 6 25]", "(sums [[] [6 8 7 6] [0 5] [6] [2 8 2 3]]) -> [0 27 5 6 15]", "(sums [[1 7 6 0] [7 7 5 8] [6 0]]) -> [14 27 6]", "(sums [[3 9 3] [0 6 1]]) -> [15 7]", "(sums [[0 5] []]) -> [5 0]", "(sums [[8 2 9] [9 7] [6 8 3 0 7] [3 8]]) -> [19 16 24 11]", "(sums [[] [1 7 0 6] [4 6] [2] []]) -> [0 14 10 2 0]", "(sums [[4 7 4] [1 5 3 5]]) -> [15 14]", "(sums []) -> []", "(sums [[5 3 9 2 0] [1 6 5] [9 8 3 5 5] [8 8 9 9 6]]) -> [19 12 30 40]", "(sums []) -> []", "(sums [[4 7 9] []]) -> [20 0]", "(sums [[4 5 4] [1 7]]) -> [13 8]", "(sums [[9 0 5 4 5] [9 2]]) -> [23 11]", "(sums [[5 5] [] [3 4 5]]) -> [10 0 12]", "(sums [[] [5 4 2 4 6]]) -> [0 21]", "(sums [[2] [1 2 4 8 3] [3 4 6 2]]) -> [2 18 15]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 5] [8 5 3] [2 0]]) -> [11 16 2]", "(sums [[] [1 2] [8 7] [9] [6 5 8 4 7]]) -> [0 3 15 9 30]", "(sums [[0 9 4 2] [4 9 1]]) -> [15 14]", "(sums [[4 1 0] [3] [1 8 9 0 4]]) -> [5 3 22]", "(sums [[6 3 6 6 8]]) -> [29]", "(sums [[] [8 2 7]]) -> [0 17]", "(sums []) -> []", "(sums [[] [7 4 8 7 5] [7]]) -> [0 31 7]"], "time": 0.485713, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 0] [1 1] [0 1 9]]) -> [3 2 10]", "(sums [[5 2 4 5 8] [] [1 9 5 0 0]]) -> [24 0 15]", "(sums []) -> []", "(sums [[8 6 6 3 2] [5 6] [5 4 5 3]]) -> [25 11 17]", "(sums [[] [7 0 7 5 6]]) -> [0 25]", "(sums [[5] [] [3]]) -> [5 0 3]", "(sums [[2 3] [7 7 7 9] [9 5 4] [9] [0]]) -> [5 30 18 9 0]", "(sums [[5] [7 3 1 3] [] [4 8] [1 3 8 5 7]]) -> [5 14 0 12 24]", "(sums [[0 3 4 7] [8 9] [5] [9 3 5 1 0]]) -> [14 17 5 18]", "(sums [[] [3 1 6 7] [7] [6] [3 5 7 2 3]]) -> [0 17 7 6 20]", "(sums [[0 2 4 9] [1 3 6 7]]) -> [15 17]", "(sums [[]]) -> [0]", "(sums [[7]]) -> [7]", "(sums [[] [5]]) -> [0 5]", "(sums [[3 9] [6 9] [2 6] [5 6 4 3 7]]) -> [12 15 8 25]", "(sums [[2 9] [0 8 7] [5 8 3]]) -> [11 15 16]", "(sums [[1 0 1 3] [1 3 3] [2 4 2 1]]) -> [5 7 9]", "(sums [[9 3 5 3 1] [8] [1 2 7 7 3] [5 8 9 5]]) -> [21 8 20 27]", "(sums [[3 1] [3 2 5 9] [8] [] [9 7 2 6]]) -> [4 19 8 0 24]", "(sums [[9 0 0 4 6] [1]]) -> [19 1]", "(sums [[6 6]]) -> [12]", "(sums [[4 6 6 6 1] [9 5 6 7] [] [8 1] [1]]) -> [23 27 0 9 1]", "(sums []) -> []", "(sums [[1 5 0] [3 4 0 3 6] [2 8 2 1 7]]) -> [6 16 20]", "(sums [[8] [4 0 5 3] [] [8 1 8 2]]) -> [8 12 0 19]", "(sums [[5 4] [9 2 6 6 3] [5 2 2 2 6] [1 0 6 6 3] [6 8 4 0 1]]) -> [9 26 17 16 19]", "(sums [[] [0 9 1 5] [8 9]]) -> [0 15 17]", "(sums [[3] [9 6]]) -> [3 15]", "(sums [[9 7] [7] [4 9 6] [9 9 7 9 7] [9 6]]) -> [16 7 19 41 15]", "(sums []) -> []", "(sums [[9 7 8] [3 3 9] [3] []]) -> [24 15 3 0]", "(sums []) -> []", "(sums [[6 4] [] [1 8 2]]) -> [10 0 11]", "(sums [[1 7 0]]) -> [8]", "(sums [[] [0 0 5 2] [0 7] [0 2 8 1 0]]) -> [0 7 7 11]", "(sums [[1 0 8 2 6] [0 8] [2 6 8 9 8] [1] [1 7]]) -> [17 8 33 1 8]", "(sums [[6 9 0] [7 7] [2 9 7 3 8] [3 4] [2 2 4 8]]) -> [15 14 29 7 16]", "(sums []) -> []", "(sums [[] [8 8 8] [2 6] [1 8 3] [8 2 4 0 6]]) -> [0 24 8 12 20]", "(sums [[0 8] [4 5]]) -> [8 9]", "(sums [[6 9 8 0 9] []]) -> [32 0]", "(sums [[6] [5 6 3 0 5] [1 8 4 9] [7 3 8 0 2]]) -> [6 19 22 20]", "(sums [[]]) -> [0]", "(sums [[1 8 2 5 7] [5]]) -> [23 5]", "(sums [[4 9] [3 8 3] [2 6 9] [7 6] [0 9 6]]) -> [13 14 17 13 15]", "(sums []) -> []", "(sums [[8 0 1 6 0] [4] [7 6 9 7] [1 7 5 5 8] [4 7 3 3 1]]) -> [15 4 29 26 18]", "(sums [[0] [2]]) -> [0 2]"], "time": 0.60279, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[6 3 6] [2 5 3] [8 1 5 6] [4 1 7] [7 2]]) -> [15 10 20 12 9]", "(sums []) -> []", "(sums [[0 1 7] [8 8 6] [8 0 3 1]]) -> [8 22 12]", "(sums [[0 3 4 0] [3] [4 7 4 0 8] [0 4 0]]) -> [7 3 23 4]", "(sums [[0 9 7] []]) -> [16 0]", "(sums []) -> []", "(sums [[7 4 9] [1 5] [6] [5 1 5 2 9] [7 3]]) -> [20 6 6 22 10]", "(sums [[2 6 2 3] [3 3 9 1]]) -> [13 16]", "(sums [[] [9 6 7 7] [9 1 4 3]]) -> [0 29 17]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 9 1 7]]) -> [19]", "(sums [[8 7 8 1 8] [6]]) -> [32 6]", "(sums []) -> []", "(sums [[] [4 3] [4] [6]]) -> [0 7 4 6]", "(sums [[4 1 3 1 9] [8 4 9 2 3] [] [] []]) -> [18 26 0 0 0]", "(sums [[5 5] [8 7 2 5] [] [6 3 9 9 9] [0]]) -> [10 22 0 36 0]", "(sums []) -> []", "(sums [[1 2 5 8 5] [] []]) -> [21 0 0]", "(sums [[]]) -> [0]", "(sums [[6 1] [7 7] [3 0 6 5 8] [2 9 2]]) -> [7 14 22 13]", "(sums [[6 5] [5 4 0 9]]) -> [11 18]", "(sums [[2 1 3 2] [] [0 2 7 8 6] [0 1] [6 2 1 7]]) -> [8 0 23 1 16]", "(sums [[1] [6 6 7 3 3]]) -> [1 25]", "(sums [[1 0] [] [7 2 8 1 1]]) -> [1 0 19]", "(sums [[] [0 0 4 6 5] []]) -> [0 15 0]", "(sums [[9 9 7] [5 8 9 0 2] []]) -> [25 24 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [3 9 7] [1 9 2 1] [2] []]) -> [0 19 13 2 0]", "(sums []) -> []", "(sums [[8 9 8 2 0] [] [3 3 7 3 7] [5 4 7 5 7] []]) -> [27 0 23 28 0]", "(sums [[5 3 7 1 4]]) -> [20]", "(sums [[3 0 8 0 8] [5 9] [5 4 1 6] [1 6 4 2] [8 7 7 0 5]]) -> [19 14 16 13 27]", "(sums [[4 8 6 1] []]) -> [19 0]", "(sums [[5 3] [4 6 9 5] [0 6 8] [5 3 3] [5 2 7 1]]) -> [8 24 14 11 15]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[] [6 2 1 1 4] [9 1 9]]) -> [0 14 19]", "(sums [[7 5]]) -> [12]", "(sums [[1 8 2 0 5] [5 1]]) -> [16 6]", "(sums [[7] [0 4 8 5]]) -> [7 17]", "(sums [[8] []]) -> [8 0]", "(sums [[7 1 2] [3] [4]]) -> [10 3 4]", "(sums [[9 9 9] [0 0 3 3] [3 4 7] [9] []]) -> [27 6 14 9 0]", "(sums []) -> []", "(sums [[3 6] [] [8 7 3] [6 5 7] [6]]) -> [9 0 18 18 6]", "(sums [[4 7] [0 2 5] [7 3]]) -> [11 7 10]"], "time": 0.591666, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 5 6] [0 3 4 8 7] [0 8 3 6 1] [] [9 7]]) -> [14 22 18 0 16]", "(sums [[3 9 4 3] [7]]) -> [19 7]", "(sums [[6 0 3] [] []]) -> [9 0 0]", "(sums [[] [7] []]) -> [0 7 0]", "(sums []) -> []", "(sums [[3 5 6] [2] [1 0 1 0 8] [9] []]) -> [14 2 10 9 0]", "(sums [[4 4 5] [7 4 9] [2 0]]) -> [13 20 2]", "(sums [[1 2 8 9 1] [7 1 7 2] [4 7 0 9 4] [0 7 6 2 8] []]) -> [21 17 24 23 0]", "(sums [[8 3 0 9 9] [8 3 0 3] [6 1] [9 0 2]]) -> [29 14 7 11]", "(sums [[6 1 7 0 2] [0 1 6 8] [1 1 4 5] []]) -> [16 15 11 0]", "(sums [[5 2 2] [9] [8 3 8] [8 2 3 1 8]]) -> [9 9 19 22]", "(sums [[3 3]]) -> [6]", "(sums [[7] [5 1 2 2 8] [2 9 6 4] [] [8 8]]) -> [7 18 21 0 16]", "(sums []) -> []", "(sums [[3]]) -> [3]", "(sums [[4 4 5 5 7] [0 4] [3 9 8 3 9] [9 7 8 1 3]]) -> [25 4 32 28]", "(sums [[9] [0 7 3 8] [7 0 5 1 7] [3 1] [6 4 8]]) -> [9 18 20 4 18]", "(sums [[7 8 6 0 8] [5 1 1 0]]) -> [29 7]", "(sums [[7 0] [1 6] []]) -> [7 7 0]", "(sums [[2 2] [3] [6 2 0 3 8] [2 0 4] [8 5 0 9]]) -> [4 3 19 6 22]", "(sums [[6 6 6 9] [2] [7 6 3 8 5] [7 3] [7 2 2 6]]) -> [27 2 29 10 17]", "(sums [[7 5 6 4] [7]]) -> [22 7]", "(sums [[4] [0 5 7 3]]) -> [4 15]", "(sums [[7 8 6] [1 8 0 0]]) -> [21 9]", "(sums []) -> []", "(sums [[1 8] [1 8 0 5 7]]) -> [9 21]", "(sums [[1 3 3 8 2]]) -> [17]", "(sums [[5 4] [8 4 9]]) -> [9 21]", "(sums [[0 8 6] [6 5 9 2 7] [9] [1 2 8 4] [5 4]]) -> [14 29 9 15 9]", "(sums [[8] [3] [3 2 7 0]]) -> [8 3 12]", "(sums [[] [1]]) -> [0 1]", "(sums [[9 8 5 4] [6] [0]]) -> [26 6 0]", "(sums [[7 8] [2] [0 5] [3 1] []]) -> [15 2 5 4 0]", "(sums [[6 3 7] [2 1 3 6] [8 5 3] [2] [5 9 9 3]]) -> [16 12 16 2 26]", "(sums [[2 8] [9 8]]) -> [10 17]", "(sums [[5 2] [5 0] [7 8]]) -> [7 5 15]", "(sums [[2 8] [1 1 8 2] [4 7 0 1] [9 8]]) -> [10 12 12 17]", "(sums [[7 4 9 2]]) -> [22]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[8 0] [4 3] [1 1] []]) -> [8 7 2 0]", "(sums [[0 4 6] [4] [8] [0 5 2]]) -> [10 4 8 7]", "(sums [[7 7 8 0 1] [6] [4]]) -> [23 6 4]", "(sums [[6] [0 2] [6 1 9 0 1]]) -> [6 2 17]", "(sums []) -> []", "(sums [[8 4 3 6 7] [4] [0] [5 1 0 8]]) -> [28 4 0 14]", "(sums [[5]]) -> [5]"], "time": 0.636169, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 0 4 7] [6 7] [] []]) -> [18 13 0 0]", "(sums [[3 7] [6 3] [8 9 7 9] [] [2]]) -> [10 9 33 0 2]", "(sums []) -> []", "(sums [[7 7] [] [1]]) -> [14 0 1]", "(sums [[0 1 8 9 8]]) -> [26]", "(sums [[2 9] [8 1 3] [6]]) -> [11 12 6]", "(sums [[8] [0 7 6] [2 6 6]]) -> [8 13 14]", "(sums [[0 6 1 1 0] [5 4] [2 2 0] [9] [6]]) -> [8 9 4 9 6]", "(sums [[] [3] [8] [1 9 1 5] [7]]) -> [0 3 8 16 7]", "(sums [[] [4] [8]]) -> [0 4 8]", "(sums [[4 5] [1]]) -> [9 1]", "(sums [[7 8] [7 6]]) -> [15 13]", "(sums [[0 7] [0 3] [8 1] [0 0 8]]) -> [7 3 9 8]", "(sums []) -> []", "(sums [[] [] [6 8 8 4 2] [2 4 7 3] [8 1 8 9 6]]) -> [0 0 28 16 32]", "(sums [[4 0] [2 6 1 8] [8 6] [5 7 5 3 1] [6 8]]) -> [4 17 14 21 14]", "(sums [[8 4] [0] [] [8 2]]) -> [12 0 0 10]", "(sums []) -> []", "(sums [[4 7] []]) -> [11 0]", "(sums [[] [3 0 2] [2]]) -> [0 5 2]", "(sums [[3 4 1] [4 4 4 8] [2 0 8 6] [0 8 2 8 0] []]) -> [8 20 16 18 0]", "(sums []) -> []", "(sums [[1 0] [8] [1 7]]) -> [1 8 8]", "(sums []) -> []", "(sums [[0 0 0 7 2] [1 9]]) -> [9 10]", "(sums []) -> []", "(sums [[] [9 8 6 2] [6 2 3] [9 5 9 0 0] [8 9 1]]) -> [0 25 11 23 18]", "(sums [[7 9 9 7 3] [] [] [0 2 0 1] [3 1 8 1 2]]) -> [35 0 0 3 15]", "(sums [[8 0 0 7 4] [3 8 9] [0]]) -> [19 20 0]", "(sums [[6 8 5 6]]) -> [25]", "(sums [[2 8 2 9] [9 0 6 5] [9 6 2 6 2] [] [7 0 0]]) -> [21 20 25 0 7]", "(sums [[] [] [2 2 1] [7]]) -> [0 0 5 7]", "(sums [[0 9] [4] [6 2 2 0 3] [1 2 4 3] [3 9]]) -> [9 4 13 10 12]", "(sums [[3 2 2]]) -> [7]", "(sums [[8 6]]) -> [14]", "(sums [[5] [0 4 4 9 2]]) -> [5 19]", "(sums [[4] [2 4 4 2] [] [3 1 2] [6 6 9 6 4]]) -> [4 12 0 6 31]", "(sums [[1 4 1] [4 3 1] [9 3 6 7] [2 2]]) -> [6 8 25 4]", "(sums [[2 0] [0 3] [2 8 6 5 5] [3] []]) -> [2 3 26 3 0]", "(sums [[0 7 2 6 6] [4 5]]) -> [21 9]", "(sums []) -> []", "(sums [[5 7 4 8] [2 8 3 5] [3 7] [1 5] [8 7 7]]) -> [24 18 10 6 22]", "(sums [[] [6 9 0 7] [1] [2 3 0]]) -> [0 22 1 5]", "(sums [[] [6 0 2 3]]) -> [0 11]", "(sums [[8 2 1 2] [1 9] [] [2 3 2 6 1]]) -> [13 10 0 14]", "(sums [[7 6 8]]) -> [21]", "(sums []) -> []", "(sums [[9 6 9 5 9] [4 6 2]]) -> [38 12]"], "time": 0.57668, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[6 5 7 7 8] [1 1] [4 3]]) -> [33 2 7]", "(sums [[6 0 9] [2 5 9 3 1] [0]]) -> [15 20 0]", "(sums [[9]]) -> [9]", "(sums [[3 1 7 9 8] [7 3 6 1 5] [7]]) -> [28 22 7]", "(sums [[9 1]]) -> [10]", "(sums [[5 4 6 9 0] [8 1] [8]]) -> [24 9 8]", "(sums [[8 6] [2] [3] [0 3] []]) -> [14 2 3 3 0]", "(sums []) -> []", "(sums [[0 1] [5] [] [2] [4]]) -> [1 5 0 2 4]", "(sums [[0 0]]) -> [0]", "(sums [[] [8 1] [0 2 9 7] [0 9]]) -> [0 9 18 9]", "(sums [[8] [6 7 9 2] [5 2]]) -> [8 24 7]", "(sums [[] [9 0 5]]) -> [0 14]", "(sums [[9] [2 7 6 0 0] [3] [9] [2 5 0 7 1]]) -> [9 15 3 9 15]", "(sums [[1 3 5] [] [] [] [8 4 3 8 4]]) -> [9 0 0 0 27]", "(sums [[6] [] [1 3 2 8] [7 3 5] [6 5 9 8 0]]) -> [6 0 14 15 28]", "(sums [[5 2 5 2] [5]]) -> [14 5]", "(sums [[8 1 5 0] [6 7 0 2]]) -> [14 15]", "(sums [[8 9 4 0] [] [5 9 3 0 3] [3]]) -> [21 0 20 3]", "(sums [[2 9 5] [6] [] [2 7] [3 5 2 1]]) -> [16 6 0 9 11]", "(sums [[6 0 0 4 9]]) -> [19]", "(sums [[9 2 4] []]) -> [15 0]", "(sums [[] [6 3] [5 7 1]]) -> [0 9 13]", "(sums [[2 8 5 5 1] [0 5 4] [7] [1 1 0 7] []]) -> [21 9 7 9 0]", "(sums [[0] [3 5 6 9] [3 1] []]) -> [0 23 4 0]", "(sums [[2 9] [9 6]]) -> [11 15]", "(sums [[3 6 1 2] [] [1] [6 5 7 7 8] [1 3]]) -> [12 0 1 33 4]", "(sums [[4 8 1 9]]) -> [22]", "(sums [[5 8 4 5] [5 9] [8 8 5 7]]) -> [22 14 28]", "(sums [[4 9] [] [3 5 1 6] [8 1 2 7] [2]]) -> [13 0 15 18 2]", "(sums [[4] [4]]) -> [4 4]", "(sums [[7 0 1 1 3] [8]]) -> [12 8]", "(sums [[8] [9 0 3] [2] [2 5]]) -> [8 12 2 7]", "(sums [[8] [6 3 2] [6 4 8] [1 7] [9 7]]) -> [8 11 18 8 16]", "(sums []) -> []", "(sums [[] [3 5 8]]) -> [0 16]", "(sums [[5 6 1 1] [0]]) -> [13 0]", "(sums []) -> []", "(sums [[6 3 2] []]) -> [11 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [0] [3 8] [0 2 2 1 6] [9 1 3 1]]) -> [0 0 11 11 14]", "(sums []) -> []", "(sums [[2 2] [4 2 6] [8] [0]]) -> [4 12 8 0]", "(sums [[0 5 5 1 9] []]) -> [20 0]", "(sums [[5] [4 8 3] []]) -> [5 15 0]", "(sums []) -> []", "(sums [[] [] []]) -> [0 0 0]"], "time": 0.619237, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7] [4 3 2 5] [9 0 9 3]]) -> [7 14 21]", "(sums [[9 5 2 2 7] [3 6 5 6] [] [1 4 7 8 7]]) -> [25 20 0 27]", "(sums [[3 0 7 9] [4] [5 4] [8 1] []]) -> [19 4 9 9 0]", "(sums []) -> []", "(sums [[0 0 9 3 4] [4 9 0 4 3] [5 8 7 1]]) -> [16 20 21]", "(sums [[4] [6 6 8 4 1] [9 6] [9] [9 8 0]]) -> [4 25 15 9 17]", "(sums [[]]) -> [0]", "(sums [[] [5 5] [5 6 5 3]]) -> [0 10 19]", "(sums [[7 2 2 9] [0 2 0] [9 2 5]]) -> [20 2 16]", "(sums [[] [2 7 6 3] [4] [5] [8]]) -> [0 18 4 5 8]", "(sums [[4] [7 9 7 3 9] [3 6 3 5] [0 0 1 7 9] [4]]) -> [4 35 17 17 4]", "(sums []) -> []", "(sums [[1 3 7] [] [4 2 0]]) -> [11 0 6]", "(sums [[7 3 1] [8 0 8] [0 3 2 7]]) -> [11 16 12]", "(sums [[5 9]]) -> [14]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[3]]) -> [3]", "(sums [[0 3 4 4 8]]) -> [19]", "(sums [[5 2 3 0 5]]) -> [15]", "(sums []) -> []", "(sums [[0 2 6 8 1] [4 2 6] []]) -> [17 12 0]", "(sums []) -> []", "(sums [[9 1 5 9] [5 6 4 2]]) -> [24 17]", "(sums []) -> []", "(sums [[7 3 8 6] [3 0]]) -> [24 3]", "(sums [[9 0] [7 0 4 4] [2 8]]) -> [9 15 10]", "(sums [[2 0 9 1 3] [] [2 1 6] []]) -> [15 0 9 0]", "(sums [[3 1 5 4] [] [6 0 8 7 5] [3 7 3]]) -> [13 0 26 13]", "(sums [[0 2]]) -> [2]", "(sums [[7 5 0 4]]) -> [16]", "(sums [[6 1 3 6 8] [2 5 7 7] [7 9 5] [6]]) -> [24 21 21 6]", "(sums [[3 8 0] []]) -> [11 0]", "(sums [[1 3 0 7 8] [1 9 8 1]]) -> [19 19]", "(sums []) -> []", "(sums [[] [3] [6 5 5] [6 5 0 1 6]]) -> [0 3 16 18]", "(sums [[0 7 8 2]]) -> [17]", "(sums [[4]]) -> [4]", "(sums [[9 5 0] [] [2 1 1] [6 5 9 6]]) -> [14 0 4 26]", "(sums [[1 4 4 1] [3 1 4] [3 6 5 4 8]]) -> [10 8 26]", "(sums [[8 4 2 7 9] [2 9] [1] [8] [6 3 1 7]]) -> [30 11 1 8 17]", "(sums [[0 0 5 0 0] [7] [2 0]]) -> [5 7 2]", "(sums [[5 0 6 4 9] [5 6 7] [9] [7]]) -> [24 18 9 7]", "(sums [[2 7 5 7 4] [1 1 9] [] [4 9] [8 1]]) -> [25 11 0 13 9]", "(sums [[5 3] [9 4 2 8 5] [2 8] [2 2 2] [4 4 3 7]]) -> [8 28 10 6 18]", "(sums [[6 4 3 7] [1 2 2 4 6] [5 9] [6 3]]) -> [20 15 14 9]", "(sums [[0 7 1]]) -> [8]", "(sums [[4 1] [3 0 2] [] [3 9 9]]) -> [5 5 0 21]"], "time": 0.429179, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[5 9 7 2]]) -> [23]", "(sums [[6 6 3 7 7] [9 1 4 3 3] [9] [5] [3 6 6 6]]) -> [29 20 9 5 21]", "(sums [[] [2]]) -> [0 2]", "(sums [[1 9 6 4 0]]) -> [20]", "(sums [[9 7 1] [8 3 2 1] [1 9 3 6 5] [5 3 3 1 0]]) -> [17 14 24 12]", "(sums [[9 8 5] [] [4] [8]]) -> [22 0 4 8]", "(sums []) -> []", "(sums [[5 2 4] [4 9 6 3] [] [2 0 5 7 8] [6 0 1]]) -> [11 22 0 22 7]", "(sums [[9 1]]) -> [10]", "(sums []) -> []", "(sums [[4 7 2] [9 8 6 2 7] [7 1] [1 2 5 3 2]]) -> [13 32 8 13]", "(sums [[6 7 0 9] [9 3 3 6] [6 0] [9 5 3] [4 9]]) -> [22 21 6 17 13]", "(sums []) -> []", "(sums []) -> []", "(sums [[5 1 6 8 9] [0 8] [5]]) -> [29 8 5]", "(sums [[1 6 5 8] [2] [5 4 7]]) -> [20 2 16]", "(sums [[2 0]]) -> [2]", "(sums [[5 7 0] [9 3 7 0 0] [2 8 8 2 2] [6 6 5 3] [6]]) -> [12 19 22 20 6]", "(sums []) -> []", "(sums [[] [4]]) -> [0 4]", "(sums [[5 3 1] [1 3 6] [5 4 6 1 2] [7 4]]) -> [9 10 18 11]", "(sums [[9] [4 3 4] [2 5]]) -> [9 11 7]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[4] [4 1 7] [8 9] [0 0 7]]) -> [4 12 17 7]", "(sums [[0 5 7 9 6] [6 4 9] []]) -> [27 19 0]", "(sums [[3 7 7 4 5] [8] [7] [9 0 1]]) -> [26 8 7 10]", "(sums [[6 5 9 9] [5 2]]) -> [29 7]", "(sums [[] [9] [9 6 6 3] [1 7] []]) -> [0 9 24 8 0]", "(sums [[0 7 3 8 9] [] [5 1 9] [6 1 9] []]) -> [27 0 15 16 0]", "(sums []) -> []", "(sums [[3 8 3 4 2] [6] [7] [6]]) -> [20 6 7 6]", "(sums [[] [9 5] [3 1] [3 1 1]]) -> [0 14 4 5]", "(sums []) -> []", "(sums [[] [0 4 4]]) -> [0 8]", "(sums [[0 4 2 5] [1 0 7] [2 6 8]]) -> [11 8 16]", "(sums [[8 3 6 5 1] [6 1 6] [] [3 7 1]]) -> [23 13 0 11]", "(sums [[1] [] [1 9 8]]) -> [1 0 18]", "(sums [[5] [] [7 8 4 4 3] [1 6 4 3] [1 6]]) -> [5 0 26 14 7]", "(sums []) -> []", "(sums [[] [3 0 4 3]]) -> [0 10]", "(sums []) -> []", "(sums [[5 0 8 5 5]]) -> [23]", "(sums [[8 9 5 1] [4 4] [3 7 5 3]]) -> [23 8 18]", "(sums [[9 0 4] [1 1 9 9 8] [6 8 5] [0 2 5 2]]) -> [13 28 19 9]", "(sums [[] [9] [] [1] []]) -> [0 9 0 1 0]", "(sums [[0 1]]) -> [1]"], "time": 0.495212, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[9]]) -> [9]", "(sums [[7 4] [5 0 3 2 0]]) -> [11 10]", "(sums [[] [9 9 1 8 1]]) -> [0 28]", "(sums []) -> []", "(sums [[3 8 8] [3 5 6]]) -> [19 14]", "(sums [[4 6 7 0 3]]) -> [20]", "(sums [[4 4 5 0] [4 2 3]]) -> [13 9]", "(sums []) -> []", "(sums [[8 5 2] [1 2 4 1 2] [5]]) -> [15 10 5]", "(sums [[] [3 0 7 3 3]]) -> [0 16]", "(sums [[7 8 3 7] [8 7 5 0 5]]) -> [25 25]", "(sums [[5 1] [9 2 1] [0 1]]) -> [6 12 1]", "(sums [[4 1 6] [6] [3 5 3] [5 8] [3 3 7 3]]) -> [11 6 11 13 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [3 0 7] [1 7 3] [] [5 5 8]]) -> [0 10 11 0 18]", "(sums [[6 0 5 1 2] [] [5 3 1]]) -> [14 0 9]", "(sums []) -> []", "(sums [[] [9] [] [9 6]]) -> [0 9 0 15]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[2 4 4] [3 0]]) -> [10 3]", "(sums [[8] [1 8 3 4 6] [3] [3 6]]) -> [8 22 3 9]", "(sums [[] [] [5 8 9]]) -> [0 0 22]", "(sums [[0 3 6 3 7]]) -> [19]", "(sums [[9]]) -> [9]", "(sums [[0 5 2 0]]) -> [7]", "(sums []) -> []", "(sums [[] [8] [7 1 0 0] [6]]) -> [0 8 8 6]", "(sums [[4] [9 6 5 8] [4 6]]) -> [4 28 10]", "(sums [[1 1 9 0] [5 5] [8 1] [8 8 8 1]]) -> [11 10 9 25]", "(sums [[4] [9 4 6] [8 6 5] []]) -> [4 19 19 0]", "(sums []) -> []", "(sums [[3 1 2 5 9] [] [6] [] [6]]) -> [20 0 6 0 6]", "(sums [[1] [3 3 3]]) -> [1 9]", "(sums []) -> []", "(sums []) -> []", "(sums [[0] [7 2 8 7 5] [] [1 6 4 6 3]]) -> [0 29 0 20]", "(sums [[5 0 3 8 6] [2 0 4] [2 2 6] []]) -> [22 6 10 0]", "(sums [[2 8 7 6] [5 7 9 6 1] [7] [7 6]]) -> [23 28 7 13]", "(sums [[0]]) -> [0]", "(sums [[4] [6] [9 3] [8 3 1]]) -> [4 6 12 12]", "(sums []) -> []", "(sums [[] [2 9 5 9] [9] [1 5 6 4 8]]) -> [0 25 9 24]", "(sums [[7 9 0] [8 2 7] [] [8 5 3 7 1]]) -> [16 17 0 24]", "(sums [[6]]) -> [6]", "(sums [[7 5 9] [] [8 2]]) -> [21 0 10]", "(sums [[0] [9 2 2 1 9]]) -> [0 23]"], "time": 0.465208, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[9 7 9 9 8] [3] [1 8]]) -> [42 3 9]", "(sums [[1]]) -> [1]", "(sums [[6 2 9]]) -> [17]", "(sums []) -> []", "(sums [[7 9] [2 6 2 3] [5 4 9 3] [4 6 4 5] [7 4]]) -> [16 13 21 19 11]", "(sums [[] [6 5 3 6 6] [] [3 0 1 8]]) -> [0 26 0 12]", "(sums [[9 5 7 4] [5] [8 5 2 4]]) -> [25 5 19]", "(sums [[] [0 7 2 5]]) -> [0 14]", "(sums [[0 2] [4 3 5]]) -> [2 12]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[8 2 6 7]]) -> [23]", "(sums [[2 3] [9 8 4] [3 0]]) -> [5 21 3]", "(sums []) -> []", "(sums [[2 2 2] [9 2 0 7 5] [1 3 2 0]]) -> [6 23 6]", "(sums [[9 9 1 5 8] [2 5 1 1 8] [] [6 6 9 3] [3 2 5 3 5]]) -> [32 17 0 24 18]", "(sums []) -> []", "(sums [[4 8 7 9] [5 8 3 7 0]]) -> [28 23]", "(sums [[6 6] [0 1 8 9] [1 5 3] []]) -> [12 18 9 0]", "(sums [[5] [1 0 7 8 2] [6] []]) -> [5 18 6 0]", "(sums [[9]]) -> [9]", "(sums [[] [0 6]]) -> [0 6]", "(sums [[6 6 4 8] [7 9 1 9] [1 2 2] [0 0] [0 8 8 7]]) -> [24 26 5 0 23]", "(sums [[9] [1 0 7]]) -> [9 8]", "(sums [[9 2 7 3] [0 6] [1 7 6] [6 8] [3 2 8 8 2]]) -> [21 6 14 14 23]", "(sums [[]]) -> [0]", "(sums [[6 9 2 5] [5 1 6 8 2] []]) -> [22 22 0]", "(sums [[3] [2 4 7 8] [9]]) -> [3 21 9]", "(sums []) -> []", "(sums [[] [9]]) -> [0 9]", "(sums [[0] [3 1 6] [6] [4 9] [5 8 0 6]]) -> [0 10 6 13 19]", "(sums []) -> []", "(sums [[0] [] [8 4 7] [3 9 7]]) -> [0 0 19 19]", "(sums []) -> []", "(sums [[3 2 1 2] [] [8 2 3 7] [0 7 3 8 6]]) -> [8 0 20 24]", "(sums [[0 6] [7] [6 3 7 4] [3] [1]]) -> [6 7 20 3 1]", "(sums [[6 7]]) -> [13]", "(sums []) -> []", "(sums [[3 5 7]]) -> [15]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[4 7 5 7 2] [5 1 9]]) -> [25 15]", "(sums [[0] [4 4 0]]) -> [0 8]", "(sums [[3 0] [3 0 6]]) -> [3 9]", "(sums [[6 3] [7 3 8 6]]) -> [9 24]", "(sums []) -> []", "(sums []) -> []", "(sums [[0 7 2 8 6] []]) -> [23 0]"], "time": 0.500804, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[9 3 8 6 7] [0 9]]) -> [33 9]", "(sums [[2 3 0 7]]) -> [12]", "(sums []) -> []", "(sums []) -> []", "(sums [[4 5] [1 8]]) -> [9 9]", "(sums [[4 5 1] [1 6] [1 1 4 3] [6]]) -> [10 7 9 6]", "(sums [[7 9 7 0] [1 0] [] [1 0 4 4 2]]) -> [23 1 0 11]", "(sums [[4 3] [0 0 1 9 2]]) -> [7 12]", "(sums [[8]]) -> [8]", "(sums [[6 6 7 5 8] [1 3 8 5]]) -> [32 17]", "(sums [[] [7 6 2 5 9] [2 1] [7 9] [5 1 1 1]]) -> [0 29 3 16 8]", "(sums [[2 9 3 0] [7 7] [1 1 2 5] [7 2 5 0 9]]) -> [14 14 9 23]", "(sums [[9 2 0] [0 9 2 6] [4 1 1 8 1]]) -> [11 17 15]", "(sums []) -> []", "(sums [[1 9 0] [1 4] [0 4]]) -> [10 5 4]", "(sums [[9 1 4]]) -> [14]", "(sums [[0] [3] [4 3 0]]) -> [0 3 7]", "(sums [[9 8 1 0]]) -> [18]", "(sums [[0 9]]) -> [9]", "(sums []) -> []", "(sums [[3] [5] [7]]) -> [3 5 7]", "(sums []) -> []", "(sums [[4 3 3]]) -> [10]", "(sums [[8 7] []]) -> [15 0]", "(sums [[0 7 3]]) -> [10]", "(sums [[6 5 0 1] [] [7 5 6 4 2] []]) -> [12 0 24 0]", "(sums [[6 1 7]]) -> [14]", "(sums [[2 7 2 2] [2 0 6] [6 2 2 8 2] [7 7 5 7] [6 9 1 3]]) -> [13 8 20 26 19]", "(sums [[] [3]]) -> [0 3]", "(sums [[5 3 8] [9 3] [3] [] [6 8]]) -> [16 12 3 0 14]", "(sums []) -> []", "(sums [[1] [5 9] [2 6] [5 6 9]]) -> [1 14 8 20]", "(sums [[7] [3 6 6 1 7] [3 8 3 2 2] []]) -> [7 23 18 0]", "(sums [[9 7 5 9] []]) -> [30 0]", "(sums [[6 4 6 7] []]) -> [23 0]", "(sums [[] [] []]) -> [0 0 0]", "(sums [[2 0] [1 8] [1 2 7 1]]) -> [2 9 11]", "(sums [[5] [3 7 1 7] [3 3 3 4]]) -> [5 18 13]", "(sums [[5 6 6 0 6] []]) -> [23 0]", "(sums [[9] [] [] [6 7 1 5 3]]) -> [9 0 0 22]", "(sums [[5 4 1 8 9] [9 2 2 8] [2 1 6 4 4] [7 5 8] [4 4 6 3]]) -> [27 21 17 20 17]", "(sums [[] []]) -> [0 0]", "(sums [[7] [9] [0 1 2 1 8]]) -> [7 9 12]", "(sums [[] [4 2 4 3] [6 5]]) -> [0 13 11]", "(sums [[7] [3 9 7 1 6]]) -> [7 26]", "(sums [[6 5 9 6 6]]) -> [32]", "(sums [[0 0] [4 7 1 5] [9 2 7 7] [8]]) -> [0 17 25 8]", "(sums []) -> []"], "time": 0.427636, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2 7] [7 7 5 6] [9 5 0] [] [8 9 4 0 7]]) -> [9 25 14 0 28]", "(sums [[6 2 0 3 0] [6 2] [6 2 3]]) -> [11 8 11]", "(sums []) -> []", "(sums [[6 3 1 0 4] [6]]) -> [14 6]", "(sums [[4 9 7 7 1]]) -> [28]", "(sums [[] [6 5 0 6 7] [1 1 4 2]]) -> [0 24 8]", "(sums [[]]) -> [0]", "(sums [[2 5 6 0 2] [8] [7 3 6 7 9]]) -> [15 8 32]", "(sums [[6 8 9 5 7]]) -> [35]", "(sums [[5 8]]) -> [13]", "(sums [[3 8 8 9 8] [0 4 8]]) -> [36 12]", "(sums [[8] [1 7] [6 0 2 6 6] [6]]) -> [8 8 20 6]", "(sums [[0 3 4] [2 3 4 4 2]]) -> [7 15]", "(sums [[1 6 5] []]) -> [12 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[1 1 6 2]]) -> [10]", "(sums []) -> []", "(sums [[4 7 4 0] [4 3 2 8] [0 2 1]]) -> [15 17 3]", "(sums [[9 8 0 9 3]]) -> [29]", "(sums [[4] [3 5 3]]) -> [4 11]", "(sums [[5] [1] [9]]) -> [5 1 9]", "(sums [[5 2 9 1 0] [2 2 7 3 3] [0 7] [9] [9 2 8]]) -> [17 17 7 9 19]", "(sums [[6 9] [] [5 0] [3 2 0 9 1] [7 1 2 1]]) -> [15 0 5 15 11]", "(sums [[6 0 9] [6 3 5 1] [] [0] [3 5 4]]) -> [15 15 0 0 12]", "(sums [[7 1 9 3] [6 1] [0 8 7 1 5]]) -> [20 7 21]", "(sums []) -> []", "(sums [[2 1 6] [6] [0 8] []]) -> [9 6 8 0]", "(sums [[3] [1 2 5] [] [9 0 8] [5 5]]) -> [3 8 0 17 10]", "(sums [[7 9 6] []]) -> [22 0]", "(sums [[5 9 8 3 9] [7 8] [7] [4 2 8 5 8] [3]]) -> [34 15 7 27 3]", "(sums [[0 1 6] [3 5 9 1 3] [2 0 1 7] [3 5 2 7]]) -> [7 21 10 17]", "(sums [[8 4 1 4 7] [1 2]]) -> [24 3]", "(sums [[3 4 5 5 8] [1 4 0 1]]) -> [25 6]", "(sums [[9] [1 4] [8 1] [7 2 3 1]]) -> [9 5 9 13]", "(sums [[2 5 8] [2] [6 6 5]]) -> [15 2 17]", "(sums [[5 4 1 7 4]]) -> [21]", "(sums [[2]]) -> [2]", "(sums []) -> []", "(sums [[] [3 2] [0 3 4 1] []]) -> [0 5 8 0]", "(sums [[3]]) -> [3]", "(sums [[1] [5 4 6] [8] [6 4 1 1] []]) -> [1 15 8 12 0]", "(sums [[1 6 3] [9] [0 0 7] [7 8 3] []]) -> [10 9 7 18 0]", "(sums [[9 1 3]]) -> [13]", "(sums []) -> []", "(sums [[3 5 9 7] [6 1] []]) -> [24 7 0]", "(sums [[]]) -> [0]", "(sums [[6 8 7 9] [2 0 8 3] [7 6 4 2 9]]) -> [30 13 28]"], "time": 0.479262, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[8 8]]) -> [16]", "(sums [[2 6 2] [4] [3 1 3]]) -> [10 4 7]", "(sums [[] [1 3 6]]) -> [0 10]", "(sums [[7 2 1 5 9] [7 3 7 9 1] [] [5 0 8 1 8] []]) -> [24 27 0 22 0]", "(sums [[1 9] [6 2] [2] [4 3] [4]]) -> [10 8 2 7 4]", "(sums [[7]]) -> [7]", "(sums [[4 8 4 1] [4]]) -> [17 4]", "(sums []) -> []", "(sums [[2 7 1] [3]]) -> [10 3]", "(sums [[6 2] [0 7 9] [9] [5 2 1 2 3] [5 5]]) -> [8 16 9 13 10]", "(sums [[1 3 0 5 6] [8]]) -> [15 8]", "(sums [[6 6 5 3 9]]) -> [29]", "(sums [[0 5] [0 2 1 7 8] [6 8 2]]) -> [5 18 16]", "(sums [[1 8 6] [] [8 4]]) -> [15 0 12]", "(sums [[5] [1 2 9 1] [7] [3 8 5 5 3] [8]]) -> [5 13 7 24 8]", "(sums [[3]]) -> [3]", "(sums [[7] [3 6 3 7 0] [4 0 6 6] [0 6 5 0]]) -> [7 19 16 11]", "(sums [[1 1 2 2 6] [3 1 0 7]]) -> [12 11]", "(sums [[3 8 4] [] []]) -> [15 0 0]", "(sums [[6] [2 5 3 4 9] [2] [9]]) -> [6 23 2 9]", "(sums [[6 2] [6 5 7 8]]) -> [8 26]", "(sums [[3] [4] [7]]) -> [3 4 7]", "(sums [[] [8] [2 1 7] []]) -> [0 8 10 0]", "(sums [[3 5]]) -> [8]", "(sums [[1 3 7] [6 1] [1 6 9 0] [] [7 3 1]]) -> [11 7 16 0 11]", "(sums [[9 5 0 3] [9 5 5] [7 7] [] []]) -> [17 19 14 0 0]", "(sums []) -> []", "(sums [[] [7 8 7 5 9] [9 0] [4] [0 4 7 9]]) -> [0 36 9 4 20]", "(sums []) -> []", "(sums []) -> []", "(sums [[8 2 4] [6 6 0 7] [8 5 3 5 7]]) -> [14 19 28]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[] [] [9 4 1 1 1]]) -> [0 0 16]", "(sums [[2 1 7 0] [] [9 4 1 5] [8 2 6 9 3] [7]]) -> [10 0 19 28 7]", "(sums []) -> []", "(sums [[1 2] [4 9 9]]) -> [3 22]", "(sums [[7 5 0]]) -> [12]", "(sums [[0 8 8 0 7]]) -> [23]", "(sums [[8 8 4 0] [2 1]]) -> [20 3]", "(sums [[] [9 6 1] [3] [9] [4]]) -> [0 16 3 9 4]", "(sums [[7 8 9] [1 4 4 9]]) -> [24 18]", "(sums [[6] [4 4 4 5 7] [1 3 3 1 1]]) -> [6 24 9]", "(sums [[9 0 7] [0 0] [7 1] [9 7] [4 7 0]]) -> [16 0 8 16 11]", "(sums [[7 0 1] [8]]) -> [8 8]", "(sums [[4 0] []]) -> [4 0]", "(sums [[4 3 0 3] [] [4]]) -> [10 0 4]", "(sums [[2]]) -> [2]"], "time": 0.487059, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[9] [8] [3 6 2]]) -> [9 8 11]", "(sums [[9 4]]) -> [13]", "(sums [[6 1 0 1 6] [2 5 9] [] [1]]) -> [14 16 0 1]", "(sums []) -> []", "(sums [[3 6] [8 6] [8 4 3 4] [9 1]]) -> [9 14 19 10]", "(sums [[6 0 2 6 3] [1 2] [0 6 5] [] [1 1 1 9 3]]) -> [17 3 11 0 15]", "(sums []) -> []", "(sums [[9 4 0 2 9] [] [] [8 0 4 8]]) -> [24 0 0 20]", "(sums [[] [3 0 7 7 8] [5 8 2 2] [2] [4]]) -> [0 25 17 2 4]", "(sums [[8 9] [4 7 1 4]]) -> [17 16]", "(sums [[5] [7 4]]) -> [5 11]", "(sums [[]]) -> [0]", "(sums [[8 3 6 4 1] [7 4 8 4 7]]) -> [22 30]", "(sums [[] [2] []]) -> [0 2 0]", "(sums [[7 2 8 6 9] [1] [4 3 2 9] []]) -> [32 1 18 0]", "(sums [[7 4 0 8] [1 0]]) -> [19 1]", "(sums [[8 5 5]]) -> [18]", "(sums [[6 4 3 0] [9 6 7]]) -> [13 22]", "(sums [[7 9 1 3 3] [0 1 4 9]]) -> [23 14]", "(sums [[] [7]]) -> [0 7]", "(sums [[3 9 5] [9 2 4 7] []]) -> [17 22 0]", "(sums []) -> []", "(sums [[5] [7] [5 5 7 1]]) -> [5 7 18]", "(sums [[7 3 9]]) -> [19]", "(sums [[1] [3] [4] [1 6]]) -> [1 3 4 7]", "(sums [[0 3 3 3] [8]]) -> [9 8]", "(sums [[4 3] [7 3] []]) -> [7 10 0]", "(sums [[2 5 8 1] [3 6 1 1 1]]) -> [16 12]", "(sums [[] [] [5 8 8]]) -> [0 0 21]", "(sums [[8 3 4 2 6]]) -> [23]", "(sums []) -> []", "(sums [[6] [7 8 7]]) -> [6 22]", "(sums [[3 3] [1 3 7 2 9] [6 2]]) -> [6 22 8]", "(sums [[3 6 2 4 5] [5] [1 5] [3]]) -> [20 5 6 3]", "(sums [[5 2] [7] [8 4 9] [6 9 5]]) -> [7 7 21 20]", "(sums [[] [2 2 2] [3]]) -> [0 6 3]", "(sums [[9 1 9] [6 9 5 9] [7 2 3]]) -> [19 29 12]", "(sums [[9 4 1 8 9] [2] [5 2 3 1] [6] []]) -> [31 2 11 6 0]", "(sums []) -> []", "(sums [[0 9 3 5 6] [0 7 5 2] [8 7 8] [4 9] [8 1]]) -> [23 14 23 13 9]", "(sums [[7 7 3 5 8]]) -> [30]", "(sums [[] [0] [4 8 6 9 1]]) -> [0 0 28]", "(sums []) -> []", "(sums [[7 8]]) -> [15]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[3 8 8 9]]) -> [28]", "(sums [[6 7 7] [9] [2] [4] [5]]) -> [20 9 2 4 5]"], "time": 0.499013, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[8 6 3 8 4] [1 1 1 9] [3 1 9 6] [1 6] [9 3 7 8]]) -> [29 12 19 7 27]", "(sums [[0 0 1 9 6] [0 6] [2 3 4 6] [3 4 9]]) -> [16 6 15 16]", "(sums [[] [8 7]]) -> [0 15]", "(sums []) -> []", "(sums [[1 2 2] [1 1] [] [4 9 8 0 6]]) -> [5 2 0 27]", "(sums [[5 6 8 9 0] [0 9 4] [] [8 7 8 9 2] []]) -> [28 13 0 34 0]", "(sums [[3 2 3 5] [3 0 5] [5 1 7] [9 9 2 1 1] [0 9 8]]) -> [13 8 13 22 17]", "(sums [[9] [5]]) -> [9 5]", "(sums [[9 2 2]]) -> [13]", "(sums [[7] [7] [7 7 2 4 1]]) -> [7 7 21]", "(sums []) -> []", "(sums [[2 2 9 6 5] [] [7 9 7 9] [5 0]]) -> [24 0 32 5]", "(sums []) -> []", "(sums [[9 7 0 3] [2 0] [] [9]]) -> [19 2 0 9]", "(sums [[7 7 8] [2 1 1 7 0]]) -> [22 11]", "(sums [[7]]) -> [7]", "(sums [[4 9 6 1 5] [9 3 2 7 2]]) -> [25 23]", "(sums [[8] [] [7 1]]) -> [8 0 8]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [7 4 1 2 1] [7]]) -> [0 15 7]", "(sums []) -> []", "(sums [[5 0] [0 2] [0 6 9 0]]) -> [5 2 15]", "(sums [[9 2] [7 4 3 3]]) -> [11 17]", "(sums [[1 7 7]]) -> [15]", "(sums []) -> []", "(sums [[0 4] [8 3 5] [] [1] [7 5 9 3]]) -> [4 16 0 1 24]", "(sums [[5 0 7 8] [5 2 3] [7] [] [7 9]]) -> [20 10 7 0 16]", "(sums []) -> []", "(sums [[2 2 3 6]]) -> [13]", "(sums []) -> []", "(sums [[8 3 6 4 2] [6 4 7] [2 3 5] [7 6] [8 0 9 6]]) -> [23 17 10 13 23]", "(sums [[0]]) -> [0]", "(sums []) -> []", "(sums [[0 7]]) -> [7]", "(sums [[1 8 9 1] [6 1 0] [3 3 2]]) -> [19 7 8]", "(sums [[]]) -> [0]", "(sums [[2 2] [3 0 9 6 2]]) -> [4 20]", "(sums []) -> []", "(sums []) -> []", "(sums [[5] [3 4 4] []]) -> [5 11 0]", "(sums [[] [6 6 4] [7 9 0 3]]) -> [0 16 19]", "(sums [[4 4] [0 5 6]]) -> [8 11]", "(sums []) -> []", "(sums [[7]]) -> [7]", "(sums [[2 0 0 1] [5 2] [7 6 2 8 8]]) -> [3 7 31]", "(sums [[0 1 0 4 0] [1 3 8] [3 6 2 3] []]) -> [5 12 14 0]", "(sums [[6 2 4 4 2] [6 3 7] [6 1] [] [7 7 7 6 7]]) -> [18 16 7 0 34]"], "time": 0.501686, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[9 4 1 0] [1 8 5 1] [2 7 0] [5 6 8 5 7]]) -> [14 15 9 31]", "(sums [[1] [0 7 6 1]]) -> [1 14]", "(sums []) -> []", "(sums [[] [2 2]]) -> [0 4]", "(sums [[2 7 9 9] [] [0 7 6 9] [9 2 1 9 1] [7]]) -> [27 0 22 22 7]", "(sums [[6 8] [] [7] [] [3 9]]) -> [14 0 7 0 12]", "(sums [[7 2 0 3] [2 5 4] [5 3] [] [0 5 7 4 1]]) -> [12 11 8 0 17]", "(sums [[7 6 8] []]) -> [21 0]", "(sums [[9 0 3] [5 8]]) -> [12 13]", "(sums [[8 2 1 8 4]]) -> [23]", "(sums [[2 4 3] [4] [2 8]]) -> [9 4 10]", "(sums [[4 2 0 8 7] [3 7]]) -> [21 10]", "(sums [[8 8 7] []]) -> [23 0]", "(sums [[8 3] [8 9 6 5 0] []]) -> [11 28 0]", "(sums [[8 4 7 7 3] [0 1 3] [1 4 1 3 5]]) -> [29 4 14]", "(sums [[0] [4] []]) -> [0 4 0]", "(sums [[1 2 2 3] [2 3 5]]) -> [8 10]", "(sums []) -> []", "(sums []) -> []", "(sums [[3 3 3]]) -> [9]", "(sums [[7 1 5 7 1]]) -> [21]", "(sums [[4 9] [1 7 3 4] [1]]) -> [13 15 1]", "(sums [[0 3 3 8] [] [5] [3 7 7]]) -> [14 0 5 17]", "(sums [[1 5 0 0] [4 4 5 0] [2 2 7 4 5]]) -> [6 13 20]", "(sums [[] [9 9 4 5 3] [2 5 0]]) -> [0 30 7]", "(sums []) -> []", "(sums []) -> []", "(sums [[1 8 8 8 1] [3 5 1] [] [9] [5 4 9]]) -> [26 9 0 9 18]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [4 6]]) -> [0 10]", "(sums []) -> []", "(sums [[3 1]]) -> [4]", "(sums [[7] []]) -> [7 0]", "(sums [[3 4] [4 7] [9 3 8] [9 9]]) -> [7 11 20 18]", "(sums []) -> []", "(sums [[1 6 5 8 9] [9 4 3 5 2] [] []]) -> [29 23 0 0]", "(sums [[9 7 6 4]]) -> [26]", "(sums [[] [4 0]]) -> [0 4]", "(sums [[3 6] [3 7]]) -> [9 10]", "(sums []) -> []", "(sums [[4 9 4 1] [7 1 1] [4] [0 0 5]]) -> [18 9 4 5]", "(sums [[] [0 0] [3 0 8 2 8]]) -> [0 0 21]", "(sums [[3 2 9] [4 2 3 9] [1 0 3 1 6] [8 6 5 9]]) -> [14 18 11 28]", "(sums [[0]]) -> [0]", "(sums [[4 5 6 9 5] [] [8 2 2] [9 7 8]]) -> [29 0 12 24]", "(sums [[0 5 4] [4 1 8]]) -> [9 13]", "(sums [[8 0 6 7 3] [2] [6 5 3 0] [1] [6 0]]) -> [24 2 14 1 6]"], "time": 0.536379, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2 3] [0 7 7] [4 9] [1 2] [8 9]]) -> [5 14 13 3 17]", "(sums [[8 4]]) -> [12]", "(sums [[7] [1 4 2] [4 0]]) -> [7 7 4]", "(sums [[2 9 1 1] [7]]) -> [13 7]", "(sums [[8 5] [] [8] [3]]) -> [13 0 8 3]", "(sums [[] [] [2] [5 4 9 0 4]]) -> [0 0 2 22]", "(sums [[9 4 3] [1 7 8]]) -> [16 16]", "(sums [[8] [7 1 8]]) -> [8 16]", "(sums [[9 6 3] [8 2] [5 7 8 7] [9] [8 7 6 8 3]]) -> [18 10 27 9 32]", "(sums [[] [7 9 8] [2]]) -> [0 24 2]", "(sums []) -> []", "(sums [[6 8 2 2 2] [] [5 4] [9]]) -> [20 0 9 9]", "(sums [[] [6 0 0 2] [3 1 9 0] [9 9 6]]) -> [0 8 13 24]", "(sums [[7 9 7] [5 5]]) -> [23 10]", "(sums [[0 4 3] [7 8 9] [6 4] [0 7 9] [5 3 9 0 0]]) -> [7 24 10 16 17]", "(sums [[8 0 7 9 7] [5 3 3 7]]) -> [31 18]", "(sums [[4 8 6] [3 6] [2 1] [] [7 0]]) -> [18 9 3 0 7]", "(sums [[5 1 6 3 0]]) -> [15]", "(sums [[8 8 2 9] [9 6] [] [7 5 7 4 6]]) -> [27 15 0 29]", "(sums [[8 2 5] [5 9 5 2]]) -> [15 21]", "(sums []) -> []", "(sums [[7 4 2]]) -> [13]", "(sums [[5] [7 7] []]) -> [5 14 0]", "(sums [[8 5 2 4 0] [9 0 9] [5]]) -> [19 18 5]", "(sums [[] [9 5 9 3] [3] [9 3]]) -> [0 26 3 12]", "(sums [[1 3 3] [3]]) -> [7 3]", "(sums [[6 5 1]]) -> [12]", "(sums [[7 2 0] [0] [5 2] [4] [1 5]]) -> [9 0 7 4 6]", "(sums [[2 4 2] [5 8 3 2] [2 0 3 3 9]]) -> [8 18 17]", "(sums [[5 2 5]]) -> [12]", "(sums [[0 6] [7 6 1] [6 4 0 8 4]]) -> [6 14 22]", "(sums [[1] [7] [0 2 2 8]]) -> [1 7 12]", "(sums [[9 4 1 7] [3 6 8 3] [6 4 6]]) -> [21 20 16]", "(sums []) -> []", "(sums [[0 8] [] [9 0 1 3 8] []]) -> [8 0 21 0]", "(sums [[1 0 4] []]) -> [5 0]", "(sums [[0 2 3 0 8] [1 3 8 3] [] [0 4 2 4 9] [4 4]]) -> [13 15 0 19 8]", "(sums []) -> []", "(sums [[5 7 6] [4 6 7]]) -> [18 17]", "(sums [[1 1 8 6 2] [9 8]]) -> [18 17]", "(sums [[6] [6 4 2 8 9] [] [] [7 9 8 4]]) -> [6 29 0 0 28]", "(sums [[] [0 0 0 0 9] [2 2 8 6 6]]) -> [0 9 24]", "(sums [[2 7]]) -> [9]", "(sums [[2 7 5]]) -> [14]", "(sums [[8 6] [0] [6 6 8 0] [7 4 8]]) -> [14 0 20 19]", "(sums [[5 9 7 0 0] [3 6 5 1 4] [5 2 5 8] [6 1 0 5]]) -> [21 19 20 12]", "(sums [[8 8 3] [8 5] [5] [3 6 7 3] [0 5]]) -> [19 13 5 19 5]", "(sums [[5 1 9 2] [6 5 0 7]]) -> [17 18]"], "time": 0.560299, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[8 3]]) -> [11]", "(sums [[3 8] [5 4 9 3] [7 4]]) -> [11 21 11]", "(sums [[0]]) -> [0]", "(sums [[6 9 5 1 9] [] [1] [7 0 7 6 0]]) -> [30 0 1 20]", "(sums [[6 8 8 0]]) -> [22]", "(sums [[5 9 2 5 0]]) -> [21]", "(sums [[8 9 2 8] [2 8 3]]) -> [27 13]", "(sums [[2 5]]) -> [7]", "(sums [[0 7]]) -> [7]", "(sums []) -> []", "(sums [[7]]) -> [7]", "(sums []) -> []", "(sums [[8 1 0 9 2] []]) -> [20 0]", "(sums []) -> []", "(sums [[8] [6 8 7 8 7] [4 2 2 3] []]) -> [8 36 11 0]", "(sums [[7] [6 1] [] [] [2 2]]) -> [7 7 0 0 4]", "(sums [[4 5 8 7 4] [4 3 0 4] []]) -> [28 11 0]", "(sums [[2 4 7]]) -> [13]", "(sums [[6 6 8]]) -> [20]", "(sums [[4]]) -> [4]", "(sums [[0 2 1 2 5] [5 1 6 0 8] [4 4 1 5 9] []]) -> [10 20 23 0]", "(sums [[1] [0 7] [1 1 7 8 5] [5 9 3 4] [6 8 2 8]]) -> [1 7 22 21 24]", "(sums [[6 7 9 8 6]]) -> [36]", "(sums [[4 1 9]]) -> [14]", "(sums [[0] [7 1 0 8] [] [5] [6 8 2 7 2]]) -> [0 16 0 5 25]", "(sums [[4] [1 1 2 5]]) -> [4 9]", "(sums [[2 1 4] [9 9 6]]) -> [7 24]", "(sums [[4 3 9 1] [5 5] [5 0 9 9] [2]]) -> [17 10 23 2]", "(sums [[5 2] [8]]) -> [7 8]", "(sums [[6 7 1] [0 8] [] []]) -> [14 8 0 0]", "(sums []) -> []", "(sums [[] [9 9]]) -> [0 18]", "(sums [[]]) -> [0]", "(sums [[5 8 0 4]]) -> [17]", "(sums []) -> []", "(sums [[3 5 7 6 5] [4 3 6] [7 1 2 3 0] [6 1 3]]) -> [26 13 13 10]", "(sums []) -> []", "(sums [[9 2 6] [1 7 0 0 4] [0 7 2 4 1] [4 4 0 9] [1 2]]) -> [17 12 14 17 3]", "(sums [[8 3] [3 4 6 8 1] [7 4 2 1] []]) -> [11 22 14 0]", "(sums [[6 6 8 1 7] [3] []]) -> [28 3 0]", "(sums []) -> []", "(sums [[3 1 2 5] [] [1 7 1]]) -> [11 0 9]", "(sums [[7 7] [] [0 0 0 2 1] [] [9 0 8 3 7]]) -> [14 0 3 0 27]", "(sums []) -> []", "(sums [[2 1 3]]) -> [6]", "(sums []) -> []", "(sums [[7 3] [1 3]]) -> [10 4]", "(sums [[5 6 5 9 9]]) -> [34]"], "time": 0.434984, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 6] [8 6 3 3 6] [2 6 2 9] [3 1 9]]) -> [6 26 19 13]", "(sums []) -> []", "(sums [[3 1 9 0] [] [] [4 6 7 8]]) -> [13 0 0 25]", "(sums []) -> []", "(sums []) -> []", "(sums [[3 8 5 5 9] []]) -> [30 0]", "(sums [[0 0 4 7] [2] [8] [3] [7]]) -> [11 2 8 3 7]", "(sums [[3 5] [0] [1 5 4] [6 9 2]]) -> [8 0 10 17]", "(sums [[8 4] [9] [1 9]]) -> [12 9 10]", "(sums [[8] [9 6] [8] [7] [2]]) -> [8 15 8 7 2]", "(sums [[5] [5 1 3 3 1] [8 8 8 2 9] []]) -> [5 13 35 0]", "(sums [[3 2 1 4]]) -> [10]", "(sums [[] []]) -> [0 0]", "(sums [[5 0 5] [0 0 9 6] [0 7 9 0] [8 0 4]]) -> [10 15 16 12]", "(sums [[7 3 2] [] [2 2 0] [1 7 6]]) -> [12 0 4 14]", "(sums [[6 3]]) -> [9]", "(sums [[4 4 9 6 5] [1]]) -> [28 1]", "(sums [[7 0] [4 0 6 7] [9] [] [7 1]]) -> [7 17 9 0 8]", "(sums [[7 5 8] [4]]) -> [20 4]", "(sums [[] [4 6 5 6 2] [0 0 1] [3] [9 7 2 1]]) -> [0 23 1 3 19]", "(sums []) -> []", "(sums [[] [8] [2 2 8 2 2] [9 8 0 5] [5 5 8 4 9]]) -> [0 8 16 22 31]", "(sums [[5 5 6 2]]) -> [18]", "(sums [[2 7 9 6] []]) -> [24 0]", "(sums [[6 3 2] [8 7 2 5 4] [4 6 5] [8 5 9] [1 1 1 5 3]]) -> [11 26 15 22 11]", "(sums [[4]]) -> [4]", "(sums [[0 5 1 1] [7 0 7 5] [6 4 5]]) -> [7 19 15]", "(sums [[8 1 9 9 2]]) -> [29]", "(sums [[7 3 3] [9 3 4] [7 7] [2 6]]) -> [13 16 14 8]", "(sums []) -> []", "(sums [[4 2] [3 0]]) -> [6 3]", "(sums [[2] [0 1] [0]]) -> [2 1 0]", "(sums [[]]) -> [0]", "(sums [[3 4 1 3] [1 6 2 1 2]]) -> [11 12]", "(sums [[] [] [2 8 6 4]]) -> [0 0 20]", "(sums [[1]]) -> [1]", "(sums [[2 1] [8 5] [7] [3 8 0]]) -> [3 13 7 11]", "(sums [[8 5 5 8] [2 5 9 3 8] [7 9] [] [6 7 3 6]]) -> [26 27 16 0 22]", "(sums [[6 5] [8 3 0]]) -> [11 11]", "(sums [[] [0]]) -> [0 0]", "(sums [[0 9 5 7]]) -> [21]", "(sums [[5 2 9 7 4] [] [1 3 0 7]]) -> [27 0 11]", "(sums [[2] [3 2 5 4 6] [6]]) -> [2 20 6]", "(sums []) -> []", "(sums [[] [4 5 1 9 4]]) -> [0 23]", "(sums [[6 0]]) -> [6]", "(sums [[7 8 1 6] [4 6 2] [] [5 7] [9 1 8 8 2]]) -> [22 12 0 12 28]", "(sums [[8 1]]) -> [9]"], "time": 0.513295, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[1 3] [5]]) -> [4 5]", "(sums [[3 3 1 2 9] [6] [8 2 5 8] [] [6 6 2]]) -> [18 6 23 0 14]", "(sums []) -> []", "(sums []) -> []", "(sums [[7 4 7 4] [] [9 4]]) -> [22 0 13]", "(sums [[6 1 7] [7 7 9 7 7]]) -> [14 37]", "(sums [[2] [0 2 2 5] [7 5 9 6]]) -> [2 9 27]", "(sums []) -> []", "(sums [[9 4] [2 1 3 9] [] [7 9 2 7 1]]) -> [13 15 0 26]", "(sums []) -> []", "(sums [[2] [5] []]) -> [2 5 0]", "(sums [[9]]) -> [9]", "(sums [[] [7] [] [5 0 0 0]]) -> [0 7 0 5]", "(sums [[0 7 8] [] [5 3] [7 9 2 5 0]]) -> [15 0 8 23]", "(sums [[3 4 3 5] [9 9 2 4 7] [7 9 5 4] [0]]) -> [15 31 25 0]", "(sums [[3 3 0]]) -> [6]", "(sums [[6 8 0]]) -> [14]", "(sums [[] [2 6 3] [9 0] [2 1 8 8 4]]) -> [0 11 9 23]", "(sums [[2 7 2 8 9] [] [7 9 2 1]]) -> [28 0 19]", "(sums [[7 8 3] [6 7 2 3 9] [4 4 6 0 2] [2 9 5] [2 6 1 4 0]]) -> [18 27 16 16 13]", "(sums [[1 9 8] [8 1 8] [9 4 2] [2]]) -> [18 17 15 2]", "(sums [[8 6] [7] [9 5 5]]) -> [14 7 19]", "(sums [[9] [] [7 4 0 4 7] [3 9 3] []]) -> [9 0 22 15 0]", "(sums [[] [8] [6] [9 1 1 6] [7 0 0 6]]) -> [0 8 6 17 13]", "(sums [[3 1 9 5 7] [9 4] [8 3]]) -> [25 13 11]", "(sums [[6 8] [6 3] [2 8 2 6]]) -> [14 9 18]", "(sums [[1 7 3 6]]) -> [17]", "(sums []) -> []", "(sums []) -> []", "(sums [[1 3 4 9 3] [] [0 1 8 6] [7 3 6] [4 6 3 6]]) -> [20 0 15 16 19]", "(sums [[9]]) -> [9]", "(sums [[0 1 5 6]]) -> [12]", "(sums [[4 4 5 9 4] []]) -> [26 0]", "(sums [[2 3] [3] []]) -> [5 3 0]", "(sums []) -> []", "(sums [[9 2 1 8 3] [1 9 0]]) -> [23 10]", "(sums [[8 3 4 0]]) -> [15]", "(sums [[] [0 8] [7 6 3 6 2] [2 7 8 7 5] []]) -> [0 8 24 29 0]", "(sums [[] [6 0]]) -> [0 6]", "(sums [[] [2 4 2 4]]) -> [0 12]", "(sums [[5 5 1 8 9] [] [0 8 2] [2 1 8 3 3] [1 9 0 2]]) -> [28 0 10 17 12]", "(sums [[2 3 7 6]]) -> [18]", "(sums [[2] [0 1] [0 5 6 5 5] [8 7] [4]]) -> [2 1 21 15 4]", "(sums [[2 3 0 6 4] [8 8 1 7 8] [6 8 4 5 3] []]) -> [15 32 26 0]", "(sums [[2 2] [8 4 2 7] [3 6] [8 5 8]]) -> [4 21 9 21]", "(sums [[3 0 7 9 0] [2 3 0 3] [1 5] [7]]) -> [19 8 6 7]", "(sums []) -> []", "(sums [[4 7 8]]) -> [19]"], "time": 0.478842, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[6 8 6 8 5] [4 4 8 0 4] [8 9] [2 5 1]]) -> [33 20 17 8]", "(sums [[]]) -> [0]", "(sums [[9 8 7] [1 2] [0 1 8 4 0] [3 7 5 1 7] [9 1 4 3]]) -> [24 3 13 23 17]", "(sums [[8] [3 0] [5 3 6] [9] [4]]) -> [8 3 14 9 4]", "(sums [[9 2 8] [2 9]]) -> [19 11]", "(sums []) -> []", "(sums [[6 8 7 8] [1 6] [4 3 4 3] [4]]) -> [29 7 14 4]", "(sums [[5 7 8] [3 2 3 7] [7 5] [1 9 1] [7 4]]) -> [20 15 12 11 11]", "(sums [[1 0 4] [0 6]]) -> [5 6]", "(sums [[0 1 9 2]]) -> [12]", "(sums [[7 4] [1 5] []]) -> [11 6 0]", "(sums [[9] [5 5 2 6 0] [5 7 8] [3]]) -> [9 18 20 3]", "(sums [[] [7 0 8 5 0] []]) -> [0 20 0]", "(sums [[1 4] [4 5 9 4] [1]]) -> [5 22 1]", "(sums []) -> []", "(sums [[] [0 8 4] [5 5] [] [4]]) -> [0 12 10 0 4]", "(sums []) -> []", "(sums [[8 0 0 3 2] [1 6] [7]]) -> [13 7 7]", "(sums [[2 1 6 5] [0 2 2] [2 8 7 3 5] [4 1] [9 5 9]]) -> [14 4 25 5 23]", "(sums [[4] [2 2 4]]) -> [4 8]", "(sums []) -> []", "(sums [[9 3 6 4 4] [] [] [9 5 4]]) -> [26 0 0 18]", "(sums [[4 1 5]]) -> [10]", "(sums []) -> []", "(sums [[6 9 3 0] [6 8 5 0 8] [1 9 4 4] [9] [0 4 8 0]]) -> [18 27 18 9 12]", "(sums [[]]) -> [0]", "(sums [[6 3]]) -> [9]", "(sums [[2 7] [3 4] []]) -> [9 7 0]", "(sums [[1 1 6 7] [] [1 8 1 5 6] [7 5 0 6 0]]) -> [15 0 21 18]", "(sums [[1] [0 5]]) -> [1 5]", "(sums []) -> []", "(sums [[8 2] [3 7 4 2] [8 9 8 5] [2 7]]) -> [10 16 30 9]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [1 1]]) -> [0 2]", "(sums [[2 6 7 2] [7 9 7 5 4] [0 7] []]) -> [17 32 7 0]", "(sums [[1 2 3 4 0]]) -> [10]", "(sums [[2 9 9 3] [0 0 4 6] [2 7 0] [6]]) -> [23 10 9 6]", "(sums [[2 1 5 1] [] [9 7 5 4]]) -> [9 0 25]", "(sums [[3 0 4 5] [2 4 9] [1 0 7 2 0]]) -> [12 15 10]", "(sums [[5 1 8 4 0] [2] [2 9] [9 5 0] [6 9 9]]) -> [18 2 11 14 24]", "(sums [[1 2] [8 0 9 9 4]]) -> [3 30]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 8 3 5 8] [3] [6 2] [7 7 1 9] [7 3 4]]) -> [30 3 8 24 14]", "(sums [[5 1 4 8 1]]) -> [19]", "(sums [[1 8] [1 6 7 7 9] [1 7 3] []]) -> [9 30 11 0]", "(sums [[3 4] [5 3 1 5 1]]) -> [7 15]"], "time": 0.49169, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 1 3 5] [2] [6 1]]) -> [16 2 7]", "(sums [[8 7 6 9] [] [8 5 7 4 9] [4 0] [1 4]]) -> [30 0 33 4 5]", "(sums [[1 0] [] [7 4 6 6 4] [3 6] [5]]) -> [1 0 27 9 5]", "(sums [[]]) -> [0]", "(sums [[3 8 2 2] [8 4 4 3 3] [] [7 1 2]]) -> [15 22 0 10]", "(sums [[5 9 2] [3 2 1 7]]) -> [16 13]", "(sums [[3 4 0 5 4]]) -> [16]", "(sums [[5 3] [] [4 3 9 4 3] [2 8 1 9 8]]) -> [8 0 23 28]", "(sums [[7 4 8 5 1] [4 1 1 4 4] [2 0] [5 2 5 7 6]]) -> [25 14 2 25]", "(sums [[5 8 4 4] [] [] [1 8 2 1]]) -> [21 0 0 12]", "(sums [[1] [] []]) -> [1 0 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[0 5] [1] [4]]) -> [5 1 4]", "(sums [[3 4 1 0]]) -> [8]", "(sums [[3 4 0 5] [8 2 4 9 0] [9] [3 4 8 6]]) -> [12 23 9 21]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[2 5 3]]) -> [10]", "(sums [[4] [5 3 0 4 8] [3 9 2 2 3]]) -> [4 20 19]", "(sums [[4 0 4 4 3] [4] [7 2 2 2] [3 7 4 9 6]]) -> [15 4 13 29]", "(sums [[8 3 4 4 6]]) -> [25]", "(sums [[4 5] [2 6 5 0 6]]) -> [9 19]", "(sums [[7 1 0 9 6] [3 6 5 3] [0 0 7 6] [] []]) -> [23 17 13 0 0]", "(sums [[9] [4 0 8 4] [4 4]]) -> [9 16 8]", "(sums [[4 9]]) -> [13]", "(sums [[2 1 8 6] [7 9] [4 5 3 2 5] [0 8 3 3] [9 9 7 0 4]]) -> [17 16 19 14 29]", "(sums [[8 4 8] [9] []]) -> [20 9 0]", "(sums [[4 7] [4 7 7] [3 9 6 2 2] [5 9 5 3 4]]) -> [11 18 22 26]", "(sums []) -> []", "(sums [[5 8 8 1 1] [8 7 1 9 9] [6 3 1] [0 7 2 4]]) -> [23 34 10 13]", "(sums [[8 8 2 6 3] []]) -> [27 0]", "(sums [[]]) -> [0]", "(sums [[4] [3 2 5]]) -> [4 10]", "(sums []) -> []", "(sums [[3 0 1 9 1] [4 6] [8 7] []]) -> [14 10 15 0]", "(sums [[] [2 4 3 2 1] [4]]) -> [0 12 4]", "(sums [[]]) -> [0]", "(sums [[4 7]]) -> [11]", "(sums [[] [5 1] [4] [] [4 4 6]]) -> [0 6 4 0 14]", "(sums [[6 9 1] [] [1 9 2] [9 8]]) -> [16 0 12 17]", "(sums [[7 4 5 0] [6 9 0] [1 2 0 1]]) -> [16 15 4]", "(sums [[0 1] [4 8 1 3] [8] []]) -> [1 16 8 0]", "(sums [[1 3 1 1 6] [2] [3 3]]) -> [12 2 6]", "(sums [[2 7] [8 8 0] [] [9 9 6 7]]) -> [9 16 0 31]", "(sums []) -> []", "(sums [[]]) -> [0]"], "time": 0.44674, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 4 3 0 2]]) -> [12]", "(sums [[5 1] [5 3 3] [9 1 1 2 4] [8 3 3]]) -> [6 11 17 14]", "(sums []) -> []", "(sums [[4] [8 0 5] [7 6 9 8 8] [6 0 6 2] [5 1 0 4]]) -> [4 13 38 14 10]", "(sums []) -> []", "(sums [[3 7 8] [8 5 7 9] [4 2 9] [3 1 3] [5 1 3 8]]) -> [18 29 15 7 17]", "(sums [[5 2]]) -> [7]", "(sums [[9 6] [0 0 8 8 2]]) -> [15 18]", "(sums []) -> []", "(sums [[0 7] [0 2 3] [8 4]]) -> [7 5 12]", "(sums []) -> []", "(sums [[9 7] [4 6 9]]) -> [16 19]", "(sums [[5 2 4] [7 0 5 1] [6 1]]) -> [11 13 7]", "(sums [[7 9 1 2] [2 9] [] [5 5 0 7]]) -> [19 11 0 17]", "(sums [[] [8] [6 3]]) -> [0 8 9]", "(sums [[7 2 0 9 0] [8] [0] [1 2 8 2 2]]) -> [18 8 0 15]", "(sums [[4 1 1 6]]) -> [12]", "(sums [[3 9] [6 6 1] [2] [6 6 6] [2]]) -> [12 13 2 18 2]", "(sums [[5 2 8] [6 9 6 9 9] [4] [4 9 9]]) -> [15 39 4 22]", "(sums [[6 8 7 6 4] [3 7 6 0 8] [2] [6 8]]) -> [31 24 2 14]", "(sums [[0 1 9 7 8] [] [8 7 3 8 7] [9 5 5]]) -> [25 0 33 19]", "(sums [[] [2 2 8 3 1]]) -> [0 16]", "(sums [[1 1 3 8] [0 3] [6 6 3 3]]) -> [13 3 18]", "(sums []) -> []", "(sums [[6 6 1 2 6] [6] [6 5 0 7] [4]]) -> [21 6 18 4]", "(sums [[3 3]]) -> [6]", "(sums [[9 2 4 3] [5 9 4 0 3] [6] [0 3] [9 3]]) -> [18 21 6 3 12]", "(sums [[] [2 3 3 0 3] [6 8 7 0 8] [] [8]]) -> [0 11 29 0 8]", "(sums [[8 9 3 1] [8 3]]) -> [21 11]", "(sums []) -> []", "(sums [[7] []]) -> [7 0]", "(sums [[6 2 9 9 6] [0 1 0] [7 4 0 3 0]]) -> [32 1 14]", "(sums []) -> []", "(sums [[9 4] [0 7] [9 8 5 9] [] [0]]) -> [13 7 31 0 0]", "(sums [[9] [3 5 8 7]]) -> [9 23]", "(sums [[9 2] [1 4 1 3 6] [7] [2 3 0 6 5]]) -> [11 15 7 16]", "(sums [[]]) -> [0]", "(sums [[6] [5 3 2 3] [3 2] [7 4 9] [5]]) -> [6 13 5 20 5]", "(sums [[9 9 1] []]) -> [19 0]", "(sums [[4] [] [5] [5] [1 7]]) -> [4 0 5 5 8]", "(sums [[8 6 9 7 5] [2] [] [5 5] [3 7 9]]) -> [35 2 0 10 19]", "(sums [[7 1 7 1] [] [4 0 2 5] [6] [6 2 0 0]]) -> [16 0 11 6 8]", "(sums [[8 6 6 4] [2 0 1 8] [0] [7]]) -> [24 11 0 7]", "(sums [[3 8 4 6] [8 0 7 6 4] [4]]) -> [21 25 4]", "(sums []) -> []", "(sums [[0 0] [2 1]]) -> [0 3]", "(sums [[] [6 1 3 5 6] [0 8 1 8] [4 8 7 2 6] [0 2]]) -> [0 21 17 27 2]", "(sums [[6 6 4 8]]) -> [24]"], "time": 0.421066, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[8 8]]) -> [16]", "(sums [[8] [5] [4 8 0 5 5]]) -> [8 5 22]", "(sums [[2 5 9]]) -> [16]", "(sums [[0 1 6 3 3] [2 7 1 8 5] [] [] [3 3 3 5 6]]) -> [13 23 0 0 20]", "(sums [[4 7 2] [4 8]]) -> [13 12]", "(sums [[] [1 0 3] [1 9 1] [2 8] [8 6 8]]) -> [0 4 11 10 22]", "(sums [[9] [3 0 2 8 0] [5 3 4]]) -> [9 13 12]", "(sums [[] [2 9] [9] [4 0 7 1] []]) -> [0 11 9 12 0]", "(sums [[4 7 7] [4]]) -> [18 4]", "(sums [[8 7 3] [5 7 4 8] [5] [7 6 4 5]]) -> [18 24 5 22]", "(sums [[7 0 8 1 9] [8 4 7 0 0] [2] [8 1 4 9 0]]) -> [25 19 2 22]", "(sums [[8 2 0]]) -> [10]", "(sums [[1 2]]) -> [3]", "(sums [[2] [3 9 5 4 3] [4]]) -> [2 24 4]", "(sums []) -> []", "(sums [[7 1]]) -> [8]", "(sums [[1 7 2]]) -> [10]", "(sums [[2] [1 9 1] [8 7]]) -> [2 11 15]", "(sums [[] []]) -> [0 0]", "(sums []) -> []", "(sums [[] [5 4 5]]) -> [0 14]", "(sums []) -> []", "(sums [[6] [3 1 4] [3 3 1] [5 3 4 2 1]]) -> [6 8 7 15]", "(sums []) -> []", "(sums [[0 4 3 4] [5 7] [9 4] [1 0]]) -> [11 12 13 1]", "(sums [[2 7 1] [1 1 3 6 0] []]) -> [10 11 0]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[2] [0 0] [5 7]]) -> [2 0 12]", "(sums [[8 2 5 9] [] [2 8 1 2] [1 6 1 8 4] [8]]) -> [24 0 13 20 8]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 1 1 4 7] [7 5]]) -> [19 12]", "(sums [[5 3 6 8 1] [6 6 3] [3] [3 3 8 9] [3 2 0]]) -> [23 15 3 23 5]", "(sums [[6 9 8 6] [3] [5 6 1 3] [8 3] [1 1 9 3 9]]) -> [29 3 15 11 23]", "(sums [[] [9 9 5 8 4] [5 5 1 4 9] [0]]) -> [0 35 24 0]", "(sums [[] [1 3] [4 3 2 4 6]]) -> [0 4 19]", "(sums [[6 5]]) -> [11]", "(sums [[]]) -> [0]", "(sums [[5 8 6 8]]) -> [27]", "(sums [[2 9 2 3] [1 8 0 5 5] [2 6] [3 1 5 1 0]]) -> [16 19 8 10]", "(sums [[2 4 7] [6 9 2 6 3] [5 1 5] [] [1]]) -> [13 26 11 0 1]", "(sums [[] [3 2] [8 4] [1 4 7 3 1] [7 3 5 0]]) -> [0 5 12 16 15]", "(sums []) -> []", "(sums [[3 1 6 8] [] [6 2]]) -> [18 0 8]", "(sums [[3 7 1 6] [] [9 5 6]]) -> [17 0 20]", "(sums [[5] [8 3 4 5 7] [7] [6] [4 7 5 0]]) -> [5 27 7 6 16]", "(sums [[2 7 2] [] [] []]) -> [11 0 0 0]"], "time": 0.443433, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 9] [] [7] [7]]) -> [16 0 7 7]", "(sums [[2 3 8] [] []]) -> [13 0 0]", "(sums [[5 2 2] [1] [7 3] []]) -> [9 1 10 0]", "(sums [[6 5 1 3 2]]) -> [17]", "(sums [[3 2 1] [6] [7 7 4] [7 6 7 5]]) -> [6 6 18 25]", "(sums [[3 6 4 1]]) -> [14]", "(sums [[7 9 8 0] [4 2 0 0] [8 3 6] [3]]) -> [24 6 17 3]", "(sums [[8] [5 3 7] [8 0] [0 7]]) -> [8 15 8 7]", "(sums [[5 5]]) -> [10]", "(sums [[8 0 7 7]]) -> [22]", "(sums [[]]) -> [0]", "(sums [[0 7 0] [5 0] [0 2 8 4 2]]) -> [7 5 16]", "(sums [[5 5] []]) -> [10 0]", "(sums []) -> []", "(sums [[] [] [1] [2 9 8 7 7]]) -> [0 0 1 33]", "(sums [[7] [7 7 0] [9 5] [2 6 9]]) -> [7 14 14 17]", "(sums [[4 4 7 4 7] [8 6 5 1 0] [9 4 4] [4 6 2 9 4] [0 4 9 7 7]]) -> [26 20 17 25 27]", "(sums []) -> []", "(sums [[] [3 3 7 5] [5 7 1 8] [2 0 3 5 0] [9 5 7 9]]) -> [0 18 21 10 30]", "(sums [[5 7 3]]) -> [15]", "(sums []) -> []", "(sums [[2 6 6 8 7] [9 1 3 0 5] [7 4] [0]]) -> [29 18 11 0]", "(sums [[2 1 6] [4]]) -> [9 4]", "(sums [[]]) -> [0]", "(sums [[3 1]]) -> [4]", "(sums [[1 2] [7 0 7 7] [3 0 8 2] [] [0 4]]) -> [3 21 13 0 4]", "(sums [[0 8 9 4] [5 7] [9 2 3] [2 0 7]]) -> [21 12 14 9]", "(sums [[2 3] [0 3 6 4] [5 3]]) -> [5 13 8]", "(sums [[6 0] [] [5]]) -> [6 0 5]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 9]]) -> [11]", "(sums []) -> []", "(sums [[] [5 1 2 3 6] [] [] [6]]) -> [0 17 0 0 6]", "(sums []) -> []", "(sums [[2 4 5] [] [8 2 5 8] [7 6 0 2 0]]) -> [11 0 23 15]", "(sums [[8] [] [2 5 3]]) -> [8 0 10]", "(sums [[2 5 7 9] [6 6 8 5 1] [6 0 8 1] []]) -> [23 26 15 0]", "(sums [[3 0 3 3] [7 2 8 1] [8 6]]) -> [9 18 14]", "(sums [[0 4 9 8 6]]) -> [27]", "(sums [[7 9 8 1] [5 0 6 8] [7 3 6 3]]) -> [25 19 19]", "(sums [[5 1 6 6] [1]]) -> [18 1]", "(sums [[] [9 5 7 6 9] [5 5 5 2 2]]) -> [0 36 19]", "(sums [[] [6 9] [] [2 6] []]) -> [0 15 0 8 0]", "(sums [[2 3 5]]) -> [10]", "(sums [[3 7 8]]) -> [18]", "(sums [[0]]) -> [0]", "(sums [[1 7 9 7 2] [5] [9 4] [4 2] [9]]) -> [26 5 13 6 9]"], "time": 0.442816, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[6 2 5]]) -> [13]", "(sums [[6] [0 5] [6]]) -> [6 5 6]", "(sums [[2 9 1 7]]) -> [19]", "(sums [[6] [2 1 0] [7 2] [9]]) -> [6 3 9 9]", "(sums [[6 0 6 5 7] [] [] [4 5 7 2]]) -> [24 0 0 18]", "(sums [[] [0 9 8] [0 2] [] [9 3 4 4]]) -> [0 17 2 0 20]", "(sums [[5] [9 6 5 7] [7 2 8] [] [5]]) -> [5 27 17 0 5]", "(sums [[7 0 3] [4 7] [0 9 3]]) -> [10 11 12]", "(sums [[] [7 9] [0 6 2] [8 4 3] [6]]) -> [0 16 8 15 6]", "(sums [[9 8 9 1] [9 9 9 5] [2 2 9 8] [5 5 6 4] []]) -> [27 32 21 20 0]", "(sums []) -> []", "(sums [[3 8 8 7] [5]]) -> [26 5]", "(sums [[8 6 0] [] [4 6 3 4]]) -> [14 0 17]", "(sums [[9 1 5] [2 4 4 5 7] [6] [7 6 9 0] [4 5 5]]) -> [15 22 6 22 14]", "(sums []) -> []", "(sums [[9] [3 1 9 6 0] [7 7 6] [4 8 0 1 3] [3 3]]) -> [9 19 20 16 6]", "(sums [[5 5 7 0] [7 2 8] [4 0 3 2] [6 2 0 7 4]]) -> [17 17 9 19]", "(sums [[4 8] [1] [] [1 0 6]]) -> [12 1 0 7]", "(sums [[7 1]]) -> [8]", "(sums [[9 0 6] [1 2 8 7 0] [8 2 1 5 2]]) -> [15 18 18]", "(sums [[5 1 6 2 8] [0 2] [7 5 3 7] [1 6]]) -> [22 2 22 7]", "(sums [[9 4 2 0] [] [1 7] [8 3 4 6]]) -> [15 0 8 21]", "(sums [[1 3 4 3] [0 3 2] [5 0 9]]) -> [11 5 14]", "(sums [[5 8 7 0 8]]) -> [28]", "(sums [[3 8 9 4]]) -> [24]", "(sums [[6 8] [] [4 8] [0 0 4]]) -> [14 0 12 4]", "(sums [[2 9]]) -> [11]", "(sums [[1 9 3]]) -> [13]", "(sums [[4] [5 4 5 0] [3] [3 0 6]]) -> [4 14 3 9]", "(sums [[3 9 2] [8 7 6] [6 4 6 4 6] [7] [6]]) -> [14 21 26 7 6]", "(sums [[1 0 8] [1] [0 2 9 0 1] [9]]) -> [9 1 12 9]", "(sums []) -> []", "(sums [[5 3 1 5 1] [7 1 7 4 8]]) -> [15 27]", "(sums [[]]) -> [0]", "(sums [[9 2 7 5]]) -> [23]", "(sums [[2 1 3 2] [1 3] [2 2 3] [0]]) -> [8 4 7 0]", "(sums [[] [2 9] [2 4 9 1 7] [4 7]]) -> [0 11 23 11]", "(sums [[7 0 3 1 1] [8 1 7 8] [6 3 1] [8 1 5]]) -> [12 24 10 14]", "(sums [[1 0] [3 8 3] [] [6 0 1 4] [8 2 0 2]]) -> [1 14 0 11 12]", "(sums [[9 7 4] [7 5] [6 6 4 2 3] [7 5] [6 6 6 6]]) -> [20 12 21 12 24]", "(sums [[]]) -> [0]", "(sums [[] [0 3 2 6] [] [2 9 5]]) -> [0 11 0 16]", "(sums [[5 8] [1 3] [8 9 4 2 2]]) -> [13 4 25]", "(sums [[3 3 5] [7 5 5 1 6] [] [2] []]) -> [11 24 0 2 0]", "(sums [[]]) -> [0]", "(sums [[] [8] [0 2 9 2 5] [8] [8 2 9 6]]) -> [0 8 18 8 25]", "(sums [[7 3 6 8] [1 6] [4 3 0 1] [3 0] [6]]) -> [24 7 8 3 6]", "(sums [[4 6 6 3]]) -> [19]"], "time": 0.428907, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 9 6] [0 4 5 9] [1 9 6 0 5]]) -> [18 18 21]", "(sums [[5 7 3 0] [8 0]]) -> [15 8]", "(sums [[3 8] [1 1] [] [5 6 6 9] [9 6 2 7]]) -> [11 2 0 26 24]", "(sums [[1 4 4 2] [2 3 1 5] [6 2 8 9] [5 0 1 3 4]]) -> [11 11 25 13]", "(sums [[4 6] [9]]) -> [10 9]", "(sums [[5 8 9 4 5] [6 5 6 1 4] [0 5 1 2] [1 8]]) -> [31 22 8 9]", "(sums []) -> []", "(sums [[] [8 3] [] [5 8 7] [8 7]]) -> [0 11 0 20 15]", "(sums [[6 5 3 0 8] [] [] [6 1 7]]) -> [22 0 0 14]", "(sums [[2 8 3 2] [5 7] [] [2 3 8 8 1] [8 4 2 9]]) -> [15 12 0 22 23]", "(sums [[4 4] [9 7]]) -> [8 16]", "(sums [[3] [1 3] [2 4 9 5] [5 5 2 6] [3 9 2]]) -> [3 4 20 18 14]", "(sums [[5 1 5 4 6] [4 8] [1 7] [4 8] [1 4 0]]) -> [21 12 8 12 5]", "(sums [[8 1] [0 6 5 3] [1] [3]]) -> [9 14 1 3]", "(sums [[1] [1] [0]]) -> [1 1 0]", "(sums []) -> []", "(sums [[9 3 2 6 6]]) -> [26]", "(sums [[9 5 5 9] [4 3] [7 5]]) -> [28 7 12]", "(sums [[8] [0 7 2 5] [9 6]]) -> [8 14 15]", "(sums [[2]]) -> [2]", "(sums [[] [1 2 7 6] [7 9 5] [0] [0 6]]) -> [0 16 21 0 6]", "(sums [[0 6 6 2 3] [2 9 2 7]]) -> [17 20]", "(sums [[6 7]]) -> [13]", "(sums []) -> []", "(sums [[] [7 0 8 4 1] [6 4] [5 1 8 5 1] [6 6 8 9]]) -> [0 20 10 20 29]", "(sums [[9 7 1] [4]]) -> [17 4]", "(sums [[] [1 5 6 6]]) -> [0 18]", "(sums [[]]) -> [0]", "(sums [[6 6] [9 0] [5 6 2] [] [6 1 5 3]]) -> [12 9 13 0 15]", "(sums []) -> []", "(sums [[2 4 3 3 1] [7]]) -> [13 7]", "(sums []) -> []", "(sums [[8 6] [5 4 8]]) -> [14 17]", "(sums [[3 8 1 5 0] [4 5 1 9]]) -> [17 19]", "(sums [[5 6 9 8 4] [6 9 1 7 2] []]) -> [32 25 0]", "(sums [[4 9]]) -> [13]", "(sums [[7] [2 7 7 5] [1 6] [6 0] [3 0]]) -> [7 21 7 6 3]", "(sums [[6 5 4 9] [] [0 0 7 1 0] [1 8]]) -> [24 0 8 9]", "(sums [[7 3 8]]) -> [18]", "(sums [[4 9 5 8 6]]) -> [32]", "(sums [[8 8 2] [] [9] [1]]) -> [18 0 9 1]", "(sums [[5 7 6 9] [6] [0 7 8] []]) -> [27 6 15 0]", "(sums [[5 7 5 0]]) -> [17]", "(sums [[9] [1 9 0 1] [0 3] [1 4 5] [2 9]]) -> [9 11 3 10 11]", "(sums []) -> []", "(sums [[] [8 0 7] [8 9 1] [8 1 0 9 0] [5 6 8 5 2]]) -> [0 15 18 18 26]", "(sums [[3 8 5 9 1]]) -> [26]", "(sums []) -> []"], "time": 0.41859, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 9 4 3 9] [7 1 3 1 8] [] [] [6 8]]) -> [28 20 0 0 14]", "(sums []) -> []", "(sums [[7 3 2 1] [0 0] [6] [7 2 9 2 1] [0 6]]) -> [13 0 6 21 6]", "(sums [[2] [8 9 7 0 4] [1 8 3 0 0] [8 4]]) -> [2 28 12 12]", "(sums [[7] [2 2 3 1] [0 4 6] [] []]) -> [7 8 10 0 0]", "(sums [[9 6 7 2] [4 3] [8 0 6]]) -> [24 7 14]", "(sums []) -> []", "(sums [[9 5] [6 4 3 4] [2 7 3]]) -> [14 17 12]", "(sums [[] [7]]) -> [0 7]", "(sums [[8 6] [9] [7 3 5] [0] [8 4 7 4]]) -> [14 9 15 0 23]", "(sums [[6 2 0] [1]]) -> [8 1]", "(sums []) -> []", "(sums [[5 7] [7] [2] [6 6] [3]]) -> [12 7 2 12 3]", "(sums [[1 3 8 6] [8 4] [0] [6 7 6]]) -> [18 12 0 19]", "(sums [[5 9] [5 7]]) -> [14 12]", "(sums [[5 5 8] [5 4 6 4 9]]) -> [18 28]", "(sums [[] [5 0 5]]) -> [0 10]", "(sums [[2 6] [7 5]]) -> [8 12]", "(sums []) -> []", "(sums [[8 4 4] []]) -> [16 0]", "(sums [[6] [] [] [4 8]]) -> [6 0 0 12]", "(sums []) -> []", "(sums [[2 7]]) -> [9]", "(sums [[2 8] [3] [5 9] [] []]) -> [10 3 14 0 0]", "(sums [[5 8 0 8 5] [1 2 5 0] [8] [7 5 3 5]]) -> [26 8 8 20]", "(sums []) -> []", "(sums [[] [2 3 9 8 0]]) -> [0 22]", "(sums [[9 3 1] [3 7 1 0 9] [3 3] [4 9 1 6] [3 8 4 6]]) -> [13 20 6 20 21]", "(sums [[8 1 4 0] [8 9 0]]) -> [13 17]", "(sums [[1 6 7]]) -> [14]", "(sums [[] [2] [3 2 6 1] []]) -> [0 2 12 0]", "(sums [[7 8 2 3 9] [8 0 0 7] [8 9 1 6 3] [3]]) -> [29 15 27 3]", "(sums [[2 9 3 6 2] [6 7 4 8]]) -> [22 25]", "(sums [[] [] [3 9 1] [3 9 2 1]]) -> [0 0 13 15]", "(sums []) -> []", "(sums [[] [1 9]]) -> [0 10]", "(sums [[7] [2 0 1 1 2] []]) -> [7 6 0]", "(sums [[1 7 5 5 1] [3 7 2]]) -> [19 12]", "(sums [[] [9 4 6]]) -> [0 19]", "(sums []) -> []", "(sums [[9 6] [6 1] [8 5 6 5]]) -> [15 7 24]", "(sums [[] [2 3 9 4]]) -> [0 18]", "(sums [[9 9]]) -> [18]", "(sums []) -> []", "(sums [[8]]) -> [8]", "(sums [[6 6 4 0 2] [0 7 3 7] [2 5 2 1] [9 6]]) -> [18 17 10 15]", "(sums []) -> []", "(sums [[] [6 7] [5] [2 5] [2]]) -> [0 13 5 7 2]"], "time": 0.437763, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[1]]) -> [1]", "(sums [[2 0 1] [7 7 8] [2 0 3 6] [0]]) -> [3 22 11 0]", "(sums [[5 2 8] [6 2 2 3 1] [3 8]]) -> [15 14 11]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[] [4 7 4 6 2] [5] [5 0]]) -> [0 23 5 5]", "(sums [[8 1] [2 6 1] [6 3] [8 8 6 5 9]]) -> [9 9 9 36]", "(sums [[8]]) -> [8]", "(sums [[0 4 5] [3 0 4 7 8] [3 6 8 7 8] [7 1 3]]) -> [9 22 32 11]", "(sums [[5 4 3 1 8]]) -> [21]", "(sums [[4 3 8 7 2]]) -> [24]", "(sums [[3] [] [7 2 1] [8 4]]) -> [3 0 10 12]", "(sums [[4 3 0 8 9] [4 9 9 8] [4 2] [3] [2 4]]) -> [24 30 6 3 6]", "(sums [[3 3 7 6] [2 1 2 1 9] [6 2] [] [5 5 7 7 2]]) -> [19 15 8 0 26]", "(sums [[3 4 8 5 0] [] [5] [2 5 4 3] [5 5 5 6 0]]) -> [20 0 5 14 21]", "(sums []) -> []", "(sums [[2 9 1 9] [4 0 6 5] [5 7] [5 7 7 5 4] [2 3]]) -> [21 15 12 28 5]", "(sums []) -> []", "(sums [[1] [] [1 0 3 1 8] [7 2 6 3 2] [4 1 9]]) -> [1 0 13 20 14]", "(sums [[3 6 6 9 9] [4 9 7] [9 8 2] [2 0 0 3 0] []]) -> [33 20 19 5 0]", "(sums []) -> []", "(sums [[2] [] [2 6] [9 1 8]]) -> [2 0 8 18]", "(sums [[0 1 0 3 5] [2 9] [4] [5 1 3 0]]) -> [9 11 4 9]", "(sums []) -> []", "(sums [[1]]) -> [1]", "(sums [[0 8 6 8 6] [5 5]]) -> [28 10]", "(sums [[] [1 5] [] [4]]) -> [0 6 0 4]", "(sums [[6 3 0 3] [3] [1] [5 5]]) -> [12 3 1 10]", "(sums [[0 0]]) -> [0]", "(sums []) -> []", "(sums [[1 9 1] [3 7 8 7 9]]) -> [11 34]", "(sums [[8 0 0 3] [6] [] [7 6 7 2] [2 0 2]]) -> [11 6 0 22 4]", "(sums [[4 4 0 7 0] [6 1 4 8] [9 3 7] []]) -> [15 19 19 0]", "(sums [[0 1 1 8]]) -> [10]", "(sums [[1 6 8 4 3] [9 7]]) -> [22 16]", "(sums [[0 4 7 8] [] [4 1 3] [] [5]]) -> [19 0 8 0 5]", "(sums [[6 3]]) -> [9]", "(sums []) -> []", "(sums [[4 5 6 4]]) -> [19]", "(sums [[] [] [5] [7 4]]) -> [0 0 5 11]", "(sums []) -> []", "(sums [[7 8 6 1 6]]) -> [28]", "(sums []) -> []", "(sums [[4 1 2 8] [4 2 7 2] [1 7 7] [8 6 9] [7 1 1]]) -> [15 15 15 23 9]"], "time": 0.55618, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[7 0] [4] [0 0 2 6] [4 6]]) -> [7 4 8 10]", "(sums [[1 5]]) -> [6]", "(sums [[7 6 7]]) -> [20]", "(sums [[2 5] [0 2 8 7] [3 6 0]]) -> [7 17 9]", "(sums [[6 8 4 1] [] [4 4 4 3 7] [3 9 2 1]]) -> [19 0 22 15]", "(sums []) -> []", "(sums [[8 6] [5 7 2 7]]) -> [14 21]", "(sums [[] [] [3 2]]) -> [0 0 5]", "(sums [[] [0 9 9 2 6] [7 9 4 2 0] [0 6]]) -> [0 26 22 6]", "(sums [[1 3 9 9 1] [] []]) -> [23 0 0]", "(sums [[0 8 7 4 3] [0 5 7 7 6] [3 4 6] [1 2] []]) -> [22 25 13 3 0]", "(sums [[9 8] []]) -> [17 0]", "(sums []) -> []", "(sums [[5 4 1 8 5] [9 6 6] [9]]) -> [23 21 9]", "(sums [[] [2 3] [0]]) -> [0 5 0]", "(sums [[2 0 4] [7] [5 8 4] [1 6] []]) -> [6 7 17 7 0]", "(sums [[6 4 4 0 0]]) -> [14]", "(sums [[] [5 2 1 5] [6 9 7 6]]) -> [0 13 28]", "(sums [[1 3 2 9]]) -> [15]", "(sums []) -> []", "(sums [[9 7 7] [7 5 5 4 5] [4 5 1 8 0] [4]]) -> [23 26 18 4]", "(sums [[0 4 0] [8 0 6 8 3] [0 5 8 3]]) -> [4 25 16]", "(sums [[0 4] [1 6 2 4]]) -> [4 13]", "(sums [[1 7 6 8] [9 9] [3] [7 0 7] [8 2 9 6 5]]) -> [22 18 3 14 30]", "(sums [[8 9 6] [6 6] [] [7 1 7]]) -> [23 12 0 15]", "(sums [[6] [6 5 7 1]]) -> [6 19]", "(sums [[2 4]]) -> [6]", "(sums [[6]]) -> [6]", "(sums []) -> []", "(sums [[5 1 9 4 6] [8 8] [2]]) -> [25 16 2]", "(sums []) -> []", "(sums [[4 3]]) -> [7]", "(sums [[1 7] [7 0 5 0 3] [7 7 3]]) -> [8 15 17]", "(sums []) -> []", "(sums [[1 8]]) -> [9]", "(sums [[4] [] [8 2]]) -> [4 0 10]", "(sums [[8 9] [9 5] [1] [0]]) -> [17 14 1 0]", "(sums [[0 1 8 7]]) -> [16]", "(sums [[3] [6 3 0 2] [1 5 8]]) -> [3 11 14]", "(sums [[2 4 4 3] [1 1] [6 4 4] [2 6 6 9] [3 7]]) -> [13 2 14 23 10]", "(sums [[4 9]]) -> [13]", "(sums [[9 7 5] [5 7 9] [1 5 2] [0]]) -> [21 21 8 0]", "(sums [[2 1 9] [5 8] [6 4 8 5] [7 3 3 6 5] [8 0 5 5]]) -> [12 13 23 24 18]", "(sums [[9 5] [5 4 2]]) -> [14 11]", "(sums [[4 6 4 0] [6 8 7 2 8] [4 6 0 0] [3]]) -> [14 31 10 3]", "(sums [[] [9 9] []]) -> [0 18 0]", "(sums [[6 1 9] [5] [5] [2 7 9 7 3] [2 7 9]]) -> [16 5 5 28 18]"], "time": 0.619507, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 3 3 1] []]) -> [10 0]", "(sums [[2 1 2 1 4] [] [9 0 2 6 9]]) -> [10 0 26]", "(sums [[9 8 4 1] [5 5 9 7 4]]) -> [22 30]", "(sums [[7] [2 6 2 9] [4 1 6] [6 0] [0 2 8 4]]) -> [7 19 11 6 14]", "(sums [[5 4 1]]) -> [10]", "(sums []) -> []", "(sums [[7] [4 5 5 1] []]) -> [7 15 0]", "(sums [[]]) -> [0]", "(sums [[5]]) -> [5]", "(sums [[] [] [3 3 4 0]]) -> [0 0 10]", "(sums []) -> []", "(sums [[8 3 9 3]]) -> [23]", "(sums [[1] [4 3 0]]) -> [1 7]", "(sums []) -> []", "(sums [[6 7 1 9] []]) -> [23 0]", "(sums []) -> []", "(sums [[] [2] [1 4 5]]) -> [0 2 10]", "(sums [[0 9 0 7] [] [] [4 5 7]]) -> [16 0 0 16]", "(sums [[7] [1 3 7] [6 7 7 7 8] [] [3 7 1 9]]) -> [7 11 35 0 20]", "(sums [[2]]) -> [2]", "(sums []) -> []", "(sums [[] [9 9 9 4 0] [9 0 4 7 9]]) -> [0 31 29]", "(sums [[3 2 4]]) -> [9]", "(sums []) -> []", "(sums [[3 4 6 1 6] [5 6 2 6 3] [7 4 2] []]) -> [20 22 13 0]", "(sums [[4 3 7] [] [8 1 3 4 4] [2 1] []]) -> [14 0 20 3 0]", "(sums [[4 4 7] [] [9 4 1 6]]) -> [15 0 20]", "(sums [[4 9] [3 4] [8 8]]) -> [13 7 16]", "(sums [[4 6 2] [7] [6]]) -> [12 7 6]", "(sums [[7 5 2 9] [7 8]]) -> [23 15]", "(sums [[0 0 5 3] []]) -> [8 0]", "(sums [[1 8]]) -> [9]", "(sums [[7 5 7 6 9] [] [1 7 3] [3 5 9 6 3]]) -> [34 0 11 26]", "(sums [[1] [5 7 0] [4 3] [3] [7 8 9 6 9]]) -> [1 12 7 3 39]", "(sums [[5 3 1 9]]) -> [18]", "(sums [[5 5] [3] [2 8] [4]]) -> [10 3 10 4]", "(sums [[0 2 6 9 7] [2] [2 5 8 8 9] [6 6 4 1] [1 9 8]]) -> [24 2 32 17 18]", "(sums [[5 1 4] [5 9] [2] [2 5 2] [3 5 3]]) -> [10 14 2 9 11]", "(sums []) -> []", "(sums [[1 8]]) -> [9]", "(sums [[0 6 3 6 4]]) -> [19]", "(sums [[0 0 9 6 0] [8 2 9] [5 7 9 4 6]]) -> [15 19 31]", "(sums [[] [6 7 8 4 5] [0 4 6] [7 4] [3]]) -> [0 30 10 11 3]", "(sums [[] [] [5] [7 5 2 9] []]) -> [0 0 5 23 0]", "(sums [[] [5] [8 0] [] [7 9 7]]) -> [0 5 8 0 23]", "(sums [[2] [7 5] [9 7] []]) -> [2 12 16 0]", "(sums [[0 3 5 2 6] [] [5 1 6] [8 4]]) -> [16 0 12 12]", "(sums []) -> []"], "time": 0.546397, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 8 9 6] [9 3] [9 0 8] [5 3 8 3 4]]) -> [23 12 17 23]", "(sums [[6 6 6 2] []]) -> [20 0]", "(sums [[0 5 6 6]]) -> [17]", "(sums [[6 2 1 4]]) -> [13]", "(sums [[5 8] [7 2 6 2] [9]]) -> [13 17 9]", "(sums []) -> []", "(sums [[7] [] [] [2]]) -> [7 0 0 2]", "(sums [[] [6] [0 1 1 1 0]]) -> [0 6 3]", "(sums [[1 4 7 0 6] [2 9 9 7 8] [8 1] [3 5 0 6 2]]) -> [18 35 9 16]", "(sums [[8 6 7] [2 7] [7 9]]) -> [21 9 16]", "(sums [[] [3]]) -> [0 3]", "(sums [[] []]) -> [0 0]", "(sums [[8 4]]) -> [12]", "(sums []) -> []", "(sums [[1 6] [1 5 1 7 7] [0 2] [] [6 3 8 5]]) -> [7 21 2 0 22]", "(sums [[2 0 9] [2 4 6 6]]) -> [11 18]", "(sums [[6] [7] [5 4 5 9 7]]) -> [6 7 30]", "(sums []) -> []", "(sums [[9 5 5] [0 9 4 7] []]) -> [19 20 0]", "(sums [[] [9 1 3 8] [9] [5 9 9] [5 0]]) -> [0 21 9 23 5]", "(sums []) -> []", "(sums [[1 4]]) -> [5]", "(sums []) -> []", "(sums [[4 4 8] [3 5] [9 1] [9 2 2] []]) -> [16 8 10 13 0]", "(sums [[] [0] [6 5 8] [8 2 2 7 6] []]) -> [0 0 19 25 0]", "(sums [[3 8 9 5 0] [9] [] [4 2 8]]) -> [25 9 0 14]", "(sums [[0 5 3 8 2] [5 3 6 6]]) -> [18 20]", "(sums []) -> []", "(sums [[4 1 2 5] [] [] [4 4 3 2 8] [3]]) -> [12 0 0 21 3]", "(sums []) -> []", "(sums [[] [6 3 0 1 7] [3 5 7] []]) -> [0 17 15 0]", "(sums []) -> []", "(sums [[6 5 0 6 7] [7 2]]) -> [24 9]", "(sums [[9 9] [2]]) -> [18 2]", "(sums [[3 0 7]]) -> [10]", "(sums [[]]) -> [0]", "(sums [[] [9 2 9 9]]) -> [0 29]", "(sums [[]]) -> [0]", "(sums [[1 3 2] [] [5 9 9 8]]) -> [6 0 31]", "(sums [[7 9]]) -> [16]", "(sums [[1 9 3] [9 3 8] [5 1 0 7 4]]) -> [13 20 17]", "(sums [[]]) -> [0]", "(sums [[7 5 3 7] [9] [] []]) -> [22 9 0 0]", "(sums [[7 9 7] [8 7 4] []]) -> [23 19 0]", "(sums [[2 4 0 6] [2 8 0 1 1] [1 7 6 3]]) -> [12 12 17]", "(sums []) -> []", "(sums [[4] [1 1] [4 9 5 8 1] [5 6] [9 5 6 6]]) -> [4 2 27 11 26]", "(sums []) -> []"], "time": 0.642572, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2] [8 2 4] []]) -> [2 14 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 5 4 4 7]]) -> [26]", "(sums [[2 2] [4 0] []]) -> [4 4 0]", "(sums [[0] [8] [0 1 5]]) -> [0 8 6]", "(sums [[3 3] [2 3 5 4 1] [8 3 1 6]]) -> [6 15 18]", "(sums [[1 9] [3 6 1] [3] [9 3]]) -> [10 10 3 12]", "(sums [[5 3 8 5 1] [2 0 9]]) -> [22 11]", "(sums [[] [9 7] [8 7 4 0] [6 2 8]]) -> [0 16 19 16]", "(sums [[9 8 8 9] []]) -> [34 0]", "(sums [[1 2 0] [4] [] [2 7]]) -> [3 4 0 9]", "(sums [[] [2 4 9 6 0] [6 1 8 4]]) -> [0 21 19]", "(sums [[7 8 1 0 9] [8] [1] [] [2 8 1]]) -> [25 8 1 0 11]", "(sums [[4 1] [9] [3 3] [6 0 1 8 3]]) -> [5 9 6 18]", "(sums [[] [2 1 0 6]]) -> [0 9]", "(sums [[] [7 0 6 3]]) -> [0 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 7 6 1 6]]) -> [22]", "(sums []) -> []", "(sums [[8 3 5 2 4] [5 6] [4 1 0]]) -> [22 11 5]", "(sums [[8 7 0 3] [6] [6]]) -> [18 6 6]", "(sums [[8] [3 5 4] [7 8] [2 8]]) -> [8 12 15 10]", "(sums []) -> []", "(sums [[] [] [5 7 7 2]]) -> [0 0 21]", "(sums [[8 4 0] [6 7 3 2]]) -> [12 18]", "(sums [[8] [0 9] [5 1 3 4]]) -> [8 9 13]", "(sums [[6 0 5] [4 2 1 8 3] [3 1 5 6]]) -> [11 18 15]", "(sums []) -> []", "(sums [[] [4] [4] [6] [9 7 8 1 4]]) -> [0 4 4 6 29]", "(sums [[7 0] [1 5] [] [] [8]]) -> [7 6 0 0 8]", "(sums [[9 9 9 1] [0 0 3 8 9] [7]]) -> [28 20 7]", "(sums [[9 6]]) -> [15]", "(sums [[5 9 0 7] [7 3 5 6]]) -> [21 21]", "(sums []) -> []", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[9 5 9 6] [7 9 6] [] [3 6]]) -> [29 22 0 9]", "(sums [[] [2 4 0 1 2] [5 5]]) -> [0 9 10]", "(sums [[6 2] [] [7 6 8] [6 0 9 2 7]]) -> [8 0 21 24]", "(sums [[7 8 9]]) -> [24]", "(sums []) -> []", "(sums [[0 5 4 7] [7 5 9 5] [8 0 1 9 3] [] [6]]) -> [16 26 21 0 6]", "(sums [[7 9]]) -> [16]", "(sums [[4 9 0]]) -> [13]", "(sums [[] [0 0] []]) -> [0 0 0]", "(sums []) -> []"], "time": 0.378315, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [4 0 3 5] [2 2 0] [2 7] [3]]) -> [0 12 4 9 3]", "(sums [[4 3 2] [] []]) -> [9 0 0]", "(sums [[]]) -> [0]", "(sums [[8] []]) -> [8 0]", "(sums []) -> []", "(sums [[7] [3] [2] [] [5]]) -> [7 3 2 0 5]", "(sums [[8 9 0 5]]) -> [22]", "(sums [[1 1 2 2]]) -> [6]", "(sums []) -> []", "(sums [[6 8] [7 0 5 9 4]]) -> [14 25]", "(sums [[7] [8 7]]) -> [7 15]", "(sums [[2 6 4] [] [8 2 8 1 3] [8 9]]) -> [12 0 22 17]", "(sums []) -> []", "(sums []) -> []", "(sums [[7 7 3 6] [5 7 4 7 7]]) -> [23 30]", "(sums [[1 0] [] [] [] [2 2 0]]) -> [1 0 0 0 4]", "(sums [[5 5] [4 2 1 1 6]]) -> [10 14]", "(sums []) -> []", "(sums [[8 0 8] [7 4 7 1]]) -> [16 19]", "(sums [[0 4 8 8 3] [8 6]]) -> [23 14]", "(sums [[6 2 0] [8 7 3 0 4]]) -> [8 22]", "(sums [[4 8] [8 6 6] [0 0] [8 3 8 8 3] [5 9]]) -> [12 20 0 30 14]", "(sums [[] [1 2 0] [3 8 5 9] [7 4]]) -> [0 3 25 11]", "(sums [[5 6] [3] [5 2 2 5] [8 6 8 5 5]]) -> [11 3 14 32]", "(sums [[3 5 6 8] [5 7 4 1]]) -> [22 17]", "(sums []) -> []", "(sums [[] [1 4 8] [8] [7 0 1 9 9] [1 0]]) -> [0 13 8 26 1]", "(sums []) -> []", "(sums [[] [] [] [0 1] [6 9 5 8 3]]) -> [0 0 0 1 31]", "(sums [[1 8] [6 4] [] [3 1] [9 4 7 1]]) -> [9 10 0 4 21]", "(sums [[] [8 5 0 8 6] [3 7]]) -> [0 27 10]", "(sums []) -> []", "(sums [[9 3 3] [] [4] [] [5 8 7 2 3]]) -> [15 0 4 0 25]", "(sums [[0 2 5 4 2] [] [9 2 0 1 4] [4 3]]) -> [13 0 16 7]", "(sums []) -> []", "(sums [[6] [5 9 8]]) -> [6 22]", "(sums [[] [6 1]]) -> [0 7]", "(sums [[7 0 0] [6 0 2 8] [4 3 0]]) -> [7 16 7]", "(sums [[1] [8] []]) -> [1 8 0]", "(sums [[] [1 1 4]]) -> [0 6]", "(sums []) -> []", "(sums [[3 4 5] [2 8 5]]) -> [12 15]", "(sums [[9 8] [8]]) -> [17 8]", "(sums [[1 0 1 0 5]]) -> [7]", "(sums [[1 6 4 9 9] [5 5 1 4 6]]) -> [29 21]", "(sums [[2 5 1 2] [5 0 7] [3 4 9]]) -> [10 12 16]", "(sums [[1 0 1]]) -> [2]", "(sums [[8 9 1]]) -> [18]"], "time": 0.592246, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[1 1 6]]) -> [8]", "(sums [[] [9 8 4 8] [3 4 8 6 8]]) -> [0 29 29]", "(sums [[3 0 7 0 7] [7]]) -> [17 7]", "(sums [[6 0] [7 9] [2 9 5]]) -> [6 16 16]", "(sums []) -> []", "(sums [[2 1 1] [0 5 0] [1 0] [8 5 9 2] [7 8 3]]) -> [4 5 1 24 18]", "(sums [[1 5 0 6 4] [9] [3 6 2 6] [2 3 3 6] [0 3 4 1 5]]) -> [16 9 17 14 13]", "(sums [[1 9] [0 0 5 4] [0 2 0 7 2] [] []]) -> [10 9 11 0 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 0 6] [0 8 9 4] [8 3 2 3] [1 0] [9 8 0 6]]) -> [8 21 16 1 23]", "(sums [[1 3 0 3] [9 1 2 6] [6 7 6 9] [2 7 5 1 0]]) -> [7 18 28 15]", "(sums [[6 3 8 6]]) -> [23]", "(sums [[0 1 9]]) -> [10]", "(sums [[5 3] [3 0 5 5]]) -> [8 13]", "(sums [[0 7 4] [3 7 6 9 4] [0 9 6 7] [7]]) -> [11 29 22 7]", "(sums [[4 2 8 8 5] [4 7 8 3 7] [2 6 5] [8 7 7 9 5] [2 6 5 8 7]]) -> [27 29 13 36 28]", "(sums [[3 3 0 9] [1 1 1] [] [4 7 9 3]]) -> [15 3 0 23]", "(sums [[6 5 0 2 7]]) -> [20]", "(sums [[5] [3 1 8 1 8] [] [8] [8]]) -> [5 21 0 8 8]", "(sums [[8 0 5 5 0]]) -> [18]", "(sums [[4 2 9] [9 9 7 4] [4 6 7] [8 7 5 6]]) -> [15 29 17 26]", "(sums [[7 7 0 3] [] [1 3 1 2]]) -> [17 0 7]", "(sums [[] [9 2 6 9]]) -> [0 26]", "(sums [[5 0 4 1] [4] [7 1 5 2 2] []]) -> [10 4 17 0]", "(sums []) -> []", "(sums [[0 3 3 4 4]]) -> [14]", "(sums [[3 5] [9] [5 8 2 3] [7 4 5]]) -> [8 9 18 16]", "(sums [[] [1 6 9]]) -> [0 16]", "(sums [[2 3 5]]) -> [10]", "(sums [[] [1] []]) -> [0 1 0]", "(sums []) -> []", "(sums [[5 6 4 8 7] [9] [5 5] [9 7 8 3]]) -> [30 9 10 27]", "(sums []) -> []", "(sums [[9] [] []]) -> [9 0 0]", "(sums [[3 1 3 2] [2 0 7 5] [2 4 0 1] [2 0 9] [0 4 2 1 4]]) -> [9 14 7 11 11]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 8 5]]) -> [15]", "(sums [[3 0] [4 9] [4] []]) -> [3 13 4 0]", "(sums [[6 1 2 7 2] [] [6 0] [1 4]]) -> [18 0 6 5]", "(sums [[2 1]]) -> [3]", "(sums [[5 7 0 1] [3 4 2] [] [0 9 7 9 7] [8 2]]) -> [13 9 0 32 10]", "(sums [[5 6 3] [9 6 0] [1 5 0]]) -> [14 15 6]", "(sums [[0] [8] [8 4] [4 8] [1 4 0]]) -> [0 8 12 12 5]", "(sums [[9 4 1 6 3] [2 3 6 0 0] [5 1 4 3 2] [0 4 6 6] [3 4 3]]) -> [23 11 15 16 10]", "(sums [[] [9 6] [3 7 4 2] [8 0 2 6] [4]]) -> [0 15 16 16 4]", "(sums [[4 6 3] [7] []]) -> [13 7 0]"], "time": 0.572842, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[8 5 9 8 5] [6 0] [3 2] [5]]) -> [35 6 5 5]", "(sums [[7] [0 9 0 6 5] [2 1 0 1 9] [5 2 8 2 3] [4 7 1]]) -> [7 20 13 20 12]", "(sums [[9 4 4 7 0] [9 2 0 8 0] []]) -> [24 19 0]", "(sums [[7 3 8 8] [4 7 6 6] [3 1 2] [9 3] [6 9]]) -> [26 23 6 12 15]", "(sums []) -> []", "(sums [[] [] [0] []]) -> [0 0 0 0]", "(sums [[6] [9 9 9 7 6]]) -> [6 40]", "(sums [[8 0] [4 0 2] [9 2 8] [0] []]) -> [8 6 19 0 0]", "(sums [[9] [4 2]]) -> [9 6]", "(sums [[1 9 0 2 9] [0 0 1 5] [5 4] [] [4 1]]) -> [21 6 9 0 5]", "(sums [[6 7 6 5] [1 3 9]]) -> [24 13]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 1 5 8] [] [4 7 1 1] [9 4 2] [8 7 4 7]]) -> [23 0 13 15 26]", "(sums [[] [7 5 0 2 0] [2 0]]) -> [0 14 2]", "(sums [[2 1] [] [8]]) -> [3 0 8]", "(sums [[8 6 7 3] [9 1 9] [3 0 9 3 5] [] [2 0 9]]) -> [24 19 20 0 11]", "(sums [[4 0 7] [6]]) -> [11 6]", "(sums []) -> []", "(sums [[9] [2 6 5 1] [9] []]) -> [9 14 9 0]", "(sums []) -> []", "(sums [[] [1 1 9 9 2] [] [0 1 3 8 2]]) -> [0 22 0 14]", "(sums [[6 7] [] [8 4 6 1 7]]) -> [13 0 26]", "(sums [[] [9]]) -> [0 9]", "(sums [[3 3 7]]) -> [13]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[9 3 2] [7 8 0]]) -> [14 15]", "(sums [[6 0 1 8] [5] [6 2 6 4 8] [5 2 9 4] [9 6]]) -> [15 5 26 20 15]", "(sums [[2 2 9] [] [9 8] [0] [6 3 0 4 6]]) -> [13 0 17 0 19]", "(sums [[3 5] [] [5 6] [6 7 2 3 0] [9 5 6 6 0]]) -> [8 0 11 18 26]", "(sums [[8 6] []]) -> [14 0]", "(sums [[]]) -> [0]", "(sums [[2 2 0] [6 6]]) -> [4 12]", "(sums [[1 2 2 6] [] [5 9]]) -> [11 0 14]", "(sums [[9 2] [3] [1 7 9 9] []]) -> [11 3 26 0]", "(sums [[1 3 6 1] [4] [5 6]]) -> [11 4 11]", "(sums [[2]]) -> [2]", "(sums []) -> []", "(sums [[7 5 1] [2 8 9 6] [5] [6 9 3]]) -> [13 25 5 18]", "(sums [[1] [2]]) -> [1 2]", "(sums [[6 7] [] [] [2 5 7 1]]) -> [13 0 0 15]", "(sums [[7 8 7] [] [3 3] [0 6]]) -> [22 0 6 6]", "(sums []) -> []", "(sums [[7 8] [0] [] [2 6 5 8 1] [9]]) -> [15 0 0 22 9]", "(sums [[9 1 5 9] [] [4]]) -> [24 0 4]"], "time": 0.555127, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 3 2 3] [3 5 8 9] [6 1 9 3 1] [0 0 8 9 1]]) -> [15 25 20 18]", "(sums [[8 2 7 1 3]]) -> [21]", "(sums [[3 5 2 8] [3 7 7 3]]) -> [18 20]", "(sums [[] [] [0]]) -> [0 0 0]", "(sums [[6 1 2 6 0]]) -> [15]", "(sums [[8 3 4] [6 5 3] []]) -> [15 14 0]", "(sums [[4 0] [] [4 7 8 9 8] [3 2 0]]) -> [4 0 36 5]", "(sums [[5 4 9 0 4] [4] [0] [1 1 0 6 2]]) -> [22 4 0 10]", "(sums [[9] [4 1] [1]]) -> [9 5 1]", "(sums [[5 5 3 6 4]]) -> [23]", "(sums [[0]]) -> [0]", "(sums [[] [2 2 4] [0 3 9] [3 8 1]]) -> [0 8 12 12]", "(sums [[5 8 2 2 6] [0 0 0] [9 5 9 8 5] [0 0] []]) -> [23 0 36 0 0]", "(sums [[6 9] [6 1 2 1 8] [4 8 9 0] [5 5]]) -> [15 18 21 10]", "(sums [[5 1 0] [2 7]]) -> [6 9]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[3 9] [2 0 4 0] [7 0 9 2 3] [5 3] [4]]) -> [12 6 21 8 4]", "(sums [[2 9]]) -> [11]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [3 8 4]]) -> [0 15]", "(sums [[1]]) -> [1]", "(sums [[4] [0 6 8 2] [5 3 5 4]]) -> [4 16 17]", "(sums [[6 0 5 9]]) -> [20]", "(sums [[] [1] [9 6 2 4 4]]) -> [0 1 25]", "(sums [[7 7 4 5] [5 9 2 4] [6 9] [7 7 4 1]]) -> [23 20 15 19]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[2 4]]) -> [6]", "(sums [[6 9 9] [7]]) -> [24 7]", "(sums []) -> []", "(sums [[0 5 4]]) -> [9]", "(sums [[7 6 4 5] []]) -> [22 0]", "(sums [[7 3 5 4] [6 0 9] [6 2 4]]) -> [19 15 12]", "(sums [[4 5 9]]) -> [18]", "(sums [[7 2 7 7 9] [0 5 7 8]]) -> [32 20]", "(sums [[1 1]]) -> [2]", "(sums [[5] [2 2 1 0 0] [] [0 1 7 1 9]]) -> [5 5 0 18]", "(sums [[]]) -> [0]", "(sums [[0 8 7 2] [8]]) -> [17 8]", "(sums [[3 4 7] []]) -> [14 0]", "(sums [[4] [2] [1 0 5]]) -> [4 2 6]", "(sums [[9 8 0 2]]) -> [19]", "(sums [[6 9 5]]) -> [20]", "(sums []) -> []", "(sums []) -> []"], "time": 0.583113, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[6 4 4 2 0] [] [8 8 1] [9 2] [7]]) -> [16 0 17 11 7]", "(sums [[5 6 0 8] [5 6] [0 9 7 9]]) -> [19 11 25]", "(sums [[0] [] [2 3 2 1] [5 2 8] [6 3 0]]) -> [0 0 8 15 9]", "(sums [[7] []]) -> [7 0]", "(sums [[1 4] [6 3 6 9] [] [1 2 2] [8 1 1]]) -> [5 24 0 5 10]", "(sums [[4 5] [4] [0 9 7 3 7]]) -> [9 4 26]", "(sums [[9 4] [4 7 3] [6 6 3 9 9] [] []]) -> [13 14 33 0 0]", "(sums [[] [2 5] [1 8 8] [4 1] [6 5]]) -> [0 7 17 5 11]", "(sums []) -> []", "(sums [[7 1 7]]) -> [15]", "(sums [[4 2 8 6 7] [8 3 4]]) -> [27 15]", "(sums [[9 4] [4 2] [4 6 5 1 4] [5 3 6] [9 1 8 4]]) -> [13 6 20 14 22]", "(sums [[8 8 6] [3 9 9 4] [9 2]]) -> [22 25 11]", "(sums [[5 0] [0] [2 5 8]]) -> [5 0 15]", "(sums [[] []]) -> [0 0]", "(sums [[7 2 8] [3 6 0 9] [2 9 1 3 7]]) -> [17 18 22]", "(sums [[] [9 0 8] []]) -> [0 17 0]", "(sums []) -> []", "(sums [[6] [2 0 5] [9 4] [6 9 2] [8]]) -> [6 7 13 17 8]", "(sums [[0 2 8 4] [2 7] [] [2 8 1 5 3]]) -> [14 9 0 19]", "(sums []) -> []", "(sums [[6 0 7] [0 2 9] [8 2]]) -> [13 11 10]", "(sums [[8 4] []]) -> [12 0]", "(sums [[0 3 8 0 8] [3 7]]) -> [19 10]", "(sums []) -> []", "(sums [[4 7] [1] [5 2 2 9 9] [9]]) -> [11 1 27 9]", "(sums [[0 2 5] [1]]) -> [7 1]", "(sums [[] [5 9 3] [1] [3 6 7 2 7] [5 3 1]]) -> [0 17 1 25 9]", "(sums [[2] [1] [2 4 7] [2]]) -> [2 1 13 2]", "(sums [[] [5 7 1] [] [6 3 4]]) -> [0 13 0 13]", "(sums [[4 3 5 2] [5 8 7 2 2] [0 4] []]) -> [14 24 4 0]", "(sums [[7 9 5 5] [0] [2 1 6] [5] [6 5 1]]) -> [26 0 9 5 12]", "(sums [[4 6 1]]) -> [11]", "(sums [[1 8 5] [6 0 4 6]]) -> [14 16]", "(sums [[7] [7 5] [7 5] [1 6 1]]) -> [7 12 12 8]", "(sums [[5 2] [7] [5 6 3 5]]) -> [7 7 19]", "(sums []) -> []", "(sums [[] [] [7 6 2]]) -> [0 0 15]", "(sums [[6 8] [6] [2 2 6]]) -> [14 6 10]", "(sums [[0 2 7] [6 4]]) -> [9 10]", "(sums [[7 5 7] [3] [9 5 6 9 0] [1] [5]]) -> [19 3 29 1 5]", "(sums [[7 4 2 6 6] [7 7 9 5]]) -> [25 28]", "(sums []) -> []", "(sums [[7 1 6] [0 4]]) -> [14 4]", "(sums [[7 0 3 7] [7 8 3]]) -> [17 18]", "(sums [[7 1 0 8] [1 6] [] [3 3 9 8] []]) -> [16 7 0 23 0]", "(sums [[3] [4 7] [3 3 6 9] [6 5 6 9 2]]) -> [3 11 21 28]", "(sums [[0 4 6 6] [1 3]]) -> [16 4]"], "time": 0.624626, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 5]]) -> [10]", "(sums [[2 4] [0 2 1 3] [0 1 6] [8 7 4 6 3] [7 4]]) -> [6 6 7 28 11]", "(sums [[9 8 4 4] [5 0 9 7] [8 5 5] [8 5 9]]) -> [25 21 18 22]", "(sums [[0 2]]) -> [2]", "(sums [[6 1 3]]) -> [10]", "(sums [[7 0 8 1]]) -> [16]", "(sums [[1 7] [6] [5] [8 1] [4 1 9]]) -> [8 6 5 9 14]", "(sums []) -> []", "(sums [[0 6 7 3 7] [3 1 9]]) -> [23 13]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 4]]) -> [6]", "(sums [[3 3]]) -> [6]", "(sums [[3 5 2 4 3] [4 1]]) -> [17 5]", "(sums [[7 5] [7 1 6] [2] [9 0 3 1]]) -> [12 14 2 13]", "(sums [[3]]) -> [3]", "(sums [[]]) -> [0]", "(sums [[6 7 2]]) -> [15]", "(sums [[2] [5 4 4 9] [8]]) -> [2 22 8]", "(sums []) -> []", "(sums [[8] [2 5 2]]) -> [8 9]", "(sums [[7] [9 3 2 5 6] [3]]) -> [7 25 3]", "(sums [[3 0 8] [8] [5 5 3 8 3]]) -> [11 8 24]", "(sums []) -> []", "(sums [[5 9 1 9 3] [4 7 9] [5] [6 0 1 6 7]]) -> [27 20 5 20]", "(sums [[1 2 0 2] [5 1 2 6] [2]]) -> [5 14 2]", "(sums [[3 3 1]]) -> [7]", "(sums [[8 9] [0 5] [3]]) -> [17 5 3]", "(sums [[3 8 4] [9 6 3] [2 8 9]]) -> [15 18 19]", "(sums [[6 3 4]]) -> [13]", "(sums [[8 7 6 7] [] [0] [] [9 4 0]]) -> [28 0 0 0 13]", "(sums [[3 0]]) -> [3]", "(sums [[2 6 8 4] [6 3 9 7 7] [] [8 8 2 0 3] [6]]) -> [20 32 0 21 6]", "(sums [[0 5 1] [] [4]]) -> [6 0 4]", "(sums [[2 9] [] [7 7 4 9] []]) -> [11 0 27 0]", "(sums [[1] [1 4 5] [7]]) -> [1 10 7]", "(sums []) -> []", "(sums [[] [8 6 7 3 6]]) -> [0 30]", "(sums [[4 8 3 1]]) -> [16]", "(sums [[] [8 3 9] [] [7 1 1 2]]) -> [0 20 0 11]", "(sums [[4]]) -> [4]", "(sums [[3 9 9] [] [9 8 8 9 0] [] [9 3 4 2 8]]) -> [21 0 34 0 26]", "(sums [[9 8 6 1 6] [4 9 1 3] [3 9 1] [] [7 5]]) -> [30 17 13 0 12]", "(sums [[4 2 6 7 6] [0 6 8] [0 2 2 3] [8 5 9 1] [9 6 6]]) -> [25 14 7 23 21]", "(sums []) -> []", "(sums [[3] [1 4 0] [7 1 0 6]]) -> [3 5 14]", "(sums []) -> []", "(sums [[3 7 1 3 4] [3 8 4 4] [0 0 2 0 9] [5 4 6 9 4] [2 3]]) -> [18 19 11 28 5]"], "time": 0.381384, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2 0 8 2 9] [9] [4] [6 7 2 5 1]]) -> [21 9 4 21]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[] [3 5 9 8]]) -> [0 25]", "(sums [[4 6 1] [] [5 8] [0 6 2 9 8]]) -> [11 0 13 25]", "(sums [[] [] [4 9 0 6 8] [3]]) -> [0 0 27 3]", "(sums [[8 1] [7 9]]) -> [9 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[0]]) -> [0]", "(sums [[] [] [7]]) -> [0 0 7]", "(sums [[]]) -> [0]", "(sums [[0 6 1] [1 3 3 0] [4 6 9] [5]]) -> [7 7 19 5]", "(sums []) -> []", "(sums [[4] [] [5]]) -> [4 0 5]", "(sums []) -> []", "(sums [[2 7 9 0] [1 9] [1 7 2] [6 0] [0]]) -> [18 10 10 6 0]", "(sums [[2] [2] [7 5]]) -> [2 2 12]", "(sums [[9] [8 6 3 9] [] [1 1 7]]) -> [9 26 0 9]", "(sums [[] [7 8] [8 5 9] [2 1 9 4] [3 7 3 4 2]]) -> [0 15 22 16 19]", "(sums [[5] [9 7] []]) -> [5 16 0]", "(sums [[5] [6]]) -> [5 6]", "(sums [[6 2 7 6 4]]) -> [25]", "(sums []) -> []", "(sums [[5 8 3] [6 9] [1 7] [9 7 8]]) -> [16 15 8 24]", "(sums [[7 4 5 8 3]]) -> [27]", "(sums [[4 9 8] [9 4 9 3]]) -> [21 25]", "(sums []) -> []", "(sums [[7 2 5]]) -> [14]", "(sums [[] [6 1 3 6] []]) -> [0 16 0]", "(sums [[7 3 3 4] [1 2] [1 6 0 5 3] [8 1 5 3 8]]) -> [17 3 15 25]", "(sums [[] [2 9 0 0]]) -> [0 11]", "(sums [[7 7] [1 1 9] [7]]) -> [14 11 7]", "(sums [[6 9 9 1 9] [2 6] [1 3 5 9 9] [] [5 6 1 1 5]]) -> [34 8 27 0 18]", "(sums [[2 5] [2 3 8] [1 4]]) -> [7 13 5]", "(sums [[8 3 9 3] [5 3 1 3 6] [0 6 7 6 2] [6 2] [5 2 2 5 2]]) -> [23 18 21 8 16]", "(sums []) -> []", "(sums [[9] [5 8] [6 7] [9 5 5 6] [5]]) -> [9 13 13 25 5]", "(sums [[7 7 8 9 4] [3 3] [7]]) -> [35 6 7]", "(sums [[1 8 6 9]]) -> [24]", "(sums [[3 3 8 9] [2] [] [7 1 1 9]]) -> [23 2 0 18]", "(sums [[3 7] [5 0 9] [7 4 6] [1 6] [0]]) -> [10 14 17 7 0]", "(sums [[8 7 3 2]]) -> [20]", "(sums [[1] [4 1] [0 0 7 8 0] [0 0 1 3 5]]) -> [1 5 15 9]", "(sums []) -> []", "(sums [[3 4]]) -> [7]", "(sums [[6 4 5 1 6] [1 5 8 7 3] [] [5 8]]) -> [22 24 0 13]", "(sums []) -> []"], "time": 0.423163, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 7] [9 5] [3 7]]) -> [10 14 10]", "(sums []) -> []", "(sums [[4 8 3 3] [3 6 1 5 9]]) -> [18 24]", "(sums [[1 7 0] [] [7 6 4 1]]) -> [8 0 18]", "(sums [[0 9] [9 7 9 1] [4 3 9] [3] [0]]) -> [9 26 16 3 0]", "(sums [[7 6 7] [2 5 6] []]) -> [20 13 0]", "(sums [[7] [0] [4 1]]) -> [7 0 5]", "(sums [[8 8 8 0]]) -> [24]", "(sums [[4 5 5 0 6]]) -> [20]", "(sums [[4 4 1 1] [3 5 9 9] [7 2 4 8 5]]) -> [10 26 26]", "(sums []) -> []", "(sums [[] [0 4 7 9]]) -> [0 20]", "(sums [[8 0 3 3] [2 9 9 2 8] [8 5 2 9]]) -> [14 30 24]", "(sums [[1 6 4 7 0] []]) -> [18 0]", "(sums [[3 4 6] [] [5 7]]) -> [13 0 12]", "(sums [[8]]) -> [8]", "(sums [[5 1] [7 2 0 8 9] []]) -> [6 26 0]", "(sums [[]]) -> [0]", "(sums [[1 9 1 9 7] []]) -> [27 0]", "(sums [[1 4 8 3 5] [3 9 2 3 7] [1 9 9]]) -> [21 24 19]", "(sums [[6] [7 0 6] [0 3 6] [9] [1 2 0 6 1]]) -> [6 13 9 9 10]", "(sums [[7] [2 1 6] [7 6 1 2]]) -> [7 9 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[3 0 6] [2 8 2] [9 7 3 4]]) -> [9 12 23]", "(sums [[8] [3 0 8 6 0] [8] [9 6 5 9]]) -> [8 17 8 29]", "(sums [[4] [6 7 5] [9]]) -> [4 18 9]", "(sums [[1 5 9 1] [3 4 2] [8] [0 1 1 8]]) -> [16 9 8 10]", "(sums [[2] [0]]) -> [2 0]", "(sums [[6 7 8] [2 7]]) -> [21 9]", "(sums [[3 2 1 6 8]]) -> [20]", "(sums [[8 7 7 2] [] [0 9 6 1] [5 4] [4]]) -> [24 0 16 9 4]", "(sums [[2 6 0 2 3] [3 8 3 4] [2 0 2 6 9]]) -> [13 18 19]", "(sums []) -> []", "(sums []) -> []", "(sums [[1 0 0 1] [1 8 7 6 4] [9 7 9 3] [2] [6 8 1 2 1]]) -> [2 26 28 2 18]", "(sums []) -> []", "(sums []) -> []", "(sums [[8 7 9 1 5] [7 4 0 9 6] [5 5 1] [8 4] [0 8 9 6 4]]) -> [30 26 11 12 27]", "(sums [[5 7 7] [3 7 0] [7] []]) -> [19 10 7 0]", "(sums [[] [] []]) -> [0 0 0]", "(sums []) -> []", "(sums [[] [1]]) -> [0 1]", "(sums []) -> []", "(sums [[] [0 2 7 0] [5]]) -> [0 9 5]", "(sums [[4 3 1 2] [2 4] [8 0 0]]) -> [10 6 8]", "(sums [[5]]) -> [5]", "(sums [[4 5 4] [6 8 2 1] [9 0 9]]) -> [13 17 18]"], "time": 0.461867, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 9 1 8 9] [2 9 9 5] []]) -> [27 25 0]", "(sums [[] [2 8 5 7 8] [3] [9 9] [4 7 9]]) -> [0 30 3 18 20]", "(sums [[2 1] [5 8 3 6]]) -> [3 22]", "(sums [[0 3 0] [5 2 0]]) -> [3 7]", "(sums [[0 4 8 7 8]]) -> [27]", "(sums [[3]]) -> [3]", "(sums [[8 0 8]]) -> [16]", "(sums []) -> []", "(sums [[7 5] [6 3] [4 5] [7 8 1] []]) -> [12 9 9 16 0]", "(sums [[9 5 0] [1 9 1]]) -> [14 11]", "(sums []) -> []", "(sums [[3 5 9 6 2] [6] [9 8 6 8]]) -> [25 6 31]", "(sums [[2 5] [2 9 8]]) -> [7 19]", "(sums []) -> []", "(sums [[8 5] [3 1 5 7] [5 1]]) -> [13 16 6]", "(sums [[2 3 4 2] [2 9] [9]]) -> [11 11 9]", "(sums []) -> []", "(sums [[] []]) -> [0 0]", "(sums [[2 6] [8 3 3 0] [2 4 1 0 5] [6 9 4 8] [9 3]]) -> [8 14 12 27 12]", "(sums [[6 9 5] [6 1 9 4 9] [2 3 1 3 3] [9 4 7 3] [8 5 1 7]]) -> [20 29 12 23 21]", "(sums []) -> []", "(sums [[9 4 2 4 5]]) -> [24]", "(sums [[3]]) -> [3]", "(sums [[3 2 5 2 8] [4 2 4] [2] [5] [1]]) -> [20 10 2 5 1]", "(sums [[2] [] [0 4 4] [7] [7 2 7]]) -> [2 0 8 7 16]", "(sums [[8 6] [9 9 0] [6]]) -> [14 18 6]", "(sums []) -> []", "(sums [[9 6 6] [] [7]]) -> [21 0 7]", "(sums [[1 1 8] [5 3 4] [0 2 5 6] [2 9 9 9 9]]) -> [10 12 13 38]", "(sums []) -> []", "(sums [[1 4] [8] []]) -> [5 8 0]", "(sums []) -> []", "(sums [[4 7 2 1] [4] [2 4 9] [8 6 2 3]]) -> [14 4 15 19]", "(sums []) -> []", "(sums []) -> []", "(sums [[4 2 3 2]]) -> [11]", "(sums [[2 2 9 9] [6 0 5 2 6] [9 0 9 7]]) -> [22 19 25]", "(sums [[3 2]]) -> [5]", "(sums [[2 9 9] [0 6 1 3]]) -> [20 10]", "(sums [[7] [1 8 8 0] [] [6 6 8 4] [7 2 2 5]]) -> [7 17 0 24 16]", "(sums [[9 2 7 1 3] [1 2] [8 3 1]]) -> [22 3 12]", "(sums []) -> []", "(sums [[5 0 1]]) -> [6]", "(sums [[6 7]]) -> [13]", "(sums [[2 4 9] []]) -> [15 0]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []"], "time": 0.467752, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2] [] [3 5 4 0] [4 8] [9 4]]) -> [2 0 12 12 13]", "(sums [[5 6 2] [0 1 5]]) -> [13 6]", "(sums [[4 1] [8 7 4] [9] [7 8 1] [2 3 2 9]]) -> [5 19 9 16 16]", "(sums [[1 2 2] [5]]) -> [5 5]", "(sums [[0 1 6 6 6] [2 6] [1 5] [6 9 8 3 9] [5]]) -> [19 8 6 35 5]", "(sums [[8]]) -> [8]", "(sums [[5] [3 5 8 5]]) -> [5 21]", "(sums [[5 2 2 3 6] [3] [7 1 1] [0 0 3 0 8] []]) -> [18 3 9 11 0]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[6 8] [3 8 6 5] [3 7 7 7] [8 8 9] [8 2 7]]) -> [14 22 24 25 17]", "(sums []) -> []", "(sums [[] [6] [5 6 9 8 9]]) -> [0 6 37]", "(sums [[9] [] [7 9 1] [9 2 3] [8 8 0]]) -> [9 0 17 14 16]", "(sums [[1] []]) -> [1 0]", "(sums [[5 1] [3] [1 9 6]]) -> [6 3 16]", "(sums [[2 8 3] [2] [7 3] []]) -> [13 2 10 0]", "(sums [[0 5 5 6 0] [] [] [] [4 1 9 7 3]]) -> [16 0 0 0 24]", "(sums [[5 8 4 0 8] [3 0 2 5 7] [1] []]) -> [25 17 1 0]", "(sums [[0 0] [] [6]]) -> [0 0 6]", "(sums [[1 4 8] [0 2] [4 1 2 9] [2 5 7 4] [6]]) -> [13 2 16 18 6]", "(sums [[]]) -> [0]", "(sums [[] [3 1 4]]) -> [0 8]", "(sums [[4 2 5] [] [2 6] [8 4] [4 0 7]]) -> [11 0 8 12 11]", "(sums [[2 5 4 9 0]]) -> [20]", "(sums [[6 7 6] [8]]) -> [19 8]", "(sums [[5 8] [1 6 6 0 5]]) -> [13 18]", "(sums [[0] [4] [0 6 7 5 2]]) -> [0 4 20]", "(sums [[2 3 2 4] [5 0]]) -> [11 5]", "(sums [[3 4 5]]) -> [12]", "(sums [[4 7] [3 7]]) -> [11 10]", "(sums [[7 3 4 0] [9 2 0] [5 0 7 0 6] [4 2 0 8 7] [1 7 7 0]]) -> [14 11 18 21 15]", "(sums [[7 9 1] [2 6 8 1 7] [8 4 3]]) -> [17 24 15]", "(sums [[1 0 2 9] [3 0 3] [5 7 0 3] [6 1] [9]]) -> [12 6 15 7 9]", "(sums [[4] [0 3 1 6] [5 6 0]]) -> [4 10 11]", "(sums [[0 0 7 2] [7 6] [] [6 2 4]]) -> [9 13 0 12]", "(sums [[6]]) -> [6]", "(sums [[9 8]]) -> [17]", "(sums []) -> []", "(sums [[1 9] [1] [2 7]]) -> [10 1 9]", "(sums [[4 7 7] [4 5]]) -> [18 9]", "(sums [[3] [9 0 7 6 0] [4 6 1 2] [3 4] [3 3]]) -> [3 22 13 7 6]", "(sums [[8] [2 0] [] [6 2 9] [4 3 8 5]]) -> [8 2 0 17 20]", "(sums [[] [7 4 2]]) -> [0 13]", "(sums [[5 3 8] [2 7 3 3 8]]) -> [16 23]", "(sums [[5 4 5 4 4]]) -> [22]", "(sums [[4] [6]]) -> [4 6]", "(sums [[3 7 0 3]]) -> [13]"], "time": 0.467543, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [3 2 0] [3 8 5 3 8]]) -> [0 5 27]", "(sums [[5 1] [3] [] [8 5 0 4 5]]) -> [6 3 0 22]", "(sums []) -> []", "(sums [[2 0 8] [7 2 9 9 7] [6 5 9 2 2]]) -> [10 34 24]", "(sums [[8 8 0 9 5] [1 0 4 6] [5 2 4 0] []]) -> [30 11 11 0]", "(sums [[0 7 2 5 6] [2 0 4] [] []]) -> [20 6 0 0]", "(sums [[7 7 9 8] [] [2 3 7 3 6] [4 0 4 6 4] [1 8]]) -> [31 0 21 18 9]", "(sums [[0 6 5 0 4] [4 5 0 3]]) -> [15 12]", "(sums [[0 2 6 1] []]) -> [9 0]", "(sums [[1 3] [7 5 2] [9 3 2 7] [1] [8 3 4 3]]) -> [4 14 21 1 18]", "(sums [[6 1]]) -> [7]", "(sums [[] [8] [1 1] [2 0] []]) -> [0 8 2 2 0]", "(sums [[4 0 2 9] [2 9 7 9] [7 8 9 7 7] [6 9 3] [5 6 2]]) -> [15 27 38 18 13]", "(sums [[] [] [9]]) -> [0 0 9]", "(sums []) -> []", "(sums []) -> []", "(sums [[7 4] [5 4 2 0] [6 6 2 2 4]]) -> [11 11 20]", "(sums [[6 5 6] [9 5 8 8] [3 5 6 4]]) -> [17 30 18]", "(sums [[4 1 0] [0] [3 2 0]]) -> [5 0 5]", "(sums [[] [] [6] [4]]) -> [0 0 6 4]", "(sums [[9 9] [9 3 6 6 5] [2] [6 0 7]]) -> [18 29 2 13]", "(sums [[6]]) -> [6]", "(sums []) -> []", "(sums [[7] [1 8 0 9] [9 2 8 9 5] [7 3 9]]) -> [7 18 33 19]", "(sums [[0 7 2 2 3] [0 5 7 7 5] [3 0] [3] [7 7 4 3]]) -> [14 24 3 3 21]", "(sums [[] []]) -> [0 0]", "(sums [[4 1 0 1] [9 1 5]]) -> [6 15]", "(sums [[1] [7 3 1] [1 1 8 9] [0 3 5] [2 0]]) -> [1 11 19 8 2]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[9] [2 8] [5]]) -> [9 10 5]", "(sums [[1 6] [2 2 8 6 0] [2 1 3]]) -> [7 18 6]", "(sums [[6 3 3 2] [6 0 8] [8 4 0 7] [3]]) -> [14 14 19 3]", "(sums []) -> []", "(sums [[8]]) -> [8]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[7 3 7] [4 3 1 5] [2 6 4 5 7]]) -> [17 13 24]", "(sums []) -> []", "(sums [[0 0 4] [] [9 5 0 6 1]]) -> [4 0 21]", "(sums []) -> []", "(sums [[9 9] [3 3 4]]) -> [18 10]", "(sums [[3 8 7 4 2]]) -> [24]", "(sums [[] [5 1 7 2 3] [5 3] []]) -> [0 18 8 0]", "(sums []) -> []", "(sums [[2 4]]) -> [6]", "(sums [[] [7 7] [0 3] [4 8]]) -> [0 14 3 12]"], "time": 0.479989, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[4] [4] [8 1 9 8] []]) -> [4 4 26 0]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[8 5 3 1 1] [7 3 2 3 9] []]) -> [18 24 0]", "(sums [[] [2 8 6] [3 3 0 9 7] [8 1] [6 7 8 6 1]]) -> [0 16 22 9 28]", "(sums [[9 0 1 2] [9 9 2] [4 2 8 9]]) -> [12 20 23]", "(sums [[9 0]]) -> [9]", "(sums [[0 3 2 1] [2]]) -> [6 2]", "(sums [[5 0 3] [1 7 4 0 5]]) -> [8 17]", "(sums [[] [] [9] [5] [7]]) -> [0 0 9 5 7]", "(sums [[] [9 2 0] [1 0 2 5 8]]) -> [0 11 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 0 2] [8 9 2 4 8]]) -> [4 31]", "(sums [[9]]) -> [9]", "(sums [[6 4 2] [6 3 8 3 9] [6 1 1 1 1] [2 3] [8 0 9 0]]) -> [12 29 10 5 17]", "(sums [[9] [8 0 8 7 4] [1 4] [0 3 4 1 9]]) -> [9 27 5 17]", "(sums [[9 9 3 0] [2 6 4] [0] [] [2 3 3]]) -> [21 12 0 0 8]", "(sums [[0 6 7 7 1] [1 9]]) -> [21 10]", "(sums []) -> []", "(sums []) -> []", "(sums [[6] [9 9 4 8] [4 5 0 5 9] [3 7 6 1 7]]) -> [6 30 23 24]", "(sums [[6 2 8]]) -> [16]", "(sums [[9 9 1] [9 0] [7 8 2 3] [6]]) -> [19 9 20 6]", "(sums []) -> []", "(sums []) -> []", "(sums [[0 6 8]]) -> [14]", "(sums [[9 2 8]]) -> [19]", "(sums [[3 8] [] [2 4 5 3 4]]) -> [11 0 18]", "(sums [[8] [5 4]]) -> [8 9]", "(sums [[7] [] [0 6]]) -> [7 0 6]", "(sums [[4] [4] [6 3 7 1 4]]) -> [4 4 21]", "(sums [[1 5 1 0 8] [8 5 7]]) -> [15 20]", "(sums [[4] [2 2 2] [6 0 8 8]]) -> [4 6 22]", "(sums [[6] [6] []]) -> [6 6 0]", "(sums [[3]]) -> [3]", "(sums [[1 2] []]) -> [3 0]", "(sums [[1 7 6 4 6] [6] [1 1 0 3 7] [0 6 5 0 8] [1 5 7]]) -> [24 6 12 19 13]", "(sums []) -> []", "(sums [[8 8]]) -> [16]", "(sums [[8 6 9] [4 0 2 9]]) -> [23 15]", "(sums []) -> []", "(sums [[] [6 2 3 8] [7]]) -> [0 19 7]", "(sums [[6] [] [3] []]) -> [6 0 3 0]", "(sums [[0 9 4 4] [7 9 8 8 3] [7 4 3] [] [6 4 2]]) -> [17 35 14 0 12]", "(sums [[0] [1 9] [0 6 3 1]]) -> [0 10 10]", "(sums [[2 7 3] [1 4 2]]) -> [12 7]", "(sums []) -> []"], "time": 0.494491, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 6 7 4] [3 7]]) -> [22 10]", "(sums [[] [1 7]]) -> [0 8]", "(sums [[2 8 4] [4 4] [3 1] [1 2 7 3] [8 9 1 6 4]]) -> [14 8 4 13 28]", "(sums [[4 6 6 9 4] [7 7 8 5 3] [4 5] [] [7 6 4 7]]) -> [29 30 9 0 24]", "(sums [[] [5 0 6] [5 3 1 2 5] [3 0 5] [5 5 3 4]]) -> [0 11 16 8 17]", "(sums [[0 9 4 4] [7 8 6 5] []]) -> [17 26 0]", "(sums [[4]]) -> [4]", "(sums []) -> []", "(sums [[5 8 6]]) -> [19]", "(sums [[1 2 5 9] [5] [9] [4 6] [8]]) -> [17 5 9 10 8]", "(sums [[7 3 7] [8] [5 0 7 3] [7 1] [2 5 6]]) -> [17 8 15 8 13]", "(sums []) -> []", "(sums [[9 2 1] [1 7 7] [6] [7]]) -> [12 15 6 7]", "(sums [[3 7 7] [6 2 6] [8 1 1] [1]]) -> [17 14 10 1]", "(sums [[]]) -> [0]", "(sums [[1 4]]) -> [5]", "(sums [[] [1 1] []]) -> [0 2 0]", "(sums [[1 3 2] [3 0 4 7 6]]) -> [6 20]", "(sums []) -> []", "(sums [[1]]) -> [1]", "(sums [[] [] [1 1 3 5] [2 9 9] [2]]) -> [0 0 10 20 2]", "(sums [[7 6]]) -> [13]", "(sums [[6 2 2] [8 2 5] [6 9 5 2] [6 9] []]) -> [10 15 22 15 0]", "(sums [[4 0 4 2 2] [2 7] []]) -> [12 9 0]", "(sums [[2 5] [2 0 6] [2 6 6] [] [4 1 0]]) -> [7 8 14 0 5]", "(sums [[8] [8 8 6] [6 6 5]]) -> [8 22 17]", "(sums []) -> []", "(sums [[3] [1 9 0 2] [3 6 2] [4 4 8 5]]) -> [3 12 11 21]", "(sums [[3 4 0 2 2] [6 7] [5 3 4 6] [6 5 2 0 1] [3 1 9 1 2]]) -> [11 13 18 14 16]", "(sums [[] [0 4 1]]) -> [0 5]", "(sums [[3 6 5 6] [9 4 0 7] [3 4 7 5 2] [6] [8]]) -> [20 20 21 6 8]", "(sums [[1 8 7 5] [9] [9 3 3 5] [1]]) -> [21 9 20 1]", "(sums [[7 1]]) -> [8]", "(sums [[8 6 1] [5 6 6] [5 6 5 1] []]) -> [15 17 17 0]", "(sums [[2 6 3] [5 7 0 5 0]]) -> [11 17]", "(sums [[0 8 0 6] [8 2 8 7] []]) -> [14 25 0]", "(sums [[5 7 0] [1 7 8] [4 9 0] [1 3 1]]) -> [12 16 13 5]", "(sums [[6 3 3 6 1]]) -> [19]", "(sums [[5 9 6 6 6] [] [5] [4 1 6 0]]) -> [32 0 5 11]", "(sums [[9 0] [8 3] [8 6]]) -> [9 11 14]", "(sums [[] [8] [2] [8 1 5 9 0] [5 7 1]]) -> [0 8 2 23 13]", "(sums [[4 8 7 3 8] [2 2 3 3 1] [9 9] [3 7 2 9]]) -> [30 11 18 21]", "(sums []) -> []", "(sums [[9 1 9 6] [5 1] [4 5 1 1 6]]) -> [25 6 17]", "(sums [[9 6 1]]) -> [16]", "(sums [[2 0 9 4 5] [8 4 0 2 5] [3 3 7 1] [3 2 3]]) -> [20 19 14 8]", "(sums []) -> []", "(sums []) -> []"], "time": 0.463597, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 5 8] [7 1 6 1]]) -> [20 15]", "(sums [[6 1] [] [] [8]]) -> [7 0 0 8]", "(sums [[1] [2 9 6 6] [5] [0 9 6] [9 7 2]]) -> [1 23 5 15 18]", "(sums [[6] [8 2 1 5] [6] [1 3 3 2]]) -> [6 16 6 9]", "(sums []) -> []", "(sums [[5 4 7 5 4] [5 0] [5 4 1] [0 3 1]]) -> [25 5 10 4]", "(sums [[] [7 5 4] [3 7 3 8]]) -> [0 16 21]", "(sums [[1] [6 3] [2 4 0] [1 3 7] [6 5]]) -> [1 9 6 11 11]", "(sums []) -> []", "(sums [[1 7 8] [5 3]]) -> [16 8]", "(sums [[5 8 5 4 6] [7 6]]) -> [28 13]", "(sums [[] [6 2] [9 3 3 4] [7 6 6 6 4]]) -> [0 8 19 29]", "(sums [[]]) -> [0]", "(sums [[3 1 9] [9 7 3] [] [3 5 7 3 1]]) -> [13 19 0 19]", "(sums [[] [7 8 7 8 9] [2] [2 6 0 1] [7 5]]) -> [0 39 2 9 12]", "(sums [[9 4 6 6 1] [1] []]) -> [26 1 0]", "(sums [[0 2 0] [5 1 6 7 3] [5] [0 7 1 4 3] [2 8 9]]) -> [2 22 5 15 19]", "(sums [[5 5 6 2] [9 5 6]]) -> [18 20]", "(sums [[4 8 3] [9] [6 0 0 0 8] [2 7]]) -> [15 9 14 9]", "(sums [[] [2 5] [8 0 1]]) -> [0 7 9]", "(sums [[8 6 2] [2 2 6 0]]) -> [16 10]", "(sums [[] [3 9 1 8 8]]) -> [0 29]", "(sums []) -> []", "(sums [[9 9 1] [] [3] [6 1 9 4] [8 4 7]]) -> [19 0 3 20 19]", "(sums []) -> []", "(sums [[0 5 7 5] []]) -> [17 0]", "(sums [[3 7 3 5 7] [3 5]]) -> [25 8]", "(sums [[6 0 0 9] [3] [6 3 2 9 6] [9 3 7 3]]) -> [15 3 26 22]", "(sums [[] [6 9] [4 4] [6 2 2 4]]) -> [0 15 8 14]", "(sums []) -> []", "(sums [[] [] [9 9]]) -> [0 0 18]", "(sums []) -> []", "(sums [[] [2 6 5 0 2] [5] [7 0 3 7] []]) -> [0 15 5 17 0]", "(sums [[] [8 9 7 3] [6] [6 7 1 1 3]]) -> [0 27 6 18]", "(sums [[0 0 4 3 8] [5 2 2] [2 6] [] [5 5 2 8]]) -> [15 9 8 0 20]", "(sums [[8 7 7]]) -> [22]", "(sums [[]]) -> [0]", "(sums [[2 3 2] [3 2 2 6 0] [9] [8 8 5] [5 9 5 5]]) -> [7 13 9 21 24]", "(sums [[4 3 1 5] [] [] [3 0 0]]) -> [13 0 0 3]", "(sums []) -> []", "(sums [[0 8 5 0] [1 3 2 4 7] [1] [7 3 4] [7 5 6]]) -> [13 17 1 14 18]", "(sums []) -> []", "(sums [[] [] [9 0]]) -> [0 0 9]", "(sums [[]]) -> [0]", "(sums [[0] [7 2 0 8 7] [7 9 2] [] [8 9]]) -> [0 24 18 0 17]", "(sums [[1 6 4] [3 1 9 1 3] [1 7 8 3]]) -> [11 17 19]", "(sums [[4 6 3] [6 0 2] [6 9 0 0 5] [0] [5 9 4 5]]) -> [13 8 20 0 23]", "(sums [[3 7 7 3 8] [0 4 7 5 5] [3 2 9]]) -> [28 21 14]"], "time": 0.462566, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[] [7 7 9 5]]) -> [0 28]", "(sums [[] []]) -> [0 0]", "(sums [[6 5 5 7] [7 4 7 6] [1 4] [5 1 1 8]]) -> [23 24 5 15]", "(sums [[4] [5 1]]) -> [4 6]", "(sums [[1 2 1 1 1] [7 1 0 9] [7 6 2 8 2]]) -> [6 17 25]", "(sums [[] [1 2 0] [7 9] [6]]) -> [0 3 16 6]", "(sums [[5 7 2 4 3]]) -> [21]", "(sums [[2 4 8] [4 1 8 5 1] [2 8 4] [4 4 7 6 4] [8 7 8 8]]) -> [14 19 14 25 31]", "(sums [[3 0] [] [2 8 2]]) -> [3 0 12]", "(sums [[] [0 9 4 0 5] [0 1 1] [0 4 3]]) -> [0 18 2 7]", "(sums [[] [4] [3 1 7 6]]) -> [0 4 17]", "(sums []) -> []", "(sums [[4 5] [9 2 5 5 6] [5 0]]) -> [9 27 5]", "(sums [[6 7] [0 3 2 1] [7 7] [7 7] [0 8 9]]) -> [13 6 14 14 17]", "(sums [[6 9 9]]) -> [24]", "(sums []) -> []", "(sums [[7 3 7 0 7] [6 1 1 7 1] [0 6 7 5 9] [9 9 3] [9 9 2 8]]) -> [24 16 27 21 28]", "(sums [[1 4 8] [2 6 6] [3 3 3] [3 9 6 2]]) -> [13 14 9 20]", "(sums [[9 2] [5 7 1 6] [9 3 1 9] [8 5 6] [1 4]]) -> [11 19 22 19 5]", "(sums [[3 5] [] [1 3 2 3] [9 0 6 2 2] []]) -> [8 0 9 19 0]", "(sums [[0]]) -> [0]", "(sums [[1] [2 5 1 4 1] [7 3 4 0 3]]) -> [1 13 17]", "(sums [[1 9] [5 4] [2 0 5 8]]) -> [10 9 15]", "(sums [[] [8 7 4 0]]) -> [0 19]", "(sums []) -> []", "(sums [[2 8 2 1 3] [1 8 0 3]]) -> [16 12]", "(sums [[2] [4 8] [0 2 8 2]]) -> [2 12 12]", "(sums [[3 6 5 3] [] [2 4] [5 2] [6 3]]) -> [17 0 6 7 9]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[6] [3 5 2 4]]) -> [6 14]", "(sums [[9 2 4 1] [3 5 4 5 8]]) -> [16 25]", "(sums [[3 7 7 6]]) -> [23]", "(sums [[9 0 6] [2 8 3 0] []]) -> [15 13 0]", "(sums []) -> []", "(sums [[0 5] [6 2 9 1]]) -> [5 18]", "(sums [[] [1 0 5] [8 4 9] [4]]) -> [0 6 21 4]", "(sums [[9 4] [1] [3 6 3]]) -> [13 1 12]", "(sums [[] [7 5]]) -> [0 12]", "(sums [[7 6 8] [5 5] [6 5 9 8]]) -> [21 10 28]", "(sums [[6 8 0 4 9] [4 7 2]]) -> [27 13]", "(sums [[6 5] [9 2] [2] [5 4 3]]) -> [11 11 2 12]", "(sums [[] [5 1] [5 0] [3]]) -> [0 6 5 3]", "(sums [[0] [3 8 9] [9]]) -> [0 20 9]", "(sums [[1 8] [2 5 0 3 3] [] [2]]) -> [9 13 0 2]", "(sums [[] [3 5 6 7]]) -> [0 21]"], "time": 0.492952, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 7 4] [5 1 2 9 5]]) -> [16 22]", "(sums [[5 1] [4 4 6 3 3] [0 7 8] [1 9 4 6]]) -> [6 20 15 20]", "(sums [[2 8 5 6] [] [2 0 5 8]]) -> [21 0 15]", "(sums [[] [7 9 5] [8] []]) -> [0 21 8 0]", "(sums []) -> []", "(sums [[9 0 4] []]) -> [13 0]", "(sums [[] [9 1 4] [5]]) -> [0 14 5]", "(sums []) -> []", "(sums [[] [8 9]]) -> [0 17]", "(sums [[1 9 6 2 9] [] [8 0 5 2 8] [8]]) -> [27 0 23 8]", "(sums [[7 9 1 3 2] [] [9 7] [1 1 4 7] [1]]) -> [22 0 16 13 1]", "(sums [[8 2 0] [4 1 5]]) -> [10 10]", "(sums []) -> []", "(sums [[1] [3 6] [9 4 6 3 5]]) -> [1 9 27]", "(sums []) -> []", "(sums [[1 4] [6 9 6 3 9] [3] [0]]) -> [5 33 3 0]", "(sums []) -> []", "(sums [[2] [] [0 1 2 7 6]]) -> [2 0 16]", "(sums []) -> []", "(sums [[3 4] [8 2 1 5] [8 2 9 5] [1 3] [6 3 8 4 5]]) -> [7 16 24 4 26]", "(sums [[4 3 9] [9 0 6] [0 6] [9 8 8 9 6]]) -> [16 15 6 40]", "(sums [[4 2] [1] [5 8 7]]) -> [6 1 20]", "(sums [[3 0 9] [9 4 1]]) -> [12 14]", "(sums [[1 1 0] [6 6 0] []]) -> [2 12 0]", "(sums [[8 5 6] [] [1 2] [5 8 1 5 1]]) -> [19 0 3 20]", "(sums []) -> []", "(sums [[0] [6 4 3 1 9] [7 2 9] [6 6 6] [3]]) -> [0 23 18 18 3]", "(sums [[2]]) -> [2]", "(sums []) -> []", "(sums [[0 8 9] [8 1 5 5] [8 3 4]]) -> [17 19 15]", "(sums [[6 3] [2 5 1 8 1] [0 2]]) -> [9 17 2]", "(sums [[2] []]) -> [2 0]", "(sums [[7 0] [1 1] [9 1 8 4 6] [7 4 4 6]]) -> [7 2 28 21]", "(sums [[] [4 2 7] [9 6 4 6 1] [4 6]]) -> [0 13 26 10]", "(sums []) -> []", "(sums [[3 7 9 5] []]) -> [24 0]", "(sums [[4 7] [3 5] [2 4 0] [4] [6 4]]) -> [11 8 6 4 10]", "(sums [[5] [0 5 7 2 0] [4 5 9 3]]) -> [5 14 21]", "(sums [[7 0] [3 8] [5 5 5 0 0] [0] [4 2 4 5]]) -> [7 11 15 0 15]", "(sums [[2]]) -> [2]", "(sums [[]]) -> [0]", "(sums [[0] [5 8 8 6]]) -> [0 27]", "(sums [[1 3 2 8 1] [7 1 3 5] [6] [] []]) -> [15 16 6 0 0]", "(sums [[]]) -> [0]", "(sums [[9 9]]) -> [18]", "(sums [[8 8 4] [2 0 7 6] [] [3 3 2 7 1] [0 2 6 9]]) -> [20 15 0 16 17]", "(sums [[9 2 8 0 9] [] [6 5 2 0] [] [9 3 2 3]]) -> [28 0 13 0 17]", "(sums []) -> []"], "time": 0.480219, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 2 4 8] [4] [2] [8] [1 1 6 7 2]]) -> [21 4 2 8 17]", "(sums [[] [9 8] [4 5 8] [4 4 2 7 2] [9 5 9]]) -> [0 17 17 19 23]", "(sums [[5 5 1] [7] [4 6] [3 3 4] [8 5 5 6 0]]) -> [11 7 10 10 24]", "(sums [[5 2 8] [9 0 5 2] [7 7]]) -> [15 16 14]", "(sums [[6 2 1 9] [2 4]]) -> [18 6]", "(sums [[7 6 4 3] [7 4 9 5] [9 3 6]]) -> [20 25 18]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[1 9 7 2]]) -> [19]", "(sums [[2 0 7] [] [8 5] [1 4 0 2 1]]) -> [9 0 13 8]", "(sums [[6]]) -> [6]", "(sums [[4 9 8 3 6] [6 1 1 2] [3 8 7 6]]) -> [30 10 24]", "(sums [[] [] [9 2 2 8]]) -> [0 0 21]", "(sums [[] [8 3]]) -> [0 11]", "(sums [[] [3]]) -> [0 3]", "(sums [[] [6 8 3 0] [9 2 5 4] [3 0]]) -> [0 17 20 3]", "(sums []) -> []", "(sums [[] [2 0 3 0] [2 2 2 3] [3 2 7] []]) -> [0 5 9 12 0]", "(sums [[0 6 5]]) -> [11]", "(sums [[5 4 1]]) -> [10]", "(sums []) -> []", "(sums [[6] [7 5] [] []]) -> [6 12 0 0]", "(sums [[9] []]) -> [9 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 6]]) -> [15]", "(sums []) -> []", "(sums [[] [7 2 5 5] [5 9 6]]) -> [0 19 20]", "(sums [[3 8 6 5]]) -> [22]", "(sums [[9] [4 3] [] [9 0 9 0 4] [2 7 7 7 1]]) -> [9 7 0 22 24]", "(sums [[8 2 0] [3] [2 4] [4]]) -> [10 3 6 4]", "(sums [[6 3 2 8] [1 6] [] [7] [2 8 9]]) -> [19 7 0 7 19]", "(sums [[2 3 1 9 5]]) -> [20]", "(sums [[6]]) -> [6]", "(sums [[4 0 9 6 7] [4] [0 5 9 0 4] [3 4] [0]]) -> [26 4 18 7 0]", "(sums [[4 8 7 1 8] [1]]) -> [28 1]", "(sums [[6] [9 3] [] [6 4 5]]) -> [6 12 0 15]", "(sums [[3]]) -> [3]", "(sums [[5]]) -> [5]", "(sums [[0 6 2]]) -> [8]", "(sums [[9 9 1 6] [2 4 1 6]]) -> [25 13]", "(sums [[5 9] [] []]) -> [14 0 0]", "(sums []) -> []", "(sums [[] [4 9 2] [6 7 4 2] [1 2 8 4] [7 8 6 3]]) -> [0 15 19 15 24]", "(sums []) -> []", "(sums [[1 2 8 2 4] [] [6 7 4 8] [4 0 7 8] [5 2 2 6 8]]) -> [17 0 25 19 23]", "(sums [[] [1 7] [5 6 9 4 1] [3 4 5 7]]) -> [0 8 25 19]", "(sums [[7] [9 2]]) -> [7 11]"], "time": 0.43265, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums []) -> []", "(sums [[6 4 7 2] [8] [7 1]]) -> [19 8 8]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[2 2 3] [1 2]]) -> [7 3]", "(sums [[9 1 3 5] [2] [4 2 1 0 7]]) -> [18 2 14]", "(sums [[]]) -> [0]", "(sums [[8 3 3 9 9] [] [1]]) -> [32 0 1]", "(sums [[3 1 8 7 3] [7 7] [5 2 7 6 9] [6 8 1 6]]) -> [22 14 29 21]", "(sums [[4 7 3 3]]) -> [17]", "(sums [[4 4 8 1] [9 9 1]]) -> [17 19]", "(sums []) -> []", "(sums [[5 4 5 5 6] [6 1 8 0]]) -> [25 15]", "(sums [[2 2 8] [8 0 6] [1 6 5]]) -> [12 14 12]", "(sums []) -> []", "(sums [[1 2 4]]) -> [7]", "(sums [[1 4 3] [] [0 2] [1] [0 6 2 2 5]]) -> [8 0 2 1 15]", "(sums [[6] [4 8]]) -> [6 12]", "(sums [[2 2 0 9]]) -> [13]", "(sums [[]]) -> [0]", "(sums []) -> []", "(sums [[] [9 2]]) -> [0 11]", "(sums [[3]]) -> [3]", "(sums [[9 9] [1 7 0]]) -> [18 8]", "(sums [[] [1 3 6] [3] [2 7 7 0 1] [4 8 4 8 2]]) -> [0 10 3 17 26]", "(sums [[9 1 1 4 1] [7 0 7 8]]) -> [16 22]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 2 2 0 9] [5 2] [8 1 3]]) -> [22 7 12]", "(sums [[] []]) -> [0 0]", "(sums [[0 3] [0 9 1 5 5]]) -> [3 20]", "(sums [[7 4]]) -> [11]", "(sums []) -> []", "(sums [[2 8 5 6] [1 7]]) -> [21 8]", "(sums [[4 4] [6 9 2 9] [9 2 7 5]]) -> [8 26 23]", "(sums [[8]]) -> [8]", "(sums [[5 4 1 9 6] [3 6 5] [0 4]]) -> [25 14 4]", "(sums [[0 9 3 2] [7 1 9 2] [3 1 5] [4 5]]) -> [14 19 9 9]", "(sums [[1 6] [5 6] [5 3] [0 9 1 9] [2 8]]) -> [7 11 8 19 10]", "(sums [[0 2 7] [1 9 9] [8 1] []]) -> [9 19 9 0]", "(sums [[] [8 4 8 4] [6 9 0 7] [3 6 5 5]]) -> [0 24 22 19]", "(sums [[6 6] [8 9 0 4] [2 7 7 5]]) -> [12 21 21]", "(sums [[6 5 3 2 8]]) -> [24]", "(sums [[8 7 8] [4 0 4] [5 2 2 4 6]]) -> [23 8 19]", "(sums [[9 2 5 8] [1] [0 8 1 2]]) -> [24 1 11]", "(sums []) -> []", "(sums [[8 7 1]]) -> [16]", "(sums [[2] [] [0 0 0]]) -> [2 0 0]"], "time": 0.533619, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0 0 0]]) -> [0]", "(sums [[5 5 0 9] []]) -> [19 0]", "(sums [[7 9] [] []]) -> [16 0 0]", "(sums [[2 4 8 2]]) -> [16]", "(sums [[2 4 0 0 0] [8 1 3] [2 0] [4 5]]) -> [6 12 2 9]", "(sums [[8 0 2 3 8] [] [9 1 3 6 6]]) -> [21 0 25]", "(sums [[] [0 4 3 5] [8 6 1 0] [2] [2 7 8]]) -> [0 12 15 2 17]", "(sums []) -> []", "(sums [[8 6 0 3] [1 7] [9 4 5 9] [7 5 9 2 0]]) -> [17 8 27 23]", "(sums [[8] [6 6 8] [4 7 6 4] [9 2 0] [6 9]]) -> [8 20 21 11 15]", "(sums [[4] [3 4 9 3 5] [6 7 8] [5 1] [8 9 7 9 4]]) -> [4 24 21 6 37]", "(sums []) -> []", "(sums [[6 3 3 5]]) -> [17]", "(sums [[] [9] [6]]) -> [0 9 6]", "(sums [[0 0 0 3 7] [1]]) -> [10 1]", "(sums [[7 7 3] [1] [7] []]) -> [17 1 7 0]", "(sums [[3] [] [7 2 0]]) -> [3 0 9]", "(sums [[2 2 0] [1 1 6 7 2] [7 1 9 6 7]]) -> [4 17 30]", "(sums []) -> []", "(sums [[8 8 9 2 0] [7 4] [] [8 9 9 5 4] [3 9 0]]) -> [27 11 0 35 12]", "(sums [[1 9 9 9 4] [1 1] [1 2 0] [9 4 4 7] [4 1 3 7 2]]) -> [32 2 3 24 17]", "(sums [[6 8 8 9 7]]) -> [38]", "(sums [[] [8] [7 5 2 9 4] [8 0 0 0 9] []]) -> [0 8 27 17 0]", "(sums [[6 1 6 7] [1 0 7] []]) -> [20 8 0]", "(sums []) -> []", "(sums [[2] [1 9]]) -> [2 10]", "(sums [[2 9 0 5] [5 9 5 2]]) -> [16 21]", "(sums [[9 9 8]]) -> [26]", "(sums []) -> []", "(sums []) -> []", "(sums [[7 0 5 6 9]]) -> [27]", "(sums []) -> []", "(sums [[8 0 6 1] [3 5] [3] [4 9 5 1 5]]) -> [15 8 3 24]", "(sums [[0 1 5] [] [9 5 6] [3 0 4 7]]) -> [6 0 20 14]", "(sums [[] [9] [9 8 3]]) -> [0 9 20]", "(sums []) -> []", "(sums [[0]]) -> [0]", "(sums [[8 4 4 8] [1 5 8] [5 4 1 5 5] [0 6 8]]) -> [24 14 20 14]", "(sums [[3 6 3 5 5] [9 7]]) -> [22 16]", "(sums []) -> []", "(sums []) -> []", "(sums [[9 8 0] [4 1 8] [1 9 6 7]]) -> [17 13 23]", "(sums [[3 8 3 0 4] [3 7]]) -> [18 10]", "(sums [[0 2] [3] []]) -> [2 3 0]", "(sums [[6 8] [5] [1 0 9 8 2]]) -> [14 5 20]", "(sums [[] [4 8 2 1 6] [] [9]]) -> [0 21 0 9]", "(sums [[9 7 2 9] [5 2] [9 0 5]]) -> [27 7 14]", "(sums [[] [7 8 0] [2 9 2 4 0]]) -> [0 15 17]"], "time": 0.424017, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[5 8] []]) -> [13 0]", "(sums [[4 9 9] [2] [1 6]]) -> [22 2 7]", "(sums []) -> []", "(sums [[0] [0 3]]) -> [0 3]", "(sums [[5 6 8 1 4] [8 4 4 8 9] [7 5 6 7 4] [8 1]]) -> [24 33 29 9]", "(sums [[6] [1 7 5] [] [3 5 9 7] [5 6]]) -> [6 13 0 24 11]", "(sums [[] [8 7 2 8] [6 3 0 1] [4 9] [6 1 8]]) -> [0 25 10 13 15]", "(sums [[6 6 5] [2 0] [1] [7 9 7 8 0]]) -> [17 2 1 31]", "(sums [[7 5 4]]) -> [16]", "(sums [[4 6 8 5] [0 7 0 7] [5 6] [8 6]]) -> [23 14 11 14]", "(sums [[5 5 9 3 2] [2 4 8 0 9]]) -> [24 23]", "(sums [[1] [] [7 9 8 9] [1 3]]) -> [1 0 33 4]", "(sums [[0 8 8] [5 4] [0] [4]]) -> [16 9 0 4]", "(sums [[5 6 9 6] [] []]) -> [26 0 0]", "(sums [[8 8 5 2 2] [6 3 9 3 6] [0] [0 1 7]]) -> [25 27 0 8]", "(sums []) -> []", "(sums [[1 0] [8] [2] [] [0 0 2 2 4]]) -> [1 8 2 0 8]", "(sums [[2 3 4 4 1] [9 2 9] [] [3 7 1 8 6] [3 3 5 0 4]]) -> [14 20 0 25 15]", "(sums [[2] [9]]) -> [2 9]", "(sums [[] [4 5 4]]) -> [0 13]", "(sums [[3 4] [7 1] [6]]) -> [7 8 6]", "(sums [[9 6] [0 9 9 1 1] [2 3 7]]) -> [15 20 12]", "(sums [[] [0 3 1 6 9] [2 0 5 6 1] [7 3 0 9 9]]) -> [0 19 14 28]", "(sums [[] [0] [4]]) -> [0 0 4]", "(sums [[3 8 4 3] [6 6]]) -> [18 12]", "(sums [[1 0] [] [1 1 2 7 8] [5 7]]) -> [1 0 19 12]", "(sums [[] [6 5 3 7 4] [9 0 0 8] [0 8 5 6 0]]) -> [0 25 17 19]", "(sums [[5 5 7 1 1] [0 4] [5 8]]) -> [19 4 13]", "(sums []) -> []", "(sums [[] [] [6] [0 9 4 3] [8]]) -> [0 0 6 16 8]", "(sums [[2 6 1]]) -> [9]", "(sums [[4 6 5 9 8]]) -> [32]", "(sums []) -> []", "(sums [[9 7] [5 7 0] []]) -> [16 12 0]", "(sums [[5 5 5 8]]) -> [23]", "(sums [[4 8 9 0] [] [1 4 3 4 0]]) -> [21 0 12]", "(sums []) -> []", "(sums [[1 3] [6 6 1 1 6] [1 1 5 1]]) -> [4 20 8]", "(sums []) -> []", "(sums [[7 3 2 5 8] [7 2 2]]) -> [25 11]", "(sums [[7 7 1 1] [1] [8 4] [5 1 8 5 1]]) -> [16 1 12 20]", "(sums [[]]) -> [0]", "(sums [[4 7 2] [6 5 4] [5 8 7 1 5]]) -> [13 15 26]", "(sums [[0] [7 5 7 1] [] [0]]) -> [0 20 0 0]", "(sums [[0 6 2] [2]]) -> [8 2]", "(sums [[2]]) -> [2]", "(sums []) -> []", "(sums [[0 9] [0 0 5 1 8]]) -> [9 14]"], "time": 0.428507, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2 6 0 2] [6 9 5] [] [7 0] []]) -> [10 20 0 7 0]", "(sums []) -> []", "(sums [[4 3 5 3] [6 0 6 8] [] [] []]) -> [15 20 0 0 0]", "(sums [[2 3] [4 9 1 1 8]]) -> [5 23]", "(sums [[2 7] [7]]) -> [9 7]", "(sums []) -> []", "(sums [[8 2 3 6] [7 9] [3] [0 3] [8 5 2]]) -> [19 16 3 3 15]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[8]]) -> [8]", "(sums [[8 1 7]]) -> [16]", "(sums [[] [1] [4 3 8 3 4]]) -> [0 1 22]", "(sums [[0 6 6 3] [5 4] [5 7]]) -> [15 9 12]", "(sums [[3 4] [9 8 2 9 4]]) -> [7 32]", "(sums [[2 4]]) -> [6]", "(sums [[9] [] [8 0 3] []]) -> [9 0 11 0]", "(sums [[] [8 2 1] [7] [1 2 3 3]]) -> [0 11 7 9]", "(sums [[7 0 0 2] [5 0 9 0]]) -> [9 14]", "(sums [[5 7 5 2]]) -> [19]", "(sums []) -> []", "(sums []) -> []", "(sums [[0 6 2]]) -> [8]", "(sums []) -> []", "(sums [[5 4 2 4 2] [7 0 3 5 0] [5 3]]) -> [17 15 8]", "(sums [[6] []]) -> [6 0]", "(sums [[3]]) -> [3]", "(sums [[8 7 8] [2] [9 6 8] [4 5 6 8 0] [4 8]]) -> [23 2 23 23 12]", "(sums [[8 8 5] [7] []]) -> [21 7 0]", "(sums [[] [3] [2 3]]) -> [0 3 5]", "(sums [[] [] [1 1]]) -> [0 0 2]", "(sums [[0] [9]]) -> [0 9]", "(sums [[] [] [7 5 5 0] [8]]) -> [0 0 17 8]", "(sums []) -> []", "(sums [[] [4 1 8 9 8]]) -> [0 30]", "(sums [[4 7 7] [5 5 9 8] [9 1] [2 2 5 1]]) -> [18 27 10 10]", "(sums [[0 1 3 9] [] [0 7 6] [1 9 5 5] [6 4 9 9 0]]) -> [13 0 13 20 28]", "(sums [[3] [3] [2 1] [1 8 1]]) -> [3 3 3 10]", "(sums [[0 7 2 1 3]]) -> [13]", "(sums []) -> []", "(sums [[0 8 5] [7] [0 6] [4] [4 8]]) -> [13 7 6 4 12]", "(sums [[6 6 2 9 2] [3] [6]]) -> [25 3 6]", "(sums [[0] [8 9 4 5 8] [7 3 7 2]]) -> [0 34 19]", "(sums []) -> []", "(sums []) -> []", "(sums []) -> []", "(sums [[8 7]]) -> [15]"], "time": 0.43392, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[3 1 8 2] [7 8 0 9 8] [6 6 1 8] [6 9]]) -> [14 32 21 15]", "(sums [[0 4 8] [3 1] [6 7 1 0] [] [9 5 3]]) -> [12 4 14 0 17]", "(sums [[1] [1 1 2] [1] []]) -> [1 4 1 0]", "(sums [[5 1 8 1] [8 0 4] [6 9 1] [4 9 3]]) -> [15 12 16 16]", "(sums [[7] [0 0]]) -> [7 0]", "(sums [[]]) -> [0]", "(sums [[] [3 2 2 8] []]) -> [0 15 0]", "(sums [[1 2] [7 1 8] [5 0 3 5] []]) -> [3 16 13 0]", "(sums [[6 4 9] [4 2 6 8 7] [6 4 6 2 9]]) -> [19 27 27]", "(sums [[3] [1 2] [4 8 8 9] [9 9 5 4 4]]) -> [3 3 29 31]", "(sums []) -> []", "(sums []) -> []", "(sums [[0 0 5 6] [6 1 0 8] [4 1 8]]) -> [11 15 13]", "(sums [[4 8 8 7 3] [8 6 4 6] [3] [8 7 0 2 2]]) -> [30 24 3 19]", "(sums [[8 4 0] []]) -> [12 0]", "(sums [[7 1 5 5 3] [0 6 3] [9 2] [6 9 3 5]]) -> [21 9 11 23]", "(sums [[2 9] [9] [0 9 2 1] []]) -> [11 9 12 0]", "(sums [[5 1 0 2 3] [4 6] [9 9 3 3] [5 7 7 7 7] [2 8 8 6]]) -> [11 10 24 33 24]", "(sums [[] []]) -> [0 0]", "(sums [[] [4] [2 5] [7 6 5 3] [2 5 4 1]]) -> [0 4 7 21 12]", "(sums [[9 2 0 4 1] [] [4 2 0 4]]) -> [16 0 10]", "(sums [[] [4 1 4 6] [8 6 9 5] [4 9 8] [8]]) -> [0 15 28 21 8]", "(sums []) -> []", "(sums []) -> []", "(sums [[0] [3 6 9] [4 4 9 2]]) -> [0 18 19]", "(sums [[6 6 7] [5 2] [2 6 9]]) -> [19 7 17]", "(sums [[] [] [1] [7 6 3 9 3] []]) -> [0 0 1 28 0]", "(sums [[8 2 0 0] [] [6 5]]) -> [10 0 11]", "(sums [[4] [7 8 2 9] [0 1 4 0 2] [] [1 9 9 5 2]]) -> [4 26 7 0 26]", "(sums [[] [] [4 3 9 0 3] [4] [5 9 2 1]]) -> [0 0 19 4 17]", "(sums [[] [1 5] [2 0 4 0] [4 0 2 3]]) -> [0 6 6 9]", "(sums []) -> []", "(sums [[6 5] [] [6 4 9 4 6] [1 5 0 8]]) -> [11 0 29 14]", "(sums [[5 4 2 4] [6 3 7]]) -> [15 16]", "(sums [[2] [2 9 1 9] [7]]) -> [2 21 7]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 2 4 9 6] [7 4] [4 8 9 4]]) -> [27 11 25]", "(sums []) -> []", "(sums []) -> []", "(sums [[0] [1 0 5] [3 3 1]]) -> [0 6 7]", "(sums [[3 8 6] [6 5 9 3] [0] [0 4] [3]]) -> [17 23 0 4 3]", "(sums [[1 6 8 5] [3 3 3]]) -> [20 9]", "(sums [[] [1 3 1 4 4]]) -> [0 13]", "(sums []) -> []", "(sums [[4 6 2 3 5] [9 2 7]]) -> [20 18]", "(sums [[3 1 9] [] [0 0 5 4 1] [5 9 4 8 6]]) -> [13 0 10 32]", "(sums [[0 3 8 7] [9 8 6 6] [5]]) -> [18 29 5]"], "time": 0.222832, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[0]]) -> [0]", "(sums [[7]]) -> [7]", "(sums [[4 6 7 9 1] [6] [4 3 3] [4 6 3]]) -> [27 6 10 13]", "(sums []) -> []", "(sums [[9 4 9 3 1] [9 4 0 0 0] [1 8] [4 9 4 7 1] []]) -> [26 13 9 25 0]", "(sums [[] [4 3 0] [4 9 4]]) -> [0 7 17]", "(sums []) -> []", "(sums [[9 3] [3 7 2] [4 3 9 6 5]]) -> [12 12 27]", "(sums [[] [7 6 8] []]) -> [0 21 0]", "(sums [[2 1 4 0]]) -> [7]", "(sums []) -> []", "(sums [[3 2]]) -> [5]", "(sums [[3 2 7] [] [4 9 3] [4 0] [6 1 1]]) -> [12 0 16 4 8]", "(sums [[3 4 6] [2 3 6 4] [] []]) -> [13 15 0 0]", "(sums []) -> []", "(sums [[9 0 7]]) -> [16]", "(sums [[] [8 3 0 7] [9 9 8 1 5] [] []]) -> [0 18 32 0 0]", "(sums [[4] [4 3 1] []]) -> [4 8 0]", "(sums [[7 4 1] [2 2 8] [8 8]]) -> [12 12 16]", "(sums [[5 7] [2] [9 1 6 6 6] []]) -> [12 2 28 0]", "(sums [[4 3 1 8 7]]) -> [23]", "(sums []) -> []", "(sums [[7 1]]) -> [8]", "(sums [[1 5 9 5 8] []]) -> [28 0]", "(sums [[] [1 1] [9 7 2] [1 6 5 4] [0 0 4 7 8]]) -> [0 2 18 16 19]", "(sums [[6] [3 9 4 4 9] [0 8 2 6 6]]) -> [6 29 22]", "(sums [[8 0 8 9] [8 4]]) -> [25 12]", "(sums [[9 7 3 1 1] [9 4 8] [4 7 1 1 5]]) -> [21 21 18]", "(sums [[1 6 0 1] [3] [] [] [5 7 9]]) -> [8 3 0 0 21]", "(sums [[5 1 1 7]]) -> [14]", "(sums []) -> []", "(sums [[] [8 3 0] [6]]) -> [0 11 6]", "(sums []) -> []", "(sums []) -> []", "(sums [[2 9 1 9] [2 0 3 6 3]]) -> [21 14]", "(sums [[0] []]) -> [0 0]", "(sums [[6]]) -> [6]", "(sums [[] [1 9 4 8] [0 3 5 1]]) -> [0 22 9]", "(sums []) -> []", "(sums [[4] [2 9] [] [9 0]]) -> [4 11 0 9]", "(sums [[7 6 6]]) -> [19]", "(sums [[8 8 9 4 7] [5 1 2] []]) -> [36 8 0]", "(sums [[8 8] [4] [6 5 5 3 8] [] [8]]) -> [16 4 27 0 8]", "(sums [[1 8 8 4] [6 5 3] [7 3 8] [8 6 9]]) -> [21 14 18 23]", "(sums [[9] [4 0 4] [5 4 4]]) -> [9 8 13]", "(sums [[1 0] [9 3] [1 1 5 3]]) -> [1 12 10]", "(sums [[9 8 4 4] [] [3 2 3 2 1] [2 0 0]]) -> [25 0 11 2]", "(sums [[9]]) -> [9]"], "time": 0.204752, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[7 8] [7 1 8 8 5] [9 8 4] [8 9 1 9 1] [0]]) -> [15 29 21 28 0]", "(sums [[]]) -> [0]", "(sums [[2 5 9 5 6] [6] [7 3 3 2 8] [1 4 6]]) -> [27 6 23 11]", "(sums [[2 5 3 9 2] [1 0] [] [0 5 7 9]]) -> [21 1 0 21]", "(sums [[3 6]]) -> [9]", "(sums [[] []]) -> [0 0]", "(sums [[9 6] [] [3 8 3 0 7]]) -> [15 0 21]", "(sums [[7] [7 8 0] [3 5 0 9 4] [7]]) -> [7 15 21 7]", "(sums []) -> []", "(sums []) -> []", "(sums [[] [8 2 5 4] [8]]) -> [0 19 8]", "(sums [[2] [5 4 6 0] [1 9 1] [1 6 5] [8]]) -> [2 15 11 12 8]", "(sums [[7 1 7 9 3] [2 5 8 7]]) -> [27 22]", "(sums [[8 8] [9 6 8 0 3] [3] [2 7 8 0 9] [7 1 1]]) -> [16 26 3 26 9]", "(sums [[3] [0 5] [0 6 8]]) -> [3 5 14]", "(sums [[] [] [5 7 9] [5 6 4]]) -> [0 0 21 15]", "(sums [[] [8] [5 9 8 9 8]]) -> [0 8 39]", "(sums [[3] []]) -> [3 0]", "(sums [[0] [8 2 4 2 1] [8 5 7 8] [8 3 4 4]]) -> [0 17 28 19]", "(sums []) -> []", "(sums [[]]) -> [0]", "(sums [[9 8 2 9 3] [2 0] [4 2 4] [] []]) -> [31 2 10 0 0]", "(sums [[0 7 5 4 7]]) -> [23]", "(sums [[9 9 6] [4 7] [3 3 9 1 6] [4 1 1 5] [8 2 7 6]]) -> [24 11 22 11 23]", "(sums [[2 6 4 2]]) -> [14]", "(sums [[4 8 2]]) -> [14]", "(sums [[] [7]]) -> [0 7]", "(sums [[5] [7 7 8] [3 5 6 0] [3 0 9] []]) -> [5 22 14 12 0]", "(sums [[0 6] [5 0 3 1 6] [7] [4] [8 1 3 3 3]]) -> [6 15 7 4 18]", "(sums [[7 1 7 4] [6 4]]) -> [19 10]", "(sums [[6 5 6 6] [4 7 4 9] [5 3 9 4] [] [0 8]]) -> [23 24 21 0 8]", "(sums [[8 5 8 1 8] [1] []]) -> [30 1 0]", "(sums [[5] [] [5]]) -> [5 0 5]", "(sums [[6 8 7 2 7] [2 2 6 4] [] [5]]) -> [30 14 0 5]", "(sums [[9 1 0] [5 5 0 4 7] [] [2 6 7 7 2]]) -> [10 21 0 24]", "(sums [[6 8] [2] [] [5 0]]) -> [14 2 0 5]", "(sums [[7] [5 2 5 7] [] [6 9 7 8]]) -> [7 19 0 30]", "(sums [[]]) -> [0]", "(sums [[9] [5 2 7 7 7] [4 0 3]]) -> [9 28 7]", "(sums [[] [7 0 8] [7 5] [3 3] [7 7 8 1 1]]) -> [0 15 12 6 24]", "(sums [[3 0 2] [8]]) -> [5 8]", "(sums [[3 5 3 1 6] [5 3] []]) -> [18 8 0]", "(sums [[9 5 7 0] [7 3 1]]) -> [21 11]", "(sums [[9 8 2 1]]) -> [20]", "(sums [[6 6] []]) -> [12 0]", "(sums [[] [2 8 4] [] []]) -> [0 14 0 0]", "(sums [[7 9 7 0 3] [0] [7 6]]) -> [26 0 13]", "(sums []) -> []"], "time": 0.234324, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
{"examples": ["(sums []) -> []", "(sums [[2 3] [] [5 6 0] [2 8 4 8 9] [1 7]]) -> [5 0 11 31 8]", "(sums [[0 0 9] [2 9 1] [2 2 7] [4 7] [5]]) -> [9 12 11 11 5]", "(sums [[1 9 0 1] [1 4] [3]]) -> [11 5 3]", "(sums [[2 2 4 9]]) -> [17]", "(sums [[4 4] [5 5]]) -> [8 10]", "(sums [[9 3 2 4] [4 6] [4 8 2]]) -> [18 10 14]", "(sums [[1] [8 6 6 8]]) -> [1 28]", "(sums [[] [3]]) -> [0 3]", "(sums [[0]]) -> [0]", "(sums [[8 1 6 2 9] []]) -> [26 0]", "(sums [[1 5 7 0 8] [9 0 0 9] [0 7 2 3] [6 0 6 3]]) -> [21 18 12 15]", "(sums [[3 6 9]]) -> [18]", "(sums []) -> []", "(sums [[7 4 7] [3]]) -> [18 3]", "(sums [[0]]) -> [0]", "(sums [[5 8 0 9 2]]) -> [24]", "(sums [[1] [4 8]]) -> [1 12]", "(sums [[7]]) -> [7]", "(sums [[] [3] [6]]) -> [0 3 6]", "(sums [[0 6] []]) -> [6 0]", "(sums []) -> []", "(sums []) -> []", "(sums [[6 4] [7 8 0 8 7] [1] [3] [1 3 2]]) -> [10 30 1 3 6]", "(sums []) -> []", "(sums [[2 6 9] [5 3 6 8 0]]) -> [17 22]", "(sums [[0 7 8 7] [9 5 8]]) -> [22 22]", "(sums [[2 6] [9]]) -> [8 9]", "(sums [[5 6 1] []]) -> [12 0]", "(sums [[1 8 0 4] [4]]) -> [13 4]", "(sums [[1] [] [9 7 0] [6 3] [4 9]]) -> [1 0 16 9 13]", "(sums [[5] [] [8 0 7 9]]) -> [5 0 24]", "(sums [[5 7 0 4 0] [] [8 6 2 1] []]) -> [16 0 17 0]", "(sums [[9]]) -> [9]", "(sums [[2 6 5] [7 7 9 6] [9 6 2 7]]) -> [13 29 24]", "(sums [[7 3] [3] [5 3 4 0 2]]) -> [10 3 14]", "(sums [[4 2] [8 7 6 1 6] [2 6 8 5]]) -> [6 28 21]", "(sums [[6 9 0 7 6] [0 8 8] [7 4 4 0] [0 9 9 1] [9 7 9]]) -> [28 16 15 19 25]", "(sums [[]]) -> [0]", "(sums [[0 3 7 9] [4 3 1 1]]) -> [19 9]", "(sums [[8] [8 4 0] [4 7] [9 2 9 8]]) -> [8 12 11 28]", "(sums [[0 0] [] [8 6 1 2 7] [3 9 1 1]]) -> [0 0 24 14]", "(sums [[2 5] [3] [] [9 9 1 2] []]) -> [7 3 0 21 0]", "(sums [[4] [4] [1 0 2]]) -> [4 4 3]", "(sums [[]]) -> [0]", "(sums [[2 5 1 3 6]]) -> [17]", "(sums [[0 7 0 1]]) -> [8]", "(sums [[7] [0 8 6 6] [4 8 2 2 0] [1]]) -> [7 20 16 1]", "(sums [[3] [1 2] [1 8 1] [7 6 4] [5 2 9 2]]) -> [3 3 10 17 18]"], "time": 0.203421, "name": "sums", "solution": "(let sums (let a (lambda (b) (map b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)"}
