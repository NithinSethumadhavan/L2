{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.122562, "examples": ["(sumt {}) -> 0", "(sumt {1 {6}}) -> 7", "(sumt {}) -> 0", "(sumt {4 {1} {6}}) -> 11", "(sumt {6}) -> 6", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.086162, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {2 {1} {4}}) -> 7", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {9 {0 {3} {5}}}) -> 17"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.10433, "examples": ["(sumt {}) -> 0", "(sumt {6 {5}}) -> 11", "(sumt {4 {1 {6}}}) -> 11", "(sumt {6 {9 {9} {3}}}) -> 27", "(sumt {8 {7 {9} {6}}}) -> 30", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.15901, "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {7 {4 {7 {9}} {0 {5}}}}) -> 32", "(sumt {8}) -> 8", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.149047, "examples": ["(sumt {}) -> 0", "(sumt {7 {4} {1}}) -> 12", "(sumt {3 {9} {0 {4} {6}}}) -> 22", "(sumt {4}) -> 4", "(sumt {9 {7} {2}}) -> 18", "(sumt {4 {8 {3}} {9 {4 {2} {8}}}}) -> 38"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.148041, "examples": ["(sumt {}) -> 0", "(sumt {2 {9}}) -> 11", "(sumt {}) -> 0", "(sumt {3 {4} {9}}) -> 16", "(sumt {7}) -> 7", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.186216, "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {0 {4 {9 {5} {8}} {1}} {9 {3 {2} {8}}}}) -> 49", "(sumt {2 {2} {2}}) -> 6", "(sumt {0 {7} {9}}) -> 16", "(sumt {3 {9 {6}} {8 {0} {8}}}) -> 34"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.155215, "examples": ["(sumt {}) -> 0", "(sumt {4 {5}}) -> 9", "(sumt {9}) -> 9", "(sumt {3 {5}}) -> 8", "(sumt {9 {9 {2} {5}}}) -> 25", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.231323, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3 {9 {3} {4}}}) -> 19", "(sumt {4 {8 {7 {9} {7}}} {2}}) -> 37", "(sumt {4}) -> 4", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.26337, "examples": ["(sumt {}) -> 0", "(sumt {3 {2 {4 {0} {7}}}}) -> 16", "(sumt {2}) -> 2", "(sumt {0}) -> 0", "(sumt {3 {1 {5} {9}} {0 {0} {1}}}) -> 19", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.237066, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {0} {7}}) -> 12", "(sumt {3 {3}}) -> 6", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c 1)) c)) 0)) _) _)", "time": 1.287196, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {1}}) -> 10", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.259271, "examples": ["(sumt {}) -> 0", "(sumt {6 {9 {0} {1}} {6}}) -> 22", "(sumt {8}) -> 8", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {5 {6}}) -> 11"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.321111, "examples": ["(sumt {}) -> 0", "(sumt {6 {6 {8 {0}} {0 {5} {6}}} {2 {2}}}) -> 35", "(sumt {0}) -> 0", "(sumt {5 {5}}) -> 10", "(sumt {8}) -> 8", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.321355, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {5 {9} {5 {9} {8}}} {1 {6 {9}} {8 {9} {7}}}}) -> 78", "(sumt {6 {8}}) -> 14", "(sumt {1 {0 {8}} {5 {9}}}) -> 23", "(sumt {3 {1 {4} {2}} {9}}) -> 19"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.341326, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {7 {4 {0} {1}}}}) -> 21", "(sumt {6 {4 {9 {2} {4}}}}) -> 25"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.691192, "examples": ["(sumt {}) -> 0", "(sumt {2 {5}}) -> 7", "(sumt {8}) -> 8", "(sumt {8 {5 {1} {5}}}) -> 19", "(sumt {}) -> 0", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.712554, "examples": ["(sumt {}) -> 0", "(sumt {1 {4} {9}}) -> 14", "(sumt {5 {1 {8} {6}} {4}}) -> 24", "(sumt {2 {3}}) -> 5", "(sumt {5}) -> 5", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.745612, "examples": ["(sumt {}) -> 0", "(sumt {8 {9} {0}}) -> 17", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {0 {4 {8}} {6 {0} {3}}}) -> 21", "(sumt {5 {9} {6 {4}}}) -> 24"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.790605, "examples": ["(sumt {}) -> 0", "(sumt {4 {2 {5}} {4}}) -> 15", "(sumt {7 {4} {9}}) -> 20", "(sumt {}) -> 0", "(sumt {8 {2}}) -> 10", "(sumt {4 {1} {8}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.838022, "examples": ["(sumt {}) -> 0", "(sumt {8 {8 {7} {3}} {3 {4} {5}}}) -> 38", "(sumt {6}) -> 6", "(sumt {3}) -> 3", "(sumt {8 {7 {3 {6} {3}} {0 {0}}}}) -> 27", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.545922, "examples": ["(sumt {}) -> 0", "(sumt {4 {8 {3}}}) -> 15", "(sumt {4 {5} {1}}) -> 10", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {9}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.624669, "examples": ["(sumt {}) -> 0", "(sumt {1 {5} {5}}) -> 11", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {5 {3 {5 {2}} {1 {8} {0}}}}) -> 24", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.587072, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {2}) -> 2", "(sumt {4}) -> 4", "(sumt {3 {6} {6}}) -> 15"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.702563, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {8}) -> 8", "(sumt {3 {9}}) -> 12"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c c)) c)) 0)) _) _)", "time": 1.607901, "examples": ["(sumt {}) -> 0", "(sumt {8 {8}}) -> 16", "(sumt {2}) -> 2", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.688852, "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {9}) -> 9", "(sumt {0 {1 {8}} {2 {8} {6}}}) -> 25", "(sumt {7}) -> 7", "(sumt {4 {0 {4}}}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.80161, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {5} {4 {3} {7}}}) -> 19", "(sumt {8}) -> 8", "(sumt {2 {7} {8}}) -> 17", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.820003, "examples": ["(sumt {}) -> 0", "(sumt {4 {0} {8 {2} {5}}}) -> 19", "(sumt {}) -> 0", "(sumt {5 {3 {9 {4} {0}}} {8 {6 {8} {7}} {7 {1} {9}}}}) -> 67", "(sumt {}) -> 0", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.682398, "examples": ["(sumt {}) -> 0", "(sumt {4 {8 {8 {8} {2}} {3}}}) -> 33", "(sumt {4}) -> 4", "(sumt {3 {7} {5}}) -> 15", "(sumt {9}) -> 9", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.839328, "examples": ["(sumt {}) -> 0", "(sumt {6 {7 {8 {4} {5}} {2 {0} {2}}}}) -> 34", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {3 {3 {8}}}) -> 14", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.633501, "examples": ["(sumt {}) -> 0", "(sumt {0 {8}}) -> 8", "(sumt {9}) -> 9", "(sumt {9 {8 {3 {1} {0}}}}) -> 21", "(sumt {}) -> 0", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.749747, "examples": ["(sumt {}) -> 0", "(sumt {2 {5 {0}} {0 {8}}}) -> 15", "(sumt {}) -> 0", "(sumt {1 {1 {8}} {6 {3} {3}}}) -> 22", "(sumt {6}) -> 6", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.637553, "examples": ["(sumt {}) -> 0", "(sumt {9 {1} {1}}) -> 11", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {7 {9}}) -> 16", "(sumt {6 {4} {1 {5} {8}}}) -> 24"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.687981, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {8 {7 {0}} {3 {6} {5}}}) -> 29", "(sumt {5 {9 {5} {0}}}) -> 19", "(sumt {}) -> 0", "(sumt {1 {0}}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.069252, "examples": ["(sumt {}) -> 0", "(sumt {1 {5}}) -> 6", "(sumt {6}) -> 6", "(sumt {5 {1} {1 {8}}}) -> 15", "(sumt {}) -> 0", "(sumt {3 {0} {3}}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.160036, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {4}) -> 4", "(sumt {6 {9 {3 {4} {9}} {8 {1}}} {6}}) -> 46", "(sumt {}) -> 0", "(sumt {2 {5 {5 {1}} {7 {3} {7}}}}) -> 30"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.897221, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {3}) -> 3", "(sumt {5 {0 {9} {0}}}) -> 14", "(sumt {3}) -> 3", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.856996, "examples": ["(sumt {}) -> 0", "(sumt {3 {2} {1}}) -> 6", "(sumt {3 {1 {1} {9}}}) -> 14", "(sumt {4}) -> 4", "(sumt {0 {9} {6}}) -> 15", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.926208, "examples": ["(sumt {}) -> 0", "(sumt {6 {5 {5 {6} {9}}}}) -> 31", "(sumt {9 {2 {7 {6} {3}}}}) -> 27", "(sumt {4 {0} {5}}) -> 9", "(sumt {}) -> 0", "(sumt {1 {4} {1}}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.839445, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {7 {2}}}) -> 16", "(sumt {}) -> 0", "(sumt {6 {6} {8}}) -> 20", "(sumt {4}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.799028, "examples": ["(sumt {}) -> 0", "(sumt {1 {1} {6}}) -> 8", "(sumt {0 {3}}) -> 3", "(sumt {}) -> 0", "(sumt {7 {3}}) -> 10", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.821642, "examples": ["(sumt {}) -> 0", "(sumt {1 {8} {0}}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {8 {9} {2}}}) -> 28"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.929113, "examples": ["(sumt {}) -> 0", "(sumt {9 {6 {1 {5} {9}} {0}}}) -> 30", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.154937, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {3 {4}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.209264, "examples": ["(sumt {}) -> 0", "(sumt {8 {5 {9}}}) -> 22", "(sumt {3}) -> 3", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {2 {9 {0 {5} {3}} {8 {7} {3}}}}) -> 37"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.934097, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {6 {7 {0 {4} {3}} {6 {0}}}}) -> 26", "(sumt {6 {5 {1} {8}} {2 {3}}}) -> 25"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.334565, "examples": ["(sumt {}) -> 0", "(sumt {5 {2 {8 {4} {6}}} {7 {9 {7}}}}) -> 48", "(sumt {3 {7 {7 {6}}} {5 {0 {5} {9}}}}) -> 42", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.358, "examples": ["(sumt {}) -> 0", "(sumt {9 {6 {2} {9}}}) -> 26", "(sumt {8 {0} {9}}) -> 17", "(sumt {9}) -> 9", "(sumt {6 {1 {5 {6} {8}} {7}} {4 {3 {8}} {3}}}) -> 51", "(sumt {0 {5 {1}}}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.505325, "examples": ["(sumt {}) -> 0", "(sumt {5 {0 {1 {1}} {8 {3} {1}}} {3 {3 {9} {8}} {0}}}) -> 42", "(sumt {4 {2}}) -> 6", "(sumt {}) -> 0", "(sumt {5 {8} {7}}) -> 20", "(sumt {4}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.620094, "examples": ["(sumt {}) -> 0", "(sumt {4 {6}}) -> 10", "(sumt {8 {4}}) -> 12", "(sumt {7}) -> 7", "(sumt {7 {7}}) -> 14", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.50081, "examples": ["(sumt {}) -> 0", "(sumt {9 {9 {7 {2} {0}} {0 {8} {3}}}}) -> 38", "(sumt {6 {5 {4}}}) -> 15", "(sumt {5 {1 {6}}}) -> 12", "(sumt {4}) -> 4", "(sumt {6 {5} {0}}) -> 11"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.606756, "examples": ["(sumt {}) -> 0", "(sumt {3 {3}}) -> 6", "(sumt {}) -> 0", "(sumt {6 {9 {3 {5}}}}) -> 23", "(sumt {}) -> 0", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.641601, "examples": ["(sumt {}) -> 0", "(sumt {0 {2}}) -> 2", "(sumt {5}) -> 5", "(sumt {7 {5}}) -> 12", "(sumt {3 {8}}) -> 11", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.586584, "examples": ["(sumt {}) -> 0", "(sumt {3 {4}}) -> 7", "(sumt {8 {8 {8 {4}}}}) -> 28", "(sumt {7 {1 {4} {8 {8} {8}}} {9}}) -> 45", "(sumt {}) -> 0", "(sumt {9 {0 {2} {4}} {2 {5}}}) -> 22"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.769175, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {0}}) -> 2", "(sumt {9 {5}}) -> 14", "(sumt {9 {7 {7} {6}} {5}}) -> 34", "(sumt {8 {8 {8}} {1}}) -> 25"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.63417, "examples": ["(sumt {}) -> 0", "(sumt {6 {4 {9 {7} {2}}} {9 {4 {0} {5}}}}) -> 46", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {9 {4 {3} {7}} {9}}) -> 32"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.606735, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {5 {1} {0}}}) -> 15", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.702911, "examples": ["(sumt {}) -> 0", "(sumt {7 {0} {9}}) -> 16", "(sumt {2}) -> 2", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {8 {9 {7 {0}} {0 {7}}} {7 {8} {7}}}) -> 53"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.37032, "examples": ["(sumt {}) -> 0", "(sumt {6 {8}}) -> 14", "(sumt {3 {3}}) -> 6", "(sumt {1}) -> 1", "(sumt {9 {1}}) -> 10", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.467662, "examples": ["(sumt {}) -> 0", "(sumt {9 {0} {3}}) -> 12", "(sumt {3 {2} {2}}) -> 7", "(sumt {6 {5}}) -> 11", "(sumt {6}) -> 6", "(sumt {6 {8}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.659688, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {1 {9 {2} {6}}}) -> 18", "(sumt {7 {9} {5}}) -> 21", "(sumt {6 {2 {4} {6}} {4}}) -> 22", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.611473, "examples": ["(sumt {}) -> 0", "(sumt {5 {1} {0}}) -> 6", "(sumt {6 {8}}) -> 14", "(sumt {5}) -> 5", "(sumt {1 {9} {6}}) -> 16", "(sumt {3 {5 {6} {8}}}) -> 22"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.470929, "examples": ["(sumt {}) -> 0", "(sumt {1 {0 {5}}}) -> 6", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {7 {9 {7 {4}}} {5 {7 {8}}}}) -> 47", "(sumt {3 {2} {7}}) -> 12"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.761263, "examples": ["(sumt {}) -> 0", "(sumt {5 {1 {1} {3}} {3 {9}}}) -> 22", "(sumt {3 {9 {6} {8}}}) -> 26", "(sumt {0 {9} {5}}) -> 14", "(sumt {4}) -> 4", "(sumt {4 {5} {8}}) -> 17"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.317022, "examples": ["(sumt {}) -> 0", "(sumt {7 {3 {3} {2}}}) -> 15", "(sumt {4}) -> 4", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {4}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.715073, "examples": ["(sumt {}) -> 0", "(sumt {4 {1 {2} {5}}}) -> 12", "(sumt {2}) -> 2", "(sumt {9}) -> 9", "(sumt {1 {5 {8} {6}}}) -> 20", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.614518, "examples": ["(sumt {}) -> 0", "(sumt {0 {3 {7} {9}} {7 {3}}}) -> 29", "(sumt {9 {5} {0}}) -> 14", "(sumt {4}) -> 4", "(sumt {0 {1} {6}}) -> 7", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.67675, "examples": ["(sumt {}) -> 0", "(sumt {9 {7}}) -> 16", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {4 {5 {3}}}) -> 12", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.274107, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {0 {3}}}) -> 3", "(sumt {1}) -> 1", "(sumt {0}) -> 0", "(sumt {5 {5}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.608221, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {2}) -> 2", "(sumt {0 {8 {1}}}) -> 9", "(sumt {3}) -> 3", "(sumt {4 {8} {3 {7} {0}}}) -> 22"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.362991, "examples": ["(sumt {}) -> 0", "(sumt {1 {2}}) -> 3", "(sumt {6 {4 {5}}}) -> 15", "(sumt {3}) -> 3", "(sumt {9 {4}}) -> 13", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.479409, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {4 {6} {0}}}) -> 14", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.73064, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {0 {5 {6} {3}}} {3 {3 {7}}}}) -> 34", "(sumt {4}) -> 4", "(sumt {1 {2 {7}}}) -> 10", "(sumt {4 {9}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.948917, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {1 {7 {9} {6}} {4 {5} {9}}} {6}}) -> 47", "(sumt {6 {4}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.280336, "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {8 {4} {6}}) -> 18", "(sumt {4}) -> 4", "(sumt {9 {1 {3} {8}}}) -> 21", "(sumt {6 {5} {0}}) -> 11"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.551785, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2 {7 {3} {7 {4}}} {4 {0} {6 {9}}}}) -> 42", "(sumt {}) -> 0", "(sumt {8 {0} {9 {2 {3}} {1 {9}}}}) -> 32", "(sumt {0 {6 {8 {1} {2}} {1}}}) -> 18"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.455469, "examples": ["(sumt {}) -> 0", "(sumt {7 {6 {0} {8}} {4 {9}}}) -> 34", "(sumt {}) -> 0", "(sumt {2 {8 {6 {7} {2}}}}) -> 25", "(sumt {7 {6 {8} {6}} {1 {2} {4}}}) -> 34", "(sumt {7 {5} {6}}) -> 18"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.615698, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {7 {6 {1} {9}}}) -> 23", "(sumt {2}) -> 2", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.595765, "examples": ["(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {5 {2}}) -> 7", "(sumt {2 {0 {5}} {8 {9 {7}} {5}}}) -> 36", "(sumt {3 {2} {8}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.561772, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {0 {3}}) -> 3", "(sumt {1 {5}}) -> 6", "(sumt {}) -> 0", "(sumt {3 {9} {7}}) -> 19"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.365076, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {1 {2 {7}}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.662641, "examples": ["(sumt {}) -> 0", "(sumt {4 {2 {7 {6}} {5}}}) -> 24", "(sumt {8 {5}}) -> 13", "(sumt {6}) -> 6", "(sumt {4 {4 {7 {0} {6}}}}) -> 21", "(sumt {5 {2} {6 {7}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.661073, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {9} {2 {1} {1}}}) -> 13", "(sumt {2}) -> 2", "(sumt {3}) -> 3", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 1.547124, "examples": ["(sumt {}) -> 0", "(sumt {4 {8 {7}}}) -> 19", "(sumt {}) -> 0", "(sumt {5 {7}}) -> 12", "(sumt {5}) -> 5", "(sumt {5 {5}}) -> 10"]}
