{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (<= c 1)))) _) _)", "name": "dropmax", "time": 0.049321, "examples": ["(dropmax []) -> []", "(dropmax [1 9]) -> [1]", "(dropmax []) -> []", "(dropmax [1 1 0 7]) -> [1 1 0]", "(dropmax [3]) -> []", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.168447, "examples": ["(dropmax []) -> []", "(dropmax [7 6 4 4]) -> [6 4 4]", "(dropmax [0 4 1 1]) -> [0 1 1]", "(dropmax [6 4 3]) -> [4 3]", "(dropmax []) -> []", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.162935, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9 3]) -> [3]", "(dropmax [3]) -> []", "(dropmax [1 8 1 7 9]) -> [1 8 1 7]", "(dropmax [7 8 6 7]) -> [7 6 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.123436, "examples": ["(dropmax []) -> []", "(dropmax [4 3]) -> [3]", "(dropmax [5]) -> []", "(dropmax [7 5 7 9 2]) -> [7 5 7 2]", "(dropmax [3]) -> []", "(dropmax [5 3 9 6]) -> [5 3 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.157337, "examples": ["(dropmax []) -> []", "(dropmax [6 5 3 8]) -> [6 5 3]", "(dropmax [1 8 5]) -> [1 5]", "(dropmax [2 8 2]) -> [2 2]", "(dropmax [7 6 0 8 3]) -> [7 6 0 3]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.185897, "examples": ["(dropmax []) -> []", "(dropmax [2 5 5 3]) -> [2 3]", "(dropmax [6 9 5]) -> [6 5]", "(dropmax [8 1]) -> [1]", "(dropmax [8 7 5 0 6]) -> [7 5 0 6]", "(dropmax [2 0 5]) -> [2 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.16029, "examples": ["(dropmax []) -> []", "(dropmax [8 1]) -> [1]", "(dropmax [8]) -> []", "(dropmax [2 0 9 1]) -> [2 0 1]", "(dropmax [7 1]) -> [1]", "(dropmax [9 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.171868, "examples": ["(dropmax []) -> []", "(dropmax [6 5 8]) -> [6 5]", "(dropmax [2 0 3 3 7]) -> [2 0 3 3]", "(dropmax [9 3 4]) -> [3 4]", "(dropmax [2 8]) -> [2]", "(dropmax [8 1 0 2 3]) -> [1 0 2 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.15594, "examples": ["(dropmax []) -> []", "(dropmax [7 0]) -> [0]", "(dropmax [8 2 9]) -> [8 2]", "(dropmax [7 8]) -> [7]", "(dropmax []) -> []", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.191732, "examples": ["(dropmax []) -> []", "(dropmax [2 5 5 0 5]) -> [2 0]", "(dropmax [4 2 3 8]) -> [4 2 3]", "(dropmax [1 8 4 8 4]) -> [1 4 4]", "(dropmax [0 3 8 6]) -> [0 3 6]", "(dropmax [4 1 0 5 8]) -> [4 1 0 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.196292, "examples": ["(dropmax []) -> []", "(dropmax [3 6 1]) -> [3 1]", "(dropmax [9 8 6]) -> [8 6]", "(dropmax []) -> []", "(dropmax [2 6 9 0]) -> [2 6 0]", "(dropmax [3 4]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.165995, "examples": ["(dropmax []) -> []", "(dropmax [5 1 7]) -> [5 1]", "(dropmax [1]) -> []", "(dropmax [6]) -> []", "(dropmax [0]) -> []", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.202518, "examples": ["(dropmax []) -> []", "(dropmax [9 9 7 0]) -> [7 0]", "(dropmax [5 5 3 6]) -> [5 5 3]", "(dropmax [7 4 4]) -> [4 4]", "(dropmax [7 3 0 3]) -> [3 0 3]", "(dropmax [9 4 7 6]) -> [4 7 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.162559, "examples": ["(dropmax []) -> []", "(dropmax [0 4 4 8 2]) -> [0 4 4 2]", "(dropmax [4 6 4 2]) -> [4 4 2]", "(dropmax [8 6 7]) -> [6 7]", "(dropmax [4]) -> []", "(dropmax [6 9 5 0 4]) -> [6 5 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.16969, "examples": ["(dropmax []) -> []", "(dropmax [7 5]) -> [5]", "(dropmax []) -> []", "(dropmax [7 1 9 5 5]) -> [7 1 5 5]", "(dropmax [2]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.18107, "examples": ["(dropmax []) -> []", "(dropmax [8 8]) -> []", "(dropmax [6 4 0]) -> [4 0]", "(dropmax [5 0 8]) -> [5 0]", "(dropmax [3 3]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.110999, "examples": ["(dropmax []) -> []", "(dropmax [0 2 1]) -> [0 1]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 2]) -> [2]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.152833, "examples": ["(dropmax []) -> []", "(dropmax [3 7 6 0 3]) -> [3 6 0 3]", "(dropmax [7]) -> []", "(dropmax [4]) -> []", "(dropmax [5 9]) -> [5]", "(dropmax [0 2 6 7 1]) -> [0 2 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.190372, "examples": ["(dropmax []) -> []", "(dropmax [5 6 3]) -> [5 3]", "(dropmax [2 4 0 8 5]) -> [2 4 0 5]", "(dropmax [5 0]) -> [0]", "(dropmax []) -> []", "(dropmax [4 5]) -> [4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.150234, "examples": ["(dropmax []) -> []", "(dropmax [0 4 2]) -> [0 2]", "(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [8 9 5]) -> [8 5]", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.184247, "examples": ["(dropmax []) -> []", "(dropmax [1 9 2 5]) -> [1 2 5]", "(dropmax []) -> []", "(dropmax [5 9]) -> [5]", "(dropmax [8 1]) -> [1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.151358, "examples": ["(dropmax []) -> []", "(dropmax [4 6]) -> [4]", "(dropmax [6 2]) -> [2]", "(dropmax [1 9]) -> [1]", "(dropmax [2 9 3 7 1]) -> [2 3 7 1]", "(dropmax [8 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.15412, "examples": ["(dropmax []) -> []", "(dropmax [6 3 8 2 7]) -> [6 3 2 7]", "(dropmax [8 2]) -> [2]", "(dropmax [2 6 3 5 2]) -> [2 3 5 2]", "(dropmax []) -> []", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173685, "examples": ["(dropmax []) -> []", "(dropmax [9 7 5 7]) -> [7 5 7]", "(dropmax [5 0]) -> [0]", "(dropmax [1 8 6 2 1]) -> [1 6 2 1]", "(dropmax [5]) -> []", "(dropmax [7 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.171493, "examples": ["(dropmax []) -> []", "(dropmax [5 4]) -> [4]", "(dropmax [9]) -> []", "(dropmax [9 1 1]) -> [1 1]", "(dropmax [3 5 4]) -> [3 4]", "(dropmax [6 5 4 5 2]) -> [5 4 5 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187535, "examples": ["(dropmax []) -> []", "(dropmax [2 8 5]) -> [2 5]", "(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [7]) -> []", "(dropmax [3 2 1 3]) -> [2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.166191, "examples": ["(dropmax []) -> []", "(dropmax [3 0 2 9]) -> [3 0 2]", "(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [2]) -> []", "(dropmax [7 1 3 5 6]) -> [1 3 5 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179506, "examples": ["(dropmax []) -> []", "(dropmax [6 5 7]) -> [6 5]", "(dropmax [0 3 4 2]) -> [0 3 2]", "(dropmax [4 4 5]) -> [4 4]", "(dropmax [7 6 7 9 4]) -> [7 6 7 4]", "(dropmax [7 5 6 2]) -> [5 6 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.178711, "examples": ["(dropmax []) -> []", "(dropmax [9 0 8 6]) -> [0 8 6]", "(dropmax [2 0 9 3]) -> [2 0 3]", "(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.161456, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [0 6 4]) -> [0 4]", "(dropmax [3]) -> []", "(dropmax [0 7]) -> [0]", "(dropmax [8 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.207914, "examples": ["(dropmax []) -> []", "(dropmax [9 6]) -> [6]", "(dropmax [8 1]) -> [1]", "(dropmax [2 5 2]) -> [2 2]", "(dropmax [1]) -> []", "(dropmax [9 8 6 4 2]) -> [8 6 4 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.16134, "examples": ["(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax [7 7]) -> []", "(dropmax [1 7]) -> [1]", "(dropmax [2 3 3 7]) -> [2 3 3]", "(dropmax [9 8]) -> [8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.11982, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [7]) -> []", "(dropmax []) -> []", "(dropmax [1 8 8 7 5]) -> [1 7 5]", "(dropmax [9 5 5 6]) -> [5 5 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (= 1 c)))) _) _)", "name": "dropmax", "time": 0.054501, "examples": ["(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [3]) -> []", "(dropmax [7 1]) -> [1]", "(dropmax []) -> []", "(dropmax [1 6 1]) -> [1 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.029437, "examples": ["(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [5 3]) -> [3]", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.151186, "examples": ["(dropmax []) -> []", "(dropmax [3 9 1]) -> [3 1]", "(dropmax [4 7]) -> [4]", "(dropmax [2 3 5]) -> [2 3]", "(dropmax [4]) -> []", "(dropmax [8 4 4 8 0]) -> [4 4 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.149525, "examples": ["(dropmax []) -> []", "(dropmax [8 8]) -> []", "(dropmax [9 2]) -> [2]", "(dropmax [1 3 6]) -> [1 3]", "(dropmax [6]) -> []", "(dropmax [0 6 1 6 2]) -> [0 1 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.19333, "examples": ["(dropmax []) -> []", "(dropmax [9 9 2]) -> [2]", "(dropmax [0 8 1]) -> [0 1]", "(dropmax [9]) -> []", "(dropmax [3 7 5]) -> [3 5]", "(dropmax [6 2]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.189139, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 1 7]) -> [5 1]", "(dropmax []) -> []", "(dropmax [4 9 5 8]) -> [4 5 8]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.168259, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax [1 4]) -> [1]", "(dropmax [9]) -> []", "(dropmax [2]) -> []", "(dropmax [1 2 6 0 2]) -> [1 2 0 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179218, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [2 0 2]) -> [0]", "(dropmax []) -> []", "(dropmax [4 8 5 2]) -> [4 5 2]", "(dropmax [9]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.149573, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [9]) -> []", "(dropmax []) -> []", "(dropmax [2 6 4 0]) -> [2 4 0]", "(dropmax [2 5 0 3 0]) -> [2 0 3 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.179749, "examples": ["(dropmax []) -> []", "(dropmax [3 0 3 0 1]) -> [0 0 1]", "(dropmax [4 1 5 8]) -> [4 1 5]", "(dropmax []) -> []", "(dropmax [2 9 8 3]) -> [2 8 3]", "(dropmax [1 3]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.147902, "examples": ["(dropmax []) -> []", "(dropmax [1 5 9]) -> [1 5]", "(dropmax [2 3 7 6]) -> [2 3 6]", "(dropmax [5 9 4 0 2]) -> [5 4 0 2]", "(dropmax [2]) -> []", "(dropmax [4 8 6 9 3]) -> [4 8 6 3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.170374, "examples": ["(dropmax []) -> []", "(dropmax [6 3 2 5 4]) -> [3 2 5 4]", "(dropmax [9 8 5]) -> [8 5]", "(dropmax [2 1 5 1 0]) -> [2 1 1 0]", "(dropmax []) -> []", "(dropmax [0]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.182081, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [4 6 5]) -> [4 5]", "(dropmax [9 1]) -> [1]", "(dropmax [6 0 8]) -> [6 0]", "(dropmax [4 5 4 5]) -> [4 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17765, "examples": ["(dropmax []) -> []", "(dropmax [7 2 8]) -> [7 2]", "(dropmax [8 4]) -> [4]", "(dropmax [5 3]) -> [3]", "(dropmax [6 4 9]) -> [6 4]", "(dropmax [5 3 5]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.187645, "examples": ["(dropmax []) -> []", "(dropmax [5 9 6 9]) -> [5 6]", "(dropmax [4 7 9 0]) -> [4 7 0]", "(dropmax [8]) -> []", "(dropmax [2 4]) -> [2]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.176725, "examples": ["(dropmax []) -> []", "(dropmax [9 2 1 2 5]) -> [2 1 2 5]", "(dropmax []) -> []", "(dropmax [1 1 7 6 4]) -> [1 1 6 4]", "(dropmax [5 3 1 4 8]) -> [5 3 1 4]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.156865, "examples": ["(dropmax []) -> []", "(dropmax [6 5 9 0 6]) -> [6 5 0 6]", "(dropmax [8 4 5 2 9]) -> [8 4 5 2]", "(dropmax [4 2]) -> [2]", "(dropmax [1 8]) -> [1]", "(dropmax [5 9 0 4]) -> [5 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158579, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [5 4]) -> [4]", "(dropmax [6 2 2 7]) -> [6 2 2]", "(dropmax [9 6 4 5 4]) -> [6 4 5 4]", "(dropmax [7 8]) -> [7]"]}
{"solution": "(let dropmax (let a (lambda (b) []) _) _)", "name": "dropmax", "time": 0.001084, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [6]) -> []", "(dropmax [4]) -> []", "(dropmax []) -> []", "(dropmax [4]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.161203, "examples": ["(dropmax []) -> []", "(dropmax [2 1 9 5]) -> [2 1 5]", "(dropmax [8 0]) -> [0]", "(dropmax [1 0]) -> [0]", "(dropmax [7]) -> []", "(dropmax [2 0 4 5]) -> [2 0 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167228, "examples": ["(dropmax []) -> []", "(dropmax [7 6 2]) -> [6 2]", "(dropmax [2 8 1 8]) -> [2 1]", "(dropmax [6 9]) -> [6]", "(dropmax [6 6]) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173447, "examples": ["(dropmax []) -> []", "(dropmax [1 3 5 8]) -> [1 3 5]", "(dropmax [7 7 3]) -> [3]", "(dropmax [7 6 2 1 2]) -> [6 2 1 2]", "(dropmax [8 3 3 3]) -> [3 3 3]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.146143, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 9 7 2]) -> [7 7 2]", "(dropmax [1 5 1 4 8]) -> [1 5 1 4]", "(dropmax [0 2]) -> [0]", "(dropmax [4 8 4]) -> [4 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.142994, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 3 2 7 3]) -> [3 2 3]", "(dropmax [1 2 5 0 5]) -> [1 2 0]", "(dropmax []) -> []", "(dropmax [3 8 6 1 8]) -> [3 6 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.162698, "examples": ["(dropmax []) -> []", "(dropmax [0 6 7]) -> [0 6]", "(dropmax [7 4 3 7 6]) -> [4 3 6]", "(dropmax [8 0 6 9 4]) -> [8 0 6 4]", "(dropmax [4]) -> []", "(dropmax [5 4 9]) -> [5 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.152671, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [8 0 2 5]) -> [0 2 5]", "(dropmax [3 5]) -> [3]", "(dropmax [6 4 3]) -> [4 3]", "(dropmax [5 4 9 0]) -> [5 4 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.170747, "examples": ["(dropmax []) -> []", "(dropmax [0 0 7 2]) -> [0 0 2]", "(dropmax [0 0 4 8 1]) -> [0 0 4 1]", "(dropmax []) -> []", "(dropmax [8 7]) -> [7]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.171292, "examples": ["(dropmax []) -> []", "(dropmax [0 1 3]) -> [0 1]", "(dropmax [4 8]) -> [4]", "(dropmax []) -> []", "(dropmax [8 0 9 6]) -> [8 0 6]", "(dropmax [3 4 8 6 9]) -> [3 4 8 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17851, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [3 6 7 6]) -> [3 6 6]", "(dropmax []) -> []", "(dropmax [7 0 8 3 5]) -> [7 0 3 5]", "(dropmax [0 8 8 6 6]) -> [0 6 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.175307, "examples": ["(dropmax []) -> []", "(dropmax [3 8]) -> [3]", "(dropmax [6]) -> []", "(dropmax [4 4 0]) -> [0]", "(dropmax [2 3 2 2]) -> [2 2 2]", "(dropmax [2 8]) -> [2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.16767, "examples": ["(dropmax []) -> []", "(dropmax [2 7 3 6 4]) -> [2 3 6 4]", "(dropmax [6]) -> []", "(dropmax [7 4]) -> [4]", "(dropmax [3]) -> []", "(dropmax [5 5 1]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.168668, "examples": ["(dropmax []) -> []", "(dropmax [1 9 6]) -> [1 6]", "(dropmax []) -> []", "(dropmax [9 6 5]) -> [6 5]", "(dropmax [4 3 8 7 7]) -> [4 3 7 7]", "(dropmax [8]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.172472, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2 9]) -> [2]", "(dropmax [6 4 9 6]) -> [6 4 6]", "(dropmax [0 2 6 1 5]) -> [0 2 1 5]", "(dropmax [2 1 4]) -> [2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.114252, "examples": ["(dropmax []) -> []", "(dropmax [8 1 6 0]) -> [1 6 0]", "(dropmax [0 2 4 6 3]) -> [0 2 4 3]", "(dropmax []) -> []", "(dropmax [8 3 3]) -> [3 3]", "(dropmax [2 1 2]) -> [1]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.033275, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [2]) -> []", "(dropmax []) -> []", "(dropmax [9 7]) -> [7]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.025671, "examples": ["(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [8 4 1 2]) -> [4 1 2]", "(dropmax [8 4 7 4 7]) -> [4 7 4 7]", "(dropmax [8]) -> []", "(dropmax [7 1 5]) -> [1 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.13323, "examples": ["(dropmax []) -> []", "(dropmax [5]) -> []", "(dropmax [0 9]) -> [0]", "(dropmax [8 7 0]) -> [7 0]", "(dropmax [9 9 0 1 6]) -> [0 1 6]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.144361, "examples": ["(dropmax []) -> []", "(dropmax [0 8 4 2]) -> [0 4 2]", "(dropmax [7 0 3 6]) -> [0 3 6]", "(dropmax [5]) -> []", "(dropmax []) -> []", "(dropmax [0 4 5 7 4]) -> [0 4 5 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.154445, "examples": ["(dropmax []) -> []", "(dropmax [6 8]) -> [6]", "(dropmax [6]) -> []", "(dropmax [4 9 5 6 6]) -> [4 5 6 6]", "(dropmax [2]) -> []", "(dropmax [2 9 1]) -> [2 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158392, "examples": ["(dropmax []) -> []", "(dropmax [1 3 5]) -> [1 3]", "(dropmax []) -> []", "(dropmax [4 1 1 1 7]) -> [4 1 1 1]", "(dropmax [0 3 2 0 0]) -> [0 2 0 0]", "(dropmax [7 8]) -> [7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.139037, "examples": ["(dropmax []) -> []", "(dropmax [6 9 8 7]) -> [6 8 7]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7]) -> []", "(dropmax [5]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.143313, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [9 8]) -> [8]", "(dropmax [2 1 8]) -> [2 1]", "(dropmax [6 0 5 5 7]) -> [6 0 5 5]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.151828, "examples": ["(dropmax []) -> []", "(dropmax [1]) -> []", "(dropmax []) -> []", "(dropmax [9 9 9 3 1]) -> [3 1]", "(dropmax [4 5 3]) -> [4 3]", "(dropmax [5 8 2]) -> [5 2]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.135896, "examples": ["(dropmax []) -> []", "(dropmax [8 6]) -> [6]", "(dropmax [2 2 5 0 4]) -> [2 2 0 4]", "(dropmax [1]) -> []", "(dropmax [4 4 7]) -> [4 4]", "(dropmax [5 1 6]) -> [5 1]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.148039, "examples": ["(dropmax []) -> []", "(dropmax [0 8 6 2 5]) -> [0 6 2 5]", "(dropmax [8 4 0 3 6]) -> [4 0 3 6]", "(dropmax []) -> []", "(dropmax [5 8]) -> [5]", "(dropmax [5 8]) -> [5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.155421, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [8 8 6 3]) -> [6 3]", "(dropmax [5]) -> []", "(dropmax [4 1]) -> [1]", "(dropmax [1 5 0 0 7]) -> [1 5 0 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.17427, "examples": ["(dropmax []) -> []", "(dropmax [2 4 8 1 8]) -> [2 4 1]", "(dropmax [4 0]) -> [0]", "(dropmax [3 7 0]) -> [3 0]", "(dropmax []) -> []", "(dropmax [3 3 5 9]) -> [3 3 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.160918, "examples": ["(dropmax []) -> []", "(dropmax [5 8 8 0 0]) -> [5 0 0]", "(dropmax [0]) -> []", "(dropmax [2 1 9 7]) -> [2 1 7]", "(dropmax [0 5]) -> [0]", "(dropmax [3 5]) -> [3]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.167799, "examples": ["(dropmax []) -> []", "(dropmax [3 2 6 0 6]) -> [3 2 0]", "(dropmax [2 7]) -> [2]", "(dropmax [1 9 9 5 3]) -> [1 5 3]", "(dropmax [3 9 2 6 5]) -> [3 2 6 5]", "(dropmax [6 5]) -> [5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.166135, "examples": ["(dropmax []) -> []", "(dropmax [6 8 6 6 8]) -> [6 6 6]", "(dropmax [6 5 3]) -> [5 3]", "(dropmax [0 3 0 8]) -> [0 3 0]", "(dropmax [7 1]) -> [1]", "(dropmax [7 6 4 7]) -> [6 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.157796, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [7 2 7 6]) -> [2 6]", "(dropmax [4 7 2 4 3]) -> [4 2 4 3]", "(dropmax [0 9 4 0]) -> [0 4 0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.155494, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1 8 6 2 6]) -> [1 6 2 6]", "(dropmax [0 4 8 8 5]) -> [0 4 5]", "(dropmax [4 9 0]) -> [4 0]", "(dropmax [9 8]) -> [8]"]}
{"solution": "(let dropmax (let a (lambda (b) (foldl b (lambda (d c) (cdr b)) [])) _) _)", "name": "dropmax", "time": 0.044866, "examples": ["(dropmax []) -> []", "(dropmax [7 3]) -> [3]", "(dropmax [8 5 0]) -> [5 0]", "(dropmax []) -> []", "(dropmax []) -> []", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.160007, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [3 9 8 6 8]) -> [3 8 6 8]", "(dropmax [4 8 9 6 8]) -> [4 8 6 8]", "(dropmax [1 8 6 6]) -> [1 6 6]", "(dropmax [9 1 6]) -> [1 6]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.154145, "examples": ["(dropmax []) -> []", "(dropmax [5 3]) -> [3]", "(dropmax [5 9 6]) -> [5 6]", "(dropmax [9 2]) -> [2]", "(dropmax [3 7 9 9 1]) -> [3 7 1]", "(dropmax [7 0 0 9 7]) -> [7 0 0 7]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.138713, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [2 7]) -> [2]", "(dropmax [3 2 1]) -> [2 1]", "(dropmax []) -> []", "(dropmax [2 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (car b))))) _) _)", "name": "dropmax", "time": 0.14903, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [6 1 2 4]) -> [1 2 4]", "(dropmax [6 3 6 2]) -> [3 2]", "(dropmax [6]) -> []", "(dropmax [9 0 7 8]) -> [0 7 8]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.13559, "examples": ["(dropmax []) -> []", "(dropmax [4 2 7 5]) -> [4 2 5]", "(dropmax [1]) -> []", "(dropmax [3 1 4 4 7]) -> [3 1 4 4]", "(dropmax [2 7 5 9]) -> [2 7 5]", "(dropmax [1 0 9 5]) -> [1 0 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.156256, "examples": ["(dropmax []) -> []", "(dropmax [6 7]) -> [6]", "(dropmax [0 9]) -> [0]", "(dropmax [5 8 4 0 4]) -> [5 4 0 4]", "(dropmax []) -> []", "(dropmax [7 0]) -> [0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.173504, "examples": ["(dropmax []) -> []", "(dropmax [9 9 8 1 1]) -> [8 1 1]", "(dropmax [2 8 6 6 5]) -> [2 6 6 5]", "(dropmax [5 8 9 1 7]) -> [5 8 1 7]", "(dropmax [9 1 8]) -> [1 8]", "(dropmax [1]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.160287, "examples": ["(dropmax []) -> []", "(dropmax [0 9 0]) -> [0 0]", "(dropmax [8 8 3 7 2]) -> [3 7 2]", "(dropmax [6 7 6 0]) -> [6 6 0]", "(dropmax [2 3 1]) -> [2 1]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.146797, "examples": ["(dropmax []) -> []", "(dropmax [8]) -> []", "(dropmax [9]) -> []", "(dropmax [4 0]) -> [0]", "(dropmax [8 2 1 1 4]) -> [2 1 1 4]", "(dropmax [0 8 2 6 0]) -> [0 2 6 0]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.128228, "examples": ["(dropmax []) -> []", "(dropmax [4]) -> []", "(dropmax [0 6 4 8]) -> [0 6 4]", "(dropmax [7 8 1 2 9]) -> [7 8 1 2]", "(dropmax [4 7]) -> [4]", "(dropmax [7 7 8 7 5]) -> [7 7 7 5]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.147642, "examples": ["(dropmax []) -> []", "(dropmax [4 2 4 1 0]) -> [2 1 0]", "(dropmax [5 6]) -> [5]", "(dropmax [5 3 7 1 5]) -> [5 3 1 5]", "(dropmax [3 8 5 3 0]) -> [3 5 3 0]", "(dropmax []) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.158389, "examples": ["(dropmax []) -> []", "(dropmax []) -> []", "(dropmax [1 3 8 1]) -> [1 3 1]", "(dropmax []) -> []", "(dropmax [0 3]) -> [0]", "(dropmax [7]) -> []"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.120912, "examples": ["(dropmax []) -> []", "(dropmax [2 7]) -> [2]", "(dropmax [2 0 0 2 7]) -> [2 0 0 2]", "(dropmax [8]) -> []", "(dropmax [3 7 3 2 5]) -> [3 3 2 5]", "(dropmax [6 0 7 9 4]) -> [6 0 7 4]"]}
{"solution": "(let dropmax (let a (lambda (b) (filter b (lambda (c) (!= c (max b))))) _) _)", "name": "dropmax", "time": 0.097289, "examples": ["(dropmax []) -> []", "(dropmax [0]) -> []", "(dropmax [3 5 8]) -> [3 5]", "(dropmax [9 7 4 7]) -> [7 4 7]", "(dropmax []) -> []", "(dropmax [5]) -> []"]}
