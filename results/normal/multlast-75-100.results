{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3]) -> [3]", "(multlast [9 8]) -> [8 8]", "(multlast [0 2 0 2]) -> [2 2 2 2]", "(multlast [7 1]) -> [1 1]", "(multlast [0]) -> [0]", "(multlast [1 8 6 7 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [5 9 9]) -> [9 9 9]", "(multlast [2 0 4]) -> [4 4 4]", "(multlast [1 2 0]) -> [0 0 0]", "(multlast [9 2 3 1]) -> [1 1 1 1]", "(multlast [3]) -> [3]", "(multlast [8 5 8 5 9]) -> [9 9 9 9 9]", "(multlast [3 4]) -> [4 4]", "(multlast [7 6]) -> [6 6]", "(multlast [6 5 4 4 4]) -> [4 4 4 4 4]", "(multlast [4]) -> [4]", "(multlast [4 8 0]) -> [0 0 0]", "(multlast [6 0 5]) -> [5 5 5]", "(multlast [0 4 2 0]) -> [0 0 0 0]", "(multlast [7 8 7]) -> [7 7 7]", "(multlast [4 0 4 1 5]) -> [5 5 5 5 5]", "(multlast [2 8 0 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [3 1 1]) -> [1 1 1]", "(multlast [0 1 5 3 2]) -> [2 2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [1 8 8 8 9]) -> [9 9 9 9 9]", "(multlast [9 6 8 8 3]) -> [3 3 3 3 3]", "(multlast [5 2 3]) -> [3 3 3]", "(multlast [6 2 5 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [6 3 3]) -> [3 3 3]", "(multlast [5]) -> [5]", "(multlast [3 0 1 9]) -> [9 9 9 9]", "(multlast [2 2]) -> [2 2]", "(multlast [6 3]) -> [3 3]", "(multlast [3 1]) -> [1 1]", "(multlast [7 6 3 7 3]) -> [3 3 3 3 3]", "(multlast [0 7]) -> [7 7]", "(multlast [2 5 1]) -> [1 1 1]", "(multlast [7]) -> [7]", "(multlast [0 3 0 0 7]) -> [7 7 7 7 7]", "(multlast [0 5 2]) -> [2 2 2]", "(multlast [2 6 1 4]) -> [4 4 4 4]", "(multlast [7 0 9 2]) -> [2 2 2 2]", "(multlast [4 1 6 8]) -> [8 8 8 8]", "(multlast [9 5 3 2 4]) -> [4 4 4 4 4]", "(multlast [9 8 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [6 2 0 6]) -> [6 6 6 6]", "(multlast [9 0]) -> [0 0]", "(multlast []) -> []", "(multlast [7 5 3 3 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [8 2]) -> [2 2]", "(multlast [6 0 6 3]) -> [3 3 3 3]", "(multlast [5 2]) -> [2 2]", "(multlast [2 0 2 9 9]) -> [9 9 9 9 9]", "(multlast [5]) -> [5]", "(multlast [0 8 6]) -> [6 6 6]", "(multlast [5 9]) -> [9 9]", "(multlast [0 0 7 7 6]) -> [6 6 6 6 6]", "(multlast [7 4 3 0 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [6 8 8]) -> [8 8 8]", "(multlast [7 9 1 4]) -> [4 4 4 4]", "(multlast [7 3 6]) -> [6 6 6]", "(multlast [2 0 2 3 3]) -> [3 3 3 3 3]", "(multlast [8]) -> [8]", "(multlast [7]) -> [7]", "(multlast [3 0 5]) -> [5 5 5]"], "time": 0.328985, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2 4]) -> [4 4]", "(multlast [1 9]) -> [9 9]", "(multlast [8 5 3 8]) -> [8 8 8 8]", "(multlast [5]) -> [5]", "(multlast [5 2 0 6]) -> [6 6 6 6]", "(multlast [2 8 2]) -> [2 2 2]", "(multlast [2 9 0 4 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [9 7 7 6]) -> [6 6 6 6]", "(multlast [9 6]) -> [6 6]", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 2 7 1 6]) -> [6 6 6 6 6]", "(multlast [1 2 7 6]) -> [6 6 6 6]", "(multlast [3 1 4]) -> [4 4 4]", "(multlast [4 0 7 3 5]) -> [5 5 5 5 5]", "(multlast [3 3 8]) -> [8 8 8]", "(multlast [5 8 9 5]) -> [5 5 5 5]", "(multlast [0 8 1 8 2]) -> [2 2 2 2 2]", "(multlast [5 0]) -> [0 0]", "(multlast [8 1 3]) -> [3 3 3]", "(multlast [9 2 0]) -> [0 0 0]", "(multlast [9 5 4 7 3]) -> [3 3 3 3 3]", "(multlast [1 6]) -> [6 6]", "(multlast [5 6 1 6]) -> [6 6 6 6]", "(multlast [4 8 6 2]) -> [2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [0 5]) -> [5 5]", "(multlast [7 9 5 3 9]) -> [9 9 9 9 9]", "(multlast [0 5 8 0]) -> [0 0 0 0]", "(multlast [7 1 5 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [5 7 2]) -> [2 2 2]", "(multlast [6 4 1 8 2]) -> [2 2 2 2 2]", "(multlast [8 5 9]) -> [9 9 9]", "(multlast [1 7 5 3]) -> [3 3 3 3]", "(multlast [4 9]) -> [9 9]", "(multlast [9 5 4 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [3 6 6]) -> [6 6 6]", "(multlast [1 8 5]) -> [5 5 5]", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [9]) -> [9]", "(multlast [7 1 8 6]) -> [6 6 6 6]", "(multlast [3 9 6 1]) -> [1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [0 8 0]) -> [0 0 0]", "(multlast [2 0 0 5 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [3 8 0]) -> [0 0 0]", "(multlast [4 0 8 6 0]) -> [0 0 0 0 0]", "(multlast [2 3 8]) -> [8 8 8]", "(multlast [9 9 8 7]) -> [7 7 7 7]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [2 9 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [2 4]) -> [4 4]", "(multlast [2 4 2 4]) -> [4 4 4 4]", "(multlast [9 2 9]) -> [9 9 9]", "(multlast [2 3 0 7 4]) -> [4 4 4 4 4]", "(multlast [8 3 8 1]) -> [1 1 1 1]", "(multlast [6 2]) -> [2 2]", "(multlast [8 8 1 1 7]) -> [7 7 7 7 7]", "(multlast [5 9 4 4 2]) -> [2 2 2 2 2]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [3 9]) -> [9 9]", "(multlast [2 1 4]) -> [4 4 4]"], "time": 0.310786, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [9 4]) -> [4 4]", "(multlast [2]) -> [2]", "(multlast [5 3 3]) -> [3 3 3]", "(multlast [5]) -> [5]", "(multlast [6 2 8 8 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [1 1 7]) -> [7 7 7]", "(multlast [8 2]) -> [2 2]", "(multlast [7 1]) -> [1 1]", "(multlast [1 5 3]) -> [3 3 3]", "(multlast [5 6 0 7 2]) -> [2 2 2 2 2]", "(multlast [0 2 9 4 5]) -> [5 5 5 5 5]", "(multlast [8 8 5 1]) -> [1 1 1 1]", "(multlast [7 8 5 7]) -> [7 7 7 7]", "(multlast [5 8 3 2]) -> [2 2 2 2]", "(multlast [4 3]) -> [3 3]", "(multlast [7 7]) -> [7 7]", "(multlast [6]) -> [6]", "(multlast [6 6 8 7 4]) -> [4 4 4 4 4]", "(multlast [1 4 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [0 7 0]) -> [0 0 0]", "(multlast [8]) -> [8]", "(multlast [2 8 1 4 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [4 5]) -> [5 5]", "(multlast [0]) -> [0]", "(multlast [0 7 6 6]) -> [6 6 6 6]", "(multlast [5 7 2 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [7 6 2 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [3 8 2 9 6]) -> [6 6 6 6 6]", "(multlast [9 1 4 5]) -> [5 5 5 5]", "(multlast [1 6 8 4]) -> [4 4 4 4]", "(multlast [6 0]) -> [0 0]", "(multlast [9 6 1 1]) -> [1 1 1 1]", "(multlast [5]) -> [5]", "(multlast [9 4 6]) -> [6 6 6]", "(multlast [6 7]) -> [7 7]", "(multlast [0 6 1 9]) -> [9 9 9 9]", "(multlast [1 2 6 3]) -> [3 3 3 3]", "(multlast [7 8 9 1]) -> [1 1 1 1]", "(multlast [9 9 5]) -> [5 5 5]", "(multlast [9]) -> [9]", "(multlast [4 9 8]) -> [8 8 8]", "(multlast [5 2 3]) -> [3 3 3]", "(multlast [0 0 1 3]) -> [3 3 3 3]", "(multlast [7]) -> [7]", "(multlast [8 8 5]) -> [5 5 5]", "(multlast [3 6 3]) -> [3 3 3]", "(multlast [9 0]) -> [0 0]", "(multlast []) -> []", "(multlast [3 1 3 9]) -> [9 9 9 9]", "(multlast [1 7 5]) -> [5 5 5]", "(multlast [1 4 8 7]) -> [7 7 7 7]", "(multlast [5]) -> [5]", "(multlast [3 7 2 1 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [5 0 0]) -> [0 0 0]", "(multlast [8]) -> [8]", "(multlast [1 1 0 1]) -> [1 1 1 1]", "(multlast [1 9 6 6]) -> [6 6 6 6]", "(multlast [0 6 8 5]) -> [5 5 5 5]", "(multlast [4 7 3 6 2]) -> [2 2 2 2 2]", "(multlast [8 3 6 7 7]) -> [7 7 7 7 7]", "(multlast [0 5]) -> [5 5]", "(multlast [3 9 5]) -> [5 5 5]", "(multlast [8 6]) -> [6 6]", "(multlast [9 3 3 1 1]) -> [1 1 1 1 1]", "(multlast [7 0 1 3]) -> [3 3 3 3]"], "time": 0.327722, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 3]) -> [3 3]", "(multlast [1 9 7 9 8]) -> [8 8 8 8 8]", "(multlast [5 4 3 7 5]) -> [5 5 5 5 5]", "(multlast [4 7 1 8]) -> [8 8 8 8]", "(multlast [8 3 7 8 2]) -> [2 2 2 2 2]", "(multlast [0 7]) -> [7 7]", "(multlast [2 1]) -> [1 1]", "(multlast [6]) -> [6]", "(multlast [6 4 8 1 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [5 3 0 1 3]) -> [3 3 3 3 3]", "(multlast [8 4]) -> [4 4]", "(multlast []) -> []", "(multlast [1 6 5 1]) -> [1 1 1 1]", "(multlast [4 8 0 4]) -> [4 4 4 4]", "(multlast [1 1 4 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [8 8 7 5]) -> [5 5 5 5]", "(multlast [6 3 8]) -> [8 8 8]", "(multlast [6 6 0]) -> [0 0 0]", "(multlast [6 2]) -> [2 2]", "(multlast [9 3 0 2]) -> [2 2 2 2]", "(multlast [2 7 6 2 2]) -> [2 2 2 2 2]", "(multlast [6 8]) -> [8 8]", "(multlast [2 7]) -> [7 7]", "(multlast [3 6 9 5]) -> [5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [1 0]) -> [0 0]", "(multlast [7 2 3 3 7]) -> [7 7 7 7 7]", "(multlast [9 0]) -> [0 0]", "(multlast [6 6 3 3]) -> [3 3 3 3]", "(multlast [5]) -> [5]", "(multlast [6 0 2]) -> [2 2 2]", "(multlast [6 7]) -> [7 7]", "(multlast [5 3 2 0]) -> [0 0 0 0]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [5 3 4]) -> [4 4 4]", "(multlast [1 2]) -> [2 2]", "(multlast [8 5 6]) -> [6 6 6]", "(multlast [0 9 7 2]) -> [2 2 2 2]", "(multlast [8 8 6 1]) -> [1 1 1 1]", "(multlast [8 7]) -> [7 7]", "(multlast [3 3 1 3 5]) -> [5 5 5 5 5]", "(multlast [4 0 5]) -> [5 5 5]", "(multlast [4 9 9 4 3]) -> [3 3 3 3 3]", "(multlast [6 8 1 3]) -> [3 3 3 3]", "(multlast [8 5 8 3]) -> [3 3 3 3]", "(multlast [3 9 5 6 7]) -> [7 7 7 7 7]", "(multlast [1]) -> [1]", "(multlast [0 8 4 2 4]) -> [4 4 4 4 4]", "(multlast [9 2]) -> [2 2]", "(multlast []) -> []", "(multlast [1 3 2]) -> [2 2 2]", "(multlast [2]) -> [2]", "(multlast [3 0 6 0 8]) -> [8 8 8 8 8]", "(multlast [0 4]) -> [4 4]", "(multlast [9 6 9 7]) -> [7 7 7 7]", "(multlast [5 1 7 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [5 6]) -> [6 6]", "(multlast [5 8 2 1]) -> [1 1 1 1]", "(multlast [1 2]) -> [2 2]", "(multlast []) -> []", "(multlast [1 0 7 1]) -> [1 1 1 1]", "(multlast [8 2 4 0]) -> [0 0 0 0]", "(multlast [1 4 9 5 0]) -> [0 0 0 0 0]", "(multlast [4 1 2]) -> [2 2 2]", "(multlast [6 4 8]) -> [8 8 8]", "(multlast [6 0 5 9]) -> [9 9 9 9]", "(multlast [0]) -> [0]", "(multlast [9 5 4 2 3]) -> [3 3 3 3 3]", "(multlast [3 0 7]) -> [7 7 7]", "(multlast [0]) -> [0]"], "time": 0.302877, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [0 9]) -> [9 9]", "(multlast [4]) -> [4]", "(multlast [3 6 3]) -> [3 3 3]", "(multlast [1 9]) -> [9 9]", "(multlast [7 3 7 8]) -> [8 8 8 8]", "(multlast [0 8 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [8 0 7]) -> [7 7 7]", "(multlast [6 6 4]) -> [4 4 4]", "(multlast [0 1]) -> [1 1]", "(multlast [5 4 1 8 3]) -> [3 3 3 3 3]", "(multlast [8 3 4 2 4]) -> [4 4 4 4 4]", "(multlast [4 4 3 5]) -> [5 5 5 5]", "(multlast [6]) -> [6]", "(multlast [6 5 6 3 0]) -> [0 0 0 0 0]", "(multlast [4 1 5 5]) -> [5 5 5 5]", "(multlast [3 3]) -> [3 3]", "(multlast [1 9]) -> [9 9]", "(multlast [6 1 9 1 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [0 0 1]) -> [1 1 1]", "(multlast [2 5 4]) -> [4 4 4]", "(multlast [9 7 4 8 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [0 0 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [5 8 0]) -> [0 0 0]", "(multlast [9 8 3 1 8]) -> [8 8 8 8 8]", "(multlast [6 9 9 8]) -> [8 8 8 8]", "(multlast [8 9 8 6]) -> [6 6 6 6]", "(multlast [5 6 3 6]) -> [6 6 6 6]", "(multlast [0 8 2 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [4 3 1]) -> [1 1 1]", "(multlast [0 0 7 1]) -> [1 1 1 1]", "(multlast [1 2 4 3 5]) -> [5 5 5 5 5]", "(multlast [9 8 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [1 0 8 9 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [7 0 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [5 2 7 8 4]) -> [4 4 4 4 4]", "(multlast [8 9 5 3 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [4 3]) -> [3 3]", "(multlast [0 3 8]) -> [8 8 8]", "(multlast [7 6 6 0 3]) -> [3 3 3 3 3]", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast [9 3 1 3]) -> [3 3 3 3]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 6]) -> [6 6]", "(multlast [6 3 2 4 8]) -> [8 8 8 8 8]", "(multlast [1 9 1 7 2]) -> [2 2 2 2 2]", "(multlast [7 7 7]) -> [7 7 7]", "(multlast [8 5 9]) -> [9 9 9]", "(multlast [5 8]) -> [8 8]", "(multlast [1 5 4]) -> [4 4 4]", "(multlast [9 3 4]) -> [4 4 4]", "(multlast [8 0 4]) -> [4 4 4]", "(multlast [9 1]) -> [1 1]", "(multlast [4 5 3]) -> [3 3 3]", "(multlast [0 3]) -> [3 3]", "(multlast [0]) -> [0]", "(multlast [3 1 5]) -> [5 5 5]", "(multlast [5 7 6 9 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [0 8 0 4 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [6 8 9 8 8]) -> [8 8 8 8 8]", "(multlast [7 6]) -> [6 6]"], "time": 0.319926, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 9]) -> [9 9]", "(multlast [8 3 1]) -> [1 1 1]", "(multlast [5 9 3 6 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [5 1]) -> [1 1]", "(multlast [1 3 5]) -> [5 5 5]", "(multlast [5 3]) -> [3 3]", "(multlast []) -> []", "(multlast [5 4]) -> [4 4]", "(multlast [3]) -> [3]", "(multlast [7 2 1 7]) -> [7 7 7 7]", "(multlast [9 3 5 1]) -> [1 1 1 1]", "(multlast [2 7 6]) -> [6 6 6]", "(multlast [5 7 4]) -> [4 4 4]", "(multlast [2]) -> [2]", "(multlast [7 7 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [2 9 9 4]) -> [4 4 4 4]", "(multlast [8 4 3 9 9]) -> [9 9 9 9 9]", "(multlast [2 5 2 7 3]) -> [3 3 3 3 3]", "(multlast [6 0 9 4]) -> [4 4 4 4]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast [3 5]) -> [5 5]", "(multlast []) -> []", "(multlast [1 8 8 4 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [2 4 0]) -> [0 0 0]", "(multlast [0 4 3 0 4]) -> [4 4 4 4 4]", "(multlast [1 1 8 8 7]) -> [7 7 7 7 7]", "(multlast [1 6 3 9 7]) -> [7 7 7 7 7]", "(multlast [2 4 2 2]) -> [2 2 2 2]", "(multlast [3]) -> [3]", "(multlast [0 1 5 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [8 5 2 8 5]) -> [5 5 5 5 5]", "(multlast [0 0 1]) -> [1 1 1]", "(multlast [4 5 6]) -> [6 6 6]", "(multlast [3 4 3]) -> [3 3 3]", "(multlast [7 1 0 6]) -> [6 6 6 6]", "(multlast [1]) -> [1]", "(multlast [7 7 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [2 9 2 0 5]) -> [5 5 5 5 5]", "(multlast [2 3]) -> [3 3]", "(multlast [8 8 0]) -> [0 0 0]", "(multlast [4 2 3]) -> [3 3 3]", "(multlast [8 9 5 2]) -> [2 2 2 2]", "(multlast [4 7 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [4 9 2]) -> [2 2 2]", "(multlast [7 1 4 4]) -> [4 4 4 4]", "(multlast [5]) -> [5]", "(multlast [3 6]) -> [6 6]", "(multlast [9 7 6 5 3]) -> [3 3 3 3 3]", "(multlast [7 6 3]) -> [3 3 3]", "(multlast [4 9 1 6]) -> [6 6 6 6]", "(multlast [0 8 4 0 8]) -> [8 8 8 8 8]", "(multlast [5 6]) -> [6 6]", "(multlast [3 8 6]) -> [6 6 6]", "(multlast [8 2]) -> [2 2]", "(multlast [7 4 9 7]) -> [7 7 7 7]", "(multlast [6 0]) -> [0 0]", "(multlast [1 3]) -> [3 3]", "(multlast [3 6]) -> [6 6]", "(multlast [3 7 0]) -> [0 0 0]", "(multlast [5 2 1 9 0]) -> [0 0 0 0 0]", "(multlast [1 1]) -> [1 1]", "(multlast [5 4]) -> [4 4]", "(multlast [9 4 0 1 1]) -> [1 1 1 1 1]", "(multlast [1 9 9 8 1]) -> [1 1 1 1 1]"], "time": 0.329873, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4]) -> [4]", "(multlast [8 0 6]) -> [6 6 6]", "(multlast [9 9 9 9 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [4 0]) -> [0 0]", "(multlast [6 4]) -> [4 4]", "(multlast [9 6 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [5 2 3]) -> [3 3 3]", "(multlast [5 5 4 0 0]) -> [0 0 0 0 0]", "(multlast [7 9 8 6]) -> [6 6 6 6]", "(multlast [1 0]) -> [0 0]", "(multlast []) -> []", "(multlast [1 0 8 0 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [5 3]) -> [3 3]", "(multlast [0 2 8 6]) -> [6 6 6 6]", "(multlast [7 9 6 0 4]) -> [4 4 4 4 4]", "(multlast [0]) -> [0]", "(multlast [5]) -> [5]", "(multlast [3 5 4]) -> [4 4 4]", "(multlast [5 4 1 7 0]) -> [0 0 0 0 0]", "(multlast [9 9 9]) -> [9 9 9]", "(multlast [1 0 9]) -> [9 9 9]", "(multlast [8 6]) -> [6 6]", "(multlast [7 7 6]) -> [6 6 6]", "(multlast [8]) -> [8]", "(multlast [3 7 7 0 0]) -> [0 0 0 0 0]", "(multlast [3 0 6 1]) -> [1 1 1 1]", "(multlast [6 6 7]) -> [7 7 7]", "(multlast [8]) -> [8]", "(multlast [1]) -> [1]", "(multlast [0 6 9 4]) -> [4 4 4 4]", "(multlast [7 8]) -> [8 8]", "(multlast [8 4 9 1 0]) -> [0 0 0 0 0]", "(multlast [6]) -> [6]", "(multlast [1 8 9 6 0]) -> [0 0 0 0 0]", "(multlast [5 6]) -> [6 6]", "(multlast [1 6 3]) -> [3 3 3]", "(multlast [4 5 4 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 4 5]) -> [5 5 5]", "(multlast [1 3 8 2 0]) -> [0 0 0 0 0]", "(multlast [1 4 6 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [3 5 0 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [5 3 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [4 7 5]) -> [5 5 5]", "(multlast [5]) -> [5]", "(multlast [3 5]) -> [5 5]", "(multlast [3 6]) -> [6 6]", "(multlast [8 0 0 9]) -> [9 9 9 9]", "(multlast [9]) -> [9]", "(multlast [2 8]) -> [8 8]", "(multlast [5 5]) -> [5 5]", "(multlast [1 4 2 8]) -> [8 8 8 8]", "(multlast [0 1]) -> [1 1]", "(multlast [8 1 1 6]) -> [6 6 6 6]", "(multlast [2 6 2 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [6 7]) -> [7 7]", "(multlast [1 2]) -> [2 2]", "(multlast [0 8 3 7]) -> [7 7 7 7]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [4 4 7]) -> [7 7 7]", "(multlast [3 2 8]) -> [8 8 8]", "(multlast [6 0 7 1]) -> [1 1 1 1]", "(multlast [4 3]) -> [3 3]", "(multlast [4 3 6 3]) -> [3 3 3 3]"], "time": 0.348437, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2]) -> [2]", "(multlast [9]) -> [9]", "(multlast [5 1 2]) -> [2 2 2]", "(multlast [5 7 2 2]) -> [2 2 2 2]", "(multlast [6 8 1]) -> [1 1 1]", "(multlast [0 3 6]) -> [6 6 6]", "(multlast [1 0 3]) -> [3 3 3]", "(multlast [5 4 6 8]) -> [8 8 8 8]", "(multlast [8 3]) -> [3 3]", "(multlast [7 4 4]) -> [4 4 4]", "(multlast [5 0 1 4 3]) -> [3 3 3 3 3]", "(multlast [4 0 2 9]) -> [9 9 9 9]", "(multlast [3 5]) -> [5 5]", "(multlast [1 0]) -> [0 0]", "(multlast [9 6 3 7]) -> [7 7 7 7]", "(multlast [1]) -> [1]", "(multlast [3 5 3]) -> [3 3 3]", "(multlast [8 0 9 0]) -> [0 0 0 0]", "(multlast [1 9 6 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 1 2]) -> [2 2 2]", "(multlast [2 8 5 0]) -> [0 0 0 0]", "(multlast [2 2 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [3 2 4]) -> [4 4 4]", "(multlast [1 6 8 4]) -> [4 4 4 4]", "(multlast [3 1]) -> [1 1]", "(multlast []) -> []", "(multlast [5 6 9]) -> [9 9 9]", "(multlast [9 9]) -> [9 9]", "(multlast [4 3 2 3]) -> [3 3 3 3]", "(multlast [4 2 6 0]) -> [0 0 0 0]", "(multlast [8 3 8 2]) -> [2 2 2 2]", "(multlast [2]) -> [2]", "(multlast [9 8 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 7 0 2]) -> [2 2 2 2]", "(multlast [6 8 7 9 8]) -> [8 8 8 8 8]", "(multlast [6 5 4 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [0 8]) -> [8 8]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [5 7 9]) -> [9 9 9]", "(multlast [9 5 5 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [5 7 3 9 7]) -> [7 7 7 7 7]", "(multlast [8 6 4 6 6]) -> [6 6 6 6 6]", "(multlast [1]) -> [1]", "(multlast [5 6 5 9 3]) -> [3 3 3 3 3]", "(multlast [6 8 6 9 4]) -> [4 4 4 4 4]", "(multlast [8 1 7 2 9]) -> [9 9 9 9 9]", "(multlast [9]) -> [9]", "(multlast [7 6 5 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [5 3 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [5 2 8 9]) -> [9 9 9 9]", "(multlast [2 1 4 3]) -> [3 3 3 3]", "(multlast [2 6 3]) -> [3 3 3]", "(multlast [3 9]) -> [9 9]", "(multlast [6]) -> [6]", "(multlast [1 1 3 9]) -> [9 9 9 9]", "(multlast [6 5 3 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [5 3 1 2]) -> [2 2 2 2]", "(multlast [9 0 2 7 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []"], "time": 0.320024, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [2 9]) -> [9 9]", "(multlast [2 3 7]) -> [7 7 7]", "(multlast [5 3 5 7]) -> [7 7 7 7]", "(multlast [2 7 8]) -> [8 8 8]", "(multlast [4 9 2]) -> [2 2 2]", "(multlast [7 4 2 2 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [4 2 8 3]) -> [3 3 3 3]", "(multlast [1 5 0 4]) -> [4 4 4 4]", "(multlast [5 8 2 8]) -> [8 8 8 8]", "(multlast [2 8 2 8]) -> [8 8 8 8]", "(multlast [0 2 1 3]) -> [3 3 3 3]", "(multlast [4 9 1]) -> [1 1 1]", "(multlast [8 7 7]) -> [7 7 7]", "(multlast [3 3 2 4]) -> [4 4 4 4]", "(multlast [5 6 1 0]) -> [0 0 0 0]", "(multlast [1 2]) -> [2 2]", "(multlast [0]) -> [0]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [9 5 3]) -> [3 3 3]", "(multlast [8 3]) -> [3 3]", "(multlast [6 2 9 8]) -> [8 8 8 8]", "(multlast [2]) -> [2]", "(multlast [4 4]) -> [4 4]", "(multlast [5 2 0 6 3]) -> [3 3 3 3 3]", "(multlast [7 1 0]) -> [0 0 0]", "(multlast [3 6 3]) -> [3 3 3]", "(multlast [1 5]) -> [5 5]", "(multlast [5 3 7 8 6]) -> [6 6 6 6 6]", "(multlast [1 2]) -> [2 2]", "(multlast [9 1 6 4 2]) -> [2 2 2 2 2]", "(multlast [9 4 9 2]) -> [2 2 2 2]", "(multlast [4 4 5 7 9]) -> [9 9 9 9 9]", "(multlast [2 0]) -> [0 0]", "(multlast [0 3 6 7]) -> [7 7 7 7]", "(multlast [2]) -> [2]", "(multlast [2]) -> [2]", "(multlast [2 7]) -> [7 7]", "(multlast [5 2 7 7]) -> [7 7 7 7]", "(multlast [8 6 4 2]) -> [2 2 2 2]", "(multlast [4 1 9 6]) -> [6 6 6 6]", "(multlast [4]) -> [4]", "(multlast [8]) -> [8]", "(multlast [9]) -> [9]", "(multlast [6]) -> [6]", "(multlast [4 7]) -> [7 7]", "(multlast [5 9 8 0 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 5]) -> [5 5]", "(multlast [8 7 1]) -> [1 1 1]", "(multlast [0 7]) -> [7 7]", "(multlast [6 8 6 7 9]) -> [9 9 9 9 9]", "(multlast [6 1 7]) -> [7 7 7]", "(multlast [7 2 7]) -> [7 7 7]", "(multlast [5 7]) -> [7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4 7 3 4]) -> [4 4 4 4]", "(multlast [3 6 0]) -> [0 0 0]", "(multlast [9 4 3 3]) -> [3 3 3 3]", "(multlast [1 4 5 1 7]) -> [7 7 7 7 7]", "(multlast [6 5 9 3]) -> [3 3 3 3]", "(multlast [6 1 0]) -> [0 0 0]", "(multlast [4]) -> [4]", "(multlast [1]) -> [1]", "(multlast [2 8 5 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [4 3 7]) -> [7 7 7]"], "time": 0.367593, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 0 4 4 0]) -> [0 0 0 0 0]", "(multlast [9]) -> [9]", "(multlast [4]) -> [4]", "(multlast [5]) -> [5]", "(multlast [2 8 5 9]) -> [9 9 9 9]", "(multlast [0 0]) -> [0 0]", "(multlast [1]) -> [1]", "(multlast [2 5]) -> [5 5]", "(multlast [3 8]) -> [8 8]", "(multlast []) -> []", "(multlast [4 9 6]) -> [6 6 6]", "(multlast [0 6 1 9 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [6 9 6 1]) -> [1 1 1 1]", "(multlast [6 1 8 5 6]) -> [6 6 6 6 6]", "(multlast [1 7]) -> [7 7]", "(multlast [7 8 0]) -> [0 0 0]", "(multlast [9 5 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 5 6]) -> [6 6 6]", "(multlast [9 4 4]) -> [4 4 4]", "(multlast [2 1]) -> [1 1]", "(multlast [1 5 8]) -> [8 8 8]", "(multlast [8]) -> [8]", "(multlast [1 6 3 5]) -> [5 5 5 5]", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast [8 8 5 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [4 6 1 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [2 6 2 2 2]) -> [2 2 2 2 2]", "(multlast [4 5 5]) -> [5 5 5]", "(multlast [5 2 1]) -> [1 1 1]", "(multlast [8 6]) -> [6 6]", "(multlast [3 3]) -> [3 3]", "(multlast []) -> []", "(multlast [8 9 7 6 1]) -> [1 1 1 1 1]", "(multlast [6 3 7 0]) -> [0 0 0 0]", "(multlast [3 6 1]) -> [1 1 1]", "(multlast [0 0 0]) -> [0 0 0]", "(multlast [3 1 4 3 4]) -> [4 4 4 4 4]", "(multlast [3 8 3 5 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [2]) -> [2]", "(multlast [4 1 1 9 6]) -> [6 6 6 6 6]", "(multlast [9 3 9]) -> [9 9 9]", "(multlast [8]) -> [8]", "(multlast [0 5]) -> [5 5]", "(multlast [7 8 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [2 3 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [8 2]) -> [2 2]", "(multlast [5 6 4]) -> [4 4 4]", "(multlast [4 3 7]) -> [7 7 7]", "(multlast [1 7 1 2 4]) -> [4 4 4 4 4]", "(multlast [8 2 1 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 7 5]) -> [5 5 5]", "(multlast [8 0 0 9]) -> [9 9 9 9]", "(multlast [1 5 1]) -> [1 1 1]", "(multlast [0 0 8]) -> [8 8 8]", "(multlast [4 2]) -> [2 2]", "(multlast [4 4 0 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [3 2 6 6 2]) -> [2 2 2 2 2]"], "time": 0.345313, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [7 7]) -> [7 7]", "(multlast [0 8 1]) -> [1 1 1]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [7 1]) -> [1 1]", "(multlast [6]) -> [6]", "(multlast [6 5 1 2 3]) -> [3 3 3 3 3]", "(multlast [4 7 3 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [0 1 7]) -> [7 7 7]", "(multlast [7 5]) -> [5 5]", "(multlast [5]) -> [5]", "(multlast [2 2]) -> [2 2]", "(multlast []) -> []", "(multlast [2 5 6 3 0]) -> [0 0 0 0 0]", "(multlast [8 6 6]) -> [6 6 6]", "(multlast [3 2 1 0 0]) -> [0 0 0 0 0]", "(multlast [1 8]) -> [8 8]", "(multlast [6 1 6 3 6]) -> [6 6 6 6 6]", "(multlast [3 9 8]) -> [8 8 8]", "(multlast [1 5 9 4 1]) -> [1 1 1 1 1]", "(multlast [9 6 9]) -> [9 9 9]", "(multlast [7 1]) -> [1 1]", "(multlast []) -> []", "(multlast [6 6 2 7]) -> [7 7 7 7]", "(multlast [3 5 2 2 0]) -> [0 0 0 0 0]", "(multlast [7 4 5 2 7]) -> [7 7 7 7 7]", "(multlast [3 7 9]) -> [9 9 9]", "(multlast [0 6 5 5 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [2 9]) -> [9 9]", "(multlast [3 3 5 1 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [7 1 0 5 3]) -> [3 3 3 3 3]", "(multlast [5 0 1 7]) -> [7 7 7 7]", "(multlast [3 5 1 1 1]) -> [1 1 1 1 1]", "(multlast [5 3 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [1 4]) -> [4 4]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [9 6]) -> [6 6]", "(multlast [8 0]) -> [0 0]", "(multlast [0 0 7 4 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [9 6 8]) -> [8 8 8]", "(multlast [0 6 6 9]) -> [9 9 9 9]", "(multlast [7 7 9]) -> [9 9 9]", "(multlast [6 8 8 5]) -> [5 5 5 5]", "(multlast [1 6 4 7 0]) -> [0 0 0 0 0]", "(multlast [7 7 6 6 8]) -> [8 8 8 8 8]", "(multlast [6 1 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [8 8]) -> [8 8]", "(multlast [8 3 8 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [5 1]) -> [1 1]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [9]) -> [9]", "(multlast [4 0 0]) -> [0 0 0]", "(multlast [0 9]) -> [9 9]", "(multlast [7 6]) -> [6 6]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [4 6 1 0]) -> [0 0 0 0]", "(multlast [7 2 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [2]) -> [2]"], "time": 0.347665, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 0 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [8 5 6 4 4]) -> [4 4 4 4 4]", "(multlast [2 6]) -> [6 6]", "(multlast [9 6 4]) -> [4 4 4]", "(multlast [9 5 8]) -> [8 8 8]", "(multlast [2 7 9 8 0]) -> [0 0 0 0 0]", "(multlast [4 6 3]) -> [3 3 3]", "(multlast [2 4 4]) -> [4 4 4]", "(multlast [8 5 3 1 9]) -> [9 9 9 9 9]", "(multlast [5 7 8]) -> [8 8 8]", "(multlast [2 1 6 6]) -> [6 6 6 6]", "(multlast [4 0 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [2 8]) -> [8 8]", "(multlast [5]) -> [5]", "(multlast [2 0 1 6 4]) -> [4 4 4 4 4]", "(multlast [3 4]) -> [4 4]", "(multlast [3 8 7]) -> [7 7 7]", "(multlast [4]) -> [4]", "(multlast [8 6 0 8 9]) -> [9 9 9 9 9]", "(multlast [9 1 6]) -> [6 6 6]", "(multlast [3 7 8 2 3]) -> [3 3 3 3 3]", "(multlast [5 9 8]) -> [8 8 8]", "(multlast [5 3 3 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [8 1]) -> [1 1]", "(multlast [6]) -> [6]", "(multlast [0 2]) -> [2 2]", "(multlast [7]) -> [7]", "(multlast [7 7 5 9]) -> [9 9 9 9]", "(multlast [1 5 1]) -> [1 1 1]", "(multlast [0 3 3 6]) -> [6 6 6 6]", "(multlast [0 6 8 2 6]) -> [6 6 6 6 6]", "(multlast [8 7]) -> [7 7]", "(multlast [5 5]) -> [5 5]", "(multlast [7]) -> [7]", "(multlast [3 4 8 3]) -> [3 3 3 3]", "(multlast [6 5]) -> [5 5]", "(multlast [0 4 6 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [5 5 1]) -> [1 1 1]", "(multlast [5 2 4 8 7]) -> [7 7 7 7 7]", "(multlast [9 2 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [8 9 2]) -> [2 2 2]", "(multlast [8 6]) -> [6 6]", "(multlast [4 9 2]) -> [2 2 2]", "(multlast [6 8 7 8]) -> [8 8 8 8]", "(multlast [6 0]) -> [0 0]", "(multlast [2]) -> [2]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [5 2]) -> [2 2]", "(multlast [5 7 1 4 4]) -> [4 4 4 4 4]", "(multlast [1 4 9]) -> [9 9 9]", "(multlast [3 7 2 7]) -> [7 7 7 7]", "(multlast [9]) -> [9]", "(multlast [2 9 2 5]) -> [5 5 5 5]", "(multlast [4 3 1 8]) -> [8 8 8 8]", "(multlast [6 6 1]) -> [1 1 1]", "(multlast [6 2]) -> [2 2]", "(multlast [4 3 5 7]) -> [7 7 7 7]", "(multlast [6 2 8]) -> [8 8 8]", "(multlast [2]) -> [2]", "(multlast [2 4 9 6 2]) -> [2 2 2 2 2]", "(multlast [9 3]) -> [3 3]", "(multlast [9]) -> [9]", "(multlast [8 6 6 5 6]) -> [6 6 6 6 6]", "(multlast [3 6 3 1]) -> [1 1 1 1]"], "time": 0.342052, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 9]) -> [9 9]", "(multlast [9]) -> [9]", "(multlast [8 2 0 5 4]) -> [4 4 4 4 4]", "(multlast [9 5]) -> [5 5]", "(multlast [9]) -> [9]", "(multlast [7 9 7 5]) -> [5 5 5 5]", "(multlast [0 1 8 9]) -> [9 9 9 9]", "(multlast [3 4 3]) -> [3 3 3]", "(multlast [4 6 0]) -> [0 0 0]", "(multlast [8]) -> [8]", "(multlast [4 4]) -> [4 4]", "(multlast [7 9]) -> [9 9]", "(multlast [1]) -> [1]", "(multlast [3 6 2 3]) -> [3 3 3 3]", "(multlast [3 7]) -> [7 7]", "(multlast [4 8]) -> [8 8]", "(multlast [8 8 9 9]) -> [9 9 9 9]", "(multlast [4 3 5 9]) -> [9 9 9 9]", "(multlast [7 7 0]) -> [0 0 0]", "(multlast [4 2 6 1]) -> [1 1 1 1]", "(multlast [4 8]) -> [8 8]", "(multlast [0 8]) -> [8 8]", "(multlast [5 4 4 5]) -> [5 5 5 5]", "(multlast [5]) -> [5]", "(multlast [2 1 8 5 3]) -> [3 3 3 3 3]", "(multlast [8 1]) -> [1 1]", "(multlast [2]) -> [2]", "(multlast [7 7 9 0]) -> [0 0 0 0]", "(multlast [2 4 0 5]) -> [5 5 5 5]", "(multlast [6]) -> [6]", "(multlast [2 9]) -> [9 9]", "(multlast [0 4 3 5]) -> [5 5 5 5]", "(multlast [5 5 4 0 0]) -> [0 0 0 0 0]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 9 9]) -> [9 9 9]", "(multlast [4 7 5 6]) -> [6 6 6 6]", "(multlast [7 6 6 4 2]) -> [2 2 2 2 2]", "(multlast [1 4]) -> [4 4]", "(multlast [4 5 8 9]) -> [9 9 9 9]", "(multlast [5 5]) -> [5 5]", "(multlast [3 6 8]) -> [8 8 8]", "(multlast [0 1]) -> [1 1]", "(multlast [8 7 9 4 0]) -> [0 0 0 0 0]", "(multlast [9 0 4 1]) -> [1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [3 2 3]) -> [3 3 3]", "(multlast [4]) -> [4]", "(multlast [2]) -> [2]", "(multlast [9 1]) -> [1 1]", "(multlast [7 1 0]) -> [0 0 0]", "(multlast [4 4 0 6]) -> [6 6 6 6]", "(multlast [1 2 8]) -> [8 8 8]", "(multlast [4 1 8 3 0]) -> [0 0 0 0 0]", "(multlast [9 2 4 6]) -> [6 6 6 6]", "(multlast [2 0]) -> [0 0]", "(multlast [3 4 4]) -> [4 4 4]", "(multlast [0]) -> [0]", "(multlast [3 8 6]) -> [6 6 6]", "(multlast [0 8 4 2]) -> [2 2 2 2]", "(multlast [5 4 1 9 2]) -> [2 2 2 2 2]", "(multlast [6 5 0 3]) -> [3 3 3 3]", "(multlast [4 9 4]) -> [4 4 4]", "(multlast [8 1 3]) -> [3 3 3]", "(multlast [4 8 5 6]) -> [6 6 6 6]", "(multlast [8 6 1]) -> [1 1 1]", "(multlast [3 8 8 5 8]) -> [8 8 8 8 8]", "(multlast [3 1 5 9 9]) -> [9 9 9 9 9]", "(multlast [5]) -> [5]", "(multlast [4]) -> [4]", "(multlast [9 3 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [5 2]) -> [2 2]"], "time": 0.338492, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [9]) -> [9]", "(multlast [8 6 1 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [3 6 2 2 6]) -> [6 6 6 6 6]", "(multlast [3 9 2]) -> [2 2 2]", "(multlast [8 0 9]) -> [9 9 9]", "(multlast [3 6]) -> [6 6]", "(multlast [9 6 3]) -> [3 3 3]", "(multlast [2 1 8 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [7 2]) -> [2 2]", "(multlast [0 2 3]) -> [3 3 3]", "(multlast [9 4]) -> [4 4]", "(multlast []) -> []", "(multlast [9 8 6 9]) -> [9 9 9 9]", "(multlast [4 6]) -> [6 6]", "(multlast [4 9 7 9 0]) -> [0 0 0 0 0]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [6 0 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [2]) -> [2]", "(multlast [6 4]) -> [4 4]", "(multlast [5 8]) -> [8 8]", "(multlast [8 8 0 7 2]) -> [2 2 2 2 2]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [2 4 0 3 1]) -> [1 1 1 1 1]", "(multlast [3]) -> [3]", "(multlast [7]) -> [7]", "(multlast [9 9 7 9 9]) -> [9 9 9 9 9]", "(multlast [4 0 5 5 8]) -> [8 8 8 8 8]", "(multlast [9 9 0 1 9]) -> [9 9 9 9 9]", "(multlast [1 3 7 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [3 2 5 5 9]) -> [9 9 9 9 9]", "(multlast [2 9]) -> [9 9]", "(multlast [6 4 7 6 1]) -> [1 1 1 1 1]", "(multlast [5 5]) -> [5 5]", "(multlast [7 8 5]) -> [5 5 5]", "(multlast [3]) -> [3]", "(multlast [4 9 3 7]) -> [7 7 7 7]", "(multlast [7]) -> [7]", "(multlast [0 4 6 4 9]) -> [9 9 9 9 9]", "(multlast [3 4]) -> [4 4]", "(multlast []) -> []", "(multlast [5 9]) -> [9 9]", "(multlast [3 5]) -> [5 5]", "(multlast [6 3 8]) -> [8 8 8]", "(multlast [2]) -> [2]", "(multlast [6 6 1 9]) -> [9 9 9 9]", "(multlast [0 4 7 9 3]) -> [3 3 3 3 3]", "(multlast [1 8 1 2]) -> [2 2 2 2]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [3 4]) -> [4 4]", "(multlast [8 7 0 4]) -> [4 4 4 4]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [9 8 2 2 6]) -> [6 6 6 6 6]", "(multlast [9 2 6 1 9]) -> [9 9 9 9 9]", "(multlast [3 5 8 5]) -> [5 5 5 5]", "(multlast [9 0 5 4 7]) -> [7 7 7 7 7]", "(multlast [7]) -> [7]", "(multlast [5 7 0 7 8]) -> [8 8 8 8 8]", "(multlast [7 2 6 1 5]) -> [5 5 5 5 5]", "(multlast [7 7 5 2]) -> [2 2 2 2]"], "time": 0.348022, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 0 3 9 8]) -> [8 8 8 8 8]", "(multlast [7 8 0 5 0]) -> [0 0 0 0 0]", "(multlast [5]) -> [5]", "(multlast [3 4]) -> [4 4]", "(multlast [2 1 0]) -> [0 0 0]", "(multlast [0 8 9 8 6]) -> [6 6 6 6 6]", "(multlast [5 7 6 0 7]) -> [7 7 7 7 7]", "(multlast [0 5]) -> [5 5]", "(multlast [2 1 3 2 3]) -> [3 3 3 3 3]", "(multlast [3]) -> [3]", "(multlast [8 0 1]) -> [1 1 1]", "(multlast [7 5 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [6 0 4 1 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [6 7 8]) -> [8 8 8]", "(multlast [4]) -> [4]", "(multlast [0 1]) -> [1 1]", "(multlast []) -> []", "(multlast [0 7]) -> [7 7]", "(multlast [3 5 3 1 7]) -> [7 7 7 7 7]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [6 6 3]) -> [3 3 3]", "(multlast [5 5 2 1]) -> [1 1 1 1]", "(multlast [9 7 8]) -> [8 8 8]", "(multlast [8 7 4 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [9 8 5]) -> [5 5 5]", "(multlast [0 7 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [8 8 2 3 4]) -> [4 4 4 4 4]", "(multlast [9 2 2 3]) -> [3 3 3 3]", "(multlast [6 1 3 1 5]) -> [5 5 5 5 5]", "(multlast [2 6]) -> [6 6]", "(multlast []) -> []", "(multlast [9 1 8]) -> [8 8 8]", "(multlast [3 5 2]) -> [2 2 2]", "(multlast [0 4 6]) -> [6 6 6]", "(multlast [7 6]) -> [6 6]", "(multlast [1 6 3 8]) -> [8 8 8 8]", "(multlast [0 9 9]) -> [9 9 9]", "(multlast [0 2 0]) -> [0 0 0]", "(multlast [5]) -> [5]", "(multlast [2 4 5 3 1]) -> [1 1 1 1 1]", "(multlast [0 8 4]) -> [4 4 4]", "(multlast [7 9 3 5 3]) -> [3 3 3 3 3]", "(multlast [7 9]) -> [9 9]", "(multlast [8 1 9 2 8]) -> [8 8 8 8 8]", "(multlast [5 1 6 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [6 9 5]) -> [5 5 5]", "(multlast [3]) -> [3]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 2 7 1]) -> [1 1 1 1]", "(multlast [6 4 7]) -> [7 7 7]", "(multlast [5 7 7]) -> [7 7 7]", "(multlast [2 2]) -> [2 2]", "(multlast [0 1]) -> [1 1]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [8 8 6 0]) -> [0 0 0 0]", "(multlast [7 4 5 6 5]) -> [5 5 5 5 5]", "(multlast [5 4 8 2 0]) -> [0 0 0 0 0]", "(multlast [2]) -> [2]", "(multlast [4 6 2 8 0]) -> [0 0 0 0 0]", "(multlast [6]) -> [6]", "(multlast [2 6 3 2 3]) -> [3 3 3 3 3]", "(multlast [8 0]) -> [0 0]", "(multlast [8 3 2]) -> [2 2 2]", "(multlast [2 9 1 4 0]) -> [0 0 0 0 0]"], "time": 0.354186, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [1 6 0]) -> [0 0 0]", "(multlast [1 4 4 9 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [6 9 6]) -> [6 6 6]", "(multlast [3 4 8 6 0]) -> [0 0 0 0 0]", "(multlast [3 9 4]) -> [4 4 4]", "(multlast [5 0 3 2 1]) -> [1 1 1 1 1]", "(multlast [7]) -> [7]", "(multlast [9 2 5]) -> [5 5 5]", "(multlast [2 1 6]) -> [6 6 6]", "(multlast [6 8 1]) -> [1 1 1]", "(multlast [0 3 0 4 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [9 5 9]) -> [9 9 9]", "(multlast [7]) -> [7]", "(multlast [1 0]) -> [0 0]", "(multlast []) -> []", "(multlast [9 4]) -> [4 4]", "(multlast [1 5 3 8 8]) -> [8 8 8 8 8]", "(multlast [9 3]) -> [3 3]", "(multlast [9 2]) -> [2 2]", "(multlast [0 2 9]) -> [9 9 9]", "(multlast [7 5 1 0 4]) -> [4 4 4 4 4]", "(multlast [1 5]) -> [5 5]", "(multlast [2 1]) -> [1 1]", "(multlast [3 6]) -> [6 6]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [6 4 7 7 7]) -> [7 7 7 7 7]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [7 6 3]) -> [3 3 3]", "(multlast [2 9 5]) -> [5 5 5]", "(multlast [1 4 0 1 6]) -> [6 6 6 6 6]", "(multlast [1]) -> [1]", "(multlast [2 9 9]) -> [9 9 9]", "(multlast [3 5 4 4 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [0 1 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [8 8]) -> [8 8]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [7 9 2 1 2]) -> [2 2 2 2 2]", "(multlast [6 6 6 1 4]) -> [4 4 4 4 4]", "(multlast [3 3 5]) -> [5 5 5]", "(multlast [6 4 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [1 7]) -> [7 7]", "(multlast [3]) -> [3]", "(multlast [6 3]) -> [3 3]", "(multlast [6]) -> [6]", "(multlast [1 7]) -> [7 7]", "(multlast []) -> []", "(multlast [4 2 3 3]) -> [3 3 3 3]", "(multlast [9 8 0]) -> [0 0 0]", "(multlast [9 4 0 4]) -> [4 4 4 4]", "(multlast [7 4 2 2]) -> [2 2 2 2]", "(multlast [8 5 8]) -> [8 8 8]", "(multlast [0 4 3 6]) -> [6 6 6 6]", "(multlast [0]) -> [0]", "(multlast [1 5 4]) -> [4 4 4]", "(multlast [0 6 8]) -> [8 8 8]", "(multlast [7 6 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [6 4]) -> [4 4]", "(multlast [3 1 8 9]) -> [9 9 9 9]", "(multlast [6 0 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [5 2 8]) -> [8 8 8]", "(multlast [9]) -> [9]"], "time": 0.38343, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 6 8 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [8 5 4 4 0]) -> [0 0 0 0 0]", "(multlast [5 5]) -> [5 5]", "(multlast [0 1]) -> [1 1]", "(multlast [0 1 3 1 7]) -> [7 7 7 7 7]", "(multlast [7 3]) -> [3 3]", "(multlast [0]) -> [0]", "(multlast [8 5]) -> [5 5]", "(multlast [3 6 0]) -> [0 0 0]", "(multlast [2]) -> [2]", "(multlast [2]) -> [2]", "(multlast [6]) -> [6]", "(multlast [1]) -> [1]", "(multlast [9 3]) -> [3 3]", "(multlast [1 0 2 9 2]) -> [2 2 2 2 2]", "(multlast [9 1]) -> [1 1]", "(multlast [4]) -> [4]", "(multlast [6 9]) -> [9 9]", "(multlast [8 4 9]) -> [9 9 9]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [4 5]) -> [5 5]", "(multlast [6]) -> [6]", "(multlast [9 4 2]) -> [2 2 2]", "(multlast [2]) -> [2]", "(multlast [4 9 2 3 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [3 7]) -> [7 7]", "(multlast [3 8]) -> [8 8]", "(multlast [1]) -> [1]", "(multlast [9 6]) -> [6 6]", "(multlast []) -> []", "(multlast [2 2]) -> [2 2]", "(multlast [3 4]) -> [4 4]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [4 4]) -> [4 4]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [9 1]) -> [1 1]", "(multlast [4 5 9 3 8]) -> [8 8 8 8 8]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [9 8 0]) -> [0 0 0]", "(multlast [5 0 1 3 5]) -> [5 5 5 5 5]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [8 3 0]) -> [0 0 0]", "(multlast [8 0 5 2]) -> [2 2 2 2]", "(multlast [3 2 0 6]) -> [6 6 6 6]", "(multlast [5 8 5 3]) -> [3 3 3 3]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [3 5 5 4 0]) -> [0 0 0 0 0]", "(multlast [5]) -> [5]", "(multlast [4 7 0 8 2]) -> [2 2 2 2 2]", "(multlast [5 2]) -> [2 2]", "(multlast [6 1 9 5]) -> [5 5 5 5]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [8 7]) -> [7 7]", "(multlast [5 2 1 3]) -> [3 3 3 3]", "(multlast [6]) -> [6]", "(multlast [7 0]) -> [0 0]", "(multlast [7 5 5 2 4]) -> [4 4 4 4 4]", "(multlast [3 5 1 7 8]) -> [8 8 8 8 8]", "(multlast [6]) -> [6]", "(multlast [8 4 5 7 7]) -> [7 7 7 7 7]", "(multlast [0 9 3 5 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [2 2]) -> [2 2]", "(multlast [4 7 4]) -> [4 4 4]"], "time": 0.315284, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 6 8]) -> [8 8 8]", "(multlast [6 6 7 5]) -> [5 5 5 5]", "(multlast [3 1 9 8]) -> [8 8 8 8]", "(multlast [8]) -> [8]", "(multlast [5 9 1 2]) -> [2 2 2 2]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [1 6 0 0 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [3 4 6]) -> [6 6 6]", "(multlast [9 9 3]) -> [3 3 3]", "(multlast [5 3 1 6]) -> [6 6 6 6]", "(multlast [2 4 0]) -> [0 0 0]", "(multlast [0 8 3 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [1 5]) -> [5 5]", "(multlast [0 5 1 5]) -> [5 5 5 5]", "(multlast [4 7 8 7]) -> [7 7 7 7]", "(multlast [4]) -> [4]", "(multlast [4 0]) -> [0 0]", "(multlast [4 8 0 9 8]) -> [8 8 8 8 8]", "(multlast [8]) -> [8]", "(multlast [1 2 9 9]) -> [9 9 9 9]", "(multlast [5 1 3 2 4]) -> [4 4 4 4 4]", "(multlast [8]) -> [8]", "(multlast [8 7]) -> [7 7]", "(multlast [2 6 3 4]) -> [4 4 4 4]", "(multlast [3 9 9]) -> [9 9 9]", "(multlast [3 8]) -> [8 8]", "(multlast []) -> []", "(multlast [2 9]) -> [9 9]", "(multlast [3]) -> [3]", "(multlast [1 0 3 6 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [9 2 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 3 9 7 5]) -> [5 5 5 5 5]", "(multlast [8 0 3 3 9]) -> [9 9 9 9 9]", "(multlast [6 6]) -> [6 6]", "(multlast [0 6]) -> [6 6]", "(multlast [7 2]) -> [2 2]", "(multlast [1 3]) -> [3 3]", "(multlast [5 7]) -> [7 7]", "(multlast [4 7 6 4]) -> [4 4 4 4]", "(multlast [5]) -> [5]", "(multlast [6 7]) -> [7 7]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 4 6 4]) -> [4 4 4 4]", "(multlast [8 9]) -> [9 9]", "(multlast [9 7 2 1]) -> [1 1 1 1]", "(multlast [9 0 6 9 4]) -> [4 4 4 4 4]", "(multlast [4]) -> [4]", "(multlast [3 1]) -> [1 1]", "(multlast []) -> []", "(multlast [7 4 7]) -> [7 7 7]", "(multlast [1 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 2 2]) -> [2 2 2]", "(multlast [1 8 5 9]) -> [9 9 9 9]", "(multlast [7 4]) -> [4 4]", "(multlast [2]) -> [2]", "(multlast [5 7 3 1]) -> [1 1 1 1]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [5 2]) -> [2 2]", "(multlast [1 3 2 7 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [1 1 9]) -> [9 9 9]", "(multlast [0 5]) -> [5 5]", "(multlast [1 2 2 1]) -> [1 1 1 1]"], "time": 0.296435, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 2 6]) -> [6 6 6]", "(multlast [6]) -> [6]", "(multlast [3]) -> [3]", "(multlast [1]) -> [1]", "(multlast [3 4]) -> [4 4]", "(multlast [1 0 0 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [3 7 4 0 7]) -> [7 7 7 7 7]", "(multlast [1]) -> [1]", "(multlast [9]) -> [9]", "(multlast [9]) -> [9]", "(multlast [1 1 9]) -> [9 9 9]", "(multlast [1 8]) -> [8 8]", "(multlast [2 8 8 1]) -> [1 1 1 1]", "(multlast [6 7 3]) -> [3 3 3]", "(multlast [9 2 1]) -> [1 1 1]", "(multlast [5 7]) -> [7 7]", "(multlast [6 4 7]) -> [7 7 7]", "(multlast [7 5]) -> [5 5]", "(multlast [4 6 2]) -> [2 2 2]", "(multlast [3 0]) -> [0 0]", "(multlast [1 3 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [7 7 3]) -> [3 3 3]", "(multlast [1 4 7 7]) -> [7 7 7 7]", "(multlast [1]) -> [1]", "(multlast [4 2]) -> [2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 7 7 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [1 7 1 8]) -> [8 8 8 8]", "(multlast [4]) -> [4]", "(multlast [3 5 3]) -> [3 3 3]", "(multlast [6 2]) -> [2 2]", "(multlast [3 9 6 8 4]) -> [4 4 4 4 4]", "(multlast [8]) -> [8]", "(multlast [6 9 6 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [3 3]) -> [3 3]", "(multlast [5]) -> [5]", "(multlast [9]) -> [9]", "(multlast [1 9]) -> [9 9]", "(multlast []) -> []", "(multlast [3 1]) -> [1 1]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [4 3 9]) -> [9 9 9]", "(multlast [9]) -> [9]", "(multlast [7 7 4]) -> [4 4 4]", "(multlast [1 4 9 5 1]) -> [1 1 1 1 1]", "(multlast [6 5]) -> [5 5]", "(multlast [7 0 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [9 8 2 3 3]) -> [3 3 3 3 3]", "(multlast [8 1]) -> [1 1]", "(multlast [7 6 4 1]) -> [1 1 1 1]", "(multlast [9]) -> [9]", "(multlast [4 5 0 9]) -> [9 9 9 9]", "(multlast [5 8]) -> [8 8]", "(multlast []) -> []", "(multlast [8 7 6]) -> [6 6 6]", "(multlast [4 7]) -> [7 7]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [6 0 3 4]) -> [4 4 4 4]", "(multlast [9 5]) -> [5 5]", "(multlast [7]) -> [7]", "(multlast [0 3 8]) -> [8 8 8]", "(multlast [7]) -> [7]", "(multlast [9 1 5]) -> [5 5 5]", "(multlast [4 5 8 0]) -> [0 0 0 0]"], "time": 0.31603, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 5 4 3 7]) -> [7 7 7 7 7]", "(multlast [9 6 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [4 4 8 9 5]) -> [5 5 5 5 5]", "(multlast [3 9 0 9]) -> [9 9 9 9]", "(multlast [9]) -> [9]", "(multlast [1 0 2 5 2]) -> [2 2 2 2 2]", "(multlast [8 1 1 8 0]) -> [0 0 0 0 0]", "(multlast [6 8 8 4 9]) -> [9 9 9 9 9]", "(multlast [9 3]) -> [3 3]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [3 6 5]) -> [5 5 5]", "(multlast [8 7 9]) -> [9 9 9]", "(multlast [4]) -> [4]", "(multlast [1]) -> [1]", "(multlast [5 6]) -> [6 6]", "(multlast [5 6]) -> [6 6]", "(multlast [1 6 9]) -> [9 9 9]", "(multlast [4 6 1 5]) -> [5 5 5 5]", "(multlast [1]) -> [1]", "(multlast [6 1 9 4 8]) -> [8 8 8 8 8]", "(multlast [0 9 6]) -> [6 6 6]", "(multlast [0 7]) -> [7 7]", "(multlast [3]) -> [3]", "(multlast [5 8 9 3]) -> [3 3 3 3]", "(multlast [6]) -> [6]", "(multlast [4 0]) -> [0 0]", "(multlast [8]) -> [8]", "(multlast [8 9 4 5]) -> [5 5 5 5]", "(multlast [2 1]) -> [1 1]", "(multlast [6 3]) -> [3 3]", "(multlast [6 9 7 0]) -> [0 0 0 0]", "(multlast [3 8 7 8 2]) -> [2 2 2 2 2]", "(multlast [8 9 0 1]) -> [1 1 1 1]", "(multlast [0 3 9]) -> [9 9 9]", "(multlast [7 3]) -> [3 3]", "(multlast [3]) -> [3]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 8 3]) -> [3 3 3]", "(multlast [2]) -> [2]", "(multlast [2 2 3 3 9]) -> [9 9 9 9 9]", "(multlast [2 5 6 7]) -> [7 7 7 7]", "(multlast [7 1 7 0 9]) -> [9 9 9 9 9]", "(multlast [7 5 5]) -> [5 5 5]", "(multlast [7 7 2]) -> [2 2 2]", "(multlast [7]) -> [7]", "(multlast [2 6]) -> [6 6]", "(multlast [3]) -> [3]", "(multlast [3 5 8 3 1]) -> [1 1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [3 6]) -> [6 6]", "(multlast []) -> []", "(multlast [1 8]) -> [8 8]", "(multlast [7]) -> [7]", "(multlast [9 8 2 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [0 3 0]) -> [0 0 0]", "(multlast [7 7 6]) -> [6 6 6]", "(multlast [4 3 9 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [4 4 0]) -> [0 0 0]", "(multlast [0 2 1 9]) -> [9 9 9 9]", "(multlast [5 0 3]) -> [3 3 3]", "(multlast [1]) -> [1]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [5 8 4]) -> [4 4 4]", "(multlast [3 4 7]) -> [7 7 7]", "(multlast [9]) -> [9]", "(multlast [4 3 3]) -> [3 3 3]"], "time": 0.329923, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [9 3 0 1]) -> [1 1 1 1]", "(multlast [4 4 4 9]) -> [9 9 9 9]", "(multlast [8 3 7 4 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [3 1 5]) -> [5 5 5]", "(multlast [4]) -> [4]", "(multlast [8 0 8 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [4 6 5 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 5 6 1 6]) -> [6 6 6 6 6]", "(multlast [2 8 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [4 9 8]) -> [8 8 8]", "(multlast [4 0]) -> [0 0]", "(multlast [9 4 2 1]) -> [1 1 1 1]", "(multlast [2 6 0 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 5 0 3 2]) -> [2 2 2 2 2]", "(multlast [5 6 2 7 1]) -> [1 1 1 1 1]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [7]) -> [7]", "(multlast [3 7 8]) -> [8 8 8]", "(multlast [2 5]) -> [5 5]", "(multlast []) -> []", "(multlast [8 0 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [4 5 3 6 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [9 2 8]) -> [8 8 8]", "(multlast [0 4 5 5 5]) -> [5 5 5 5 5]", "(multlast [8 2]) -> [2 2]", "(multlast [3]) -> [3]", "(multlast [6 6 4 7 6]) -> [6 6 6 6 6]", "(multlast [7 4 7 6 1]) -> [1 1 1 1 1]", "(multlast [9 2 0 5]) -> [5 5 5 5]", "(multlast [0 9 3]) -> [3 3 3]", "(multlast [5 8 4 7 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [4 3 8 3 2]) -> [2 2 2 2 2]", "(multlast [2 0 5]) -> [5 5 5]", "(multlast [6 3 4]) -> [4 4 4]", "(multlast [6 2]) -> [2 2]", "(multlast [4 6 7 4 3]) -> [3 3 3 3 3]", "(multlast [2 6]) -> [6 6]", "(multlast [6 1 2]) -> [2 2 2]", "(multlast [4 9 9 1]) -> [1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [9 6 4]) -> [4 4 4]", "(multlast [8 6 6 8]) -> [8 8 8 8]", "(multlast [1]) -> [1]", "(multlast [2 2]) -> [2 2]", "(multlast [1 9 6 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [4 6 7]) -> [7 7 7]", "(multlast [5 1 6]) -> [6 6 6]", "(multlast [8 4 7 0 0]) -> [0 0 0 0 0]", "(multlast [5 2 7 8]) -> [8 8 8 8]", "(multlast [1 8]) -> [8 8]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [5 1]) -> [1 1]", "(multlast []) -> []", "(multlast [9 6 9 2 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [4 7 9 2 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [5 5 1 2]) -> [2 2 2 2]", "(multlast [3 6 0 9]) -> [9 9 9 9]", "(multlast []) -> []"], "time": 0.322133, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2 1 1 6]) -> [6 6 6 6]", "(multlast [0 2]) -> [2 2]", "(multlast [6 8]) -> [8 8]", "(multlast [2 3 5 8]) -> [8 8 8 8]", "(multlast [7 2 8 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [9 3 1 4 7]) -> [7 7 7 7 7]", "(multlast [9 6 1 5]) -> [5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [7 7 2]) -> [2 2 2]", "(multlast [4 7 1 3]) -> [3 3 3 3]", "(multlast [2 9 4]) -> [4 4 4]", "(multlast [2 5 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [4 1 3 3]) -> [3 3 3 3]", "(multlast [5 9 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [0 9]) -> [9 9]", "(multlast [4 1 8 9]) -> [9 9 9 9]", "(multlast [8 9]) -> [9 9]", "(multlast [7 0 8]) -> [8 8 8]", "(multlast [7 8 6 3 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [1 9 2]) -> [2 2 2]", "(multlast [8]) -> [8]", "(multlast [4 5 8 9]) -> [9 9 9 9]", "(multlast [6 5 2 6 8]) -> [8 8 8 8 8]", "(multlast [4 8 7]) -> [7 7 7]", "(multlast [4 7 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [4 3 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [6 5 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [1 1 3 8]) -> [8 8 8 8]", "(multlast [9 7 1 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [8 6 4 8]) -> [8 8 8 8]", "(multlast [6 6 4 3]) -> [3 3 3 3]", "(multlast [4 7]) -> [7 7]", "(multlast [9 8 6 2 2]) -> [2 2 2 2 2]", "(multlast [3]) -> [3]", "(multlast [6 7]) -> [7 7]", "(multlast [9 6 2 7]) -> [7 7 7 7]", "(multlast [6 5 1 6]) -> [6 6 6 6]", "(multlast [1 1 3]) -> [3 3 3]", "(multlast [8]) -> [8]", "(multlast [4]) -> [4]", "(multlast [3 8]) -> [8 8]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [8 6 3]) -> [3 3 3]", "(multlast [2]) -> [2]", "(multlast [8 4 3 2 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [0 5 8 7 1]) -> [1 1 1 1 1]", "(multlast [6]) -> [6]", "(multlast [2 5 2]) -> [2 2 2]", "(multlast [7 1 4 5]) -> [5 5 5 5]", "(multlast [0]) -> [0]", "(multlast [8]) -> [8]", "(multlast [7 2]) -> [2 2]", "(multlast [1 4]) -> [4 4]", "(multlast [3 4]) -> [4 4]", "(multlast [4 7 2]) -> [2 2 2]", "(multlast [0 0 2]) -> [2 2 2]", "(multlast [2 1 6 4]) -> [4 4 4 4]", "(multlast [0 1 3 6 3]) -> [3 3 3 3 3]", "(multlast [8 0 2]) -> [2 2 2]"], "time": 0.350243, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [1 8 9 8 2]) -> [2 2 2 2 2]", "(multlast [6 1 2 8]) -> [8 8 8 8]", "(multlast [3]) -> [3]", "(multlast [2 4 1 2 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [1 5 2]) -> [2 2 2]", "(multlast [1 1]) -> [1 1]", "(multlast [9]) -> [9]", "(multlast [8 0 3]) -> [3 3 3]", "(multlast [0 1 6 5]) -> [5 5 5 5]", "(multlast [0 1 3 5]) -> [5 5 5 5]", "(multlast [3 3 8 1 6]) -> [6 6 6 6 6]", "(multlast [6]) -> [6]", "(multlast [1]) -> [1]", "(multlast [7 6]) -> [6 6]", "(multlast [3 1 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [7 4 4 5 1]) -> [1 1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [0 3 9]) -> [9 9 9]", "(multlast [2]) -> [2]", "(multlast [7]) -> [7]", "(multlast [2]) -> [2]", "(multlast [2 8 6]) -> [6 6 6]", "(multlast [9 9 3 7 7]) -> [7 7 7 7 7]", "(multlast [3 1 9 6]) -> [6 6 6 6]", "(multlast [7 6 5 9]) -> [9 9 9 9]", "(multlast [8 0 5 7 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [2 8 2 9 6]) -> [6 6 6 6 6]", "(multlast [5 9 7 5]) -> [5 5 5 5]", "(multlast [8 2]) -> [2 2]", "(multlast [2 8]) -> [8 8]", "(multlast [2 6 7 1]) -> [1 1 1 1]", "(multlast [4 7 8 7 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 1 8]) -> [8 8 8]", "(multlast [0 8 6 6]) -> [6 6 6 6]", "(multlast [7 0]) -> [0 0]", "(multlast [7]) -> [7]", "(multlast [0 4 3 8 4]) -> [4 4 4 4 4]", "(multlast [0 4 3 2 1]) -> [1 1 1 1 1]", "(multlast [3 5 1]) -> [1 1 1]", "(multlast [5 8 7]) -> [7 7 7]", "(multlast [9]) -> [9]", "(multlast [3]) -> [3]", "(multlast [2]) -> [2]", "(multlast [5 0 5 8 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [1 8 7]) -> [7 7 7]", "(multlast [5 2 6 3]) -> [3 3 3 3]", "(multlast [2 5 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [7 9]) -> [9 9]", "(multlast [8 8]) -> [8 8]", "(multlast [3 4 6 0]) -> [0 0 0 0]", "(multlast [9 7 7 3]) -> [3 3 3 3]", "(multlast [8]) -> [8]", "(multlast [7 7 3]) -> [3 3 3]", "(multlast [9 3 9 8]) -> [8 8 8 8]", "(multlast [7 2 8 3]) -> [3 3 3 3]", "(multlast [7 1 2 1 4]) -> [4 4 4 4 4]", "(multlast [6 2 5 4 6]) -> [6 6 6 6 6]", "(multlast [1 8 0 1 6]) -> [6 6 6 6 6]", "(multlast [6 3 1 3 0]) -> [0 0 0 0 0]", "(multlast [1]) -> [1]", "(multlast [4 7]) -> [7 7]", "(multlast [7 6 2]) -> [2 2 2]", "(multlast [6 0 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [6 8 6 7 3]) -> [3 3 3 3 3]"], "time": 0.385781, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 4]) -> [4 4]", "(multlast [8 7 1 3]) -> [3 3 3 3]", "(multlast [5 4 4]) -> [4 4 4]", "(multlast [2 0 2 7]) -> [7 7 7 7]", "(multlast [3 6 5 1]) -> [1 1 1 1]", "(multlast [2 9]) -> [9 9]", "(multlast [0]) -> [0]", "(multlast [4]) -> [4]", "(multlast [7 0]) -> [0 0]", "(multlast [3 4 9]) -> [9 9 9]", "(multlast [4 2 5]) -> [5 5 5]", "(multlast [9 6 7]) -> [7 7 7]", "(multlast [8 8 5]) -> [5 5 5]", "(multlast [0 9 4 8 9]) -> [9 9 9 9 9]", "(multlast [4 1 9]) -> [9 9 9]", "(multlast [9 7]) -> [7 7]", "(multlast [5 0]) -> [0 0]", "(multlast [5 3]) -> [3 3]", "(multlast [5 0 5 8 6]) -> [6 6 6 6 6]", "(multlast [7]) -> [7]", "(multlast [0 3 5 7]) -> [7 7 7 7]", "(multlast [7 3 0 0]) -> [0 0 0 0]", "(multlast [8 4]) -> [4 4]", "(multlast [9 3 7]) -> [7 7 7]", "(multlast [7 2 1 9 2]) -> [2 2 2 2 2]", "(multlast [6 3 3 7]) -> [7 7 7 7]", "(multlast [3 4 6]) -> [6 6 6]", "(multlast [5 0]) -> [0 0]", "(multlast [4 2 2 8 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [2 9 4 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [6 1 3 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 6 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 9 6 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [9 6]) -> [6 6]", "(multlast [9 5 7]) -> [7 7 7]", "(multlast [8 6]) -> [6 6]", "(multlast [1]) -> [1]", "(multlast [7 5 6 9]) -> [9 9 9 9]", "(multlast [5 0 7 5 0]) -> [0 0 0 0 0]", "(multlast [1 9 8]) -> [8 8 8]", "(multlast [2 2 6 9 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [0 3 5 5 3]) -> [3 3 3 3 3]", "(multlast [4 3 9 1]) -> [1 1 1 1]", "(multlast [4 0 7 4 5]) -> [5 5 5 5 5]", "(multlast [2 4 9]) -> [9 9 9]", "(multlast [7 9]) -> [9 9]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [3 1]) -> [1 1]", "(multlast [9 1 9 1 2]) -> [2 2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [9 0 7 7 7]) -> [7 7 7 7 7]", "(multlast [1 0 2 2]) -> [2 2 2 2]", "(multlast [3 6 3 8 3]) -> [3 3 3 3 3]", "(multlast [4 8]) -> [8 8]", "(multlast []) -> []", "(multlast [6 8 1 3 9]) -> [9 9 9 9 9]", "(multlast [1 9]) -> [9 9]", "(multlast [4 6 1]) -> [1 1 1]", "(multlast [4 4 6]) -> [6 6 6]", "(multlast [1 8 8]) -> [8 8 8]", "(multlast [8 4 4 3 6]) -> [6 6 6 6 6]", "(multlast [9 9]) -> [9 9]", "(multlast [4 6 6]) -> [6 6 6]", "(multlast [5]) -> [5]"], "time": 0.362743, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 3 0]) -> [0 0 0]", "(multlast [9]) -> [9]", "(multlast [0]) -> [0]", "(multlast [1 8 8 8]) -> [8 8 8 8]", "(multlast [3 0 6 1]) -> [1 1 1 1]", "(multlast [8 2 7 1]) -> [1 1 1 1]", "(multlast [8 8 9 6 2]) -> [2 2 2 2 2]", "(multlast [6 9 0]) -> [0 0 0]", "(multlast [4]) -> [4]", "(multlast [3 5]) -> [5 5]", "(multlast [6 8 9 2]) -> [2 2 2 2]", "(multlast [2 7 1 7]) -> [7 7 7 7]", "(multlast [0 3 2 3]) -> [3 3 3 3]", "(multlast [2]) -> [2]", "(multlast [9 2 2 1]) -> [1 1 1 1]", "(multlast [3 3 6 3 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [0 5 8]) -> [8 8 8]", "(multlast [6 0 9 7 6]) -> [6 6 6 6 6]", "(multlast [6 3 6]) -> [6 6 6]", "(multlast [3 5]) -> [5 5]", "(multlast [0 2 4 3 0]) -> [0 0 0 0 0]", "(multlast [4 3 1]) -> [1 1 1]", "(multlast [4]) -> [4]", "(multlast [0 8 4 0]) -> [0 0 0 0]", "(multlast [2 6 3 8 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [8 8 4]) -> [4 4 4]", "(multlast [9 5 6 8 5]) -> [5 5 5 5 5]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [8 7 7]) -> [7 7 7]", "(multlast [4 6 8]) -> [8 8 8]", "(multlast [1]) -> [1]", "(multlast [2 0]) -> [0 0]", "(multlast [5]) -> [5]", "(multlast [8 8]) -> [8 8]", "(multlast [3 6]) -> [6 6]", "(multlast []) -> []", "(multlast [6 6 0]) -> [0 0 0]", "(multlast [3]) -> [3]", "(multlast [5]) -> [5]", "(multlast [0 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [7]) -> [7]", "(multlast [5 8 9 3 8]) -> [8 8 8 8 8]", "(multlast [5 5 0 2 5]) -> [5 5 5 5 5]", "(multlast [5 1 4 4]) -> [4 4 4 4]", "(multlast [0 0]) -> [0 0]", "(multlast []) -> []", "(multlast [0 1 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [9 7]) -> [7 7]", "(multlast [1 1]) -> [1 1]", "(multlast [5 1]) -> [1 1]", "(multlast [8]) -> [8]", "(multlast [4 5 8 1]) -> [1 1 1 1]", "(multlast [8 8 5 1]) -> [1 1 1 1]", "(multlast [0]) -> [0]", "(multlast [4 2 5]) -> [5 5 5]", "(multlast [2 9 6]) -> [6 6 6]", "(multlast [1 1 5 3 1]) -> [1 1 1 1 1]", "(multlast [5]) -> [5]", "(multlast [0 0 8 4 4]) -> [4 4 4 4 4]", "(multlast [4 1]) -> [1 1]", "(multlast [5 6 2]) -> [2 2 2]", "(multlast [6 3]) -> [3 3]", "(multlast [6]) -> [6]", "(multlast [3]) -> [3]"], "time": 0.386493, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 7]) -> [7 7]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [8 5 2 3 2]) -> [2 2 2 2 2]", "(multlast [2 8]) -> [8 8]", "(multlast []) -> []", "(multlast [5 7 1 9 2]) -> [2 2 2 2 2]", "(multlast [3 9]) -> [9 9]", "(multlast []) -> []", "(multlast [7 5 3]) -> [3 3 3]", "(multlast [8 5 6]) -> [6 6 6]", "(multlast [8 5 0 4 3]) -> [3 3 3 3 3]", "(multlast [9]) -> [9]", "(multlast [1 8 6 6]) -> [6 6 6 6]", "(multlast [2 9 3 0 8]) -> [8 8 8 8 8]", "(multlast [8 7]) -> [7 7]", "(multlast []) -> []", "(multlast [8 9]) -> [9 9]", "(multlast [8 7 6 0 0]) -> [0 0 0 0 0]", "(multlast [3 0]) -> [0 0]", "(multlast [8 6]) -> [6 6]", "(multlast [7 0 4 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [1 0 9 0 0]) -> [0 0 0 0 0]", "(multlast [6 4 4 9]) -> [9 9 9 9]", "(multlast [3 3 0]) -> [0 0 0]", "(multlast [9 6 2 8]) -> [8 8 8 8]", "(multlast [8]) -> [8]", "(multlast [4 6 4 2 1]) -> [1 1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [0 6]) -> [6 6]", "(multlast []) -> []", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [7 8]) -> [8 8]", "(multlast [0 3 0 8 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [8 0 5 7]) -> [7 7 7 7]", "(multlast [0 3 0]) -> [0 0 0]", "(multlast [5 1 5 7 3]) -> [3 3 3 3 3]", "(multlast [2 3]) -> [3 3]", "(multlast [5]) -> [5]", "(multlast [2 1 9 4]) -> [4 4 4 4]", "(multlast [5 6 6 6]) -> [6 6 6 6]", "(multlast [7 9 3 2]) -> [2 2 2 2]", "(multlast [3 4 4]) -> [4 4 4]", "(multlast [8 7]) -> [7 7]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [9 0 7]) -> [7 7 7]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [5 9]) -> [9 9]", "(multlast [8 7 4 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 5 2]) -> [2 2 2]", "(multlast [7]) -> [7]", "(multlast [1 1 9 6]) -> [6 6 6 6]", "(multlast [8 2 5]) -> [5 5 5]", "(multlast [1]) -> [1]", "(multlast [4 5 5 8]) -> [8 8 8 8]", "(multlast [9 5 2 6 4]) -> [4 4 4 4 4]", "(multlast [6]) -> [6]", "(multlast [4]) -> [4]", "(multlast [2 8 4]) -> [4 4 4]", "(multlast [8]) -> [8]", "(multlast [2]) -> [2]", "(multlast [6]) -> [6]", "(multlast [0 7 0 9]) -> [9 9 9 9]", "(multlast [3]) -> [3]", "(multlast [3 5]) -> [5 5]", "(multlast [8 3]) -> [3 3]", "(multlast [0 3]) -> [3 3]"], "time": 0.342836, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [0 8 9 4]) -> [4 4 4 4]", "(multlast [7 5 3 2]) -> [2 2 2 2]", "(multlast [3 3]) -> [3 3]", "(multlast []) -> []", "(multlast [0 5 2]) -> [2 2 2]", "(multlast [8 1 9 7 2]) -> [2 2 2 2 2]", "(multlast [8]) -> [8]", "(multlast [3 4 7 8 0]) -> [0 0 0 0 0]", "(multlast [1 0 8 5]) -> [5 5 5 5]", "(multlast [3 8 9]) -> [9 9 9]", "(multlast [7 6 2 3]) -> [3 3 3 3]", "(multlast [1 1]) -> [1 1]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [8 5 9 1]) -> [1 1 1 1]", "(multlast [3 5 5 3]) -> [3 3 3 3]", "(multlast [0 2]) -> [2 2]", "(multlast [2 4 9 9 5]) -> [5 5 5 5 5]", "(multlast [8 8]) -> [8 8]", "(multlast [3 8 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [1 3 6 6]) -> [6 6 6 6]", "(multlast [1]) -> [1]", "(multlast [8 5]) -> [5 5]", "(multlast [0 9 0]) -> [0 0 0]", "(multlast [8 4 5 4 4]) -> [4 4 4 4 4]", "(multlast [0 1 4]) -> [4 4 4]", "(multlast [3]) -> [3]", "(multlast [7 6 8 7 9]) -> [9 9 9 9 9]", "(multlast [6 7]) -> [7 7]", "(multlast [3 3]) -> [3 3]", "(multlast [5 7]) -> [7 7]", "(multlast [8]) -> [8]", "(multlast [9]) -> [9]", "(multlast [8 3]) -> [3 3]", "(multlast [4 3 2]) -> [2 2 2]", "(multlast [6 7 7]) -> [7 7 7]", "(multlast [6 5 8 7]) -> [7 7 7 7]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [4 6 5 5]) -> [5 5 5 5]", "(multlast [3 2 3 9 8]) -> [8 8 8 8 8]", "(multlast [8 7 1 6 2]) -> [2 2 2 2 2]", "(multlast [6 2]) -> [2 2]", "(multlast [2 5 9 5]) -> [5 5 5 5]", "(multlast [4 9]) -> [9 9]", "(multlast [6 7 5 0]) -> [0 0 0 0]", "(multlast [3 0 0 4 9]) -> [9 9 9 9 9]", "(multlast [0 2 7 9 4]) -> [4 4 4 4 4]", "(multlast [0]) -> [0]", "(multlast [8]) -> [8]", "(multlast [4 3 5]) -> [5 5 5]", "(multlast [2 1 5 1]) -> [1 1 1 1]", "(multlast [8 1 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [3 7 0]) -> [0 0 0]", "(multlast [4 6 7]) -> [7 7 7]", "(multlast [3 0 7 0 2]) -> [2 2 2 2 2]", "(multlast [5 4 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [3 0 8 5 8]) -> [8 8 8 8 8]", "(multlast [6 6]) -> [6 6]", "(multlast [9 1 3]) -> [3 3 3]", "(multlast [0]) -> [0]", "(multlast [5 0 0]) -> [0 0 0]", "(multlast [6 4 0 8]) -> [8 8 8 8]", "(multlast [2 6 2]) -> [2 2 2]", "(multlast [2]) -> [2]", "(multlast [4 4]) -> [4 4]", "(multlast [0 7]) -> [7 7]", "(multlast [3]) -> [3]", "(multlast [6 5]) -> [5 5]", "(multlast [6 5 2]) -> [2 2 2]", "(multlast [2 6 4 1]) -> [1 1 1 1]"], "time": 0.398714, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast []) -> []", "(multlast [0 7 0 6 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [6 5 7 5 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [5 0]) -> [0 0]", "(multlast [9 4 9 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [4 2]) -> [2 2]", "(multlast [8 1]) -> [1 1]", "(multlast [6 8]) -> [8 8]", "(multlast [7 8]) -> [8 8]", "(multlast [2 1 7 0 3]) -> [3 3 3 3 3]", "(multlast [1 6]) -> [6 6]", "(multlast [1 9 7 5 6]) -> [6 6 6 6 6]", "(multlast [1 1 4 4 2]) -> [2 2 2 2 2]", "(multlast [7 9 5 2]) -> [2 2 2 2]", "(multlast [1 8]) -> [8 8]", "(multlast [3 8 5 2]) -> [2 2 2 2]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [4 4 9 7]) -> [7 7 7 7]", "(multlast [2 2 6 3 0]) -> [0 0 0 0 0]", "(multlast [1]) -> [1]", "(multlast [8 9 4]) -> [4 4 4]", "(multlast [5 5 5 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [6 0]) -> [0 0]", "(multlast [1 6 8 6]) -> [6 6 6 6]", "(multlast [3 6 7 9]) -> [9 9 9 9]", "(multlast [7 7 6]) -> [6 6 6]", "(multlast [2 9 4 7 0]) -> [0 0 0 0 0]", "(multlast [9 4]) -> [4 4]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [7 1]) -> [1 1]", "(multlast [1 5 8]) -> [8 8 8]", "(multlast [3 5 0 9]) -> [9 9 9 9]", "(multlast [3 2 0 9]) -> [9 9 9 9]", "(multlast [1 8 6 6]) -> [6 6 6 6]", "(multlast [1 2 5 3]) -> [3 3 3 3]", "(multlast [1]) -> [1]", "(multlast [3 9 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [6 8 4]) -> [4 4 4]", "(multlast [4 2 3 9]) -> [9 9 9 9]", "(multlast [4 9]) -> [9 9]", "(multlast [4 7 1 9]) -> [9 9 9 9]", "(multlast [0 0]) -> [0 0]", "(multlast [8 0 6]) -> [6 6 6]", "(multlast [3 8 3 2 7]) -> [7 7 7 7 7]", "(multlast [2 4]) -> [4 4]", "(multlast [6 1 3]) -> [3 3 3]", "(multlast [7 1]) -> [1 1]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [5 4 2 6 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [9 8 7]) -> [7 7 7]", "(multlast [6 3 7]) -> [7 7 7]", "(multlast [2 0 1 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [9 1 2 7]) -> [7 7 7 7]", "(multlast [5 9]) -> [9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 7 4 9]) -> [9 9 9 9]", "(multlast [6 5]) -> [5 5]", "(multlast [5 8 7 0]) -> [0 0 0 0]", "(multlast [8 4 7 9 6]) -> [6 6 6 6 6]", "(multlast [1 5 5 9]) -> [9 9 9 9]"], "time": 0.397731, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [7 8 9 2 7]) -> [7 7 7 7 7]", "(multlast [4 5 0]) -> [0 0 0]", "(multlast [4 3]) -> [3 3]", "(multlast [4 5 0 2 0]) -> [0 0 0 0 0]", "(multlast [0 6 1]) -> [1 1 1]", "(multlast [2 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 0 9]) -> [9 9 9]", "(multlast [3 5 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 3 1]) -> [1 1 1]", "(multlast [6]) -> [6]", "(multlast [3 6 6]) -> [6 6 6]", "(multlast [4]) -> [4]", "(multlast [4 5 1 7 3]) -> [3 3 3 3 3]", "(multlast [5 0 2 2 3]) -> [3 3 3 3 3]", "(multlast [5 6 6 3 8]) -> [8 8 8 8 8]", "(multlast [8 5 7]) -> [7 7 7]", "(multlast [0 7 0 7 3]) -> [3 3 3 3 3]", "(multlast [3 8 4 4]) -> [4 4 4 4]", "(multlast [2 5 6 9 7]) -> [7 7 7 7 7]", "(multlast [2]) -> [2]", "(multlast [3]) -> [3]", "(multlast [6 4]) -> [4 4]", "(multlast [7 6 8 6 5]) -> [5 5 5 5 5]", "(multlast [0 1 8 2]) -> [2 2 2 2]", "(multlast [0 3]) -> [3 3]", "(multlast [5 7 7 4]) -> [4 4 4 4]", "(multlast [9 2]) -> [2 2]", "(multlast [6]) -> [6]", "(multlast [6]) -> [6]", "(multlast [6 9 4]) -> [4 4 4]", "(multlast [6 1 3 2]) -> [2 2 2 2]", "(multlast [1 2 0]) -> [0 0 0]", "(multlast [1 1 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [0 9 7 8 7]) -> [7 7 7 7 7]", "(multlast [0 1]) -> [1 1]", "(multlast []) -> []", "(multlast [8 8 0 5]) -> [5 5 5 5]", "(multlast [7 4 9]) -> [9 9 9]", "(multlast [5 4 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [4 2]) -> [2 2]", "(multlast [6 7 7 7]) -> [7 7 7 7]", "(multlast [5]) -> [5]", "(multlast [6 8 4 5 5]) -> [5 5 5 5 5]", "(multlast [5 0 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [3 8 0 1]) -> [1 1 1 1]", "(multlast [7 6]) -> [6 6]", "(multlast [7 8 6 1]) -> [1 1 1 1]", "(multlast [3 6 2]) -> [2 2 2]", "(multlast [4 0]) -> [0 0]", "(multlast [5 6]) -> [6 6]", "(multlast [6 9]) -> [9 9]", "(multlast [7 3]) -> [3 3]", "(multlast [8 4 0 0]) -> [0 0 0 0]", "(multlast [0]) -> [0]", "(multlast [8 5 9]) -> [9 9 9]", "(multlast [2 7 6 8]) -> [8 8 8 8]", "(multlast [0 4]) -> [4 4]", "(multlast [3]) -> [3]", "(multlast [7 4 8 6 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 8]) -> [8 8]", "(multlast [5 6 5 8]) -> [8 8 8 8]", "(multlast [6 8 4]) -> [4 4 4]", "(multlast [7 1]) -> [1 1]", "(multlast [9]) -> [9]"], "time": 0.424658, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 0]) -> [0 0]", "(multlast [8 7 2]) -> [2 2 2]", "(multlast [5 6 0 6]) -> [6 6 6 6]", "(multlast [7 8]) -> [8 8]", "(multlast [3]) -> [3]", "(multlast [5]) -> [5]", "(multlast [6 6 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [0 2 9 3 7]) -> [7 7 7 7 7]", "(multlast [4]) -> [4]", "(multlast [2 4 1 7 3]) -> [3 3 3 3 3]", "(multlast [1 3 8 0]) -> [0 0 0 0]", "(multlast [3 5 8 6]) -> [6 6 6 6]", "(multlast [2 5 4 2]) -> [2 2 2 2]", "(multlast [4 9 3 6 2]) -> [2 2 2 2 2]", "(multlast [7 5]) -> [5 5]", "(multlast [9 0 4]) -> [4 4 4]", "(multlast [7 3]) -> [3 3]", "(multlast [1 6 5 5 0]) -> [0 0 0 0 0]", "(multlast [4 1 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [0 3 5 3]) -> [3 3 3 3]", "(multlast [3 2 1]) -> [1 1 1]", "(multlast [4 4]) -> [4 4]", "(multlast [3]) -> [3]", "(multlast [7 8 8 8]) -> [8 8 8 8]", "(multlast [8 2 0 4 6]) -> [6 6 6 6 6]", "(multlast [6 1]) -> [1 1]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [9 8 9 1 4]) -> [4 4 4 4 4]", "(multlast [8 7]) -> [7 7]", "(multlast []) -> []", "(multlast [5 8 1 6]) -> [6 6 6 6]", "(multlast [0 2 8 5 9]) -> [9 9 9 9 9]", "(multlast [3]) -> [3]", "(multlast [4 1 7 5 4]) -> [4 4 4 4 4]", "(multlast [2 9]) -> [9 9]", "(multlast [5]) -> [5]", "(multlast [6]) -> [6]", "(multlast [7 8 4]) -> [4 4 4]", "(multlast [5 1 8 7 3]) -> [3 3 3 3 3]", "(multlast [0]) -> [0]", "(multlast [7]) -> [7]", "(multlast [9 8 4 2]) -> [2 2 2 2]", "(multlast [4 3 0 3]) -> [3 3 3 3]", "(multlast [4]) -> [4]", "(multlast [3 6 9 4 8]) -> [8 8 8 8 8]", "(multlast [0 6 9]) -> [9 9 9]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [5 0]) -> [0 0]", "(multlast [6 9]) -> [9 9]", "(multlast [2 4 7]) -> [7 7 7]", "(multlast [1 3 2 8 5]) -> [5 5 5 5 5]", "(multlast [6 4 8 2 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [9 0 8 0]) -> [0 0 0 0]", "(multlast [8]) -> [8]", "(multlast [4 9]) -> [9 9]", "(multlast [8 5 8 4 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [6 7 0 7 7]) -> [7 7 7 7 7]", "(multlast [7 1 4 9]) -> [9 9 9 9]", "(multlast [6 5 5]) -> [5 5 5]", "(multlast [8]) -> [8]", "(multlast [1 2 5 4]) -> [4 4 4 4]", "(multlast [6 9 2 5 4]) -> [4 4 4 4 4]", "(multlast [0]) -> [0]", "(multlast [0 9 3 8 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [4 9 3 8 1]) -> [1 1 1 1 1]", "(multlast [6 7 8 7 7]) -> [7 7 7 7 7]"], "time": 0.40549, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [3 0 9 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [9 4 4 9 8]) -> [8 8 8 8 8]", "(multlast [7 8 6 4]) -> [4 4 4 4]", "(multlast [1 8 1]) -> [1 1 1]", "(multlast [1 7]) -> [7 7]", "(multlast [3 8 9]) -> [9 9 9]", "(multlast [2 1 4]) -> [4 4 4]", "(multlast [9 1 8 4 3]) -> [3 3 3 3 3]", "(multlast [8 9 3 6]) -> [6 6 6 6]", "(multlast [0 4]) -> [4 4]", "(multlast [6 3 9 0]) -> [0 0 0 0]", "(multlast [5 0 8 0]) -> [0 0 0 0]", "(multlast [4 8]) -> [8 8]", "(multlast []) -> []", "(multlast [8 8 7 0 8]) -> [8 8 8 8 8]", "(multlast [4]) -> [4]", "(multlast [9 1 0 6 1]) -> [1 1 1 1 1]", "(multlast [9 6]) -> [6 6]", "(multlast [9 4]) -> [4 4]", "(multlast [6 3 8 7 7]) -> [7 7 7 7 7]", "(multlast [0 7]) -> [7 7]", "(multlast [8 6 4 4]) -> [4 4 4 4]", "(multlast [5 7 2 5]) -> [5 5 5 5]", "(multlast [9]) -> [9]", "(multlast [3 6]) -> [6 6]", "(multlast [2 2 4 2]) -> [2 2 2 2]", "(multlast [8 5 8 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [2 5 0 3]) -> [3 3 3 3]", "(multlast [2 2 0 3 7]) -> [7 7 7 7 7]", "(multlast [0]) -> [0]", "(multlast [6 4 0]) -> [0 0 0]", "(multlast [4 0 1 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 4 8 0 5]) -> [5 5 5 5 5]", "(multlast [9 2]) -> [2 2]", "(multlast [4 9]) -> [9 9]", "(multlast [5]) -> [5]", "(multlast [6 9 0]) -> [0 0 0]", "(multlast [9 1]) -> [1 1]", "(multlast [3 5 5]) -> [5 5 5]", "(multlast [6 3 3]) -> [3 3 3]", "(multlast [0 3 5]) -> [5 5 5]", "(multlast [8 0 0 2 5]) -> [5 5 5 5 5]", "(multlast [0 2]) -> [2 2]", "(multlast [5 1 6]) -> [6 6 6]", "(multlast [3 4]) -> [4 4]", "(multlast [1]) -> [1]", "(multlast [0]) -> [0]", "(multlast [6 6 8 6]) -> [6 6 6 6]", "(multlast [3 6 5]) -> [5 5 5]", "(multlast [4 2 0 3 6]) -> [6 6 6 6 6]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [5 0 5 5 1]) -> [1 1 1 1 1]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [7 6 4]) -> [4 4 4]", "(multlast [0]) -> [0]", "(multlast [1]) -> [1]", "(multlast [0 2]) -> [2 2]", "(multlast [3 8]) -> [8 8]", "(multlast [7 3 3 4]) -> [4 4 4 4]", "(multlast [2 3 7]) -> [7 7 7]", "(multlast [1 5]) -> [5 5]", "(multlast []) -> []", "(multlast [0 8 0 5]) -> [5 5 5 5]", "(multlast [0 1]) -> [1 1]", "(multlast [2 3 5]) -> [5 5 5]", "(multlast [8 7 8 4]) -> [4 4 4 4]", "(multlast [3 5 2 1]) -> [1 1 1 1]"], "time": 0.397412, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 4 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 7 0]) -> [0 0 0]", "(multlast [2 0 8]) -> [8 8 8]", "(multlast [8 7 7]) -> [7 7 7]", "(multlast [6 1 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [6 1 9 9 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [7 2 0]) -> [0 0 0]", "(multlast [3 1 6]) -> [6 6 6]", "(multlast [1 4 3 6]) -> [6 6 6 6]", "(multlast [4 9 8 1 2]) -> [2 2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [3 0]) -> [0 0]", "(multlast [3]) -> [3]", "(multlast [9]) -> [9]", "(multlast [7 0]) -> [0 0]", "(multlast []) -> []", "(multlast [0 5 4 5]) -> [5 5 5 5]", "(multlast [3 8 7]) -> [7 7 7]", "(multlast [9 7]) -> [7 7]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [4 8 9 7 9]) -> [9 9 9 9 9]", "(multlast [8 8 1 2 9]) -> [9 9 9 9 9]", "(multlast [5 5]) -> [5 5]", "(multlast []) -> []", "(multlast [8 3 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [6 1]) -> [1 1]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [9 8]) -> [8 8]", "(multlast [3]) -> [3]", "(multlast [1 2 7 9 2]) -> [2 2 2 2 2]", "(multlast [6 9 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [8 8 4]) -> [4 4 4]", "(multlast [6 9 4]) -> [4 4 4]", "(multlast [2 6 4 3]) -> [3 3 3 3]", "(multlast [5 6 4]) -> [4 4 4]", "(multlast [8 6 7 1]) -> [1 1 1 1]", "(multlast [2]) -> [2]", "(multlast [1 9 6 7 2]) -> [2 2 2 2 2]", "(multlast [9]) -> [9]", "(multlast [9 4 7 7]) -> [7 7 7 7]", "(multlast [2 5]) -> [5 5]", "(multlast [2 4 1 3]) -> [3 3 3 3]", "(multlast [2 2 6]) -> [6 6 6]", "(multlast [4 7 8 8 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [2 2]) -> [2 2]", "(multlast [0 7 7 4]) -> [4 4 4 4]", "(multlast [7]) -> [7]", "(multlast [4 2 8]) -> [8 8 8]", "(multlast [2 6 3]) -> [3 3 3]", "(multlast [7 3]) -> [3 3]", "(multlast [3 2 3]) -> [3 3 3]", "(multlast [2 6 3]) -> [3 3 3]", "(multlast [2 2 2 2 5]) -> [5 5 5 5 5]", "(multlast [7 7]) -> [7 7]", "(multlast [1 3]) -> [3 3]", "(multlast []) -> []", "(multlast [4 5 5 9 5]) -> [5 5 5 5 5]", "(multlast [1 7 6 6]) -> [6 6 6 6]", "(multlast [3 7 1 6 8]) -> [8 8 8 8 8]", "(multlast [8 9 7 1]) -> [1 1 1 1]", "(multlast [6 8 6 4 7]) -> [7 7 7 7 7]"], "time": 0.387282, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 9 6 8]) -> [8 8 8 8]", "(multlast [9 8]) -> [8 8]", "(multlast [4 1 9 6 4]) -> [4 4 4 4 4]", "(multlast [5]) -> [5]", "(multlast [6 1 0]) -> [0 0 0]", "(multlast [2]) -> [2]", "(multlast [0 0 8 6]) -> [6 6 6 6]", "(multlast [8]) -> [8]", "(multlast [0 6 2 2]) -> [2 2 2 2]", "(multlast [0 2 2 8]) -> [8 8 8 8]", "(multlast [7 3]) -> [3 3]", "(multlast [8]) -> [8]", "(multlast [4]) -> [4]", "(multlast [6 4 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [5 3 1 1]) -> [1 1 1 1]", "(multlast [3]) -> [3]", "(multlast [6]) -> [6]", "(multlast [9]) -> [9]", "(multlast [9 7]) -> [7 7]", "(multlast [0 7 1]) -> [1 1 1]", "(multlast [5 4 9]) -> [9 9 9]", "(multlast [2]) -> [2]", "(multlast [4 4 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 5 5]) -> [5 5 5]", "(multlast [8 1 3 6 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [0 1]) -> [1 1]", "(multlast [5]) -> [5]", "(multlast [0]) -> [0]", "(multlast [4 1]) -> [1 1]", "(multlast [0 8 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [9 9]) -> [9 9]", "(multlast [0 8 6 5 3]) -> [3 3 3 3 3]", "(multlast [0 2 0 7 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [8 1 3]) -> [3 3 3]", "(multlast [3 6 2 3 7]) -> [7 7 7 7 7]", "(multlast [4]) -> [4]", "(multlast [1 8 3]) -> [3 3 3]", "(multlast [8 8 6 7]) -> [7 7 7 7]", "(multlast [1 8 1 2]) -> [2 2 2 2]", "(multlast [6]) -> [6]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [7 3]) -> [3 3]", "(multlast [6 8 5 0 8]) -> [8 8 8 8 8]", "(multlast [3 1 5]) -> [5 5 5]", "(multlast [3 2 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [2 4 9 0]) -> [0 0 0 0]", "(multlast [9 7 6 6 5]) -> [5 5 5 5 5]", "(multlast [5 2 0]) -> [0 0 0]", "(multlast [5]) -> [5]", "(multlast [3]) -> [3]", "(multlast [9 5 2]) -> [2 2 2]", "(multlast [7]) -> [7]", "(multlast [6 4 0 3 1]) -> [1 1 1 1 1]", "(multlast [0 4 7 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 9 3 2 9]) -> [9 9 9 9 9]", "(multlast [5 5 5]) -> [5 5 5]", "(multlast [0 0 5 6 0]) -> [0 0 0 0 0]", "(multlast [0 0]) -> [0 0]", "(multlast [6 0]) -> [0 0]", "(multlast []) -> []", "(multlast [1 6 1 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [6]) -> [6]"], "time": 0.281485, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 1 7 2 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 6 2 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [8 5 0 8 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [8 6 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [1 7 7 5 6]) -> [6 6 6 6 6]", "(multlast [9 5 2 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [3 0 3 7 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [4 8 1 8]) -> [8 8 8 8]", "(multlast [9 5 9 8 2]) -> [2 2 2 2 2]", "(multlast [1 1]) -> [1 1]", "(multlast [4 9 3]) -> [3 3 3]", "(multlast [1 3 4 8 9]) -> [9 9 9 9 9]", "(multlast [1 8]) -> [8 8]", "(multlast [8 4 4]) -> [4 4 4]", "(multlast [1 0]) -> [0 0]", "(multlast []) -> []", "(multlast [6 0]) -> [0 0]", "(multlast [2]) -> [2]", "(multlast [2 7 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [2 3 1 9 7]) -> [7 7 7 7 7]", "(multlast [5]) -> [5]", "(multlast [3 8 6]) -> [6 6 6]", "(multlast [5]) -> [5]", "(multlast [3 2 8]) -> [8 8 8]", "(multlast [6]) -> [6]", "(multlast [3 1 8 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [2 3]) -> [3 3]", "(multlast [6 2]) -> [2 2]", "(multlast [0]) -> [0]", "(multlast [8 0 5 6]) -> [6 6 6 6]", "(multlast [0 4]) -> [4 4]", "(multlast [4 6 4 6]) -> [6 6 6 6]", "(multlast [4 2 8 4]) -> [4 4 4 4]", "(multlast [6 5]) -> [5 5]", "(multlast [9 4 9 0]) -> [0 0 0 0]", "(multlast [0]) -> [0]", "(multlast [1 3 9 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [7 2 1]) -> [1 1 1]", "(multlast [7]) -> [7]", "(multlast [5 2 1 1 6]) -> [6 6 6 6 6]", "(multlast [0 4]) -> [4 4]", "(multlast [4 2 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [0 9 9 0 9]) -> [9 9 9 9 9]", "(multlast [2 6 9 7]) -> [7 7 7 7]", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast [0 4 3 2 2]) -> [2 2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [9 9 4 5]) -> [5 5 5 5]", "(multlast [4 0 4]) -> [4 4 4]", "(multlast [6]) -> [6]", "(multlast [7 3 9 6 7]) -> [7 7 7 7 7]", "(multlast [5 7]) -> [7 7]", "(multlast [6 4 0 5 5]) -> [5 5 5 5 5]", "(multlast [7 0 4 8]) -> [8 8 8 8]", "(multlast [6 8 2 8 2]) -> [2 2 2 2 2]", "(multlast [7 4 1 7]) -> [7 7 7 7]", "(multlast [1 8]) -> [8 8]", "(multlast [1 2 5]) -> [5 5 5]"], "time": 0.263529, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 1 5]) -> [5 5 5]", "(multlast [7 1 7 9]) -> [9 9 9 9]", "(multlast [1 8]) -> [8 8]", "(multlast []) -> []", "(multlast [7 6 3 1]) -> [1 1 1 1]", "(multlast [7]) -> [7]", "(multlast [3 3]) -> [3 3]", "(multlast [1]) -> [1]", "(multlast [8 1 5 2]) -> [2 2 2 2]", "(multlast [2]) -> [2]", "(multlast [5 0 0 1]) -> [1 1 1 1]", "(multlast [6 9]) -> [9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 0 4 2 2]) -> [2 2 2 2 2]", "(multlast [9 0 3]) -> [3 3 3]", "(multlast [1 1 5 8]) -> [8 8 8 8]", "(multlast [8 4 6 1]) -> [1 1 1 1]", "(multlast [2 2]) -> [2 2]", "(multlast [1 6 6]) -> [6 6 6]", "(multlast [1 3 9 2]) -> [2 2 2 2]", "(multlast [0 2]) -> [2 2]", "(multlast [4 8 4 3]) -> [3 3 3 3]", "(multlast [3 5 7]) -> [7 7 7]", "(multlast [7]) -> [7]", "(multlast [3 7 6 4]) -> [4 4 4 4]", "(multlast [0 8 1 6 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast [2 1 2]) -> [2 2 2]", "(multlast [6 9 9 4]) -> [4 4 4 4]", "(multlast [7 7 3 1 0]) -> [0 0 0 0 0]", "(multlast [9 5]) -> [5 5]", "(multlast [1 0 4 5 5]) -> [5 5 5 5 5]", "(multlast [6]) -> [6]", "(multlast [6 2 0 5 3]) -> [3 3 3 3 3]", "(multlast [2 9 2 4 8]) -> [8 8 8 8 8]", "(multlast [2]) -> [2]", "(multlast [7 3 2]) -> [2 2 2]", "(multlast [5 7 3 5]) -> [5 5 5 5]", "(multlast [3 4]) -> [4 4]", "(multlast [6 3 5 0 1]) -> [1 1 1 1 1]", "(multlast [7 7 1 9]) -> [9 9 9 9]", "(multlast [5]) -> [5]", "(multlast [3 6 3 8]) -> [8 8 8 8]", "(multlast [5]) -> [5]", "(multlast [8 9 3 3]) -> [3 3 3 3]", "(multlast [7 5 2]) -> [2 2 2]", "(multlast [2 9]) -> [9 9]", "(multlast [3 6 4 8 8]) -> [8 8 8 8 8]", "(multlast [6 3 0 0 7]) -> [7 7 7 7 7]", "(multlast [2]) -> [2]", "(multlast [6]) -> [6]", "(multlast [7 1 5 4 0]) -> [0 0 0 0 0]", "(multlast [1 4 7 3]) -> [3 3 3 3]", "(multlast [6 6]) -> [6 6]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [7]) -> [7]", "(multlast [4 7 8 6]) -> [6 6 6 6]", "(multlast [0]) -> [0]", "(multlast [2 4 2 0 8]) -> [8 8 8 8 8]", "(multlast [8 9 3 2 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [3 4 6 2]) -> [2 2 2 2]", "(multlast [2 0 3]) -> [3 3 3]", "(multlast [6 3]) -> [3 3]", "(multlast [8 4 6 5]) -> [5 5 5 5]", "(multlast [4 1 2]) -> [2 2 2]"], "time": 0.25646, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4]) -> [4]", "(multlast [3 2 2 9]) -> [9 9 9 9]", "(multlast [4 2]) -> [2 2]", "(multlast [3 2 1 2 0]) -> [0 0 0 0 0]", "(multlast [2 1]) -> [1 1]", "(multlast [3 5 0 9]) -> [9 9 9 9]", "(multlast [4 3 9 9]) -> [9 9 9 9]", "(multlast [6 4 9 1 4]) -> [4 4 4 4 4]", "(multlast [1 9 4 3]) -> [3 3 3 3]", "(multlast [9]) -> [9]", "(multlast [0 3]) -> [3 3]", "(multlast [0 9 6 3 5]) -> [5 5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [8 9]) -> [9 9]", "(multlast [7 0 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [8 3 4 9 9]) -> [9 9 9 9 9]", "(multlast [9]) -> [9]", "(multlast [7 1 7 1 9]) -> [9 9 9 9 9]", "(multlast [7 1]) -> [1 1]", "(multlast [4]) -> [4]", "(multlast [0 7 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [5]) -> [5]", "(multlast [1 3 2 2]) -> [2 2 2 2]", "(multlast [8 3 5]) -> [5 5 5]", "(multlast [9 9 0 4]) -> [4 4 4 4]", "(multlast [5 9]) -> [9 9]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [2 0 5]) -> [5 5 5]", "(multlast [0 8 7 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [9]) -> [9]", "(multlast [4 0 1 0]) -> [0 0 0 0]", "(multlast [7 0 7 0 2]) -> [2 2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [5 0 7 4]) -> [4 4 4 4]", "(multlast [7]) -> [7]", "(multlast [3 5 1 5]) -> [5 5 5 5]", "(multlast [6 4 3 4]) -> [4 4 4 4]", "(multlast [0 1 1 3 1]) -> [1 1 1 1 1]", "(multlast [3 1 2 7]) -> [7 7 7 7]", "(multlast [5 3 0]) -> [0 0 0]", "(multlast [7 2 1 4 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [6 9 7 5]) -> [5 5 5 5]", "(multlast [5 4 5 1]) -> [1 1 1 1]", "(multlast [7 2 9]) -> [9 9 9]", "(multlast [7 5 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [3 6 9 9]) -> [9 9 9 9]", "(multlast [3 8 4]) -> [4 4 4]", "(multlast [6 2 9 3 0]) -> [0 0 0 0 0]", "(multlast [6 2 3 8 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [2 4]) -> [4 4]", "(multlast [1 5 4 9 7]) -> [7 7 7 7 7]", "(multlast [3 4 9 0 3]) -> [3 3 3 3 3]", "(multlast [9 1 0]) -> [0 0 0]", "(multlast [1 1 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [0 0 8 5 1]) -> [1 1 1 1 1]", "(multlast [8 4 5]) -> [5 5 5]", "(multlast [8]) -> [8]", "(multlast [5 6 3 4 2]) -> [2 2 2 2 2]", "(multlast [1 7 3 0 2]) -> [2 2 2 2 2]", "(multlast [8 7 8 8 8]) -> [8 8 8 8 8]", "(multlast [9 0 3 9 0]) -> [0 0 0 0 0]", "(multlast [8 2]) -> [2 2]"], "time": 0.302395, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 2 3]) -> [3 3 3]", "(multlast [6 7]) -> [7 7]", "(multlast [6 4]) -> [4 4]", "(multlast [3 9]) -> [9 9]", "(multlast [9 1]) -> [1 1]", "(multlast [3 4 2]) -> [2 2 2]", "(multlast [0 5 6]) -> [6 6 6]", "(multlast [2 1 0]) -> [0 0 0]", "(multlast [0 5 0 0]) -> [0 0 0 0]", "(multlast [9 5]) -> [5 5]", "(multlast [2 8 3 3]) -> [3 3 3 3]", "(multlast [9 2]) -> [2 2]", "(multlast [7 3 5 5]) -> [5 5 5 5]", "(multlast [8 8 7 2 1]) -> [1 1 1 1 1]", "(multlast [5 2]) -> [2 2]", "(multlast [7 6 4 9 4]) -> [4 4 4 4 4]", "(multlast [3 0 7 1 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [3 9]) -> [9 9]", "(multlast [2]) -> [2]", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [1 8 5 5 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [3 6 9]) -> [9 9 9]", "(multlast [1]) -> [1]", "(multlast [3 8 1 5 4]) -> [4 4 4 4 4]", "(multlast [7 5]) -> [5 5]", "(multlast [8 0 3]) -> [3 3 3]", "(multlast [5 8 2]) -> [2 2 2]", "(multlast [3 3 4 3 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [2 3 5]) -> [5 5 5]", "(multlast [8]) -> [8]", "(multlast [3 9 3]) -> [3 3 3]", "(multlast [4 5 6 9]) -> [9 9 9 9]", "(multlast [4]) -> [4]", "(multlast [2 0 1 4]) -> [4 4 4 4]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [3 1 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [4 5 9 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [7 4 5 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [4 8 3 0 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [0 6 6 4]) -> [4 4 4 4]", "(multlast [9]) -> [9]", "(multlast [7 9 3]) -> [3 3 3]", "(multlast [1 8 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [0 2 8 2 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [2 1 9 5]) -> [5 5 5 5]", "(multlast [8 0 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [0 5 3]) -> [3 3 3]", "(multlast [2 9 3]) -> [3 3 3]", "(multlast [7 6]) -> [6 6]", "(multlast [7 2 8 3]) -> [3 3 3 3]", "(multlast [8 8 4 2]) -> [2 2 2 2]", "(multlast [8 5]) -> [5 5]", "(multlast [6]) -> [6]", "(multlast [8 3 1 0]) -> [0 0 0 0]", "(multlast [4]) -> [4]", "(multlast [2 0 6 7 4]) -> [4 4 4 4 4]", "(multlast [1 1 4 1]) -> [1 1 1 1]", "(multlast [9 6 5 1 4]) -> [4 4 4 4 4]", "(multlast [9 9 9]) -> [9 9 9]", "(multlast [3]) -> [3]"], "time": 0.304028, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 4 3 6]) -> [6 6 6 6]", "(multlast [9 7 6 6]) -> [6 6 6 6]", "(multlast [5 2 5 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [0 6 6]) -> [6 6 6]", "(multlast [0 4 5]) -> [5 5 5]", "(multlast [4 5 4 5 9]) -> [9 9 9 9 9]", "(multlast [6 8 2]) -> [2 2 2]", "(multlast [1 1 5 8 8]) -> [8 8 8 8 8]", "(multlast [2 6 8 3 2]) -> [2 2 2 2 2]", "(multlast [9 4 4 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [2 2]) -> [2 2]", "(multlast [5 5 2 8]) -> [8 8 8 8]", "(multlast [4]) -> [4]", "(multlast [6 1]) -> [1 1]", "(multlast [2 4 2 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [5 1 0]) -> [0 0 0]", "(multlast [9 2 6 8 0]) -> [0 0 0 0 0]", "(multlast [7 9]) -> [9 9]", "(multlast [5 6 1 2 7]) -> [7 7 7 7 7]", "(multlast [2 5 9]) -> [9 9 9]", "(multlast [9 0 2]) -> [2 2 2]", "(multlast [9 9 3 2 2]) -> [2 2 2 2 2]", "(multlast [9 8]) -> [8 8]", "(multlast [3]) -> [3]", "(multlast [8 7 1 8 7]) -> [7 7 7 7 7]", "(multlast [9 2 2]) -> [2 2 2]", "(multlast [2 9]) -> [9 9]", "(multlast [9 5 9]) -> [9 9 9]", "(multlast [6 7 9]) -> [9 9 9]", "(multlast [7]) -> [7]", "(multlast [3 5 6]) -> [6 6 6]", "(multlast [8 4 7 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [1 6 6]) -> [6 6 6]", "(multlast [4]) -> [4]", "(multlast [7 2 2 1 4]) -> [4 4 4 4 4]", "(multlast [3 9 6]) -> [6 6 6]", "(multlast [5]) -> [5]", "(multlast [3]) -> [3]", "(multlast [2 8 5]) -> [5 5 5]", "(multlast [6 9 6 8 9]) -> [9 9 9 9 9]", "(multlast [0 7 1]) -> [1 1 1]", "(multlast [3 9 0]) -> [0 0 0]", "(multlast [1]) -> [1]", "(multlast [4 9]) -> [9 9]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [7 8 4 6 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [1 5 2 0 4]) -> [4 4 4 4 4]", "(multlast [2 8 9 6 5]) -> [5 5 5 5 5]", "(multlast [7 4 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 6]) -> [6 6]", "(multlast [7 1 2 6]) -> [6 6 6 6]", "(multlast [6 7]) -> [7 7]", "(multlast [2 6 4]) -> [4 4 4]", "(multlast [1 0]) -> [0 0]", "(multlast [5 8 9]) -> [9 9 9]", "(multlast [8 3 8]) -> [8 8 8]", "(multlast [5 5 8 0]) -> [0 0 0 0]", "(multlast [7 5 4 2]) -> [2 2 2 2]", "(multlast [8 7 4 7]) -> [7 7 7 7]", "(multlast [1]) -> [1]"], "time": 0.339828, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [9 6 7 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [2 4]) -> [4 4]", "(multlast [6 8 2]) -> [2 2 2]", "(multlast [3]) -> [3]", "(multlast [3 1 0]) -> [0 0 0]", "(multlast [0 6]) -> [6 6]", "(multlast [3]) -> [3]", "(multlast [5 6 6 3]) -> [3 3 3 3]", "(multlast [4 5 3 5 4]) -> [4 4 4 4 4]", "(multlast [2 3]) -> [3 3]", "(multlast [0]) -> [0]", "(multlast [9]) -> [9]", "(multlast [2 8 5]) -> [5 5 5]", "(multlast [2]) -> [2]", "(multlast [2 7 4 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [6 2 3]) -> [3 3 3]", "(multlast [8 0 9]) -> [9 9 9]", "(multlast [6 3]) -> [3 3]", "(multlast [2 3 8 4]) -> [4 4 4 4]", "(multlast [1 3 5 1]) -> [1 1 1 1]", "(multlast [7 0]) -> [0 0]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [8 0 9 1 5]) -> [5 5 5 5 5]", "(multlast [9 8]) -> [8 8]", "(multlast [5 7 9 9 7]) -> [7 7 7 7 7]", "(multlast [6 3 0 0 1]) -> [1 1 1 1 1]", "(multlast [9 4 1 2]) -> [2 2 2 2]", "(multlast [0 9 9]) -> [9 9 9]", "(multlast [3 3 9 6 7]) -> [7 7 7 7 7]", "(multlast [2 4]) -> [4 4]", "(multlast [7 7]) -> [7 7]", "(multlast [0 3 9]) -> [9 9 9]", "(multlast [4 6 5 9]) -> [9 9 9 9]", "(multlast [7 6 7]) -> [7 7 7]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [9 1 9 9 8]) -> [8 8 8 8 8]", "(multlast [6 1 1]) -> [1 1 1]", "(multlast [8 1 2]) -> [2 2 2]", "(multlast [1 3 8]) -> [8 8 8]", "(multlast [4 1 3]) -> [3 3 3]", "(multlast [2]) -> [2]", "(multlast [7 8 6 3 6]) -> [6 6 6 6 6]", "(multlast [0 0 2]) -> [2 2 2]", "(multlast [5 0]) -> [0 0]", "(multlast [4 3 0]) -> [0 0 0]", "(multlast [1 0]) -> [0 0]", "(multlast [4 9 8 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [8 4 4]) -> [4 4 4]", "(multlast [4]) -> [4]", "(multlast [7 0 6 1 3]) -> [3 3 3 3 3]", "(multlast [8 2]) -> [2 2]", "(multlast [1 7]) -> [7 7]", "(multlast [6 4 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [9 3]) -> [3 3]", "(multlast [8]) -> [8]", "(multlast [1 2]) -> [2 2]", "(multlast []) -> []", "(multlast [4 1 7]) -> [7 7 7]", "(multlast [7 4 4 1 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [1 6 5]) -> [5 5 5]", "(multlast [6 3 0 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [1 6 0 7 1]) -> [1 1 1 1 1]", "(multlast [4 5]) -> [5 5]", "(multlast []) -> []"], "time": 0.363164, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2 4]) -> [4 4]", "(multlast [2 1 1 8 7]) -> [7 7 7 7 7]", "(multlast [4 0 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [6 2 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [8 1]) -> [1 1]", "(multlast [3 9 5 3]) -> [3 3 3 3]", "(multlast [7 6 4 0 5]) -> [5 5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [2]) -> [2]", "(multlast [9]) -> [9]", "(multlast [4 0]) -> [0 0]", "(multlast [5 7 4 6]) -> [6 6 6 6]", "(multlast [8 1 3 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [8 4 4]) -> [4 4 4]", "(multlast [4]) -> [4]", "(multlast [2 3 4]) -> [4 4 4]", "(multlast [7 2 1 1]) -> [1 1 1 1]", "(multlast [8 0 3 2]) -> [2 2 2 2]", "(multlast [0 9 2 4]) -> [4 4 4 4]", "(multlast [0 4 9 9 3]) -> [3 3 3 3 3]", "(multlast [2 3 7 3 4]) -> [4 4 4 4 4]", "(multlast [1 7 6]) -> [6 6 6]", "(multlast [1 4 2 4 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [0 8]) -> [8 8]", "(multlast [6 8 0 8 6]) -> [6 6 6 6 6]", "(multlast [7]) -> [7]", "(multlast [2 2 7]) -> [7 7 7]", "(multlast [4 1 6 4]) -> [4 4 4 4]", "(multlast [1 3 4 4]) -> [4 4 4 4]", "(multlast [4 9]) -> [9 9]", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast [2 8 2 9]) -> [9 9 9 9]", "(multlast [8]) -> [8]", "(multlast [5 7 8 7]) -> [7 7 7 7]", "(multlast [9 6 9]) -> [9 9 9]", "(multlast [9]) -> [9]", "(multlast [3 1]) -> [1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 6]) -> [6 6]", "(multlast [2 4]) -> [4 4]", "(multlast [7 3]) -> [3 3]", "(multlast [7]) -> [7]", "(multlast [6]) -> [6]", "(multlast [5 1]) -> [1 1]", "(multlast [5 0 6 7 5]) -> [5 5 5 5 5]", "(multlast [1 8 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [8 2 3 0]) -> [0 0 0 0]", "(multlast [6 1 7]) -> [7 7 7]", "(multlast [5 4]) -> [4 4]", "(multlast [3 7]) -> [7 7]", "(multlast [4 8]) -> [8 8]", "(multlast [9 2 0]) -> [0 0 0]", "(multlast [0 5 8 3 3]) -> [3 3 3 3 3]", "(multlast [3 6 6 8]) -> [8 8 8 8]", "(multlast [7 8 4 4]) -> [4 4 4 4]", "(multlast [7 0 1 3]) -> [3 3 3 3]", "(multlast [5 6 4]) -> [4 4 4]", "(multlast [5 7 9 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [4 2 7 4 8]) -> [8 8 8 8 8]", "(multlast [7 9 3]) -> [3 3 3]", "(multlast [8]) -> [8]", "(multlast [6 4 0 3 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 7]) -> [7 7]", "(multlast [8]) -> [8]"], "time": 0.325675, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 5 9 4]) -> [4 4 4 4]", "(multlast [7 3 0 3]) -> [3 3 3 3]", "(multlast [7 3]) -> [3 3]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [5 0]) -> [0 0]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [4]) -> [4]", "(multlast [7 8 3]) -> [3 3 3]", "(multlast [7 6 0 5 1]) -> [1 1 1 1 1]", "(multlast [7 4 4 7 7]) -> [7 7 7 7 7]", "(multlast [3 6 1 7]) -> [7 7 7 7]", "(multlast [5 7 7]) -> [7 7 7]", "(multlast [8 6 3 5 0]) -> [0 0 0 0 0]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [1 9]) -> [9 9]", "(multlast [3 7]) -> [7 7]", "(multlast [7 5 8 4 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [6 8 0 8]) -> [8 8 8 8]", "(multlast [9 1 5 6]) -> [6 6 6 6]", "(multlast [9 5 0 1]) -> [1 1 1 1]", "(multlast [5 3]) -> [3 3]", "(multlast [7 9 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [2 4]) -> [4 4]", "(multlast [9 2 7 7 1]) -> [1 1 1 1 1]", "(multlast [6 2 1]) -> [1 1 1]", "(multlast [5 7 1]) -> [1 1 1]", "(multlast [8 2]) -> [2 2]", "(multlast [3 7 0]) -> [0 0 0]", "(multlast [1 1 5 5 0]) -> [0 0 0 0 0]", "(multlast [6 7]) -> [7 7]", "(multlast [8 3 8 0 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [0 1]) -> [1 1]", "(multlast [2 3 9 9 0]) -> [0 0 0 0 0]", "(multlast [9 8 2]) -> [2 2 2]", "(multlast [7]) -> [7]", "(multlast [8 7 0]) -> [0 0 0]", "(multlast [1 8 8 5]) -> [5 5 5 5]", "(multlast [6 4]) -> [4 4]", "(multlast [3 5]) -> [5 5]", "(multlast []) -> []", "(multlast [2 2 1 1 6]) -> [6 6 6 6 6]", "(multlast [6 7 9 7]) -> [7 7 7 7]", "(multlast [1 1]) -> [1 1]", "(multlast [1 6]) -> [6 6]", "(multlast []) -> []", "(multlast [4 8 9 3 2]) -> [2 2 2 2 2]", "(multlast [2 2 9 6 4]) -> [4 4 4 4 4]", "(multlast [3]) -> [3]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [6 6 5 9]) -> [9 9 9 9]", "(multlast [0 7]) -> [7 7]", "(multlast [0 4 1]) -> [1 1 1]", "(multlast [5 9 9 1 7]) -> [7 7 7 7 7]", "(multlast [0 8]) -> [8 8]", "(multlast [2 5 9]) -> [9 9 9]", "(multlast [4 9 1 2 5]) -> [5 5 5 5 5]", "(multlast [9 5]) -> [5 5]", "(multlast [1]) -> [1]", "(multlast [7 8 2]) -> [2 2 2]", "(multlast [9 6 9 7]) -> [7 7 7 7]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [1 7 3]) -> [3 3 3]", "(multlast [2 9 8]) -> [8 8 8]"], "time": 0.32982, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 4 1]) -> [1 1 1]", "(multlast [8 6 7]) -> [7 7 7]", "(multlast [6 7 1 9]) -> [9 9 9 9]", "(multlast [8 9]) -> [9 9]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [1 3]) -> [3 3]", "(multlast []) -> []", "(multlast [2 2 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 8 0 9]) -> [9 9 9 9]", "(multlast [1 0 7]) -> [7 7 7]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [0 9 8 1]) -> [1 1 1 1]", "(multlast [7 5]) -> [5 5]", "(multlast [5]) -> [5]", "(multlast [9 3 0 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [3 4 9]) -> [9 9 9]", "(multlast [8 6 3 0]) -> [0 0 0 0]", "(multlast [1 6 6 7 0]) -> [0 0 0 0 0]", "(multlast [6 2]) -> [2 2]", "(multlast [5 2 6 0 3]) -> [3 3 3 3 3]", "(multlast [3 9 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [5 6 8 7 1]) -> [1 1 1 1 1]", "(multlast [3]) -> [3]", "(multlast [9 0 5 3]) -> [3 3 3 3]", "(multlast [8 8 1]) -> [1 1 1]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [9 6 5]) -> [5 5 5]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [0 2 0 0]) -> [0 0 0 0]", "(multlast [7 8 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [7 7 3 6 0]) -> [0 0 0 0 0]", "(multlast [8 8]) -> [8 8]", "(multlast [6 3 5]) -> [5 5 5]", "(multlast [9 1 3 0 0]) -> [0 0 0 0 0]", "(multlast [6 0 9]) -> [9 9 9]", "(multlast [4 4 4 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [8 6 8 1 5]) -> [5 5 5 5 5]", "(multlast [2]) -> [2]", "(multlast [6 9 1]) -> [1 1 1]", "(multlast [2 1 4 2 1]) -> [1 1 1 1 1]", "(multlast [3 8 9 3 2]) -> [2 2 2 2 2]", "(multlast [3 0 2 8 0]) -> [0 0 0 0 0]", "(multlast [8 8]) -> [8 8]", "(multlast [4 8 5 3 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [4 8 3 8 2]) -> [2 2 2 2 2]", "(multlast [4 5]) -> [5 5]", "(multlast [6 2 2]) -> [2 2 2]", "(multlast [0]) -> [0]", "(multlast [8 7 4 3 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [0 4 1 0]) -> [0 0 0 0]", "(multlast [7 2]) -> [2 2]", "(multlast [1 5 7 1]) -> [1 1 1 1]", "(multlast [9 3 0]) -> [0 0 0]", "(multlast [5 7 1]) -> [1 1 1]", "(multlast [4 9 5 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [1 0]) -> [0 0]", "(multlast [0 6 9]) -> [9 9 9]", "(multlast [4 6 8]) -> [8 8 8]"], "time": 0.368115, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [3 8 9 1 0]) -> [0 0 0 0 0]", "(multlast [9 3]) -> [3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 8 5 0]) -> [0 0 0 0]", "(multlast [0]) -> [0]", "(multlast [4 6 4]) -> [4 4 4]", "(multlast [9 0 3 1 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4 4 4 1 2]) -> [2 2 2 2 2]", "(multlast [0 9 4 6]) -> [6 6 6 6]", "(multlast [3]) -> [3]", "(multlast [8]) -> [8]", "(multlast [1 3]) -> [3 3]", "(multlast [0 3 7 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [0 7 2]) -> [2 2 2]", "(multlast [2 3 2 4 3]) -> [3 3 3 3 3]", "(multlast [3]) -> [3]", "(multlast [9 3 9 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [2 6 2 6 7]) -> [7 7 7 7 7]", "(multlast [9]) -> [9]", "(multlast [5 1 8]) -> [8 8 8]", "(multlast [7 5 7 7 0]) -> [0 0 0 0 0]", "(multlast [2]) -> [2]", "(multlast [3 6 2 7 7]) -> [7 7 7 7 7]", "(multlast [1 4]) -> [4 4]", "(multlast [5 6 7]) -> [7 7 7]", "(multlast [1 5 3 0]) -> [0 0 0 0]", "(multlast [2 0 1 0 7]) -> [7 7 7 7 7]", "(multlast [4 1 8]) -> [8 8 8]", "(multlast [6 1 0 5 0]) -> [0 0 0 0 0]", "(multlast [9 9 7 1]) -> [1 1 1 1]", "(multlast [4 1 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [9 9 1 6]) -> [6 6 6 6]", "(multlast [7 3]) -> [3 3]", "(multlast [3 2 6]) -> [6 6 6]", "(multlast [9 0 2]) -> [2 2 2]", "(multlast [9 5 9]) -> [9 9 9]", "(multlast [6 7]) -> [7 7]", "(multlast [9 4 9 0 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [1 0 1 4 5]) -> [5 5 5 5 5]", "(multlast [3]) -> [3]", "(multlast [0 7]) -> [7 7]", "(multlast [3 8 4]) -> [4 4 4]", "(multlast [4 9 8]) -> [8 8 8]", "(multlast [3 2]) -> [2 2]", "(multlast [0 3 9 6 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [6 0 7]) -> [7 7 7]", "(multlast [2 4 8]) -> [8 8 8]", "(multlast [4 1 3 9 1]) -> [1 1 1 1 1]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [0 1 3 0]) -> [0 0 0 0]", "(multlast [8 8 0 4]) -> [4 4 4 4]", "(multlast [5 0 2 4 4]) -> [4 4 4 4 4]", "(multlast [1 0 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [1 6 8 1 3]) -> [3 3 3 3 3]", "(multlast [5 4 7 6]) -> [6 6 6 6]", "(multlast [2 3]) -> [3 3]", "(multlast [2 3 9]) -> [9 9 9]", "(multlast [9 9 4 9 2]) -> [2 2 2 2 2]", "(multlast [0 1 5 6 3]) -> [3 3 3 3 3]", "(multlast [8 9 2 9 5]) -> [5 5 5 5 5]"], "time": 0.370827, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 0 0 0 3]) -> [3 3 3 3 3]", "(multlast [0 1 0 5]) -> [5 5 5 5]", "(multlast [3 8 4]) -> [4 4 4]", "(multlast [9 7 1 7]) -> [7 7 7 7]", "(multlast [9]) -> [9]", "(multlast [5]) -> [5]", "(multlast [7 0]) -> [0 0]", "(multlast [1 2 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [9 3 7 5]) -> [5 5 5 5]", "(multlast [5 1 1 2]) -> [2 2 2 2]", "(multlast [3 2 6 5 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [8 8 4 8 6]) -> [6 6 6 6 6]", "(multlast [4 2 0 2 5]) -> [5 5 5 5 5]", "(multlast [8 6 2 9 2]) -> [2 2 2 2 2]", "(multlast [1 9 6 8 7]) -> [7 7 7 7 7]", "(multlast [8 4 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 0 4 8]) -> [8 8 8 8]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [3 3 1 4]) -> [4 4 4 4]", "(multlast [8 2]) -> [2 2]", "(multlast [0 0 1 0]) -> [0 0 0 0]", "(multlast [0 4 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [3 5 0 5 2]) -> [2 2 2 2 2]", "(multlast [0 5]) -> [5 5]", "(multlast [9 0 4 3]) -> [3 3 3 3]", "(multlast [4 6]) -> [6 6]", "(multlast [8 8 0]) -> [0 0 0]", "(multlast [3 4]) -> [4 4]", "(multlast [0]) -> [0]", "(multlast [0]) -> [0]", "(multlast [9 5]) -> [5 5]", "(multlast [1]) -> [1]", "(multlast [1 6]) -> [6 6]", "(multlast [4 4]) -> [4 4]", "(multlast [9 3 0 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [4 1 3 7 4]) -> [4 4 4 4 4]", "(multlast [5 4 5 3]) -> [3 3 3 3]", "(multlast [2 2]) -> [2 2]", "(multlast [9 8 6 7 3]) -> [3 3 3 3 3]", "(multlast [7 0 2 5]) -> [5 5 5 5]", "(multlast [5 0 7 8 1]) -> [1 1 1 1 1]", "(multlast [7 8 0]) -> [0 0 0]", "(multlast [3]) -> [3]", "(multlast [2 1 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 8]) -> [8 8]", "(multlast [8 5 2 0 7]) -> [7 7 7 7 7]", "(multlast [6 8]) -> [8 8]", "(multlast [4 8]) -> [8 8]", "(multlast [9 9 0 6 1]) -> [1 1 1 1 1]", "(multlast [4 9 1 8]) -> [8 8 8 8]", "(multlast [3 4]) -> [4 4]", "(multlast []) -> []", "(multlast [8 0 8 7 5]) -> [5 5 5 5 5]", "(multlast [3 5 5 4 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [2 6 8 8 4]) -> [4 4 4 4 4]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [5 8 5 8]) -> [8 8 8 8]", "(multlast [2 2 4 7 3]) -> [3 3 3 3 3]", "(multlast [6 1 1 3]) -> [3 3 3 3]", "(multlast [2 9 9 3 6]) -> [6 6 6 6 6]"], "time": 0.357531, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [9 8]) -> [8 8]", "(multlast [3 8 2 4 2]) -> [2 2 2 2 2]", "(multlast [3 0 9 3]) -> [3 3 3 3]", "(multlast [4 6]) -> [6 6]", "(multlast [6]) -> [6]", "(multlast [9]) -> [9]", "(multlast [6 8 5 9 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [2 1]) -> [1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 7 8 9 9]) -> [9 9 9 9 9]", "(multlast [3]) -> [3]", "(multlast [1 4 8 0 2]) -> [2 2 2 2 2]", "(multlast [2 1 9]) -> [9 9 9]", "(multlast [0 0 7 2 2]) -> [2 2 2 2 2]", "(multlast [0 6 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [9 4]) -> [4 4]", "(multlast [0 2]) -> [2 2]", "(multlast [8 0 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [2 7 7]) -> [7 7 7]", "(multlast [1 4]) -> [4 4]", "(multlast [1 0 1 1]) -> [1 1 1 1]", "(multlast [9 2 2 3]) -> [3 3 3 3]", "(multlast [0 2 5 6 0]) -> [0 0 0 0 0]", "(multlast [0 7 0 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 6 1 6]) -> [6 6 6 6]", "(multlast [4 0 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [3 3 4 4]) -> [4 4 4 4]", "(multlast [9 3 8]) -> [8 8 8]", "(multlast [6 5 7]) -> [7 7 7]", "(multlast [6 2 2]) -> [2 2 2]", "(multlast [3 6 2 2 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 3 9 5]) -> [5 5 5 5]", "(multlast [7]) -> [7]", "(multlast [6]) -> [6]", "(multlast [2]) -> [2]", "(multlast [2 0]) -> [0 0]", "(multlast [6 7 7 9 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [4 4 9 5 6]) -> [6 6 6 6 6]", "(multlast [4 4 9 2]) -> [2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [5 4 4]) -> [4 4 4]", "(multlast [9 7 7 4 9]) -> [9 9 9 9 9]", "(multlast [7]) -> [7]", "(multlast [6 8 9 1 5]) -> [5 5 5 5 5]", "(multlast [9 1 9 8]) -> [8 8 8 8]", "(multlast [5 7]) -> [7 7]", "(multlast [3 3 5 1 7]) -> [7 7 7 7 7]", "(multlast [1]) -> [1]", "(multlast [6 8]) -> [8 8]", "(multlast [5 0 9 2 2]) -> [2 2 2 2 2]", "(multlast [7 6]) -> [6 6]", "(multlast [8]) -> [8]", "(multlast [3 0 6]) -> [6 6 6]", "(multlast [6 3 9 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [7 8 0 4]) -> [4 4 4 4]", "(multlast [6 5 7 0]) -> [0 0 0 0]", "(multlast [4 5 3 6]) -> [6 6 6 6]", "(multlast [7 2]) -> [2 2]", "(multlast [7]) -> [7]", "(multlast [9 5 0 7 3]) -> [3 3 3 3 3]", "(multlast [5]) -> [5]"], "time": 0.257874, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4]) -> [4]", "(multlast [2]) -> [2]", "(multlast [9]) -> [9]", "(multlast [5 4 3 4 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [4 6 6 9]) -> [9 9 9 9]", "(multlast [8]) -> [8]", "(multlast [8 3 8 6 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 8 3 6 3]) -> [3 3 3 3 3]", "(multlast [6 6]) -> [6 6]", "(multlast [4]) -> [4]", "(multlast [2 0 5 2 2]) -> [2 2 2 2 2]", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [7 7 7 8]) -> [8 8 8 8]", "(multlast [7 2 3]) -> [3 3 3]", "(multlast [4 4]) -> [4 4]", "(multlast [7 4 9 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4 9 4 3 2]) -> [2 2 2 2 2]", "(multlast [5 8 0 9]) -> [9 9 9 9]", "(multlast [2 0 5 2]) -> [2 2 2 2]", "(multlast [7 3 7 4]) -> [4 4 4 4]", "(multlast [2 6 4]) -> [4 4 4]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [9 3 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [9 5]) -> [5 5]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [7 8]) -> [8 8]", "(multlast [7 2 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4 8 6]) -> [6 6 6]", "(multlast [5]) -> [5]", "(multlast [8]) -> [8]", "(multlast [9 8 3]) -> [3 3 3]", "(multlast [1 1 7 1]) -> [1 1 1 1]", "(multlast [1 5 3 7 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [4 4 9 6]) -> [6 6 6 6]", "(multlast [7 4 6 3]) -> [3 3 3 3]", "(multlast [6 0]) -> [0 0]", "(multlast [3 4 4]) -> [4 4 4]", "(multlast [9 1 5 5 0]) -> [0 0 0 0 0]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [4 8 7]) -> [7 7 7]", "(multlast [4]) -> [4]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 4 9 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [3 3]) -> [3 3]", "(multlast [0 2 0]) -> [0 0 0]", "(multlast [3 0 5 7]) -> [7 7 7 7]", "(multlast [2 0 4 6 3]) -> [3 3 3 3 3]", "(multlast [2]) -> [2]", "(multlast [9]) -> [9]", "(multlast [7 4 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [7 3]) -> [3 3]", "(multlast [2 5]) -> [5 5]", "(multlast [4 9 7 8]) -> [8 8 8 8]", "(multlast [6 2 9 3]) -> [3 3 3 3]", "(multlast [5 2 4]) -> [4 4 4]", "(multlast [5 6 8 8]) -> [8 8 8 8]", "(multlast [4 9 0 6]) -> [6 6 6 6]"], "time": 0.230722, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 2 2]) -> [2 2 2]", "(multlast [6 4]) -> [4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 7 0 0 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [3 3 7 2 9]) -> [9 9 9 9 9]", "(multlast [8 4 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [8 6 1]) -> [1 1 1]", "(multlast [4]) -> [4]", "(multlast [0 7 9]) -> [9 9 9]", "(multlast [1 5 4 6 9]) -> [9 9 9 9 9]", "(multlast [7 1]) -> [1 1]", "(multlast [1 4 0 1 8]) -> [8 8 8 8 8]", "(multlast [6 2 7 2 8]) -> [8 8 8 8 8]", "(multlast [8 6 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [9 3 9 9]) -> [9 9 9 9]", "(multlast [5 2]) -> [2 2]", "(multlast [5 9 5]) -> [5 5 5]", "(multlast [9]) -> [9]", "(multlast [2 7 4 9 5]) -> [5 5 5 5 5]", "(multlast [0]) -> [0]", "(multlast [3]) -> [3]", "(multlast [8 2]) -> [2 2]", "(multlast [4 3 2]) -> [2 2 2]", "(multlast [4 8 3 5]) -> [5 5 5 5]", "(multlast [9 9 6]) -> [6 6 6]", "(multlast [0 1 9 4 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [0 2]) -> [2 2]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [1 2]) -> [2 2]", "(multlast []) -> []", "(multlast [6 3 2 5 1]) -> [1 1 1 1 1]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [8 2 3 0]) -> [0 0 0 0]", "(multlast [8 9 9 3]) -> [3 3 3 3]", "(multlast [3 2 7 5]) -> [5 5 5 5]", "(multlast [0 5 7 5]) -> [5 5 5 5]", "(multlast [4 9 0 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 9]) -> [9 9]", "(multlast [5 6 0 1 4]) -> [4 4 4 4 4]", "(multlast [9 2 6 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [8 9 8 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [0 1 0 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [2 9 2 6 5]) -> [5 5 5 5 5]", "(multlast [6 3 0]) -> [0 0 0]", "(multlast [0 1]) -> [1 1]", "(multlast [4]) -> [4]", "(multlast [6]) -> [6]", "(multlast [5 8 9 9]) -> [9 9 9 9]", "(multlast [0 6]) -> [6 6]", "(multlast [6 9 6 6 4]) -> [4 4 4 4 4]", "(multlast [8 6 3 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [9 1 4 6]) -> [6 6 6 6]", "(multlast [4 1 4 9 9]) -> [9 9 9 9 9]", "(multlast [6 8 0 5]) -> [5 5 5 5]", "(multlast [0 3 1 1 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [0 1 4 1 6]) -> [6 6 6 6 6]", "(multlast [6 4 5 2]) -> [2 2 2 2]"], "time": 0.289573, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [8 1 9 2]) -> [2 2 2 2]", "(multlast [0 7 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [1 6]) -> [6 6]", "(multlast [1 4]) -> [4 4]", "(multlast [1]) -> [1]", "(multlast [8 2 6 1]) -> [1 1 1 1]", "(multlast [5 5 9 6 8]) -> [8 8 8 8 8]", "(multlast [4 0 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 1 5 1 5]) -> [5 5 5 5 5]", "(multlast [2 2]) -> [2 2]", "(multlast []) -> []", "(multlast [1 2 2]) -> [2 2 2]", "(multlast [9 3 5 8]) -> [8 8 8 8]", "(multlast [3 7 4 4 6]) -> [6 6 6 6 6]", "(multlast [9 9]) -> [9 9]", "(multlast [4]) -> [4]", "(multlast [8]) -> [8]", "(multlast [8 3]) -> [3 3]", "(multlast [3 1]) -> [1 1]", "(multlast [5 0 3 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [3 8 4 5 3]) -> [3 3 3 3 3]", "(multlast [5 9]) -> [9 9]", "(multlast [4]) -> [4]", "(multlast [0 3 4 7 2]) -> [2 2 2 2 2]", "(multlast [7 9 2]) -> [2 2 2]", "(multlast [7 4 8 8]) -> [8 8 8 8]", "(multlast [4 6 7 4]) -> [4 4 4 4]", "(multlast [4 9 6]) -> [6 6 6]", "(multlast [0 8 6]) -> [6 6 6]", "(multlast [4]) -> [4]", "(multlast [9 3 3]) -> [3 3 3]", "(multlast [1 0 9]) -> [9 9 9]", "(multlast [8 8]) -> [8 8]", "(multlast [6 2]) -> [2 2]", "(multlast [7 9]) -> [9 9]", "(multlast []) -> []", "(multlast [8 3 1 8 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 3 1 4 4]) -> [4 4 4 4 4]", "(multlast [0 6 7 0]) -> [0 0 0 0]", "(multlast [2 9 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [7 8]) -> [8 8]", "(multlast [1 1 4]) -> [4 4 4]", "(multlast [2 1]) -> [1 1]", "(multlast [8]) -> [8]", "(multlast [1 1]) -> [1 1]", "(multlast [9 0]) -> [0 0]", "(multlast [3 8 9 9]) -> [9 9 9 9]", "(multlast [5 4]) -> [4 4]", "(multlast [4 0 7 4]) -> [4 4 4 4]", "(multlast [1 8]) -> [8 8]", "(multlast [4 5 5 2 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 0]) -> [0 0]", "(multlast [0 6 8 2]) -> [2 2 2 2]", "(multlast [5 6 9 8 4]) -> [4 4 4 4 4]", "(multlast [2 0 9 0 7]) -> [7 7 7 7 7]", "(multlast [6 0]) -> [0 0]", "(multlast [9 2]) -> [2 2]", "(multlast [5 6 9 1 2]) -> [2 2 2 2 2]", "(multlast [4 6 0 9]) -> [9 9 9 9]", "(multlast [1 0 6 4 2]) -> [2 2 2 2 2]", "(multlast [6 8 5 7 9]) -> [9 9 9 9 9]", "(multlast [3 5]) -> [5 5]", "(multlast []) -> []", "(multlast [9]) -> [9]"], "time": 0.352682, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 1 7 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [2 2 6 4 7]) -> [7 7 7 7 7]", "(multlast [6 5]) -> [5 5]", "(multlast [3 0]) -> [0 0]", "(multlast [0]) -> [0]", "(multlast [3 6 5]) -> [5 5 5]", "(multlast [5]) -> [5]", "(multlast [2 7]) -> [7 7]", "(multlast [4 0 4 9]) -> [9 9 9 9]", "(multlast [7 0]) -> [0 0]", "(multlast [3 0 3 2 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [2 7]) -> [7 7]", "(multlast [5 8 1 9 4]) -> [4 4 4 4 4]", "(multlast [9 7 1 4]) -> [4 4 4 4]", "(multlast [1 5 9 3]) -> [3 3 3 3]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [0]) -> [0]", "(multlast [2 9 5]) -> [5 5 5]", "(multlast [1 4 6 7 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [9 4 8 7]) -> [7 7 7 7]", "(multlast [8 6 4]) -> [4 4 4]", "(multlast [3 6 6 9 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [3 2 4]) -> [4 4 4]", "(multlast [2 2]) -> [2 2]", "(multlast [2 6 2 0]) -> [0 0 0 0]", "(multlast [0 4 2]) -> [2 2 2]", "(multlast [1 6 9 7 6]) -> [6 6 6 6 6]", "(multlast [3]) -> [3]", "(multlast [3 2 3 4 6]) -> [6 6 6 6 6]", "(multlast [3 2 0 8 7]) -> [7 7 7 7 7]", "(multlast [9 5]) -> [5 5]", "(multlast [6 6 9 4]) -> [4 4 4 4]", "(multlast [4 3 4 1 3]) -> [3 3 3 3 3]", "(multlast [1 7]) -> [7 7]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [6 4]) -> [4 4]", "(multlast [2 8 6 4 5]) -> [5 5 5 5 5]", "(multlast [9 8 0 5]) -> [5 5 5 5]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [9 9 3 1]) -> [1 1 1 1]", "(multlast [3 1 9 2 0]) -> [0 0 0 0 0]", "(multlast [5 7 7 3]) -> [3 3 3 3]", "(multlast [1 1 1 6]) -> [6 6 6 6]", "(multlast [0 1 9 9]) -> [9 9 9 9]", "(multlast [3 4 0 3]) -> [3 3 3 3]", "(multlast [9 2]) -> [2 2]", "(multlast [3]) -> [3]", "(multlast [0]) -> [0]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [4 4 7 7]) -> [7 7 7 7]", "(multlast [5 3 7]) -> [7 7 7]", "(multlast [3 0]) -> [0 0]", "(multlast []) -> []", "(multlast [8 4 3 0 4]) -> [4 4 4 4 4]", "(multlast [3 0]) -> [0 0]", "(multlast [5]) -> [5]", "(multlast [3 4 7 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [2 9 2 0 1]) -> [1 1 1 1 1]", "(multlast [5 1 8 5]) -> [5 5 5 5]", "(multlast [9 9 7 9 4]) -> [4 4 4 4 4]", "(multlast [3 0 4 7]) -> [7 7 7 7]", "(multlast [5 5 0 6 7]) -> [7 7 7 7 7]"], "time": 0.229135, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 9 2 4]) -> [4 4 4 4]", "(multlast [7]) -> [7]", "(multlast [9 8]) -> [8 8]", "(multlast [8 6 7 7]) -> [7 7 7 7]", "(multlast [3 4]) -> [4 4]", "(multlast []) -> []", "(multlast [6 0 2 2]) -> [2 2 2 2]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [5 8 3 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 1 2]) -> [2 2 2]", "(multlast [3 3]) -> [3 3]", "(multlast [8 0 3 0 5]) -> [5 5 5 5 5]", "(multlast [4 3 3]) -> [3 3 3]", "(multlast [2 4 4]) -> [4 4 4]", "(multlast [8 5]) -> [5 5]", "(multlast [6]) -> [6]", "(multlast [6 4]) -> [4 4]", "(multlast [4 2 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [6 1]) -> [1 1]", "(multlast [0 0 0]) -> [0 0 0]", "(multlast [0 1 3]) -> [3 3 3]", "(multlast [1 2 8 6]) -> [6 6 6 6]", "(multlast [3 5]) -> [5 5]", "(multlast [4 5 9 8 9]) -> [9 9 9 9 9]", "(multlast [1 7]) -> [7 7]", "(multlast [9 6]) -> [6 6]", "(multlast [7 3 1 9]) -> [9 9 9 9]", "(multlast [8 0 3 5]) -> [5 5 5 5]", "(multlast [0 4]) -> [4 4]", "(multlast [3 9 0 2]) -> [2 2 2 2]", "(multlast [2 0 0 1 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [4 6 3 4]) -> [4 4 4 4]", "(multlast [5 9 8]) -> [8 8 8]", "(multlast [2 0]) -> [0 0]", "(multlast [8]) -> [8]", "(multlast [3 8 5 9]) -> [9 9 9 9]", "(multlast [2 1]) -> [1 1]", "(multlast []) -> []", "(multlast [0 8]) -> [8 8]", "(multlast [9 0 9 8]) -> [8 8 8 8]", "(multlast [8 5 7]) -> [7 7 7]", "(multlast [8 1 1 0 1]) -> [1 1 1 1 1]", "(multlast [7 0]) -> [0 0]", "(multlast []) -> []", "(multlast [3 1 6]) -> [6 6 6]", "(multlast [8 6 2 4 1]) -> [1 1 1 1 1]", "(multlast [9 0 1 3 7]) -> [7 7 7 7 7]", "(multlast [3 9 5 2]) -> [2 2 2 2]", "(multlast [2 9 0 0 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [6 6 9 7 6]) -> [6 6 6 6 6]", "(multlast [6 7 2 0 4]) -> [4 4 4 4 4]", "(multlast [0]) -> [0]", "(multlast [2 5]) -> [5 5]", "(multlast []) -> []", "(multlast [4 5 2 6]) -> [6 6 6 6]", "(multlast [1]) -> [1]", "(multlast [2 4]) -> [4 4]", "(multlast [0 2]) -> [2 2]", "(multlast [0 8 0]) -> [0 0 0]", "(multlast [6 0]) -> [0 0]", "(multlast [2 6 3]) -> [3 3 3]", "(multlast [1]) -> [1]", "(multlast [9 3 5 3]) -> [3 3 3 3]", "(multlast [5 0 1 4]) -> [4 4 4 4]", "(multlast [2 3 9]) -> [9 9 9]", "(multlast [1]) -> [1]"], "time": 0.226813, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [3 1 9 4]) -> [4 4 4 4]", "(multlast [3 7]) -> [7 7]", "(multlast [5 6]) -> [6 6]", "(multlast []) -> []", "(multlast [3 0 9 5]) -> [5 5 5 5]", "(multlast [5 1]) -> [1 1]", "(multlast [0 8 2]) -> [2 2 2]", "(multlast [4 5 7]) -> [7 7 7]", "(multlast [8 9 3 1]) -> [1 1 1 1]", "(multlast [0 2 1]) -> [1 1 1]", "(multlast [3 1 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [0 2 1]) -> [1 1 1]", "(multlast [8]) -> [8]", "(multlast [5 4 0 1 3]) -> [3 3 3 3 3]", "(multlast [4 6 7 4 1]) -> [1 1 1 1 1]", "(multlast [7 4 5]) -> [5 5 5]", "(multlast [8 5 0 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 6 0 1]) -> [1 1 1 1]", "(multlast [7]) -> [7]", "(multlast [4 7 8 5 0]) -> [0 0 0 0 0]", "(multlast [2 4 1 7]) -> [7 7 7 7]", "(multlast [8 9 5 8 1]) -> [1 1 1 1 1]", "(multlast [3 9]) -> [9 9]", "(multlast [3]) -> [3]", "(multlast [0 8 6]) -> [6 6 6]", "(multlast [4 8]) -> [8 8]", "(multlast [1]) -> [1]", "(multlast [7 8 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [9 1 6 8 3]) -> [3 3 3 3 3]", "(multlast [2]) -> [2]", "(multlast [2 5]) -> [5 5]", "(multlast [1 6]) -> [6 6]", "(multlast [1]) -> [1]", "(multlast [7 7 8 6]) -> [6 6 6 6]", "(multlast [7 3 2]) -> [2 2 2]", "(multlast [8 5]) -> [5 5]", "(multlast [1 9 4 7]) -> [7 7 7 7]", "(multlast [7]) -> [7]", "(multlast [5 7 7]) -> [7 7 7]", "(multlast [9 2 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [5 7 8 5]) -> [5 5 5 5]", "(multlast [3]) -> [3]", "(multlast [0 7]) -> [7 7]", "(multlast [7 1 7 6 2]) -> [2 2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [2 2]) -> [2 2]", "(multlast [4 9 8]) -> [8 8 8]", "(multlast [8 4 7 1 1]) -> [1 1 1 1 1]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [6 9 8]) -> [8 8 8]", "(multlast [1 5]) -> [5 5]", "(multlast [8 2 4]) -> [4 4 4]", "(multlast [5]) -> [5]", "(multlast [8]) -> [8]", "(multlast [4 0 2 1]) -> [1 1 1 1]", "(multlast [9 5]) -> [5 5]", "(multlast []) -> []", "(multlast [3 3 0 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [2 4]) -> [4 4]", "(multlast [9]) -> [9]", "(multlast [1]) -> [1]", "(multlast [4 0 9]) -> [9 9 9]", "(multlast [6 6 8 9]) -> [9 9 9 9]", "(multlast [5 8 1 0]) -> [0 0 0 0]"], "time": 0.266493, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2 3 9 0 6]) -> [6 6 6 6 6]", "(multlast [3 1 5 3]) -> [3 3 3 3]", "(multlast [7 7 1]) -> [1 1 1]", "(multlast [9 9 8 4 1]) -> [1 1 1 1 1]", "(multlast [2 9]) -> [9 9]", "(multlast []) -> []", "(multlast [3 6]) -> [6 6]", "(multlast [2]) -> [2]", "(multlast [4 5]) -> [5 5]", "(multlast [1]) -> [1]", "(multlast [7 0]) -> [0 0]", "(multlast [6 0 9 4 3]) -> [3 3 3 3 3]", "(multlast [1]) -> [1]", "(multlast [4 3]) -> [3 3]", "(multlast [6 6 4]) -> [4 4 4]", "(multlast [6 7 5]) -> [5 5 5]", "(multlast [0 3 6 1]) -> [1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 5 6 9 0]) -> [0 0 0 0 0]", "(multlast [8 1]) -> [1 1]", "(multlast [0 5]) -> [5 5]", "(multlast [0]) -> [0]", "(multlast [7 5 8]) -> [8 8 8]", "(multlast [0 6]) -> [6 6]", "(multlast [7 2 1]) -> [1 1 1]", "(multlast [3 0 2 9 7]) -> [7 7 7 7 7]", "(multlast [9 7 6]) -> [6 6 6]", "(multlast [6 5 4 2 9]) -> [9 9 9 9 9]", "(multlast [2 1 2 8 9]) -> [9 9 9 9 9]", "(multlast [8 5 4 5 0]) -> [0 0 0 0 0]", "(multlast [1 1 2 0]) -> [0 0 0 0]", "(multlast [3 7 0 4]) -> [4 4 4 4]", "(multlast [5]) -> [5]", "(multlast [5 8]) -> [8 8]", "(multlast [3 1 2 1 1]) -> [1 1 1 1 1]", "(multlast [2 6 0]) -> [0 0 0]", "(multlast [0 7 9 1 7]) -> [7 7 7 7 7]", "(multlast [9 8 2 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [7 7 7 0 8]) -> [8 8 8 8 8]", "(multlast [3 2]) -> [2 2]", "(multlast [9]) -> [9]", "(multlast [0 4]) -> [4 4]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [1 8 2]) -> [2 2 2]", "(multlast [4 2 9 8 7]) -> [7 7 7 7 7]", "(multlast [5 2 1]) -> [1 1 1]", "(multlast [3 9 8 1 7]) -> [7 7 7 7 7]", "(multlast [2 0 8]) -> [8 8 8]", "(multlast [7 9 8 4]) -> [4 4 4 4]", "(multlast [9 6 4 8 3]) -> [3 3 3 3 3]", "(multlast [5 5 8 6]) -> [6 6 6 6]", "(multlast [5 6 6 6]) -> [6 6 6 6]", "(multlast [8 4 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [1 0 2 9 1]) -> [1 1 1 1 1]", "(multlast [3]) -> [3]", "(multlast [9 8]) -> [8 8]", "(multlast [1 3]) -> [3 3]", "(multlast [9 8 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [3 4 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [3 9 5 0 0]) -> [0 0 0 0 0]", "(multlast [9 1 8 5 8]) -> [8 8 8 8 8]", "(multlast [8 2 8 5]) -> [5 5 5 5]"], "time": 0.282043, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [7]) -> [7]", "(multlast [1 8]) -> [8 8]", "(multlast []) -> []", "(multlast [9 2 4 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [3 0]) -> [0 0]", "(multlast [3 2 5]) -> [5 5 5]", "(multlast [7 9 8 2 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [5 7 7]) -> [7 7 7]", "(multlast [9 0]) -> [0 0]", "(multlast [1 7 0 4 4]) -> [4 4 4 4 4]", "(multlast [3 3]) -> [3 3]", "(multlast [5 0]) -> [0 0]", "(multlast []) -> []", "(multlast [0 2 5 6 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [3 7 3 5 4]) -> [4 4 4 4 4]", "(multlast [1 7 6 4 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [1 7 7 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [6 7 6 9 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [9 6 9 0 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [3 4]) -> [4 4]", "(multlast [5 2]) -> [2 2]", "(multlast [0 7]) -> [7 7]", "(multlast [0 4 4 3 0]) -> [0 0 0 0 0]", "(multlast [9 1 0]) -> [0 0 0]", "(multlast [5 9 0]) -> [0 0 0]", "(multlast [6]) -> [6]", "(multlast [9 1 5 5]) -> [5 5 5 5]", "(multlast [1 4 5 8 5]) -> [5 5 5 5 5]", "(multlast [5]) -> [5]", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [7 3 2]) -> [2 2 2]", "(multlast [0 3 0 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [6 5 2]) -> [2 2 2]", "(multlast [2 5 5]) -> [5 5 5]", "(multlast [1 4 5 2 1]) -> [1 1 1 1 1]", "(multlast [7 4 4 9]) -> [9 9 9 9]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [1 4 9]) -> [9 9 9]", "(multlast [0 1]) -> [1 1]", "(multlast [5 4]) -> [4 4]", "(multlast [6 1 3 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [8 0 5]) -> [5 5 5]", "(multlast [8 6 8 9 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [1 0 4]) -> [4 4 4]", "(multlast [7 2 8]) -> [8 8 8]", "(multlast [1 7 9]) -> [9 9 9]", "(multlast [5 0 4]) -> [4 4 4]", "(multlast [3 1]) -> [1 1]", "(multlast [4]) -> [4]", "(multlast [8 4 5]) -> [5 5 5]", "(multlast [0 2]) -> [2 2]", "(multlast [1 7]) -> [7 7]", "(multlast [2 0 9]) -> [9 9 9]", "(multlast [8]) -> [8]", "(multlast [8 4 3 4]) -> [4 4 4 4]", "(multlast [3]) -> [3]", "(multlast [1 8 9 7]) -> [7 7 7 7]", "(multlast [7 7 9 1]) -> [1 1 1 1]", "(multlast [3 6 5 7 4]) -> [4 4 4 4 4]"], "time": 0.253677, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 2 5 9]) -> [9 9 9 9]", "(multlast [7 3]) -> [3 3]", "(multlast [4 1]) -> [1 1]", "(multlast [9 7 0]) -> [0 0 0]", "(multlast [5 0]) -> [0 0]", "(multlast []) -> []", "(multlast [4 2 3 1 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [1 8 1 1 2]) -> [2 2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [7 1 5 0]) -> [0 0 0 0]", "(multlast [7 3 2 5]) -> [5 5 5 5]", "(multlast [2 3 2 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [9 3 6 3 6]) -> [6 6 6 6 6]", "(multlast [0 4 6]) -> [6 6 6]", "(multlast [5 8 3]) -> [3 3 3]", "(multlast [0 6]) -> [6 6]", "(multlast [2 3 4 4]) -> [4 4 4 4]", "(multlast [1 8 9 9]) -> [9 9 9 9]", "(multlast [9 3 2 8 9]) -> [9 9 9 9 9]", "(multlast [2 5 1 5]) -> [5 5 5 5]", "(multlast [5 9 0 4]) -> [4 4 4 4]", "(multlast [3 1 9 1 0]) -> [0 0 0 0 0]", "(multlast [8 1 1]) -> [1 1 1]", "(multlast [7 0]) -> [0 0]", "(multlast [1 7 8 3 3]) -> [3 3 3 3 3]", "(multlast [3 8 7]) -> [7 7 7]", "(multlast [0 6 5 9 1]) -> [1 1 1 1 1]", "(multlast [8 4 5 4 8]) -> [8 8 8 8 8]", "(multlast [5]) -> [5]", "(multlast [1 9 5 4 7]) -> [7 7 7 7 7]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [8 2]) -> [2 2]", "(multlast [7 4]) -> [4 4]", "(multlast [9 0 6]) -> [6 6 6]", "(multlast [0]) -> [0]", "(multlast [9 7 6 3]) -> [3 3 3 3]", "(multlast [2 5 8 6]) -> [6 6 6 6]", "(multlast [0 6 1]) -> [1 1 1]", "(multlast [8 6 7]) -> [7 7 7]", "(multlast [6]) -> [6]", "(multlast [3 4 8 8 8]) -> [8 8 8 8 8]", "(multlast [1]) -> [1]", "(multlast [5 0 1 6 5]) -> [5 5 5 5 5]", "(multlast [7 1]) -> [1 1]", "(multlast [1 0 3]) -> [3 3 3]", "(multlast [8 1]) -> [1 1]", "(multlast [1]) -> [1]", "(multlast [4 1 5 0]) -> [0 0 0 0]", "(multlast [9 6 5 7 2]) -> [2 2 2 2 2]", "(multlast [7 3 0 9 5]) -> [5 5 5 5 5]", "(multlast [6 3]) -> [3 3]", "(multlast [3]) -> [3]", "(multlast [5 7 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [4 2 3 4 2]) -> [2 2 2 2 2]", "(multlast [3 3 5]) -> [5 5 5]", "(multlast [7 9]) -> [9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 2 0 5]) -> [5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [8 2 0 7 4]) -> [4 4 4 4 4]", "(multlast [1 4 4 5]) -> [5 5 5 5]", "(multlast [0 4]) -> [4 4]", "(multlast [3 8]) -> [8 8]", "(multlast [9 1 8]) -> [8 8 8]", "(multlast [1 9 6 1 7]) -> [7 7 7 7 7]", "(multlast [4 6]) -> [6 6]", "(multlast [5 0 3 4]) -> [4 4 4 4]"], "time": 0.280293, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8]) -> [8]", "(multlast [4 9]) -> [9 9]", "(multlast [8 0 6 4]) -> [4 4 4 4]", "(multlast [7 5 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [7 3 7]) -> [7 7 7]", "(multlast [7]) -> [7]", "(multlast [7 1 3]) -> [3 3 3]", "(multlast [3 9]) -> [9 9]", "(multlast [3 1 5]) -> [5 5 5]", "(multlast [0]) -> [0]", "(multlast [9 5 7]) -> [7 7 7]", "(multlast [2 7 8 8]) -> [8 8 8 8]", "(multlast [9 4 3 4]) -> [4 4 4 4]", "(multlast [0 8]) -> [8 8]", "(multlast [0]) -> [0]", "(multlast [1]) -> [1]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [1 1 7 6 4]) -> [4 4 4 4 4]", "(multlast [8 4]) -> [4 4]", "(multlast [3 5]) -> [5 5]", "(multlast [3 6]) -> [6 6]", "(multlast [3 6 2 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [1 6 4 7]) -> [7 7 7 7]", "(multlast [3 0 4]) -> [4 4 4]", "(multlast [9 1]) -> [1 1]", "(multlast [2 2 3]) -> [3 3 3]", "(multlast [4 2 4]) -> [4 4 4]", "(multlast [8 6 4]) -> [4 4 4]", "(multlast [1 2 4 0 1]) -> [1 1 1 1 1]", "(multlast [0 1 0]) -> [0 0 0]", "(multlast [4 0 5 0 8]) -> [8 8 8 8 8]", "(multlast [8 9 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 8 1 8 1]) -> [1 1 1 1 1]", "(multlast [7 3 0]) -> [0 0 0]", "(multlast [7 4 2]) -> [2 2 2]", "(multlast [9 9 6 0 9]) -> [9 9 9 9 9]", "(multlast [5 5]) -> [5 5]", "(multlast [7]) -> [7]", "(multlast [8 9 7 9]) -> [9 9 9 9]", "(multlast [1 8]) -> [8 8]", "(multlast [7 8]) -> [8 8]", "(multlast [5 5 9 0]) -> [0 0 0 0]", "(multlast [6 6 7]) -> [7 7 7]", "(multlast [9 9 6 8]) -> [8 8 8 8]", "(multlast [0 7 0 3 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [0 6]) -> [6 6]", "(multlast [0]) -> [0]", "(multlast [6 9 4 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [7 6 4 9]) -> [9 9 9 9]", "(multlast [8 4 0 6]) -> [6 6 6 6]", "(multlast [8 6 0 2]) -> [2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [1]) -> [1]", "(multlast [4 2 5]) -> [5 5 5]", "(multlast [6 0 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [2 0 4 3]) -> [3 3 3 3]", "(multlast [6 9 3 4]) -> [4 4 4 4]", "(multlast [2 9 5 6]) -> [6 6 6 6]", "(multlast [5 1]) -> [1 1]", "(multlast [8 4]) -> [4 4]", "(multlast [5 4 7 8 1]) -> [1 1 1 1 1]", "(multlast [8 2 0 5]) -> [5 5 5 5]", "(multlast [7]) -> [7]", "(multlast [4 0 0]) -> [0 0 0]", "(multlast [3 5 8 1 7]) -> [7 7 7 7 7]"], "time": 0.267224, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 0 6 1 6]) -> [6 6 6 6 6]", "(multlast [7 7 4 5]) -> [5 5 5 5]", "(multlast [9 9 2]) -> [2 2 2]", "(multlast [0]) -> [0]", "(multlast [3 6 6 7]) -> [7 7 7 7]", "(multlast [8 7 4 7 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [4 5 5]) -> [5 5 5]", "(multlast [7 6 5 0]) -> [0 0 0 0]", "(multlast [7 2 3 8 7]) -> [7 7 7 7 7]", "(multlast [8 1 7 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [9 7 8]) -> [8 8 8]", "(multlast [4]) -> [4]", "(multlast [5]) -> [5]", "(multlast [1 8 6 1]) -> [1 1 1 1]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [2 4]) -> [4 4]", "(multlast [3 3 7 3 1]) -> [1 1 1 1 1]", "(multlast [1 6 0 4 4]) -> [4 4 4 4 4]", "(multlast [5 4 3 9]) -> [9 9 9 9]", "(multlast [7 2 9 8 1]) -> [1 1 1 1 1]", "(multlast [3 5 5 1 8]) -> [8 8 8 8 8]", "(multlast [7]) -> [7]", "(multlast [5 8 9 8 8]) -> [8 8 8 8 8]", "(multlast [2 0 3 6]) -> [6 6 6 6]", "(multlast [2 2 1 3 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [2 2 8 0 7]) -> [7 7 7 7 7]", "(multlast [2 5 0 5]) -> [5 5 5 5]", "(multlast [4 4]) -> [4 4]", "(multlast []) -> []", "(multlast [3 3 4 1 9]) -> [9 9 9 9 9]", "(multlast [8 3]) -> [3 3]", "(multlast []) -> []", "(multlast [0 8 3 8]) -> [8 8 8 8]", "(multlast [0 8 3 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [0 9 7 6 2]) -> [2 2 2 2 2]", "(multlast [2]) -> [2]", "(multlast [8 9 6 2 5]) -> [5 5 5 5 5]", "(multlast [5 2 3 7 2]) -> [2 2 2 2 2]", "(multlast [0 8 1 1 7]) -> [7 7 7 7 7]", "(multlast [1 5 4 7]) -> [7 7 7 7]", "(multlast [3 2 8 4 3]) -> [3 3 3 3 3]", "(multlast [0 8 8]) -> [8 8 8]", "(multlast [1 9 6 1]) -> [1 1 1 1]", "(multlast [3 0 0]) -> [0 0 0]", "(multlast [8 4 8]) -> [8 8 8]", "(multlast [8 4 0 0 4]) -> [4 4 4 4 4]", "(multlast [5 9 6 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [7 0 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [3 8 3 5]) -> [5 5 5 5]", "(multlast [2]) -> [2]", "(multlast [3 8]) -> [8 8]", "(multlast [7 7 4 8 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 2 3 8]) -> [8 8 8 8]", "(multlast [2]) -> [2]", "(multlast [2]) -> [2]", "(multlast [2]) -> [2]", "(multlast [7 4]) -> [4 4]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [5 8 6]) -> [6 6 6]", "(multlast []) -> []"], "time": 0.284661, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 6 7 2 5]) -> [5 5 5 5 5]", "(multlast [8]) -> [8]", "(multlast [1 6 7]) -> [7 7 7]", "(multlast [2 1 1 4]) -> [4 4 4 4]", "(multlast [5 0 5 1 6]) -> [6 6 6 6 6]", "(multlast [6]) -> [6]", "(multlast [0 7 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [5 9 6]) -> [6 6 6]", "(multlast [6]) -> [6]", "(multlast [4 4 2]) -> [2 2 2]", "(multlast [9 9]) -> [9 9]", "(multlast [4 1 9 9]) -> [9 9 9 9]", "(multlast [1 8 9 5 5]) -> [5 5 5 5 5]", "(multlast [2 1 7 1 2]) -> [2 2 2 2 2]", "(multlast [6]) -> [6]", "(multlast [0 0 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 5 0]) -> [0 0 0]", "(multlast [5 9 0]) -> [0 0 0]", "(multlast [3 9 9 7]) -> [7 7 7 7]", "(multlast [8 7 0 5 4]) -> [4 4 4 4 4]", "(multlast [7 3]) -> [3 3]", "(multlast [0 9 4]) -> [4 4 4]", "(multlast [6]) -> [6]", "(multlast [2]) -> [2]", "(multlast [1 5 5 2 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [1 3 2 3]) -> [3 3 3 3]", "(multlast [4]) -> [4]", "(multlast [4 5]) -> [5 5]", "(multlast [3 1 7 1]) -> [1 1 1 1]", "(multlast [5 4]) -> [4 4]", "(multlast [4 4 4 9]) -> [9 9 9 9]", "(multlast [1 3]) -> [3 3]", "(multlast [3 0 4 2 8]) -> [8 8 8 8 8]", "(multlast [1 7 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [8 3]) -> [3 3]", "(multlast [7 5 0 8]) -> [8 8 8 8]", "(multlast [2 5 5 6 6]) -> [6 6 6 6 6]", "(multlast [0 0 6 1 9]) -> [9 9 9 9 9]", "(multlast [7 4 2 8 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [6 1 1 8]) -> [8 8 8 8]", "(multlast [8 3 1 5]) -> [5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [3 9 4 8]) -> [8 8 8 8]", "(multlast [1 0 8]) -> [8 8 8]", "(multlast [3 2 7 7 9]) -> [9 9 9 9 9]", "(multlast [9 9]) -> [9 9]", "(multlast [3 5]) -> [5 5]", "(multlast [0 9 5 1]) -> [1 1 1 1]", "(multlast [6 8 4 2 3]) -> [3 3 3 3 3]", "(multlast [7 9]) -> [9 9]", "(multlast [0 6 2 0 5]) -> [5 5 5 5 5]", "(multlast [0 1 0]) -> [0 0 0]", "(multlast [8 8 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [9 1 0 2]) -> [2 2 2 2]", "(multlast [0]) -> [0]", "(multlast [3]) -> [3]", "(multlast [1 7 7 4]) -> [4 4 4 4]", "(multlast [4 1]) -> [1 1]", "(multlast [1 3 8]) -> [8 8 8]", "(multlast [2 9 7 4 1]) -> [1 1 1 1 1]", "(multlast [3]) -> [3]", "(multlast [0 2 7 5 7]) -> [7 7 7 7 7]"], "time": 0.260612, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast []) -> []", "(multlast [6 0 7 6 6]) -> [6 6 6 6 6]", "(multlast [9]) -> [9]", "(multlast [2 0 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [3 1]) -> [1 1]", "(multlast [9 7 8]) -> [8 8 8]", "(multlast [1]) -> [1]", "(multlast [4 7 0 3 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [3]) -> [3]", "(multlast [2]) -> [2]", "(multlast [1]) -> [1]", "(multlast [4 7]) -> [7 7]", "(multlast [0 5 5 9]) -> [9 9 9 9]", "(multlast [5]) -> [5]", "(multlast [1 7]) -> [7 7]", "(multlast [7 4 7]) -> [7 7 7]", "(multlast [5 3 2]) -> [2 2 2]", "(multlast [2 4 2 2 6]) -> [6 6 6 6 6]", "(multlast [8 3 9 9]) -> [9 9 9 9]", "(multlast [2 3 5 3]) -> [3 3 3 3]", "(multlast [7 4 8]) -> [8 8 8]", "(multlast [4]) -> [4]", "(multlast [1]) -> [1]", "(multlast [3 5 3]) -> [3 3 3]", "(multlast [2]) -> [2]", "(multlast [4 2]) -> [2 2]", "(multlast [8 5]) -> [5 5]", "(multlast [8 9 6]) -> [6 6 6]", "(multlast [2 0 4 7 4]) -> [4 4 4 4 4]", "(multlast [4 9 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [1 4]) -> [4 4]", "(multlast [3 4 3 0 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [3 8 3 1]) -> [1 1 1 1]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 1 0 8 9]) -> [9 9 9 9 9]", "(multlast [0 7 9 5 7]) -> [7 7 7 7 7]", "(multlast [3]) -> [3]", "(multlast [7 3 4 1]) -> [1 1 1 1]", "(multlast [3 3 7 9]) -> [9 9 9 9]", "(multlast [9 0 3 4 8]) -> [8 8 8 8 8]", "(multlast [7 2 8]) -> [8 8 8]", "(multlast [1 9 9]) -> [9 9 9]", "(multlast [1 5 3 2 3]) -> [3 3 3 3 3]", "(multlast [5 2]) -> [2 2]", "(multlast [1 7 1 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [6 9 0 1 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [2 7 5 6 9]) -> [9 9 9 9 9]", "(multlast [5 5 1 4 5]) -> [5 5 5 5 5]", "(multlast [1 1 6 8]) -> [8 8 8 8]", "(multlast [0 7 9 3 1]) -> [1 1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [5 1 2 6]) -> [6 6 6 6]", "(multlast [0 0 6]) -> [6 6 6]", "(multlast [7 6 2 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 5]) -> [5 5]", "(multlast [5 5 1 8 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [7 3 3 0]) -> [0 0 0 0]", "(multlast [0 0 4 6 5]) -> [5 5 5 5 5]"], "time": 0.301999, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 3 7 0]) -> [0 0 0 0]", "(multlast [5 4]) -> [4 4]", "(multlast [4 9]) -> [9 9]", "(multlast [3 4]) -> [4 4]", "(multlast [3 1]) -> [1 1]", "(multlast []) -> []", "(multlast [4 9 6 8]) -> [8 8 8 8]", "(multlast [0 7]) -> [7 7]", "(multlast [9 4 3 6]) -> [6 6 6 6]", "(multlast [7 0]) -> [0 0]", "(multlast [1 0]) -> [0 0]", "(multlast [9 1]) -> [1 1]", "(multlast [5 4 4 6 7]) -> [7 7 7 7 7]", "(multlast [6]) -> [6]", "(multlast [2 5 2]) -> [2 2 2]", "(multlast [4 9 0 2]) -> [2 2 2 2]", "(multlast [9]) -> [9]", "(multlast [3 7 9 9 0]) -> [0 0 0 0 0]", "(multlast [9]) -> [9]", "(multlast [2 9 6 5]) -> [5 5 5 5]", "(multlast [7 7]) -> [7 7]", "(multlast [4]) -> [4]", "(multlast [0 3]) -> [3 3]", "(multlast [6]) -> [6]", "(multlast [8]) -> [8]", "(multlast [1]) -> [1]", "(multlast [6 3 6 1 8]) -> [8 8 8 8 8]", "(multlast [6 9]) -> [9 9]", "(multlast [7 7 9 8 1]) -> [1 1 1 1 1]", "(multlast [4 6]) -> [6 6]", "(multlast [6 7 2]) -> [2 2 2]", "(multlast [3]) -> [3]", "(multlast [3 5]) -> [5 5]", "(multlast [3 8 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [9 0 3 8]) -> [8 8 8 8]", "(multlast [0 2 5 5 6]) -> [6 6 6 6 6]", "(multlast [8 4]) -> [4 4]", "(multlast [0 6 6 1 7]) -> [7 7 7 7 7]", "(multlast [4 2]) -> [2 2]", "(multlast [0 9 1]) -> [1 1 1]", "(multlast [8]) -> [8]", "(multlast [2 9 4 3]) -> [3 3 3 3]", "(multlast [3]) -> [3]", "(multlast [4 9 3 1]) -> [1 1 1 1]", "(multlast [3 3 8]) -> [8 8 8]", "(multlast [7 1 1]) -> [1 1 1]", "(multlast [6]) -> [6]", "(multlast [9 0 4]) -> [4 4 4]", "(multlast [1 3 5 4 3]) -> [3 3 3 3 3]", "(multlast [8 0]) -> [0 0]", "(multlast []) -> []", "(multlast [6 4 8]) -> [8 8 8]", "(multlast [7 1 4 0 1]) -> [1 1 1 1 1]", "(multlast [2 6 5 8]) -> [8 8 8 8]", "(multlast [0 7 8 0]) -> [0 0 0 0]", "(multlast [7 4 8 6]) -> [6 6 6 6]", "(multlast [3 5 5 7 0]) -> [0 0 0 0 0]", "(multlast [2 8]) -> [8 8]", "(multlast [8 4 0 7 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [4 9 5]) -> [5 5 5]", "(multlast [1]) -> [1]", "(multlast [8 8]) -> [8 8]", "(multlast [2 3 5 8]) -> [8 8 8 8]", "(multlast [0]) -> [0]", "(multlast [1]) -> [1]", "(multlast [2 3 7 3]) -> [3 3 3 3]", "(multlast [8]) -> [8]", "(multlast [7 2 2]) -> [2 2 2]", "(multlast [1 3 8 3 9]) -> [9 9 9 9 9]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [3 2 3]) -> [3 3 3]"], "time": 0.258183, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5]) -> [5]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [9 4 1]) -> [1 1 1]", "(multlast [9 6 3 8]) -> [8 8 8 8]", "(multlast [5 9 0 7 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [0 1]) -> [1 1]", "(multlast [5 2 9 0 0]) -> [0 0 0 0 0]", "(multlast [1 9 6 2]) -> [2 2 2 2]", "(multlast [5 9 3 8 5]) -> [5 5 5 5 5]", "(multlast [5 4]) -> [4 4]", "(multlast [6]) -> [6]", "(multlast [6 5]) -> [5 5]", "(multlast [9 3 2 3 1]) -> [1 1 1 1 1]", "(multlast [6 5]) -> [5 5]", "(multlast [2 1 8 2]) -> [2 2 2 2]", "(multlast [4 6 9 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [8 6 2 3]) -> [3 3 3 3]", "(multlast [8 7 8 5 4]) -> [4 4 4 4 4]", "(multlast [7 8 6 3 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 7 9]) -> [9 9 9]", "(multlast [4]) -> [4]", "(multlast [7 9 7 4 2]) -> [2 2 2 2 2]", "(multlast [8 5]) -> [5 5]", "(multlast [0 5 6 0 6]) -> [6 6 6 6 6]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [4 9 0 5 8]) -> [8 8 8 8 8]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [7 7 5]) -> [5 5 5]", "(multlast [8 0 2]) -> [2 2 2]", "(multlast [9 3]) -> [3 3]", "(multlast []) -> []", "(multlast [1 9 3 6 0]) -> [0 0 0 0 0]", "(multlast [9 6 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [9 9]) -> [9 9]", "(multlast [6]) -> [6]", "(multlast [1 4 5 4]) -> [4 4 4 4]", "(multlast [8 5 8 6]) -> [6 6 6 6]", "(multlast [9 7 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [4 8 3 4 9]) -> [9 9 9 9 9]", "(multlast [3 8 9]) -> [9 9 9]", "(multlast [4 9 7]) -> [7 7 7]", "(multlast [9 7 3 1 7]) -> [7 7 7 7 7]", "(multlast [0 1 4 2 7]) -> [7 7 7 7 7]", "(multlast [7]) -> [7]", "(multlast [2 1 0]) -> [0 0 0]", "(multlast [6 1 8]) -> [8 8 8]", "(multlast [9 4 1 6]) -> [6 6 6 6]", "(multlast [7 3 1 5 5]) -> [5 5 5 5 5]", "(multlast [9 3 7 2]) -> [2 2 2 2]", "(multlast [1 7 7 8 9]) -> [9 9 9 9 9]", "(multlast [2 6 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [4 1 7 8]) -> [8 8 8 8]", "(multlast [0 3 0 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [3 3]) -> [3 3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 9 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [8 1 6 0 5]) -> [5 5 5 5 5]", "(multlast [2 8 2 2 6]) -> [6 6 6 6 6]", "(multlast [0 1 2 5]) -> [5 5 5 5]", "(multlast [9 4 5 9]) -> [9 9 9 9]"], "time": 0.242755, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [1]) -> [1]", "(multlast [7 1]) -> [1 1]", "(multlast [8 7]) -> [7 7]", "(multlast [6 4 4 7 4]) -> [4 4 4 4 4]", "(multlast [4]) -> [4]", "(multlast [0 6 0 9 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 1 9 6]) -> [6 6 6 6]", "(multlast [7 7 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [4 6 9 3]) -> [3 3 3 3]", "(multlast [8]) -> [8]", "(multlast [4 8 2 1]) -> [1 1 1 1]", "(multlast [9 8]) -> [8 8]", "(multlast [6 3]) -> [3 3]", "(multlast [6 9 0]) -> [0 0 0]", "(multlast [5 4 0 2 8]) -> [8 8 8 8 8]", "(multlast [2]) -> [2]", "(multlast [1 0]) -> [0 0]", "(multlast [4]) -> [4]", "(multlast [6 9]) -> [9 9]", "(multlast [5 2]) -> [2 2]", "(multlast []) -> []", "(multlast [2 1 1]) -> [1 1 1]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [8 1 6]) -> [6 6 6]", "(multlast [4 3 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [7 3 1]) -> [1 1 1]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [6 1]) -> [1 1]", "(multlast [6 5 9]) -> [9 9 9]", "(multlast [3 1 1]) -> [1 1 1]", "(multlast [3 9]) -> [9 9]", "(multlast [7 3]) -> [3 3]", "(multlast [0 9 4]) -> [4 4 4]", "(multlast [3]) -> [3]", "(multlast [3]) -> [3]", "(multlast [4 6 6 9 7]) -> [7 7 7 7 7]", "(multlast [5 4 5]) -> [5 5 5]", "(multlast [6 3 9 7 6]) -> [6 6 6 6 6]", "(multlast [7 5 4]) -> [4 4 4]", "(multlast [6 2 2 9 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [5 9 6 0 4]) -> [4 4 4 4 4]", "(multlast [6 5]) -> [5 5]", "(multlast [2 4 4]) -> [4 4 4]", "(multlast [9 7 1]) -> [1 1 1]", "(multlast [7]) -> [7]", "(multlast [9 4 1 1 5]) -> [5 5 5 5 5]", "(multlast [3 6]) -> [6 6]", "(multlast [9 3 6 4 6]) -> [6 6 6 6 6]", "(multlast [9 1]) -> [1 1]", "(multlast [9 9 8]) -> [8 8 8]", "(multlast [6 0 5 1]) -> [1 1 1 1]", "(multlast [4 3 0]) -> [0 0 0]", "(multlast [9 6 6 7 4]) -> [4 4 4 4 4]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [7 5 7]) -> [7 7 7]", "(multlast [8]) -> [8]", "(multlast [4 3 8 7 6]) -> [6 6 6 6 6]", "(multlast [0 1 4 5]) -> [5 5 5 5]", "(multlast [2 6 0]) -> [0 0 0]", "(multlast [4 0 1 8]) -> [8 8 8 8]", "(multlast [2 8 4 2]) -> [2 2 2 2]"], "time": 0.226746, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [1 5 0 6]) -> [6 6 6 6]", "(multlast [7]) -> [7]", "(multlast [4 8 6 2 2]) -> [2 2 2 2 2]", "(multlast [4 3 8]) -> [8 8 8]", "(multlast [5 0 3 3]) -> [3 3 3 3]", "(multlast [3 2 7 6 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 5 0 8 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 5]) -> [5 5]", "(multlast [2 1 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [7 4]) -> [4 4]", "(multlast []) -> []", "(multlast [0 6 3 2 2]) -> [2 2 2 2 2]", "(multlast [8 8 1 3 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [0 1]) -> [1 1]", "(multlast [2 8]) -> [8 8]", "(multlast [6 7 1 7 4]) -> [4 4 4 4 4]", "(multlast [0 6 6 2 5]) -> [5 5 5 5 5]", "(multlast [1 4 1 0]) -> [0 0 0 0]", "(multlast [2]) -> [2]", "(multlast [9 5 4 3]) -> [3 3 3 3]", "(multlast [3 6 1 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [8 5 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [6]) -> [6]", "(multlast [5 6 1 7]) -> [7 7 7 7]", "(multlast [4 2 0 0]) -> [0 0 0 0]", "(multlast [1]) -> [1]", "(multlast [0 2]) -> [2 2]", "(multlast [5 7 4]) -> [4 4 4]", "(multlast [9 5]) -> [5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 3 1]) -> [1 1 1]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [4 5 1]) -> [1 1 1]", "(multlast [7 0 8 7 3]) -> [3 3 3 3 3]", "(multlast [8 9 6 6]) -> [6 6 6 6]", "(multlast [5 1 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [6 5]) -> [5 5]", "(multlast [7 7]) -> [7 7]", "(multlast [2 3 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [4 2 4 1]) -> [1 1 1 1]", "(multlast [5 7]) -> [7 7]", "(multlast [7 0]) -> [0 0]", "(multlast [7]) -> [7]", "(multlast [9]) -> [9]", "(multlast [3]) -> [3]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [9 4 2 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [0 8 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 3 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 3]) -> [3 3]"], "time": 0.233666, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 2]) -> [2 2]", "(multlast [9 5 9]) -> [9 9 9]", "(multlast [8 1 9]) -> [9 9 9]", "(multlast [8 1 8 5 4]) -> [4 4 4 4 4]", "(multlast [5 4]) -> [4 4]", "(multlast [1 3 2 9 5]) -> [5 5 5 5 5]", "(multlast [8 5]) -> [5 5]", "(multlast [2 8 3 3]) -> [3 3 3 3]", "(multlast [1 0]) -> [0 0]", "(multlast [5 0]) -> [0 0]", "(multlast [9 8]) -> [8 8]", "(multlast [5 1 3]) -> [3 3 3]", "(multlast [2]) -> [2]", "(multlast [1 5 8 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [5 9 1 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [7 9 0 9 2]) -> [2 2 2 2 2]", "(multlast [2 1]) -> [1 1]", "(multlast []) -> []", "(multlast [5 8 0 7 2]) -> [2 2 2 2 2]", "(multlast [7 3 0]) -> [0 0 0]", "(multlast [9 9 3 5 0]) -> [0 0 0 0 0]", "(multlast [7 9]) -> [9 9]", "(multlast [1 4 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 4]) -> [4 4]", "(multlast [1]) -> [1]", "(multlast [5 1 1 2]) -> [2 2 2 2]", "(multlast [4]) -> [4]", "(multlast [1 6 3 3]) -> [3 3 3 3]", "(multlast [6 7 1 4 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 9 4]) -> [4 4 4]", "(multlast [1]) -> [1]", "(multlast [0 8 6 4]) -> [4 4 4 4]", "(multlast [6 5]) -> [5 5]", "(multlast [7 9]) -> [9 9]", "(multlast [1 2]) -> [2 2]", "(multlast [2 2]) -> [2 2]", "(multlast []) -> []", "(multlast [6 5]) -> [5 5]", "(multlast [3 0 8 1 4]) -> [4 4 4 4 4]", "(multlast [1 3]) -> [3 3]", "(multlast [0 0 5 0 5]) -> [5 5 5 5 5]", "(multlast [6 0 2]) -> [2 2 2]", "(multlast [5 9 9 8 8]) -> [8 8 8 8 8]", "(multlast [8 3 5 5 1]) -> [1 1 1 1 1]", "(multlast [0 9]) -> [9 9]", "(multlast [7]) -> [7]", "(multlast [8 1]) -> [1 1]", "(multlast [3 8 8 6 6]) -> [6 6 6 6 6]", "(multlast [6]) -> [6]", "(multlast [0 2]) -> [2 2]", "(multlast [1]) -> [1]", "(multlast [0 2]) -> [2 2]", "(multlast [4 1 8]) -> [8 8 8]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [2 7 3]) -> [3 3 3]", "(multlast [8 7 8 0 9]) -> [9 9 9 9 9]", "(multlast [5 3 7]) -> [7 7 7]", "(multlast [5 7 3 7]) -> [7 7 7 7]", "(multlast [1 0 5 8 1]) -> [1 1 1 1 1]", "(multlast [0 2 4]) -> [4 4 4]", "(multlast [7 1 4 8 3]) -> [3 3 3 3 3]", "(multlast [2 7]) -> [7 7]", "(multlast [1 3 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 8 3]) -> [3 3 3]"], "time": 0.25493, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 6 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [5 6]) -> [6 6]", "(multlast [9 9 6]) -> [6 6 6]", "(multlast [6 7]) -> [7 7]", "(multlast [1]) -> [1]", "(multlast [5 5]) -> [5 5]", "(multlast [6 6 4]) -> [4 4 4]", "(multlast [7 9 4 6 5]) -> [5 5 5 5 5]", "(multlast [4]) -> [4]", "(multlast [0 8 4]) -> [4 4 4]", "(multlast [8 6]) -> [6 6]", "(multlast [4 6 3 6]) -> [6 6 6 6]", "(multlast [0 4]) -> [4 4]", "(multlast [7 6 3 2 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [7 5 5 1 1]) -> [1 1 1 1 1]", "(multlast [6 6]) -> [6 6]", "(multlast [2]) -> [2]", "(multlast [9 8]) -> [8 8]", "(multlast [7 5 1 3 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [1 9 6 6]) -> [6 6 6 6]", "(multlast [5 1 9]) -> [9 9 9]", "(multlast [9 7 9 1 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [1 5 6 0]) -> [0 0 0 0]", "(multlast [1 1 3 3 5]) -> [5 5 5 5 5]", "(multlast [5]) -> [5]", "(multlast [6 3 4]) -> [4 4 4]", "(multlast [9 1 9 9 7]) -> [7 7 7 7 7]", "(multlast [8 3]) -> [3 3]", "(multlast [2]) -> [2]", "(multlast [0 9 3]) -> [3 3 3]", "(multlast [3 1 2 0]) -> [0 0 0 0]", "(multlast [8 5 2 3 2]) -> [2 2 2 2 2]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [2 8]) -> [8 8]", "(multlast [0 6 7]) -> [7 7 7]", "(multlast [2 6 4 9]) -> [9 9 9 9]", "(multlast [2 1 2 0]) -> [0 0 0 0]", "(multlast [0 0]) -> [0 0]", "(multlast [5 7 0 4]) -> [4 4 4 4]", "(multlast [8 2]) -> [2 2]", "(multlast [9 3 2 1 1]) -> [1 1 1 1 1]", "(multlast [9 4 4]) -> [4 4 4]", "(multlast [4 2 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [3]) -> [3]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [6 0]) -> [0 0]", "(multlast [7 6]) -> [6 6]", "(multlast [1]) -> [1]", "(multlast [4 0]) -> [0 0]", "(multlast [7 5]) -> [5 5]", "(multlast [7 5 6 7]) -> [7 7 7 7]", "(multlast [5 5]) -> [5 5]", "(multlast []) -> []", "(multlast [9 6 4 3]) -> [3 3 3 3]", "(multlast [1 1 8]) -> [8 8 8]", "(multlast [3 7 6 0]) -> [0 0 0 0]", "(multlast [0 7]) -> [7 7]", "(multlast [6 9 6 8]) -> [8 8 8 8]", "(multlast [6 4 2 6]) -> [6 6 6 6]", "(multlast [3 1 9 3 8]) -> [8 8 8 8 8]", "(multlast [0 5]) -> [5 5]", "(multlast [3 4 0 5 7]) -> [7 7 7 7 7]", "(multlast [4 4 1 7]) -> [7 7 7 7]", "(multlast [1 4]) -> [4 4]", "(multlast [8 0 5 8]) -> [8 8 8 8]", "(multlast [9 7 2 8 8]) -> [8 8 8 8 8]"], "time": 0.218962, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 5 7 8]) -> [8 8 8 8]", "(multlast [0 6]) -> [6 6]", "(multlast [4 9 2]) -> [2 2 2]", "(multlast [3 5 6 6]) -> [6 6 6 6]", "(multlast [4 2 8 2]) -> [2 2 2 2]", "(multlast [3]) -> [3]", "(multlast [2 2 2 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [0 8 5]) -> [5 5 5]", "(multlast [3 6]) -> [6 6]", "(multlast [8 9 7]) -> [7 7 7]", "(multlast [6 9 4 1 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [1 7 3]) -> [3 3 3]", "(multlast [8 8]) -> [8 8]", "(multlast [0 3 9 5]) -> [5 5 5 5]", "(multlast [2 3 1]) -> [1 1 1]", "(multlast [5 9 0 1]) -> [1 1 1 1]", "(multlast [3 3 6 2]) -> [2 2 2 2]", "(multlast [6 1 1]) -> [1 1 1]", "(multlast [7 9 5 7 7]) -> [7 7 7 7 7]", "(multlast [8 1 1 2 0]) -> [0 0 0 0 0]", "(multlast [0 9]) -> [9 9]", "(multlast [5 4 6 6]) -> [6 6 6 6]", "(multlast [5 0]) -> [0 0]", "(multlast [9 2 0 2 4]) -> [4 4 4 4 4]", "(multlast [7 4]) -> [4 4]", "(multlast [6 8 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [8 7 4 3]) -> [3 3 3 3]", "(multlast [5 0]) -> [0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [0 7]) -> [7 7]", "(multlast [2]) -> [2]", "(multlast [9 6 3 8]) -> [8 8 8 8]", "(multlast [8 0 0 9]) -> [9 9 9 9]", "(multlast [2 6]) -> [6 6]", "(multlast [8 4 8 2]) -> [2 2 2 2]", "(multlast [2 0 4 5]) -> [5 5 5 5]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [1 0 7 8]) -> [8 8 8 8]", "(multlast [0 3 4 9 1]) -> [1 1 1 1 1]", "(multlast [8 2]) -> [2 2]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [4 9]) -> [9 9]", "(multlast [5 0 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [2 3 2 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [8 9 8 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [9 0 5]) -> [5 5 5]", "(multlast [2 7 7 2 1]) -> [1 1 1 1 1]", "(multlast [1 2 7 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [8 5 2 7]) -> [7 7 7 7]", "(multlast [4 9 3 1 3]) -> [3 3 3 3 3]", "(multlast [7 6 0]) -> [0 0 0]", "(multlast [6 8 9]) -> [9 9 9]", "(multlast [8]) -> [8]", "(multlast [0 6 7 7]) -> [7 7 7 7]", "(multlast [2 1 5 5]) -> [5 5 5 5]", "(multlast [8 3]) -> [3 3]", "(multlast [0 1 5 1 5]) -> [5 5 5 5 5]"], "time": 0.273034, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 8]) -> [8 8]", "(multlast [1 8 5 0]) -> [0 0 0 0]", "(multlast [4 5]) -> [5 5]", "(multlast [8 8 5 2]) -> [2 2 2 2]", "(multlast [2 3 8 2 9]) -> [9 9 9 9 9]", "(multlast [1 5 0 2]) -> [2 2 2 2]", "(multlast [2 0 8 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [1 8 3 7]) -> [7 7 7 7]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [8 8 4 8 7]) -> [7 7 7 7 7]", "(multlast [9 3 7 1 8]) -> [8 8 8 8 8]", "(multlast [7 7 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [8 3 1 9]) -> [9 9 9 9]", "(multlast [0 7 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 1 3 2 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [2 6 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [5 3 1 7 2]) -> [2 2 2 2 2]", "(multlast [0 4]) -> [4 4]", "(multlast [9 7 7]) -> [7 7 7]", "(multlast [0 2 8 0]) -> [0 0 0 0]", "(multlast [4 7]) -> [7 7]", "(multlast [4 4]) -> [4 4]", "(multlast [9 7]) -> [7 7]", "(multlast [9 7 5 5 3]) -> [3 3 3 3 3]", "(multlast [4 6]) -> [6 6]", "(multlast [5 3 0]) -> [0 0 0]", "(multlast [3 5]) -> [5 5]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 1 6 1 0]) -> [0 0 0 0 0]", "(multlast [9 2 6 0 2]) -> [2 2 2 2 2]", "(multlast [0 2 6]) -> [6 6 6]", "(multlast [9]) -> [9]", "(multlast [6 0 2]) -> [2 2 2]", "(multlast [6]) -> [6]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [4 6 0 2 4]) -> [4 4 4 4 4]", "(multlast [0 9]) -> [9 9]", "(multlast []) -> []", "(multlast [2 0]) -> [0 0]", "(multlast [1 8 4 1]) -> [1 1 1 1]", "(multlast [4 8]) -> [8 8]", "(multlast [0 8]) -> [8 8]", "(multlast [7 5 4]) -> [4 4 4]", "(multlast [3 4]) -> [4 4]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [3 9]) -> [9 9]", "(multlast [5 3]) -> [3 3]", "(multlast [3]) -> [3]", "(multlast [7]) -> [7]", "(multlast [3 3 2 3]) -> [3 3 3 3]", "(multlast [3 4 9 1]) -> [1 1 1 1]", "(multlast [7 8 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 0]) -> [0 0]", "(multlast [1 5 5]) -> [5 5 5]", "(multlast [5 4 7]) -> [7 7 7]", "(multlast [6 9 8]) -> [8 8 8]", "(multlast [3 4 1]) -> [1 1 1]"], "time": 0.266553, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [9 1 4 3]) -> [3 3 3 3]", "(multlast [6 1 8 0 1]) -> [1 1 1 1 1]", "(multlast [7 1 1 0]) -> [0 0 0 0]", "(multlast [9 4]) -> [4 4]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [7 5 0]) -> [0 0 0]", "(multlast [6]) -> [6]", "(multlast [0]) -> [0]", "(multlast [3 8 5 4 5]) -> [5 5 5 5 5]", "(multlast [0 6 8 5]) -> [5 5 5 5]", "(multlast [1 0]) -> [0 0]", "(multlast [0 6 7 7]) -> [7 7 7 7]", "(multlast [2 6]) -> [6 6]", "(multlast [4 5 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [7 9 3 6 6]) -> [6 6 6 6 6]", "(multlast [2 2]) -> [2 2]", "(multlast [2 5 1 2 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [3 5 0 5]) -> [5 5 5 5]", "(multlast [5 4]) -> [4 4]", "(multlast [4 2 0]) -> [0 0 0]", "(multlast [6 2]) -> [2 2]", "(multlast [4 9 2 6]) -> [6 6 6 6]", "(multlast [8 7 1]) -> [1 1 1]", "(multlast [6]) -> [6]", "(multlast [5 5]) -> [5 5]", "(multlast []) -> []", "(multlast [4 7 6 0]) -> [0 0 0 0]", "(multlast [4 3 5 6]) -> [6 6 6 6]", "(multlast [2 4]) -> [4 4]", "(multlast [0 9 6 2]) -> [2 2 2 2]", "(multlast [5 6 1]) -> [1 1 1]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [4 2 7 3]) -> [3 3 3 3]", "(multlast [2 6 6]) -> [6 6 6]", "(multlast [1 6 5 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [5 8 2 6]) -> [6 6 6 6]", "(multlast [7 9]) -> [9 9]", "(multlast [5 4]) -> [4 4]", "(multlast [0 5 1 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [1]) -> [1]", "(multlast [7]) -> [7]", "(multlast [1 4 6 4 7]) -> [7 7 7 7 7]", "(multlast [8 1 8 0]) -> [0 0 0 0]", "(multlast [4]) -> [4]", "(multlast [0 8]) -> [8 8]", "(multlast [0 7]) -> [7 7]", "(multlast [3 5 7 8]) -> [8 8 8 8]", "(multlast [0 0 6]) -> [6 6 6]", "(multlast [2 8 9 9]) -> [9 9 9 9]", "(multlast [6 9 0]) -> [0 0 0]", "(multlast [1 9 4 7 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [9 5 1]) -> [1 1 1]", "(multlast [8 2]) -> [2 2]", "(multlast [4 1]) -> [1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 1]) -> [1 1]", "(multlast [0 5 0 9]) -> [9 9 9 9]", "(multlast [0 5 1]) -> [1 1 1]", "(multlast [0 6]) -> [6 6]", "(multlast [5 1 7 7 1]) -> [1 1 1 1 1]", "(multlast [7 1 5]) -> [5 5 5]", "(multlast [2 9 7]) -> [7 7 7]", "(multlast [5 4 5 5]) -> [5 5 5 5]", "(multlast [4 5]) -> [5 5]", "(multlast [0 5 9]) -> [9 9 9]"], "time": 0.232066, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2]) -> [2]", "(multlast [6 9 0]) -> [0 0 0]", "(multlast [3]) -> [3]", "(multlast [8 0]) -> [0 0]", "(multlast [2 6]) -> [6 6]", "(multlast []) -> []", "(multlast [5 3 6 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [7 0 7 6]) -> [6 6 6 6]", "(multlast [3 0 1 6]) -> [6 6 6 6]", "(multlast [5 4 7]) -> [7 7 7]", "(multlast [0 5]) -> [5 5]", "(multlast [0 0 4 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [8 6]) -> [6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [1 4]) -> [4 4]", "(multlast [4]) -> [4]", "(multlast [5 3]) -> [3 3]", "(multlast [7 3 4 2]) -> [2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [8 7 3 4 8]) -> [8 8 8 8 8]", "(multlast [6 4]) -> [4 4]", "(multlast [0 5 5 4 6]) -> [6 6 6 6 6]", "(multlast [5 3 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [6 3 3 2]) -> [2 2 2 2]", "(multlast [0]) -> [0]", "(multlast [5 3]) -> [3 3]", "(multlast [5 2 1 8]) -> [8 8 8 8]", "(multlast [0 2]) -> [2 2]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [8 2 9 5 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [2 5]) -> [5 5]", "(multlast [7 6]) -> [6 6]", "(multlast [3 1]) -> [1 1]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [7 7 5 6 7]) -> [7 7 7 7 7]", "(multlast [0]) -> [0]", "(multlast [1 6 5 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [8 0 7 1 7]) -> [7 7 7 7 7]", "(multlast [6 8 8 5]) -> [5 5 5 5]", "(multlast [2 1 3 0 6]) -> [6 6 6 6 6]", "(multlast [3]) -> [3]", "(multlast [8 8 6 5 0]) -> [0 0 0 0 0]", "(multlast [0]) -> [0]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [6 2]) -> [2 2]", "(multlast [0 7]) -> [7 7]", "(multlast [8 2 7 5]) -> [5 5 5 5]", "(multlast [1 3 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [4 2 7]) -> [7 7 7]", "(multlast [3 9]) -> [9 9]", "(multlast [7 0 6 7 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [9 0 1]) -> [1 1 1]", "(multlast [7 4]) -> [4 4]", "(multlast [8]) -> [8]", "(multlast [7 2 3]) -> [3 3 3]", "(multlast [9 6]) -> [6 6]", "(multlast [7]) -> [7]", "(multlast [4 4]) -> [4 4]", "(multlast []) -> []"], "time": 0.242703, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 2 8 4 8]) -> [8 8 8 8 8]", "(multlast [1 8 2 7]) -> [7 7 7 7]", "(multlast [5]) -> [5]", "(multlast [7 5 7]) -> [7 7 7]", "(multlast [8 0 9]) -> [9 9 9]", "(multlast [2 9]) -> [9 9]", "(multlast [3 4]) -> [4 4]", "(multlast [9]) -> [9]", "(multlast [1 2 6]) -> [6 6 6]", "(multlast [9 7 7]) -> [7 7 7]", "(multlast [0 5]) -> [5 5]", "(multlast [9 2 0 3 3]) -> [3 3 3 3 3]", "(multlast [0 9 4]) -> [4 4 4]", "(multlast [9 8 7 4]) -> [4 4 4 4]", "(multlast [2 7 0 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [7 2 8]) -> [8 8 8]", "(multlast [2 3 1]) -> [1 1 1]", "(multlast [2 1 9 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [7 0 0 6 4]) -> [4 4 4 4 4]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [0 4 6]) -> [6 6 6]", "(multlast [4]) -> [4]", "(multlast [3 8 0 0 1]) -> [1 1 1 1 1]", "(multlast [4 8]) -> [8 8]", "(multlast [4]) -> [4]", "(multlast [1 6 9]) -> [9 9 9]", "(multlast [7 5 0 8 2]) -> [2 2 2 2 2]", "(multlast [6]) -> [6]", "(multlast [2 3 8]) -> [8 8 8]", "(multlast [6 8 9]) -> [9 9 9]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [2 9 8]) -> [8 8 8]", "(multlast [5 4]) -> [4 4]", "(multlast [1]) -> [1]", "(multlast [7]) -> [7]", "(multlast [8 8 0 2 6]) -> [6 6 6 6 6]", "(multlast [8 3 0 0]) -> [0 0 0 0]", "(multlast [5 2 0 1 1]) -> [1 1 1 1 1]", "(multlast [3 7 9 9 0]) -> [0 0 0 0 0]", "(multlast [6 7 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [5 2 2 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 7 6 0 3]) -> [3 3 3 3 3]", "(multlast [7 9 1 1]) -> [1 1 1 1]", "(multlast [3 8 0 0 4]) -> [4 4 4 4 4]", "(multlast [9 7]) -> [7 7]", "(multlast [2 3 3]) -> [3 3 3]", "(multlast [7 4 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [7 8]) -> [8 8]", "(multlast [3 7 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [1 4]) -> [4 4]", "(multlast [7 4 3 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [7 1 6 5 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [5 5 2 7 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [5 2 2 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [1 0 5 7]) -> [7 7 7 7]", "(multlast [1]) -> [1]", "(multlast [2 9 3 0 0]) -> [0 0 0 0 0]", "(multlast [0 8 4]) -> [4 4 4]"], "time": 0.233323, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8]) -> [8]", "(multlast [8 2 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [2 1 4 7]) -> [7 7 7 7]", "(multlast [3]) -> [3]", "(multlast [1 9 6 2 5]) -> [5 5 5 5 5]", "(multlast [2 8]) -> [8 8]", "(multlast [3 8]) -> [8 8]", "(multlast [9]) -> [9]", "(multlast [4 4 5 6 6]) -> [6 6 6 6 6]", "(multlast [0 7]) -> [7 7]", "(multlast [6 8 0]) -> [0 0 0]", "(multlast [4 2 7 0 8]) -> [8 8 8 8 8]", "(multlast [4 3 6 1 9]) -> [9 9 9 9 9]", "(multlast [4 4 3 5 8]) -> [8 8 8 8 8]", "(multlast [0 3 4 3 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 0]) -> [0 0]", "(multlast []) -> []", "(multlast [7 4]) -> [4 4]", "(multlast [1 8 7 1 8]) -> [8 8 8 8 8]", "(multlast [4 3 9 0]) -> [0 0 0 0]", "(multlast [7 0 0]) -> [0 0 0]", "(multlast [9 0 1]) -> [1 1 1]", "(multlast [4 3 4 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [6 7 7]) -> [7 7 7]", "(multlast [2 9]) -> [9 9]", "(multlast [2]) -> [2]", "(multlast [7]) -> [7]", "(multlast [0 5]) -> [5 5]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [6]) -> [6]", "(multlast [8 0 6]) -> [6 6 6]", "(multlast [3]) -> [3]", "(multlast [9]) -> [9]", "(multlast [6]) -> [6]", "(multlast [7 7 9 1 0]) -> [0 0 0 0 0]", "(multlast [5]) -> [5]", "(multlast [8]) -> [8]", "(multlast [9 8 0 9 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [1 2 2]) -> [2 2 2]", "(multlast [5 9 6 8 9]) -> [9 9 9 9 9]", "(multlast [0 1 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [8 7]) -> [7 7]", "(multlast [7 3 3 9 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [0 6 5 3 2]) -> [2 2 2 2 2]", "(multlast [4]) -> [4]", "(multlast [1 2 7 1]) -> [1 1 1 1]", "(multlast [9 0 9]) -> [9 9 9]", "(multlast [0 7 5 4]) -> [4 4 4 4]", "(multlast [6 4 8]) -> [8 8 8]", "(multlast [7 8]) -> [8 8]", "(multlast []) -> []", "(multlast [0 3]) -> [3 3]", "(multlast [6 5]) -> [5 5]", "(multlast [8 5]) -> [5 5]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [1 7 9 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [4 6 2 8]) -> [8 8 8 8]", "(multlast [4 0 7 5 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [4 7 1 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [1]) -> [1]"], "time": 0.252597, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [1 6 6 4]) -> [4 4 4 4]", "(multlast [0 2 7 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [3 1 7 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [7 7]) -> [7 7]", "(multlast [0 4 7]) -> [7 7 7]", "(multlast [1 3 5 5 0]) -> [0 0 0 0 0]", "(multlast [5 2]) -> [2 2]", "(multlast []) -> []", "(multlast [8 9]) -> [9 9]", "(multlast [6 1 3 3 6]) -> [6 6 6 6 6]", "(multlast [2]) -> [2]", "(multlast [9 5 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [3 6]) -> [6 6]", "(multlast [1 2 3]) -> [3 3 3]", "(multlast [9 2 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [7 9]) -> [9 9]", "(multlast [8 3]) -> [3 3]", "(multlast [6 1 3 3]) -> [3 3 3 3]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [1 6 7 0]) -> [0 0 0 0]", "(multlast [9 8 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 6]) -> [6 6]", "(multlast [7 3]) -> [3 3]", "(multlast [5 2]) -> [2 2]", "(multlast [6 3 7]) -> [7 7 7]", "(multlast [8]) -> [8]", "(multlast [0 9 2]) -> [2 2 2]", "(multlast [9 5 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [4 6 7 8 5]) -> [5 5 5 5 5]", "(multlast [2 0 4]) -> [4 4 4]", "(multlast [5 2]) -> [2 2]", "(multlast [8]) -> [8]", "(multlast [5 1 1 0]) -> [0 0 0 0]", "(multlast [7 0 6]) -> [6 6 6]", "(multlast [8 9]) -> [9 9]", "(multlast [3 9 9]) -> [9 9 9]", "(multlast [2 2]) -> [2 2]", "(multlast [5 0 5 0]) -> [0 0 0 0]", "(multlast [3 2 8 8]) -> [8 8 8 8]", "(multlast [7]) -> [7]", "(multlast [5 7]) -> [7 7]", "(multlast []) -> []", "(multlast [9 7 6 6]) -> [6 6 6 6]", "(multlast [6 8 0 3]) -> [3 3 3 3]", "(multlast [0]) -> [0]", "(multlast [1 9 8]) -> [8 8 8]", "(multlast [4 2 9 7 8]) -> [8 8 8 8 8]", "(multlast [8 0 0]) -> [0 0 0]", "(multlast [6 0 7 3]) -> [3 3 3 3]", "(multlast [7 7]) -> [7 7]", "(multlast [0 0 2 7]) -> [7 7 7 7]", "(multlast [9 1 6 9 5]) -> [5 5 5 5 5]", "(multlast [9 5]) -> [5 5]", "(multlast [3 0 6 9 8]) -> [8 8 8 8 8]", "(multlast [9]) -> [9]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [1]) -> [1]", "(multlast [0 8 9 2 2]) -> [2 2 2 2 2]", "(multlast [5 1 7 0 8]) -> [8 8 8 8 8]", "(multlast [2 2]) -> [2 2]", "(multlast [4 2 1 9 4]) -> [4 4 4 4 4]", "(multlast [4 1 2]) -> [2 2 2]"], "time": 0.26894, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [2 0 3 0 9]) -> [9 9 9 9 9]", "(multlast [3 5 6 4 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4 5 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [2 6]) -> [6 6]", "(multlast [6 7 7 2 9]) -> [9 9 9 9 9]", "(multlast [7 7]) -> [7 7]", "(multlast [8]) -> [8]", "(multlast [7 1 0 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [3 6 4]) -> [4 4 4]", "(multlast [5]) -> [5]", "(multlast [6 3 9 4 5]) -> [5 5 5 5 5]", "(multlast [5 4]) -> [4 4]", "(multlast [5 9 2 9 6]) -> [6 6 6 6 6]", "(multlast [9]) -> [9]", "(multlast [4 6 0 6 3]) -> [3 3 3 3 3]", "(multlast [1 0]) -> [0 0]", "(multlast []) -> []", "(multlast [7 7 7 9 9]) -> [9 9 9 9 9]", "(multlast [5 4 3 3 6]) -> [6 6 6 6 6]", "(multlast [1 1]) -> [1 1]", "(multlast [2 8]) -> [8 8]", "(multlast [0 1 1 0]) -> [0 0 0 0]", "(multlast [1]) -> [1]", "(multlast [9]) -> [9]", "(multlast [5]) -> [5]", "(multlast [5]) -> [5]", "(multlast [0 9 1 5 2]) -> [2 2 2 2 2]", "(multlast [3 1]) -> [1 1]", "(multlast [7 3 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [1 8 0]) -> [0 0 0]", "(multlast [2 5]) -> [5 5]", "(multlast [1 2 3 0 8]) -> [8 8 8 8 8]", "(multlast [0 7]) -> [7 7]", "(multlast []) -> []", "(multlast [7 9 7 7]) -> [7 7 7 7]", "(multlast [4 4 1 4 3]) -> [3 3 3 3 3]", "(multlast [3 3 3]) -> [3 3 3]", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast [8 1 7]) -> [7 7 7]", "(multlast [1 4 8]) -> [8 8 8]", "(multlast [6 1]) -> [1 1]", "(multlast [9]) -> [9]", "(multlast [4 3 6 7 8]) -> [8 8 8 8 8]", "(multlast [1 2 5 5]) -> [5 5 5 5]", "(multlast [6 7 5]) -> [5 5 5]", "(multlast [6 6 2 1 4]) -> [4 4 4 4 4]", "(multlast [9 0]) -> [0 0]", "(multlast [8 8]) -> [8 8]", "(multlast [1 6 7]) -> [7 7 7]", "(multlast [9 9 1]) -> [1 1 1]", "(multlast [1 3 2 9 6]) -> [6 6 6 6 6]", "(multlast [4 6 4 0]) -> [0 0 0 0]", "(multlast [6 6]) -> [6 6]", "(multlast [3]) -> [3]", "(multlast [6]) -> [6]", "(multlast [6 6 8 1]) -> [1 1 1 1]", "(multlast [5 1 1 3 6]) -> [6 6 6 6 6]", "(multlast [0 7 6]) -> [6 6 6]", "(multlast [8 5 8 2]) -> [2 2 2 2]", "(multlast [8 6 0 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [0 9 8 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6]) -> [6]"], "time": 0.270667, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 5 7 2 7]) -> [7 7 7 7 7]", "(multlast [3 1 2 6 3]) -> [3 3 3 3 3]", "(multlast [4 0 5 4 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [4 4 1 6]) -> [6 6 6 6]", "(multlast [2 1]) -> [1 1]", "(multlast [0 7 3 2]) -> [2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [6 2 8]) -> [8 8 8]", "(multlast [0 0 2 7 9]) -> [9 9 9 9 9]", "(multlast [9 8 6]) -> [6 6 6]", "(multlast [4 9]) -> [9 9]", "(multlast [5 1]) -> [1 1]", "(multlast [3 3]) -> [3 3]", "(multlast [2 6 1]) -> [1 1 1]", "(multlast [2 4]) -> [4 4]", "(multlast [3 7 2]) -> [2 2 2]", "(multlast [5 8 0 5 4]) -> [4 4 4 4 4]", "(multlast [3 1 3 6 9]) -> [9 9 9 9 9]", "(multlast [8 1 4]) -> [4 4 4]", "(multlast [0 1 2 4]) -> [4 4 4 4]", "(multlast [0]) -> [0]", "(multlast [1 4 3 8 0]) -> [0 0 0 0 0]", "(multlast [4 6 1 6]) -> [6 6 6 6]", "(multlast [7 8 4 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [1 0 1 4 7]) -> [7 7 7 7 7]", "(multlast [1 1 8 6 0]) -> [0 0 0 0 0]", "(multlast [9 4 2]) -> [2 2 2]", "(multlast [2 0 1 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 8 8 9]) -> [9 9 9 9]", "(multlast [9 1 9 1]) -> [1 1 1 1]", "(multlast [0 9 9 4]) -> [4 4 4 4]", "(multlast [8 1 1]) -> [1 1 1]", "(multlast [0 4 7 4 0]) -> [0 0 0 0 0]", "(multlast [9]) -> [9]", "(multlast [7 7 8 0]) -> [0 0 0 0]", "(multlast [8 4 7]) -> [7 7 7]", "(multlast [4 9 0 5]) -> [5 5 5 5]", "(multlast [1 5 7 5 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [4 4 8]) -> [8 8 8]", "(multlast [1 5 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [0 3 8 2 5]) -> [5 5 5 5 5]", "(multlast [2 0 9 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [6 7 6 7]) -> [7 7 7 7]", "(multlast [6 9 9 2 2]) -> [2 2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [9 7 8 5]) -> [5 5 5 5]", "(multlast [3 6 8]) -> [8 8 8]", "(multlast [8 6 0]) -> [0 0 0]", "(multlast [9 4 3 8]) -> [8 8 8 8]", "(multlast [3 2 2 5]) -> [5 5 5 5]", "(multlast [7 0 3 6 1]) -> [1 1 1 1 1]", "(multlast [3 9 3 1]) -> [1 1 1 1]", "(multlast [6 1]) -> [1 1]", "(multlast []) -> []", "(multlast [3 4 1 6 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [9 6 2]) -> [2 2 2]", "(multlast [0 3 6 9 9]) -> [9 9 9 9 9]", "(multlast [1 6]) -> [6 6]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [2 9]) -> [9 9]", "(multlast [4 4 8]) -> [8 8 8]", "(multlast [6 2 3]) -> [3 3 3]"], "time": 0.286581, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 8 5 9]) -> [9 9 9 9]", "(multlast [4]) -> [4]", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 9 1 2 4]) -> [4 4 4 4 4]", "(multlast [6 8]) -> [8 8]", "(multlast [5 3]) -> [3 3]", "(multlast []) -> []", "(multlast [8 3 8 4]) -> [4 4 4 4]", "(multlast [0 5]) -> [5 5]", "(multlast [6]) -> [6]", "(multlast [2 7 2]) -> [2 2 2]", "(multlast [4 3 3 9 1]) -> [1 1 1 1 1]", "(multlast [6 7 3 6 7]) -> [7 7 7 7 7]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [7 1 8 5]) -> [5 5 5 5]", "(multlast [6]) -> [6]", "(multlast [9 8 8]) -> [8 8 8]", "(multlast [1 2]) -> [2 2]", "(multlast [4 1 4]) -> [4 4 4]", "(multlast [2 6 3]) -> [3 3 3]", "(multlast [1 3 8 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 5 4 0]) -> [0 0 0 0]", "(multlast [0 6]) -> [6 6]", "(multlast [9 2]) -> [2 2]", "(multlast [1]) -> [1]", "(multlast [0 7]) -> [7 7]", "(multlast [0 5]) -> [5 5]", "(multlast [3 6 3 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [2 7 9]) -> [9 9 9]", "(multlast [5 4 8 5]) -> [5 5 5 5]", "(multlast [8 9]) -> [9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 3 9 8 6]) -> [6 6 6 6 6]", "(multlast [7 9 4 6]) -> [6 6 6 6]", "(multlast [2 1 5]) -> [5 5 5]", "(multlast [0 7]) -> [7 7]", "(multlast [9 7 7 1]) -> [1 1 1 1]", "(multlast [8 5 5 3 9]) -> [9 9 9 9 9]", "(multlast [4 7 7 0 2]) -> [2 2 2 2 2]", "(multlast [1 6]) -> [6 6]", "(multlast [9 6 0 0]) -> [0 0 0 0]", "(multlast [6 8]) -> [8 8]", "(multlast [1 6 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [8 6 1]) -> [1 1 1]", "(multlast [0 9 5 9 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [3 5]) -> [5 5]", "(multlast [0 3 2 7 2]) -> [2 2 2 2 2]", "(multlast [1 3 3 3 5]) -> [5 5 5 5 5]", "(multlast [1 8 7 9 8]) -> [8 8 8 8 8]", "(multlast [6 3 1 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [6 6 8]) -> [8 8 8]", "(multlast [2 9 2 8]) -> [8 8 8 8]", "(multlast [7]) -> [7]", "(multlast [2 1 5]) -> [5 5 5]", "(multlast [5 9 3 4]) -> [4 4 4 4]", "(multlast [7 7 8 7 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 2 5 0]) -> [0 0 0 0]", "(multlast [1]) -> [1]", "(multlast [3]) -> [3]", "(multlast [5]) -> [5]", "(multlast [7 2]) -> [2 2]"], "time": 0.253141, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [0 5 1 7]) -> [7 7 7 7]", "(multlast [6 9]) -> [9 9]", "(multlast []) -> []", "(multlast [5 7 7]) -> [7 7 7]", "(multlast [5 1]) -> [1 1]", "(multlast [8 7]) -> [7 7]", "(multlast [0 2]) -> [2 2]", "(multlast [8 5 7]) -> [7 7 7]", "(multlast [7 5 0 0 7]) -> [7 7 7 7 7]", "(multlast [2]) -> [2]", "(multlast [5 8 4 4]) -> [4 4 4 4]", "(multlast [1]) -> [1]", "(multlast [3 6 8 3]) -> [3 3 3 3]", "(multlast [0 9 7]) -> [7 7 7]", "(multlast [9 5 0]) -> [0 0 0]", "(multlast [7 8]) -> [8 8]", "(multlast [5]) -> [5]", "(multlast [4]) -> [4]", "(multlast [5 5 9]) -> [9 9 9]", "(multlast [4]) -> [4]", "(multlast [0 5]) -> [5 5]", "(multlast [9]) -> [9]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [8]) -> [8]", "(multlast [8]) -> [8]", "(multlast [9 8 0]) -> [0 0 0]", "(multlast [3 8 7]) -> [7 7 7]", "(multlast [8 7 7 8]) -> [8 8 8 8]", "(multlast [7 1 9 7 4]) -> [4 4 4 4 4]", "(multlast [8 2 9 1]) -> [1 1 1 1]", "(multlast [5 8 1 7 3]) -> [3 3 3 3 3]", "(multlast [0 3 0]) -> [0 0 0]", "(multlast [9 3 9 5]) -> [5 5 5 5]", "(multlast [0]) -> [0]", "(multlast [0]) -> [0]", "(multlast [4]) -> [4]", "(multlast [2 7 4]) -> [4 4 4]", "(multlast [2 9 6]) -> [6 6 6]", "(multlast [0 5 3 4]) -> [4 4 4 4]", "(multlast [8 9 0 5]) -> [5 5 5 5]", "(multlast [3 1]) -> [1 1]", "(multlast [7 6 6 8]) -> [8 8 8 8]", "(multlast [1 4 8 7 5]) -> [5 5 5 5 5]", "(multlast [1]) -> [1]", "(multlast [2]) -> [2]", "(multlast [3 9]) -> [9 9]", "(multlast [4 7 5 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [8 0 2]) -> [2 2 2]", "(multlast [1 6 8 6 6]) -> [6 6 6 6 6]", "(multlast [0 7 1]) -> [1 1 1]", "(multlast [2 8 5 9]) -> [9 9 9 9]", "(multlast [1 7 4 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [1 1 3 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [5 1 1 7 6]) -> [6 6 6 6 6]", "(multlast [4 9 3 1]) -> [1 1 1 1]", "(multlast [9 8 2]) -> [2 2 2]", "(multlast [7 1 6 6]) -> [6 6 6 6]", "(multlast [6 3]) -> [3 3]", "(multlast [2 1 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [3 3 2 0 0]) -> [0 0 0 0 0]", "(multlast [5 2]) -> [2 2]", "(multlast [8 4 3 5 8]) -> [8 8 8 8 8]", "(multlast [2 8]) -> [8 8]", "(multlast [3 7 0 4 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []"], "time": 0.264232, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [9 6]) -> [6 6]", "(multlast []) -> []", "(multlast [2 8 6]) -> [6 6 6]", "(multlast [6 8 3]) -> [3 3 3]", "(multlast [1]) -> [1]", "(multlast [4 1 3 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [9 5 8 4 0]) -> [0 0 0 0 0]", "(multlast [0 0 9 0 4]) -> [4 4 4 4 4]", "(multlast [3 9]) -> [9 9]", "(multlast [8 1 9 5]) -> [5 5 5 5]", "(multlast [8 9 7]) -> [7 7 7]", "(multlast [5]) -> [5]", "(multlast [5 3 8 5 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [2 9]) -> [9 9]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [5 2 1 1]) -> [1 1 1 1]", "(multlast [6 1]) -> [1 1]", "(multlast [9]) -> [9]", "(multlast [6 7 0 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [5 6 3 7 0]) -> [0 0 0 0 0]", "(multlast [6 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 9 8 6 7]) -> [7 7 7 7 7]", "(multlast [3 0 4 3 8]) -> [8 8 8 8 8]", "(multlast [5 4 9 6 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [6 2 5]) -> [5 5 5]", "(multlast [8 3 5 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [7 6 5 2]) -> [2 2 2 2]", "(multlast [0 1 3 7 4]) -> [4 4 4 4 4]", "(multlast [1 3 7]) -> [7 7 7]", "(multlast [4 7 5]) -> [5 5 5]", "(multlast [8]) -> [8]", "(multlast [7 5 0 1]) -> [1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [3 0]) -> [0 0]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [6]) -> [6]", "(multlast [6 8 2 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 4]) -> [4 4]", "(multlast [7 4 1 7]) -> [7 7 7 7]", "(multlast [3 3 7 8 6]) -> [6 6 6 6 6]", "(multlast [0 4 9 7]) -> [7 7 7 7]", "(multlast [7 6 0]) -> [0 0 0]", "(multlast [9]) -> [9]", "(multlast [3 6]) -> [6 6]", "(multlast [9 2 9 0 7]) -> [7 7 7 7 7]", "(multlast [2 1 6]) -> [6 6 6]", "(multlast [2 5 2 0 9]) -> [9 9 9 9 9]", "(multlast [0 2 9 0 2]) -> [2 2 2 2 2]", "(multlast [4]) -> [4]", "(multlast [5 0 0 1 4]) -> [4 4 4 4 4]", "(multlast [3 7 3 8]) -> [8 8 8 8]", "(multlast [8 7 5 8 3]) -> [3 3 3 3 3]", "(multlast [7 9 1]) -> [1 1 1]", "(multlast [6 6]) -> [6 6]", "(multlast []) -> []", "(multlast [8 7 8]) -> [8 8 8]", "(multlast [5]) -> [5]", "(multlast [8 7 2]) -> [2 2 2]", "(multlast [9 8]) -> [8 8]", "(multlast [9 1 8 3]) -> [3 3 3 3]", "(multlast [4]) -> [4]"], "time": 0.24225, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [7 4 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 6 9 7]) -> [7 7 7 7]", "(multlast [9]) -> [9]", "(multlast [8 0 4 8]) -> [8 8 8 8]", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast [4 2 1]) -> [1 1 1]", "(multlast [7 4 5]) -> [5 5 5]", "(multlast [2 5 7]) -> [7 7 7]", "(multlast [3 2 0 1 2]) -> [2 2 2 2 2]", "(multlast [6 0]) -> [0 0]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [0 9 9 6]) -> [6 6 6 6]", "(multlast [1 0 2 1]) -> [1 1 1 1]", "(multlast [2 6]) -> [6 6]", "(multlast [6 9]) -> [9 9]", "(multlast []) -> []", "(multlast [7 3 1 4]) -> [4 4 4 4]", "(multlast [1 9 9]) -> [9 9 9]", "(multlast [1]) -> [1]", "(multlast [6 2 5 1 6]) -> [6 6 6 6 6]", "(multlast [7 3 7 4 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [9 7 6]) -> [6 6 6]", "(multlast [9 0 0]) -> [0 0 0]", "(multlast [4 1 5 7]) -> [7 7 7 7]", "(multlast [5 1 5]) -> [5 5 5]", "(multlast [6 1 7 9]) -> [9 9 9 9]", "(multlast [6 2]) -> [2 2]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [8 2 8 4 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [8 5 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [4 4]) -> [4 4]", "(multlast []) -> []", "(multlast [3 9]) -> [9 9]", "(multlast [0 8 7 4 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [3 8 1]) -> [1 1 1]", "(multlast [9]) -> [9]", "(multlast [6 3 8 2]) -> [2 2 2 2]", "(multlast [5 3]) -> [3 3]", "(multlast [2]) -> [2]", "(multlast [4 1 6]) -> [6 6 6]", "(multlast [4 2 3 6 9]) -> [9 9 9 9 9]", "(multlast [1 7 5 0]) -> [0 0 0 0]", "(multlast [1 3 1]) -> [1 1 1]", "(multlast [8 1 3 7 2]) -> [2 2 2 2 2]", "(multlast [6 1 4 6 3]) -> [3 3 3 3 3]", "(multlast [7 1]) -> [1 1]", "(multlast []) -> []", "(multlast [5 7 3]) -> [3 3 3]", "(multlast [1 6]) -> [6 6]", "(multlast [6 4 4 1 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [4 8 7]) -> [7 7 7]", "(multlast [9]) -> [9]", "(multlast [3 8 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [3 3 4]) -> [4 4 4]", "(multlast [8 0 1]) -> [1 1 1]", "(multlast [6 9 6]) -> [6 6 6]", "(multlast [9 9]) -> [9 9]", "(multlast [9 4]) -> [4 4]", "(multlast [9]) -> [9]", "(multlast [1 0 0 4]) -> [4 4 4 4]", "(multlast [7 3 3 0 0]) -> [0 0 0 0 0]", "(multlast [2 3]) -> [3 3]", "(multlast [3 8 1 3 1]) -> [1 1 1 1 1]"], "time": 0.205964, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [7 0 4 7]) -> [7 7 7 7]", "(multlast [5 8 0 4 4]) -> [4 4 4 4 4]", "(multlast [9 4 2]) -> [2 2 2]", "(multlast [0]) -> [0]", "(multlast [9 4 7]) -> [7 7 7]", "(multlast [1 0]) -> [0 0]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [0 1 4 8]) -> [8 8 8 8]", "(multlast [4 5]) -> [5 5]", "(multlast [4 1]) -> [1 1]", "(multlast [8 3 2 0]) -> [0 0 0 0]", "(multlast [1 6]) -> [6 6]", "(multlast [3 2 5 5]) -> [5 5 5 5]", "(multlast [8 4 6 7]) -> [7 7 7 7]", "(multlast [3 6 2 6]) -> [6 6 6 6]", "(multlast [3 1]) -> [1 1]", "(multlast [8 7]) -> [7 7]", "(multlast [3 3]) -> [3 3]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [5 3]) -> [3 3]", "(multlast [8]) -> [8]", "(multlast [1 1]) -> [1 1]", "(multlast [0]) -> [0]", "(multlast [6 0 2 6 3]) -> [3 3 3 3 3]", "(multlast [5 1]) -> [1 1]", "(multlast [7 0]) -> [0 0]", "(multlast [9]) -> [9]", "(multlast [3 9 2]) -> [2 2 2]", "(multlast [2 5 0 9]) -> [9 9 9 9]", "(multlast [9 7 6 6 1]) -> [1 1 1 1 1]", "(multlast [1 1 5 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [1 2 2 5]) -> [5 5 5 5]", "(multlast [7 2 3]) -> [3 3 3]", "(multlast [1 2 4]) -> [4 4 4]", "(multlast [8 8 5 4 9]) -> [9 9 9 9 9]", "(multlast [8 7 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [5 4 2]) -> [2 2 2]", "(multlast [4]) -> [4]", "(multlast [0 0 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [9 2 3 9 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [6 3 2]) -> [2 2 2]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [9 0 7 5]) -> [5 5 5 5]", "(multlast [8]) -> [8]", "(multlast [2 8]) -> [8 8]", "(multlast [4 9 9 8 8]) -> [8 8 8 8 8]", "(multlast [9 0 3 8]) -> [8 8 8 8]", "(multlast [7 1 4 0 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [7 9 4]) -> [4 4 4]", "(multlast [9 7 1 2]) -> [2 2 2 2]", "(multlast [6]) -> [6]", "(multlast [9]) -> [9]", "(multlast [5 1 0 5 5]) -> [5 5 5 5 5]", "(multlast [9 8 2 9 5]) -> [5 5 5 5 5]", "(multlast [4 0]) -> [0 0]", "(multlast [7 2 4 1]) -> [1 1 1 1]", "(multlast [6 5 9 8 7]) -> [7 7 7 7 7]", "(multlast [0 8]) -> [8 8]", "(multlast [4 6 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [8 3]) -> [3 3]", "(multlast [8 6 2]) -> [2 2 2]", "(multlast [7 8 6 0]) -> [0 0 0 0]", "(multlast [7 1]) -> [1 1]", "(multlast [5]) -> [5]"], "time": 0.252225, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 7 9]) -> [9 9 9]", "(multlast [3 6 4 5 0]) -> [0 0 0 0 0]", "(multlast [8 2 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 4 2 5]) -> [5 5 5 5]", "(multlast [6 3 2 5]) -> [5 5 5 5]", "(multlast [2 7]) -> [7 7]", "(multlast [6 8]) -> [8 8]", "(multlast [0 4 9 5]) -> [5 5 5 5]", "(multlast [7 9]) -> [9 9]", "(multlast [3 1]) -> [1 1]", "(multlast []) -> []", "(multlast [2 4 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [4 7 2]) -> [2 2 2]", "(multlast [5 0]) -> [0 0]", "(multlast [7 6 6 5]) -> [5 5 5 5]", "(multlast [8 2 1]) -> [1 1 1]", "(multlast [9 5]) -> [5 5]", "(multlast [5 9]) -> [9 9]", "(multlast [5 1 6 3 2]) -> [2 2 2 2 2]", "(multlast [0 1 2 6]) -> [6 6 6 6]", "(multlast [2 6]) -> [6 6]", "(multlast [4 5 1]) -> [1 1 1]", "(multlast [1 2 0]) -> [0 0 0]", "(multlast [1]) -> [1]", "(multlast [4 0 6 7]) -> [7 7 7 7]", "(multlast [4 6 6 4 3]) -> [3 3 3 3 3]", "(multlast [0 3 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [2 9 3 1 0]) -> [0 0 0 0 0]", "(multlast [7 7]) -> [7 7]", "(multlast [0 1 5]) -> [5 5 5]", "(multlast [1 6 3]) -> [3 3 3]", "(multlast [4 7]) -> [7 7]", "(multlast [1 0 0 6]) -> [6 6 6 6]", "(multlast [4 6]) -> [6 6]", "(multlast [0 8 3 6 2]) -> [2 2 2 2 2]", "(multlast [8 9]) -> [9 9]", "(multlast [7 6 6 0]) -> [0 0 0 0]", "(multlast [2 8]) -> [8 8]", "(multlast [5 0]) -> [0 0]", "(multlast [0 2 9 8 2]) -> [2 2 2 2 2]", "(multlast [4 9 2 4]) -> [4 4 4 4]", "(multlast [9 9 3]) -> [3 3 3]", "(multlast [6 1]) -> [1 1]", "(multlast [3 9 6 2]) -> [2 2 2 2]", "(multlast [8 7 3 0 1]) -> [1 1 1 1 1]", "(multlast [0 5 4 8]) -> [8 8 8 8]", "(multlast [1 4]) -> [4 4]", "(multlast [0]) -> [0]", "(multlast [6 8]) -> [8 8]", "(multlast [3 3]) -> [3 3]", "(multlast [7 8 0 3 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [9 0]) -> [0 0]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [8 3 4]) -> [4 4 4]", "(multlast [9 0 0]) -> [0 0 0]", "(multlast [4 2 9]) -> [9 9 9]", "(multlast [7]) -> [7]", "(multlast [8 4]) -> [4 4]", "(multlast [4 1 3 3 3]) -> [3 3 3 3 3]", "(multlast [3]) -> [3]", "(multlast [9 5 9 3 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [1 1 9 3 9]) -> [9 9 9 9 9]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [6 9 1]) -> [1 1 1]", "(multlast [9]) -> [9]"], "time": 0.227048, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8]) -> [8]", "(multlast [4 0 7 6]) -> [6 6 6 6]", "(multlast [4 9 0 6 8]) -> [8 8 8 8 8]", "(multlast [6 7 5 7 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [0 5 0 0]) -> [0 0 0 0]", "(multlast [2 9 9]) -> [9 9 9]", "(multlast [9]) -> [9]", "(multlast [7 5 6 0]) -> [0 0 0 0]", "(multlast [7 3 3]) -> [3 3 3]", "(multlast [2 4]) -> [4 4]", "(multlast [5 5]) -> [5 5]", "(multlast [0 4 2 9]) -> [9 9 9 9]", "(multlast [0 2 4 9 0]) -> [0 0 0 0 0]", "(multlast [2 1 0 1 6]) -> [6 6 6 6 6]", "(multlast [9 6]) -> [6 6]", "(multlast [8]) -> [8]", "(multlast [3 0]) -> [0 0]", "(multlast [8 6 7]) -> [7 7 7]", "(multlast [4 3]) -> [3 3]", "(multlast [1]) -> [1]", "(multlast [4 0 5 7]) -> [7 7 7 7]", "(multlast [8 1 8 8 5]) -> [5 5 5 5 5]", "(multlast [0 0 1 7]) -> [7 7 7 7]", "(multlast [4 5 6 7 8]) -> [8 8 8 8 8]", "(multlast [5 3 8]) -> [8 8 8]", "(multlast [4 8 2 6 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [8 4]) -> [4 4]", "(multlast [0 4 2 6]) -> [6 6 6 6]", "(multlast [8 6]) -> [6 6]", "(multlast [4 1 4]) -> [4 4 4]", "(multlast [4]) -> [4]", "(multlast [9 7]) -> [7 7]", "(multlast [3 3 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [9 4 7]) -> [7 7 7]", "(multlast [9 3]) -> [3 3]", "(multlast [4 8 0]) -> [0 0 0]", "(multlast [9]) -> [9]", "(multlast [7 8 3 3 6]) -> [6 6 6 6 6]", "(multlast [9 0]) -> [0 0]", "(multlast [3 1 4]) -> [4 4 4]", "(multlast [6 8 3 3 6]) -> [6 6 6 6 6]", "(multlast [0 3]) -> [3 3]", "(multlast [6 0 8]) -> [8 8 8]", "(multlast [9 5 6 2]) -> [2 2 2 2]", "(multlast [4 2 4]) -> [4 4 4]", "(multlast [4 1 9 7 9]) -> [9 9 9 9 9]", "(multlast [4 9 5 1]) -> [1 1 1 1]", "(multlast [0 1 5 4 0]) -> [0 0 0 0 0]", "(multlast [7]) -> [7]", "(multlast [4 7 7 0]) -> [0 0 0 0]", "(multlast [4 0]) -> [0 0]", "(multlast []) -> []", "(multlast [9 5 2]) -> [2 2 2]", "(multlast [1 0 7 4 6]) -> [6 6 6 6 6]", "(multlast [7 8 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [3 7 7 5 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [7 3 1 2]) -> [2 2 2 2]", "(multlast [0 8 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4 2 5]) -> [5 5 5]", "(multlast [2 9 3 3]) -> [3 3 3 3]", "(multlast [2 6 7 7 8]) -> [8 8 8 8 8]", "(multlast [3 1]) -> [1 1]", "(multlast [9 9 5 6]) -> [6 6 6 6]", "(multlast [0 1 7 7]) -> [7 7 7 7]", "(multlast [5]) -> [5]", "(multlast [6 6 0 7]) -> [7 7 7 7]", "(multlast [6]) -> [6]"], "time": 0.192377, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 5]) -> [5 5]", "(multlast [2 8]) -> [8 8]", "(multlast []) -> []", "(multlast [4 4 9 3 9]) -> [9 9 9 9 9]", "(multlast [9 5 7 3 2]) -> [2 2 2 2 2]", "(multlast [8 9]) -> [9 9]", "(multlast [2]) -> [2]", "(multlast [3]) -> [3]", "(multlast [2 0 2 0 7]) -> [7 7 7 7 7]", "(multlast [1 6 5]) -> [5 5 5]", "(multlast [0 2]) -> [2 2]", "(multlast [1 5 1 8]) -> [8 8 8 8]", "(multlast [9 8 0]) -> [0 0 0]", "(multlast [3 8 0 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [4 4 2 5 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [2 1 0]) -> [0 0 0]", "(multlast [2 9]) -> [9 9]", "(multlast [9 6 6 5 6]) -> [6 6 6 6 6]", "(multlast [3 8]) -> [8 8]", "(multlast [4]) -> [4]", "(multlast [7 2 9]) -> [9 9 9]", "(multlast [2 0]) -> [0 0]", "(multlast [6 0 5 6 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8 2 5]) -> [5 5 5]", "(multlast [2 8 0 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [0 0 4]) -> [4 4 4]", "(multlast [6]) -> [6]", "(multlast [0 4 1]) -> [1 1 1]", "(multlast [9 4 5 9]) -> [9 9 9 9]", "(multlast [8 9 3 8 9]) -> [9 9 9 9 9]", "(multlast [6 8]) -> [8 8]", "(multlast [3 6 8 0]) -> [0 0 0 0]", "(multlast [7 5 1 2 0]) -> [0 0 0 0 0]", "(multlast [8 0 6 1]) -> [1 1 1 1]", "(multlast [4 0]) -> [0 0]", "(multlast [4 3 8 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [6 2]) -> [2 2]", "(multlast [2 0]) -> [0 0]", "(multlast [9 7 8 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [5 7 3]) -> [3 3 3]", "(multlast [5 0 4 5]) -> [5 5 5 5]", "(multlast [1 0]) -> [0 0]", "(multlast [2 8 0 3 0]) -> [0 0 0 0 0]", "(multlast [0 1 3 8 8]) -> [8 8 8 8 8]", "(multlast [6 1 2]) -> [2 2 2]", "(multlast [5 0 4 8]) -> [8 8 8 8]", "(multlast [6 5 8]) -> [8 8 8]", "(multlast [5 3 5 6 1]) -> [1 1 1 1 1]", "(multlast [2 5]) -> [5 5]", "(multlast [0 3 9 1]) -> [1 1 1 1]", "(multlast [1 3 7]) -> [7 7 7]", "(multlast [3 9 3]) -> [3 3 3]", "(multlast [1 2 8]) -> [8 8 8]", "(multlast [7 0 0]) -> [0 0 0]", "(multlast [0 2]) -> [2 2]", "(multlast [1 9]) -> [9 9]", "(multlast [0 0 6 4]) -> [4 4 4 4]", "(multlast [9 9]) -> [9 9]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [1 0 4 6 1]) -> [1 1 1 1 1]", "(multlast [9 7]) -> [7 7]", "(multlast []) -> []", "(multlast [2 0 9 9]) -> [9 9 9 9]"], "time": 0.231271, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3 6 6 9]) -> [9 9 9 9]", "(multlast [1 8 2 3]) -> [3 3 3 3]", "(multlast [8 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 2 4 0]) -> [0 0 0 0]", "(multlast [9 7 1 3]) -> [3 3 3 3]", "(multlast [2 3 6 0]) -> [0 0 0 0]", "(multlast [4 9 5 9 5]) -> [5 5 5 5 5]", "(multlast [8]) -> [8]", "(multlast [2 9 1]) -> [1 1 1]", "(multlast [0 5 6 5]) -> [5 5 5 5]", "(multlast [1 0]) -> [0 0]", "(multlast [1 9 6 1]) -> [1 1 1 1]", "(multlast [3 5 1 3]) -> [3 3 3 3]", "(multlast [0 4 7 4 5]) -> [5 5 5 5 5]", "(multlast [3 3 5]) -> [5 5 5]", "(multlast [5]) -> [5]", "(multlast [7]) -> [7]", "(multlast [7 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [7 6 7]) -> [7 7 7]", "(multlast [4]) -> [4]", "(multlast [6 9]) -> [9 9]", "(multlast [1 9]) -> [9 9]", "(multlast [7 5 7 9]) -> [9 9 9 9]", "(multlast [7 9]) -> [9 9]", "(multlast [3 5 2 7 0]) -> [0 0 0 0 0]", "(multlast [4]) -> [4]", "(multlast [5 6]) -> [6 6]", "(multlast [0 9]) -> [9 9]", "(multlast [8 3 2]) -> [2 2 2]", "(multlast [1 2]) -> [2 2]", "(multlast [2 5 5]) -> [5 5 5]", "(multlast [8 9 7 9 4]) -> [4 4 4 4 4]", "(multlast [3 5]) -> [5 5]", "(multlast [7 4 3]) -> [3 3 3]", "(multlast [3 3 7 5 2]) -> [2 2 2 2 2]", "(multlast [2 0 2 0]) -> [0 0 0 0]", "(multlast [5]) -> [5]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [8 4 8 0 0]) -> [0 0 0 0 0]", "(multlast [0 5 9]) -> [9 9 9]", "(multlast [6 1]) -> [1 1]", "(multlast [4 4 6 5 8]) -> [8 8 8 8 8]", "(multlast [2 7 0 0]) -> [0 0 0 0]", "(multlast [2 7 9 9 0]) -> [0 0 0 0 0]", "(multlast [4 0]) -> [0 0]", "(multlast [6 6 8 4 9]) -> [9 9 9 9 9]", "(multlast [1 0 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [5 2 6]) -> [6 6 6]", "(multlast [5 5 9 9]) -> [9 9 9 9]", "(multlast [2 0 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 1 9]) -> [9 9 9]", "(multlast [4 6 2 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [9 6]) -> [6 6]", "(multlast [5 4 2 6]) -> [6 6 6 6]", "(multlast [2 2 5 3]) -> [3 3 3 3]", "(multlast [2 0 4 8]) -> [8 8 8 8]", "(multlast [0 0 4 2 7]) -> [7 7 7 7 7]", "(multlast [2 5]) -> [5 5]", "(multlast [1 2 2 5 2]) -> [2 2 2 2 2]", "(multlast [3 1]) -> [1 1]", "(multlast [8 6 6 7]) -> [7 7 7 7]", "(multlast [7 7]) -> [7 7]", "(multlast []) -> []", "(multlast [4]) -> [4]"], "time": 0.25438, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 0 9]) -> [9 9 9]", "(multlast [5 8]) -> [8 8]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [1 6]) -> [6 6]", "(multlast [3]) -> [3]", "(multlast [5 9 8 7 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 2 0 3 3]) -> [3 3 3 3 3]", "(multlast [2 2 1]) -> [1 1 1]", "(multlast [7 6 0]) -> [0 0 0]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 0 7 6]) -> [6 6 6 6]", "(multlast [8 6 1 4]) -> [4 4 4 4]", "(multlast [5 6 6]) -> [6 6 6]", "(multlast [4 8 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [4 8 0 8 6]) -> [6 6 6 6 6]", "(multlast [9]) -> [9]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [1 7 5]) -> [5 5 5]", "(multlast [4 0 9 8 7]) -> [7 7 7 7 7]", "(multlast [7 1 7 7 1]) -> [1 1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [3 5]) -> [5 5]", "(multlast [3]) -> [3]", "(multlast [3 4 6 3]) -> [3 3 3 3]", "(multlast [8]) -> [8]", "(multlast [7]) -> [7]", "(multlast [3]) -> [3]", "(multlast [9 0 0]) -> [0 0 0]", "(multlast [1 2]) -> [2 2]", "(multlast [3 3 5 3]) -> [3 3 3 3]", "(multlast [6]) -> [6]", "(multlast [1 7]) -> [7 7]", "(multlast [3 7]) -> [7 7]", "(multlast [8 4 8 1]) -> [1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [7 9]) -> [9 9]", "(multlast [7 0 9 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [4 5 1 8 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [6 6 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [5 7 1 7]) -> [7 7 7 7]", "(multlast [7 1]) -> [1 1]", "(multlast [0 7]) -> [7 7]", "(multlast [6 4 1 1]) -> [1 1 1 1]", "(multlast [8 7]) -> [7 7]", "(multlast [8 3]) -> [3 3]", "(multlast [5]) -> [5]", "(multlast [6 3 5]) -> [5 5 5]", "(multlast [9 4]) -> [4 4]", "(multlast [5 3 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [2 8 8 5]) -> [5 5 5 5]", "(multlast [9 1 8 4]) -> [4 4 4 4]", "(multlast [9 0]) -> [0 0]", "(multlast [0 5 0 4 3]) -> [3 3 3 3 3]", "(multlast [1 6]) -> [6 6]", "(multlast [7 8 1 1 1]) -> [1 1 1 1 1]", "(multlast [1 1 7]) -> [7 7 7]", "(multlast [7]) -> [7]", "(multlast [0]) -> [0]", "(multlast [1 7 2 7 8]) -> [8 8 8 8 8]"], "time": 0.259269, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [3 2 5]) -> [5 5 5]", "(multlast [8 4 7 1 0]) -> [0 0 0 0 0]", "(multlast [4 8 2 7]) -> [7 7 7 7]", "(multlast [2]) -> [2]", "(multlast [8 2 5 1 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [0]) -> [0]", "(multlast [3]) -> [3]", "(multlast [3 1 0]) -> [0 0 0]", "(multlast [6 4 8 2 7]) -> [7 7 7 7 7]", "(multlast [2 8]) -> [8 8]", "(multlast [4 8 4]) -> [4 4 4]", "(multlast [2 8 5 6 9]) -> [9 9 9 9 9]", "(multlast [8 7 5 2 7]) -> [7 7 7 7 7]", "(multlast [4 4 5 0 8]) -> [8 8 8 8 8]", "(multlast [8 9 8 4 4]) -> [4 4 4 4 4]", "(multlast [8 0 0 0]) -> [0 0 0 0]", "(multlast [5]) -> [5]", "(multlast [3 6 5 0]) -> [0 0 0 0]", "(multlast [6 5 0 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [4 7 8 9 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [8 1 5 9]) -> [9 9 9 9]", "(multlast [3 2 6 9 5]) -> [5 5 5 5 5]", "(multlast [4 8 8]) -> [8 8 8]", "(multlast [7 7 0]) -> [0 0 0]", "(multlast [8 9]) -> [9 9]", "(multlast [0 6 6 1]) -> [1 1 1 1]", "(multlast [8 0 5 2]) -> [2 2 2 2]", "(multlast [0 6 5 0]) -> [0 0 0 0]", "(multlast [5 1]) -> [1 1]", "(multlast [5 2 4 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast [8 1 7 3]) -> [3 3 3 3]", "(multlast [0 3 5]) -> [5 5 5]", "(multlast [8 7 8 4]) -> [4 4 4 4]", "(multlast [8 9]) -> [9 9]", "(multlast [5 9 7]) -> [7 7 7]", "(multlast [0 2]) -> [2 2]", "(multlast [1 5 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [3 5 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [0 5 2 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [0 4 5 6 2]) -> [2 2 2 2 2]", "(multlast [1 2]) -> [2 2]", "(multlast [5 5 9 5 7]) -> [7 7 7 7 7]", "(multlast [3]) -> [3]", "(multlast [3 5 5]) -> [5 5 5]", "(multlast [2 4]) -> [4 4]", "(multlast [2 9 3 4]) -> [4 4 4 4]", "(multlast [6 2]) -> [2 2]", "(multlast [9 3]) -> [3 3]", "(multlast [5 7]) -> [7 7]", "(multlast [9 9]) -> [9 9]", "(multlast [8 0 1 6]) -> [6 6 6 6]", "(multlast [8 6 9 6]) -> [6 6 6 6]", "(multlast [1 7 6 5]) -> [5 5 5 5]", "(multlast [6 0 5 5 2]) -> [2 2 2 2 2]", "(multlast [1 2 3 8 4]) -> [4 4 4 4 4]", "(multlast [8 6 5 9]) -> [9 9 9 9]", "(multlast [5 0 4]) -> [4 4 4]", "(multlast [8 5 6 3]) -> [3 3 3 3]", "(multlast [0 0 8]) -> [8 8 8]", "(multlast [0 5 6]) -> [6 6 6]", "(multlast [5 0 0 2]) -> [2 2 2 2]"], "time": 0.244729, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 2 8 9 5]) -> [5 5 5 5 5]", "(multlast [8 5]) -> [5 5]", "(multlast [3 9 5 3]) -> [3 3 3 3]", "(multlast [9]) -> [9]", "(multlast [7 0 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [7 5 2 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [3 8 5]) -> [5 5 5]", "(multlast [7]) -> [7]", "(multlast [9 8 9 9]) -> [9 9 9 9]", "(multlast [9 6 8 1 6]) -> [6 6 6 6 6]", "(multlast [1 8 4 1 1]) -> [1 1 1 1 1]", "(multlast [0 5]) -> [5 5]", "(multlast [8 7 8]) -> [8 8 8]", "(multlast [8 5 9 8]) -> [8 8 8 8]", "(multlast [3 7 6]) -> [6 6 6]", "(multlast [6 1 3]) -> [3 3 3]", "(multlast [6 1 6 7]) -> [7 7 7 7]", "(multlast [6 6 6 2]) -> [2 2 2 2]", "(multlast [1 6 1 5]) -> [5 5 5 5]", "(multlast [1 5 2 0 5]) -> [5 5 5 5 5]", "(multlast [7]) -> [7]", "(multlast [9]) -> [9]", "(multlast [4 7 8 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [5 5 4 8 2]) -> [2 2 2 2 2]", "(multlast [8 0 1 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 5 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [4 4]) -> [4 4]", "(multlast [9 5 5 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [7 6 8 1 2]) -> [2 2 2 2 2]", "(multlast [1]) -> [1]", "(multlast [2]) -> [2]", "(multlast [9 6 7 2 6]) -> [6 6 6 6 6]", "(multlast [2 7 0 7 1]) -> [1 1 1 1 1]", "(multlast [1 4 8]) -> [8 8 8]", "(multlast [2 9]) -> [9 9]", "(multlast []) -> []", "(multlast [8 8 5 1]) -> [1 1 1 1]", "(multlast [8 9 1 2]) -> [2 2 2 2]", "(multlast [9 0 1]) -> [1 1 1]", "(multlast [6 7 7 8 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [4 0 4 1 6]) -> [6 6 6 6 6]", "(multlast [0 8 8]) -> [8 8 8]", "(multlast [1 9 7 5 5]) -> [5 5 5 5 5]", "(multlast [0 2 4 1]) -> [1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [8]) -> [8]", "(multlast [1]) -> [1]", "(multlast [4 7]) -> [7 7]", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [3 7 3 0 5]) -> [5 5 5 5 5]", "(multlast [4 3]) -> [3 3]", "(multlast [6 6]) -> [6 6]", "(multlast [6 0 9 8]) -> [8 8 8 8]", "(multlast [8 1]) -> [1 1]", "(multlast [2 2]) -> [2 2]", "(multlast [4 2 9 6]) -> [6 6 6 6]", "(multlast [7 0 3 2]) -> [2 2 2 2]", "(multlast [5 8 6]) -> [6 6 6]", "(multlast [1 1 0 2 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 6 1 0]) -> [0 0 0 0]"], "time": 0.24826, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [2 6 6]) -> [6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 1]) -> [1 1]", "(multlast [8 9 1 7 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 2 2 0]) -> [0 0 0 0]", "(multlast [0 4 6 2 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [8 9 2 9 5]) -> [5 5 5 5 5]", "(multlast [5]) -> [5]", "(multlast [1 4 4 8]) -> [8 8 8 8]", "(multlast [3 2 4 9 1]) -> [1 1 1 1 1]", "(multlast [7 1 8 3 4]) -> [4 4 4 4 4]", "(multlast [4]) -> [4]", "(multlast [7 6 8]) -> [8 8 8]", "(multlast [8 5 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [1 4 3 9]) -> [9 9 9 9]", "(multlast [4 4 3 5]) -> [5 5 5 5]", "(multlast [1 0 7 9 7]) -> [7 7 7 7 7]", "(multlast [1 7]) -> [7 7]", "(multlast [1 0 3]) -> [3 3 3]", "(multlast [7 6 7 2 4]) -> [4 4 4 4 4]", "(multlast [7]) -> [7]", "(multlast [8 8]) -> [8 8]", "(multlast [9]) -> [9]", "(multlast [2 6 9]) -> [9 9 9]", "(multlast [2 3]) -> [3 3]", "(multlast [7 9]) -> [9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 4 7 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 4 5 4 4]) -> [4 4 4 4 4]", "(multlast [7 2 0]) -> [0 0 0]", "(multlast [8 3 2 5 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [0 8 7 9]) -> [9 9 9 9]", "(multlast [7 8]) -> [8 8]", "(multlast []) -> []", "(multlast [9 5 5 6 9]) -> [9 9 9 9 9]", "(multlast [5 9 8 5 1]) -> [1 1 1 1 1]", "(multlast [2 7]) -> [7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 0 1 3 9]) -> [9 9 9 9 9]", "(multlast [0 3]) -> [3 3]", "(multlast [7]) -> [7]", "(multlast [9 1 0]) -> [0 0 0]", "(multlast [2 3 9 8]) -> [8 8 8 8]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [4 5]) -> [5 5]", "(multlast [1 6 4 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [4]) -> [4]", "(multlast [9 8]) -> [8 8]", "(multlast [6 8]) -> [8 8]", "(multlast [9]) -> [9]", "(multlast [7]) -> [7]", "(multlast [8 9 5 9 0]) -> [0 0 0 0 0]", "(multlast [9]) -> [9]", "(multlast [2 9 0 7]) -> [7 7 7 7]", "(multlast [1 0 4]) -> [4 4 4]", "(multlast [0 3 9 9 3]) -> [3 3 3 3 3]"], "time": 0.288539, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 3]) -> [3 3]", "(multlast [4 9 0 4 9]) -> [9 9 9 9 9]", "(multlast [7 9 1 5]) -> [5 5 5 5]", "(multlast [8 1]) -> [1 1]", "(multlast [8]) -> [8]", "(multlast [0 4 8 3]) -> [3 3 3 3]", "(multlast [6 4 5 8 1]) -> [1 1 1 1 1]", "(multlast [8 1]) -> [1 1]", "(multlast [1]) -> [1]", "(multlast [3 7 3]) -> [3 3 3]", "(multlast [0 5 7 9 3]) -> [3 3 3 3 3]", "(multlast [0 0 5 5 7]) -> [7 7 7 7 7]", "(multlast [0 9 2 1]) -> [1 1 1 1]", "(multlast [8]) -> [8]", "(multlast [8 8 6]) -> [6 6 6]", "(multlast [3 9 0 9 8]) -> [8 8 8 8 8]", "(multlast [0 5]) -> [5 5]", "(multlast [9 8 7 6]) -> [6 6 6 6]", "(multlast [4 2 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [9 6 3 2 3]) -> [3 3 3 3 3]", "(multlast [3]) -> [3]", "(multlast [6 2]) -> [2 2]", "(multlast [9]) -> [9]", "(multlast [0 9 6 8 5]) -> [5 5 5 5 5]", "(multlast []) -> []", "(multlast [8 2 3 5]) -> [5 5 5 5]", "(multlast [2]) -> [2]", "(multlast [6 2 8 4]) -> [4 4 4 4]", "(multlast [2 2]) -> [2 2]", "(multlast [0]) -> [0]", "(multlast [5 5 1 1 8]) -> [8 8 8 8 8]", "(multlast [0 0]) -> [0 0]", "(multlast [2 4 1 3 1]) -> [1 1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [7 8]) -> [8 8]", "(multlast [8 5 6 3]) -> [3 3 3 3]", "(multlast [5]) -> [5]", "(multlast []) -> []", "(multlast [6 0 3 3 7]) -> [7 7 7 7 7]", "(multlast [6]) -> [6]", "(multlast [9 5]) -> [5 5]", "(multlast [1 3 8 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [1 9 6]) -> [6 6 6]", "(multlast [2 5]) -> [5 5]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 7 7 1 8]) -> [8 8 8 8 8]", "(multlast [5 8 0 2]) -> [2 2 2 2]", "(multlast [0 0 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [2 6 1 0 1]) -> [1 1 1 1 1]", "(multlast [1 1 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 4]) -> [4 4]", "(multlast []) -> []", "(multlast [1 4 7]) -> [7 7 7]", "(multlast [1 2 8 7 7]) -> [7 7 7 7 7]", "(multlast [6 7 9 1 4]) -> [4 4 4 4 4]", "(multlast [2 8 8 3 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [8 7 9]) -> [9 9 9]", "(multlast [2 1]) -> [1 1]", "(multlast [8 4]) -> [4 4]", "(multlast [6 8 9]) -> [9 9 9]", "(multlast [0 3 8 0]) -> [0 0 0 0]"], "time": 0.269108, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [1 8]) -> [8 8]", "(multlast [3 0 0 5 7]) -> [7 7 7 7 7]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [6 6 6 3 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [1 7 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 2 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [1 6 2 5]) -> [5 5 5 5]", "(multlast [2 5 0 4]) -> [4 4 4 4]", "(multlast [8 6 6 8]) -> [8 8 8 8]", "(multlast [5 5 7 6 6]) -> [6 6 6 6 6]", "(multlast [5 4 0 6 8]) -> [8 8 8 8 8]", "(multlast [0 7]) -> [7 7]", "(multlast [2 8 4 0]) -> [0 0 0 0]", "(multlast [6 4 2 7 6]) -> [6 6 6 6 6]", "(multlast [2 1 3 8 9]) -> [9 9 9 9 9]", "(multlast [9 5 7 1 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [2 6 5]) -> [5 5 5]", "(multlast [2 5 0 7]) -> [7 7 7 7]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast [9 6 0 7 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [9 7]) -> [7 7]", "(multlast [4]) -> [4]", "(multlast [0 2 9]) -> [9 9 9]", "(multlast []) -> []", "(multlast [3]) -> [3]", "(multlast [1]) -> [1]", "(multlast [7 3]) -> [3 3]", "(multlast [0 1 6]) -> [6 6 6]", "(multlast [4 8 2 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [6 2 4]) -> [4 4 4]", "(multlast [7 6 5 1]) -> [1 1 1 1]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [9 6]) -> [6 6]", "(multlast [1]) -> [1]", "(multlast [9]) -> [9]", "(multlast [0 7 8 7 1]) -> [1 1 1 1 1]", "(multlast [5 7]) -> [7 7]", "(multlast [0 8 7 0]) -> [0 0 0 0]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [8 2 8 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [2 4 1]) -> [1 1 1]", "(multlast [3 6 5 6 4]) -> [4 4 4 4 4]", "(multlast [9 0 2 2]) -> [2 2 2 2]", "(multlast [3 5 2 2]) -> [2 2 2 2]", "(multlast [6 2 8 6 0]) -> [0 0 0 0 0]"], "time": 0.282673, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [1 1 7]) -> [7 7 7]", "(multlast [4]) -> [4]", "(multlast [1 8 3 1 1]) -> [1 1 1 1 1]", "(multlast [7 4 2 3 7]) -> [7 7 7 7 7]", "(multlast [1 5 0 6 7]) -> [7 7 7 7 7]", "(multlast [4 8]) -> [8 8]", "(multlast [5 2]) -> [2 2]", "(multlast [6 7 6 4]) -> [4 4 4 4]", "(multlast [2]) -> [2]", "(multlast [0 3 9 8 8]) -> [8 8 8 8 8]", "(multlast [6 4 1 7 6]) -> [6 6 6 6 6]", "(multlast [6 9 4]) -> [4 4 4]", "(multlast [9 4 7 2 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [3 3 7 7]) -> [7 7 7 7]", "(multlast [1 9 3 8]) -> [8 8 8 8]", "(multlast [9 2 0]) -> [0 0 0]", "(multlast [7 0 4]) -> [4 4 4]", "(multlast [5 8]) -> [8 8]", "(multlast [7 3 6 1]) -> [1 1 1 1]", "(multlast [2 5]) -> [5 5]", "(multlast [6 2 2 9 5]) -> [5 5 5 5 5]", "(multlast [4 8 7 5]) -> [5 5 5 5]", "(multlast [5 4]) -> [4 4]", "(multlast []) -> []", "(multlast [5 5 1 4 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [0 0 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [7 7 1 9 6]) -> [6 6 6 6 6]", "(multlast [5 4 4 9]) -> [9 9 9 9]", "(multlast [3 8]) -> [8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 4 2]) -> [2 2 2]", "(multlast [4 3 5 8 3]) -> [3 3 3 3 3]", "(multlast [8 7 7 1 6]) -> [6 6 6 6 6]", "(multlast [5 4 6 5 7]) -> [7 7 7 7 7]", "(multlast [8 2]) -> [2 2]", "(multlast [3 1]) -> [1 1]", "(multlast [5 9 7 7]) -> [7 7 7 7]", "(multlast [6 0]) -> [0 0]", "(multlast [3 1 1 6 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [2 9 5 8]) -> [8 8 8 8]", "(multlast [5 2 7 6]) -> [6 6 6 6]", "(multlast [3 5 3 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 2 8]) -> [8 8 8]", "(multlast [9 8 7 3 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [6 5]) -> [5 5]", "(multlast [3 0]) -> [0 0]", "(multlast [6 6 8]) -> [8 8 8]", "(multlast [5 9]) -> [9 9]", "(multlast []) -> []", "(multlast [1 1 0 7 5]) -> [5 5 5 5 5]", "(multlast [9 2 9 3]) -> [3 3 3 3]", "(multlast [1 1 8 2 1]) -> [1 1 1 1 1]", "(multlast [7 7]) -> [7 7]", "(multlast [4 4 9 5]) -> [5 5 5 5]", "(multlast [0 7 9 1]) -> [1 1 1 1]", "(multlast [1 3 0 1]) -> [1 1 1 1]", "(multlast [7]) -> [7]", "(multlast [5 2]) -> [2 2]", "(multlast [4 6 2]) -> [2 2 2]", "(multlast [4]) -> [4]", "(multlast [5 0 9 4 4]) -> [4 4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 1 1]) -> [1 1 1]", "(multlast [3 7 8]) -> [8 8 8]", "(multlast [3 9 7 0]) -> [0 0 0 0]"], "time": 0.269639, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8]) -> [8]", "(multlast [8 3]) -> [3 3]", "(multlast []) -> []", "(multlast [8 9 4]) -> [4 4 4]", "(multlast [5 2 3 6 2]) -> [2 2 2 2 2]", "(multlast [9 0]) -> [0 0]", "(multlast [1]) -> [1]", "(multlast [4 5 7 1]) -> [1 1 1 1]", "(multlast [4 2 8]) -> [8 8 8]", "(multlast [9]) -> [9]", "(multlast [9 2]) -> [2 2]", "(multlast [1 3 1 6]) -> [6 6 6 6]", "(multlast [1 4 0 4]) -> [4 4 4 4]", "(multlast [5 4 9 7 8]) -> [8 8 8 8 8]", "(multlast [5 5 9 3 0]) -> [0 0 0 0 0]", "(multlast [2]) -> [2]", "(multlast [4 1 6 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [7 8 8]) -> [8 8 8]", "(multlast [7 9 9 5 7]) -> [7 7 7 7 7]", "(multlast [6 2]) -> [2 2]", "(multlast [3 5 2]) -> [2 2 2]", "(multlast [8]) -> [8]", "(multlast [8]) -> [8]", "(multlast [0 6 6]) -> [6 6 6]", "(multlast [6 4 9 8 7]) -> [7 7 7 7 7]", "(multlast [0 2 4 4]) -> [4 4 4 4]", "(multlast [1 8]) -> [8 8]", "(multlast [0 3 1 4 1]) -> [1 1 1 1 1]", "(multlast [3 6 8 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [5 6 4 6 7]) -> [7 7 7 7 7]", "(multlast [4 9 4]) -> [4 4 4]", "(multlast [9 9]) -> [9 9]", "(multlast [3 8]) -> [8 8]", "(multlast [7 5 9 0]) -> [0 0 0 0]", "(multlast [4 0 0 4]) -> [4 4 4 4]", "(multlast [9 1]) -> [1 1]", "(multlast [6 2 2 9]) -> [9 9 9 9]", "(multlast [5 6 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [1 9 5 9]) -> [9 9 9 9]", "(multlast [5 6 3 3 4]) -> [4 4 4 4 4]", "(multlast [2 5]) -> [5 5]", "(multlast [5 3 2]) -> [2 2 2]", "(multlast [4 0 3 6 6]) -> [6 6 6 6 6]", "(multlast [3 1 7 9]) -> [9 9 9 9]", "(multlast [4 8 5]) -> [5 5 5]", "(multlast [6 0 9 0]) -> [0 0 0 0]", "(multlast [8 3 4 0]) -> [0 0 0 0]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [6 3]) -> [3 3]", "(multlast [3 1 5 7]) -> [7 7 7 7]", "(multlast [3 4 0]) -> [0 0 0]", "(multlast [6 7 5 3 2]) -> [2 2 2 2 2]", "(multlast [6 6 5]) -> [5 5 5]", "(multlast [3 9 5 9 0]) -> [0 0 0 0 0]", "(multlast [8 5 4]) -> [4 4 4]", "(multlast [3 0 6]) -> [6 6 6]", "(multlast [7 6]) -> [6 6]", "(multlast []) -> []", "(multlast [8 7]) -> [7 7]", "(multlast [6 4 2 5 6]) -> [6 6 6 6 6]", "(multlast [5 6 9 3 1]) -> [1 1 1 1 1]", "(multlast [0 8]) -> [8 8]", "(multlast [3]) -> [3]", "(multlast []) -> []", "(multlast [6 6 6 2 2]) -> [2 2 2 2 2]", "(multlast [0 8 3]) -> [3 3 3]", "(multlast [9]) -> [9]", "(multlast [1 0 0 5 6]) -> [6 6 6 6 6]", "(multlast [7 6 6 0 6]) -> [6 6 6 6 6]", "(multlast [5 3 7]) -> [7 7 7]"], "time": 0.248392, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [5 2 3 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [0 0]) -> [0 0]", "(multlast [7]) -> [7]", "(multlast [3]) -> [3]", "(multlast [6 7 9]) -> [9 9 9]", "(multlast [2 6 2 9]) -> [9 9 9 9]", "(multlast [4 8 4 0 0]) -> [0 0 0 0 0]", "(multlast [0 5]) -> [5 5]", "(multlast []) -> []", "(multlast [6 1 9]) -> [9 9 9]", "(multlast [9 1]) -> [1 1]", "(multlast [3 3 8 6 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [5]) -> [5]", "(multlast [2 7 3]) -> [3 3 3]", "(multlast [3 7 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [0 0]) -> [0 0]", "(multlast [9 3 3 5]) -> [5 5 5 5]", "(multlast [1]) -> [1]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [3 4]) -> [4 4]", "(multlast [9]) -> [9]", "(multlast [5]) -> [5]", "(multlast [3]) -> [3]", "(multlast [6]) -> [6]", "(multlast [8 4]) -> [4 4]", "(multlast [9 8]) -> [8 8]", "(multlast [0 1]) -> [1 1]", "(multlast [5 8]) -> [8 8]", "(multlast [3 6]) -> [6 6]", "(multlast []) -> []", "(multlast [9 8 7 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [3 5 4]) -> [4 4 4]", "(multlast [2]) -> [2]", "(multlast [8 3 0 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [7 5]) -> [5 5]", "(multlast [3]) -> [3]", "(multlast [4 6 5 0 3]) -> [3 3 3 3 3]", "(multlast [8 3 0 1 6]) -> [6 6 6 6 6]", "(multlast [0 6 9]) -> [9 9 9]", "(multlast [2 9 0 0 7]) -> [7 7 7 7 7]", "(multlast [0 7]) -> [7 7]", "(multlast [9 7 1 4 5]) -> [5 5 5 5 5]", "(multlast [5 2 5 5 4]) -> [4 4 4 4 4]", "(multlast [6]) -> [6]", "(multlast [6 9 8]) -> [8 8 8]", "(multlast [7 5 9 9 8]) -> [8 8 8 8 8]", "(multlast [5 1]) -> [1 1]", "(multlast []) -> []", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [2 3 8 9 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [1 0]) -> [0 0]", "(multlast [1]) -> [1]", "(multlast [3 5 3]) -> [3 3 3]", "(multlast [3]) -> [3]", "(multlast [8 2]) -> [2 2]", "(multlast []) -> []"], "time": 0.214899, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 1 4 9]) -> [9 9 9 9]", "(multlast [8]) -> [8]", "(multlast [2 7 6]) -> [6 6 6]", "(multlast [4 9 1 7]) -> [7 7 7 7]", "(multlast [4 7]) -> [7 7]", "(multlast [3 4 9]) -> [9 9 9]", "(multlast [2]) -> [2]", "(multlast [1]) -> [1]", "(multlast [3 4]) -> [4 4]", "(multlast [5 5 9 0]) -> [0 0 0 0]", "(multlast [4 7 9]) -> [9 9 9]", "(multlast [1]) -> [1]", "(multlast [4 6 1 9 2]) -> [2 2 2 2 2]", "(multlast [5]) -> [5]", "(multlast [7 5 9 5 1]) -> [1 1 1 1 1]", "(multlast [5 2]) -> [2 2]", "(multlast [1]) -> [1]", "(multlast [8 1 3 6]) -> [6 6 6 6]", "(multlast [8 7 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [5 7 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 7 1 6]) -> [6 6 6 6]", "(multlast [2 6 5 7]) -> [7 7 7 7]", "(multlast [4]) -> [4]", "(multlast [0 4]) -> [4 4]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [3 0 1 3 5]) -> [5 5 5 5 5]", "(multlast [7 8]) -> [8 8]", "(multlast [8 9 2 9 8]) -> [8 8 8 8 8]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [8 3 8]) -> [8 8 8]", "(multlast [9 5]) -> [5 5]", "(multlast [0 4 7 7]) -> [7 7 7 7]", "(multlast [1 8]) -> [8 8]", "(multlast [6 6 2 6 1]) -> [1 1 1 1 1]", "(multlast [2 8 4 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [3 6]) -> [6 6]", "(multlast [7 6 0]) -> [0 0 0]", "(multlast [4 5 3 4 3]) -> [3 3 3 3 3]", "(multlast [2 1 1 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [2 0]) -> [0 0]", "(multlast [5 5 8 4]) -> [4 4 4 4]", "(multlast [3 7 8]) -> [8 8 8]", "(multlast [2]) -> [2]", "(multlast [2 5 0 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast [0 5 3 1]) -> [1 1 1 1]", "(multlast [5 5 7 9 3]) -> [3 3 3 3 3]", "(multlast [3 4 0 5 7]) -> [7 7 7 7 7]", "(multlast [1 8 9]) -> [9 9 9]", "(multlast [2 1 0 8]) -> [8 8 8 8]", "(multlast [5 4 2]) -> [2 2 2]", "(multlast [0 0]) -> [0 0]", "(multlast []) -> []", "(multlast [2 2]) -> [2 2]", "(multlast []) -> []", "(multlast [9 6 1 5]) -> [5 5 5 5]", "(multlast [3 0 6 9 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [9 0 5]) -> [5 5 5]", "(multlast [5]) -> [5]", "(multlast [3 1]) -> [1 1]", "(multlast [1 2 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [5 5]) -> [5 5]", "(multlast [8 5 9 4]) -> [4 4 4 4]", "(multlast [7 5 8 2 8]) -> [8 8 8 8 8]"], "time": 0.249583, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [4 8 5 4 6]) -> [6 6 6 6 6]", "(multlast [6 5 2]) -> [2 2 2]", "(multlast [0]) -> [0]", "(multlast [5 6 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast [5 8 6 2]) -> [2 2 2 2]", "(multlast [3 1 3 4]) -> [4 4 4 4]", "(multlast [1 4 5 6]) -> [6 6 6 6]", "(multlast [3 7 3 7 0]) -> [0 0 0 0 0]", "(multlast [3 2]) -> [2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 1 4 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [4 4 8]) -> [8 8 8]", "(multlast [4 9 6]) -> [6 6 6]", "(multlast [9 0 7 6 6]) -> [6 6 6 6 6]", "(multlast [0 0]) -> [0 0]", "(multlast [8 7]) -> [7 7]", "(multlast [7]) -> [7]", "(multlast [2 9]) -> [9 9]", "(multlast [1 3 2]) -> [2 2 2]", "(multlast [0 7 6 9]) -> [9 9 9 9]", "(multlast [8 9 6 6 8]) -> [8 8 8 8 8]", "(multlast [9 9]) -> [9 9]", "(multlast [0 6 7]) -> [7 7 7]", "(multlast [7]) -> [7]", "(multlast [5]) -> [5]", "(multlast [1 0 9 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [6]) -> [6]", "(multlast [1 5 8]) -> [8 8 8]", "(multlast [5 1]) -> [1 1]", "(multlast [0 5 1 9]) -> [9 9 9 9]", "(multlast [1 9]) -> [9 9]", "(multlast [1]) -> [1]", "(multlast [4 8 3 8]) -> [8 8 8 8]", "(multlast [8 2 3 9 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [9]) -> [9]", "(multlast [6]) -> [6]", "(multlast []) -> []", "(multlast [6 7 0]) -> [0 0 0]", "(multlast [7 6 1]) -> [1 1 1]", "(multlast [7 5 5 9 0]) -> [0 0 0 0 0]", "(multlast [5]) -> [5]", "(multlast [4 5 0 9 7]) -> [7 7 7 7 7]", "(multlast [5 2 4]) -> [4 4 4]", "(multlast [4]) -> [4]", "(multlast [5 1]) -> [1 1]", "(multlast []) -> []", "(multlast [8 4]) -> [4 4]", "(multlast [3]) -> [3]", "(multlast [9]) -> [9]", "(multlast [8 8 3]) -> [3 3 3]", "(multlast [3 2 2 9]) -> [9 9 9 9]", "(multlast [6 8 9 0]) -> [0 0 0 0]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [0 4 4 4]) -> [4 4 4 4]", "(multlast [3]) -> [3]", "(multlast [7 1 4 8 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [0 2]) -> [2 2]", "(multlast [5 4]) -> [4 4]", "(multlast [8]) -> [8]", "(multlast [0 0 1 4 6]) -> [6 6 6 6 6]", "(multlast [1 7 9 2]) -> [2 2 2 2]", "(multlast []) -> []", "(multlast [9 7 1]) -> [1 1 1]", "(multlast []) -> []"], "time": 0.27671, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [9 5 5 3]) -> [3 3 3 3]", "(multlast [5 8 5 4 7]) -> [7 7 7 7 7]", "(multlast [2 1]) -> [1 1]", "(multlast [9]) -> [9]", "(multlast [4 0 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 5 6 1 6]) -> [6 6 6 6 6]", "(multlast [0]) -> [0]", "(multlast [8]) -> [8]", "(multlast [7 4 4 9 1]) -> [1 1 1 1 1]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [1 0]) -> [0 0]", "(multlast [6 9 6]) -> [6 6 6]", "(multlast [0]) -> [0]", "(multlast [9 9 1 3]) -> [3 3 3 3]", "(multlast [8]) -> [8]", "(multlast [0 8 6 1]) -> [1 1 1 1]", "(multlast [9 0 1]) -> [1 1 1]", "(multlast [3]) -> [3]", "(multlast [8 2 4 4 5]) -> [5 5 5 5 5]", "(multlast [8 6 1 0 4]) -> [4 4 4 4 4]", "(multlast [9 4 0]) -> [0 0 0]", "(multlast [9 5]) -> [5 5]", "(multlast [2 3]) -> [3 3]", "(multlast [0 2]) -> [2 2]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [3 1 6]) -> [6 6 6]", "(multlast [9 5 5 7]) -> [7 7 7 7]", "(multlast [0 2 6 7]) -> [7 7 7 7]", "(multlast [2 6 7 9]) -> [9 9 9 9]", "(multlast [3 5 8]) -> [8 8 8]", "(multlast [3]) -> [3]", "(multlast [9 2 9 1]) -> [1 1 1 1]", "(multlast [1 4 3 7 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [7 1]) -> [1 1]", "(multlast [3 7]) -> [7 7]", "(multlast []) -> []", "(multlast [1 3]) -> [3 3]", "(multlast [4]) -> [4]", "(multlast [3 6 6 2 6]) -> [6 6 6 6 6]", "(multlast [2 9]) -> [9 9]", "(multlast [5]) -> [5]", "(multlast [5 0 5 1]) -> [1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [5 6 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [7 0]) -> [0 0]", "(multlast [7 7]) -> [7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 9 0 3]) -> [3 3 3 3]", "(multlast [5 3 8 7]) -> [7 7 7 7]", "(multlast [6 7 5 3 7]) -> [7 7 7 7 7]", "(multlast [8 4 0 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 3 5]) -> [5 5 5]", "(multlast [3 7 4]) -> [4 4 4]", "(multlast [8 4 2 8]) -> [8 8 8 8]", "(multlast []) -> []", "(multlast [0 4 2]) -> [2 2 2]", "(multlast [6 9 3]) -> [3 3 3]", "(multlast [2 6 9 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [1 5 6 0 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [8 8 5 7]) -> [7 7 7 7]"], "time": 0.24153, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [8 8 7 2 5]) -> [5 5 5 5 5]", "(multlast [9 5]) -> [5 5]", "(multlast [0 8 2 7]) -> [7 7 7 7]", "(multlast [6 0 2 1 7]) -> [7 7 7 7 7]", "(multlast [8]) -> [8]", "(multlast [6 4]) -> [4 4]", "(multlast [1 9 7]) -> [7 7 7]", "(multlast [8 6 2 4 6]) -> [6 6 6 6 6]", "(multlast [7 3 9 9 2]) -> [2 2 2 2 2]", "(multlast [1 1 0]) -> [0 0 0]", "(multlast [5]) -> [5]", "(multlast [0 5 7 0 6]) -> [6 6 6 6 6]", "(multlast [3 0 7 5]) -> [5 5 5 5]", "(multlast [8]) -> [8]", "(multlast [5 1]) -> [1 1]", "(multlast [1]) -> [1]", "(multlast [3 7]) -> [7 7]", "(multlast [3 2]) -> [2 2]", "(multlast [2 6 1]) -> [1 1 1]", "(multlast [9 1 3 6 6]) -> [6 6 6 6 6]", "(multlast [0 4 6 2]) -> [2 2 2 2]", "(multlast [5 8]) -> [8 8]", "(multlast [3 6]) -> [6 6]", "(multlast [4 6 4 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [2 7 5 4]) -> [4 4 4 4]", "(multlast [2]) -> [2]", "(multlast [9 1 4]) -> [4 4 4]", "(multlast [4 2]) -> [2 2]", "(multlast [8 2]) -> [2 2]", "(multlast [5 8 7 7]) -> [7 7 7 7]", "(multlast [0 2]) -> [2 2]", "(multlast [2 7]) -> [7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7 1 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [3 1 5 1]) -> [1 1 1 1]", "(multlast [1 5 2 1]) -> [1 1 1 1]", "(multlast [7 9 0 0]) -> [0 0 0 0]", "(multlast [9]) -> [9]", "(multlast [8 5 4 1]) -> [1 1 1 1]", "(multlast []) -> []", "(multlast [5 6 0 8]) -> [8 8 8 8]", "(multlast [0]) -> [0]", "(multlast [7]) -> [7]", "(multlast [7]) -> [7]", "(multlast [1 0 3 1 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [5]) -> [5]", "(multlast [9 7 5 8 4]) -> [4 4 4 4 4]", "(multlast [5]) -> [5]", "(multlast [3 9 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5]) -> [5]", "(multlast [2 0 4 6]) -> [6 6 6 6]", "(multlast [6]) -> [6]", "(multlast [4 2 3 0]) -> [0 0 0 0]", "(multlast [4]) -> [4]", "(multlast [2]) -> [2]", "(multlast [6 3 2]) -> [2 2 2]", "(multlast [0 5 3 3]) -> [3 3 3 3]", "(multlast [5 6 7 3]) -> [3 3 3 3]", "(multlast [5 3 7]) -> [7 7 7]", "(multlast [7 7 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [8 1 5 7]) -> [7 7 7 7]", "(multlast [9 2 9 9 4]) -> [4 4 4 4 4]", "(multlast [8 7 4 0]) -> [0 0 0 0]", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast []) -> []"], "time": 0.207308, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [0 4 6 0]) -> [0 0 0 0]", "(multlast [4 7 2]) -> [2 2 2]", "(multlast [9 2 6 0 1]) -> [1 1 1 1 1]", "(multlast [7 8]) -> [8 8]", "(multlast [4 0 3 4 9]) -> [9 9 9 9 9]", "(multlast []) -> []", "(multlast [9 0 3 8]) -> [8 8 8 8]", "(multlast [8 0 4 9 3]) -> [3 3 3 3 3]", "(multlast [8 8 6 0 9]) -> [9 9 9 9 9]", "(multlast [7 2]) -> [2 2]", "(multlast [4 5 0 9 5]) -> [5 5 5 5 5]", "(multlast [9 0 5 2]) -> [2 2 2 2]", "(multlast [8]) -> [8]", "(multlast [7 7 8]) -> [8 8 8]", "(multlast [6 6]) -> [6 6]", "(multlast [4]) -> [4]", "(multlast [9 8 1 2 8]) -> [8 8 8 8 8]", "(multlast []) -> []", "(multlast [0 7 2]) -> [2 2 2]", "(multlast []) -> []", "(multlast [1 3 3 1]) -> [1 1 1 1]", "(multlast [6 3 1 2]) -> [2 2 2 2]", "(multlast [3 7 1 7]) -> [7 7 7 7]", "(multlast [8]) -> [8]", "(multlast [4]) -> [4]", "(multlast [9 1 4 3 6]) -> [6 6 6 6 6]", "(multlast [4 2 9 0 8]) -> [8 8 8 8 8]", "(multlast [3 8 0 0]) -> [0 0 0 0]", "(multlast [9 4 6 3]) -> [3 3 3 3]", "(multlast [2 7 1 3 7]) -> [7 7 7 7 7]", "(multlast [9 9 0]) -> [0 0 0]", "(multlast [9 0 7 7 0]) -> [0 0 0 0 0]", "(multlast [5 0 5 4 6]) -> [6 6 6 6 6]", "(multlast [4 4 3]) -> [3 3 3]", "(multlast [0]) -> [0]", "(multlast []) -> []", "(multlast [0 8 8 0 3]) -> [3 3 3 3 3]", "(multlast [6 4]) -> [4 4]", "(multlast [9]) -> [9]", "(multlast []) -> []", "(multlast [5 0]) -> [0 0]", "(multlast [8 8 5 0 9]) -> [9 9 9 9 9]", "(multlast [6 7 0 8 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [0 6]) -> [6 6]", "(multlast [3]) -> [3]", "(multlast [1 5]) -> [5 5]", "(multlast [5 6]) -> [6 6]", "(multlast [0 2]) -> [2 2]", "(multlast []) -> []", "(multlast [4 0 7 4]) -> [4 4 4 4]", "(multlast [9 9 3]) -> [3 3 3]", "(multlast [3 8 4 6 8]) -> [8 8 8 8 8]", "(multlast [5]) -> [5]", "(multlast [2 3 2 1]) -> [1 1 1 1]", "(multlast [5 6 1 6]) -> [6 6 6 6]", "(multlast [7 1]) -> [1 1]", "(multlast [5 9 8]) -> [8 8 8]", "(multlast [2 8 0 3]) -> [3 3 3 3]", "(multlast []) -> []", "(multlast [1 8 7]) -> [7 7 7]", "(multlast [2 5 6 3]) -> [3 3 3 3]", "(multlast [1 8 0 7 6]) -> [6 6 6 6 6]", "(multlast [6 9 8 8]) -> [8 8 8 8]", "(multlast [0 1]) -> [1 1]", "(multlast [1 4 9 0 5]) -> [5 5 5 5 5]", "(multlast [1]) -> [1]", "(multlast []) -> []", "(multlast [4 1 2]) -> [2 2 2]", "(multlast [3 3 1 7]) -> [7 7 7 7]", "(multlast []) -> []", "(multlast [2 4 3 9]) -> [9 9 9 9]"], "time": 0.141569, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast []) -> []", "(multlast [4 6 7 0 8]) -> [8 8 8 8 8]", "(multlast [3]) -> [3]", "(multlast [7 8 2 2]) -> [2 2 2 2]", "(multlast [9 1 5 0]) -> [0 0 0 0]", "(multlast [3]) -> [3]", "(multlast [1 2 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [8 6 6 4]) -> [4 4 4 4]", "(multlast [6]) -> [6]", "(multlast [1 9 1]) -> [1 1 1]", "(multlast [1 6 0 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 8 7 0]) -> [0 0 0 0]", "(multlast [0 3 3 3]) -> [3 3 3 3]", "(multlast [4]) -> [4]", "(multlast []) -> []", "(multlast [4]) -> [4]", "(multlast [3 2 5]) -> [5 5 5]", "(multlast [6 5]) -> [5 5]", "(multlast [8 1 1 3 8]) -> [8 8 8 8 8]", "(multlast [9 9 4]) -> [4 4 4]", "(multlast [6 4 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [1 1]) -> [1 1]", "(multlast [6 6 2 1 4]) -> [4 4 4 4 4]", "(multlast [5 8 9 9 3]) -> [3 3 3 3 3]", "(multlast [6 6 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [3 7 8 1 5]) -> [5 5 5 5 5]", "(multlast [6]) -> [6]", "(multlast [5 8 3 7]) -> [7 7 7 7]", "(multlast [7]) -> [7]", "(multlast [1 2 1 7 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [9 4 5 3]) -> [3 3 3 3]", "(multlast [3 7 6 2 9]) -> [9 9 9 9 9]", "(multlast [0]) -> [0]", "(multlast [3 0]) -> [0 0]", "(multlast []) -> []", "(multlast [8 0 3 0]) -> [0 0 0 0]", "(multlast []) -> []", "(multlast [4 5]) -> [5 5]", "(multlast [4 9 1 6 7]) -> [7 7 7 7 7]", "(multlast [4 2 4]) -> [4 4 4]", "(multlast [5 6 6 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [8 9 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [7]) -> [7]", "(multlast [7 2 8 8]) -> [8 8 8 8]", "(multlast [4 6]) -> [6 6]", "(multlast [6 0 7 9]) -> [9 9 9 9]", "(multlast [2 6]) -> [6 6]", "(multlast [7 1]) -> [1 1]", "(multlast [3 7]) -> [7 7]", "(multlast [5]) -> [5]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [7 6 7 2 3]) -> [3 3 3 3 3]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast [4 9]) -> [9 9]", "(multlast [2 9 8 6 8]) -> [8 8 8 8 8]", "(multlast [3 6 8 5]) -> [5 5 5 5]", "(multlast []) -> []", "(multlast [0 9 0]) -> [0 0 0]", "(multlast [8 4 1 0 6]) -> [6 6 6 6 6]", "(multlast [4 3 3 1]) -> [1 1 1 1]", "(multlast [6 2 0 6 5]) -> [5 5 5 5 5]"], "time": 0.145689, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [3]) -> [3]", "(multlast [0 1 2 4 3]) -> [3 3 3 3 3]", "(multlast [2 3 7]) -> [7 7 7]", "(multlast []) -> []", "(multlast [4 4 8]) -> [8 8 8]", "(multlast [7 5 4 4]) -> [4 4 4 4]", "(multlast [8 1]) -> [1 1]", "(multlast [7 1 8 7]) -> [7 7 7 7]", "(multlast [2 6 4 2 2]) -> [2 2 2 2 2]", "(multlast [1 2 3 7]) -> [7 7 7 7]", "(multlast [5 9]) -> [9 9]", "(multlast [0 0 1 4]) -> [4 4 4 4]", "(multlast [4 6 8]) -> [8 8 8]", "(multlast [1]) -> [1]", "(multlast [1 8 6]) -> [6 6 6]", "(multlast [9 6 6 8]) -> [8 8 8 8]", "(multlast [9 3 9]) -> [9 9 9]", "(multlast [5 3 6]) -> [6 6 6]", "(multlast [9 7 5 4]) -> [4 4 4 4]", "(multlast [7 6 4]) -> [4 4 4]", "(multlast [0 1 4 7]) -> [7 7 7 7]", "(multlast [2 1]) -> [1 1]", "(multlast []) -> []", "(multlast [9 8]) -> [8 8]", "(multlast [4 4]) -> [4 4]", "(multlast []) -> []", "(multlast [1 1 4]) -> [4 4 4]", "(multlast [4 2 9]) -> [9 9 9]", "(multlast [2]) -> [2]", "(multlast [0 9 6 4]) -> [4 4 4 4]", "(multlast [1 5 0 6 7]) -> [7 7 7 7 7]", "(multlast [2 1 2 7]) -> [7 7 7 7]", "(multlast [4 8]) -> [8 8]", "(multlast [3 3 5]) -> [5 5 5]", "(multlast []) -> []", "(multlast [3 5 9]) -> [9 9 9]", "(multlast [0 2 6 5 2]) -> [2 2 2 2 2]", "(multlast []) -> []", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [9 8 6 4]) -> [4 4 4 4]", "(multlast [0 5 8]) -> [8 8 8]", "(multlast [4 9 4]) -> [4 4 4]", "(multlast [7 8 1 3]) -> [3 3 3 3]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast [3 0 1 3 4]) -> [4 4 4 4 4]", "(multlast [7 2 0]) -> [0 0 0]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [1 9 3 7]) -> [7 7 7 7]", "(multlast [7 8]) -> [8 8]", "(multlast [5 9 3 5 8]) -> [8 8 8 8 8]", "(multlast [4]) -> [4]", "(multlast [1 9 3 1]) -> [1 1 1 1]", "(multlast [9 4]) -> [4 4]", "(multlast [2 2 9]) -> [9 9 9]", "(multlast [4 9]) -> [9 9]", "(multlast [6 4]) -> [4 4]", "(multlast [4]) -> [4]", "(multlast [6]) -> [6]", "(multlast [6 1 3]) -> [3 3 3]", "(multlast [8]) -> [8]", "(multlast [7 3]) -> [3 3]", "(multlast [3 9 8 4]) -> [4 4 4 4]", "(multlast []) -> []", "(multlast [3 1 8]) -> [8 8 8]", "(multlast [3 7 5 9 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 2 1]) -> [1 1 1]", "(multlast [0 3 3 9]) -> [9 9 9 9]", "(multlast [3 4 1 1 4]) -> [4 4 4 4 4]", "(multlast [2 7 3 6 6]) -> [6 6 6 6 6]"], "time": 0.128319, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [6 6 2 9]) -> [9 9 9 9]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 4 9 8 9]) -> [9 9 9 9 9]", "(multlast [1 1 9 3 3]) -> [3 3 3 3 3]", "(multlast [7 0]) -> [0 0]", "(multlast [0 3]) -> [3 3]", "(multlast [5 7 0 6]) -> [6 6 6 6]", "(multlast [5]) -> [5]", "(multlast [9 0 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [2 1 2 0 1]) -> [1 1 1 1 1]", "(multlast []) -> []", "(multlast [6]) -> [6]", "(multlast [0 1 4 7]) -> [7 7 7 7]", "(multlast [2]) -> [2]", "(multlast []) -> []", "(multlast [4 3 9 8]) -> [8 8 8 8]", "(multlast [2 4 6 6]) -> [6 6 6 6]", "(multlast [4 4 8 4 8]) -> [8 8 8 8 8]", "(multlast [9 4]) -> [4 4]", "(multlast [3 0]) -> [0 0]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [2 4 9 5]) -> [5 5 5 5]", "(multlast [9 3 8 2 7]) -> [7 7 7 7 7]", "(multlast [0 0]) -> [0 0]", "(multlast [2]) -> [2]", "(multlast [4 4 4]) -> [4 4 4]", "(multlast [5 1 8 2 0]) -> [0 0 0 0 0]", "(multlast []) -> []", "(multlast [3 1 1 6 6]) -> [6 6 6 6 6]", "(multlast [5]) -> [5]", "(multlast [9 1 3]) -> [3 3 3]", "(multlast []) -> []", "(multlast [9 1 9 2 5]) -> [5 5 5 5 5]", "(multlast [6 2 9]) -> [9 9 9]", "(multlast [5 8 1]) -> [1 1 1]", "(multlast [1 4 6 2 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 9]) -> [9 9]", "(multlast [0]) -> [0]", "(multlast [9 1 4 2 9]) -> [9 9 9 9 9]", "(multlast [6 7 1 7]) -> [7 7 7 7]", "(multlast [1 4 1 1]) -> [1 1 1 1]", "(multlast [1]) -> [1]", "(multlast [1 6 4 9 9]) -> [9 9 9 9 9]", "(multlast [5 6 7 6 0]) -> [0 0 0 0 0]", "(multlast [6 9 8 9 8]) -> [8 8 8 8 8]", "(multlast [7 9 8]) -> [8 8 8]", "(multlast []) -> []", "(multlast [9 5 6 6]) -> [6 6 6 6]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [6 2 3 3]) -> [3 3 3 3]", "(multlast [5 6 1]) -> [1 1 1]", "(multlast []) -> []", "(multlast [8 1]) -> [1 1]", "(multlast [3 9 2 3]) -> [3 3 3 3]", "(multlast [5 6 0 1 7]) -> [7 7 7 7 7]", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [9 0 0 4]) -> [4 4 4 4]", "(multlast [7 6 2]) -> [2 2 2]", "(multlast [1 9 2]) -> [2 2 2]", "(multlast [8 3 1]) -> [1 1 1]", "(multlast [5 0]) -> [0 0]", "(multlast []) -> []", "(multlast [3 5 8 4 7]) -> [7 7 7 7 7]", "(multlast [0 4 7]) -> [7 7 7]"], "time": 0.135436, "name": "multlast"}
{"solution": "(let multlast (let a (lambda (b) (foldl b (lambda (d c) (map b (lambda (e) c))) [])) _) _)", "examples": ["(multlast [1 8 6 4]) -> [4 4 4 4]", "(multlast [0 9 3]) -> [3 3 3]", "(multlast [6 2 2 4 2]) -> [2 2 2 2 2]", "(multlast [3 8 6 3]) -> [3 3 3 3]", "(multlast [7 0 3]) -> [3 3 3]", "(multlast [5 4 0 1]) -> [1 1 1 1]", "(multlast [4]) -> [4]", "(multlast [2]) -> [2]", "(multlast [8 4]) -> [4 4]", "(multlast [9 1 0]) -> [0 0 0]", "(multlast [4 6 4]) -> [4 4 4]", "(multlast [2 6 7 8 3]) -> [3 3 3 3 3]", "(multlast [5]) -> [5]", "(multlast [0 0 1 5]) -> [5 5 5 5]", "(multlast [7]) -> [7]", "(multlast [4 4 5]) -> [5 5 5]", "(multlast [6 9 0 4]) -> [4 4 4 4]", "(multlast [0]) -> [0]", "(multlast [5 1 4]) -> [4 4 4]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [5 8]) -> [8 8]", "(multlast [5 5 7 7 7]) -> [7 7 7 7 7]", "(multlast [7 6]) -> [6 6]", "(multlast [9 8 9 8]) -> [8 8 8 8]", "(multlast [7 2 6]) -> [6 6 6]", "(multlast [3]) -> [3]", "(multlast [5 3 1]) -> [1 1 1]", "(multlast [3 3]) -> [3 3]", "(multlast [9 2]) -> [2 2]", "(multlast [6 8 8 7 6]) -> [6 6 6 6 6]", "(multlast []) -> []", "(multlast [9 4 1]) -> [1 1 1]", "(multlast [4 9 3 5 3]) -> [3 3 3 3 3]", "(multlast [5 4 2 2]) -> [2 2 2 2]", "(multlast [2 6 0]) -> [0 0 0]", "(multlast [8 2 8 6]) -> [6 6 6 6]", "(multlast [6 5 1 0]) -> [0 0 0 0]", "(multlast [5 8 2 0 6]) -> [6 6 6 6 6]", "(multlast [3 7 5]) -> [5 5 5]", "(multlast [5 2 0]) -> [0 0 0]", "(multlast [4 0 9]) -> [9 9 9]", "(multlast [9]) -> [9]", "(multlast [9 0 8]) -> [8 8 8]", "(multlast [7]) -> [7]", "(multlast [7 8]) -> [8 8]", "(multlast []) -> []", "(multlast [0 7 2 0 4]) -> [4 4 4 4 4]", "(multlast [6 7 0 8]) -> [8 8 8 8]", "(multlast [3 7 7 3 4]) -> [4 4 4 4 4]", "(multlast [9 8 0 6 0]) -> [0 0 0 0 0]", "(multlast [7 0 4 6]) -> [6 6 6 6]", "(multlast [3 0 7 9 7]) -> [7 7 7 7 7]", "(multlast [7 5 8 2]) -> [2 2 2 2]", "(multlast [1 6 5]) -> [5 5 5]", "(multlast [0 4 5 1]) -> [1 1 1 1]", "(multlast [3 2]) -> [2 2]", "(multlast [8 7]) -> [7 7]", "(multlast [5 4 1]) -> [1 1 1]", "(multlast [3 4 1 8]) -> [8 8 8 8]", "(multlast [4 1]) -> [1 1]", "(multlast [7]) -> [7]", "(multlast []) -> []", "(multlast []) -> []", "(multlast [8]) -> [8]", "(multlast [7 7 3]) -> [3 3 3]", "(multlast [8 7 5]) -> [5 5 5]", "(multlast [6 4]) -> [4 4]", "(multlast [0]) -> [0]", "(multlast [4 4]) -> [4 4]", "(multlast [9 4 5 4 2]) -> [2 2 2 2 2]", "(multlast [8 6]) -> [6 6]", "(multlast [6 1 1]) -> [1 1 1]", "(multlast [2]) -> [2]"], "time": 0.160913, "name": "multlast"}
