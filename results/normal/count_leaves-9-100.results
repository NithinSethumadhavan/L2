{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.053867}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3 {1}}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {7}}) -> 1", "(count_leaves {0 {0}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.048219}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.067352}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {5 {8}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {2} {3}}) -> 2", "(count_leaves {8 {1}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (/ 1 c))) 0)) _) _)", "time": 0.357041}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.056177}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9 {1} {9}} {2 {3} {6}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {7 {7}} {5}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.661075}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {4} {4}}}) -> 2", "(count_leaves {1 {5 {9 {0}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {5 {5}}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.678702}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {1 {2}} {7 {3} {4}}}) -> 3", "(count_leaves {7 {7 {0 {7} {3}}} {0 {9}}}) -> 3", "(count_leaves {2 {7} {6 {5} {4}}}) -> 3", "(count_leaves {5 {3 {2 {7}} {2}} {8 {6 {6}} {8}}}) -> 4", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.734075}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {1 {8}} {0 {8} {8}}}) -> 3", "(count_leaves {5 {3} {8 {8} {8}}}) -> 3", "(count_leaves {3 {5 {3} {1}}}) -> 2", "(count_leaves {2 {0}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {1 {6} {4}}) -> 2", "(count_leaves {0 {5 {1}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.709284}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {3}}) -> 1", "(count_leaves {6 {8 {3 {3} {3}} {6 {1} {1}}} {0 {5 {4} {9}}}}) -> 6", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {0 {2} {5 {5 {5}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.787969}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {4 {3 {1}} {1}} {2 {2}}}) -> 3", "(count_leaves {4 {5} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {2 {3}} {4 {6}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {8 {6 {1 {5}} {5 {0}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.736842}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9}}) -> 1", "(count_leaves {1 {5 {1 {0} {5}}} {2 {6} {7}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {0}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.84524}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6 {3} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.808717}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {8} {4}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.874872}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {3 {9} {5}} {6 {2} {0}}}) -> 4", "(count_leaves {2 {2}}) -> 1", "(count_leaves {0 {5}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {1 {5 {3} {0}} {6 {8}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.835221}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {9}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {2} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3} {6}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.597307}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {0} {7}}) -> 2", "(count_leaves {2 {4}}) -> 1", "(count_leaves {6 {8 {4} {1}}}) -> 2", "(count_leaves {1 {0 {0 {0}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.888352}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {4}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.027497}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {7 {9 {7} {8}}} {7}}) -> 3", "(count_leaves {0 {6} {5 {1}}}) -> 2", "(count_leaves {9 {6} {7 {5 {0} {3}} {9 {8} {9}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.665671}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {7 {6} {8 {6} {2}}} {7}}) -> 4", "(count_leaves {5 {3}}) -> 1", "(count_leaves {4 {6 {7 {2} {0}}} {6 {0 {2}} {0 {7} {4}}}}) -> 5", "(count_leaves {2 {9 {2} {5}} {4 {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.925992}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.017863}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {4} {7}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.52123}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.034867}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {3 {2} {7}}}) -> 2", "(count_leaves {8 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.540737}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {3} {5}}) -> 2", "(count_leaves {3 {6 {5} {7 {3} {3}}} {4 {8 {6}}}}) -> 4", "(count_leaves {8}) -> 1", "(count_leaves {5 {4} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {0}}) -> 1", "(count_leaves {4 {0} {1 {6} {4}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.61835}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {6 {1 {0}} {2 {0} {1}}}}) -> 3", "(count_leaves {4 {6} {6}}) -> 2", "(count_leaves {3 {7} {4}}) -> 2", "(count_leaves {2 {4 {7} {0}} {0 {1}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.649238}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {0} {5}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {4 {5 {1}} {4}}) -> 2", "(count_leaves {2 {7}}) -> 1", "(count_leaves {5 {8} {1 {0} {2}}}) -> 3", "(count_leaves {7 {8}}) -> 1", "(count_leaves {1 {8} {5 {1} {2}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.642278}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {7 {0} {3}}}) -> 2", "(count_leaves {9 {5}}) -> 1", "(count_leaves {8 {1 {6} {2}}}) -> 2", "(count_leaves {5 {4} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6 {9} {4}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.69232}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {0}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {0 {7} {2}}}) -> 2", "(count_leaves {7 {2}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.616447}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {0}}) -> 1", "(count_leaves {7 {7 {4 {7} {1}}} {7 {3 {3}}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.690171}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {8 {4} {4}} {4}}) -> 3", "(count_leaves {0 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {3}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {1 {2 {9} {7}} {2}}) -> 3", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.660576}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {6} {5}} {0 {8} {0}}}) -> 4", "(count_leaves {7 {9}}) -> 1", "(count_leaves {0 {3} {6 {8} {2 {0}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.654928}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {6}}) -> 1", "(count_leaves {9 {2 {5} {2}} {4 {3}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {9} {7}}) -> 2", "(count_leaves {6 {6} {4 {4 {5}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5 {5 {7 {9} {6}} {2 {1}}} {6 {5}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.696164}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {3}}) -> 1", "(count_leaves {3 {9 {9} {3}} {3}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {0 {5}}) -> 1", "(count_leaves {0 {0} {4}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.685531}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {8 {0}} {3 {7}}}) -> 2", "(count_leaves {5 {3} {4}}) -> 2", "(count_leaves {2 {5 {3 {4} {5}}}}) -> 2", "(count_leaves {4 {1 {1}}}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5} {9}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.677256}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.029029}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3 {9} {4}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {5 {6 {1 {4} {4}} {8 {0} {8}}} {2 {0 {2} {2}} {0}}}) -> 7", "(count_leaves {4 {6 {1} {4 {8}}} {8 {6 {1} {1}}}}) -> 4", "(count_leaves {7 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.670761}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {6 {3} {5}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {2} {0 {8}}}) -> 2", "(count_leaves {2 {8}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.660317}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {9}}) -> 1", "(count_leaves {8 {8} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {5} {2}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {9 {0 {7} {4}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.569675}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {5 {0}}}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {9 {1 {8} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {5} {8}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.658205}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {1 {9}} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {7} {2}}) -> 2", "(count_leaves {2 {7} {9}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "time": 0.042267}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0 {5 {2}} {8 {5} {7}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {4}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {1} {9}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.602651}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {5} {0}}) -> 2", "(count_leaves {3 {7 {2 {7}}}}) -> 1", "(count_leaves {7 {0} {8}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {3 {4} {7}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.611073}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {9} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {9} {3}}) -> 2", "(count_leaves {3 {9} {0 {2}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {1 {2 {5} {3}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.637556}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {3 {3 {0}} {2 {0} {3}}}) -> 3", "(count_leaves {6 {6} {6}}) -> 2", "(count_leaves {6 {6 {8}} {1}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.657265}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {1}}) -> 1", "(count_leaves {3 {7 {8}}}) -> 1", "(count_leaves {5 {2 {8 {8}}} {6}}) -> 2", "(count_leaves {2 {3 {3} {4}}}) -> 2", "(count_leaves {8 {4} {0 {1} {7}}}) -> 3", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.663873}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {1} {4}}) -> 2", "(count_leaves {8 {5} {0 {1 {7}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {5}}) -> 1", "(count_leaves {9 {3 {0}} {0 {1} {7 {0}}}}) -> 3", "(count_leaves {9 {3} {1}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.726717}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {9 {1}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {8}}) -> 1", "(count_leaves {2 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.055937}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {4 {8 {1} {3}} {6 {5}}} {7}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {7}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {8 {1} {1}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.741453}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {3 {7} {5}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {6 {5} {1 {8} {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.634773}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {4 {7}}) -> 1", "(count_leaves {8 {5} {0}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.708267}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {4} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "time": 0.109504}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {4 {1 {3 {0} {2}}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {9 {5 {0}}} {1}}) -> 2", "(count_leaves {7 {3}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.627861}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {1 {1} {7}} {9}}) -> 3", "(count_leaves {4 {0 {6} {2}}}) -> 2", "(count_leaves {6 {3 {5 {6} {7}}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.666112}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0 {7 {8} {4 {7} {6}}} {2 {4} {3}}}) -> 5", "(count_leaves {0 {8 {2} {2 {6}}} {2 {0 {1}}}}) -> 3", "(count_leaves {0 {6 {8} {9}} {0 {6} {2}}}) -> 4", "(count_leaves {9 {4} {4}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.726258}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {4} {5}}) -> 2", "(count_leaves {6 {3} {4 {9} {4}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {2} {1 {0} {3}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.70594}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {4 {5} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {1}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.554564}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {1} {3}} {2 {2} {7}}}) -> 4", "(count_leaves {8 {4}}) -> 1", "(count_leaves {2 {2} {6}}) -> 2", "(count_leaves {7 {2} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.594354}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {0} {3}}) -> 2", "(count_leaves {4 {7 {4}} {9 {9 {5}}}}) -> 2", "(count_leaves {7 {6}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {7 {6 {5} {4}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.595367}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {1}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.041819}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {4}}) -> 1", "(count_leaves {7 {7 {6} {5}}}) -> 2", "(count_leaves {8 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.626953}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {1} {1}}) -> 2", "(count_leaves {2 {8}}) -> 1", "(count_leaves {0 {2 {0 {6}}} {5}}) -> 2", "(count_leaves {3 {8}}) -> 1", "(count_leaves {6 {7} {9}}) -> 2", "(count_leaves {1 {5 {5}}}) -> 1", "(count_leaves {8 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.646733}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {7 {2} {3}} {4}} {2 {1} {7 {1}}}}) -> 5"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.648525}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1}}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {5 {1 {5}} {5 {0} {5}}} {9 {7 {2} {8}} {9 {1}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {2 {1 {3} {1}} {8}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.610987}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3 {3}} {9 {1} {3}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {2 {4} {7}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.633769}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {4 {1 {6} {4}}}) -> 2", "(count_leaves {6 {8 {4 {2}}} {7 {9 {8}} {8 {4}}}}) -> 3", "(count_leaves {1 {3} {5 {5 {5}} {5 {5}}}}) -> 3", "(count_leaves {0 {1 {0} {2}}}) -> 2", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.648962}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {1} {8}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {2 {1 {6}} {1 {5}}}) -> 2", "(count_leaves {7 {4 {9} {9}}}) -> 2", "(count_leaves {0 {3} {0}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.62575}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1 {0} {1}} {7}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4 {5 {8 {6} {6}}}}) -> 2", "(count_leaves {2 {1} {9 {8} {9 {0} {5}}}}) -> 4", "(count_leaves {0 {6} {6}}) -> 2", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.613945}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {2 {0 {3} {8}} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {1}}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {9 {6 {9}}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.650495}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {3 {8 {9} {4 {6}}}}) -> 2", "(count_leaves {8 {7}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {4 {7}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.69655}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {3 {8 {8 {2} {3}} {5 {3}}}}) -> 3", "(count_leaves {4 {7 {6} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {2 {2} {6 {5}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.572871}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {8 {1 {9}}} {9 {5}}}) -> 2", "(count_leaves {7 {3} {4}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {5 {5} {0}}}) -> 2", "(count_leaves {4 {0} {7}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.671079}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9} {6}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {7 {4} {3}}) -> 2", "(count_leaves {8 {8} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.707217}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {4 {8 {8}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "time": 0.042823}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {2 {1 {0}} {1}}) -> 2", "(count_leaves {5 {3} {5}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.72284}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {7}}) -> 1", "(count_leaves {5 {7}}) -> 1", "(count_leaves {3 {6 {0 {4} {0}} {2 {0} {5}}}}) -> 4", "(count_leaves {8 {0 {6 {8} {8}}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.729383}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {5 {6}} {7}}) -> 2", "(count_leaves {4 {5 {8 {8}} {0 {8} {0}}}}) -> 3", "(count_leaves {4 {9}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {3 {5} {3}}) -> 2", "(count_leaves {3 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.647903}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {6} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {1} {6 {0 {0}}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5 {2 {1}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.658941}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {1 {5} {9 {1 {0} {7}}}}) -> 3", "(count_leaves {7 {9} {5 {7} {0}}}) -> 3", "(count_leaves {1 {3} {6 {1}}}) -> 2", "(count_leaves {0 {3 {8}} {7}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.656244}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {1 {9}} {5}}) -> 2", "(count_leaves {9 {0}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {4}}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {4 {2} {1}}) -> 2", "(count_leaves {8 {1}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.650004}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {8 {3 {2} {3}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {0 {9} {5}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.691357}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {8}}) -> 1", "(count_leaves {8 {3 {5 {0}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {9 {8}}}) -> 2", "(count_leaves {4 {8}}) -> 1", "(count_leaves {6 {9 {2 {1} {0}}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.646226}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {8}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {7 {3 {1}} {2 {1} {0}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {6 {5} {9}}) -> 2", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.613957}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2 {1}}) -> 1", "(count_leaves {4 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {5} {7 {5 {7}}}}) -> 2", "(count_leaves {9 {2} {5 {2} {6}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.621402}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {4} {4}} {2 {7} {4}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.702083}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {8}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {5} {0}}) -> 2", "(count_leaves {1 {1}}) -> 1", "(count_leaves {5 {8 {2 {8}} {6}} {7 {2 {3}} {6 {4} {3}}}}) -> 5", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.669836}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {1} {1}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.592885}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {5 {0}} {1 {0 {6} {0}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {0} {7 {1}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.734277}
