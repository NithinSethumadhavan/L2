{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1 {3}} {3}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {3 {0}}) -> 1", "(count_leaves {6 {8}}) -> 1", "(count_leaves {4 {0}}) -> 1", "(count_leaves {0 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {0 {3} {8}}) -> 2", "(count_leaves {9 {8}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7 {2} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.728016}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {5 {8 {6}}}) -> 1", "(count_leaves {9 {5 {1}}}) -> 1", "(count_leaves {4 {9 {3 {9}}} {7 {2 {5} {3}} {8 {5} {4}}}}) -> 5", "(count_leaves {3}) -> 1", "(count_leaves {6 {4}}) -> 1", "(count_leaves {8 {1} {7 {1 {5}}}}) -> 2", "(count_leaves {8 {6}}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {1 {3 {6}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.810057}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {9} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {7 {0} {0}} {3 {7}}}}) -> 3", "(count_leaves {3 {2} {2 {7}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {8 {4 {8}}} {8 {0 {5}}}}) -> 2", "(count_leaves {7 {5 {0}} {8 {7}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5 {4 {8} {6}} {4}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6 {1 {1} {9}} {2}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {2}}) -> 1", "(count_leaves {2 {5} {8}}) -> 2", "(count_leaves {1 {6}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.828018}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {0 {0}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {3 {4 {2}} {5 {5} {4}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {6 {5} {7}}) -> 2", "(count_leaves {7 {0 {1}}}) -> 1", "(count_leaves {2 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {0 {9 {4} {9}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7} {8}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.797447}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {7}}) -> 1", "(count_leaves {3 {9} {6 {8}}}) -> 2", "(count_leaves {2 {1 {5} {2 {4}}}}) -> 2", "(count_leaves {6 {6 {9 {6} {2}} {8 {8} {9}}} {2}}) -> 5", "(count_leaves {6 {7 {4}} {5 {4}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0 {0 {8 {6} {5}} {7 {4} {4}}} {6 {6 {0} {3}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {1 {4} {1 {4}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {6} {2 {1}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.827582}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {4 {9} {6}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {2 {5} {5}}}) -> 2", "(count_leaves {5 {0 {3 {0} {7}} {8 {9}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {3} {7}}) -> 2", "(count_leaves {0 {2} {2 {9}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {8 {9 {8} {6}}} {2}}) -> 3", "(count_leaves {6 {1 {1} {7}} {4}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {4 {0 {2} {2}}}) -> 2", "(count_leaves {8 {8} {4 {3}}}) -> 2", "(count_leaves {9 {8} {6 {1 {6}}}}) -> 2", "(count_leaves {2 {2} {3}}) -> 2", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.776938}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {9} {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {0 {3} {4}}}) -> 2", "(count_leaves {5 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {7}}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {8 {1} {2 {7 {9} {8}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {2} {7}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8 {1 {0 {8} {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {3}}}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {1 {2 {6} {7}} {0 {5}}}) -> 3", "(count_leaves {6 {4 {7} {1}} {0 {8 {9}} {2 {4}}}}) -> 4", "(count_leaves {6 {5} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.763814}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {1 {6 {2} {8 {8}}} {7 {4 {4}}}}) -> 3", "(count_leaves {6 {6} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {8 {3 {4} {1}} {3 {0} {9}}}) -> 4", "(count_leaves {6 {6}}) -> 1", "(count_leaves {6 {5 {1} {6}}}) -> 2", "(count_leaves {6 {5}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6 {8 {7}} {9 {4}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9 {3 {0} {6}} {7}} {1}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.745271}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {5} {6}}}) -> 2", "(count_leaves {0 {7} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {4 {9} {5}}) -> 2", "(count_leaves {2 {3 {1}}}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {2 {9} {7}}) -> 2", "(count_leaves {3 {5} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {4} {5}}) -> 2", "(count_leaves {3 {2 {4}} {9}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {9 {1 {0} {5 {9} {1}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {6} {2}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {9} {4 {3} {6}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.860541}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {7 {0}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {4 {1 {6} {0 {5} {5}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {3 {8}}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {9 {9 {6} {2}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5} {9}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {3 {1 {1}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3 {5} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {0 {1 {9} {9}} {2 {9} {1}}} {6}}) -> 5", "(count_leaves {0}) -> 1", "(count_leaves {8 {2 {6}} {8 {6} {8}}}) -> 3", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.874291}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {8 {3} {1}} {7}}) -> 3", "(count_leaves {8 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6} {2 {5} {7}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {7 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {4} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7 {6 {0} {2}}}) -> 2", "(count_leaves {7 {9}}) -> 1", "(count_leaves {2 {3 {1} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {3 {0}}) -> 1", "(count_leaves {7 {0 {5}}}) -> 1", "(count_leaves {9 {4}}) -> 1", "(count_leaves {5}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.852239}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {3}} {2}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {4 {2 {8}} {8 {8}}}}) -> 2", "(count_leaves {7 {0 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {3} {2}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6 {5} {3 {1}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8 {9 {9} {5}} {7 {5}}}) -> 3", "(count_leaves {5 {2}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.781071}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8 {8 {6 {6}}} {7 {7} {2 {1} {8}}}}) -> 4", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {6 {2} {3}}) -> 2", "(count_leaves {8 {5 {7 {4} {2}} {7}}}) -> 3", "(count_leaves {2 {2} {4}}) -> 2", "(count_leaves {2 {2 {8} {9}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {2 {8 {7}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {6 {2}}}) -> 1", "(count_leaves {7 {7 {9 {0}} {5 {4}}} {4 {4 {1} {8}} {1 {0}}}}) -> 5", "(count_leaves {0 {3} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {5 {2 {6 {7}}}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.78706}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7 {4 {9}}}) -> 1", "(count_leaves {9 {0} {5}}) -> 2", "(count_leaves {5 {0 {5} {5}} {7 {5}}}) -> 3", "(count_leaves {7 {0} {0 {2}}}) -> 2", "(count_leaves {7 {8 {5}} {9 {1}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {0 {1} {4}}) -> 2", "(count_leaves {7 {6}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {2 {9} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {7}}) -> 1", "(count_leaves {5 {1} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4 {4 {6 {4} {6}}} {2 {5 {2} {9}} {3 {2} {2}}}}) -> 6", "(count_leaves {3 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {3 {8} {6 {4} {4}}}}) -> 3", "(count_leaves {4 {3 {7} {4}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.792193}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {4 {9}} {1 {7}}}) -> 2", "(count_leaves {0 {2 {7 {7} {7}}}}) -> 2", "(count_leaves {8 {4 {3} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {1} {5}}) -> 2", "(count_leaves {1 {1 {0} {4}} {2 {2} {0}}}) -> 4", "(count_leaves {8}) -> 1", "(count_leaves {5 {7 {5 {8}} {4}} {1 {0 {4} {4}}}}) -> 4", "(count_leaves {9}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {1 {0} {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3} {1 {5}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {8 {3} {5}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {4 {8} {1}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.862285}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {2}}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {0 {9} {1 {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {8 {6} {9 {2}}}) -> 2", "(count_leaves {2 {4 {7} {9}} {8 {4} {0}}}) -> 4", "(count_leaves {5 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {9 {5}} {6}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9 {1} {6}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {4 {8 {0}}}) -> 1", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.848577}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {8 {7 {7}} {1 {2}}} {0 {7 {6} {6}}}}) -> 4", "(count_leaves {4 {0 {9} {6}}}) -> 2", "(count_leaves {5 {9 {2} {6 {2} {9}}}}) -> 3", "(count_leaves {4 {3 {3}} {5 {1}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {7 {7 {2}} {9 {6} {6}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {6 {0 {0 {9}}} {3}}) -> 2", "(count_leaves {6 {5 {2}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {4} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {2 {2} {2 {3} {8}}}}) -> 3", "(count_leaves {0 {2} {4}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {1 {1 {0}} {4 {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {2} {3}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {6 {0}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.666881}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {5 {2 {4} {0}}} {7}}) -> 3", "(count_leaves {0 {1 {1 {6} {1}} {6}}}) -> 3", "(count_leaves {3 {9 {4 {9} {6}}}}) -> 2", "(count_leaves {8 {1} {7}}) -> 2", "(count_leaves {6 {5 {6} {9}} {3 {7}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {6 {9} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {8}}) -> 1", "(count_leaves {0 {5 {3} {1}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {7 {3}}) -> 1", "(count_leaves {4 {5} {1 {9} {0 {3}}}}) -> 3", "(count_leaves {1 {4 {7 {5} {6}}}}) -> 2", "(count_leaves {8 {6} {2}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7}}) -> 1", "(count_leaves {0 {1} {9}}) -> 2", "(count_leaves {8 {9 {1 {5} {1}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.693552}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {0} {7}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {2} {2}}) -> 2", "(count_leaves {8 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {0 {3 {6}} {4}} {0}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9 {0}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {2} {9}}) -> 2", "(count_leaves {0 {8 {4 {9} {3}} {9 {7} {4}}}}) -> 4", "(count_leaves {9}) -> 1", "(count_leaves {5 {8 {1} {1 {3}}}}) -> 2", "(count_leaves {8 {0} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {7 {1 {9}}} {2 {3 {9}} {5 {2} {9}}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.70215}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {5}} {6}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {3 {9 {6 {9} {8}} {0}} {4 {7 {9}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {0 {4} {8}}} {6}}) -> 3", "(count_leaves {6 {1 {5} {5}} {0 {7 {4} {9}}}}) -> 4", "(count_leaves {6}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {6 {6 {1} {7}} {4 {5} {2}}} {3 {3}}}) -> 5", "(count_leaves {5 {2 {0}}}) -> 1", "(count_leaves {6 {9} {5 {3} {9}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {2}}) -> 1", "(count_leaves {2 {4}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.742211}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {1 {5}} {3 {3}}}) -> 2", "(count_leaves {0 {4 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {6} {1 {5 {1} {9}} {4}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {0}} {3 {9} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {7} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {7} {3}}) -> 2", "(count_leaves {6 {0} {1}}) -> 2", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.674045}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {3 {7 {7}} {1 {5}}}) -> 2", "(count_leaves {7 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {7 {7} {6 {2}}} {5 {4} {7 {4}}}}) -> 4", "(count_leaves {4 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0} {7}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {0 {2}} {7 {0} {9}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {7 {3} {2}}) -> 2", "(count_leaves {7 {5} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {0} {8}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {7 {4 {0 {7} {9}}} {6 {6 {4} {4}} {1}}}) -> 5", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.757257}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {1} {9}}) -> 2", "(count_leaves {9 {5 {5 {3}} {5 {5} {8}}} {0 {3 {8}}}}) -> 4", "(count_leaves {0 {5}}) -> 1", "(count_leaves {3 {3} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {9 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4 {9 {0 {3} {3}} {6}}}) -> 3", "(count_leaves {1 {8 {4 {2} {1}}} {6}}) -> 3", "(count_leaves {5 {0 {7} {7}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {3} {8 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {5} {3}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.691668}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {3} {7}}) -> 2", "(count_leaves {4 {9} {3 {3 {6}}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {5}}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {7}}) -> 1", "(count_leaves {2 {0 {1} {1}}}) -> 2", "(count_leaves {3 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {8 {6} {0}}}) -> 2", "(count_leaves {6 {6}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {8} {0}}) -> 2", "(count_leaves {8 {7} {4}}) -> 2", "(count_leaves {2 {0 {1 {1}}}}) -> 1", "(count_leaves {0 {0 {0}} {2}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.710826}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {5 {6}} {4 {7} {2}}}) -> 3", "(count_leaves {6 {2} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {5 {2} {9}}) -> 2", "(count_leaves {9 {8}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7 {6}}) -> 1", "(count_leaves {3 {9}}) -> 1", "(count_leaves {0 {7 {4 {9}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {2 {7 {4} {5}} {8 {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {1 {3}}) -> 1", "(count_leaves {5 {1 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {7 {7} {4}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.822987}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {8 {8}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {1 {6 {9 {4}}} {3 {2 {2}}}}) -> 2", "(count_leaves {5 {4} {9 {8}}}) -> 2", "(count_leaves {1 {3}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {6} {2 {6 {8} {0}}}}) -> 3", "(count_leaves {8 {6} {5 {4} {1 {3} {3}}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {5} {9}}) -> 2", "(count_leaves {0 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {4} {7 {2 {2}} {9 {8}}}}) -> 3", "(count_leaves {2 {1 {7} {3}} {0 {5}}}) -> 3", "(count_leaves {8 {2 {8}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {1 {2}}) -> 1", "(count_leaves {1 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.774409}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {7 {4} {7}}) -> 2", "(count_leaves {5 {5} {8}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {1 {8}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {7 {0} {5}}) -> 2", "(count_leaves {5 {5}}) -> 1", "(count_leaves {0 {8 {3 {5}}}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {0 {0} {2 {3} {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {6}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {1 {3 {3} {6}}} {1}}) -> 3", "(count_leaves {9 {8 {1} {5}} {4 {5}}}) -> 3", "(count_leaves {2 {9 {2 {3} {0}}} {8 {4 {5}} {6 {4} {7}}}}) -> 5", "(count_leaves {6 {4 {5} {6}} {4}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3 {7 {4 {5}} {7}} {2 {3 {3}}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.798638}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {6 {9}}}) -> 1", "(count_leaves {8 {6 {2}} {3 {6 {3} {5}} {7 {3}}}}) -> 4", "(count_leaves {5 {3} {0}}) -> 2", "(count_leaves {6 {5}}) -> 1", "(count_leaves {0 {7 {7} {6 {4}}} {7 {5}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7} {0}}) -> 2", "(count_leaves {1 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4 {5 {2 {6}} {2 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5 {0 {0} {2}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {8 {6} {7 {2}}}) -> 2", "(count_leaves {0 {7} {4}}) -> 2", "(count_leaves {9 {9}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.733867}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {3} {8}}) -> 2", "(count_leaves {1 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {2} {1}}) -> 2", "(count_leaves {3 {7 {1 {6} {0}}}}) -> 2", "(count_leaves {6 {1 {5 {8}} {5}} {3}}) -> 3", "(count_leaves {6 {9}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {2 {2 {8 {8}}}}) -> 1", "(count_leaves {1 {3 {7 {8}} {1 {8}}} {2 {6 {5} {9}} {0 {1}}}}) -> 5", "(count_leaves {9}) -> 1", "(count_leaves {9 {0 {3} {9}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {4 {4 {1 {6}} {1}} {3 {6 {1} {2}}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.82556}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {0 {3} {8}} {6 {2}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5 {7 {6} {7}} {9 {2} {0}}}) -> 4", "(count_leaves {9 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {2} {4}}) -> 2", "(count_leaves {6 {4} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.818871}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {6 {3}}}) -> 1", "(count_leaves {5 {5 {1}} {8 {8} {6}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1 {3 {0}} {6 {6} {4}}}}) -> 3", "(count_leaves {5 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8 {9} {8}} {9}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {3 {2 {7 {7} {9}}} {0 {4 {0} {1}}}}) -> 4", "(count_leaves {9 {0} {5}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.810373}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {5 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {2}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {8 {9} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {2}}) -> 1", "(count_leaves {6 {2} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {5}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {9 {2 {8 {0}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.813808}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {0} {9 {4}}}) -> 2", "(count_leaves {2 {4} {8}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8} {0 {1 {7}} {7 {9} {9}}}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {4 {5 {1} {0 {7}}} {5 {5 {3}} {8 {8}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {4} {2}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.655735}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {3} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {4} {3}} {5}}) -> 3", "(count_leaves {3 {3}}) -> 1", "(count_leaves {0 {8 {1}}}) -> 1", "(count_leaves {3 {6 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {4} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {4} {2 {0}}}) -> 2", "(count_leaves {7 {0} {5}}) -> 2", "(count_leaves {1 {1} {8}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {3 {6 {0}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {2 {8 {3} {3}} {6 {9 {7} {2}}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.645176}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {1 {1}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {8 {3 {7} {6}} {1 {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {3 {0} {4}} {5 {3}}}) -> 3", "(count_leaves {0 {5 {3} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {5} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {1} {9 {9} {2}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {7 {1} {8}}) -> 2", "(count_leaves {5 {9}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {5} {5}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {2 {0 {7}} {4 {0}}} {8}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.637613}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {8 {8}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {3} {8 {8 {3}} {3 {0}}}}) -> 3", "(count_leaves {6 {2} {5 {8} {1}}}) -> 3", "(count_leaves {5 {8}}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0 {3 {0}}}}) -> 1", "(count_leaves {2 {8}}) -> 1", "(count_leaves {7 {5}}) -> 1", "(count_leaves {2 {8 {8}} {2 {2} {4}}}) -> 3", "(count_leaves {4 {4 {7 {3} {6}}} {5 {3 {6} {9}} {5}}}) -> 5", "(count_leaves {4 {9 {2} {9}}}) -> 2", "(count_leaves {1 {0} {6 {5}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {1 {9 {9}}}}) -> 1", "(count_leaves {2 {3} {7 {5}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.750763}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {6} {6}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {0 {9} {3}}} {4}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {3} {6}}}) -> 2", "(count_leaves {9 {0}}) -> 1", "(count_leaves {0 {7 {5}} {8 {4}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3 {2} {9}}) -> 2", "(count_leaves {1 {1 {3} {8}}}) -> 2", "(count_leaves {3 {3} {0}}) -> 2", "(count_leaves {8 {1} {1 {0}}}) -> 2", "(count_leaves {0 {2}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.610135}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {3 {2 {7} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {7} {4}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0} {2}}) -> 2", "(count_leaves {5 {5 {1}} {3}}) -> 2", "(count_leaves {8 {0 {1}} {2 {9}}}) -> 2", "(count_leaves {6 {5}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {4 {7 {5 {5}} {3 {2} {2}}} {6 {1 {6}} {6 {9} {4}}}}) -> 6", "(count_leaves {4 {4}}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {5 {9} {1 {7} {8}}} {2 {9 {4} {4}}}}) -> 5", "(count_leaves {2 {2}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.727108}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {7} {9 {4} {9}}}) -> 3", "(count_leaves {2 {3 {7}} {3}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {1 {8} {4 {4 {2}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {5} {8 {6 {0} {1}}}}) -> 3", "(count_leaves {2 {7 {0} {0 {8} {1}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {0 {1 {7} {3}} {8 {2} {5}}}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3 {9} {0}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {2 {1} {1 {7} {3}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.634511}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7 {4 {8 {2}} {6 {7}}} {0}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {3 {0 {2} {9}} {5}}}) -> 4", "(count_leaves {0 {1 {7 {2}}}}) -> 1", "(count_leaves {0 {7 {5}}}) -> 1", "(count_leaves {0 {2} {5}}) -> 2", "(count_leaves {2 {9 {8 {2}}}}) -> 1", "(count_leaves {2 {6} {3}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {7 {1 {1} {3}} {5}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {7}}) -> 1", "(count_leaves {3 {6} {6}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {6 {3} {7 {0}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.619504}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {4 {0} {8}} {5}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {8 {8 {1}}}) -> 1", "(count_leaves {5 {3 {8} {0}} {9}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {6 {9}} {0 {6}}}) -> 2", "(count_leaves {1 {4} {1}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {9 {7}} {8 {0} {3}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {5 {7}} {0 {1}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8 {4} {7 {9} {8}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.704605}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {7 {7 {2} {1}} {9}}) -> 3", "(count_leaves {2 {1 {1 {1} {3}} {1 {7}}}}) -> 3", "(count_leaves {6 {8 {0 {7} {1}}}}) -> 2", "(count_leaves {6 {0} {0}}) -> 2", "(count_leaves {6 {1}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {5 {6} {5}} {9 {1} {9}}}) -> 4", "(count_leaves {2 {8}}) -> 1", "(count_leaves {7 {3 {3}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3 {8}}) -> 1", "(count_leaves {4 {7} {0 {1 {5}} {3 {9} {6}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {7 {6 {9}} {0 {6 {9} {4}}}}) -> 3", "(count_leaves {6 {4 {8} {4}} {4 {7}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.597529}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {1 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {0}}) -> 1", "(count_leaves {9 {1}}) -> 1", "(count_leaves {8 {7} {6}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {8 {4} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {3} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {9} {3 {4}}} {6 {6} {1 {8} {3}}}}) -> 5", "(count_leaves {1 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {2 {9} {8 {2} {4}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {3}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {0} {9}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.772299}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {9 {0}} {3 {1}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {9 {5 {3} {0}} {8 {4} {2}}}) -> 4", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {4}}) -> 1", "(count_leaves {4 {6} {0 {8 {2} {0}}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {2} {0}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9 {8}} {5 {6} {3 {7}}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.763263}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {8}}) -> 1", "(count_leaves {5 {2} {6}}) -> 2", "(count_leaves {5 {0} {2}}) -> 2", "(count_leaves {7 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {7} {6 {1}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {0} {8}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {2 {9 {8}}}}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {3 {7}}) -> 1", "(count_leaves {7 {1} {8 {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7 {6} {7 {2} {6}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.790897}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {1 {8 {6 {2}}}}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {7 {9}} {6 {1} {5}}} {3 {1 {7}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9 {0}}) -> 1", "(count_leaves {8 {1} {3 {6}}}) -> 2", "(count_leaves {0 {8 {0} {8}} {3}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {7 {8 {2}}}) -> 1", "(count_leaves {8 {8}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {8 {5 {8} {3}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.755053}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {6 {8} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {9}}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {4 {3} {5 {4}}}) -> 2", "(count_leaves {3 {1} {6}}) -> 2", "(count_leaves {5 {5 {8} {9}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {5 {0} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {8 {0}} {4 {6}}}) -> 2", "(count_leaves {2 {2}}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {9 {9} {8}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.778875}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2 {3 {5}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {8 {2} {2}} {5 {5}}}) -> 3", "(count_leaves {3 {3 {6}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {6}}) -> 1", "(count_leaves {3 {9}}) -> 1", "(count_leaves {5 {0 {2 {6}} {8}}}) -> 2", "(count_leaves {5 {2} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1 {6 {0}} {4 {6} {2}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {1}}) -> 1", "(count_leaves {5 {1 {4} {6}} {1 {3} {7}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.796989}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {4} {7}}) -> 2", "(count_leaves {7 {3 {2 {7} {4}}}}) -> 2", "(count_leaves {6 {2} {9}}) -> 2", "(count_leaves {3 {1 {1}} {2 {8} {3}}}) -> 3", "(count_leaves {9 {3}}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {1 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {6}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {5 {7 {9 {5}} {2 {4} {3}}} {4 {0 {3} {0}} {8 {1}}}}) -> 6", "(count_leaves {3 {5 {4 {4} {4}}}}) -> 2", "(count_leaves {8 {3}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {2 {6} {7}}}) -> 2", "(count_leaves {3 {0}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.501109}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0} {4}}) -> 2", "(count_leaves {9 {8}}) -> 1", "(count_leaves {3 {5 {1 {4}}}}) -> 1", "(count_leaves {7 {9 {7 {0} {7}} {6 {4} {6}}} {3}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {6} {7 {1} {9}}} {1 {6 {0} {3}}}}) -> 5", "(count_leaves {9}) -> 1", "(count_leaves {6 {1 {5} {3}}}) -> 2", "(count_leaves {8 {1 {2}}}) -> 1", "(count_leaves {8 {1} {7}}) -> 2", "(count_leaves {6 {6 {5 {0} {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {3 {9 {3}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {2}}) -> 1", "(count_leaves {3 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {2} {5}} {8}}) -> 3", "(count_leaves {5}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.500768}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {5} {8}}) -> 2", "(count_leaves {1 {4 {4 {7} {8}} {0 {4}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0 {9}}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {1 {2}} {8 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {8} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.497519}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {5 {6} {5}}}) -> 2", "(count_leaves {8 {1} {3 {7 {8}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {9} {7}} {8}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6 {9} {4 {5} {1}}}) -> 3", "(count_leaves {9 {2 {8}}}) -> 1", "(count_leaves {0 {6} {2}}) -> 2", "(count_leaves {3 {8}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {0 {5 {8}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {1 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {6 {8}}) -> 1", "(count_leaves {8 {5 {9 {7} {9}} {4}}}) -> 3", "(count_leaves {9 {6 {7}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.491206}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {4}}) -> 1", "(count_leaves {1 {0 {9}}}) -> 1", "(count_leaves {5 {2} {6 {7} {7}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {3}}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {0 {6} {7}}}}) -> 2", "(count_leaves {5 {7}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {4 {4 {4 {0} {7}}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {8 {0} {3 {3}}}) -> 2", "(count_leaves {4 {7} {2 {7} {4 {3}}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.44041}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {0 {4 {0}}}}) -> 1", "(count_leaves {0 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {7} {0}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8 {2} {9 {2 {3}} {4 {5}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {2 {2} {3}} {1 {7}}}) -> 3", "(count_leaves {8 {1} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0 {0 {1} {8}}} {4 {5 {6} {8}}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7 {3}}}) -> 1", "(count_leaves {8 {8 {3 {6}}} {7 {2 {3}} {3 {6} {6}}}}) -> 4", "(count_leaves {8 {3 {9} {9}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.488428}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {3 {6}} {9 {9} {3}}}) -> 3", "(count_leaves {2 {5 {7 {7}} {1 {8} {7}}} {7 {4}}}) -> 4", "(count_leaves {0 {0}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8 {2 {1}} {3 {9}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {6 {8 {3}} {2}}) -> 2", "(count_leaves {4 {3 {9} {8}}}) -> 2", "(count_leaves {4 {9} {4}}) -> 2", "(count_leaves {4 {4 {2 {4} {3}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {4}}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {2 {9} {0 {7} {7}}}) -> 3", "(count_leaves {4 {7 {0} {3}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {0 {2} {0 {5} {2}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {7 {4} {6 {7} {0}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.909227}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {8 {9 {2 {5}} {0 {9}}} {0 {5 {5} {0}}}}) -> 4", "(count_leaves {4 {0} {6}}) -> 2", "(count_leaves {1 {1} {3}}) -> 2", "(count_leaves {2 {3}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8 {0 {7 {8} {1}} {8 {5}}}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {3 {3 {1 {7} {7}}} {8 {7 {7} {8}}}}) -> 4", "(count_leaves {0 {0 {4} {1}} {0 {8} {7}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0} {3 {8} {5}}}) -> 3", "(count_leaves {4 {5} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {5}} {0}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.442189}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {8 {1}} {6}}) -> 2", "(count_leaves {5 {8}}) -> 1", "(count_leaves {5 {3} {1 {7 {7}} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {1 {7}} {6 {9}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {2}}) -> 1", "(count_leaves {9 {0 {9} {3}} {7 {0} {6}}}) -> 4", "(count_leaves {9 {2 {1} {0}} {6}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {4 {7}}) -> 1", "(count_leaves {4 {2}}) -> 1", "(count_leaves {4 {3 {0}} {7 {3} {3}}}) -> 3", "(count_leaves {6 {0} {3 {4}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.488219}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {7} {0 {4 {1} {4}} {1 {1}}}}) -> 4", "(count_leaves {7 {3} {1}}) -> 2", "(count_leaves {8 {7 {5}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {2} {8}}) -> 2", "(count_leaves {7 {8 {8 {5}}} {4 {0}}}) -> 2", "(count_leaves {6 {2 {7}}}) -> 1", "(count_leaves {2 {4} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {1}}) -> 1", "(count_leaves {8 {2} {6}}) -> 2", "(count_leaves {1 {0 {3} {4}} {7 {4} {4}}}) -> 4", "(count_leaves {7}) -> 1", "(count_leaves {9 {9} {2 {5 {0}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5 {1 {3 {6} {0}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.044537}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {4 {7 {6}} {6 {3} {6}}}) -> 3", "(count_leaves {0 {9 {6} {4}}}) -> 2", "(count_leaves {8 {0}}) -> 1", "(count_leaves {3 {9} {7}}) -> 2", "(count_leaves {2 {1} {8}}) -> 2", "(count_leaves {1 {6} {7 {4 {0} {4}} {6 {4}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {0 {2} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {5 {0} {9 {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {0}}) -> 1", "(count_leaves {3 {6 {4 {4} {1}} {1 {6}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {5 {4}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.96022}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {7 {7}}}) -> 1", "(count_leaves {9 {0 {5 {0}} {3 {2} {0}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {4 {7} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {3 {7} {8}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {6}}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {9 {2 {3 {8} {2}} {1}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {1} {9 {9 {5}} {3}}}) -> 3", "(count_leaves {5 {1 {6} {6}} {1 {7}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.458774}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {5 {2 {6 {8} {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {5} {9}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {7 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {5}}) -> 2", "(count_leaves {5 {1 {0} {3 {0}}} {6}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {2} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {8}}) -> 1", "(count_leaves {1 {5 {8} {6}} {3 {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {9}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.464491}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {4} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {2}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4 {1 {1}}}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {9 {8}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {4} {1}} {5 {3} {9}}}) -> 4", "(count_leaves {0 {2} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {4 {3 {3} {8}} {8 {9} {6}}}) -> 4", "(count_leaves {2 {6 {0 {3} {6}}}}) -> 2", "(count_leaves {1 {4 {2}}}) -> 1", "(count_leaves {7 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.012745}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {2 {4}} {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {2}} {1 {0} {1}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {8 {5} {6 {8} {3}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.047034}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {1 {9} {4}}) -> 2", "(count_leaves {0 {4 {6 {6}} {6 {5}}} {1 {5}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {0 {0}}) -> 1", "(count_leaves {0 {3} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {4 {1 {9} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {0 {2} {6 {6} {7}}}}) -> 3", "(count_leaves {8 {4}}) -> 1", "(count_leaves {0 {0} {8}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {7 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {6}}) -> 1", "(count_leaves {3 {8 {7}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3 {8} {4}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.998508}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {5 {9} {3}} {1}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {3 {9 {8}}} {1 {9 {8} {0}}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {2 {2} {7}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {8 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4} {1}}) -> 2", "(count_leaves {2 {8}}) -> 1", "(count_leaves {4 {8} {2 {6} {2}}}) -> 3", "(count_leaves {3 {3 {7} {5}} {2}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {6 {4} {0}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {9 {1 {2} {0}} {7 {9}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {8 {4} {7}}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.019275}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {5} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {6} {9 {5}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {7 {2 {2}}}}) -> 1", "(count_leaves {6 {3 {6}} {9 {7}}}) -> 2", "(count_leaves {2 {8} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {5 {3 {3}} {7 {3}}} {9 {2 {4} {9}}}}) -> 4", "(count_leaves {3 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.030342}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {1 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9} {0}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {0 {2}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {1 {1} {7}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {3 {6 {4 {7}} {7}}}) -> 2", "(count_leaves {3 {6 {6 {5}}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {7} {7}} {7 {6} {5}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {2 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {6} {3}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.053005}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {8 {6} {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {1 {7} {9}} {6 {3}}}) -> 3", "(count_leaves {6 {9 {4}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {4}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {3}}) -> 1", "(count_leaves {2 {5 {7 {5}} {4 {8}}}}) -> 2", "(count_leaves {8 {5 {8}}}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {1 {2}}) -> 1", "(count_leaves {8 {7 {1} {1}} {9 {3} {0}}}) -> 4", "(count_leaves {1}) -> 1", "(count_leaves {4 {6}}) -> 1", "(count_leaves {1 {8 {0 {0} {5}}} {7 {9} {5 {1}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {4 {4} {0}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.950706}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {8 {7} {1}}}) -> 2", "(count_leaves {4 {3}}) -> 1", "(count_leaves {9 {7 {4} {8}} {8}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {9} {8}}) -> 2", "(count_leaves {4 {2} {9}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {2} {6}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3 {8} {5}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.427008}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {9 {9}} {6 {6} {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4 {7} {5}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {2 {8} {9}} {0 {8}}}) -> 3", "(count_leaves {0 {0}}) -> 1", "(count_leaves {4 {8}}) -> 1", "(count_leaves {1 {9}}) -> 1", "(count_leaves {4 {2} {1}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {5}}}) -> 1", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.498038}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {9} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {8}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {4 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {7} {9}}}) -> 2", "(count_leaves {2 {3 {3}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {6 {2} {6}}) -> 2", "(count_leaves {7 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.925846}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {8 {8} {5 {4}}}) -> 2", "(count_leaves {5 {2 {3} {1 {3}}}}) -> 2", "(count_leaves {1 {7} {0}}) -> 2", "(count_leaves {3 {7 {7}}}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {9 {7 {3}}}) -> 1", "(count_leaves {1 {4}}) -> 1", "(count_leaves {4 {7 {1}}}) -> 1", "(count_leaves {8 {7} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {1 {0} {7}}}) -> 2", "(count_leaves {6 {6 {8}} {0}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.430472}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {7 {8} {7}}}) -> 2", "(count_leaves {9 {4 {9} {6}}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {1} {2}}) -> 2", "(count_leaves {6 {4} {9 {3 {5} {5}} {9 {7} {4}}}}) -> 5", "(count_leaves {9 {5} {2}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {4 {9} {2}}}) -> 3", "(count_leaves {5 {4} {5 {0} {5 {7} {6}}}}) -> 4", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {2 {3}}) -> 1", "(count_leaves {1 {5} {9}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8 {0} {3}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.445584}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {0 {2}} {0}}) -> 2", "(count_leaves {6 {1 {3} {1}} {9 {5} {6}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {1 {0} {3}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {0} {1}}) -> 2", "(count_leaves {9 {0} {0}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {4} {3}}) -> 2", "(count_leaves {6 {8 {0} {7}}}) -> 2", "(count_leaves {3 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4 {1} {1}}}) -> 2", "(count_leaves {3 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.496058}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {2}}) -> 1", "(count_leaves {9 {5}}) -> 1", "(count_leaves {1 {4}}) -> 1", "(count_leaves {9 {7 {0 {7} {9}}} {1 {5 {6}} {7}}}) -> 4", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {5} {4}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {3 {8}}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {5 {8}}) -> 1", "(count_leaves {1 {9} {2}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {1 {4 {9} {4 {6}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.460714}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {9}}) -> 1", "(count_leaves {2 {6} {7}}) -> 2", "(count_leaves {8 {4 {3} {2}} {9 {0} {5}}}) -> 4", "(count_leaves {3 {3}}) -> 1", "(count_leaves {3 {6} {6}}) -> 2", "(count_leaves {1 {5 {3}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {3}} {0}}) -> 2", "(count_leaves {1 {0} {2}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {2 {3} {3}}) -> 2", "(count_leaves {2 {2}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {2}}) -> 1", "(count_leaves {1 {2} {6}}) -> 2", "(count_leaves {6 {5 {0}} {3 {5}}}) -> 2", "(count_leaves {2 {8 {9 {3} {2}}}}) -> 2", "(count_leaves {4 {2 {8} {4}}}) -> 2", "(count_leaves {8 {8} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {9} {9}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.919267}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3 {4} {9 {0} {3}}}}) -> 3", "(count_leaves {1 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {7}}) -> 1", "(count_leaves {1 {0 {8} {2}}}) -> 2", "(count_leaves {8 {2 {9 {3}} {1}} {0}}) -> 3", "(count_leaves {4 {7} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {7 {4} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {9 {2 {8}} {2 {8}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {4 {5 {1 {6}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {4}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9 {4 {5 {8} {9}}} {4 {8 {6}}}}) -> 3", "(count_leaves {6 {7}}) -> 1", "(count_leaves {1 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0 {3} {9 {9} {7}}}) -> 3", "(count_leaves {8 {6}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.973393}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {2} {4}}) -> 2", "(count_leaves {6 {8}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {2 {3 {3}} {0}}) -> 2", "(count_leaves {0 {5} {8}}) -> 2", "(count_leaves {8 {7} {8}}) -> 2", "(count_leaves {6 {6} {2}}) -> 2", "(count_leaves {5 {7 {7}} {8}}) -> 2", "(count_leaves {9 {9 {8 {3}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {1}}}) -> 1", "(count_leaves {2 {6 {7 {7} {7}} {0}} {9}}) -> 4", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {4} {5}}) -> 2", "(count_leaves {0 {1 {4} {5}} {2 {0} {6}}}) -> 4", "(count_leaves {7}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {6 {0 {3 {7} {5}} {9}} {6 {0 {2} {3}} {9 {9} {9}}}}) -> 7", "(count_leaves {5 {7} {7}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.488237}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {9 {0} {9}}) -> 2", "(count_leaves {8 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {3}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {7 {2 {4 {5}} {5 {4} {9}}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {0 {3}} {6 {3} {8}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {1 {2}}}) -> 1", "(count_leaves {9 {8} {2}}) -> 2", "(count_leaves {7 {5} {3}}) -> 2", "(count_leaves {0 {1 {2}} {9 {9} {4}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {9 {1 {3} {1 {9}}} {3 {4} {2 {9}}}}) -> 4", "(count_leaves {4 {7} {3 {6} {8}}}) -> 3", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.458652}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {8} {2}}) -> 2", "(count_leaves {1 {8 {5}} {1 {6 {1}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {1 {2}}) -> 1", "(count_leaves {0 {9 {1 {1}}} {5}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {3 {2} {1}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {2 {7} {8}} {4}}) -> 3", "(count_leaves {4 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {7 {5} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {3}}) -> 1", "(count_leaves {3 {9} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {1} {2}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.071711}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {2} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {8}}) -> 1", "(count_leaves {3 {6 {7} {3}}}) -> 2", "(count_leaves {7 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2 {7 {2}} {0 {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {0}} {5 {6 {3} {6}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {0 {2 {1}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {7 {9 {7 {6} {9}} {2 {2}}} {3 {3 {9} {6}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {1 {4 {7}} {9}}) -> 2", "(count_leaves {2 {7 {6}} {4 {1}}}) -> 2", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.005384}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {1}}) -> 1", "(count_leaves {3 {5} {5}}) -> 2", "(count_leaves {0 {2 {5} {1}} {8 {6 {2} {8}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {1 {2}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {0 {0} {8}}) -> 2", "(count_leaves {9 {0}}) -> 1", "(count_leaves {5 {1} {9}}) -> 2", "(count_leaves {7 {5 {1 {9}} {4 {3}}} {3 {8 {2} {3}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {8} {1}}}) -> 2", "(count_leaves {5 {2}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3 {4 {3} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.471579}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {4 {5 {1}} {0}} {6 {4 {0} {7}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {3} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {5 {2} {0}}}) -> 2", "(count_leaves {5 {7}}) -> 1", "(count_leaves {2 {8 {0 {5} {4}} {0 {3} {1}}} {6}}) -> 5", "(count_leaves {4 {6}}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {8 {3 {2 {1}}} {8 {9 {9} {3}}}}) -> 3", "(count_leaves {1 {3} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0 {9 {8 {5} {2}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {9 {2} {5}}) -> 2", "(count_leaves {2 {1 {1}} {4}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.105103}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {1}}) -> 1", "(count_leaves {1 {3 {5}} {4 {5 {2}} {5 {3}}}}) -> 3", "(count_leaves {8 {4} {6}}) -> 2", "(count_leaves {9 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {7} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {4 {5} {1}}}) -> 2", "(count_leaves {4 {6 {4 {8} {1}}}}) -> 2", "(count_leaves {6 {9 {6}} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {0} {6}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.129671}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {2 {2 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0 {6}} {1 {2}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {3 {6} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {3 {4 {2 {6} {6}} {7 {3} {8}}} {8}}) -> 5", "(count_leaves {7 {2} {1}}) -> 2", "(count_leaves {8 {3} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {8} {1}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {8 {9} {6}}) -> 2", "(count_leaves {5 {9 {4} {9}} {1}}) -> 3", "(count_leaves {5 {3}}) -> 1", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.926831}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {6}}) -> 1", "(count_leaves {3 {7} {7 {5} {8}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {7} {8}} {7}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {5 {3} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {5}}) -> 1", "(count_leaves {9 {3 {9 {4}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9 {9 {2 {0} {8}}} {6 {1 {6}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {0 {1 {1 {5}} {3 {2}}} {3 {9 {4}} {0}}}) -> 4", "(count_leaves {6}) -> 1", "(count_leaves {5 {6} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {6 {3 {1 {7}}} {5 {9 {8}}}}) -> 2", "(count_leaves {0 {9 {3} {9 {1} {6}}} {9 {6 {1}}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.203295}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {3 {4} {9 {3} {5}}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {5 {3 {7} {5}} {5 {2}}} {5}}) -> 4", "(count_leaves {2 {5} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {0}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {9 {2 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5} {0}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {4 {9} {2 {9}}}) -> 2", "(count_leaves {6 {8} {2 {2}}}) -> 2", "(count_leaves {6 {9}}) -> 1", "(count_leaves {5 {7} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.095099}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {0 {5 {8}}}) -> 1", "(count_leaves {0 {5 {7} {9}} {3}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {4} {0}}) -> 2", "(count_leaves {7 {7} {7}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {4 {0} {7 {8} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {9 {3 {0} {6}}} {3 {5 {8} {3}} {3 {4}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {8 {5} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {6 {7 {2 {0}} {5 {3} {4}}} {2 {5 {5}}}}) -> 4", "(count_leaves {3 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {1} {6}}) -> 2", "(count_leaves {0 {9} {4 {7 {4}}}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.814027}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {8 {0 {3} {2}} {8 {0} {3}}}}) -> 4", "(count_leaves {7 {7} {7}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {6 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7} {2}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {7 {9 {7 {3}} {0 {7}}}}) -> 2", "(count_leaves {4 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {8 {0 {1} {2}}} {9 {9 {6} {8}}}}) -> 4", "(count_leaves {0}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {1} {3 {1} {0}}}) -> 3", "(count_leaves {4 {6 {7 {9} {4}} {2 {5} {9}}}}) -> 4", "(count_leaves {2 {5 {7} {8}} {2 {3} {9}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.936999}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6} {9}}) -> 2", "(count_leaves {3 {6 {7 {9} {5}} {8 {0} {5}}} {0}}) -> 5", "(count_leaves {0 {3}}) -> 1", "(count_leaves {8 {3 {4 {7} {0}}} {7 {0 {3} {0}} {4 {9} {5}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {6 {4} {3}}) -> 2", "(count_leaves {8 {6} {8 {5} {6}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {2 {5}} {2}}) -> 2", "(count_leaves {7 {7 {9} {1}} {0 {6} {9}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {0} {0}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {7 {6}}} {1}}) -> 2", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 1.126164}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {0 {8}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {0 {7 {7 {6} {7}}} {4 {3 {6} {8}} {1 {5} {4}}}}) -> 6", "(count_leaves {7}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {3}}) -> 1", "(count_leaves {3 {6 {0} {3}}}) -> 2", "(count_leaves {5 {3}}) -> 1", "(count_leaves {6 {5} {4 {3 {0} {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {2}} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2 {4 {2}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.364636}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {1 {3 {1} {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0 {8} {2}}) -> 2", "(count_leaves {1 {8} {6}}) -> 2", "(count_leaves {6 {7} {8}}) -> 2", "(count_leaves {2 {3} {5}}) -> 2", "(count_leaves {8 {6 {1} {7}} {3 {2} {6}}}) -> 4", "(count_leaves {9 {6 {6 {1}} {3 {5} {0}}} {3 {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {3}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {8}}) -> 1", "(count_leaves {9 {2} {9 {6} {6}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4 {4 {9 {1} {7}} {1}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.321002}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3} {7}}) -> 2", "(count_leaves {8 {6 {3}} {7 {5} {8}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {3}}) -> 1", "(count_leaves {8 {8 {4} {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {9} {5}} {7}}) -> 3", "(count_leaves {4 {7} {6 {5 {0} {1}} {4}}}) -> 4", "(count_leaves {2 {6}}) -> 1", "(count_leaves {4 {7} {0}}) -> 2", "(count_leaves {5 {0 {6 {3}}} {4 {9}}}) -> 2", "(count_leaves {5 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6 {0 {1}}}) -> 1", "(count_leaves {4 {2} {3}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {7 {3 {7} {9}}}) -> 2", "(count_leaves {6 {6 {1}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.801751}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {4 {0 {5 {7} {5}} {0 {6}}}}) -> 3", "(count_leaves {7 {1 {7} {0}} {9 {8}}}) -> 3", "(count_leaves {4 {9 {9 {3} {9}} {8}} {7 {1 {4} {8}}}}) -> 5", "(count_leaves {7 {2 {2} {8}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {5 {7 {6} {1}} {3 {7}}}) -> 3", "(count_leaves {9 {4 {0 {2}} {6 {6}}} {9 {3 {9} {5}} {0 {0}}}}) -> 5", "(count_leaves {9 {9} {1}}) -> 2", "(count_leaves {8 {1 {0}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {6 {6} {4}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {2 {8 {9}}}) -> 1", "(count_leaves {8 {8}}) -> 1", "(count_leaves {7 {3 {5} {2}} {1}}) -> 3", "(count_leaves {7 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {7 {4} {9}}) -> 2", "(count_leaves {9 {0 {5}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.319268}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {3 {6} {8}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {6 {8 {5} {8}} {3 {9}}}) -> 3", "(count_leaves {5 {1}}) -> 1", "(count_leaves {4 {4 {8}} {5 {6} {3}}}) -> 3", "(count_leaves {8 {0} {0}}) -> 2", "(count_leaves {2 {0 {7}} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {2} {6}}) -> 2", "(count_leaves {1 {3} {5}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {4 {6} {2}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {7 {1 {7 {6} {2}} {5 {7}}} {1 {1 {0}} {9}}}) -> 5", "(count_leaves {1 {0 {4 {6} {6}} {1}}}) -> 3", "(count_leaves {2 {6 {2} {7}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.429501}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {3} {2}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {6 {8} {1}}) -> 2", "(count_leaves {1 {8 {4 {5} {2}} {3}} {4}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {1} {1}}) -> 2", "(count_leaves {4 {9} {8 {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {9 {7 {8} {9}}} {1}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {3 {2} {2}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.546107}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {1} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {8}}) -> 1", "(count_leaves {5 {4} {8}}) -> 2", "(count_leaves {6 {7 {2}} {7 {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {8 {6} {0}} {4}}) -> 3", "(count_leaves {2 {1 {4 {8}} {2 {2}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {5 {8} {1}} {6 {9}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.479508}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5 {1 {0 {4} {5}}}}) -> 2", "(count_leaves {8 {3 {6} {5}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {1 {6 {7 {0} {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {3} {9}}) -> 2", "(count_leaves {7 {2 {5} {8}} {9 {3}}}) -> 3", "(count_leaves {5 {1}}) -> 1", "(count_leaves {7 {5} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {6} {8 {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {1}}) -> 1", "(count_leaves {5 {9 {1}} {4}}) -> 2", "(count_leaves {9 {9 {5 {2}} {1 {7} {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.530902}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {5 {8} {0 {4 {3}}}}) -> 2", "(count_leaves {2 {6 {1}}}) -> 1", "(count_leaves {2 {5 {3}}}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {1 {3 {3}} {5 {0}}}) -> 2", "(count_leaves {6 {7 {1} {1}} {4}}) -> 3", "(count_leaves {2 {1}}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {5} {6}}) -> 2", "(count_leaves {8 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {2 {5} {4 {1 {5} {9}} {1 {6}}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {4 {6} {5 {2 {1}} {4 {5} {2}}}}) -> 4", "(count_leaves {5 {6 {4}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.424682}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0 {8 {8}}} {8 {1} {2}}}) -> 3", "(count_leaves {1 {6 {2 {2} {0}} {0 {4}}}}) -> 3", "(count_leaves {0 {3 {6 {9}} {7 {6} {1}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2 {8}}) -> 1", "(count_leaves {0 {5 {0 {3} {6}}}}) -> 2", "(count_leaves {0 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {4} {9}}) -> 2", "(count_leaves {4 {8} {1}}) -> 2", "(count_leaves {1 {2 {8 {6}} {4 {8}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4}}) -> 1", "(count_leaves {7 {2 {0} {1}} {6 {8} {7}}}) -> 4", "(count_leaves {1 {9 {4}}}) -> 1", "(count_leaves {3 {3 {1} {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.408808}
