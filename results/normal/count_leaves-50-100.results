{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {6}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {8} {7}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {5 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {6} {0}}) -> 2", "(count_leaves {8 {6} {0}}) -> 2", "(count_leaves {3 {4} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {6} {0}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5 {4} {7}}) -> 2", "(count_leaves {3 {9}}) -> 1", "(count_leaves {1 {6} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6} {5 {3} {4}}}) -> 3", "(count_leaves {6 {1}}) -> 1", "(count_leaves {5 {6 {7} {2}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {6} {0}}) -> 2", "(count_leaves {2 {5} {4 {1} {0}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5}}) -> 1", "(count_leaves {9 {5} {3}}) -> 2", "(count_leaves {6 {4 {8 {9}}} {2}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {5}}) -> 1", "(count_leaves {1 {8} {0 {9}}}) -> 2", "(count_leaves {2 {8 {1}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {6 {1} {7}} {6}} {4 {9 {2}}}}) -> 4", "(count_leaves {5 {3 {9 {0} {8}}}}) -> 2", "(count_leaves {9 {7} {0}}) -> 2", "(count_leaves {0 {3 {7 {7} {7}} {6 {0}}} {6 {5 {5} {3}} {4}}}) -> 6", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.849975}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {2 {0}} {0 {0}}}) -> 2", "(count_leaves {2 {6}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {2 {9}} {2 {2} {3}}}) -> 3", "(count_leaves {1 {2 {5}}}) -> 1", "(count_leaves {8 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {5 {7}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {8}}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {1 {5 {5 {8}} {3 {8} {3}}}}) -> 3", "(count_leaves {2 {0 {5}} {6}}) -> 2", "(count_leaves {3 {7}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8 {3 {8 {9} {3}} {5}} {9 {3 {0} {5}} {2}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {9 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {9}} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {9 {4} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {1} {5}}) -> 2", "(count_leaves {8 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3} {1 {3}}}) -> 2", "(count_leaves {2 {8}}) -> 1", "(count_leaves {6 {3 {2}}}) -> 1", "(count_leaves {5 {3} {9 {7}}}) -> 2", "(count_leaves {3 {4 {6} {3}}}) -> 2", "(count_leaves {7 {5} {8}}) -> 2", "(count_leaves {7 {7 {0} {6}}}) -> 2", "(count_leaves {1 {1}}) -> 1", "(count_leaves {0 {2} {6 {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {3 {2 {5}} {7 {0} {4}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.856848}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {8} {1}}) -> 2", "(count_leaves {3 {9 {3} {0}} {3 {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {3 {0}}}) -> 1", "(count_leaves {6 {1 {4}} {2 {5}}}) -> 2", "(count_leaves {6 {7 {8 {4}}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {5} {1}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {1 {5 {9 {0}}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {9 {0}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {3 {4} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6 {5 {6}} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {3 {7 {5}} {1}} {3}}) -> 3", "(count_leaves {6 {3}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {1 {2}} {7 {9} {3 {7} {7}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {9} {9 {7} {6}}}) -> 3", "(count_leaves {2 {7 {6}}}) -> 1", "(count_leaves {7 {0}}) -> 1", "(count_leaves {5 {8} {8 {0}}}) -> 2", "(count_leaves {4 {7 {8}} {6 {5} {9}}}) -> 3", "(count_leaves {1 {6} {9}}) -> 2", "(count_leaves {5 {7 {6 {1} {1}} {2}} {3 {5}}}) -> 4", "(count_leaves {6 {2 {4 {5} {4}} {7 {8} {1}}}}) -> 4", "(count_leaves {0 {6}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {2 {4} {4}} {4}}) -> 3", "(count_leaves {9 {5}}) -> 1", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.847663}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {1}}) -> 1", "(count_leaves {2 {4}}) -> 1", "(count_leaves {3 {7 {3} {5 {2} {2}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {1 {6} {3 {3 {4}} {6 {0} {7}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {6 {4 {7}} {4}}) -> 2", "(count_leaves {4 {9}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {8 {4}} {5 {3} {4}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {5} {6}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {8 {2} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {7 {9 {2} {4}}}}) -> 2", "(count_leaves {4 {1} {4}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {8 {4} {6 {6} {8}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {7 {1 {7} {3}}}) -> 2", "(count_leaves {3 {4} {8}}) -> 2", "(count_leaves {8 {6 {6} {2}} {2 {1}}}) -> 3", "(count_leaves {2 {8}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {1 {4} {1}}) -> 2", "(count_leaves {2 {5} {5}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {1 {4} {9}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {7}}) -> 1", "(count_leaves {8 {0}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.835794}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9 {8 {9}} {3 {4} {1}}} {2}}) -> 4", "(count_leaves {3 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9 {8 {7 {1}} {6}} {9}}) -> 3", "(count_leaves {1 {8 {3 {7} {9}} {2}} {3 {5}}}) -> 4", "(count_leaves {9 {4} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {8 {3 {6} {7}}}) -> 2", "(count_leaves {1 {3}}) -> 1", "(count_leaves {7 {9 {4 {4} {9}}} {2 {2 {9}}}}) -> 3", "(count_leaves {1 {9} {7}}) -> 2", "(count_leaves {9 {5 {5}} {1 {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {5 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {0}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {9 {4}}} {1 {5 {5} {7}} {1 {0}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {0 {3}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {0}}) -> 1", "(count_leaves {0 {1 {7 {0}}} {7 {7 {0} {0}} {4 {4}}}}) -> 4", "(count_leaves {4 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {5}}) -> 1", "(count_leaves {1 {0 {3}}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {4} {0}}) -> 2", "(count_leaves {1 {6} {7 {1} {1}}}) -> 3", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.928168}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4}}) -> 1", "(count_leaves {1 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5 {0}}) -> 1", "(count_leaves {3 {2} {6 {2}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {8 {1 {4 {5}} {9 {4} {7}}} {1 {0 {8} {2}}}}) -> 5", "(count_leaves {6 {4} {2}}) -> 2", "(count_leaves {2 {3} {0}}) -> 2", "(count_leaves {8 {3} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {2} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {1 {6}}) -> 1", "(count_leaves {9 {7} {2}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {0} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0} {7 {3}}}) -> 2", "(count_leaves {4 {6 {9 {9}} {0}} {0 {9} {9 {6} {7}}}}) -> 5", "(count_leaves {0 {2} {5}}) -> 2", "(count_leaves {5 {1}}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {0 {4 {4} {0 {3} {4}}} {3 {7 {8} {0}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {7 {5} {6}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {2 {3 {5} {2}}} {8 {3 {5} {5}} {7 {0} {9}}}}) -> 6", "(count_leaves {5 {3 {2}}}) -> 1", "(count_leaves {6 {0 {3 {3} {7}}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.863655}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {4 {2} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {8 {7} {5}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {6 {9}}}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {0 {4 {7} {9}} {7 {8} {7}}}) -> 4", "(count_leaves {2 {5} {5 {1}}}) -> 2", "(count_leaves {7 {4 {2}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2 {7} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {1} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {9}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0 {7} {1 {8} {6}}}) -> 3", "(count_leaves {9 {1 {8 {1} {9}}}}) -> 2", "(count_leaves {3 {0} {2}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {4 {6}}) -> 1", "(count_leaves {2 {1 {6}} {6}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {4 {2}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4 {2 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {0 {7 {7} {7}}}) -> 2", "(count_leaves {5}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.852596}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6 {2 {8} {6 {8}}} {4 {2 {0} {3}}}}) -> 4", "(count_leaves {7 {9 {7}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {5 {6 {9 {8} {6}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {7 {9} {3 {3} {2}}}) -> 3", "(count_leaves {2 {8} {6}}) -> 2", "(count_leaves {4 {4 {3} {0 {1} {9}}} {0}}) -> 4", "(count_leaves {0}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {4}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {7} {9 {1}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {7 {7 {9}} {4}}) -> 2", "(count_leaves {4 {4} {7}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {8 {2 {9}} {5 {6} {6}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {1 {5 {8 {1}}} {3 {1} {8 {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {2} {5}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {9 {9 {4} {9}}} {8 {5 {1}} {9}}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {0 {5}}) -> 1", "(count_leaves {1 {9 {8} {6 {9} {2}}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {0 {2 {6}} {3 {1}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.878217}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {8}}) -> 1", "(count_leaves {4 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {4 {2}} {2 {9}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4 {2} {7 {2}}}) -> 2", "(count_leaves {5 {1 {2} {3}}}) -> 2", "(count_leaves {0 {9} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {7 {7}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {7}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {9 {5 {9 {4}} {7 {0} {4}}}}) -> 3", "(count_leaves {6 {7 {0} {6}}}) -> 2", "(count_leaves {9 {0}}) -> 1", "(count_leaves {5 {6} {2 {9 {1} {9}}}}) -> 3", "(count_leaves {3 {8 {0 {1} {8}} {3 {8} {2}}}}) -> 4", "(count_leaves {4 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {6 {2 {8}} {3 {0}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0 {1 {9}} {4 {1}}}) -> 2", "(count_leaves {1 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {2}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {4 {1}}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.947388}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {5 {3}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {0 {7 {2} {9}} {1}}) -> 3", "(count_leaves {3 {6} {9}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {3 {5 {7}} {6 {8}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {2 {4 {7} {8}}} {5}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {3 {3} {7}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {2 {0 {1} {6}}}) -> 2", "(count_leaves {4 {8 {5 {8}} {3 {8}}}}) -> 2", "(count_leaves {2 {7}}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {5 {1} {3 {8}}}) -> 2", "(count_leaves {4 {8 {1} {7 {1} {2}}} {6 {8} {8 {1}}}}) -> 5", "(count_leaves {7 {4}}) -> 1", "(count_leaves {4 {9 {3} {3}}}) -> 2", "(count_leaves {7 {9} {4}}) -> 2", "(count_leaves {6 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9 {1} {1}}}) -> 2", "(count_leaves {4 {9 {4} {2}} {2 {3}}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {3 {8 {2} {3}}}) -> 2", "(count_leaves {3 {9 {9}}}) -> 1", "(count_leaves {0 {3} {1 {9}}}) -> 2", "(count_leaves {8 {7}}) -> 1", "(count_leaves {1 {6 {2 {2} {5}} {7}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8 {0 {6}} {1 {0 {7}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.885814}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {6 {2} {1}}}) -> 2", "(count_leaves {8 {8 {8 {7}} {0 {1}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {0 {7} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {4 {0} {2}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {5 {7 {9}} {2 {9} {0}}}) -> 3", "(count_leaves {9 {0} {8}}) -> 2", "(count_leaves {7 {7}}) -> 1", "(count_leaves {8 {5} {0}}) -> 2", "(count_leaves {9 {7} {6}}) -> 2", "(count_leaves {9 {6 {4 {3}} {2 {1}}}}) -> 2", "(count_leaves {6 {9 {0}}}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {7 {0 {4} {6}} {3}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {2}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {6 {0 {9}}} {1}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {5 {8 {1}} {5 {7} {6}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {7 {3 {9} {3}}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {7 {9}}}) -> 1", "(count_leaves {8 {2 {7} {2 {1} {1}}}}) -> 3", "(count_leaves {8 {2 {3}}}) -> 1", "(count_leaves {7 {6 {4 {3}}} {8 {1 {9}} {3}}}) -> 3", "(count_leaves {9 {8 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.894892}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {7 {5 {4 {6} {1}} {9 {4} {8}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {8 {0 {2} {6}} {9 {3} {0}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {3}}) -> 1", "(count_leaves {1 {3 {5}}}) -> 1", "(count_leaves {2 {6 {3}} {6 {0 {5} {4}} {6 {0} {6}}}}) -> 5", "(count_leaves {5}) -> 1", "(count_leaves {6 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {6} {3}}) -> 2", "(count_leaves {9 {4 {2 {3}} {1 {4} {6}}} {5 {6 {1}} {0 {0}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {0 {5 {6 {5} {9}}} {1 {7 {7} {3}} {7 {5}}}}) -> 5", "(count_leaves {9 {7} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {3 {3 {3}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {1 {6}}}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {2 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {4} {5}}) -> 2", "(count_leaves {4 {0}}) -> 1", "(count_leaves {8 {4} {7 {8}}}) -> 2", "(count_leaves {8 {9 {8}}}) -> 1", "(count_leaves {9 {2 {7}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0 {7} {7}} {0 {1}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {0}} {8 {0} {0 {4} {2}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.927279}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {7 {5 {3} {2 {9} {4}}} {3}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {4 {0} {9}}) -> 2", "(count_leaves {8 {1} {9}}) -> 2", "(count_leaves {2 {9 {7}}}) -> 1", "(count_leaves {9 {0 {0 {0} {8}} {2}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {3} {7}}) -> 2", "(count_leaves {1 {3} {0}}) -> 2", "(count_leaves {5 {5 {5} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {3} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {7 {1} {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {0 {9} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2 {3 {1 {4}}} {7}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {1}}) -> 1", "(count_leaves {6 {0 {9} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {1 {3}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0 {8 {6} {0}} {3 {6} {9}}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.881751}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {6} {7}}) -> 2", "(count_leaves {5 {2} {7 {6}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {9} {4}}) -> 2", "(count_leaves {8 {6} {6}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {6 {1 {5} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {3 {6} {3 {6} {6}}} {6 {4}}}) -> 4", "(count_leaves {3 {3 {6} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {7}}) -> 1", "(count_leaves {8 {0 {5 {9}} {3 {7}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {0 {4 {6 {0}}} {8 {2 {9}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {5} {8}}) -> 2", "(count_leaves {6 {4} {8}}) -> 2", "(count_leaves {7 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {6 {1}} {9 {6}}}) -> 2", "(count_leaves {0 {3} {0 {9 {0}} {5 {7} {9}}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {4}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {1 {6} {0 {2}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {0 {5} {7}}) -> 2", "(count_leaves {5 {4 {4}} {0 {9} {2}}}) -> 3", "(count_leaves {3 {2 {6} {3 {4}}} {8 {5} {0 {7} {3}}}}) -> 5"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.960321}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {2 {3}}}}) -> 1", "(count_leaves {5 {9 {0} {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6 {6} {7}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {0 {6 {3} {1 {8}}}}) -> 2", "(count_leaves {0 {6}}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4 {9 {4}} {3}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {4} {4 {1}}}) -> 2", "(count_leaves {5 {5 {2 {8} {4}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {3} {9 {7} {6}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {9 {0}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {0 {8 {5 {0} {8}}} {6 {0 {0} {0}}}}) -> 4", "(count_leaves {5 {3}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3}}) -> 1", "(count_leaves {6 {0} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {9 {2 {9}}}) -> 1", "(count_leaves {1 {9} {1}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {9 {7 {1}} {1 {1} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.967364}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {4} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {1 {0} {9}} {5}}}) -> 3", "(count_leaves {0 {3 {6 {3} {2}}}}) -> 2", "(count_leaves {7 {5 {1 {8}} {6}} {8}}) -> 3", "(count_leaves {8 {3}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {6} {2}}) -> 2", "(count_leaves {4 {6}}) -> 1", "(count_leaves {4 {7} {3 {2 {3}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {2 {9 {4}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {2 {5} {7}}}) -> 2", "(count_leaves {4 {5 {4}} {1 {8} {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {1} {6}} {7}}) -> 3", "(count_leaves {6 {3}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {6} {7 {4}}}}) -> 2", "(count_leaves {9 {3} {1 {6} {7}}}) -> 3", "(count_leaves {7 {4 {2} {2}}}) -> 2", "(count_leaves {0 {6}}) -> 1", "(count_leaves {9 {5}}) -> 1", "(count_leaves {1 {2 {1} {1}}}) -> 2", "(count_leaves {1 {4}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3 {1 {9}} {6 {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {2 {7}}}) -> 1", "(count_leaves {2 {8 {0} {0}}}) -> 2", "(count_leaves {5 {1}}) -> 1", "(count_leaves {7 {7}}) -> 1", "(count_leaves {7 {4} {1 {1} {4}}}) -> 3", "(count_leaves {3 {1 {3}} {5 {5} {6}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {0 {5} {2}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.961207}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {6 {5 {0}}} {2 {6}}}) -> 2", "(count_leaves {8 {6} {5}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {7 {1} {1}}) -> 2", "(count_leaves {9 {2 {2}} {9}}) -> 2", "(count_leaves {1 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {6} {4}}) -> 2", "(count_leaves {0 {6} {4}}) -> 2", "(count_leaves {0 {7 {1} {0}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {9 {8} {3}}) -> 2", "(count_leaves {4 {0 {3} {3}}}) -> 2", "(count_leaves {8 {2 {5} {8 {0} {9}}}}) -> 3", "(count_leaves {5 {4} {2}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {3 {7 {8} {9 {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {9 {4} {9}}) -> 2", "(count_leaves {3 {4 {2} {0}} {2}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {5}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {5 {6 {2} {0 {9} {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {2}}) -> 1", "(count_leaves {0 {7} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.748991}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {3 {2 {0} {3}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {0 {9 {8} {4}} {4 {8}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8 {5 {8} {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {9} {7}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {3 {9 {5}} {5 {2} {5}}}) -> 3", "(count_leaves {6 {9 {6 {2}}} {4 {1 {5} {2}} {0}}}) -> 4", "(count_leaves {9 {4 {5 {4}} {0}}}) -> 2", "(count_leaves {4 {0}}) -> 1", "(count_leaves {3 {5} {3 {0}}}) -> 2", "(count_leaves {8 {7}}) -> 1", "(count_leaves {5 {4}}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {9 {5}}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {7 {8} {0}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {4 {7} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {1 {6 {6}} {0 {7}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {8}}}) -> 1", "(count_leaves {4 {8} {4}}) -> 2", "(count_leaves {9 {3} {9}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {1 {7}}}) -> 1", "(count_leaves {4 {8 {4} {8}} {1 {5} {3}}}) -> 4", "(count_leaves {7 {4 {4 {9} {8}}} {4 {5 {2}} {6 {4} {7}}}}) -> 5", "(count_leaves {3}) -> 1", "(count_leaves {3 {0} {7 {2}}}) -> 2", "(count_leaves {5 {5}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.727495}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {9}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7} {0}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {9 {3 {5} {6}}} {8 {6 {4} {3}} {3 {7}}}}) -> 5", "(count_leaves {6}) -> 1", "(count_leaves {4 {0 {7 {1}}}}) -> 1", "(count_leaves {8 {5 {5} {1}}}) -> 2", "(count_leaves {2 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {7 {7 {7} {4}}}) -> 2", "(count_leaves {9 {0 {2 {4} {7}}} {5 {6 {9} {6}}}}) -> 4", "(count_leaves {2 {6 {6} {5}} {3 {3} {0}}}) -> 4", "(count_leaves {5}) -> 1", "(count_leaves {9 {6 {5} {4 {0} {8}}}}) -> 3", "(count_leaves {7 {2 {1}} {8 {2}}}) -> 2", "(count_leaves {7 {9 {9} {2}} {4}}) -> 3", "(count_leaves {1 {6 {2}} {3}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {6 {2}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {0} {0 {5 {9} {5}} {7 {7} {7}}}}) -> 5", "(count_leaves {4}) -> 1", "(count_leaves {5 {3} {6}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {1 {4 {7}}}) -> 1", "(count_leaves {6 {8 {7 {4}}} {8 {8 {5}} {1 {9}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {9} {0}}) -> 2", "(count_leaves {7 {1} {8}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {9 {5} {9}}) -> 2", "(count_leaves {6 {4 {9 {9}} {8 {2} {8}}}}) -> 3", "(count_leaves {7 {3 {2}} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {6} {9 {8} {0}}}) -> 3", "(count_leaves {9 {5} {0}}) -> 2", "(count_leaves {4 {9 {2} {3}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.708677}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {4}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {2} {5}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {2 {9} {0}} {8 {1}}}}) -> 3", "(count_leaves {1 {7 {0 {8} {1}}}}) -> 2", "(count_leaves {7 {1} {1}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {1 {5} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {9 {2 {7} {3}} {3}} {7}}) -> 4", "(count_leaves {6}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {6} {1}}) -> 2", "(count_leaves {3 {9 {4} {6}} {0}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {5 {6} {8 {6} {4 {2}}}}) -> 3", "(count_leaves {7 {7 {0 {4} {7}} {2 {6}}} {3 {7 {7}} {0}}}) -> 5", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {6 {0 {7} {3}} {1 {6} {7}}}) -> 4", "(count_leaves {8}) -> 1", "(count_leaves {0 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {2 {9} {8}}}) -> 2", "(count_leaves {9 {3 {8}} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {8}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.726556}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0 {5 {0} {0}} {2}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7 {2 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {0 {5}}} {0 {7}}}) -> 2", "(count_leaves {6 {7}}) -> 1", "(count_leaves {9 {4 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {0} {9}}) -> 2", "(count_leaves {5 {8 {4}} {3}}) -> 2", "(count_leaves {2 {9 {9} {0}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {4}}) -> 1", "(count_leaves {8 {7 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {6 {3}} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {7} {8 {8 {1} {3}}}}) -> 3", "(count_leaves {1 {0 {5 {4}} {1}} {7}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {1 {2 {3}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {7 {3 {1 {4} {3}}} {7}}) -> 3", "(count_leaves {1 {1 {5}} {5}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {1} {8}}}) -> 2", "(count_leaves {4 {1} {0 {0}}}) -> 2", "(count_leaves {0 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {3 {3} {0}}} {3}}) -> 3", "(count_leaves {9 {5}}) -> 1", "(count_leaves {9 {0 {9}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.74004}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {4 {4}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {3 {3}}} {8 {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {3}}) -> 1", "(count_leaves {8 {3} {0}}) -> 2", "(count_leaves {8 {1}}) -> 1", "(count_leaves {5 {4} {7}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {7 {9} {9 {9 {2} {4}}}}) -> 3", "(count_leaves {8 {7}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {0 {9 {7 {9}}} {9 {8 {0}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {2 {1 {1 {6}} {6 {5} {7}}} {2}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {4}}}) -> 1", "(count_leaves {7 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7 {3} {1}} {0 {5} {8}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {1}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {7} {6}}) -> 2", "(count_leaves {6 {2 {7 {1}}} {2 {3 {8}} {0}}}) -> 3", "(count_leaves {4 {1 {4}} {9 {8}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {9 {2 {3} {4}}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {4 {0}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.718182}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {1 {7} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {8} {8}}) -> 2", "(count_leaves {7 {6} {0 {9}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {2 {8 {1} {6}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8 {8 {8}}}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {3 {2 {1 {1} {9}} {5 {5} {6}}}}) -> 4", "(count_leaves {1 {5}}) -> 1", "(count_leaves {5 {0 {5} {0}}}) -> 2", "(count_leaves {7 {0 {9}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {5} {1}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {1 {3} {6}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {0 {1 {9} {6 {7} {7}}}}) -> 3", "(count_leaves {1 {7 {8}}}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {7 {6}}) -> 1", "(count_leaves {9 {8}}) -> 1", "(count_leaves {7 {7 {2} {2}} {1 {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {5 {3 {9 {5}} {2 {4} {7}}} {5 {2} {0}}}) -> 5", "(count_leaves {5 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {4} {3}}) -> 2", "(count_leaves {1 {9 {4}}}) -> 1", "(count_leaves {2 {3} {3}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {9} {1}}}) -> 2", "(count_leaves {5 {8 {1}} {9 {6}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.720123}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {7}}) -> 1", "(count_leaves {6 {7 {7} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {1} {8 {7 {2}}}}) -> 2", "(count_leaves {3 {1} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {0}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {9 {4} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {0}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8 {9 {4 {6}}} {3 {7} {9 {8}}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {8 {0 {7 {7}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3 {9} {0 {6}}}) -> 2", "(count_leaves {0 {2}}) -> 1", "(count_leaves {0 {0}}) -> 1", "(count_leaves {9 {0} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6 {0 {4} {7 {0} {0}}}}) -> 3", "(count_leaves {6 {5} {2}}) -> 2", "(count_leaves {2 {1} {4}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {0} {0 {1}}}}) -> 2", "(count_leaves {4 {5 {0 {1}}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {9} {8}} {1 {1} {4}}}) -> 4", "(count_leaves {2 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {4} {6}}) -> 2", "(count_leaves {1 {2}}) -> 1", "(count_leaves {0 {3} {5}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.835243}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {5 {4 {1}} {8 {0} {5}}}}) -> 3", "(count_leaves {4 {5 {1}}}) -> 1", "(count_leaves {5 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {1} {0}}) -> 2", "(count_leaves {7 {1}}) -> 1", "(count_leaves {2 {5 {4} {1}}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8} {6}}) -> 2", "(count_leaves {6 {3} {2 {1} {0}}}) -> 3", "(count_leaves {1 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {3} {7 {4} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {9 {6}} {4 {3} {6 {2} {4}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {7 {0} {9}}) -> 2", "(count_leaves {7 {1 {5}}}) -> 1", "(count_leaves {5 {0} {9 {8 {8}}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {2 {2} {0}}) -> 2", "(count_leaves {6 {5} {4}}) -> 2", "(count_leaves {7 {4 {5}} {5 {1} {8 {9} {7}}}}) -> 4", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {8}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {0} {3}}) -> 2", "(count_leaves {3 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5} {2 {4}}}) -> 2", "(count_leaves {2 {4 {7} {5}} {3}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.910776}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4 {7 {6} {6}} {4 {8} {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {3 {9 {5}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {2 {5} {7 {1} {4}}}) -> 3", "(count_leaves {7 {6} {3 {3} {9}}}) -> 3", "(count_leaves {3 {3} {1 {9 {4} {8}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {3 {8 {5} {9}} {5}}) -> 3", "(count_leaves {3 {1} {8 {2 {0}}}}) -> 2", "(count_leaves {5 {9}}) -> 1", "(count_leaves {3 {7} {5}}) -> 2", "(count_leaves {8 {3 {4 {2}}}}) -> 1", "(count_leaves {1 {6} {2 {8}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {5}}) -> 1", "(count_leaves {8 {7} {7}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1 {5} {9}}) -> 2", "(count_leaves {3 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {8 {7} {6}}) -> 2", "(count_leaves {1 {3}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {0 {0 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {6} {0 {3}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.867066}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3 {3} {5}}) -> 2", "(count_leaves {9 {7} {9}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4 {6 {3 {5} {2}}} {1 {0}}}) -> 3", "(count_leaves {9 {7} {5 {7}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7 {0 {6} {5}} {7 {9} {3}}}) -> 4", "(count_leaves {7 {1 {3} {5}}}) -> 2", "(count_leaves {7 {6} {7 {0}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5}}) -> 1", "(count_leaves {3 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {3} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {1 {9} {2}} {9 {8} {9}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {4 {9 {0} {1}} {8 {5}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {4 {8 {1} {9}} {1 {1} {5}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {4 {8} {5 {9}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {1 {0}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {1} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.858682}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {5} {6}}) -> 2", "(count_leaves {8 {2 {1}} {0}}) -> 2", "(count_leaves {6 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {2 {3 {8}} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3 {9} {5}}) -> 2", "(count_leaves {5 {4 {6}} {7 {8} {6}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {2 {3 {5 {9}}}}) -> 1", "(count_leaves {4 {8} {3 {5} {5}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {6}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {8 {4 {6} {1 {6}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {7 {2 {8 {2}}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {3 {0} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {8}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {4} {6}} {8}}) -> 3", "(count_leaves {6 {5}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {1} {7}}) -> 2", "(count_leaves {1 {4 {1}}}) -> 1", "(count_leaves {9 {4 {3}} {5 {1}}}) -> 2", "(count_leaves {2 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {1} {6}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.844542}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8 {5 {6 {6}}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {6} {3 {8 {6}} {4}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {7 {0}}}}) -> 1", "(count_leaves {7 {3 {1 {9} {0}}}}) -> 2", "(count_leaves {0 {2 {9}} {1 {9} {3 {7}}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {8 {4} {4}}) -> 2", "(count_leaves {4 {6 {5 {8} {2}} {1 {1}}} {6}}) -> 4", "(count_leaves {0 {7 {3} {2}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4 {0} {9}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0}}) -> 1", "(count_leaves {0 {5} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {7 {2} {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {2} {9}}) -> 2", "(count_leaves {3 {3} {2 {2 {6} {7}} {6 {9} {4}}}}) -> 5", "(count_leaves {5}) -> 1", "(count_leaves {0 {0} {3 {5 {9} {7}} {7}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {7 {1} {0}}) -> 2", "(count_leaves {6 {3}}) -> 1", "(count_leaves {9 {4} {5}}) -> 2", "(count_leaves {0 {7 {9}}}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7 {2} {5}}) -> 2", "(count_leaves {6 {5} {3}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.829822}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {3} {4}}) -> 2", "(count_leaves {4 {0}}) -> 1", "(count_leaves {3 {4 {6}}}) -> 1", "(count_leaves {0 {9 {3} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {5}}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {7 {7 {3}} {0 {0} {2}}} {9 {2 {3} {9}}}}) -> 5", "(count_leaves {9 {2 {8}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {4 {9 {0}} {6}} {6}}) -> 3", "(count_leaves {5 {4} {2}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6 {3} {7}}) -> 2", "(count_leaves {8 {3 {4}} {2 {9} {2}}}) -> 3", "(count_leaves {0 {3 {9}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {0 {2} {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {8} {1}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6 {9 {1}}} {8}}) -> 2", "(count_leaves {2 {0 {8 {7} {7}}} {6}}) -> 3", "(count_leaves {2 {6 {1} {0}} {2}}) -> 3", "(count_leaves {6 {1}}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {5 {0 {3} {5}} {5 {4}}}) -> 3", "(count_leaves {6 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {3 {2 {1}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {2} {0 {2 {7} {0}}}}) -> 3", "(count_leaves {6 {9}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.900996}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {8} {4 {9 {7} {7}}}}) -> 3", "(count_leaves {5 {7 {1} {2}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9 {3 {6} {9}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4 {8 {0}} {6 {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {2 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6} {8}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {6 {5} {0}}) -> 2", "(count_leaves {5 {2}}) -> 1", "(count_leaves {4 {3}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2 {8}}) -> 1", "(count_leaves {1 {7 {2 {1}}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6 {2 {2} {0}}} {2 {8 {1}} {5 {7} {0}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {2 {8 {8 {9} {8}}}}) -> 2", "(count_leaves {6 {0 {7} {5}}}) -> 2", "(count_leaves {3 {9} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {6} {8}}) -> 2", "(count_leaves {0 {5}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {4 {0 {0}} {1 {2 {4}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {8 {3} {0}} {3 {9} {7}}}}) -> 4", "(count_leaves {8 {6 {4} {7}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.912343}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {1 {5}} {9 {6} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {7 {3}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {8 {3} {5 {6 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {2 {8} {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {1 {9}}}) -> 1", "(count_leaves {1 {7} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7} {7}}) -> 2", "(count_leaves {8 {4}}) -> 1", "(count_leaves {1 {7 {5}} {0}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2 {4 {5 {9} {1}} {9 {6}}} {4}}) -> 4", "(count_leaves {2 {7} {8}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {2 {2 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {7}}) -> 1", "(count_leaves {2 {1}}) -> 1", "(count_leaves {6 {0 {4 {4} {5}} {0 {2}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {5}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {6 {9 {6}} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {3 {0} {3}} {9 {4}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.966301}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {1 {4} {6}}}) -> 2", "(count_leaves {2 {2 {5 {7} {7}} {7 {6} {4}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9 {1 {7}}}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8 {4} {6}}) -> 2", "(count_leaves {0 {6}}) -> 1", "(count_leaves {5 {3} {0}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {0}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {0 {4}}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {1 {5} {7}}) -> 2", "(count_leaves {6 {9}}) -> 1", "(count_leaves {1 {0} {9}}) -> 2", "(count_leaves {0 {9}}) -> 1", "(count_leaves {2 {7}}) -> 1", "(count_leaves {1 {6}}) -> 1", "(count_leaves {4 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {3}} {3}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {4 {9 {8} {8}} {6 {6}}}) -> 3", "(count_leaves {7 {1 {1}} {4}}) -> 2", "(count_leaves {1 {5 {1 {5} {9}} {4 {7}}} {3 {6}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {8 {6} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {0 {9}}}) -> 1", "(count_leaves {4 {0 {7 {8} {4}} {1 {5}}}}) -> 3", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.618178}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3 {3}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0}}) -> 1", "(count_leaves {7 {6 {8} {2}} {8}}) -> 3", "(count_leaves {5 {2}}) -> 1", "(count_leaves {5 {5} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0 {2} {5}}) -> 2", "(count_leaves {5 {0} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4 {2} {5 {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {1 {6 {0} {8}} {1}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {6 {2 {6} {1}} {7 {0}}} {6}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {5 {0} {1 {1 {4}} {7 {3}}}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {3}}) -> 1", "(count_leaves {6 {7 {4}} {9 {1}}}) -> 2", "(count_leaves {9 {3}}) -> 1", "(count_leaves {6 {0 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {7 {4} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {8 {7 {9} {2}} {0}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {9 {2} {8 {8}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.615758}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {7 {6}} {4 {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6 {0} {8 {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {3}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {6} {5 {3}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {4 {1 {7}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {9 {3 {6}} {3}} {2 {3}}}) -> 3", "(count_leaves {0 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {7 {0 {8}}} {6 {4 {7}} {3 {3}}}}) -> 3", "(count_leaves {6 {2 {0} {3}} {2}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {5}}) -> 1", "(count_leaves {9 {3} {7}}) -> 2", "(count_leaves {5 {4 {6} {0}} {7 {1} {9}}}) -> 4", "(count_leaves {5 {2 {7 {2} {4}} {2}} {6}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {5 {4 {9}} {5 {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {9} {9}}) -> 2", "(count_leaves {1 {7}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {2}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {5 {7} {9}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {0 {1}}) -> 1", "(count_leaves {7 {0}}) -> 1", "(count_leaves {0 {6 {3}} {5 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {8 {7} {6}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.637373}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {9}}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {8}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {7 {2} {8}}) -> 2", "(count_leaves {9 {9}}) -> 1", "(count_leaves {1 {4} {3}}) -> 2", "(count_leaves {7 {7} {4}}) -> 2", "(count_leaves {1 {0} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {6}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {6 {3 {6}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {2 {8 {4 {8} {9}} {1 {1}}} {4}}) -> 4", "(count_leaves {8 {3}}) -> 1", "(count_leaves {9 {6 {6}} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {3 {3 {5} {4}} {1 {8} {5}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {5 {6}}}}) -> 1", "(count_leaves {1 {0 {7}} {4 {0} {8}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {6 {3 {0 {3} {8}}}}) -> 2", "(count_leaves {7 {5} {8}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {1}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {6 {2} {1}} {2 {9} {0}}}) -> 4", "(count_leaves {1 {1 {1}} {7 {6}}}) -> 2", "(count_leaves {2 {6}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {0 {1}}) -> 1", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.619886}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {1 {1 {2} {2}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {4 {5} {8}}} {3}}) -> 3", "(count_leaves {0 {8}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {5}}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {0 {3} {9}} {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {2}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {3 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6 {2} {5}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {3 {9 {6}} {2}}) -> 2", "(count_leaves {6 {1} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0 {9 {8 {3} {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8 {8} {4}}) -> 2", "(count_leaves {7 {9}}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {0 {8} {8}}) -> 2", "(count_leaves {1 {8 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6} {7}}) -> 2", "(count_leaves {7 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {4}}) -> 1", "(count_leaves {0 {8 {3} {5}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {4 {9}}) -> 1", "(count_leaves {4 {3} {2}}) -> 2", "(count_leaves {4}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.666972}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {3 {7} {3}}}) -> 2", "(count_leaves {5 {3 {7}} {6 {6 {9}}}}) -> 2", "(count_leaves {9 {8 {4}} {5 {2} {6}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {1 {1 {2 {2} {2}} {0 {4}}} {1 {3 {0}} {6 {3}}}}) -> 5", "(count_leaves {0 {0 {9}}}) -> 1", "(count_leaves {5 {7 {5 {0} {5}} {8 {0} {2}}}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {0 {4 {8} {1}}}) -> 2", "(count_leaves {0 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {5 {7 {8}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {1 {9} {6 {5 {6}}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {5 {9} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {2 {0 {5} {9 {8}}} {9}}) -> 3", "(count_leaves {9 {8} {1}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {1 {0 {7}} {6}}) -> 2", "(count_leaves {7 {2}}) -> 1", "(count_leaves {4 {3} {0 {9}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {1 {1} {0 {1} {3}}}) -> 3", "(count_leaves {4 {8 {4}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {5}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {8 {1} {6}} {8 {3}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {7 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.608596}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {4}}) -> 1", "(count_leaves {3 {1} {8 {7 {9} {2}} {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {1 {6} {2}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {6 {0} {2}}) -> 2", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6} {1}}) -> 2", "(count_leaves {1 {9} {0 {8}}}) -> 2", "(count_leaves {1 {0}}) -> 1", "(count_leaves {8 {0 {2 {9}} {3 {5} {0}}}}) -> 3", "(count_leaves {9 {2}}) -> 1", "(count_leaves {2 {1 {5} {1}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3 {8} {2 {4}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {6 {3} {4}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {9}}) -> 1", "(count_leaves {7 {1 {7}} {8 {3 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {9 {5}} {1 {1} {6}}} {1 {4}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {9 {3 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {0}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {2 {6} {0}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {1}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {1 {5 {9} {7}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.844483}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {8 {0} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {6} {4}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {5} {3}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {0 {7} {0}}) -> 2", "(count_leaves {7 {9} {2}}) -> 2", "(count_leaves {0 {2}}) -> 1", "(count_leaves {3 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {8 {6}}) -> 1", "(count_leaves {2 {5 {5}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {0 {1 {1} {0}} {2}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {5} {0 {2} {7}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {2}}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {6} {1}}) -> 2", "(count_leaves {1 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {9 {0 {8} {0}} {1 {9} {9}}} {1 {3 {0} {2}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {3} {7}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {9 {7} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {9 {8 {5} {7}}}) -> 2", "(count_leaves {0 {2} {9}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.820855}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {3} {2}}) -> 2", "(count_leaves {7 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {5}}) -> 1", "(count_leaves {9 {0 {7}} {7 {5} {1}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3 {3 {2 {7}} {9 {4} {6}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {2 {7 {5} {2 {1} {9}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {3 {8} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {5} {7 {6} {1}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {3 {7 {6} {3}}}}) -> 2", "(count_leaves {4 {3}}) -> 1", "(count_leaves {8 {0 {3} {4}} {9}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {8 {9} {0}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {7 {1 {2}} {3}} {5}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4}}) -> 1", "(count_leaves {5 {7 {5} {6}}}) -> 2", "(count_leaves {3 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {2 {0}} {5 {1}}}) -> 2", "(count_leaves {3 {6 {0}}}) -> 1", "(count_leaves {5 {3 {9} {6}} {7 {4}}}) -> 3", "(count_leaves {2 {9 {3 {3}} {0 {6} {3}}} {4 {9}}}) -> 4", "(count_leaves {5 {8 {9}}}) -> 1", "(count_leaves {8 {7 {3 {1}}} {6}}) -> 2", "(count_leaves {8 {3 {9}} {7 {7}}}) -> 2", "(count_leaves {3 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {9} {5}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.811916}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {4} {1}}) -> 2", "(count_leaves {0 {7 {2}} {0 {9}}}) -> 2", "(count_leaves {8 {1 {2 {9} {4}}} {0 {3}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {5} {9}}}) -> 2", "(count_leaves {4 {7 {5 {8}}} {1 {7 {2} {5}} {0 {3} {9}}}}) -> 5", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {0 {4}} {3 {5}}}) -> 2", "(count_leaves {7 {9} {2 {2 {8} {7}} {4 {5} {6}}}}) -> 5", "(count_leaves {0 {3}}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {3 {3} {8}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {2 {9 {8} {4}}} {9}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {1 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {0} {0 {2 {1} {8}}}}) -> 3", "(count_leaves {6 {2} {6}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {1 {0 {7}}} {0}}) -> 2", "(count_leaves {3 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9}}) -> 1", "(count_leaves {4 {8} {4 {7 {6} {3}} {2 {5} {9}}}}) -> 5", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {0} {0}}) -> 2", "(count_leaves {0 {8}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8 {6 {9}}}) -> 1", "(count_leaves {8 {6 {5}} {4}}) -> 2", "(count_leaves {3 {7}}) -> 1", "(count_leaves {6 {6 {6}}}) -> 1", "(count_leaves {1 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {2}}}) -> 1", "(count_leaves {1 {5 {8}} {2}}) -> 2", "(count_leaves {3 {5 {3} {1}} {6 {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4 {2} {7}}) -> 2", "(count_leaves {0 {4} {8 {3} {5}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.8467}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {0 {9 {7 {5} {0}}} {0}}) -> 3", "(count_leaves {4 {6} {4 {7 {0} {7}}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {3 {1} {4}} {5}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {1 {4} {2}} {0 {8}}} {0}}) -> 4", "(count_leaves {6 {7} {1}}) -> 2", "(count_leaves {0 {4 {7} {6 {9} {4}}}}) -> 3", "(count_leaves {9 {1 {0} {1}} {9 {2}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {1}}) -> 1", "(count_leaves {2 {2 {8 {2} {3}} {5 {2}}}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {2 {6 {9} {1}}}}) -> 2", "(count_leaves {9 {3 {2} {5}} {6 {3}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {4 {5} {1}} {1 {0}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {4 {5} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {9} {7}}) -> 2", "(count_leaves {1 {2 {1}}}) -> 1", "(count_leaves {3 {5 {0} {3}}}) -> 2", "(count_leaves {9 {0}}) -> 1", "(count_leaves {0 {0 {8} {0}}}) -> 2", "(count_leaves {7 {3 {4}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5 {5 {3 {5} {9}} {5 {8}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8} {6}}) -> 2", "(count_leaves {4 {8} {6}}) -> 2", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.849013}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1 {8 {9 {8}} {6 {3}}} {3}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {5 {1} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {1} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {0 {0}} {9}}) -> 2", "(count_leaves {8 {0} {7}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {7 {0}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {2} {0}}) -> 2", "(count_leaves {3 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {5} {2 {9}}}}) -> 2", "(count_leaves {6 {5} {1}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {1 {8} {9}}) -> 2", "(count_leaves {7 {9 {1} {3}} {8 {0} {0}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4 {9 {3 {5}}} {8 {7 {6} {4}}}}) -> 3", "(count_leaves {7 {7}}) -> 1", "(count_leaves {9 {4 {4 {9}} {1 {6} {0}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.81924}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {0 {4 {3} {8 {3} {7}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {8}}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {1} {4}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {0 {1 {3 {7} {7}} {4}} {3}}) -> 4", "(count_leaves {6 {7 {2}} {1 {4}}}) -> 2", "(count_leaves {7 {2} {6}}) -> 2", "(count_leaves {2 {7 {6}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {2 {2}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {5 {5 {6}} {2 {1} {4}}} {8 {8}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {8 {9 {0}} {8 {5} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {6 {9 {0} {3}} {6}} {2 {1 {1} {8}}}}) -> 5", "(count_leaves {3}) -> 1", "(count_leaves {6 {0 {5} {4 {4} {3}}} {5 {2} {2 {4} {9}}}}) -> 6", "(count_leaves {7 {9 {7} {4}} {6}}) -> 3", "(count_leaves {7 {9}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {2 {6 {5} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {7} {4}}}) -> 2", "(count_leaves {8 {9}}) -> 1", "(count_leaves {7 {5 {1} {1}}}) -> 2", "(count_leaves {2 {6 {4}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {4 {1 {9 {9}}}}) -> 1", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.861029}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6 {3 {8} {5 {8} {2}}} {0}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {4 {3}}) -> 1", "(count_leaves {2 {8}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {1 {2}}} {9 {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {2}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {7} {6 {3 {6} {9}} {9 {5}}}}) -> 4", "(count_leaves {6 {2} {2}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {7 {8} {1}}}) -> 2", "(count_leaves {5 {4} {4 {0}}}) -> 2", "(count_leaves {5 {5 {7 {6} {0}} {3}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {3 {7 {1} {6 {5}}} {0}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {3 {4 {6}}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {1 {0 {4} {6}}} {2 {1 {6} {2}}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {2 {0} {0}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1 {5}} {4 {7}}}) -> 2", "(count_leaves {0 {3}}) -> 1", "(count_leaves {9 {3}}) -> 1", "(count_leaves {3 {9}}) -> 1", "(count_leaves {9 {8} {6 {0 {6} {1}} {4 {4} {3}}}}) -> 5", "(count_leaves {7 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {9} {8 {1}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {2 {8}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.818117}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {9 {3 {1} {3}}} {8 {8 {6}}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {7 {3} {9}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {2 {3}}) -> 1", "(count_leaves {6 {9} {1}}) -> 2", "(count_leaves {9 {7}}) -> 1", "(count_leaves {4 {1 {6} {6}} {9}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {1} {5}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {4 {7} {6}}) -> 2", "(count_leaves {1 {5 {5 {4}}}}) -> 1", "(count_leaves {2 {7} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {7} {9}}) -> 2", "(count_leaves {1 {6 {9} {6 {8}}} {4}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {7 {5}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2 {7 {9 {3} {0}} {8 {7} {4}}}}) -> 4", "(count_leaves {9 {0} {1}}) -> 2", "(count_leaves {6 {1}}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {6 {2 {7} {8}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {1 {1 {2 {6}} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.776978}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {9 {9 {2 {4}} {9}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {6} {8 {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {6 {5 {4} {1}} {5 {6} {7}}}) -> 4", "(count_leaves {6 {1} {0 {1 {8} {2}}}}) -> 3", "(count_leaves {3 {5 {3 {4} {7}}} {9 {6 {4} {1}}}}) -> 4", "(count_leaves {1 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {5 {2} {2}} {5 {4} {3}}}) -> 4", "(count_leaves {7 {4 {4}} {9 {9 {3} {4}} {0}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {3 {6} {0}}) -> 2", "(count_leaves {6 {1 {7}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {5 {9 {6 {9}}} {4 {5 {0} {5}}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {2 {4}}) -> 1", "(count_leaves {8 {9} {9}}) -> 2", "(count_leaves {0 {7} {6}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3 {1}}) -> 1", "(count_leaves {7 {4} {4}}) -> 2", "(count_leaves {1 {4}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.781011}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0} {3 {0} {8}}}) -> 3", "(count_leaves {6 {4}}) -> 1", "(count_leaves {6 {4 {4} {6}}}) -> 2", "(count_leaves {0 {9}}) -> 1", "(count_leaves {9 {4 {1} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6} {0}}) -> 2", "(count_leaves {6 {3} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {0 {9 {1} {6}} {9 {2} {2}}}) -> 4", "(count_leaves {4 {6} {4 {9} {9}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {9 {8 {0} {9 {4} {1}}}}) -> 3", "(count_leaves {1 {6 {7}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8} {6 {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {5} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {3} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {8 {9} {8 {4 {0}}}}) -> 2", "(count_leaves {5 {6}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {0} {7}} {7}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4 {4 {4 {8} {3}}}}) -> 2", "(count_leaves {2 {1}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {5} {0}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {8 {5} {0 {8} {0}}} {6}}) -> 4", "(count_leaves {4 {1}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.597355}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {9}}) -> 1", "(count_leaves {6 {1 {9 {6} {9}}} {8 {6 {8}} {8 {9}}}}) -> 4", "(count_leaves {3 {2}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {6 {1} {8}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {4 {0}} {4 {7}}} {3}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {1 {2 {3} {1}}}) -> 2", "(count_leaves {7 {2}}) -> 1", "(count_leaves {2 {7} {1}}) -> 2", "(count_leaves {0 {0 {3 {2} {2}} {1}} {0 {6} {7 {4} {4}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {0 {3} {0 {1}}}) -> 2", "(count_leaves {0 {7 {7} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {6 {0}} {6}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {4 {5} {2 {1 {6}} {2 {9}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {7 {0 {1} {0}} {5 {8} {4}}}}) -> 4", "(count_leaves {5 {3} {7 {7 {5}}}}) -> 2", "(count_leaves {6 {9 {2}}}) -> 1", "(count_leaves {7 {9}}) -> 1", "(count_leaves {7 {2}}) -> 1", "(count_leaves {8 {4 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {4 {4} {3}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {9 {8} {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {1}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6 {3} {7}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.659209}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {3 {0}}}) -> 1", "(count_leaves {0 {7 {9} {9}} {1}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {5 {2} {2 {8 {2} {7}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {0 {9 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {4} {7}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {2 {0} {0 {3} {6}}}) -> 3", "(count_leaves {1 {6 {2 {4} {6}} {1 {2} {6}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {3} {6}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {9 {4}} {0 {5} {9}}}) -> 3", "(count_leaves {8 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {4 {3 {1} {2}} {6 {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {8}}) -> 1", "(count_leaves {6 {2} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {3} {8}}) -> 2", "(count_leaves {5 {2 {2} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {4 {2}} {5 {1} {4}}} {9}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {2 {0} {1}}) -> 2", "(count_leaves {8 {4}}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {6 {6} {8 {6}}}}) -> 2", "(count_leaves {2 {6 {5} {6}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.646863}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {2 {6} {7}}}) -> 2", "(count_leaves {1 {1 {1} {4}} {8 {9} {2}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {0}} {7}}) -> 2", "(count_leaves {9 {5}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {4 {9 {3 {5} {6}}}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {2 {9} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {6 {2} {8}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {9 {4} {9}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {7 {3}}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {3 {8 {8}} {1}}) -> 2", "(count_leaves {8 {5 {3 {1} {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {6 {2}} {0 {0}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {3 {2 {1}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {0}}) -> 1", "(count_leaves {7 {3 {6} {8}} {1}}) -> 3", "(count_leaves {2 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {2 {9} {6}}} {9 {4}}}) -> 3", "(count_leaves {4 {4} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.539467}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {4} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {7 {7}} {3}}) -> 2", "(count_leaves {9 {0} {3 {2}}}) -> 2", "(count_leaves {6 {5 {4} {1}}}) -> 2", "(count_leaves {8 {7 {4 {5} {2}} {9}}}) -> 3", "(count_leaves {2 {0 {5 {6}} {9 {5}}}}) -> 2", "(count_leaves {3 {8 {3 {4} {3}}}}) -> 2", "(count_leaves {7 {7 {6 {9}} {5}}}) -> 2", "(count_leaves {9 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {1}}}) -> 1", "(count_leaves {3 {5 {1 {3}}} {0 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {8}}) -> 1", "(count_leaves {6 {8} {0 {1} {0}}}) -> 3", "(count_leaves {2 {3 {3}}}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {4 {3}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {8} {8}}) -> 2", "(count_leaves {9 {8}}) -> 1", "(count_leaves {3 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6}}) -> 1", "(count_leaves {5 {2 {5}} {0 {3} {4}}}) -> 3", "(count_leaves {4 {5} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {2 {2 {4} {0}} {0}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {3 {4} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {1} {6}}) -> 2", "(count_leaves {2 {1} {0}}) -> 2", "(count_leaves {6 {1}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.627492}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {2} {4}}) -> 2", "(count_leaves {4 {2}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {4 {5}}}) -> 1", "(count_leaves {6 {2} {8 {0}}}) -> 2", "(count_leaves {8 {2}}) -> 1", "(count_leaves {9 {6 {5}} {1 {4}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {5 {3} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {8 {9} {1}} {9 {0} {3}}}) -> 4", "(count_leaves {8 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {6}}) -> 1", "(count_leaves {1 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {6 {4 {6}} {7}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8 {6 {6 {1} {4}} {5}} {3 {3} {2 {5} {3}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {0 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {1 {9} {0}}}) -> 2", "(count_leaves {5 {1 {5} {7 {5} {3}}} {4}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {5 {7} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {8 {1}} {4 {4} {0}}}) -> 3", "(count_leaves {0 {6}}) -> 1", "(count_leaves {1 {4} {1}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {8 {4 {2} {6}} {1}}) -> 3", "(count_leaves {0 {5}}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.60422}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {9 {5} {4}} {2 {7} {1}}}) -> 4", "(count_leaves {1 {7}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2 {5 {1} {7}} {0}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4 {7 {5}} {1 {1} {4}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {8 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {2 {9 {6}} {4 {8}}} {3}}) -> 3", "(count_leaves {1 {7} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {4 {4}}}) -> 1", "(count_leaves {8 {0} {9}}) -> 2", "(count_leaves {6 {5}}) -> 1", "(count_leaves {5 {1} {9}}) -> 2", "(count_leaves {9 {0 {6 {1}} {0 {4}}}}) -> 2", "(count_leaves {5 {2}}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0 {4} {4}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {2 {4} {4 {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {5}} {3 {7}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {7 {7}}}) -> 1", "(count_leaves {0 {4} {6 {6} {8 {5}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {4 {5}} {9}}) -> 2", "(count_leaves {7 {5 {1} {9}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {8 {3 {2 {0}}} {6}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.688443}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4 {3 {3} {0}} {3 {0}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {5}} {2}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {2} {6}}) -> 2", "(count_leaves {7 {4}}) -> 1", "(count_leaves {8 {1} {5}}) -> 2", "(count_leaves {7 {7 {9}} {6 {5}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {4 {1 {3} {2 {4} {5}}}}) -> 3", "(count_leaves {6 {9}}) -> 1", "(count_leaves {7 {6 {8} {8 {0} {9}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0 {3} {0}}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {0 {8} {0 {2}}}}) -> 2", "(count_leaves {3 {9 {0} {4}} {7}}) -> 3", "(count_leaves {2 {8}}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {7 {6 {6 {1} {8}} {6 {9} {6}}} {4 {1 {8} {4}} {1 {7} {4}}}}) -> 8", "(count_leaves {6 {3 {5}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {5 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {1} {8}}) -> 2", "(count_leaves {3 {2}}) -> 1", "(count_leaves {1 {5 {8 {6} {0}}} {8 {2 {8} {5}}}}) -> 4", "(count_leaves {2 {3}}) -> 1", "(count_leaves {5 {7 {0}}}) -> 1", "(count_leaves {5 {7} {2 {4}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {3 {7} {0 {6}}}) -> 2", "(count_leaves {8 {9} {4}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.570291}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3 {9}} {2}}) -> 2", "(count_leaves {9 {1}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {7 {2} {2}} {7 {3} {3}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {5 {2}}) -> 1", "(count_leaves {5 {6} {3}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2 {7} {5}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {1} {7}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {1 {6 {5} {7 {7}}}}) -> 2", "(count_leaves {3 {6}}) -> 1", "(count_leaves {6 {5 {3 {2} {7}}} {6 {9 {1} {2}} {3 {0}}}}) -> 5", "(count_leaves {3 {2} {3}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {8 {2} {2}}) -> 2", "(count_leaves {2 {1}}) -> 1", "(count_leaves {0 {5 {2}} {6}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0 {2 {4 {4}} {5}} {2 {4} {1 {9}}}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {5 {8}}}}) -> 1", "(count_leaves {5 {4}}) -> 1", "(count_leaves {7 {1} {3}}) -> 2", "(count_leaves {7 {5}}) -> 1", "(count_leaves {3 {2 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {7 {8}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.712909}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {2} {1}}) -> 2", "(count_leaves {5 {2 {4}} {0}}) -> 2", "(count_leaves {0 {0 {0 {1}}} {7 {7} {3 {4} {1}}}}) -> 4", "(count_leaves {0 {0}}) -> 1", "(count_leaves {6 {0 {9} {5}}}) -> 2", "(count_leaves {7 {6 {6} {7}}}) -> 2", "(count_leaves {6 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {9} {0}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {7}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {6 {0 {7} {6}} {0}}) -> 3", "(count_leaves {8 {1}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0 {8 {7 {6} {0}}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5 {0 {4}}}) -> 1", "(count_leaves {2 {9 {0} {0}}}) -> 2", "(count_leaves {5 {3}}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {4 {2 {2} {1}} {1 {1}}}) -> 3", "(count_leaves {9 {9}}) -> 1", "(count_leaves {5 {5 {8} {7}} {1 {5} {5}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {1}}) -> 1", "(count_leaves {2 {2} {7}}) -> 2", "(count_leaves {3 {7 {1 {5}}}}) -> 1", "(count_leaves {1 {0} {5 {9} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {0 {8}} {7 {5} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.701768}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {3 {6 {6} {7 {1}}} {4}}) -> 3", "(count_leaves {7 {8 {1}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {2 {1} {8}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {1 {0}}}) -> 1", "(count_leaves {2 {0} {7}}) -> 2", "(count_leaves {1 {4} {8}}) -> 2", "(count_leaves {6 {4 {9} {4}} {1 {4}}}) -> 3", "(count_leaves {4 {5} {3}}) -> 2", "(count_leaves {5 {3 {6}} {8}}) -> 2", "(count_leaves {9 {8} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {5 {1}} {4 {8} {8 {2} {0}}}}) -> 4", "(count_leaves {5 {9 {6 {7} {7}} {1 {7} {5}}}}) -> 4", "(count_leaves {1 {9}}) -> 1", "(count_leaves {9 {3} {6}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {2 {1} {3}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {3 {3}}} {7}}) -> 2", "(count_leaves {6 {3}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0 {5} {6}}) -> 2", "(count_leaves {5 {8 {1}} {3}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {4 {2 {5 {0}} {9}}}) -> 2", "(count_leaves {0 {3 {8 {4} {8}}} {7}}) -> 3", "(count_leaves {8 {9} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {4} {5 {3} {5}}}) -> 3", "(count_leaves {8 {9} {4}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {1 {6}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {6 {0} {5}}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.504949}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3 {0} {5}}) -> 2", "(count_leaves {4 {4}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6 {3} {4 {7}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {5 {1} {0 {4 {0}} {4 {1}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {7}}) -> 1", "(count_leaves {6 {7 {9 {0}}} {9}}) -> 2", "(count_leaves {1 {9}}) -> 1", "(count_leaves {5 {1 {6 {8}} {9 {4} {7}}} {5}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {2 {9} {9}}) -> 2", "(count_leaves {2 {5 {1}} {6 {7} {8}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {0 {4}}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {0 {0} {4}}} {2}}) -> 3", "(count_leaves {8 {7}}) -> 1", "(count_leaves {8 {4} {0}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {5 {7}}}) -> 1", "(count_leaves {7 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4} {3 {1} {7}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3 {2} {1}}) -> 2", "(count_leaves {7 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {4 {6} {3}} {8}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {6 {5 {0}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2 {6}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {8} {9}}) -> 2", "(count_leaves {3 {3 {0 {0}} {0 {1} {1}}} {6 {1 {4} {1}}}}) -> 5"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.70239}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {7 {1} {8}}) -> 2", "(count_leaves {2 {8}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {5 {5} {9}}} {9 {8 {5} {9}}}}) -> 4", "(count_leaves {4 {6}}) -> 1", "(count_leaves {9 {0} {1}}) -> 2", "(count_leaves {3 {2}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {7 {5 {8} {5}} {4}} {3}}) -> 4", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {4 {6} {8}} {0 {1} {3}}}) -> 4", "(count_leaves {7 {3 {1} {7}} {4 {2}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {1 {8 {6}} {5 {1}}}}) -> 2", "(count_leaves {4 {0 {5 {3}}} {4 {7 {7}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {2} {9}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {2 {2}}) -> 1", "(count_leaves {2 {1 {9 {7}} {3 {7}}} {8 {2 {8}}}}) -> 3", "(count_leaves {2 {9 {5}}}) -> 1", "(count_leaves {6 {7} {6 {6} {3}}}) -> 3", "(count_leaves {4 {5} {0}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {1 {2 {2 {1} {3}} {9}} {9 {2} {6}}}) -> 5", "(count_leaves {2 {8 {1 {0} {8}}} {6 {8 {9} {8}} {1 {2}}}}) -> 5", "(count_leaves {5 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.671965}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9 {8}}) -> 1", "(count_leaves {5 {4 {3} {2}} {6 {4} {2}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {3 {1}}) -> 1", "(count_leaves {4 {8} {1 {5}}}) -> 2", "(count_leaves {9 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {0} {8 {7} {4}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {3 {3 {6 {6}}} {3 {1 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {6 {7 {6} {2}} {8 {1}}}) -> 3", "(count_leaves {8 {4}}) -> 1", "(count_leaves {3 {8} {9}}) -> 2", "(count_leaves {5 {6 {1 {0} {3}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {7 {6 {3}} {6 {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {3} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {2} {1}}) -> 2", "(count_leaves {9 {8 {7 {2}} {8}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {1 {0}}) -> 1", "(count_leaves {8 {3 {6}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {1} {8}}) -> 2", "(count_leaves {9 {1} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {7} {9}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {5 {7 {4} {4}}}) -> 2", "(count_leaves {1 {5 {5} {5}}}) -> 2", "(count_leaves {6 {7 {8 {5} {9}}}}) -> 2", "(count_leaves {9 {8 {3 {9}} {2 {0}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.842375}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {1 {8}}) -> 1", "(count_leaves {1 {9 {5}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {3 {1 {3} {8}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {9 {9 {4}}}}) -> 1", "(count_leaves {2 {4 {5 {7} {4}} {0}} {5 {2 {3} {3}} {7 {0}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {0 {6} {1}}) -> 2", "(count_leaves {7 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7 {1 {2} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3 {1 {1 {6} {0}}} {0}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {2}}) -> 1", "(count_leaves {3 {2 {7} {5}}}) -> 2", "(count_leaves {9 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {6}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4 {1 {4}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {5} {2}}}) -> 2", "(count_leaves {4 {8} {8}}) -> 2", "(count_leaves {8 {0 {0}} {1 {4} {6}}}) -> 3", "(count_leaves {2 {9} {2 {8} {0}}}) -> 3", "(count_leaves {0 {2 {0 {6}} {4 {9}}} {1}}) -> 3", "(count_leaves {6 {2} {7}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {5 {0 {7}}}) -> 1", "(count_leaves {4 {8}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {7} {0}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {7 {7 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {7} {6}}) -> 2", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.453279}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {3 {6} {1}}) -> 2", "(count_leaves {0 {4}}) -> 1", "(count_leaves {9 {0}}) -> 1", "(count_leaves {0 {7 {9} {6}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {5 {5 {5}} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {4 {8 {9} {9}} {7 {4} {8}}}) -> 4", "(count_leaves {3 {6 {7 {1} {2}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {8 {8 {3 {3} {0}} {1 {9} {6}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {2 {7} {2 {2 {7} {1}} {3}}}) -> 4", "(count_leaves {3 {7}}) -> 1", "(count_leaves {4 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {7 {3} {8}} {2}}) -> 3", "(count_leaves {1 {8 {4 {3} {8}}}}) -> 2", "(count_leaves {7 {2} {2}}) -> 2", "(count_leaves {2 {5 {9} {2}}}) -> 2", "(count_leaves {0 {4} {1}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0 {0} {9}}) -> 2", "(count_leaves {6 {9} {7}}) -> 2", "(count_leaves {3 {3}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8 {5 {1} {2}}}) -> 2", "(count_leaves {3 {6} {4}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {0 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {6 {3 {0}} {7 {5}}}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.480687}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3 {6}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4 {9} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {8 {2} {2}} {5 {7} {5}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {7}}) -> 1", "(count_leaves {0 {0} {7}}) -> 2", "(count_leaves {4 {4} {9}}) -> 2", "(count_leaves {5 {4} {9}}) -> 2", "(count_leaves {7 {1 {1 {3} {7}}}}) -> 2", "(count_leaves {5 {8} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {7 {9}} {6 {7} {9}}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {1 {6 {3}} {6 {4} {3}}}) -> 3", "(count_leaves {0 {1 {3 {5} {9}}} {7}}) -> 3", "(count_leaves {6 {0}}) -> 1", "(count_leaves {9 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {8 {1} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {9} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {2} {3}}) -> 2", "(count_leaves {8 {0} {1}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {2 {6} {3}}) -> 2", "(count_leaves {0 {9}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.484077}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {8} {1 {0} {0 {1} {1}}}}) -> 4", "(count_leaves {8 {2} {8 {1}}}) -> 2", "(count_leaves {1 {9 {9 {7} {9}} {0 {4} {6}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {2 {5}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {3 {5 {2}} {8}}) -> 2", "(count_leaves {1 {3} {6}}) -> 2", "(count_leaves {8 {9 {4 {1} {2}} {7 {8}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {7 {6} {9 {9}}}) -> 2", "(count_leaves {2 {0 {9}} {0 {4} {5}}}) -> 3", "(count_leaves {1 {6 {6} {7}}}) -> 2", "(count_leaves {3 {7}}) -> 1", "(count_leaves {1 {1}}) -> 1", "(count_leaves {4 {3} {7}}) -> 2", "(count_leaves {5 {9 {6} {1}}}) -> 2", "(count_leaves {0 {6} {7}}) -> 2", "(count_leaves {8 {9} {5}}) -> 2", "(count_leaves {5 {2} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {4 {8} {8}}} {2 {3 {2}}}}) -> 3", "(count_leaves {3 {7} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {7}}) -> 1", "(count_leaves {4 {4 {8}}}) -> 1", "(count_leaves {8 {5 {6} {4}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {9 {1} {3}} {2 {0}}}) -> 3", "(count_leaves {8 {4} {7}}) -> 2", "(count_leaves {9 {7 {2 {8}} {9 {1}}} {9 {0 {6} {8}} {8}}}) -> 5", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {3}}) -> 1", "(count_leaves {5 {2 {7} {8}} {0 {6}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4 {7} {0 {4} {8 {5} {5}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.480952}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {9}}) -> 1", "(count_leaves {4 {9 {8} {3}} {3 {0} {9}}}) -> 4", "(count_leaves {5}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {1 {2 {9 {4} {9}}} {0}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {8 {1}} {5 {3} {9}}}}) -> 3", "(count_leaves {8 {6 {0}} {6 {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {7 {3} {9 {8} {4}}} {8 {6}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {2 {5} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {8}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2 {7} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {9}}) -> 1", "(count_leaves {6 {7} {0}}) -> 2", "(count_leaves {5 {4} {2}}) -> 2", "(count_leaves {4 {8 {5 {8} {0}}} {7 {1 {8} {0}}}}) -> 4", "(count_leaves {3 {0 {6} {8}}}) -> 2", "(count_leaves {2 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {4 {4 {0} {8}} {0}}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {7 {8} {6 {7 {8} {7}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {4 {4}}}}) -> 1", "(count_leaves {4 {7}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.915938}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6} {9}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4}}) -> 1", "(count_leaves {0 {1}}) -> 1", "(count_leaves {4 {1} {0}}) -> 2", "(count_leaves {6 {8 {2} {1}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {6 {1 {9} {4}} {7 {5}}}) -> 3", "(count_leaves {2 {7} {4}}) -> 2", "(count_leaves {6 {1 {6 {5}}}}) -> 1", "(count_leaves {9 {4} {7 {9 {8}}}}) -> 2", "(count_leaves {3 {4 {3 {1}}} {9 {2 {4} {5}} {9}}}) -> 4", "(count_leaves {2 {9 {2}}}) -> 1", "(count_leaves {9 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {0}}) -> 1", "(count_leaves {3 {5} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {5 {8 {9}} {5 {0}}}) -> 2", "(count_leaves {6 {2} {9}}) -> 2", "(count_leaves {1 {4}}) -> 1", "(count_leaves {0 {9 {0} {2}} {7}}) -> 3", "(count_leaves {9 {1} {0}}) -> 2", "(count_leaves {7 {8 {8}} {3}}) -> 2", "(count_leaves {3 {2 {6} {6 {3} {6}}}}) -> 3", "(count_leaves {0 {0}}) -> 1", "(count_leaves {7 {7 {6}}}) -> 1", "(count_leaves {0 {0} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8 {0 {7} {7}} {3 {4} {2 {5}}}}) -> 4", "(count_leaves {2 {8 {0} {6}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {7} {8}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {3} {6}}) -> 2", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.923186}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {2 {8}} {7 {3}}}) -> 2", "(count_leaves {2 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {5 {7} {6 {1}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {1}}) -> 1", "(count_leaves {4 {0 {1 {2}}}}) -> 1", "(count_leaves {3 {4} {8}}) -> 2", "(count_leaves {6 {5 {2} {5}}}) -> 2", "(count_leaves {3 {7} {3 {4} {3}}}) -> 3", "(count_leaves {0 {6 {9 {3} {7}}} {2}}) -> 3", "(count_leaves {4 {4 {9}} {9 {5} {0}}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2 {7}}) -> 1", "(count_leaves {8 {3}}) -> 1", "(count_leaves {7 {0 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {6} {1}}) -> 2", "(count_leaves {7 {5 {8 {4} {1}}} {6 {8} {3 {0}}}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {7} {9}}) -> 2", "(count_leaves {0 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {8} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {5 {4}} {7 {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {4} {3}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {4}}}) -> 1", "(count_leaves {7 {4 {5} {1}} {6}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {0 {1}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {7 {1}}}) -> 1", "(count_leaves {3 {5 {6} {8}} {6 {4}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.545278}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1} {4}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {0 {3 {7} {5}}}) -> 2", "(count_leaves {7 {0} {4 {0} {9}}}) -> 3", "(count_leaves {3 {0 {6}}}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {8 {9 {7 {0}} {1 {1} {3}}} {0}}) -> 4", "(count_leaves {8 {5} {2}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9} {1}}) -> 2", "(count_leaves {5 {5}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {6 {7} {1}}) -> 2", "(count_leaves {8 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {8 {6}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8 {8 {8 {5} {2}} {4 {9}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7 {0} {0}} {5 {2}}}) -> 3", "(count_leaves {3 {8}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {4 {6}} {0 {5}}}) -> 2", "(count_leaves {7 {7} {0}}) -> 2", "(count_leaves {6 {2} {7}}) -> 2", "(count_leaves {3 {0 {0 {3} {3}} {8 {7} {4}}} {7 {6 {1} {5}}}}) -> 6", "(count_leaves {6}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {3 {7} {2}}) -> 2", "(count_leaves {7 {9} {5}}) -> 2", "(count_leaves {6 {5} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {3} {7}}) -> 2", "(count_leaves {3 {5}}) -> 1", "(count_leaves {6}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.598858}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6 {7 {0}} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {7 {6} {1}} {9}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {5 {4}} {8}}) -> 2", "(count_leaves {6 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {8 {8 {5} {0}}} {3}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {6 {9} {4}}) -> 2", "(count_leaves {4 {1} {8}}) -> 2", "(count_leaves {1 {5} {2}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {6 {8 {5} {5}} {0 {2} {6}}}) -> 4", "(count_leaves {6 {5}}) -> 1", "(count_leaves {6 {6 {7} {0}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {0 {2 {4} {5}}}) -> 2", "(count_leaves {2 {4 {8} {2}} {5}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {8} {8}}) -> 2", "(count_leaves {9 {7} {8}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {3} {5 {0} {6}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {7 {6}}) -> 1", "(count_leaves {3 {4}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {7 {4} {4}}) -> 2", "(count_leaves {5 {2 {4} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {8 {0 {1} {2}}} {5}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2 {6}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.841226}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {3}}) -> 1", "(count_leaves {7 {0 {5} {5}} {8 {9}}}) -> 3", "(count_leaves {2 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {0 {4}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {5 {1 {9}} {3 {7} {7}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {7}}) -> 1", "(count_leaves {9 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {7 {6} {3}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {5 {0} {7}} {4 {7}}}) -> 3", "(count_leaves {5 {8 {1}} {4 {9} {3}}}) -> 3", "(count_leaves {3 {6 {3}} {6}}) -> 2", "(count_leaves {3 {6 {2} {8}} {8 {0} {7}}}) -> 4", "(count_leaves {4 {5 {5}}}) -> 1", "(count_leaves {2 {7 {6 {8}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5 {0} {4}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0 {6}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2 {5 {5} {6 {4} {8}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {0}}) -> 1", "(count_leaves {0 {4}}) -> 1", "(count_leaves {2 {0}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {1 {2}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {2}}) -> 1", "(count_leaves {6 {9 {2} {0}} {4 {7}}}) -> 3", "(count_leaves {3 {8 {9 {5} {5}} {2}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.819972}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {6}}) -> 1", "(count_leaves {5 {1} {0 {0}}}) -> 2", "(count_leaves {1 {0} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8 {0 {1 {7} {0}}} {8 {7 {8} {1}} {5 {6}}}}) -> 5", "(count_leaves {5}) -> 1", "(count_leaves {7 {7 {5 {0} {0}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {6 {3 {0 {9}} {1 {5} {5}}} {5 {0 {9} {2}} {1 {1}}}}) -> 6", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {0 {9} {6}}) -> 2", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {5}}) -> 1", "(count_leaves {7 {2 {4} {2}} {1}}) -> 3", "(count_leaves {8 {5 {6} {8}}}) -> 2", "(count_leaves {9 {5 {8} {2 {5}}}}) -> 2", "(count_leaves {4 {8 {3 {5} {4}} {2}}}) -> 3", "(count_leaves {7 {5 {1} {6 {5}}}}) -> 2", "(count_leaves {3 {9} {5 {1} {4}}}) -> 3", "(count_leaves {9 {2 {8}} {6 {9} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {8 {6}} {6 {2 {2} {1}} {8 {8}}}}) -> 4", "(count_leaves {2}) -> 1", "(count_leaves {8 {3 {1} {3}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {2} {7}}) -> 2", "(count_leaves {0 {2 {5 {9}} {8 {4} {4}}} {0 {9}}}) -> 4", "(count_leaves {7 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {9 {3} {0 {3 {5} {8}}}}) -> 3", "(count_leaves {4}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {1} {1}} {6 {7} {1}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {0 {7} {1}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.869038}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {5 {4}} {5 {0}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {7}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3} {5}}) -> 2", "(count_leaves {1 {2} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {1 {1} {2}} {1 {2}}}}) -> 3", "(count_leaves {7 {6}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {3} {4}}) -> 2", "(count_leaves {7 {6}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {4 {6 {4}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {5 {7}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {2 {2}} {0}}) -> 2", "(count_leaves {9 {1 {4 {3}}}}) -> 1", "(count_leaves {6 {6} {7}}) -> 2", "(count_leaves {2 {5}}) -> 1", "(count_leaves {7 {2}}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {1 {5} {5}}) -> 2", "(count_leaves {0 {7} {8}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {9 {5} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {2} {7}}) -> 2", "(count_leaves {7 {5} {2 {2}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {5 {0 {2 {2}}} {5 {1 {5}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.828013}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7 {3} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {0 {6 {1}} {5 {7} {5}}}}) -> 3", "(count_leaves {2 {9}}) -> 1", "(count_leaves {1 {3 {4 {3}}} {3 {2 {4}} {4 {7}}}}) -> 3", "(count_leaves {6}) -> 1", "(count_leaves {2 {7} {3 {8} {6 {7} {0}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {2 {5} {1 {4}}} {0 {5 {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {5 {0} {0 {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {1 {9 {8} {4}}} {8}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {3 {7}}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {0}}) -> 1", "(count_leaves {6 {3 {0}}}) -> 1", "(count_leaves {5 {8 {3} {2 {1} {2}}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5 {4}}) -> 1", "(count_leaves {3 {6} {4 {4}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {7 {2}}) -> 1", "(count_leaves {3 {8 {0 {2}}}}) -> 1", "(count_leaves {5 {5} {3}}) -> 2", "(count_leaves {2 {6}}) -> 1", "(count_leaves {6 {6 {5 {9} {2}}} {7}}) -> 3", "(count_leaves {7 {8 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {4} {0}}) -> 2", "(count_leaves {3 {2}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {3 {9}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.86942}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {8 {3 {0}} {5}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {1 {7} {0}}) -> 2", "(count_leaves {9 {3 {5} {4}} {2 {8}}}) -> 3", "(count_leaves {8 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {4 {8 {5} {9}}} {0 {9 {7}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {3 {8 {9}}}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {0 {5 {8} {8}} {3 {9} {6}}}) -> 4", "(count_leaves {1 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {5 {0} {2}} {9 {7}}}) -> 3", "(count_leaves {3 {6 {3} {3}}}) -> 2", "(count_leaves {7 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {6 {9 {1 {4}}}}) -> 1", "(count_leaves {5 {4 {9 {3} {9}} {1}} {3 {9 {3} {9}}}}) -> 5", "(count_leaves {6 {7 {3}}}) -> 1", "(count_leaves {0 {4 {7 {5}}}}) -> 1", "(count_leaves {8 {6 {1 {6} {2}} {2 {4}}} {2 {4}}}) -> 4", "(count_leaves {0 {7} {0}}) -> 2", "(count_leaves {1 {1} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {3 {8} {8}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {0 {6 {9 {3}}}}) -> 1", "(count_leaves {7 {7} {4}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {9 {5} {9}} {5 {6}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {2} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {0 {3} {9}}) -> 2", "(count_leaves {6 {4 {9} {1 {3} {0}}} {2 {8} {3 {2} {9}}}}) -> 6", "(count_leaves {0 {7 {6}}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.817158}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {2 {4}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {4} {8 {1}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {1 {5}}) -> 1", "(count_leaves {5 {9}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {6 {0} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {3} {3}} {3}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {9} {3}}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {6 {8 {8} {3}}}) -> 2", "(count_leaves {2 {2 {2} {3}}}) -> 2", "(count_leaves {4 {6 {2}}}) -> 1", "(count_leaves {8 {7 {3}} {0 {0}}}) -> 2", "(count_leaves {5 {4 {8} {6}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3 {0 {7}}}) -> 1", "(count_leaves {7 {9} {8}}) -> 2", "(count_leaves {0 {2 {1}}}) -> 1", "(count_leaves {3 {1 {0}} {2}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {2}}) -> 1", "(count_leaves {4 {1}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {7 {4 {7 {4} {1}}} {3 {7 {7}}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {7 {3 {4} {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {5}}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {5} {5 {5} {5}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {6 {6}}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {8} {5}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {2 {6} {5}}) -> 2", "(count_leaves {0 {4 {7 {8} {3}} {1 {9} {8}}}}) -> 4", "(count_leaves {4 {6 {9}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.870029}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {2 {7 {0}} {3 {5}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {7} {3}}) -> 2", "(count_leaves {7 {7} {1 {0 {9} {9}}}}) -> 3", "(count_leaves {1}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {6}} {4 {2}}}) -> 2", "(count_leaves {2 {2 {6}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {1 {3 {3} {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {8} {7}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {4 {3}} {6}}) -> 2", "(count_leaves {0 {8 {8 {0} {0}} {2 {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4 {7 {1} {3}} {9}}) -> 3", "(count_leaves {1 {6 {6} {3}} {9 {6} {3}}}) -> 4", "(count_leaves {4 {9}}) -> 1", "(count_leaves {6 {8 {5}} {4}}) -> 2", "(count_leaves {9 {1}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0 {6 {2}} {8 {1 {7} {1}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4 {3} {8 {1} {6}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {3 {1}} {7 {8}}}) -> 2", "(count_leaves {6 {8} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {7 {0}} {7 {8} {8}}}) -> 3", "(count_leaves {9 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5}}) -> 1", "(count_leaves {1 {0 {4}} {3 {1}}}) -> 2", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.640881}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {0}}) -> 1", "(count_leaves {4 {8} {7}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {4 {2 {7} {7}} {1 {1}}} {0}}) -> 4", "(count_leaves {4 {7} {3}}) -> 2", "(count_leaves {9 {7 {0} {8}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {0 {2} {3}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {9 {1 {9} {4}} {0 {1}}} {3}}) -> 4", "(count_leaves {0 {8} {7}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {5 {2}} {5 {9 {0}} {4}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {8 {2} {1}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {9} {5}}) -> 2", "(count_leaves {4 {1} {6}}) -> 2", "(count_leaves {8 {9 {8 {2}} {3}} {5}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {9}}) -> 1", "(count_leaves {8 {0} {5 {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {1} {1}}) -> 2", "(count_leaves {0 {6}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {2 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {8}}) -> 1", "(count_leaves {1 {6} {8 {7} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {7}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {3 {4 {6} {3 {5}}}}) -> 2", "(count_leaves {7 {5 {1}}}) -> 1", "(count_leaves {8 {2} {3 {7}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.486043}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1 {9} {1 {9} {9}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {8 {4 {9}} {0}}) -> 2", "(count_leaves {6 {7}}) -> 1", "(count_leaves {5 {2} {7}}) -> 2", "(count_leaves {2 {8 {3}} {2 {1} {1}}}) -> 3", "(count_leaves {4 {1 {4 {8} {4}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {7} {7}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {8 {2}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {7 {4}} {9 {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {9 {6}}) -> 1", "(count_leaves {6 {0} {9}}) -> 2", "(count_leaves {9 {4 {5}} {1 {0} {1}}}) -> 3", "(count_leaves {0 {5}}) -> 1", "(count_leaves {4 {6 {6}}}) -> 1", "(count_leaves {4 {1 {3 {9}} {8 {3} {3}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {2 {9}} {7}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {0 {6} {3}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {5 {2} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9 {8} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {0 {6}}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.594442}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {7}}) -> 1", "(count_leaves {7 {9} {0 {6 {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {1 {0}}) -> 1", "(count_leaves {1 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {4}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {2 {7 {5 {1} {1}} {1 {4} {3}}} {5 {6 {8}}}}) -> 5", "(count_leaves {9}) -> 1", "(count_leaves {6 {0}}) -> 1", "(count_leaves {2 {3 {7}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7 {9 {3}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {9 {4} {1}} {7 {3 {1} {2}}}}) -> 4", "(count_leaves {3 {6 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {9} {0}} {6 {3}}}) -> 3", "(count_leaves {8 {6 {9}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {0 {8}}) -> 1", "(count_leaves {4 {9}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {2}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7 {0 {2 {2}} {1 {3} {7}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {4 {2 {5 {2}}}}) -> 1", "(count_leaves {6 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.571993}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {8}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {8} {4}}}) -> 2", "(count_leaves {4 {1}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {6 {4 {6 {3}} {7 {5} {2}}}}) -> 3", "(count_leaves {9 {1}}) -> 1", "(count_leaves {2 {1 {2 {0} {2}}} {9 {3} {5 {3}}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {9 {9} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {3 {9 {9}}}}) -> 1", "(count_leaves {6 {6} {7 {5} {3}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {7}}) -> 1", "(count_leaves {1 {5} {5 {8} {5}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {1}}}) -> 1", "(count_leaves {4 {6} {0}}) -> 2", "(count_leaves {6 {2}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {5 {2}}) -> 1", "(count_leaves {2 {6}}) -> 1", "(count_leaves {6 {1 {5} {7}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {5 {1}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {3 {5} {7}} {4}}) -> 3", "(count_leaves {5 {1 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {3 {3} {7}}}) -> 2", "(count_leaves {9 {7}}) -> 1", "(count_leaves {3 {7}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.606888}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {8}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {6 {7}}) -> 1", "(count_leaves {9 {1 {7} {7}}}) -> 2", "(count_leaves {4 {1 {7 {5} {4}} {7 {7} {1}}}}) -> 4", "(count_leaves {8 {8 {1 {1} {5}} {6 {2}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {5 {7} {9 {0 {4}} {3}}}) -> 3", "(count_leaves {4 {2 {9}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {6}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7 {0} {6}}) -> 2", "(count_leaves {8 {4} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {6}}}) -> 1", "(count_leaves {1 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {5 {5} {6}} {4 {8 {5} {2}} {4 {8} {5}}}}) -> 6", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {6 {4}}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {6 {0} {0}}) -> 2", "(count_leaves {6 {5} {6}}) -> 2", "(count_leaves {8 {5}}) -> 1", "(count_leaves {9 {4}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0 {5 {1} {9}}}) -> 2", "(count_leaves {3 {9 {3 {5} {9}} {4}} {2}}) -> 4", "(count_leaves {4 {0}}) -> 1", "(count_leaves {9 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {9} {9}}) -> 2", "(count_leaves {4 {2 {2 {0}}} {3}}) -> 2", "(count_leaves {7 {2 {2 {5}}} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {6}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.673042}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {3 {0} {8}} {4 {1}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {1 {6 {3}} {6 {0}}}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {3 {6 {7} {5}} {0 {5} {3}}} {4 {9 {3}} {7 {2}}}}) -> 6", "(count_leaves {5 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {9 {3}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {3 {8} {3}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {4 {1 {7 {1}} {3 {4}}} {8 {2 {5} {4}} {3}}}) -> 5", "(count_leaves {2 {4 {7 {0} {3}} {8 {2}}} {8 {5}}}) -> 4", "(count_leaves {9}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {8 {6 {6}} {6}}) -> 2", "(count_leaves {7 {3 {1 {5}} {3}} {5 {1}}}) -> 3", "(count_leaves {6 {1}}) -> 1", "(count_leaves {6 {4} {4}}) -> 2", "(count_leaves {6 {2} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {6} {5}}) -> 2", "(count_leaves {8 {6}}) -> 1", "(count_leaves {0 {3} {4}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {7 {8} {5 {9}}}) -> 2", "(count_leaves {9 {5}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {1} {5 {2} {7}}}) -> 3", "(count_leaves {8 {6} {4 {4} {3}}}) -> 3", "(count_leaves {9}) -> 1", "(count_leaves {9 {4}}) -> 1", "(count_leaves {7 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.711278}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8 {7 {9} {7}} {1 {2 {6} {4}} {2}}}) -> 5", "(count_leaves {9}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {0 {6} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {9}}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {0 {9} {6}}) -> 2", "(count_leaves {5 {9 {3} {3}}}) -> 2", "(count_leaves {4 {0 {2} {2}} {4 {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {2 {2 {0}} {8 {8} {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {2}}) -> 1", "(count_leaves {0 {0}}) -> 1", "(count_leaves {0 {3 {1 {5} {7}} {5 {1} {5}}} {7 {8 {0}} {9}}}) -> 6", "(count_leaves {3 {4} {6}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {7 {5}} {0 {0}}}) -> 2", "(count_leaves {2 {4 {0 {0}} {1}} {6 {3}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {0} {1}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {9} {7}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {3 {7}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {9} {8 {1}}}) -> 2", "(count_leaves {4 {5} {3}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.458596}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {7 {0} {4 {9}}} {5 {5 {7}} {8}}}) -> 4", "(count_leaves {5 {2 {3 {4}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {7} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {3}}) -> 1", "(count_leaves {1 {9 {1}} {7 {7 {9} {5}} {7 {7} {3}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {7}}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {6 {3}}) -> 1", "(count_leaves {5 {2} {2 {7}}}) -> 2", "(count_leaves {8 {1 {0}}}) -> 1", "(count_leaves {0 {4 {7 {9}} {3 {2} {0}}} {0 {8 {7}} {2 {9}}}}) -> 5", "(count_leaves {0 {0}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7 {8} {9}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3 {3 {9 {6}} {8}}}) -> 2", "(count_leaves {1 {1} {9 {7} {6}}}) -> 3", "(count_leaves {1 {2 {8} {4}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {1}}) -> 1", "(count_leaves {0 {0} {8}}) -> 2", "(count_leaves {3 {4 {5}}}) -> 1", "(count_leaves {7 {0 {6} {6}}}) -> 2", "(count_leaves {6 {3}}) -> 1", "(count_leaves {3 {3 {2 {2}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {9 {3}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.49069}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {3 {5} {8}}}) -> 2", "(count_leaves {3 {1} {4}}) -> 2", "(count_leaves {8 {7 {6 {0} {6}} {9}} {6 {1 {3} {4}}}}) -> 5", "(count_leaves {6 {4 {4}}}) -> 1", "(count_leaves {8 {3}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {3 {9} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3 {5 {5} {5}} {5 {9} {6}}}) -> 4", "(count_leaves {6 {2}}) -> 1", "(count_leaves {2 {8} {4}}) -> 2", "(count_leaves {6 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {6 {0} {8}}) -> 2", "(count_leaves {6 {7} {8 {4 {5} {2}}}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0 {8}} {1 {2} {9}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4 {3 {9} {8}} {8 {3} {4}}}) -> 4", "(count_leaves {1}) -> 1", "(count_leaves {3 {9}}) -> 1", "(count_leaves {4 {2 {5} {7}} {3 {4} {4}}}) -> 4", "(count_leaves {8 {0}}) -> 1", "(count_leaves {1 {5 {1}} {8}}) -> 2", "(count_leaves {6 {4 {5}} {2 {1}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {7 {2} {1}}) -> 2", "(count_leaves {1}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.716024}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {1 {3 {6}}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {0} {2}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {9 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {2 {5 {7} {9}} {2 {9} {6}}}) -> 4", "(count_leaves {2 {9}}) -> 1", "(count_leaves {5 {6} {1}}) -> 2", "(count_leaves {7 {6}}) -> 1", "(count_leaves {3 {1 {0 {2} {2}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {3 {7 {0} {7}} {4 {7} {8}}}) -> 4", "(count_leaves {5 {5 {0}}}) -> 1", "(count_leaves {0 {0 {0}} {5 {1 {4} {5}}}}) -> 3", "(count_leaves {0 {4} {5}}) -> 2", "(count_leaves {3 {4} {7 {6} {8}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {4 {7 {6} {4}} {1 {6}}} {0 {9 {8}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {4 {9}}) -> 1", "(count_leaves {8 {9}}) -> 1", "(count_leaves {4 {4 {1} {6}} {3 {0}}}) -> 3", "(count_leaves {9 {8 {3}} {6}}) -> 2", "(count_leaves {0 {8} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {7 {8 {0 {6} {2}}} {0 {5 {7} {6}} {6 {2} {9}}}}) -> 6", "(count_leaves {9 {7 {9 {1} {4}}} {4 {0} {3 {9} {8}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {3 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {9} {0}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {7 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8}}) -> 1", "(count_leaves {6 {3 {1 {9} {9}}}}) -> 2", "(count_leaves {9 {0 {4} {7}} {1 {9}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.507789}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {0 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {1} {8}}) -> 2", "(count_leaves {8 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {2}}) -> 1", "(count_leaves {4 {8}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {0 {7} {1}}) -> 2", "(count_leaves {2 {7} {8}}) -> 2", "(count_leaves {5 {3} {6}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {3 {8} {8}} {7 {7 {2}} {3 {7}}}}) -> 4", "(count_leaves {7 {5 {6}}}) -> 1", "(count_leaves {2 {2 {7 {5} {9}} {1}} {8 {1} {6 {5}}}}) -> 5", "(count_leaves {7 {3 {4}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {1 {1} {0 {5 {1}} {0}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1 {6 {0 {0}} {3}} {7 {9} {3 {2} {1}}}}) -> 5", "(count_leaves {6 {6}}) -> 1", "(count_leaves {0 {4} {9}}) -> 2", "(count_leaves {6 {5}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {1}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {2 {4 {5} {6}} {3 {7} {8}}}) -> 4", "(count_leaves {3}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {7 {4 {4}}}) -> 1", "(count_leaves {9 {0 {4}}}) -> 1", "(count_leaves {6 {9} {3}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {0} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.728213}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9 {3} {8 {3} {6}}}) -> 3", "(count_leaves {7 {6 {0} {8}}}) -> 2", "(count_leaves {8 {3} {6}}) -> 2", "(count_leaves {4 {5} {8}}) -> 2", "(count_leaves {0 {2} {5}}) -> 2", "(count_leaves {6 {2 {8 {9} {3}} {3}} {3 {4} {7}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {1 {0 {9}} {3 {6 {4}} {8 {4}}}}) -> 3", "(count_leaves {1 {5 {6}} {3 {4} {2}}}) -> 3", "(count_leaves {5 {2} {5}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {8 {5} {0}}) -> 2", "(count_leaves {0 {7} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {1 {1} {9 {4}}}) -> 2", "(count_leaves {7}) -> 1", "(count_leaves {9 {2}}) -> 1", "(count_leaves {5 {5} {4 {3}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {9} {0 {8 {4} {0}}}}) -> 3", "(count_leaves {8 {1 {5}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8} {5 {1}}}) -> 2", "(count_leaves {1 {3}}) -> 1", "(count_leaves {7 {0} {5 {9} {2}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {4 {2} {2}}}) -> 2", "(count_leaves {4 {9 {4 {6} {2}} {3 {2} {2}}} {8}}) -> 5", "(count_leaves {5 {7 {2} {8}}}) -> 2", "(count_leaves {9 {5 {7} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {3 {2}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {0 {2}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.506302}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {9 {4} {5 {8}}}) -> 2", "(count_leaves {2 {6 {4 {4} {2}}} {0 {6 {9}} {3 {0}}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {0 {1}}}) -> 1", "(count_leaves {1 {9 {2}}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3 {7}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {9 {5 {7 {6} {3}}}}) -> 2", "(count_leaves {5 {0}}) -> 1", "(count_leaves {2 {0 {7} {7}}}) -> 2", "(count_leaves {0 {2} {6 {5}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {9 {8} {1 {2} {0 {5}}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {0 {4 {5 {3}}} {8 {8 {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {6 {7} {6 {3 {9} {9}} {9 {4} {2}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {3 {5}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {8}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {7 {4 {8}} {8}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {2 {0 {1}} {7 {5}}}}) -> 2", "(count_leaves {8 {7 {0}}}) -> 1", "(count_leaves {4 {2 {4} {8 {0}}}}) -> 2"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.472111}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {6 {4 {7} {9}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {8 {8 {3}}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6 {9 {6 {9}} {7}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {4 {9 {9 {0} {6}} {6}} {6 {0 {0} {7}}}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {1}}) -> 1", "(count_leaves {5 {6}}) -> 1", "(count_leaves {9 {3 {1}}}) -> 1", "(count_leaves {2 {5 {6} {8}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {2 {3 {9}}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {8 {7 {5}}}) -> 1", "(count_leaves {9 {8 {9} {8}} {5 {6} {6}}}) -> 4", "(count_leaves {}) -> 0", "(count_leaves {0 {6 {7} {9 {6} {7}}} {1}}) -> 4", "(count_leaves {0}) -> 1", "(count_leaves {2 {5}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {8 {2} {3 {0}}} {2}}) -> 3", "(count_leaves {5}) -> 1", "(count_leaves {4 {4}}) -> 1", "(count_leaves {1 {5 {3 {8} {1}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {0 {0}}) -> 1", "(count_leaves {8 {7} {9 {4 {8} {4}} {2}}}) -> 4", "(count_leaves {2 {2} {7}}) -> 2", "(count_leaves {4 {2}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {6}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {6}}) -> 1", "(count_leaves {5}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.399356}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {9 {8 {5}} {5}}) -> 2", "(count_leaves {3 {6} {2}}) -> 2", "(count_leaves {2 {9} {2}}) -> 2", "(count_leaves {6 {3} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {2 {4}}) -> 1", "(count_leaves {6 {3 {6 {2} {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {5 {2}}) -> 1", "(count_leaves {1 {9 {8} {0}}}) -> 2", "(count_leaves {0 {8 {3} {7}} {1}}) -> 3", "(count_leaves {6 {4 {7 {7} {8}}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {7} {9 {9}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {7 {4 {7 {6}}} {3 {2 {3} {9}}}}) -> 3", "(count_leaves {8 {1}}) -> 1", "(count_leaves {2 {3} {9}}) -> 2", "(count_leaves {7 {4}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5 {9}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {8 {0} {0 {5} {4}}}) -> 3", "(count_leaves {4 {6} {6 {3} {3}}}) -> 3", "(count_leaves {8 {8 {7 {4} {0}} {8}}}) -> 3", "(count_leaves {2 {5 {8 {4}} {1 {6} {0}}}}) -> 3", "(count_leaves {2 {0} {8 {3}}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {2 {3 {6} {6}} {4 {9} {4}}}) -> 4", "(count_leaves {4 {6 {3 {0} {0}}}}) -> 2", "(count_leaves {3 {1} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {7 {1} {4}} {6 {0}}}) -> 3", "(count_leaves {6 {8} {5}}) -> 2", "(count_leaves {8 {2 {6}}}) -> 1", "(count_leaves {0}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.676734}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {5} {7}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {0}} {5}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {3 {7 {0 {0}} {1 {0}}} {1 {9 {0} {7}} {5}}}) -> 5", "(count_leaves {3 {7}}) -> 1", "(count_leaves {9 {5 {9} {6}} {0 {4}}}) -> 3", "(count_leaves {1 {5} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {4} {9}}) -> 2", "(count_leaves {9 {3} {1}}) -> 2", "(count_leaves {1 {3 {4} {3 {0}}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {0 {6 {8 {7}} {5 {6}}} {8 {4 {0} {4}} {2 {0}}}}) -> 5", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {6 {8 {4 {0}} {1}} {5}}) -> 3", "(count_leaves {2}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {5 {9 {9 {0}} {2}} {8 {1 {0} {1}} {4 {6} {9}}}}) -> 6", "(count_leaves {6 {2} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {2 {0} {4}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {3 {0} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {4 {0 {1} {6}}}) -> 2", "(count_leaves {5 {1 {8}} {2 {5}}}) -> 2", "(count_leaves {5}) -> 1", "(count_leaves {6 {4} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {3 {6}}) -> 1", "(count_leaves {7 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.639558}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {9 {7}}) -> 1", "(count_leaves {6 {4}}) -> 1", "(count_leaves {5 {7} {9}}) -> 2", "(count_leaves {2 {7 {0} {6 {2} {2}}} {8 {8}}}) -> 4", "(count_leaves {5 {4}}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {3 {2 {1} {1}}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {1} {9 {7 {3}} {9 {7}}}}) -> 3", "(count_leaves {5 {5}}) -> 1", "(count_leaves {0 {9 {9} {8}} {9 {8 {1}}}}) -> 3", "(count_leaves {2 {7} {9 {6}}}) -> 2", "(count_leaves {2 {7} {4 {7 {9} {1}}}}) -> 3", "(count_leaves {2 {3} {2}}) -> 2", "(count_leaves {0 {7 {9 {1}} {1 {1}}} {2}}) -> 3", "(count_leaves {3 {4 {8 {4}}} {8}}) -> 2", "(count_leaves {4 {4 {5} {7}}}) -> 2", "(count_leaves {6 {8}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {4} {4 {4} {0 {5} {3}}}}) -> 4", "(count_leaves {3 {1} {4 {0}}}) -> 2", "(count_leaves {8 {7 {0} {6}} {9}}) -> 3", "(count_leaves {5 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {7 {3} {1 {2}}}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {0 {7} {5}}) -> 2", "(count_leaves {9 {9 {7} {2}}}) -> 2", "(count_leaves {5 {3 {2 {5} {5}} {4}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9 {8}}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.510446}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {5 {2 {0 {8} {2}} {3 {1} {3}}} {5 {4}}}) -> 5", "(count_leaves {6 {1 {3} {2 {4} {9}}} {2 {5} {1 {7} {4}}}}) -> 6", "(count_leaves {7 {9 {7 {8}}}}) -> 1", "(count_leaves {6 {6} {8}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3}) -> 1", "(count_leaves {5 {5} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {8 {1} {0}} {7 {7}}}) -> 3", "(count_leaves {9 {0} {0}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {8 {6 {6}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {9 {0 {0}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {5 {3} {7}} {3 {7} {0}}}) -> 4", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {4 {4}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {0 {4 {9}}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {9 {1}}) -> 1", "(count_leaves {0 {1 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5 {7}} {8 {1}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {5}}) -> 1", "(count_leaves {4 {2} {3}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {1 {4 {3}} {1 {0}}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {4 {6 {7} {4}} {3 {8} {2}}}) -> 4", "(count_leaves {5 {4}}) -> 1", "(count_leaves {5 {7}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {5 {2 {3 {0}}} {7 {2} {8}}}) -> 3", "(count_leaves {8}) -> 1", "(count_leaves {9 {3}}) -> 1", "(count_leaves {}) -> 0"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.366706}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {3 {6} {9}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {7 {0 {2} {6}}}) -> 2", "(count_leaves {1 {9} {2}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {7} {5}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {5 {8} {4 {6 {6} {0}}}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {1 {9 {0}}}) -> 1", "(count_leaves {4 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {2}) -> 1", "(count_leaves {0 {9} {6}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {8 {1} {9 {5 {7} {3}} {8 {5} {4}}}}) -> 5", "(count_leaves {1}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {4 {2 {9} {4 {8}}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {4 {0 {2} {1}}}) -> 2", "(count_leaves {4 {6}}) -> 1", "(count_leaves {0 {9} {7}}) -> 2", "(count_leaves {5 {6} {6 {8}}}) -> 2", "(count_leaves {1 {4} {4}}) -> 2", "(count_leaves {6}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {2 {4}}) -> 1", "(count_leaves {9 {5} {0}}) -> 2", "(count_leaves {1}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {5} {7}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {3 {7} {9}}) -> 2", "(count_leaves {8}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.537738}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {0 {0}}) -> 1", "(count_leaves {6 {8 {9 {6} {9}}} {1 {6}}}) -> 3", "(count_leaves {7}) -> 1", "(count_leaves {2 {1 {7 {5}} {6 {6}}} {2 {7 {9}} {4 {6}}}}) -> 4", "(count_leaves {3 {1 {1}} {6}}) -> 2", "(count_leaves {0}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {6}) -> 1", "(count_leaves {6 {9}}) -> 1", "(count_leaves {9 {0} {7}}) -> 2", "(count_leaves {8}) -> 1", "(count_leaves {4 {4 {8}}}) -> 1", "(count_leaves {0}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7 {5 {9} {5}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {5 {0}}) -> 1", "(count_leaves {1}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {0 {0} {3 {4}}}) -> 2", "(count_leaves {8 {7 {0} {0}} {8 {4}}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {8 {3 {0}}}) -> 1", "(count_leaves {4 {3}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {7}) -> 1", "(count_leaves {1 {4} {3}}) -> 2", "(count_leaves {5 {8 {3} {9}}}) -> 2", "(count_leaves {4}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {7 {3 {9}}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {7 {8 {7 {4}} {4 {6} {8}}}}) -> 3", "(count_leaves {8 {1} {2}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {8 {5 {7}}}) -> 1", "(count_leaves {5 {9 {5 {3}}} {1}}) -> 2", "(count_leaves {7 {4 {3} {7}}}) -> 2", "(count_leaves {0 {1} {2}}) -> 2", "(count_leaves {2}) -> 1", "(count_leaves {5 {6 {4}}}) -> 1", "(count_leaves {3 {5 {9 {0} {1}} {3}}}) -> 3", "(count_leaves {2 {8 {6} {0}} {8 {0 {3} {8}}}}) -> 4", "(count_leaves {6 {6 {1 {6} {8}}} {8 {7}}}) -> 3"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.516271}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2 {2 {2} {8}}}) -> 2", "(count_leaves {9}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {8 {1} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0}) -> 1", "(count_leaves {1 {9 {3}}}) -> 1", "(count_leaves {0 {3}}) -> 1", "(count_leaves {7 {2}}) -> 1", "(count_leaves {1 {5 {1}} {7 {2 {8}}}}) -> 2", "(count_leaves {4 {9 {0 {3}} {4}} {5 {6}}}) -> 3", "(count_leaves {1 {9} {9}}) -> 2", "(count_leaves {0 {7 {1} {3}}}) -> 2", "(count_leaves {9 {7 {1}}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {4 {6 {0} {9}} {0}}) -> 3", "(count_leaves {3}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {3 {1} {5}}) -> 2", "(count_leaves {3}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {9 {9}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {1 {9}}) -> 1", "(count_leaves {8 {1}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {3 {0} {1}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {5 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1}) -> 1", "(count_leaves {2 {0} {1 {1 {5}} {0 {2}}}}) -> 3", "(count_leaves {4 {6} {4 {3}}}) -> 2", "(count_leaves {9 {0 {2 {8} {1}} {2 {1}}}}) -> 3", "(count_leaves {0}) -> 1", "(count_leaves {9 {8 {1 {4} {3}} {6 {5} {7}}} {8}}) -> 5", "(count_leaves {}) -> 0", "(count_leaves {7 {0}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {1 {8 {4}} {5}}) -> 2", "(count_leaves {9}) -> 1"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.452092}
{"name": "count_leaves", "examples": ["(count_leaves {}) -> 0", "(count_leaves {2}) -> 1", "(count_leaves {2 {3 {6}} {0 {3 {4} {3}}}}) -> 3", "(count_leaves {0 {6}}) -> 1", "(count_leaves {6 {1}}) -> 1", "(count_leaves {5}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {8 {7}}) -> 1", "(count_leaves {3 {8 {1} {2}}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {6 {5} {4 {7 {7}} {6}}}) -> 3", "(count_leaves {1 {4 {6}} {4 {0}}}) -> 2", "(count_leaves {1 {7}}) -> 1", "(count_leaves {2 {9}}) -> 1", "(count_leaves {9}) -> 1", "(count_leaves {6}) -> 1", "(count_leaves {0 {7} {6}}) -> 2", "(count_leaves {4 {1 {7}}}) -> 1", "(count_leaves {8}) -> 1", "(count_leaves {2 {7 {9}}}) -> 1", "(count_leaves {2 {8}}) -> 1", "(count_leaves {3}) -> 1", "(count_leaves {7 {8} {0}}) -> 2", "(count_leaves {}) -> 0", "(count_leaves {}) -> 0", "(count_leaves {0 {5}}) -> 1", "(count_leaves {5 {1 {9} {9}} {1 {4}}}) -> 3", "(count_leaves {7 {0}}) -> 1", "(count_leaves {9 {3}}) -> 1", "(count_leaves {4}) -> 1", "(count_leaves {4 {4 {4 {2} {9}} {0 {1} {1}}} {9 {0 {5} {9}}}}) -> 6", "(count_leaves {1 {6}}) -> 1", "(count_leaves {0 {8} {4 {3}}}) -> 2", "(count_leaves {2 {6 {2} {7}} {1 {7} {8}}}) -> 4", "(count_leaves {4 {9}}) -> 1", "(count_leaves {7}) -> 1", "(count_leaves {6 {1 {0} {9}}}) -> 2", "(count_leaves {8 {1 {9 {9}} {5 {6} {5}}} {0}}) -> 4", "(count_leaves {4}) -> 1", "(count_leaves {3 {3}}) -> 1", "(count_leaves {}) -> 0", "(count_leaves {5}) -> 1", "(count_leaves {3 {2} {7}}) -> 2", "(count_leaves {3 {8 {5} {3}} {6}}) -> 3", "(count_leaves {}) -> 0", "(count_leaves {9}) -> 1", "(count_leaves {3 {5 {7}}}) -> 1", "(count_leaves {8 {9} {7 {4 {6} {4}} {0}}}) -> 4"], "solution": "(let count_leaves (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (sum d)) 1)) 0)) _) _)", "time": 0.427923}
