{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "name": "sumtrees", "time": 0.042885, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {} {}]) -> [0 0 0 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (+ 1 (+ 1 1))) 0)))) _) _)", "name": "sumtrees", "time": 6.172153, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {2} {1}} {} {}]) -> [3 0 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 32.775091, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{4 {5}} {} {0 {9 {9 {5}}}} {} {1}]) -> [9 0 23 0 1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (value c)))) _) _)", "name": "sumtrees", "time": 0.020411, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{3}]) -> [3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 43.7524, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {5} {2}}]) -> [14]", "(sumtrees [{8 {5}} {6 {1 {1}} {1 {6}}}]) -> [13 15]"]}
{"solution": "(let sumtrees (let a (lambda (b) (foldl b (lambda (d c) (foldl d (lambda (f e) d) [22])) [])) _) _)", "name": "sumtrees", "time": 0.255206, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {8 {2} {3}}}]) -> [22]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.810386, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {7} {2}} {7 {9} {4}} {2}]) -> [16 20 2]", "(sumtrees [{} {3 {9} {2}} {5 {9} {6}} {2 {5}}]) -> [0 14 20 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.43856, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {} {7}]) -> [4 0 7]", "(sumtrees [{6 {3 {8}}} {2} {5 {8 {7 {4} {5}} {7}}} {9} {}]) -> [17 2 36 9 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.063695, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{3} {4} {6 {0 {5 {5}}}} {}]) -> [3 4 16 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 50.961505, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {8 {6}} {8 {6}}} {5 {0} {8}} {6 {7} {1}}]) -> [37 13 14]", "(sumtrees [{} {3 {7}} {}]) -> [0 10 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.49094, "examples": ["(sumtrees []) -> []", "(sumtrees [{2 {4} {5}}]) -> [11]", "(sumtrees [{2 {6} {0}}]) -> [8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 55.867389, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {1 {2}} {5 {5} {6}}} {5} {6 {5}} {}]) -> [20 5 11 0]", "(sumtrees [{6} {9 {7} {3}} {}]) -> [6 19 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.657704, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {5 {7} {5}} {7 {6}}} {6} {4 {8}} {3 {3}}]) -> [30 6 12 6]", "(sumtrees [{} {9 {1} {9}}]) -> [0 19]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 57.352033, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {0 {0 {9}} {2}} {9}]) -> [0 11 9]", "(sumtrees [{0 {1 {0}}} {} {4 {1}} {0 {9} {4 {8 {4}}}}]) -> [1 0 5 25]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) d) 0)))) _) _)", "name": "sumtrees", "time": 0.314188, "examples": ["(sumtrees []) -> []", "(sumtrees [{9} {4} {}]) -> [9 4 0]", "(sumtrees [{5} {}]) -> [5 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 63.051027, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {3}} {7 {9} {2}} {3 {2}} {3 {8 {2 {8} {1}} {8 {3}}} {4 {8} {8 {2} {1}}}}]) -> [7 18 5 56]", "(sumtrees [{5 {9}}]) -> [14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 63.989932, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {9 {9}} {6 {5 {3} {6}} {1}}]) -> [0 0 18 21]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 64.780868, "examples": ["(sumtrees []) -> []", "(sumtrees [{5 {6 {5 {3} {7}}} {0 {1 {9} {7}}}} {} {0} {1 {8} {4 {5 {2}}}}]) -> [43 0 0 20]", "(sumtrees [{5} {9 {4}} {2} {4 {7 {7} {4 {2}}}} {1 {5} {8 {8 {7}}}}]) -> [5 13 2 24 29]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 66.194438, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9} {1} {7 {9 {0 {5} {9}}}} {}]) -> [0 9 1 30 0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) d) 0)))) _) _)", "name": "sumtrees", "time": 0.292524, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {4}]) -> [0 4]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.078833, "examples": ["(sumtrees []) -> []", "(sumtrees [{5 {1 {8}} {4 {5 {7} {4}}}} {4 {0 {4}} {2 {5 {4} {2}}}}]) -> [34 21]", "(sumtrees [{4 {8 {2 {7}}}} {6 {5 {8} {2}}}]) -> [21 21]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 64.198727, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {3}} {9 {4}} {0} {3}]) -> [12 13 0 3]", "(sumtrees [{4 {3}} {}]) -> [7 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 33.882486, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{5} {9 {4}} {}]) -> [5 13 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.301494, "examples": ["(sumtrees []) -> []", "(sumtrees [{1} {} {5 {3} {3}} {6 {9} {2}} {3 {8}}]) -> [1 0 11 17 11]", "(sumtrees [{1}]) -> [1]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 36.82651, "examples": ["(sumtrees []) -> []", "(sumtrees [{5}]) -> [5]", "(sumtrees [{} {2 {6 {0 {4}}}} {1} {4 {1 {9} {7 {3}}} {2 {0 {1}}}} {4 {0 {1 {3} {1}} {7}}}]) -> [0 12 1 27 16]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (+ d (/ 1 d))) 0)))) _) _)", "name": "sumtrees", "time": 3.925211, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {1 {1}}]) -> [0 2]", "(sumtrees [{4}]) -> [4]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.146795, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {1} {2}}]) -> [6]", "(sumtrees [{3 {1 {5}} {7 {2}}} {2 {5 {3 {8} {2}} {0 {7}}}} {3 {3 {4} {4}}} {} {}]) -> [18 27 14 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 44.73527, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {7}]) -> [0 7]", "(sumtrees [{6 {4}} {5 {9} {7}} {} {8}]) -> [10 21 0 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 52.60865, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {}]) -> [0 0]", "(sumtrees [{6 {3 {2} {0 {7}}}} {} {2} {5 {4 {3 {7} {6}} {3 {3}}}} {0}]) -> [18 0 2 31 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (foldl b (lambda (d c) (foldl d (lambda (f e) d) [13])) [])) _) _)", "name": "sumtrees", "time": 0.19187, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {1 {9}}}]) -> [13]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.563747, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{9 {9}} {7 {1}} {5} {6 {5 {7}}} {4}]) -> [18 8 5 18 4]"]}
{"solution": "(let sumtrees (let a (lambda (b) []) _) _)", "name": "sumtrees", "time": 0.000609, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 42.687918, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {9} {5 {3 {7 {7} {5}} {4 {7} {2}}}} {4 {5 {2} {8 {9}}} {4 {2 {6}} {8 {8}}}} {7 {6}}]) -> [0 9 40 56 13]", "(sumtrees [{0 {8 {0 {8} {3}} {4}}}]) -> [23]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.312388, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {7 {7 {7 {1} {2}} {4 {3}}}} {}]) -> [0 31 0]", "(sumtrees [{} {9 {5 {9}} {6}} {5 {7}} {9 {7}}]) -> [0 29 12 16]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 46.921825, "examples": ["(sumtrees []) -> []", "(sumtrees [{0 {0}}]) -> [0]", "(sumtrees [{0 {4 {3} {9}}} {1 {7} {4}} {} {0 {8} {4}}]) -> [16 12 0 12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (foldl b (lambda (d c) (foldl d (lambda (f e) d) [9])) [])) _) _)", "name": "sumtrees", "time": 0.288791, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{0 {2} {7}}]) -> [9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.299969, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{4} {4} {0 {0 {4 {9} {2}} {4 {3}}} {9 {7 {1}} {0 {1}}}}]) -> [4 4 40]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.553855, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {1 {9 {8}} {0 {1} {8}}} {7}]) -> [0 27 7]", "(sumtrees [{9 {1 {0}} {3}} {1} {2} {6 {9} {7 {3} {3}}} {0 {7 {1} {3}}}]) -> [13 1 2 28 11]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 61.135716, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {7}} {6 {9} {4}} {7}]) -> [8 19 7]", "(sumtrees [{} {7}]) -> [0 7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 63.266036, "examples": ["(sumtrees []) -> []", "(sumtrees [{3} {4 {0 {8}}} {1} {} {8 {3} {9}}]) -> [3 12 1 0 20]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 71.618654, "examples": ["(sumtrees []) -> []", "(sumtrees [{6 {3 {0 {3}}} {6}} {1 {6}} {1} {6 {6} {8 {2}}}]) -> [18 7 1 22]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 42.555521, "examples": ["(sumtrees []) -> []", "(sumtrees [{9} {8}]) -> [9 8]", "(sumtrees [{} {7 {3}} {4} {5 {3 {9}} {5}} {}]) -> [0 10 4 22 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.110697, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {} {1} {1 {8}}]) -> [0 0 1 9]", "(sumtrees [{7 {6} {1}} {2 {7}} {} {}]) -> [14 9 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) d) 0)))) _) _)", "name": "sumtrees", "time": 0.297574, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {7} {}]) -> [0 7 0]", "(sumtrees [{}]) -> [0]"]}
{"solution": "(let sumtrees (let a (lambda (b) []) _) _)", "name": "sumtrees", "time": 0.00068, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 48.754241, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {6 {6} {7 {2} {0}}} {1 {9}}} {} {5} {1}]) -> [35 0 5 1]", "(sumtrees [{7}]) -> [7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.578055, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {2 {5 {5}} {5}}} {3 {3}}]) -> [18 6]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 66.120212, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {9} {3 {3}}} {3 {5} {7}} {8 {1}} {6 {8}} {4}]) -> [24 15 9 14 4]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "name": "sumtrees", "time": 0.031518, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 47.5911, "examples": ["(sumtrees []) -> []", "(sumtrees [{3} {} {7 {1}} {8 {8} {4 {9 {2} {1}}}}]) -> [3 0 8 32]", "(sumtrees [{} {2 {1 {5} {9}} {6}} {}]) -> [0 23 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 59.575263, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{8 {1} {6 {6} {6}}} {7 {2 {5} {9}} {7}}]) -> [27 30]"]}
{"solution": "(let sumtrees (let a (lambda (b) []) _) _)", "name": "sumtrees", "time": 0.000574, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 46.73529, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {4} {6}} {7 {6}} {1 {0} {6 {5}}}]) -> [13 13 12]", "(sumtrees [{4} {} {3}]) -> [4 0 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.062535, "examples": ["(sumtrees []) -> []", "(sumtrees [{8}]) -> [8]", "(sumtrees [{4} {0} {4 {9 {5} {7}} {5}}]) -> [4 0 30]"]}
{"solution": "(let sumtrees (let a (lambda (b) (foldl b (lambda (d c) (foldl d (lambda (f e) d) [19])) [])) _) _)", "name": "sumtrees", "time": 0.278572, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{1 {9 {2} {7}}}]) -> [19]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 45.650835, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{7 {2 {4} {2 {5}}} {9 {5 {1} {6}} {4}}} {2 {1 {3 {0} {5}} {4}} {2 {4}}} {8} {5} {7 {0} {1 {1}}}]) -> [45 21 8 5 9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.84747, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {4 {1} {8}} {8 {8} {7}}} {4 {3 {6 {0} {1}} {8 {6}}} {3 {0 {4} {5}}}} {} {1}]) -> [44 40 0 1]", "(sumtrees [{} {6 {1}} {8}]) -> [0 7 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 69.552862, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {8 {1 {4} {2}} {7 {4} {0}}}} {8} {5 {2} {2}} {4 {2}}]) -> [33 8 9 6]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 67.760146, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {6 {0} {7 {3} {7}}} {} {7 {0}} {0 {5}}]) -> [0 23 0 7 5]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 56.203778, "examples": ["(sumtrees []) -> []", "(sumtrees [{0} {7} {3} {3}]) -> [0 7 3 3]", "(sumtrees [{} {7} {1} {6 {2}}]) -> [0 7 1 8]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.598731, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {6 {9}} {2 {3} {6}}} {} {}]) -> [35 0 0]", "(sumtrees [{0 {1}} {} {9 {7 {5}}}]) -> [1 0 21]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.520635, "examples": ["(sumtrees []) -> []", "(sumtrees [{4} {} {1} {5} {5 {9 {7 {8}}} {8 {8 {5}} {8 {0}}}}]) -> [4 0 1 5 58]", "(sumtrees [{3 {5}} {2 {3} {1}}]) -> [8 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 73.796003, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{0 {5}} {8} {2 {0}} {8 {0 {3 {2} {6}}} {6}}]) -> [5 8 2 25]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (+ d (- d 1))) 0)))) _) _)", "name": "sumtrees", "time": 4.863605, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {6 {5}}]) -> [0 11]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 63.859216, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {0 {0 {8} {9}}} {3 {3 {2}}}} {} {1 {5}} {9 {8}} {2}]) -> [34 0 6 17 2]", "(sumtrees [{0} {4 {3 {3 {1}} {6 {6}}} {4 {0 {3}}}} {2} {9 {9} {2}}]) -> [0 30 2 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.131273, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {6}]) -> [0 6]", "(sumtrees [{3 {8 {6}}} {} {0 {3 {5} {5 {7} {7}}}}]) -> [17 0 27]"]}
{"solution": "(let sumtrees (let a (lambda (b) []) _) _)", "name": "sumtrees", "time": 0.000893, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 70.822225, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {0 {9 {4} {0}} {8}} {9}} {} {0 {5 {4}} {9 {2} {9}}} {3 {8}} {}]) -> [33 0 29 11 0]", "(sumtrees [{} {3} {4 {6} {2}} {9 {7 {3}}}]) -> [0 3 12 19]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 31.116232, "examples": ["(sumtrees []) -> []", "(sumtrees [{} {8 {8 {2} {4}}}]) -> [0 22]", "(sumtrees [{7 {7}}]) -> [14]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (value c)))) _) _)", "name": "sumtrees", "time": 0.025471, "examples": ["(sumtrees []) -> []", "(sumtrees [{5} {9 {0}}]) -> [5 9]", "(sumtrees [{7} {9} {7} {0}]) -> [7 9 7 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (foldl b (lambda (d c) (foldl d (lambda (f e) d) [27])) [])) _) _)", "name": "sumtrees", "time": 0.191424, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {8 {2 {2} {2}} {5}}}]) -> [27]", "(sumtrees []) -> []"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 39.585027, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{5 {6}} {2 {3 {2 {1} {6}} {9 {8} {5}}} {9 {2 {0}}}} {6 {2 {8 {0} {7}}}} {3 {6}} {0 {6 {6}}}]) -> [11 47 23 9 12]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 37.984418, "examples": ["(sumtrees []) -> []", "(sumtrees [{9}]) -> [9]", "(sumtrees [{1 {5 {7}}} {1 {5} {9}} {0}]) -> [13 15 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 38.975053, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {2} {0}}]) -> [5]", "(sumtrees [{4 {3 {8 {4}}}} {} {} {2 {2 {8 {3} {2}} {3}}}]) -> [19 0 0 20]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (value c)))) _) _)", "name": "sumtrees", "time": 0.030988, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{7}]) -> [7]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 75.454585, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{4} {9} {2 {3 {5 {8} {0}} {8}}} {4 {5 {6}} {3 {8 {5} {2}}}}]) -> [4 9 26 33]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 34.762321, "examples": ["(sumtrees []) -> []", "(sumtrees [{7 {4}}]) -> [11]", "(sumtrees [{1 {7 {3 {9} {0}}} {7 {0}}} {1} {} {9 {3 {1} {0}} {8}}]) -> [27 1 0 21]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 66.602364, "examples": ["(sumtrees []) -> []", "(sumtrees [{9 {3} {4}} {7 {9}} {9 {5 {4} {0}}} {9 {0 {4} {5}} {6 {5} {9}}} {}]) -> [16 16 18 38 0]", "(sumtrees [{6} {4 {9 {4 {8} {4}}} {0 {2 {9} {2}} {8}}} {8 {2}}]) -> [6 50 10]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 62.662847, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {6}} {} {0 {1}} {0 {3}} {7}]) -> [10 0 1 3 7]", "(sumtrees [{7} {0 {8 {5 {5}}} {0}} {6} {3 {1}} {}]) -> [7 18 6 4 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 55.907822, "examples": ["(sumtrees []) -> []", "(sumtrees [{1} {4} {1 {3} {3}}]) -> [1 4 7]", "(sumtrees [{4 {2 {0} {0}}} {} {5}]) -> [6 0 5]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) d) 0)))) _) _)", "name": "sumtrees", "time": 0.266726, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{9}]) -> [9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 60.065263, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{5 {1} {5 {5} {1}}} {9} {2 {1}} {} {9}]) -> [17 9 3 0 9]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 49.430897, "examples": ["(sumtrees []) -> []", "(sumtrees [{4 {1} {6}} {9}]) -> [11 9]", "(sumtrees [{} {4} {}]) -> [0 4 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 58.587986, "examples": ["(sumtrees []) -> []", "(sumtrees []) -> []", "(sumtrees [{} {3 {2 {7}}} {6 {0 {4 {4}} {1 {8} {5}}} {5 {4 {4} {9}} {2}}}]) -> [0 12 52]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 31.604029, "examples": ["(sumtrees []) -> []", "(sumtrees [{}]) -> [0]", "(sumtrees [{7 {6 {2}} {8 {2} {5}}} {3 {7} {1}} {} {3 {2}}]) -> [30 11 0 5]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 55.912712, "examples": ["(sumtrees []) -> []", "(sumtrees [{3} {0 {9} {9}} {} {2}]) -> [3 18 0 2]", "(sumtrees [{1} {6 {7 {7 {5} {3}} {0}}} {8 {0 {5}} {3 {1 {9} {3}}}} {3}]) -> [1 28 29 3]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.980145, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {7} {4}} {3 {6 {3 {1}}}} {8} {8 {1 {1} {2}} {6 {3} {5}}}]) -> [14 13 8 26]", "(sumtrees [{7 {2 {8} {5}}} {3} {9 {7}} {}]) -> [22 3 16 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.218664, "examples": ["(sumtrees []) -> []", "(sumtrees [{1 {9} {5}} {3} {1 {6}}]) -> [15 3 7]", "(sumtrees [{7 {2 {8 {5} {3}}} {6 {6 {0}} {4 {4} {3}}}} {7} {4 {8 {3} {6}} {7 {1} {7}}} {4 {2}}]) -> [48 7 36 6]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ d f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 54.679167, "examples": ["(sumtrees []) -> []", "(sumtrees [{3 {2}} {8} {}]) -> [5 8 0]", "(sumtrees [{} {9 {7}} {} {0}]) -> [0 16 0 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 53.387377, "examples": ["(sumtrees []) -> []", "(sumtrees [{8 {6 {6} {0 {5}}} {6 {2 {4} {8}}}} {7 {4} {4 {7 {6}} {6 {0}}}} {1 {4} {4}}]) -> [45 34 9]", "(sumtrees [{9} {0} {4 {1 {4 {5}}}} {}]) -> [9 0 14 0]"]}
{"solution": "(let sumtrees (let a (lambda (b) (map b (lambda (c) (foldt c (lambda (e d) (foldl e (lambda (g f) (+ g f)) d)) 0)))) _) _)", "name": "sumtrees", "time": 65.216441, "examples": ["(sumtrees []) -> []", "(sumtrees [{5 {4 {1}}} {8 {0 {8}} {8}} {6} {9 {6}}]) -> [10 24 6 15]", "(sumtrees [{2 {8}} {6 {0 {3 {8} {1}}} {9 {4} {1}}}]) -> [10 32]"]}
