{"name": "last", "solution": "(let last (let a (lambda (b) (car (cdr b))) _) _)", "examples": ["(last [9 5]) -> 5", "(last [6 3]) -> 3", "(last [5 9]) -> 9"], "time": 0.005597}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 6 3 9]) -> 9", "(last [7 5 6 1 5]) -> 5", "(last [5 3 4 0]) -> 0"], "time": 0.025822}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 2 8]) -> 8", "(last [2 7]) -> 7", "(last [8 4 3 4]) -> 4"], "time": 0.025814}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7]) -> 7", "(last [6 8 8]) -> 8", "(last [5 9 1 7]) -> 7"], "time": 0.025874}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 1 6 4 8]) -> 8", "(last [8 7 5]) -> 5", "(last [8 2 4 0]) -> 0"], "time": 0.026587}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 3 9]) -> 9", "(last [6 9]) -> 9", "(last [9 7 1 6 6]) -> 6"], "time": 0.03596}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 6 5]) -> 5", "(last [6 1]) -> 1", "(last [2 2]) -> 2"], "time": 0.039973}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4]) -> 4", "(last [6 4]) -> 4", "(last [6 3]) -> 3"], "time": 0.048593}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 7]) -> 7", "(last [9 0 3 6 9]) -> 9", "(last [8 2 0]) -> 0"], "time": 0.048239}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 1 6]) -> 6", "(last [2 6 6]) -> 6", "(last [7 0]) -> 0"], "time": 0.048998}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3 1]) -> 1", "(last [6 4]) -> 4", "(last [1 0 4 9]) -> 9"], "time": 0.046414}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 4]) -> 4", "(last [3]) -> 3", "(last [3]) -> 3"], "time": 0.048626}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 2 6 7 7]) -> 7", "(last [5 8 4 4 9]) -> 9", "(last [5 5 1]) -> 1"], "time": 0.048924}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6]) -> 6", "(last [9 6]) -> 6", "(last [2 9 7]) -> 7"], "time": 0.044003}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 6 2 0 8]) -> 8", "(last [6]) -> 6", "(last [4 3 3 4 6]) -> 6"], "time": 0.0348}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 1]) -> 1", "(last [4 4 8 8]) -> 8", "(last [4 5]) -> 5"], "time": 0.031833}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0 9 3 6]) -> 6", "(last [9 1 7 1]) -> 1", "(last [8 7]) -> 7"], "time": 0.025258}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3]) -> 3", "(last [7 4]) -> 4", "(last [5 1 4 3 5]) -> 5"], "time": 0.030574}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0]) -> 0", "(last [7 8 0]) -> 0", "(last [5]) -> 5"], "time": 0.025774}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 4 6 6]) -> 6", "(last [0 7]) -> 7", "(last [0 7 2 6 5]) -> 5"], "time": 0.024181}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 4 0 3]) -> 3", "(last [1 7 8 6 3]) -> 3", "(last [4]) -> 4"], "time": 0.037988}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 7 5 8 7]) -> 7", "(last [4 8]) -> 8", "(last [3 2 1 8]) -> 8"], "time": 0.041095}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 1 5 2 1]) -> 1", "(last [8 9 4 8 3]) -> 3", "(last [9 6 9 4 8]) -> 8"], "time": 0.027446}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 7]) -> 7", "(last [3 0 5]) -> 5", "(last [2 5 4]) -> 4"], "time": 0.038515}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 5 3]) -> 3", "(last [9 8 0]) -> 0", "(last [5 1 2 2 8]) -> 8"], "time": 0.025721}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5]) -> 5", "(last [3 0]) -> 0", "(last [6 8 9 8]) -> 8"], "time": 0.024577}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 3 4 9]) -> 9", "(last [7 8]) -> 8", "(last [0]) -> 0"], "time": 0.032135}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 5 7 0]) -> 0", "(last [2 4 6]) -> 6", "(last [2 7 2 7 2]) -> 2"], "time": 0.036847}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 1 3 9]) -> 9", "(last [5 6]) -> 6", "(last [9 2 3]) -> 3"], "time": 0.037899}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5 4 2 2 3]) -> 3", "(last [7 5 9 3]) -> 3", "(last [9]) -> 9"], "time": 0.028326}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5 5]) -> 5", "(last [9]) -> 9", "(last [3 6 9 4 7]) -> 7"], "time": 0.042249}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0 5 6]) -> 6", "(last [9 7 6 4]) -> 4", "(last [7]) -> 7"], "time": 0.041107}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 1 8 2 6]) -> 6", "(last [3]) -> 3", "(last [3]) -> 3"], "time": 0.039524}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0 1 5]) -> 5", "(last [6 7 5 2 3]) -> 3", "(last [6 8 1 0]) -> 0"], "time": 0.025282}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 6]) -> 6", "(last [1 6 6 7 8]) -> 8", "(last [8]) -> 8"], "time": 0.024812}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1]) -> 1", "(last [8 8]) -> 8", "(last [5 6 2 1 8]) -> 8"], "time": 0.025681}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 6 7 6 7]) -> 7", "(last [0 4 2]) -> 2", "(last [5]) -> 5"], "time": 0.035732}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3 7]) -> 7", "(last [1 9 8 6]) -> 6", "(last [1 7 5]) -> 5"], "time": 0.04105}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3]) -> 3", "(last [0]) -> 0", "(last [3 0 8]) -> 8"], "time": 0.032731}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 1 7]) -> 7", "(last [4]) -> 4", "(last [9 8 5 5]) -> 5"], "time": 0.025857}
{"name": "last", "solution": "(let last (let a (lambda (b) (car (cdr (cdr b)))) _) _)", "examples": ["(last [9 8 1]) -> 1", "(last [1 8 1]) -> 1", "(last [7 0 3]) -> 3"], "time": 0.013435}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 0 9 4 2]) -> 2", "(last [1 1 4]) -> 4", "(last [8 4 6 8]) -> 8"], "time": 0.030863}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 6]) -> 6", "(last [8 6 0 7]) -> 7", "(last [7]) -> 7"], "time": 0.032418}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 4 8]) -> 8", "(last [0 7 2 5]) -> 5", "(last [9 9 7 9]) -> 9"], "time": 0.027869}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5 0 8 6 1]) -> 1", "(last [5]) -> 5", "(last [3 3 1 7 0]) -> 0"], "time": 0.039115}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 8 7 3 4]) -> 4", "(last [5 8 3]) -> 3", "(last [9 0 6 0]) -> 0"], "time": 0.026312}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 0 7]) -> 7", "(last [3 7]) -> 7", "(last [1 1 0]) -> 0"], "time": 0.032478}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 2 7 3 0]) -> 0", "(last [4 6 6 4]) -> 4", "(last [2 5 6 8]) -> 8"], "time": 0.02618}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0 7 0 9 5]) -> 5", "(last [9 2 0 3]) -> 3", "(last [6 5]) -> 5"], "time": 0.024269}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 1 9 6 5]) -> 5", "(last [0 2 5]) -> 5", "(last [0 4 6 7]) -> 7"], "time": 0.024426}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 2 9 8 9]) -> 9", "(last [9 7 4]) -> 4", "(last [4 6 6 5 5]) -> 5"], "time": 0.038217}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3 3]) -> 3", "(last [6 2 7]) -> 7", "(last [2 1 6 8 6]) -> 6"], "time": 0.04325}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 6 0]) -> 0", "(last [4 5 2 2]) -> 2", "(last [7]) -> 7"], "time": 0.03857}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6]) -> 6", "(last [7 8 5 0 6]) -> 6", "(last [0 0 1]) -> 1"], "time": 0.034958}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 5]) -> 5", "(last [3 9]) -> 9", "(last [7 5 8 6]) -> 6"], "time": 0.029955}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 6]) -> 6", "(last [7 4]) -> 4", "(last [9]) -> 9"], "time": 0.030576}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 9 7 1 0]) -> 0", "(last [1]) -> 1", "(last [7 0 5 7 3]) -> 3"], "time": 0.027625}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 0 7 0]) -> 0", "(last [4 4 1 0 1]) -> 1", "(last [4 2 5 6]) -> 6"], "time": 0.026003}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2]) -> 2", "(last [2 7 2]) -> 2", "(last [8 7 8 1 4]) -> 4"], "time": 0.039842}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9 7 9 6 0]) -> 0", "(last [8 8 6 1]) -> 1", "(last [3 9 8 9 1]) -> 1"], "time": 0.042857}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 7 1 7]) -> 7", "(last [2 1 8 2]) -> 2", "(last [5 3]) -> 3"], "time": 0.036247}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5]) -> 5", "(last [4 8 6 3]) -> 3", "(last [6 9 2 3 6]) -> 6"], "time": 0.035024}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6]) -> 6", "(last [2 6]) -> 6", "(last [0]) -> 0"], "time": 0.032006}
{"name": "last", "solution": "(let last (let a (lambda (b) (car b)) _) _)", "examples": ["(last [0]) -> 0", "(last [9]) -> 9", "(last [6]) -> 6"], "time": 0.000627}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7]) -> 7", "(last [5 6]) -> 6", "(last [0 3 9 3 4]) -> 4"], "time": 0.042127}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 9 0]) -> 0", "(last [4 9]) -> 9", "(last [0 4 7 4]) -> 4"], "time": 0.035095}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 2]) -> 2", "(last [2 5 9 4]) -> 4", "(last [0 9]) -> 9"], "time": 0.028519}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5 2 4]) -> 4", "(last [0 0 8 3]) -> 3", "(last [2 4 1]) -> 1"], "time": 0.028628}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 4]) -> 4", "(last [9 2 3]) -> 3", "(last [3 2 5 4 1]) -> 1"], "time": 0.032185}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 7 4 4 3]) -> 3", "(last [0 2 7 7 7]) -> 7", "(last [5 8 0 3]) -> 3"], "time": 0.033681}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8]) -> 8", "(last [2 8 1 8 2]) -> 2", "(last [3 6]) -> 6"], "time": 0.039461}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 1 4 7 3]) -> 3", "(last [5 7 2 3 3]) -> 3", "(last [0 7 3 4 7]) -> 7"], "time": 0.025282}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0 4]) -> 4", "(last [8 8 2]) -> 2", "(last [4 7]) -> 7"], "time": 0.028744}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 1]) -> 1", "(last [8 7 7 5 8]) -> 8", "(last [1]) -> 1"], "time": 0.026309}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [5 0 4]) -> 4", "(last [7 4 4 8]) -> 8", "(last [8 7 0 4]) -> 4"], "time": 0.025956}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 0 7 1]) -> 1", "(last [7 1]) -> 1", "(last [3 7 6 7 3]) -> 3"], "time": 0.03605}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 7]) -> 7", "(last [4]) -> 4", "(last [0 0 3 3 1]) -> 1"], "time": 0.025024}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 1 6]) -> 6", "(last [8 0]) -> 0", "(last [1 7 1 9]) -> 9"], "time": 0.025874}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 4]) -> 4", "(last [7]) -> 7", "(last [0 7 4]) -> 4"], "time": 0.044249}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1]) -> 1", "(last [1 7 5 9]) -> 9", "(last [8 1 4 2]) -> 2"], "time": 0.027592}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3]) -> 3", "(last [7 6 6 4]) -> 4", "(last [0]) -> 0"], "time": 0.027162}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1 2 2 2]) -> 2", "(last [6 9 4 9 0]) -> 0", "(last [3 4 7 4 5]) -> 5"], "time": 0.02471}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [2 1 2]) -> 2", "(last [5 2]) -> 2", "(last [3 2 8]) -> 8"], "time": 0.039372}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1 9 5 4 8]) -> 8", "(last [5]) -> 5", "(last [2 3]) -> 3"], "time": 0.038478}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [9]) -> 9", "(last [9 0 3 3 6]) -> 6", "(last [8 0 9 8]) -> 8"], "time": 0.04097}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 5]) -> 5", "(last [4 9 9]) -> 9", "(last [7 0 6 7]) -> 7"], "time": 0.025214}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8]) -> 8", "(last [2 7]) -> 7", "(last [2 1 7 2]) -> 2"], "time": 0.024726}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 8 1 9 3]) -> 3", "(last [1 8 2]) -> 2", "(last [8 4 0 5 6]) -> 6"], "time": 0.042435}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1 8]) -> 8", "(last [7 7 0]) -> 0", "(last [1 1 4 9]) -> 9"], "time": 0.031448}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1 3 9 7 0]) -> 0", "(last [4 2 0 6 7]) -> 7", "(last [3 4 4 4]) -> 4"], "time": 0.025652}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 3 6 2 0]) -> 0", "(last [8 9 2 4 3]) -> 3", "(last [9 4]) -> 4"], "time": 0.025555}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [7 8 3]) -> 3", "(last [2 0]) -> 0", "(last [4 9 5]) -> 5"], "time": 0.043106}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0]) -> 0", "(last [6]) -> 6", "(last [3 2]) -> 2"], "time": 0.025186}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [8 6 7 0 5]) -> 5", "(last [8]) -> 8", "(last [6]) -> 6"], "time": 0.0256}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1 7 0 4 0]) -> 0", "(last [1]) -> 1", "(last [4 8]) -> 8"], "time": 0.02486}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [6 2 7 9 8]) -> 8", "(last [9 3]) -> 3", "(last [6]) -> 6"], "time": 0.026118}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [4 8 7 2]) -> 2", "(last [6 4 5]) -> 5", "(last [4 6]) -> 6"], "time": 0.031816}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [3 7 8]) -> 8", "(last [2 4 8 5 2]) -> 2", "(last [9]) -> 9"], "time": 0.024137}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [1]) -> 1", "(last [1 9]) -> 9", "(last [6 0 9 9 3]) -> 3"], "time": 0.024175}
{"name": "last", "solution": "(let last (let a (lambda (b) (foldl b (lambda (d c) c) 0)) _) _)", "examples": ["(last [0 6]) -> 6", "(last [3]) -> 3", "(last [1 7]) -> 7"], "time": 0.024027}
