{"time": 0.025825, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {2}) -> {3}", "(incrt {3}) -> {4}", "(incrt {}) -> {}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028313, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {3 {5 {8} {6}}}) -> {4 {6 {9} {7}}}", "(incrt {6 {9}}) -> {7 {10}}", "(incrt {4 {4 {7} {1}} {7 {1} {5}}}) -> {5 {5 {8} {2}} {8 {2} {6}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033962, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {0 {8}}) -> {1 {9}}", "(incrt {2 {7}}) -> {3 {8}}", "(incrt {2 {6}}) -> {3 {7}}", "(incrt {2 {3} {1 {8}}}) -> {3 {4} {2 {9}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040042, "examples": ["(incrt {}) -> {}", "(incrt {0 {3 {9 {8} {3}} {5 {0} {2}}} {4 {4} {7 {3}}}}) -> {1 {4 {10 {9} {4}} {6 {1} {3}}} {5 {5} {8 {4}}}}", "(incrt {8 {2}}) -> {9 {3}}", "(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026774, "examples": ["(incrt {}) -> {}", "(incrt {0 {6 {0 {4} {3}} {9}} {4 {0 {8} {3}}}}) -> {1 {7 {1 {5} {4}} {10}} {5 {1 {9} {4}}}}", "(incrt {7 {7 {8}} {6 {5} {4}}}) -> {8 {8 {9}} {7 {6} {5}}}", "(incrt {6 {2} {3}}) -> {7 {3} {4}}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.044624, "examples": ["(incrt {}) -> {}", "(incrt {9 {6} {0 {9 {8}}}}) -> {10 {7} {1 {10 {9}}}}", "(incrt {0 {5 {3 {1}} {2 {8}}} {1 {0} {8}}}) -> {1 {6 {4 {2}} {3 {9}}} {2 {1} {9}}}", "(incrt {7 {2}}) -> {8 {3}}", "(incrt {8}) -> {9}", "(incrt {5 {3} {3 {9}}}) -> {6 {4} {4 {10}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.046241, "examples": ["(incrt {}) -> {}", "(incrt {0 {0}}) -> {1 {1}}", "(incrt {6 {3} {3}}) -> {7 {4} {4}}", "(incrt {0 {8}}) -> {1 {9}}", "(incrt {6 {3}}) -> {7 {4}}", "(incrt {4}) -> {5}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037014, "examples": ["(incrt {}) -> {}", "(incrt {1 {8} {7}}) -> {2 {9} {8}}", "(incrt {4 {4} {1}}) -> {5 {5} {2}}", "(incrt {5 {3}}) -> {6 {4}}", "(incrt {}) -> {}", "(incrt {4 {9} {6}}) -> {5 {10} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025754, "examples": ["(incrt {}) -> {}", "(incrt {4 {6 {4 {9} {8}} {0}} {6}}) -> {5 {7 {5 {10} {9}} {1}} {7}}", "(incrt {1}) -> {2}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9 {2}}) -> {10 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037416, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4 {1} {1}}) -> {5 {2} {2}}", "(incrt {0 {1}}) -> {1 {2}}", "(incrt {4 {7} {6}}) -> {5 {8} {7}}", "(incrt {1 {1} {6}}) -> {2 {2} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.044588, "examples": ["(incrt {}) -> {}", "(incrt {2 {1} {0}}) -> {3 {2} {1}}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {1 {6} {6 {2}}}) -> {2 {7} {7 {3}}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033873, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5 {2 {4}} {1}}) -> {6 {3 {5}} {2}}", "(incrt {8 {9} {7 {6} {2}}}) -> {9 {10} {8 {7} {3}}}", "(incrt {9}) -> {10}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029791, "examples": ["(incrt {}) -> {}", "(incrt {1 {8 {3}} {8 {6}}}) -> {2 {9 {4}} {9 {7}}}", "(incrt {0}) -> {1}", "(incrt {5 {8 {8}}}) -> {6 {9 {9}}}", "(incrt {9 {0}}) -> {10 {1}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034029, "examples": ["(incrt {}) -> {}", "(incrt {5 {0}}) -> {6 {1}}", "(incrt {2 {8 {1 {0}} {2}} {3 {3 {1} {3}} {3}}}) -> {3 {9 {2 {1}} {3}} {4 {4 {2} {4}} {4}}}", "(incrt {4}) -> {5}", "(incrt {4}) -> {5}", "(incrt {1 {9 {5}}}) -> {2 {10 {6}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027896, "examples": ["(incrt {}) -> {}", "(incrt {1 {2 {0 {7} {5}} {6}} {2}}) -> {2 {3 {1 {8} {6}} {7}} {3}}", "(incrt {0 {0} {2}}) -> {1 {1} {3}}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024427, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {6 {1 {0} {3}}}}) -> {7 {7 {2 {1} {4}}}}", "(incrt {2}) -> {3}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028931, "examples": ["(incrt {}) -> {}", "(incrt {4 {6} {0}}) -> {5 {7} {1}}", "(incrt {6}) -> {7}", "(incrt {0 {1}}) -> {1 {2}}", "(incrt {2 {3 {8 {0} {5}}}}) -> {3 {4 {9 {1} {6}}}}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039569, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {3}) -> {4}", "(incrt {9 {4} {6 {5}}}) -> {10 {5} {7 {6}}}", "(incrt {8 {3 {9 {8} {7}}} {9 {6 {2} {9}}}}) -> {9 {4 {10 {9} {8}}} {10 {7 {3} {10}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025031, "examples": ["(incrt {}) -> {}", "(incrt {6 {3}}) -> {7 {4}}", "(incrt {}) -> {}", "(incrt {4 {4}}) -> {5 {5}}", "(incrt {2 {4} {0}}) -> {3 {5} {1}}", "(incrt {4 {5} {6}}) -> {5 {6} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02489, "examples": ["(incrt {}) -> {}", "(incrt {6}) -> {7}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034979, "examples": ["(incrt {}) -> {}", "(incrt {7 {1} {4 {1 {5}} {2 {4} {4}}}}) -> {8 {2} {5 {2 {6}} {3 {5} {5}}}}", "(incrt {2 {0}}) -> {3 {1}}", "(incrt {1}) -> {2}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025751, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {6 {8 {8}}}) -> {7 {9 {9}}}", "(incrt {7 {7}}) -> {8 {8}}", "(incrt {6 {4}}) -> {7 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.042471, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {2 {3 {4 {3} {0}}} {6}}) -> {3 {4 {5 {4} {1}}} {7}}", "(incrt {6}) -> {7}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034292, "examples": ["(incrt {}) -> {}", "(incrt {5 {3} {6}}) -> {6 {4} {7}}", "(incrt {4 {5} {7}}) -> {5 {6} {8}}", "(incrt {8 {9} {1}}) -> {9 {10} {2}}", "(incrt {}) -> {}", "(incrt {8 {5} {8}}) -> {9 {6} {9}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024812, "examples": ["(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {9 {5}}) -> {10 {6}}", "(incrt {1}) -> {2}", "(incrt {9}) -> {10}", "(incrt {4 {0 {3} {6}} {2 {6}}}) -> {5 {1 {4} {7}} {3 {7}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034268, "examples": ["(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {5}) -> {6}", "(incrt {8}) -> {9}", "(incrt {4}) -> {5}", "(incrt {9 {3} {2 {3}}}) -> {10 {4} {3 {4}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025315, "examples": ["(incrt {}) -> {}", "(incrt {0 {7} {5}}) -> {1 {8} {6}}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5 {4}}) -> {6 {5}}", "(incrt {9 {7} {9}}) -> {10 {8} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024637, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {9 {2 {2}} {0 {7 {0} {7}} {9 {5}}}}) -> {10 {3 {3}} {1 {8 {1} {8}} {10 {6}}}}", "(incrt {4 {3 {8} {5}}}) -> {5 {4 {9} {6}}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024532, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {1}) -> {2}", "(incrt {2 {9 {8}}}) -> {3 {10 {9}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024088, "examples": ["(incrt {}) -> {}", "(incrt {4 {9}}) -> {5 {10}}", "(incrt {4 {5 {3}}}) -> {5 {6 {4}}}", "(incrt {9}) -> {10}", "(incrt {}) -> {}", "(incrt {2 {0 {6 {7} {8}}}}) -> {3 {1 {7 {8} {9}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025769, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {0 {0} {1}}}) -> {7 {1 {1} {2}}}", "(incrt {}) -> {}", "(incrt {1 {3} {4}}) -> {2 {4} {5}}", "(incrt {4 {0} {1}}) -> {5 {1} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034456, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {0 {0 {1}}}) -> {1 {1 {2}}}", "(incrt {1 {1} {9}}) -> {2 {2} {10}}", "(incrt {2 {0} {3}}) -> {3 {1} {4}}", "(incrt {0 {0} {0}}) -> {1 {1} {1}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023379, "examples": ["(incrt {}) -> {}", "(incrt {9 {5} {0}}) -> {10 {6} {1}}", "(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {8 {7 {0} {5}} {0}}) -> {9 {8 {1} {6}} {1}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032978, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {1}) -> {2}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037183, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9 {7}}) -> {10 {8}}", "(incrt {3}) -> {4}", "(incrt {8}) -> {9}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024699, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {6 {4 {6 {5}} {7}} {1}}) -> {7 {5 {7 {6}} {8}} {2}}", "(incrt {3 {7 {8}} {4 {4} {4}}}) -> {4 {8 {9}} {5 {5} {5}}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024479, "examples": ["(incrt {}) -> {}", "(incrt {0 {2}}) -> {1 {3}}", "(incrt {7 {3 {0 {5} {3}} {6 {6}}}}) -> {8 {4 {1 {6} {4}} {7 {7}}}}", "(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026617, "examples": ["(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {9 {2 {7} {6}} {2 {2}}}) -> {10 {3 {8} {7}} {3 {3}}}", "(incrt {0}) -> {1}", "(incrt {4 {8}}) -> {5 {9}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035232, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {6 {7} {4}}) -> {7 {8} {5}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024836, "examples": ["(incrt {}) -> {}", "(incrt {2 {9}}) -> {3 {10}}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036855, "examples": ["(incrt {}) -> {}", "(incrt {2 {7 {2 {2} {4}} {4}}}) -> {3 {8 {3 {3} {5}} {5}}}", "(incrt {}) -> {}", "(incrt {8}) -> {9}", "(incrt {2 {3 {8} {9}} {1}}) -> {3 {4 {9} {10}} {2}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026965, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {4 {1 {0} {0}} {1}}) -> {5 {2 {1} {1}} {2}}", "(incrt {2 {0 {7}}}) -> {3 {1 {8}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028522, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5 {2 {4}} {9 {9} {4}}}) -> {6 {3 {5}} {10 {10} {5}}}", "(incrt {3 {0}}) -> {4 {1}}", "(incrt {9}) -> {10}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02661, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {6}) -> {7}", "(incrt {4}) -> {5}", "(incrt {}) -> {}", "(incrt {1 {7 {0}} {2}}) -> {2 {8 {1}} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040236, "examples": ["(incrt {}) -> {}", "(incrt {5 {0} {9}}) -> {6 {1} {10}}", "(incrt {6}) -> {7}", "(incrt {1 {4}}) -> {2 {5}}", "(incrt {7}) -> {8}", "(incrt {4 {9 {1} {0 {0} {4}}}}) -> {5 {10 {2} {1 {1} {5}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028558, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9 {5}}) -> {10 {6}}", "(incrt {0}) -> {1}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035312, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {}) -> {}", "(incrt {4 {6}}) -> {5 {7}}", "(incrt {0 {0 {0}}}) -> {1 {1 {1}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029103, "examples": ["(incrt {}) -> {}", "(incrt {2 {9 {0} {5}}}) -> {3 {10 {1} {6}}}", "(incrt {4 {6 {0} {3}} {1 {4}}}) -> {5 {7 {1} {4}} {2 {5}}}", "(incrt {6}) -> {7}", "(incrt {9}) -> {10}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023685, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {5 {1} {2}}) -> {6 {2} {3}}", "(incrt {8 {8}}) -> {9 {9}}", "(incrt {2 {6 {1} {0}}}) -> {3 {7 {2} {1}}}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027309, "examples": ["(incrt {}) -> {}", "(incrt {6 {9 {1} {1}}}) -> {7 {10 {2} {2}}}", "(incrt {3 {0} {4}}) -> {4 {1} {5}}", "(incrt {0 {0 {9 {5}} {8 {3}}}}) -> {1 {1 {10 {6}} {9 {4}}}}", "(incrt {8}) -> {9}", "(incrt {9 {3}}) -> {10 {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024452, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {4 {1 {7}}}) -> {5 {2 {8}}}", "(incrt {7 {5}}) -> {8 {6}}", "(incrt {5}) -> {6}", "(incrt {9 {7 {2 {2} {4}}} {5}}) -> {10 {8 {3 {3} {5}}} {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024449, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3 {1} {7 {2} {8}}}) -> {4 {2} {8 {3} {9}}}", "(incrt {9}) -> {10}", "(incrt {6 {1}}) -> {7 {2}}", "(incrt {7 {7} {1}}) -> {8 {8} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031056, "examples": ["(incrt {}) -> {}", "(incrt {5 {0 {3}}}) -> {6 {1 {4}}}", "(incrt {3}) -> {4}", "(incrt {7 {6} {3 {1} {4 {4}}}}) -> {8 {7} {4 {2} {5 {5}}}}", "(incrt {4}) -> {5}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038239, "examples": ["(incrt {}) -> {}", "(incrt {7 {8 {2}} {7 {8 {0}}}}) -> {8 {9 {3}} {8 {9 {1}}}}", "(incrt {6 {2} {9}}) -> {7 {3} {10}}", "(incrt {5 {5} {9 {5}}}) -> {6 {6} {10 {6}}}", "(incrt {7}) -> {8}", "(incrt {1 {2} {5}}) -> {2 {3} {6}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039472, "examples": ["(incrt {}) -> {}", "(incrt {7 {5}}) -> {8 {6}}", "(incrt {2 {8} {6}}) -> {3 {9} {7}}", "(incrt {7}) -> {8}", "(incrt {5 {6}}) -> {6 {7}}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.029836, "examples": ["(incrt {}) -> {}", "(incrt {6 {9 {7} {5}}}) -> {7 {10 {8} {6}}}", "(incrt {}) -> {}", "(incrt {8 {9 {9}} {7 {1 {7} {4}} {7}}}) -> {9 {10 {10}} {8 {2 {8} {5}} {8}}}", "(incrt {1}) -> {2}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037952, "examples": ["(incrt {}) -> {}", "(incrt {0 {5}}) -> {1 {6}}", "(incrt {8 {4 {5}} {9 {8} {5}}}) -> {9 {5 {6}} {10 {9} {6}}}", "(incrt {7}) -> {8}", "(incrt {1 {3 {4} {4}} {6 {3} {6}}}) -> {2 {4 {5} {5}} {7 {4} {7}}}", "(incrt {0 {1 {9}} {4 {9}}}) -> {1 {2 {10}} {5 {10}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026948, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {9 {6} {9}}) -> {10 {7} {10}}", "(incrt {4 {9 {2}}}) -> {5 {10 {3}}}", "(incrt {9 {6 {2} {5 {9}}}}) -> {10 {7 {3} {6 {10}}}}", "(incrt {8 {2}}) -> {9 {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034752, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {8 {8 {3} {5}}}) -> {9 {9 {4} {6}}}", "(incrt {6 {2 {8}}}) -> {7 {3 {9}}}", "(incrt {0 {5 {8} {5}}}) -> {1 {6 {9} {6}}}", "(incrt {0 {9 {0 {9}} {2 {8}}} {2 {9} {1 {4} {6}}}}) -> {1 {10 {1 {10}} {3 {9}}} {3 {10} {2 {5} {7}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.028453, "examples": ["(incrt {}) -> {}", "(incrt {2 {2 {5}}}) -> {3 {3 {6}}}", "(incrt {}) -> {}", "(incrt {6 {5 {7 {4} {3}}} {8 {3}}}) -> {7 {6 {8 {5} {4}}} {9 {4}}}", "(incrt {2}) -> {3}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024658, "examples": ["(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {1 {8}}) -> {2 {9}}", "(incrt {0 {8} {4 {7} {6}}}) -> {1 {9} {5 {8} {7}}}", "(incrt {0}) -> {1}", "(incrt {7 {1} {2}}) -> {8 {2} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.040217, "examples": ["(incrt {}) -> {}", "(incrt {2 {9} {8}}) -> {3 {10} {9}}", "(incrt {1}) -> {2}", "(incrt {7}) -> {8}", "(incrt {2 {4} {8 {2 {8} {3}} {8 {1}}}}) -> {3 {5} {9 {3 {9} {4}} {9 {2}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.036591, "examples": ["(incrt {}) -> {}", "(incrt {8 {3}}) -> {9 {4}}", "(incrt {4 {1} {1}}) -> {5 {2} {2}}", "(incrt {8 {1}}) -> {9 {2}}", "(incrt {2}) -> {3}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032187, "examples": ["(incrt {}) -> {}", "(incrt {7 {6 {2 {3}}} {7 {2 {4} {8}} {8 {1} {0}}}}) -> {8 {7 {3 {4}}} {8 {3 {5} {9}} {9 {2} {1}}}}", "(incrt {9 {0} {5 {1} {8}}}) -> {10 {1} {6 {2} {9}}}", "(incrt {9}) -> {10}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024934, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {2}) -> {3}", "(incrt {7}) -> {8}", "(incrt {7 {1 {8} {6}}}) -> {8 {2 {9} {7}}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.0254, "examples": ["(incrt {}) -> {}", "(incrt {4 {5 {2 {9}} {3}}}) -> {5 {6 {3 {10}} {4}}}", "(incrt {1 {2}}) -> {2 {3}}", "(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {6 {9} {6}}) -> {7 {10} {7}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026753, "examples": ["(incrt {}) -> {}", "(incrt {0 {4}}) -> {1 {5}}", "(incrt {1 {5} {7}}) -> {2 {6} {8}}", "(incrt {9}) -> {10}", "(incrt {1 {6}}) -> {2 {7}}", "(incrt {5}) -> {6}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.033994, "examples": ["(incrt {}) -> {}", "(incrt {8 {7 {6 {8}}}}) -> {9 {8 {7 {9}}}}", "(incrt {1 {0}}) -> {2 {1}}", "(incrt {3}) -> {4}", "(incrt {}) -> {}", "(incrt {1 {4}}) -> {2 {5}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024827, "examples": ["(incrt {}) -> {}", "(incrt {8 {0 {7}} {7 {6} {0}}}) -> {9 {1 {8}} {8 {7} {1}}}", "(incrt {1 {4 {7 {3}} {4 {2}}}}) -> {2 {5 {8 {4}} {5 {3}}}}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.026312, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {0 {1}}) -> {1 {2}}", "(incrt {8 {3 {7} {5 {0}}}}) -> {9 {4 {8} {6 {1}}}}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031411, "examples": ["(incrt {}) -> {}", "(incrt {8 {4 {5} {6}}}) -> {9 {5 {6} {7}}}", "(incrt {9 {4 {6 {2}} {8 {2}}} {7}}) -> {10 {5 {7 {3}} {9 {3}}} {8}}", "(incrt {6}) -> {7}", "(incrt {5 {5 {7} {8}} {0}}) -> {6 {6 {8} {9}} {1}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037518, "examples": ["(incrt {}) -> {}", "(incrt {5 {4 {9 {6}} {4 {9} {5}}}}) -> {6 {5 {10 {7}} {5 {10} {6}}}}", "(incrt {}) -> {}", "(incrt {2 {1}}) -> {3 {2}}", "(incrt {3 {2}}) -> {4 {3}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032783, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {3}}) -> {7 {4}}", "(incrt {9}) -> {10}", "(incrt {8 {9 {4}} {4 {0 {1} {5}}}}) -> {9 {10 {5}} {5 {1 {2} {6}}}}", "(incrt {1 {0 {3 {5} {3}}} {3}}) -> {2 {1 {4 {6} {4}}} {4}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027992, "examples": ["(incrt {}) -> {}", "(incrt {9 {3 {9 {5} {6}}}}) -> {10 {4 {10 {6} {7}}}}", "(incrt {4 {8} {5}}) -> {5 {9} {6}}", "(incrt {6 {5 {7} {7}} {2 {6} {8}}}) -> {7 {6 {8} {8}} {3 {7} {9}}}", "(incrt {1 {4}}) -> {2 {5}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.037067, "examples": ["(incrt {}) -> {}", "(incrt {5 {0}}) -> {6 {1}}", "(incrt {1}) -> {2}", "(incrt {}) -> {}", "(incrt {8 {2}}) -> {9 {3}}", "(incrt {5 {3 {9 {4} {0}} {4 {2}}} {7 {7 {7}}}}) -> {6 {4 {10 {5} {1}} {5 {3}}} {8 {8 {8}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.039365, "examples": ["(incrt {}) -> {}", "(incrt {1 {3}}) -> {2 {4}}", "(incrt {4 {6}}) -> {5 {7}}", "(incrt {9}) -> {10}", "(incrt {5}) -> {6}", "(incrt {0}) -> {1}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034186, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {}) -> {}", "(incrt {1 {2} {7}}) -> {2 {3} {8}}", "(incrt {8}) -> {9}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.032226, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {6 {5 {5}} {4}}) -> {7 {6 {6}} {5}}", "(incrt {}) -> {}", "(incrt {3 {7 {9 {7}}}}) -> {4 {8 {10 {8}}}}", "(incrt {8 {4 {2}} {9 {5} {4}}}) -> {9 {5 {3}} {10 {6} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.030412, "examples": ["(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {0 {7 {8}}}) -> {1 {8 {9}}}", "(incrt {3}) -> {4}", "(incrt {9 {5} {0 {5} {9 {0} {9}}}}) -> {10 {6} {1 {6} {10 {1} {10}}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.04088, "examples": ["(incrt {}) -> {}", "(incrt {5 {8} {1}}) -> {6 {9} {2}}", "(incrt {1}) -> {2}", "(incrt {2}) -> {3}", "(incrt {7 {0}}) -> {8 {1}}", "(incrt {1 {4 {5 {0} {9}}}}) -> {2 {5 {6 {1} {10}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.031928, "examples": ["(incrt {}) -> {}", "(incrt {7 {8}}) -> {8 {9}}", "(incrt {1 {1 {6} {5}} {3}}) -> {2 {2 {7} {6}} {4}}", "(incrt {8 {1 {3} {5 {5} {5}}}}) -> {9 {2 {4} {6 {6} {6}}}}", "(incrt {5 {4}}) -> {6 {5}}", "(incrt {6 {9 {2 {2} {4}}} {1}}) -> {7 {10 {3 {3} {5}}} {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034128, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7}) -> {8}", "(incrt {0 {2}}) -> {1 {3}}", "(incrt {4 {0} {7}}) -> {5 {1} {8}}", "(incrt {7 {5} {9 {3} {7}}}) -> {8 {6} {10 {4} {8}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.034271, "examples": ["(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {}) -> {}", "(incrt {4}) -> {5}", "(incrt {}) -> {}", "(incrt {6 {0 {8 {4}} {3 {6} {0}}}}) -> {7 {1 {9 {5}} {4 {7} {1}}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025978, "examples": ["(incrt {}) -> {}", "(incrt {9 {1 {8} {0}} {5 {1}}}) -> {10 {2 {9} {1}} {6 {2}}}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7 {4} {9}}) -> {8 {5} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024469, "examples": ["(incrt {}) -> {}", "(incrt {3 {3} {1}}) -> {4 {4} {2}}", "(incrt {5 {7}}) -> {6 {8}}", "(incrt {0 {5 {4} {0 {1} {1}}}}) -> {1 {6 {5} {1 {2} {2}}}}", "(incrt {3 {0}}) -> {4 {1}}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023553, "examples": ["(incrt {}) -> {}", "(incrt {5}) -> {6}", "(incrt {}) -> {}", "(incrt {9}) -> {10}", "(incrt {5 {3} {3}}) -> {6 {4} {4}}", "(incrt {1 {4 {8 {9} {6}}} {9}}) -> {2 {5 {9 {10} {7}}} {10}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02791, "examples": ["(incrt {}) -> {}", "(incrt {8 {8 {3}}}) -> {9 {9 {4}}}", "(incrt {1}) -> {2}", "(incrt {0 {2}}) -> {1 {3}}", "(incrt {8 {1}}) -> {9 {2}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.038184, "examples": ["(incrt {}) -> {}", "(incrt {1 {1}}) -> {2 {2}}", "(incrt {0}) -> {1}", "(incrt {7}) -> {8}", "(incrt {}) -> {}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.03329, "examples": ["(incrt {}) -> {}", "(incrt {2 {6} {3}}) -> {3 {7} {4}}", "(incrt {}) -> {}", "(incrt {1}) -> {2}", "(incrt {7}) -> {8}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024434, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {3}) -> {4}", "(incrt {1 {4 {9} {2}} {0 {7 {8} {9}} {3}}}) -> {2 {5 {10} {3}} {1 {8 {9} {10}} {4}}}", "(incrt {5}) -> {6}", "(incrt {3}) -> {4}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.025381, "examples": ["(incrt {}) -> {}", "(incrt {0 {1 {1}} {8 {6} {7}}}) -> {1 {2 {2}} {9 {7} {8}}}", "(incrt {9 {4} {0}}) -> {10 {5} {1}}", "(incrt {9}) -> {10}", "(incrt {}) -> {}", "(incrt {7}) -> {8}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.02488, "examples": ["(incrt {}) -> {}", "(incrt {3 {4 {1 {1}}} {8 {4 {8}}}}) -> {4 {5 {2 {2}}} {9 {5 {9}}}}", "(incrt {}) -> {}", "(incrt {7 {0}}) -> {8 {1}}", "(incrt {2 {2} {8}}) -> {3 {3} {9}}", "(incrt {9}) -> {10}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.024152, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {8 {3 {1 {9} {1}} {8 {0} {5}}}}) -> {9 {4 {2 {10} {2}} {9 {1} {6}}}}", "(incrt {3 {6 {0 {0}} {1 {4}}} {7 {0 {0} {5}} {3 {0}}}}) -> {4 {7 {1 {1}} {2 {5}}} {8 {1 {1} {6}} {4 {1}}}}", "(incrt {}) -> {}", "(incrt {1}) -> {2}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027534, "examples": ["(incrt {}) -> {}", "(incrt {2 {5}}) -> {3 {6}}", "(incrt {0}) -> {1}", "(incrt {3}) -> {4}", "(incrt {2 {5}}) -> {3 {6}}", "(incrt {3 {4} {7}}) -> {4 {5} {8}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.027488, "examples": ["(incrt {}) -> {}", "(incrt {7 {5} {6}}) -> {8 {6} {7}}", "(incrt {4}) -> {5}", "(incrt {4 {8}}) -> {5 {9}}", "(incrt {3 {7 {7 {8} {6}} {9}}}) -> {4 {8 {8 {9} {7}} {10}}}", "(incrt {0 {2} {2}}) -> {1 {3} {3}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.035017, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {7 {9 {8}} {3}}) -> {8 {10 {9}} {4}}", "(incrt {}) -> {}", "(incrt {5 {0}}) -> {6 {1}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023441, "examples": ["(incrt {}) -> {}", "(incrt {2}) -> {3}", "(incrt {5 {0} {7}}) -> {6 {1} {8}}", "(incrt {5}) -> {6}", "(incrt {6 {6 {2 {8} {2}} {8 {6} {3}}} {8 {0}}}) -> {7 {7 {3 {9} {3}} {9 {7} {4}}} {9 {1}}}", "(incrt {}) -> {}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023581, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {0}) -> {1}", "(incrt {}) -> {}", "(incrt {9 {2 {6} {4}}}) -> {10 {3 {7} {5}}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023255, "examples": ["(incrt {}) -> {}", "(incrt {2 {3 {5}}}) -> {3 {4 {6}}}", "(incrt {}) -> {}", "(incrt {1 {2} {2}}) -> {2 {3} {3}}", "(incrt {}) -> {}", "(incrt {6}) -> {7}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
{"time": 0.023585, "examples": ["(incrt {}) -> {}", "(incrt {}) -> {}", "(incrt {5 {0 {7}}}) -> {6 {1 {8}}}", "(incrt {9 {5} {3 {9}}}) -> {10 {6} {4 {10}}}", "(incrt {3 {6} {6}}) -> {4 {7} {7}}", "(incrt {7 {1}}) -> {8 {2}}"], "name": "incrt", "solution": "(let incrt (let a (lambda (b) (mapt b (lambda (c) (+ 1 c)))) _) _)"}
