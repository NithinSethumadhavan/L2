{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000246, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000426, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000305, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.00049, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree (car (value b)) [])) _) _)", "time": 0.017826, "name": "sumnodes", "examples": ["(sumnodes {[7]}) -> {7}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000326, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ 1 (car c))))) _) _)", "time": 0.05624, "name": "sumnodes", "examples": ["(sumnodes {[9 1]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000563, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.285545, "name": "sumnodes", "examples": ["(sumnodes {[9 3] {[9 8 4 1 2] {[7 6 2 1]} {[6] {[]}}}}) -> {12 {24 {16} {6 {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.299742, "name": "sumnodes", "examples": ["(sumnodes {[4 8 5 5 2] {[2 5]} {[]}}) -> {24 {7} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.349868, "name": "sumnodes", "examples": ["(sumnodes {[5 9 9 1] {[]}}) -> {24 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.527097, "name": "sumnodes", "examples": ["(sumnodes {[1 6 1 4 7] {[0 1 8 2 6] {[7 9 4]} {[2 5 6 9]}}}) -> {19 {17 {20} {22}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.527585, "name": "sumnodes", "examples": ["(sumnodes {[3 9 7 0] {[4 5 2]}}) -> {19 {11}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.007379, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.340875, "name": "sumnodes", "examples": ["(sumnodes {[9 6] {[9 8]} {[]}}) -> {15 {17} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.579157, "name": "sumnodes", "examples": ["(sumnodes {[9 1 2]}) -> {12}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.561052, "name": "sumnodes", "examples": ["(sumnodes {[6 8 9 2 5]}) -> {30}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.607473, "name": "sumnodes", "examples": ["(sumnodes {[6 7 8 3] {[5 6] {[5 6 5 0]} {[6 8] {[0]}}} {[1] {[1 9 4 1] {[0 4 6 4 3]}} {[7 2 0 3]}}}) -> {24 {11 {16} {14 {0}}} {1 {15 {17}} {12}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.353008, "name": "sumnodes", "examples": ["(sumnodes {[7] {[7 2 5] {[7 9] {[4 4 3 4]}} {[] {[]} {[9 3 0 0 8]}}}}) -> {7 {14 {16 {15}} {0 {0} {20}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.365062, "name": "sumnodes", "examples": ["(sumnodes {[2] {[]} {[2] {[2 7]}}}) -> {2 {0} {2 {9}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.50275, "name": "sumnodes", "examples": ["(sumnodes {[3 8 4 5 0] {[3 3]}}) -> {20 {6}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree (car (value b)) [])) _) _)", "time": 0.014361, "name": "sumnodes", "examples": ["(sumnodes {[3]}) -> {3}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) d) 0)))) _) _)", "time": 0.174594, "name": "sumnodes", "examples": ["(sumnodes {[4] {[0 4]} {[1]}}) -> {4 {4} {1}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.003445, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.604423, "name": "sumnodes", "examples": ["(sumnodes {[1 5 3 7] {[5 9]} {[1 1]}}) -> {16 {14} {2}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.507818, "name": "sumnodes", "examples": ["(sumnodes {[3] {[2 6]} {[5 5 4 7]}}) -> {3 {8} {21}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000371, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree (car (value b)) [])) _) _)", "time": 0.013999, "name": "sumnodes", "examples": ["(sumnodes {[8]}) -> {8}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.003315, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.00041, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.003736, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.443326, "name": "sumnodes", "examples": ["(sumnodes {[2 3 9 2] {[3 9]} {[7 7 1 3]}}) -> {16 {12} {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.591881, "name": "sumnodes", "examples": ["(sumnodes {[2 8 9 7 1] {[8 0 5 1 9]} {[1] {[0] {[2 1 3 7]} {[2 8 5 1]}} {[7] {[0 2]} {[5 0 6 9 3]}}}}) -> {27 {23} {1 {0 {13} {16}} {7 {2} {23}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) d) 0)))) _) _)", "time": 0.12858, "name": "sumnodes", "examples": ["(sumnodes {[3] {[]}}) -> {3 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.003821, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000299, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.399372, "name": "sumnodes", "examples": ["(sumnodes {[2 0 3 1 9] {[1 4 6]} {[3]}}) -> {15 {11} {3}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000426, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.234044, "name": "sumnodes", "examples": ["(sumnodes {[5 3 0] {[2 5] {[]}}}) -> {8 {7 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.00048, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.004429, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000484, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.341633, "name": "sumnodes", "examples": ["(sumnodes {[] {[8 8 9 8] {[2 1] {[5 3 2 7]} {[7 0 4 1 5]}} {[] {[2]} {[8 3]}}} {[4 7 4 2 7] {[1 0 4 4] {[3]} {[5 8 8 5 3]}} {[3 4]}}}) -> {0 {33 {3 {17} {17}} {0 {2} {11}}} {24 {9 {3} {29}} {7}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.282072, "name": "sumnodes", "examples": ["(sumnodes {[3 5 0 1 9] {[6] {[6]} {[]}}}) -> {18 {6 {6} {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.345604, "name": "sumnodes", "examples": ["(sumnodes {[1 1 9 8 4] {[2 5 8]} {[3 6 6] {[]} {[] {[5 8 1 6]}}}}) -> {23 {15} {15 {0} {0 {20}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.417571, "name": "sumnodes", "examples": ["(sumnodes {[1 0 5 3 5]}) -> {14}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000714, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.3929, "name": "sumnodes", "examples": ["(sumnodes {[3 3 5 2] {[3 2 0 8 4] {[1 7 5] {[]} {[]}} {[3 2 1]}} {[5 9 6 5] {[6 4 1 7] {[0 4 1 8 3]}} {[6 3 3 9]}}}) -> {13 {17 {13 {0} {0}} {6}} {25 {18 {16}} {21}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (+ 1 (+ 1 (car c)))))) _) _)", "time": 0.462837, "name": "sumnodes", "examples": ["(sumnodes {[6 2]}) -> {8}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000444, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000288, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.467306, "name": "sumnodes", "examples": ["(sumnodes {[2 3 3 7 2]}) -> {17}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.575378, "name": "sumnodes", "examples": ["(sumnodes {[1 0 5 4]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.431934, "name": "sumnodes", "examples": ["(sumnodes {[4 9 7 7]}) -> {27}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000475, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.615359, "name": "sumnodes", "examples": ["(sumnodes {[3 9 8] {[7 8 7] {[1 8 4 6 2]}} {[7 4 6]}}) -> {20 {22 {21}} {17}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.290833, "name": "sumnodes", "examples": ["(sumnodes {[] {[] {[5 5 4]}} {[6] {[4 2 6 9] {[]}} {[6 8 7]}}}) -> {0 {0 {14}} {6 {21 {0}} {21}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.547831, "name": "sumnodes", "examples": ["(sumnodes {[0 9 9]}) -> {18}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.427955, "name": "sumnodes", "examples": ["(sumnodes {[1 3 7 1]}) -> {12}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.539771, "name": "sumnodes", "examples": ["(sumnodes {[1 6] {[4]}}) -> {7 {4}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (tree 0 [])) _) _)", "time": 0.005491, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) b) _) _)", "time": 0.000462, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}"]}
