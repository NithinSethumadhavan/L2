{"time": 0.000473, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [7]) -> [7]"]}
{"time": 0.000312, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [2]) -> [2]"]}
{"time": 0.000477, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [8]) -> [8]"]}
{"time": 0.000399, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [2]) -> [2]"]}
{"time": 0.000312, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [7]) -> [7]"]}
{"time": 0.000626, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.025288, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 5 0 8 3]) -> [5 5 5 5 5]"]}
{"time": 0.029356, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 2 2 1 6]) -> [2 2 2 2 2]"]}
{"time": 0.022978, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 9 8]) -> [6 6 6]"]}
{"time": 0.027565, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 6 9 9]) -> [4 4 4 4]"]}
{"time": 0.022451, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 1 3 3 9]) -> [2 2 2 2 2]"]}
{"time": 0.029314, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 5 2]) -> [5 5 5]"]}
{"time": 0.034626, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 3 3 4]) -> [8 8 8 8]"]}
{"time": 0.02927, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 0 3 1 5]) -> [3 3 3 3 3]"]}
{"time": 0.029107, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 0 1 7]) -> [4 4 4 4]"]}
{"time": 0.026247, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 6 8 5 3]) -> [7 7 7 7 7]"]}
{"time": 0.020908, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 8 3 7]) -> [5 5 5 5]"]}
{"time": 0.000448, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.000432, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.021455, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 9 7 5]) -> [2 2 2 2]"]}
{"time": 0.023187, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 9 6]) -> [6 6 6]"]}
{"time": 0.034804, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 0 7]) -> [4 4 4]"]}
{"time": 0.034375, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "examples": ["(multfirst [1 9 0 1]) -> [1 1 1 1]"]}
{"time": 0.00059, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.026801, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "examples": ["(multfirst [0 2 4 6]) -> [0 0 0 0]"]}
{"time": 0.021805, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 4 1]) -> [6 6 6]"]}
{"time": 0.038584, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 6 1 9 0]) -> [7 7 7 7 7]"]}
{"time": 0.023091, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (cons 0 (cons 0 []))) _) _)", "examples": ["(multfirst [0 3]) -> [0 0]"]}
{"time": 0.025325, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 4]) -> [8 8]"]}
{"time": 0.024423, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 0 8]) -> [8 8 8]"]}
{"time": 0.022967, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "examples": ["(multfirst [0 3 7 4]) -> [0 0 0 0]"]}
{"time": 0.022977, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 0 8 9 7]) -> [2 2 2 2 2]"]}
{"time": 0.000471, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.021562, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 0 7]) -> [9 9 9]"]}
{"time": 0.000379, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.024697, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [2 2 6 8]) -> [2 2 2 2]"]}
{"time": 0.000644, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.000586, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.021933, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 5 2 1 6]) -> [5 5 5 5 5]"]}
{"time": 0.023979, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 9 2 7 0]) -> [6 6 6 6 6]"]}
{"time": 0.03165, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (cons 1 (cons 1 []))) _) _)", "examples": ["(multfirst [1 8]) -> [1 1]"]}
{"time": 0.036733, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 4 9]) -> [3 3 3]"]}
{"time": 0.000582, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.025421, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 5]) -> [7 7]"]}
{"time": 0.026229, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 6 6]) -> [4 4 4]"]}
{"time": 0.023756, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [7 5]) -> [7 7]"]}
{"time": 0.022423, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (cons 1 (cons 1 []))) _) _)", "examples": ["(multfirst [1 2]) -> [1 1]"]}
{"time": 0.03522, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (cons 0 (cons 0 []))) _) _)", "examples": ["(multfirst [0 5]) -> [0 0]"]}
{"time": 0.026513, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 8 1 2 8]) -> [6 6 6 6 6]"]}
{"time": 0.021186, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 9 1 4]) -> [3 3 3 3]"]}
{"time": 0.024027, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [4 6 5 6]) -> [4 4 4 4]"]}
{"time": 0.02937, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [9 1 8]) -> [9 9 9]"]}
{"time": 0.033708, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 6 6 6 9]) -> [3 3 3 3 3]"]}
{"time": 0.000438, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.000662, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.025628, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [6 7 9 0]) -> [6 6 6 6]"]}
{"time": 0.000546, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.000457, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [1]) -> [1]"]}
{"time": 0.000387, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) []) _) _)", "examples": ["(multfirst []) -> []"]}
{"time": 0.035088, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 0))) _) _)", "examples": ["(multfirst [0 8 2]) -> [0 0 0]"]}
{"time": 0.033405, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [3 5 7]) -> [3 3 3]"]}
{"time": 0.00046, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [1]) -> [1]"]}
{"time": 0.000422, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [2]) -> [2]"]}
{"time": 0.03435, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [8 4 2]) -> [8 8 8]"]}
{"time": 0.000471, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) b) _) _)", "examples": ["(multfirst [9]) -> [9]"]}
{"time": 0.033353, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) (car b)))) _) _)", "examples": ["(multfirst [5 2 1 7 0]) -> [5 5 5 5 5]"]}
{"time": 0.022043, "name": "multfirst", "solution": "(let multfirst (let a (lambda (b) (map b (lambda (c) 1))) _) _)", "examples": ["(multfirst [1 8 5]) -> [1 1 1]"]}
