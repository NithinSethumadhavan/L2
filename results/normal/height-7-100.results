{"time": 0.196838, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {5 {9} {9}} {9 {4} {9}}}) -> 3", "(height {0 {5} {6}}) -> 2", "(height {}) -> 0", "(height {2 {0 {2 {5} {3}} {3}} {3 {2} {5 {9}}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.200821, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {4}}) -> 2", "(height {5 {8 {9} {8}} {5 {3}}}) -> 3", "(height {9 {6} {5 {6 {2}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.225741, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {4 {1 {2}} {8 {7}}} {8 {8 {3}}}}) -> 4", "(height {0}) -> 1", "(height {5}) -> 1", "(height {8}) -> 1", "(height {5 {6}}) -> 2"]}
{"time": 0.233479, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {4}}) -> 2", "(height {}) -> 0", "(height {1 {6 {4 {7} {2}}} {0 {4 {9} {2}}}}) -> 4", "(height {8 {5}}) -> 2", "(height {8}) -> 1"]}
{"time": 0.196365, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {7} {6 {7 {9}} {3 {3}}}}) -> 4", "(height {7 {8}}) -> 2", "(height {3}) -> 1", "(height {8 {6 {7 {0}} {0 {7} {1}}}}) -> 4", "(height {7 {8} {6}}) -> 2"]}
{"time": 0.213001, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {2}) -> 1", "(height {3}) -> 1", "(height {0 {8 {0} {8 {2} {9}}} {9 {4 {5} {4}}}}) -> 4", "(height {4 {2} {6}}) -> 2"]}
{"time": 0.231124, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {1} {8 {5}}}) -> 3", "(height {4 {8 {0} {9}}}) -> 3", "(height {7 {5}}) -> 2", "(height {9 {0 {8} {2}}}) -> 3", "(height {5}) -> 1"]}
{"time": 0.203498, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0 {9}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {1 {5 {8}}}) -> 3"]}
{"time": 0.193245, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {7}) -> 1", "(height {7}) -> 1", "(height {0 {6 {5}}}) -> 3", "(height {9}) -> 1"]}
{"time": 0.202925, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5 {6}}) -> 2", "(height {}) -> 0", "(height {2 {2}}) -> 2", "(height {7 {9 {8 {4}} {5 {1} {4}}}}) -> 4", "(height {3}) -> 1"]}
{"time": 0.213999, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {9 {7}}}) -> 3", "(height {6 {8 {4 {5} {6}}}}) -> 4", "(height {9 {8}}) -> 2", "(height {9}) -> 1", "(height {5}) -> 1"]}
{"time": 0.238136, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {1 {2}} {9 {3 {7}} {8}}}) -> 4", "(height {5 {9 {1 {8} {4}} {1 {3}}} {1 {4 {2} {9}}}}) -> 4", "(height {}) -> 0", "(height {2 {4}}) -> 2", "(height {2 {3}}) -> 2"]}
{"time": 0.220178, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5}) -> 1", "(height {4 {0 {5 {4} {2}} {8 {0}}}}) -> 4", "(height {}) -> 0", "(height {4 {9 {7 {5}} {5 {1} {5}}} {8 {9} {6}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.174553, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {3}) -> 1", "(height {4 {5 {1}} {6 {7 {1} {6}}}}) -> 4", "(height {6 {6 {7} {6}} {0 {3} {7}}}) -> 3", "(height {4}) -> 1"]}
{"time": 0.197255, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7 {7 {4 {8}} {8 {8} {1}}} {2}}) -> 4", "(height {5 {8}}) -> 2", "(height {2 {1}}) -> 2", "(height {1 {8} {0}}) -> 2"]}
{"time": 0.206261, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {0 {9 {6}} {1}}) -> 3", "(height {6 {5 {7 {6} {2}}} {0 {9} {0 {8} {7}}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.034004, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0", "(height {5}) -> 1"]}
{"time": 0.176455, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {0}}) -> 2", "(height {3}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1"]}
{"time": 0.201413, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {9 {3}}) -> 2", "(height {9 {2 {5 {1}}} {3 {5 {0}}}}) -> 4", "(height {6}) -> 1", "(height {0 {7 {9} {5}} {2 {9} {0}}}) -> 3"]}
{"time": 0.197339, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {3 {7}} {6}}) -> 3", "(height {6 {4 {9} {6}}}) -> 3", "(height {4 {1 {8} {7}}}) -> 3", "(height {5 {6}}) -> 2", "(height {}) -> 0"]}
{"time": 0.213152, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {4} {8}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {5}) -> 1"]}
{"time": 0.19905, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {3} {0}}) -> 2", "(height {8}) -> 1", "(height {5 {1} {8 {2 {0} {7}}}}) -> 4", "(height {}) -> 0", "(height {1 {7 {9 {2}}} {6 {7} {6 {7}}}}) -> 4"]}
{"time": 0.206264, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {7 {5} {6}}}) -> 3", "(height {}) -> 0", "(height {8}) -> 1", "(height {0}) -> 1", "(height {8}) -> 1"]}
{"time": 0.18835, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {8 {0} {0}}) -> 2", "(height {}) -> 0", "(height {1 {6} {6}}) -> 2", "(height {9 {8 {8}} {0 {2} {6}}}) -> 3"]}
{"time": 0.195843, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {0 {9} {8 {7}}}) -> 3", "(height {7}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.199977, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {2 {3 {9 {5} {2}} {6 {6}}} {2}}) -> 4", "(height {0}) -> 1", "(height {2 {2}}) -> 2", "(height {}) -> 0"]}
{"time": 0.224341, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {9 {9}}) -> 2", "(height {3 {4} {3}}) -> 2", "(height {8 {2 {6}} {6 {6}}}) -> 3", "(height {}) -> 0"]}
{"time": 0.196297, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {6} {0 {2}}}) -> 3", "(height {7 {3}}) -> 2", "(height {6 {5} {9}}) -> 2", "(height {}) -> 0", "(height {3}) -> 1"]}
{"time": 0.221796, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0 {4}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1"]}
{"time": 0.195141, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {7}}) -> 2", "(height {3}) -> 1", "(height {0}) -> 1", "(height {5 {4} {8}}) -> 2", "(height {0 {9 {6 {1} {1}}}}) -> 4"]}
{"time": 0.199623, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {6 {9}} {2 {1 {3} {9}}}}) -> 4", "(height {8 {7 {8}} {3 {8} {5}}}) -> 3", "(height {1 {0 {7} {4}}}) -> 3", "(height {}) -> 0", "(height {6 {3}}) -> 2"]}
{"time": 0.201679, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5 {3} {0}}) -> 2", "(height {9 {5 {5} {5}} {5 {1}}}) -> 3", "(height {}) -> 0", "(height {2 {0} {4 {3}}}) -> 3", "(height {4 {0 {5}}}) -> 3"]}
{"time": 0.124813, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {9 {8} {1}}) -> 2", "(height {0 {3 {2 {7}}} {9 {3 {0} {4}}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.032915, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) 1) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {1}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.167204, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {2}) -> 1", "(height {0 {7} {1}}) -> 2", "(height {5}) -> 1", "(height {}) -> 0"]}
{"time": 0.117351, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6}) -> 1", "(height {0}) -> 1", "(height {4}) -> 1", "(height {8}) -> 1", "(height {9 {1} {3}}) -> 2"]}
{"time": 0.191631, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {6 {0}}) -> 2", "(height {}) -> 0", "(height {8}) -> 1", "(height {1}) -> 1"]}
{"time": 0.17228, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5}) -> 1", "(height {9 {3}}) -> 2", "(height {6}) -> 1", "(height {0}) -> 1", "(height {4 {1 {6}}}) -> 3"]}
{"time": 0.166521, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4}) -> 1", "(height {0 {0 {8}}}) -> 3", "(height {}) -> 0", "(height {2 {3}}) -> 2"]}
{"time": 0.18898, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {2}}) -> 2", "(height {2}) -> 1", "(height {4}) -> 1", "(height {4}) -> 1", "(height {}) -> 0"]}
{"time": 0.227423, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {5 {6 {4 {7} {8}} {4 {8} {0}}} {1 {6} {2}}}) -> 4", "(height {0 {2} {6 {4}}}) -> 3", "(height {4 {6}}) -> 2"]}
{"time": 0.198978, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {8} {1}}) -> 2", "(height {}) -> 0", "(height {5 {7 {9} {9}}}) -> 3", "(height {5 {9 {1}} {6 {6} {4}}}) -> 3", "(height {1}) -> 1"]}
{"time": 0.167014, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7 {0} {6 {6 {0} {7}}}}) -> 4", "(height {}) -> 0", "(height {0 {4} {0}}) -> 2", "(height {}) -> 0"]}
{"time": 0.224163, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {0 {9 {7 {7}} {2}} {0 {3 {6}}}}) -> 4", "(height {7 {8 {3} {0}} {6}}) -> 3", "(height {3}) -> 1", "(height {0 {9 {5}}}) -> 3"]}
{"time": 0.182692, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {5 {4}}}) -> 3", "(height {7}) -> 1", "(height {2 {5}}) -> 2", "(height {1 {0} {6 {9} {9}}}) -> 3", "(height {}) -> 0"]}
{"time": 0.190195, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {4 {6 {3 {0} {4}}}}) -> 4", "(height {6 {7}}) -> 2", "(height {5}) -> 1", "(height {4 {5} {0}}) -> 2"]}
{"time": 0.199889, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {3} {9 {5} {6 {3} {0}}}}) -> 4", "(height {6 {7} {6}}) -> 2", "(height {5 {8} {3}}) -> 2", "(height {9}) -> 1", "(height {0 {6} {4}}) -> 2"]}
{"time": 0.202761, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {8}}) -> 2", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {2 {8} {1 {0} {6}}}) -> 3"]}
{"time": 0.170358, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {3}}) -> 2", "(height {8}) -> 1", "(height {1}) -> 1", "(height {4 {1 {0}}}) -> 3", "(height {7 {3 {6 {9}} {9 {2}}}}) -> 4"]}
{"time": 0.139216, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0 {8} {4 {3}}}) -> 3", "(height {9 {9 {7 {7} {8}}} {8 {7 {6}} {0}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {6 {0}}) -> 2"]}
{"time": 0.204587, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {7}) -> 1", "(height {}) -> 0", "(height {5 {9} {1}}) -> 2", "(height {4}) -> 1"]}
{"time": 0.199119, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {7}}) -> 2", "(height {3 {1 {6 {4}}} {4 {2} {1 {0}}}}) -> 4", "(height {}) -> 0", "(height {}) -> 0", "(height {7 {9 {4}}}) -> 3"]}
{"time": 0.170486, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {}) -> 0", "(height {5 {5 {9} {3}} {8 {7} {9 {1}}}}) -> 4", "(height {7 {8} {9}}) -> 2", "(height {}) -> 0"]}
{"time": 0.205843, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0 {2 {9} {6}} {2}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {9}) -> 1", "(height {7}) -> 1"]}
{"time": 0.179993, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {4}}) -> 2", "(height {}) -> 0", "(height {8 {1 {1 {6} {8}}} {4 {3 {0}}}}) -> 4", "(height {5}) -> 1", "(height {6 {5}}) -> 2"]}
{"time": 0.199424, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {5 {4}} {3}}) -> 3", "(height {}) -> 0", "(height {2 {5} {5}}) -> 2", "(height {}) -> 0", "(height {8 {7 {8 {5}}} {5}}) -> 4"]}
{"time": 0.233947, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {6} {5}}) -> 2", "(height {5}) -> 1", "(height {4 {8 {9} {3}} {6 {6} {1 {9}}}}) -> 4", "(height {4 {7}}) -> 2", "(height {8 {7}}) -> 2"]}
{"time": 0.196645, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {5 {2 {9} {5}}} {1}}) -> 4", "(height {6 {4} {5}}) -> 2", "(height {9 {6}}) -> 2", "(height {4 {9}}) -> 2", "(height {6 {6 {4}}}) -> 3"]}
{"time": 0.231767, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {4} {8}}) -> 2", "(height {5 {1 {3}}}) -> 3", "(height {7}) -> 1", "(height {0 {3 {6} {3 {6} {1}}} {4 {6}}}) -> 4", "(height {2 {1}}) -> 2"]}
{"time": 0.183898, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {5 {9}}) -> 2", "(height {7}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.231332, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {6 {3 {6} {2}}} {8 {3 {3} {4}} {9 {3} {9}}}}) -> 4", "(height {1}) -> 1", "(height {}) -> 0", "(height {1}) -> 1", "(height {}) -> 0"]}
{"time": 0.168602, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {9}) -> 1", "(height {}) -> 0", "(height {0 {2 {0} {2}} {3 {2} {8}}}) -> 3", "(height {1}) -> 1"]}
{"time": 0.212872, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {7 {5} {2}} {4 {9} {7}}}) -> 3", "(height {2 {5} {5}}) -> 2", "(height {}) -> 0", "(height {8 {6 {4}}}) -> 3", "(height {4}) -> 1"]}
{"time": 0.219562, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {4}}) -> 2", "(height {3}) -> 1", "(height {}) -> 0", "(height {1 {2} {2 {5} {2}}}) -> 3", "(height {9 {3 {7 {2} {7}}}}) -> 4"]}
{"time": 0.194977, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {1 {0} {5}} {2 {8}}}) -> 3", "(height {4 {2}}) -> 2", "(height {0 {1 {0}}}) -> 3", "(height {9 {9} {5}}) -> 2", "(height {7 {9} {7}}) -> 2"]}
{"time": 0.168908, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {8}}) -> 2", "(height {6}) -> 1", "(height {3 {4}}) -> 2", "(height {6 {1} {5}}) -> 2", "(height {3 {3}}) -> 2"]}
{"time": 0.189061, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {9 {9}}) -> 2", "(height {2 {2} {9 {8} {8}}}) -> 3", "(height {}) -> 0", "(height {4 {8}}) -> 2", "(height {1 {6}}) -> 2"]}
{"time": 0.162985, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {8 {3} {3 {5 {4}} {6 {2} {6}}}}) -> 4", "(height {2}) -> 1", "(height {0 {8}}) -> 2", "(height {5 {6 {5 {5}} {0}} {9}}) -> 4"]}
{"time": 0.2264, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0", "(height {3}) -> 1", "(height {0 {1 {0}}}) -> 3", "(height {}) -> 0"]}
{"time": 0.186972, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {9} {5 {8} {2}}}) -> 3", "(height {8}) -> 1", "(height {7 {6 {4}}}) -> 3", "(height {9}) -> 1", "(height {6}) -> 1"]}
{"time": 0.195069, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0}) -> 1", "(height {4}) -> 1", "(height {3 {3 {1}} {5 {6} {5}}}) -> 3", "(height {0}) -> 1", "(height {3 {3}}) -> 2"]}
{"time": 0.224753, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {3 {5 {2}}}}) -> 4", "(height {4}) -> 1", "(height {}) -> 0", "(height {}) -> 0", "(height {5 {1 {0 {3}} {2 {0}}} {6 {0 {2}}}}) -> 4"]}
{"time": 0.178108, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {9}}) -> 2", "(height {}) -> 0", "(height {1 {5 {5 {1} {0}}}}) -> 4", "(height {7 {4 {8} {9}}}) -> 3", "(height {0 {0} {8}}) -> 2"]}
{"time": 0.210405, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {2 {8} {5}} {1 {6}}}) -> 3", "(height {3}) -> 1", "(height {4 {7 {4 {2} {4}} {3 {4}}} {3 {8} {4 {5} {2}}}}) -> 4", "(height {1 {7 {4 {0}}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.181497, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {5}}) -> 2", "(height {9}) -> 1", "(height {2 {8 {0} {7}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.2124, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 c)) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {2 {8 {4} {0}} {7 {7}}}}) -> 4", "(height {2 {0 {8} {6}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.180794, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {0} {3}}) -> 2", "(height {9 {4}}) -> 2", "(height {3}) -> 1", "(height {9 {6 {7}}}) -> 3", "(height {6}) -> 1"]}
{"time": 0.18211, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1}) -> 1", "(height {8 {5} {0}}) -> 2", "(height {4}) -> 1", "(height {7 {0 {9 {9}}} {1 {9 {8} {6}} {0}}}) -> 4", "(height {5 {7}}) -> 2"]}
{"time": 0.2011, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2 {6 {4} {5}} {4 {5} {6}}}) -> 3", "(height {2 {2} {5 {5} {0}}}) -> 3", "(height {6}) -> 1", "(height {5 {1} {8}}) -> 2", "(height {}) -> 0"]}
{"time": 0.195777, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {4 {2} {2}} {0 {9} {3}}}) -> 3", "(height {}) -> 0", "(height {}) -> 0", "(height {0}) -> 1", "(height {3}) -> 1"]}
{"time": 0.210479, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {3 {1 {8} {8}} {2}}) -> 3", "(height {7}) -> 1", "(height {4 {4} {8}}) -> 2", "(height {}) -> 0"]}
{"time": 0.16159, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 1)) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {2 {3}}) -> 2", "(height {}) -> 0", "(height {5 {1}}) -> 2", "(height {9 {6}}) -> 2"]}
{"time": 0.028068, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) c) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {4 {4 {6 {4}}}}) -> 4", "(height {1}) -> 1", "(height {3 {2 {2} {2}}}) -> 3", "(height {2 {2} {1}}) -> 2"]}
{"time": 0.167107, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4}) -> 1", "(height {5 {3 {2 {0} {8}} {9}} {3}}) -> 4", "(height {0}) -> 1", "(height {}) -> 0", "(height {5 {6} {0}}) -> 2"]}
{"time": 0.14538, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {5 {8} {8}}) -> 2", "(height {9 {0}}) -> 2", "(height {2 {6 {0 {6} {8}} {1}} {2}}) -> 4", "(height {}) -> 0"]}
{"time": 0.199505, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8}) -> 1", "(height {6 {7 {3 {5} {5}} {5}}}) -> 4", "(height {1 {6} {1}}) -> 2", "(height {8 {4 {1} {5}}}) -> 3", "(height {9}) -> 1"]}
{"time": 0.214783, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3 {4 {1}} {7 {7 {5}}}}) -> 4", "(height {1 {6}}) -> 2", "(height {7}) -> 1", "(height {8 {8 {1} {4}}}) -> 3", "(height {7}) -> 1"]}
{"time": 0.172481, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {4 {5}}) -> 2", "(height {0 {7} {4}}) -> 2", "(height {4 {1 {1 {4}} {8}}}) -> 4", "(height {8}) -> 1", "(height {6 {7 {2 {7}} {0 {1} {4}}}}) -> 4"]}
{"time": 0.198629, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {7 {8 {1} {3 {5}}}}) -> 4", "(height {2 {2} {3}}) -> 2", "(height {9}) -> 1", "(height {6 {0} {3}}) -> 2", "(height {1 {4} {2}}) -> 2"]}
{"time": 0.181491, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {5}}) -> 2", "(height {4}) -> 1", "(height {5 {5} {6}}) -> 2", "(height {}) -> 0", "(height {0}) -> 1"]}
{"time": 0.187378, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {0 {9} {6}}) -> 2", "(height {3 {6 {5}}}) -> 3", "(height {8 {7 {9}}}) -> 3", "(height {}) -> 0", "(height {1 {5}}) -> 2"]}
{"time": 0.186259, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {2}) -> 1", "(height {7 {4} {3}}) -> 2", "(height {0 {1}}) -> 2", "(height {3}) -> 1", "(height {}) -> 0"]}
{"time": 0.214459, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {9} {2 {6} {0}}}) -> 3", "(height {6}) -> 1", "(height {6 {2 {8}} {7 {3} {9}}}) -> 3", "(height {3 {2 {9} {1}} {0}}) -> 3", "(height {}) -> 0"]}
{"time": 0.213333, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8 {2 {7 {9} {6}}}}) -> 4", "(height {6 {6 {8} {7}}}) -> 3", "(height {5 {1 {0} {5}}}) -> 3", "(height {4 {5 {7 {2}}}}) -> 4", "(height {0 {7}}) -> 2"]}
{"time": 0.189013, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {5 {1 {6} {7}} {2 {1} {4}}}) -> 3", "(height {7}) -> 1", "(height {6}) -> 1", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.192761, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {}) -> 0", "(height {9 {8} {5}}) -> 2", "(height {4 {1 {9 {7}}} {2}}) -> 4", "(height {6 {3 {0 {0} {0}}} {4 {8}}}) -> 4", "(height {}) -> 0"]}
{"time": 0.191883, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {8}) -> 1", "(height {3 {7 {3 {8}} {1 {9}}} {9}}) -> 4", "(height {1}) -> 1", "(height {}) -> 0", "(height {1 {9 {3} {4}} {7 {5}}}) -> 3"]}
{"time": 0.197895, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {3}) -> 1", "(height {3 {4}}) -> 2", "(height {0}) -> 1", "(height {3 {1} {4}}) -> 2", "(height {6}) -> 1"]}
{"time": 0.128279, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {6 {0 {3 {3} {0}} {9}}}) -> 4", "(height {0 {8}}) -> 2", "(height {2 {0 {8}} {0}}) -> 3", "(height {}) -> 0", "(height {}) -> 0"]}
{"time": 0.106515, "solution": "(let height (let a (lambda (b) (foldt b (lambda (d c) (+ 1 (max d))) 0)) _) _)", "name": "height", "examples": ["(height {}) -> 0", "(height {1 {2}}) -> 2", "(height {1 {3 {5}} {4 {3}}}) -> 3", "(height {}) -> 0", "(height {3 {7} {5 {9}}}) -> 3", "(height {2 {5} {6}}) -> 2"]}
