{"time": 23.598732, "name": "evens", "examples": ["(evens []) -> []", "(evens [8]) -> [8]", "(evens [8 9]) -> [8]", "(evens [1 1 1 5 6]) -> [6]", "(evens []) -> []", "(evens [6 3 8 8]) -> [6 8 8]", "(evens []) -> []", "(evens [9 2 7 7]) -> [2]", "(evens [0 5 4 9 8]) -> [0 4 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.902296, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 6 0]) -> [6 0]", "(evens [4]) -> [4]", "(evens [3 5 5]) -> []", "(evens [0]) -> [0]", "(evens [8 1 8 8 7]) -> [8 8 8]", "(evens [7]) -> []", "(evens [9 4 4 5 6]) -> [4 4 6]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.964379, "name": "evens", "examples": ["(evens []) -> []", "(evens [0 1 9 6 5]) -> [0 6]", "(evens [3 6 0 0]) -> [6 0 0]", "(evens [4 3 1 1]) -> [4]", "(evens [6 6 1]) -> [6 6]", "(evens [6 2 3 0]) -> [6 2 0]", "(evens [8 1]) -> [8]", "(evens [3 1 7]) -> []", "(evens [1]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.424452, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 4 9]) -> [4]", "(evens [7 1 1 6]) -> [6]", "(evens [8 6]) -> [8 6]", "(evens []) -> []", "(evens [6 2 0 7 5]) -> [6 2 0]", "(evens [5 0]) -> [0]", "(evens [5]) -> []", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.514766, "name": "evens", "examples": ["(evens []) -> []", "(evens [5 5 8]) -> [8]", "(evens [3 1 2 4]) -> [2 4]", "(evens []) -> []", "(evens []) -> []", "(evens [2 8]) -> [2 8]", "(evens [1 9]) -> []", "(evens []) -> []", "(evens [5 7 0 6 0]) -> [0 6 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.765502, "name": "evens", "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [5 6]) -> [6]", "(evens []) -> []", "(evens [0 0 4 5]) -> [0 0 4]", "(evens []) -> []", "(evens []) -> []", "(evens [6 9 7 2 2]) -> [6 2 2]", "(evens [4 4 1 2 3]) -> [4 4 2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.839975, "name": "evens", "examples": ["(evens []) -> []", "(evens [2]) -> [2]", "(evens [7 2 2]) -> [2 2]", "(evens [2]) -> [2]", "(evens [1 0]) -> [0]", "(evens [2 9 0 4]) -> [2 0 4]", "(evens [6 9 1 7 8]) -> [6 8]", "(evens [3]) -> []", "(evens [3 5 4 1]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 30.458622, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [7]) -> []", "(evens [8]) -> [8]", "(evens [0 3]) -> [0]", "(evens []) -> []", "(evens [6 8 2]) -> [6 8 2]", "(evens [8 3 4 8 4]) -> [8 4 8 4]", "(evens [0]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 30.377615, "name": "evens", "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [3 9 0 5]) -> [0]", "(evens [3 6 1 8 7]) -> [6 8]", "(evens []) -> []", "(evens []) -> []", "(evens [9 3 7]) -> []", "(evens [9 0 1 4]) -> [0 4]", "(evens [0 5 5]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 0.083663, "name": "evens", "examples": ["(evens []) -> []", "(evens [0 0 8 1 8]) -> [0 0 8 8]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [1 0 4]) -> [0 4]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (!= 1 c)))) _) _)"}
{"time": 32.025771, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 4 5 4]) -> [6 4 4]", "(evens [5]) -> []", "(evens []) -> []", "(evens [5 4]) -> [4]", "(evens [7]) -> []", "(evens [7 7 1 5]) -> []", "(evens [9 2 8 2 2]) -> [2 8 2 2]", "(evens [5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.953283, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 0 1 3 0]) -> [8 0 0]", "(evens []) -> []", "(evens [5 3]) -> []", "(evens [5]) -> []", "(evens [9 6 2 9 5]) -> [6 2]", "(evens [3 1]) -> []", "(evens [4 0 4 9 6]) -> [4 0 4 6]", "(evens [1 2]) -> [2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 34.356054, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 9 5]) -> []", "(evens []) -> []", "(evens [7 2 7 5 4]) -> [2 4]", "(evens [5]) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [6]) -> [6]", "(evens [9 7 5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 36.275058, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [5 4 9 5 7]) -> [4]", "(evens [0 4]) -> [0 4]", "(evens [4 0 3]) -> [4 0]", "(evens [5 3 7 1 5]) -> []", "(evens [0]) -> [0]", "(evens []) -> []", "(evens [9 0 7 4 0]) -> [0 4 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 36.255448, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [9 0 8 0 0]) -> [0 8 0 0]", "(evens [1]) -> []", "(evens [7 4 7 8]) -> [4 8]", "(evens [4 6 2 5]) -> [4 6 2]", "(evens [4 5 0 3 6]) -> [4 0 6]", "(evens [2 4 9 2]) -> [2 4 2]", "(evens [1]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 37.822098, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [4 2 7 7]) -> [4 2]", "(evens []) -> []", "(evens [7 8 4 1 8]) -> [8 4 8]", "(evens [6 4]) -> [6 4]", "(evens []) -> []", "(evens [0 5]) -> [0]", "(evens [5 9 8 0 7]) -> [8 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 38.073518, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [8 4 8]) -> [8 4 8]", "(evens [6 0 7 4]) -> [6 0 4]", "(evens []) -> []", "(evens [5 8]) -> [8]", "(evens [5 7 3]) -> []", "(evens [3 1 6]) -> [6]", "(evens [6 8]) -> [6 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.030163, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 6 5 1]) -> [6]", "(evens [3]) -> []", "(evens []) -> []", "(evens [5 3 5 0 5]) -> [0]", "(evens []) -> []", "(evens [7 3 7 0]) -> [0]", "(evens []) -> []", "(evens [5 0]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 24.050567, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 7 2]) -> [2]", "(evens [6]) -> [6]", "(evens [6 3]) -> [6]", "(evens [3 8]) -> [8]", "(evens [3 7 6 5 7]) -> [6]", "(evens []) -> []", "(evens [9 3 3 8]) -> [8]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 29.494054, "name": "evens", "examples": ["(evens []) -> []", "(evens [0 8]) -> [0 8]", "(evens [8 5 4 4]) -> [8 4 4]", "(evens [1]) -> []", "(evens [4 5]) -> [4]", "(evens [5 6 3 8 7]) -> [6 8]", "(evens [9 4 9]) -> [4]", "(evens [8]) -> [8]", "(evens [0]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.774928, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 3 0 2]) -> [0 2]", "(evens [1 8 9 8 3]) -> [8 8]", "(evens []) -> []", "(evens [9]) -> []", "(evens [7 8]) -> [8]", "(evens [8 7 0]) -> [8 0]", "(evens [6 0 8 6]) -> [6 0 8 6]", "(evens [3]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 30.705025, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [7]) -> []", "(evens [0 9 3 0 3]) -> [0 0]", "(evens [9 9 8]) -> [8]", "(evens [1]) -> []", "(evens [4 7 6 9 0]) -> [4 6 0]", "(evens [9 4 5]) -> [4]", "(evens [8 8 0]) -> [8 8 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 34.936413, "name": "evens", "examples": ["(evens []) -> []", "(evens [4 2 8]) -> [4 2 8]", "(evens [5 2 9 7]) -> [2]", "(evens []) -> []", "(evens [9 6 4]) -> [6 4]", "(evens [0 1 3 7 8]) -> [0 8]", "(evens [1 1]) -> []", "(evens [1 7]) -> []", "(evens [9 9]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.651638, "name": "evens", "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [6 4 5 3 0]) -> [6 4 0]", "(evens [8]) -> [8]", "(evens [5 5 7 7 0]) -> [0]", "(evens []) -> []", "(evens [4 8 3 6]) -> [4 8 6]", "(evens [8 8 4]) -> [8 8 4]", "(evens [7 4 9 9]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.492039, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 3]) -> []", "(evens [2 6 4]) -> [2 6 4]", "(evens [4 8 9 7]) -> [4 8]", "(evens [7 2 3]) -> [2]", "(evens [8 8 9]) -> [8 8]", "(evens [4 9 6]) -> [4 6]", "(evens [9 7 5 2]) -> [2]", "(evens [4 1 4]) -> [4 4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.720491, "name": "evens", "examples": ["(evens []) -> []", "(evens [4 0 5]) -> [4 0]", "(evens [1 6]) -> [6]", "(evens [2 0]) -> [2 0]", "(evens [3 9]) -> []", "(evens [5 2]) -> [2]", "(evens [2 6 0 6]) -> [2 6 0 6]", "(evens [3 4 2 8 7]) -> [4 2 8]", "(evens [1 5 5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 29.128325, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 7 1 9]) -> [8]", "(evens [9 7 0 6 4]) -> [0 6 4]", "(evens [5 9 4 1 8]) -> [4 8]", "(evens [1]) -> []", "(evens [9]) -> []", "(evens [8 1 0 5]) -> [8 0]", "(evens [3 8 3 7]) -> [8]", "(evens [1]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 23.82933, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 4 4]) -> [4 4]", "(evens [0 8 8]) -> [0 8 8]", "(evens [2 3]) -> [2]", "(evens [4]) -> [4]", "(evens [6 1]) -> [6]", "(evens [3 0 0 5 6]) -> [0 0 6]", "(evens [3 7 8 0]) -> [8 0]", "(evens [9 8 9 1]) -> [8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.317882, "name": "evens", "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [9 2 1 3]) -> [2]", "(evens [5]) -> []", "(evens [9 5 1 8]) -> [8]", "(evens [2 8]) -> [2 8]", "(evens [6]) -> [6]", "(evens [1 6 1 6 4]) -> [6 6 4]", "(evens [5 6 0 5 9]) -> [6 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.083241, "name": "evens", "examples": ["(evens []) -> []", "(evens [0]) -> [0]", "(evens [5]) -> []", "(evens [3 2 6 5]) -> [2 6]", "(evens [9 8 2 5 7]) -> [8 2]", "(evens [7 8]) -> [8]", "(evens [5]) -> []", "(evens [4 6 9 5]) -> [4 6]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.31191, "name": "evens", "examples": ["(evens []) -> []", "(evens [2]) -> [2]", "(evens [5 1 9 6]) -> [6]", "(evens [6 1]) -> [6]", "(evens [1]) -> []", "(evens [3 2 5]) -> [2]", "(evens [3 9 8 4]) -> [8 4]", "(evens [8 2]) -> [8 2]", "(evens [7 9 0]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 36.607232, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 2 3 4]) -> [6 2 4]", "(evens [3 7 1 4 1]) -> [4]", "(evens []) -> []", "(evens [4 3]) -> [4]", "(evens [2 5 4]) -> [2 4]", "(evens [2 1 2]) -> [2 2]", "(evens [6 4]) -> [6 4]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 39.073823, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 8 4 9 5]) -> [8 4]", "(evens [3 7 8]) -> [8]", "(evens [6 6 7 7 8]) -> [6 6 8]", "(evens [0 8 6 0]) -> [0 8 6 0]", "(evens [7 6 2]) -> [6 2]", "(evens [9 5]) -> []", "(evens [3 1]) -> []", "(evens [0 0 7]) -> [0 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 20.701057, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 2 1]) -> [2]", "(evens [0]) -> [0]", "(evens [6 3 0 1]) -> [6 0]", "(evens [3 7 7 0 8]) -> [0 8]", "(evens []) -> []", "(evens []) -> []", "(evens [1 9]) -> []", "(evens [7 7 5 6 4]) -> [6 4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 23.566491, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 6 5]) -> [6 6]", "(evens [6 5 9 4]) -> [6 4]", "(evens [7 3]) -> []", "(evens [0 8 2 4]) -> [0 8 2 4]", "(evens [0]) -> [0]", "(evens [3 0 1]) -> [0]", "(evens [7 0 2 0 5]) -> [0 2 0]", "(evens [0 6 3 5 1]) -> [0 6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 28.3709, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 2 2]) -> [8 2 2]", "(evens [0 7 2]) -> [0 2]", "(evens [9 9 0 2 0]) -> [0 2 0]", "(evens [7 1 6 0 0]) -> [6 0 0]", "(evens [5 4]) -> [4]", "(evens [6]) -> [6]", "(evens [3 6]) -> [6]", "(evens [2 6 4]) -> [2 6 4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 22.353092, "name": "evens", "examples": ["(evens []) -> []", "(evens [8]) -> [8]", "(evens [0 0 6]) -> [0 0 6]", "(evens [7]) -> []", "(evens [1 9 1 4]) -> [4]", "(evens [0 6 0 0 1]) -> [0 6 0 0]", "(evens [7 8 9]) -> [8]", "(evens [7 8 0 2]) -> [8 0 2]", "(evens [8 9 4]) -> [8 4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 29.418588, "name": "evens", "examples": ["(evens []) -> []", "(evens [9]) -> []", "(evens [1 0 8]) -> [0 8]", "(evens []) -> []", "(evens [5 0]) -> [0]", "(evens [2 0 0]) -> [2 0 0]", "(evens []) -> []", "(evens [1 2]) -> [2]", "(evens [5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 34.600066, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [1 7 9 2]) -> [2]", "(evens [4 7]) -> [4]", "(evens [0 8 3 6]) -> [0 8 6]", "(evens [4 3]) -> [4]", "(evens [4]) -> [4]", "(evens [4 8 1 8]) -> [4 8 8]", "(evens [2 0]) -> [2 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.509495, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [6 9 4 4 4]) -> [6 4 4 4]", "(evens [8 9 8]) -> [8 8]", "(evens [8 6]) -> [8 6]", "(evens [9 9 7 1 6]) -> [6]", "(evens [4 8 4]) -> [4 8 4]", "(evens [9 6]) -> [6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 33.585587, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 9 8 5]) -> [8]", "(evens []) -> []", "(evens [8 9 3 7]) -> [8]", "(evens [8 6 2 7]) -> [8 6 2]", "(evens []) -> []", "(evens [8]) -> [8]", "(evens [4 4 0 9]) -> [4 4 0]", "(evens [3 5 5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 41.148452, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 4 0 5 1]) -> [4 0]", "(evens [6 3]) -> [6]", "(evens [1 5 1 0]) -> [0]", "(evens [4 6 6 4]) -> [4 6 6 4]", "(evens [5 5 5 2 1]) -> [2]", "(evens []) -> []", "(evens [1 0 8 6 8]) -> [0 8 6 8]", "(evens [6 2]) -> [6 2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 35.012574, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 9 9 6]) -> [6]", "(evens [0 5]) -> [0]", "(evens [0 8 4]) -> [0 8 4]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [3 1 2 1]) -> [2]", "(evens [2 8 3]) -> [2 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.204976, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 8]) -> [8 8]", "(evens [5]) -> []", "(evens [9 6 5]) -> [6]", "(evens [4 7]) -> [4]", "(evens [9 6 5 0]) -> [6 0]", "(evens [2 2 8 4]) -> [2 2 8 4]", "(evens [3 7 3 5 2]) -> [2]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 37.433683, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 7 3 5 2]) -> [2]", "(evens [3]) -> []", "(evens [1 6 0 4]) -> [6 0 4]", "(evens [4 2 0 3 4]) -> [4 2 0 4]", "(evens [2 1 2 6]) -> [2 2 6]", "(evens []) -> []", "(evens [5 7 7]) -> []", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 37.221395, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 9]) -> []", "(evens []) -> []", "(evens [3]) -> []", "(evens []) -> []", "(evens [9 3]) -> []", "(evens [2 6 7]) -> [2 6]", "(evens []) -> []", "(evens [4 4 6 3 5]) -> [4 4 6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 38.79571, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 3 9 5 4]) -> [6 4]", "(evens [0]) -> [0]", "(evens [2 1 0 2]) -> [2 0 2]", "(evens [0 7 9 3 1]) -> [0]", "(evens [9]) -> []", "(evens [6 0 0]) -> [6 0 0]", "(evens [2 4 1]) -> [2 4]", "(evens [9 0 0 7 8]) -> [0 0 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 33.168651, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 2 7 9 1]) -> [6 2]", "(evens [8 0 9 8 6]) -> [8 0 8 6]", "(evens [2 4]) -> [2 4]", "(evens [7 0 7]) -> [0]", "(evens [2 8 4]) -> [2 8 4]", "(evens []) -> []", "(evens [2]) -> [2]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 40.007994, "name": "evens", "examples": ["(evens []) -> []", "(evens [2 8 4 0 2]) -> [2 8 4 0 2]", "(evens [2]) -> [2]", "(evens [1 4 1]) -> [4]", "(evens [1]) -> []", "(evens []) -> []", "(evens [3]) -> []", "(evens [9 6]) -> [6]", "(evens [0 5]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 24.797082, "name": "evens", "examples": ["(evens []) -> []", "(evens [8]) -> [8]", "(evens []) -> []", "(evens [2 8 5 8 4]) -> [2 8 8 4]", "(evens [5 1 6]) -> [6]", "(evens [5]) -> []", "(evens [3 9 8]) -> [8]", "(evens []) -> []", "(evens [4 1 9 2]) -> [4 2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.57257, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 6]) -> [6]", "(evens []) -> []", "(evens []) -> []", "(evens [0 3 9 9 8]) -> [0 8]", "(evens []) -> []", "(evens []) -> []", "(evens [1 2 2 9 9]) -> [2 2]", "(evens [1 3]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.604384, "name": "evens", "examples": ["(evens []) -> []", "(evens [8]) -> [8]", "(evens [0 2 8 0 2]) -> [0 2 8 0 2]", "(evens [3]) -> []", "(evens []) -> []", "(evens [1 0 8 0]) -> [0 8 0]", "(evens [7]) -> []", "(evens [8 2 0 3 2]) -> [8 2 0 2]", "(evens [9]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 23.777799, "name": "evens", "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens [2]) -> [2]", "(evens [3 3 5 1]) -> []", "(evens [6 1 2 2 0]) -> [6 2 2 0]", "(evens [5 1 8 7 4]) -> [8 4]", "(evens [8 0 0 1 1]) -> [8 0 0]", "(evens [3]) -> []", "(evens [1 7]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 35.715338, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 7 7 3 5]) -> [6]", "(evens [9 7]) -> []", "(evens [1 1]) -> []", "(evens [7 7 5]) -> []", "(evens [9 8 2 5]) -> [8 2]", "(evens [2 7]) -> [2]", "(evens [0 5 7]) -> [0]", "(evens [7 9 7]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 37.466132, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 6 4 2]) -> [8 6 4 2]", "(evens [3 3 2 3]) -> [2]", "(evens [7 4 6 6]) -> [4 6 6]", "(evens [6 3 0 7 5]) -> [6 0]", "(evens [3 6 0 3 9]) -> [6 0]", "(evens []) -> []", "(evens [4 9 9 9 5]) -> [4]", "(evens [3 2 4 8]) -> [2 4 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 29.215934, "name": "evens", "examples": ["(evens []) -> []", "(evens [3 4 5 0]) -> [4 0]", "(evens [9 6 7 2 2]) -> [6 2 2]", "(evens [7 5]) -> []", "(evens [4]) -> [4]", "(evens [3 8 7]) -> [8]", "(evens [2 7]) -> [2]", "(evens [3 0 4]) -> [0 4]", "(evens [9 7]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.411783, "name": "evens", "examples": ["(evens []) -> []", "(evens [5]) -> []", "(evens [1 0]) -> [0]", "(evens [6 6]) -> [6 6]", "(evens [0 1 1]) -> [0]", "(evens [6 9 1 8]) -> [6 8]", "(evens [6]) -> [6]", "(evens [4]) -> [4]", "(evens [3 7 0]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 35.029296, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [5 5 6 2 7]) -> [6 2]", "(evens [3]) -> []", "(evens []) -> []", "(evens [2 6 0 2]) -> [2 6 0 2]", "(evens [8 0 5]) -> [8 0]", "(evens []) -> []", "(evens [8]) -> [8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 29.796703, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 3 3 0 0]) -> [0 0]", "(evens [1 5]) -> []", "(evens [5 2]) -> [2]", "(evens [3 5]) -> []", "(evens [0 0 2]) -> [0 0 2]", "(evens [3]) -> []", "(evens []) -> []", "(evens [7 0]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.08849, "name": "evens", "examples": ["(evens []) -> []", "(evens [2 8 3]) -> [2 8]", "(evens []) -> []", "(evens [2 9 5]) -> [2]", "(evens []) -> []", "(evens [1]) -> []", "(evens [2 2 0 5]) -> [2 2 0]", "(evens [3 6]) -> [6]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 33.259169, "name": "evens", "examples": ["(evens []) -> []", "(evens [3 7 0 2 2]) -> [0 2 2]", "(evens [7 7]) -> []", "(evens [7 6 5]) -> [6]", "(evens []) -> []", "(evens [1 7 3]) -> []", "(evens []) -> []", "(evens [4 9]) -> [4]", "(evens [4 0 3 8]) -> [4 0 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 31.854667, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 8 6]) -> [6 8 6]", "(evens [8 1 2 5 3]) -> [8 2]", "(evens [5]) -> []", "(evens [0]) -> [0]", "(evens [3 3 0 9 5]) -> [0]", "(evens [3 8]) -> [8]", "(evens [1 5]) -> []", "(evens [9 7 0 1 2]) -> [0 2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 30.529422, "name": "evens", "examples": ["(evens []) -> []", "(evens [2 4 2 4]) -> [2 4 2 4]", "(evens [1]) -> []", "(evens [0 5 4 4 1]) -> [0 4 4]", "(evens []) -> []", "(evens [1 6]) -> [6]", "(evens [7 2 6 1 0]) -> [2 6 0]", "(evens [7 0 1 0]) -> [0 0]", "(evens [7 0 8]) -> [0 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 31.747276, "name": "evens", "examples": ["(evens []) -> []", "(evens [4 8 0 5]) -> [4 8 0]", "(evens [1 7 4 1]) -> [4]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [2 1 3]) -> [2]", "(evens [2 0]) -> [2 0]", "(evens [5 3 7 4]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.131066, "name": "evens", "examples": ["(evens []) -> []", "(evens [4]) -> [4]", "(evens [7 6 7 1]) -> [6]", "(evens [0 2 6 7 0]) -> [0 2 6 0]", "(evens [9 6 1]) -> [6]", "(evens [8 5]) -> [8]", "(evens []) -> []", "(evens [6 3 3 6]) -> [6 6]", "(evens [9 2]) -> [2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 28.42325, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 6]) -> [6]", "(evens [4 7 3 9]) -> [4]", "(evens [2 1 3 0]) -> [2 0]", "(evens []) -> []", "(evens [0 1 1 0 7]) -> [0 0]", "(evens [4 7 0 8]) -> [4 0 8]", "(evens [9 8 2 7 8]) -> [8 2 8]", "(evens [1 3 4 9 2]) -> [4 2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.644794, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 7 2 6]) -> [2 6]", "(evens [0 8 6 0]) -> [0 8 6 0]", "(evens [3]) -> []", "(evens []) -> []", "(evens [8 5]) -> [8]", "(evens [5 8 3 0 6]) -> [8 0 6]", "(evens [4 7 8 1]) -> [4 8]", "(evens [3 4 3 3]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 39.390552, "name": "evens", "examples": ["(evens []) -> []", "(evens [5 6 0 6 2]) -> [6 0 6 2]", "(evens []) -> []", "(evens []) -> []", "(evens []) -> []", "(evens [5 8 5 4]) -> [8 4]", "(evens [5 3]) -> []", "(evens [7 0 1 1 9]) -> [0]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.459782, "name": "evens", "examples": ["(evens []) -> []", "(evens [2 3]) -> [2]", "(evens []) -> []", "(evens [8 4 5 7]) -> [8 4]", "(evens []) -> []", "(evens []) -> []", "(evens [4]) -> [4]", "(evens [0 9]) -> [0]", "(evens [7 8]) -> [8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 40.101807, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 8 2 8 9]) -> [8 2 8]", "(evens [7 4 7]) -> [4]", "(evens []) -> []", "(evens []) -> []", "(evens [5 3 7]) -> []", "(evens [2 9]) -> [2]", "(evens [7 7 5 1]) -> []", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 31.171131, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 8]) -> [8 8]", "(evens [0 4 8]) -> [0 4 8]", "(evens [2 6 2]) -> [2 6 2]", "(evens [9 4 3]) -> [4]", "(evens [8 7 2]) -> [8 2]", "(evens []) -> []", "(evens [2 5]) -> [2]", "(evens [6]) -> [6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.657908, "name": "evens", "examples": ["(evens []) -> []", "(evens [5 6 3]) -> [6]", "(evens [9]) -> []", "(evens []) -> []", "(evens [7]) -> []", "(evens []) -> []", "(evens [4 1 3 5]) -> [4]", "(evens [3 5]) -> []", "(evens [5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.469646, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [2 3 6]) -> [2 6]", "(evens [7 6 9 8 9]) -> [6 8]", "(evens [9 2 7]) -> [2]", "(evens [3 5 2 9]) -> [2]", "(evens [3 5 4]) -> [4]", "(evens [1 9 7 5 9]) -> []", "(evens [5 3 3 4]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 29.193381, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 0 3 7 0]) -> [0 0]", "(evens [5 1 0 1 5]) -> [0]", "(evens [6 7]) -> [6]", "(evens [8 7 5 7]) -> [8]", "(evens [7 4 2]) -> [4 2]", "(evens [0 4 8 2]) -> [0 4 8 2]", "(evens []) -> []", "(evens [7 2]) -> [2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.543181, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 4 5 9]) -> [4]", "(evens [2 2 1 3]) -> [2 2]", "(evens [3]) -> []", "(evens [2 9 9 0 3]) -> [2 0]", "(evens [9 9 8]) -> [8]", "(evens [3 3 1 3]) -> []", "(evens [1 6]) -> [6]", "(evens [1 6 2]) -> [6 2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 24.292353, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 4 6 5 8]) -> [4 6 8]", "(evens [5 2 0 0]) -> [2 0 0]", "(evens [2 3]) -> [2]", "(evens [2 9]) -> [2]", "(evens [0 1]) -> [0]", "(evens [6 7]) -> [6]", "(evens [8]) -> [8]", "(evens [3 5 4]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.446634, "name": "evens", "examples": ["(evens []) -> []", "(evens [7 1]) -> []", "(evens [9 7 8 6]) -> [8 6]", "(evens [6 1 3]) -> [6]", "(evens [9 6 3 5]) -> [6]", "(evens [9 8 6]) -> [8 6]", "(evens []) -> []", "(evens []) -> []", "(evens [8 6 7 7]) -> [8 6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 40.073054, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [7 6 6 4]) -> [6 6 4]", "(evens [5 5 7 4 8]) -> [4 8]", "(evens [2 4 3 3]) -> [2 4]", "(evens [6 3]) -> [6]", "(evens [9 0 2 7]) -> [0 2]", "(evens [5 9 8]) -> [8]", "(evens [8 1 6]) -> [8 6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 42.340866, "name": "evens", "examples": ["(evens []) -> []", "(evens [5 4 2 9 6]) -> [4 2 6]", "(evens [7 6]) -> [6]", "(evens [9 8 7 3 0]) -> [8 0]", "(evens [9 3 4 9 2]) -> [4 2]", "(evens [3 7 7 2]) -> [2]", "(evens [5 5 3 7 7]) -> []", "(evens [7 5]) -> []", "(evens [0 8 7 8]) -> [0 8 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.122256, "name": "evens", "examples": ["(evens []) -> []", "(evens [6]) -> [6]", "(evens []) -> []", "(evens [7 7 8]) -> [8]", "(evens [2 1 6]) -> [2 6]", "(evens [8 8]) -> [8 8]", "(evens [4]) -> [4]", "(evens []) -> []", "(evens [9 8 1 9 4]) -> [8 4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 34.863994, "name": "evens", "examples": ["(evens []) -> []", "(evens [3 4 9 0 1]) -> [4 0]", "(evens [2 2]) -> [2 2]", "(evens [3]) -> []", "(evens [1]) -> []", "(evens []) -> []", "(evens [7 8]) -> [8]", "(evens [2 1 3]) -> [2]", "(evens [8 8 5 5]) -> [8 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 32.980902, "name": "evens", "examples": ["(evens []) -> []", "(evens [5 1 8 9 6]) -> [8 6]", "(evens [4]) -> [4]", "(evens [0 7]) -> [0]", "(evens [3 8 6 5]) -> [8 6]", "(evens [3]) -> []", "(evens [7]) -> []", "(evens [8]) -> [8]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.776109, "name": "evens", "examples": ["(evens []) -> []", "(evens [8 2 7]) -> [8 2]", "(evens [9 9]) -> []", "(evens [0 2 3 6]) -> [0 2 6]", "(evens [1 2]) -> [2]", "(evens [9 0 4 4]) -> [0 4 4]", "(evens []) -> []", "(evens [9 9 7 5 1]) -> []", "(evens [4 6 9]) -> [4 6]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 30.021237, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 5 6 0]) -> [6 0]", "(evens [3 4 2 0]) -> [4 2 0]", "(evens [8 7]) -> [8]", "(evens [1 4 9 8 3]) -> [4 8]", "(evens [2]) -> [2]", "(evens [0 1]) -> [0]", "(evens [7 6 2]) -> [6 2]", "(evens [1 9 8]) -> [8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 21.969285, "name": "evens", "examples": ["(evens []) -> []", "(evens [6 0]) -> [6 0]", "(evens [7 7 5]) -> []", "(evens [0 2 1 7 2]) -> [0 2 2]", "(evens [1 7 5 6 3]) -> [6]", "(evens [2 6 8 2 8]) -> [2 6 8 2 8]", "(evens [1]) -> []", "(evens []) -> []", "(evens [2 0 6 0]) -> [2 0 6 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 24.452486, "name": "evens", "examples": ["(evens []) -> []", "(evens [7]) -> []", "(evens [9]) -> []", "(evens [3 5 6 5 7]) -> [6]", "(evens [4 1]) -> [4]", "(evens [8 5 0]) -> [8 0]", "(evens [0 0 7 2 1]) -> [0 0 2]", "(evens []) -> []", "(evens [3]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 28.307605, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [8]) -> [8]", "(evens [3 6]) -> [6]", "(evens [9 7 1 6 2]) -> [6 2]", "(evens [1 7 9 3]) -> []", "(evens [0 2]) -> [0 2]", "(evens []) -> []", "(evens [3 6 8 8]) -> [6 8 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.270103, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [7 8 4]) -> [8 4]", "(evens []) -> []", "(evens []) -> []", "(evens [6]) -> [6]", "(evens []) -> []", "(evens [0 2 6 3]) -> [0 2 6]", "(evens [9 7 3 7 7]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.561856, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 1 0 5 6]) -> [0 6]", "(evens [9 5 6 1 0]) -> [6 0]", "(evens [6]) -> [6]", "(evens [9]) -> []", "(evens []) -> []", "(evens [4]) -> [4]", "(evens [5 7 1 7]) -> []", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 38.445619, "name": "evens", "examples": ["(evens []) -> []", "(evens [4 2 4 4]) -> [4 2 4 4]", "(evens [4 7 4 2 5]) -> [4 4 2]", "(evens [3 9]) -> []", "(evens [9 2 3 4]) -> [2 4]", "(evens [9 1 2 0 6]) -> [2 0 6]", "(evens []) -> []", "(evens [9 1 7 7]) -> []", "(evens [6 4 7]) -> [6 4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 27.70564, "name": "evens", "examples": ["(evens []) -> []", "(evens [5 5 9]) -> []", "(evens [2]) -> [2]", "(evens [4]) -> [4]", "(evens [5 6 5]) -> [6]", "(evens [7 4 8 0]) -> [4 8 0]", "(evens [2 2 8]) -> [2 2 8]", "(evens [7]) -> []", "(evens [0 8]) -> [0 8]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 28.513477, "name": "evens", "examples": ["(evens []) -> []", "(evens [9]) -> []", "(evens [0 0 2 4]) -> [0 0 2 4]", "(evens []) -> []", "(evens [5 2 3 0]) -> [2 0]", "(evens [1 1]) -> []", "(evens [3 9 4 6 6]) -> [4 6 6]", "(evens [2 9]) -> [2]", "(evens [3 0 3 3]) -> [0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 23.368379, "name": "evens", "examples": ["(evens []) -> []", "(evens [3 9 4 3 7]) -> [4]", "(evens [5 3 8 0]) -> [8 0]", "(evens []) -> []", "(evens [8 1]) -> [8]", "(evens []) -> []", "(evens [0 8 2 4]) -> [0 8 2 4]", "(evens [5 1 3]) -> []", "(evens [2]) -> [2]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 28.092481, "name": "evens", "examples": ["(evens []) -> []", "(evens [5]) -> []", "(evens [1]) -> []", "(evens [7 5 9]) -> []", "(evens [0 2 4 7]) -> [0 2 4]", "(evens [3 5 5 7 9]) -> []", "(evens [2 4 2]) -> [2 4 2]", "(evens [8 6 1 2]) -> [8 6 2]", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 26.971176, "name": "evens", "examples": ["(evens []) -> []", "(evens [9 7 9]) -> []", "(evens [4 9]) -> [4]", "(evens [6 1 7]) -> [6]", "(evens [0]) -> [0]", "(evens [6]) -> [6]", "(evens [1 0 0]) -> [0 0]", "(evens [2 8 4 5]) -> [2 8 4]", "(evens [5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 20.429482, "name": "evens", "examples": ["(evens []) -> []", "(evens [2 4 6]) -> [2 4 6]", "(evens [0]) -> [0]", "(evens [6 0 6]) -> [6 0 6]", "(evens [7 8 0 4]) -> [8 0 4]", "(evens [9 4]) -> [4]", "(evens [3 2 2 9]) -> [2 2]", "(evens [0]) -> [0]", "(evens [0 1 4 0]) -> [0 4 0]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 34.826164, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [0 3 6 6 7]) -> [0 6 6]", "(evens []) -> []", "(evens [6 3 1]) -> [6]", "(evens [9 9]) -> []", "(evens []) -> []", "(evens [6 3 5]) -> [6]", "(evens [4 5]) -> [4]"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 18.08033, "name": "evens", "examples": ["(evens []) -> []", "(evens []) -> []", "(evens [9 6 5]) -> [6]", "(evens [8 3 6]) -> [8 6]", "(evens [1]) -> []", "(evens [7 6 2 1 1]) -> [6 2]", "(evens [3 6 7 1 6]) -> [6 6]", "(evens []) -> []", "(evens [5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 21.977262, "name": "evens", "examples": ["(evens []) -> []", "(evens [2 5 4 4]) -> [2 4 4]", "(evens []) -> []", "(evens [4]) -> [4]", "(evens [9]) -> []", "(evens [4 4 3 0 7]) -> [4 4 0]", "(evens [3 6 0 3 6]) -> [6 0 6]", "(evens [9 1 8 4 0]) -> [8 4 0]", "(evens [5]) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
{"time": 25.670575, "name": "evens", "examples": ["(evens []) -> []", "(evens [1 1]) -> []", "(evens [8 3 0 9]) -> [8 0]", "(evens [4 6 6]) -> [4 6 6]", "(evens [7 6 2]) -> [6 2]", "(evens [6 8 1 0]) -> [6 8 0]", "(evens [7 9 8 6]) -> [8 6]", "(evens []) -> []", "(evens []) -> []"], "solution": "(let evens (let a (lambda (b) (filter b (lambda (c) (= 0 (% c (+ 1 1)))))) _) _)"}
