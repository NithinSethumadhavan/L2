{"time": 0.143639, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[1 3] {[0 4]}}) -> [1 3 0 4]", "(flattenl {}) -> []", "(flattenl {[2] {[5 2 9 2] {[4 5 5 3]} {[7 5] {[]} {[9 0]}}}}) -> [2 5 2 9 2 4 5 5 3 7 5 9 0]", "(flattenl {[9 9 7] {[6 0 5 0 1]} {[3 1 5] {[1 2 5 5 5]}}}) -> [9 9 7 6 0 5 0 1 3 1 5 1 2 5 5 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 5 2]}) -> [7 5 2]", "(flattenl {[7 9 6]}) -> [7 9 6]", "(flattenl {[7 0 1] {[5 6 6 8 3]} {[3 7]}}) -> [7 0 1 5 6 6 8 3 3 7]", "(flattenl {[7 5] {[4 3] {[4 2 3 3]} {[9 1]}} {[4 0 9 1 5] {[1 4 2 6]} {[]}}}) -> [7 5 4 3 4 2 3 3 9 1 4 0 9 1 5 1 4 2 6]", "(flattenl {}) -> []", "(flattenl {[5 2]}) -> [5 2]", "(flattenl {[] {[7 0 0 5]}}) -> [7 0 0 5]", "(flattenl {[4 7]}) -> [4 7]", "(flattenl {[2 0 2 3] {[2 1 5 3 5]} {[7 3 8]}}) -> [2 0 2 3 2 1 5 3 5 7 3 8]", "(flattenl {}) -> []", "(flattenl {[9 6]}) -> [9 6]", "(flattenl {[0 7 8]}) -> [0 7 8]", "(flattenl {[3] {[3 6 1] {[8 9 8]} {[1 5 6]}} {[2 6 0 1 2] {[0 7 1 4]}}}) -> [3 3 6 1 8 9 8 1 5 6 2 6 0 1 2 0 7 1 4]", "(flattenl {[4] {[6 3 4 2 0]} {[7 9 3] {[9 0 3 9]} {[]}}}) -> [4 6 3 4 2 0 7 9 3 9 0 3 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.142931, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[4 4 9 2 2]}) -> [4 4 9 2 2]", "(flattenl {[0 6 2 7]}) -> [0 6 2 7]", "(flattenl {[4 5] {[9 3]}}) -> [4 5 9 3]", "(flattenl {}) -> []", "(flattenl {[3]}) -> [3]", "(flattenl {}) -> []", "(flattenl {[0 9] {[4]} {[4]}}) -> [0 9 4 4]", "(flattenl {[0 2] {[9 7 0] {[]}} {[1 4 2 6 4] {[2 6 7 4]}}}) -> [0 2 9 7 0 1 4 2 6 4 2 6 7 4]", "(flattenl {[1 6 3 6 2]}) -> [1 6 3 6 2]", "(flattenl {[5] {[9 2 8 1] {[5 1]} {[0 8] {[3]}}}}) -> [5 9 2 8 1 5 1 0 8 3]", "(flattenl {[0 9] {[] {[6 4 9 2]}}}) -> [0 9 6 4 9 2]", "(flattenl {[] {[0 7] {[8 4 7 8] {[3 7]}} {[] {[1]} {[5 7 2 2]}}}}) -> [0 7 8 4 7 8 3 7 1 5 7 2 2]", "(flattenl {[2 0 4 0]}) -> [2 0 4 0]", "(flattenl {[3 3 1 9]}) -> [3 3 1 9]", "(flattenl {[1 0 9 9]}) -> [1 0 9 9]", "(flattenl {}) -> []", "(flattenl {[7 8 1 5 8]}) -> [7 8 1 5 8]", "(flattenl {[8 8] {[9 5]}}) -> [8 8 9 5]", "(flattenl {[3] {[8 5 0] {[3 5] {[4 0]}} {[8]}}}) -> [3 8 5 0 3 5 4 0 8]", "(flattenl {}) -> []", "(flattenl {[] {[6 0]}}) -> [6 0]", "(flattenl {[] {[2 0 2 3]}}) -> [2 0 2 3]", "(flattenl {[4 7]}) -> [4 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.154905, "name": "flattenl", "examples": ["(flattenl {[1 8 7 7] {[1 3] {[0] {[1 5 2 2]}}} {[4 7 0 9 2] {[5 6] {[7 3 7 6]} {[1 1 4 7 8]}}}}) -> [1 8 7 7 1 3 0 1 5 2 2 4 7 0 9 2 5 6 7 3 7 6 1 1 4 7 8]", "(flattenl {[4]}) -> [4]", "(flattenl {[] {[1 6 5 2 1]} {[4 3]}}) -> [1 6 5 2 1 4 3]", "(flattenl {[5 4] {[9 8 8 1] {[]} {[5 8 8]}} {[4 6 1 1]}}) -> [5 4 9 8 8 1 5 8 8 4 6 1 1]", "(flattenl {[2 4 5 2 6] {[6]} {[] {[]} {[3 1 6 5 4] {[8 9 4 8]} {[2]}}}}) -> [2 4 5 2 6 6 3 1 6 5 4 8 9 4 8 2]", "(flattenl {[6 4]}) -> [6 4]", "(flattenl {[5 1 7 2]}) -> [5 1 7 2]", "(flattenl {[] {[8 1 4 6 2]} {[7]}}) -> [8 1 4 6 2 7]", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[0] {[2] {[2 2 7 4 1] {[7 1 0]} {[7 5 4]}}} {[7 3]}}) -> [0 2 2 2 7 4 1 7 1 0 7 5 4 7 3]", "(flattenl {[3 3 4] {[0 2] {[6 9]}}}) -> [3 3 4 0 2 6 9]", "(flattenl {[9]}) -> [9]", "(flattenl {[0 1]}) -> [0 1]", "(flattenl {[7 3] {[6 9 8 1 6] {[5 7] {[3 8 6 3 6]}}}}) -> [7 3 6 9 8 1 6 5 7 3 8 6 3 6]", "(flattenl {}) -> []", "(flattenl {[2 4] {[3 1 4 6 3] {[2 9 6] {[3 5 9 5]}} {[6 4 9 3 9]}} {[0]}}) -> [2 4 3 1 4 6 3 2 9 6 3 5 9 5 6 4 9 3 9 0]", "(flattenl {}) -> []", "(flattenl {[7 3 5 2]}) -> [7 3 5 2]", "(flattenl {[1 6 6 3 1] {[7 3]} {[0 3]}}) -> [1 6 6 3 1 7 3 0 3]", "(flattenl {[4 2 5 6]}) -> [4 2 5 6]", "(flattenl {[0 5 6 3 2]}) -> [0 5 6 3 2]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.158073, "name": "flattenl", "examples": ["(flattenl {[6 4 7 7] {[7 4 4 3]}}) -> [6 4 7 7 7 4 4 3]", "(flattenl {[3]}) -> [3]", "(flattenl {[9 7 5]}) -> [9 7 5]", "(flattenl {[3 4 0] {[7]} {[9 3 2]}}) -> [3 4 0 7 9 3 2]", "(flattenl {[] {[2 3 8 2]} {[3] {[8 7 4 6] {[]}} {[4 9 7 0]}}}) -> [2 3 8 2 3 8 7 4 6 4 9 7 0]", "(flattenl {}) -> []", "(flattenl {[] {[0 1] {[0]}}}) -> [0 1 0]", "(flattenl {}) -> []", "(flattenl {[3 4] {[8 1] {[5 6] {[6 1]}}}}) -> [3 4 8 1 5 6 6 1]", "(flattenl {}) -> []", "(flattenl {[9 1 3] {[4 5 9 0 8] {[]} {[3 1]}} {[6] {[1 7]}}}) -> [9 1 3 4 5 9 0 8 3 1 6 1 7]", "(flattenl {[1 3 3]}) -> [1 3 3]", "(flattenl {[7 7 5] {[0] {[0]} {[4 2 9] {[2 8]} {[4 3 9 2 7]}}} {[7 4 1] {[0 6 8] {[]} {[]}}}}) -> [7 7 5 0 0 4 2 9 2 8 4 3 9 2 7 7 4 1 0 6 8]", "(flattenl {[6] {[9 6 5 7 0]} {[]}}) -> [6 9 6 5 7 0]", "(flattenl {[1 3 3 8] {[3 5 6 1 0]} {[4 7 6 6]}}) -> [1 3 3 8 3 5 6 1 0 4 7 6 6]", "(flattenl {[6 9] {[6 7 2] {[2 7 0 6]}}}) -> [6 9 6 7 2 2 7 0 6]", "(flattenl {[1 1 4 8]}) -> [1 1 4 8]", "(flattenl {[7 9 1 9] {[5] {[0 8 6 7]}}}) -> [7 9 1 9 5 0 8 6 7]", "(flattenl {[]}) -> []", "(flattenl {[] {[2 9 4 0] {[7 8 1 2 7]}}}) -> [2 9 4 0 7 8 1 2 7]", "(flattenl {[4 8 0] {[1 5 4 9 2]} {[]}}) -> [4 8 0 1 5 4 9 2]", "(flattenl {}) -> []", "(flattenl {[3 5 5 8]}) -> [3 5 5 8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.136716, "name": "flattenl", "examples": ["(flattenl {[8 9] {[9 7 9] {[0]}} {[4 5 1 8]}}) -> [8 9 9 7 9 0 4 5 1 8]", "(flattenl {[] {[8 1 7]} {[9 0 5]}}) -> [8 1 7 9 0 5]", "(flattenl {[] {[6 8 0] {[5] {[1 6 3]}}} {[0 3 7]}}) -> [6 8 0 5 1 6 3 0 3 7]", "(flattenl {[4 8]}) -> [4 8]", "(flattenl {[] {[]} {[0 4 6 7]}}) -> [0 4 6 7]", "(flattenl {[4 9] {[4 6 7 0 4]}}) -> [4 9 4 6 7 0 4]", "(flattenl {[8 5 3 8 8] {[8]}}) -> [8 5 3 8 8 8]", "(flattenl {}) -> []", "(flattenl {[9 7 8 8] {[2 6 1]}}) -> [9 7 8 8 2 6 1]", "(flattenl {[0 1 6] {[6 4 9 3]} {[]}}) -> [0 1 6 6 4 9 3]", "(flattenl {[6 6 1 2 6] {[5 4 3 3 0]}}) -> [6 6 1 2 6 5 4 3 3 0]", "(flattenl {[9 2] {[7 7 0]}}) -> [9 2 7 7 0]", "(flattenl {}) -> []", "(flattenl {[] {[1] {[0]}}}) -> [1 0]", "(flattenl {[5 1 1 2 0]}) -> [5 1 1 2 0]", "(flattenl {}) -> []", "(flattenl {[4] {[6 4 0] {[7 4 3 0 4]} {[4 7 0]}}}) -> [4 6 4 0 7 4 3 0 4 4 7 0]", "(flattenl {[] {[6 1] {[6 6 4 0 3]} {[0]}} {[]}}) -> [6 1 6 6 4 0 3 0]", "(flattenl {[4 4] {[5] {[5 3 5 9] {[8 5 5]} {[6 4 6 4]}}} {[0]}}) -> [4 4 5 5 3 5 9 8 5 5 6 4 6 4 0]", "(flattenl {[7 0 4 3 8] {[6] {[5 8 4 7 8]} {[5 3 5 9 9]}} {[0 4]}}) -> [7 0 4 3 8 6 5 8 4 7 8 5 3 5 9 9 0 4]", "(flattenl {[7] {[] {[5 4 1 8 8]}} {[1 6 0 7] {[]}}}) -> [7 5 4 1 8 8 1 6 0 7]", "(flattenl {[]}) -> []", "(flattenl {[9 2 0] {[3] {[6 7 3]} {[] {[6]}}} {[] {[] {[0]} {[5 3 3 6 2]}} {[9]}}}) -> [9 2 0 3 6 7 3 6 0 5 3 3 6 2 9]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.16847, "name": "flattenl", "examples": ["(flattenl {[9] {[0 5] {[3 1 7 7 1] {[]}}} {[5 6 3] {[0 1] {[9 6 1 8 5]} {[6 1 8]}} {[3 3 7 9 4] {[]}}}}) -> [9 0 5 3 1 7 7 1 5 6 3 0 1 9 6 1 8 5 6 1 8 3 3 7 9 4]", "(flattenl {[1 7 9 6] {[5 0 4 7] {[9]} {[1 7 0]}}}) -> [1 7 9 6 5 0 4 7 9 1 7 0]", "(flattenl {[7 1 7 8 3] {[2]}}) -> [7 1 7 8 3 2]", "(flattenl {[6 9 0 4] {[1 4 5] {[3 6]}}}) -> [6 9 0 4 1 4 5 3 6]", "(flattenl {[0 1] {[]} {[]}}) -> [0 1]", "(flattenl {[4 1 9 4 0] {[]} {[6 4] {[9 9] {[9 6 4]}}}}) -> [4 1 9 4 0 6 4 9 9 9 6 4]", "(flattenl {[2] {[0]} {[] {[0 8 5]} {[7 6]}}}) -> [2 0 0 8 5 7 6]", "(flattenl {[2 0 8] {[0]} {[]}}) -> [2 0 8 0]", "(flattenl {[] {[4 0 8]}}) -> [4 0 8]", "(flattenl {[6 5 7 4]}) -> [6 5 7 4]", "(flattenl {[0] {[2] {[9 8 5] {[5 3 2 1 3]}} {[9 5 7 0] {[]} {[]}}} {[2 2 4 9] {[]} {[8 1 2] {[1]}}}}) -> [0 2 9 8 5 5 3 2 1 3 9 5 7 0 2 2 4 9 8 1 2 1]", "(flattenl {[9 1 5] {[6 9 9 6 8]}}) -> [9 1 5 6 9 9 6 8]", "(flattenl {[5 7 3 8 8] {[5] {[8 1 5 9]}}}) -> [5 7 3 8 8 5 8 1 5 9]", "(flattenl {}) -> []", "(flattenl {[0 8 4] {[8 5 8 2] {[3 8]} {[]}} {[1 3 4 1] {[7 1 6 2] {[]} {[1]}} {[6 1]}}}) -> [0 8 4 8 5 8 2 3 8 1 3 4 1 7 1 6 2 1 6 1]", "(flattenl {[8 7 5]}) -> [8 7 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 8 1 1] {[4 1 4 6]} {[]}}) -> [5 8 1 1 4 1 4 6]", "(flattenl {[1 6 2 2 1] {[]}}) -> [1 6 2 2 1]", "(flattenl {}) -> []", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.1749, "name": "flattenl", "examples": ["(flattenl {[] {[6 4] {[6 9]}} {[0 1]}}) -> [6 4 6 9 0 1]", "(flattenl {[3] {[5] {[2 7]}}}) -> [3 5 2 7]", "(flattenl {}) -> []", "(flattenl {[] {[8 2] {[0 5 7 2]}} {[] {[6 5 2 7]} {[]}}}) -> [8 2 0 5 7 2 6 5 2 7]", "(flattenl {[5 6] {[7] {[]}}}) -> [5 6 7]", "(flattenl {}) -> []", "(flattenl {[7 2 1] {[5 6 5]} {[1 7 8 7]}}) -> [7 2 1 5 6 5 1 7 8 7]", "(flattenl {[9 3]}) -> [9 3]", "(flattenl {[2] {[]}}) -> [2]", "(flattenl {[2] {[2 7 3]} {[2 7 0]}}) -> [2 2 7 3 2 7 0]", "(flattenl {[4] {[]} {[0 6 0] {[7 7]}}}) -> [4 0 6 0 7 7]", "(flattenl {[9 4 5] {[1 5]}}) -> [9 4 5 1 5]", "(flattenl {[1 9 1 2] {[4 1 7] {[0 2 6 6 4]} {[4 3 1]}}}) -> [1 9 1 2 4 1 7 0 2 6 6 4 4 3 1]", "(flattenl {[9 8] {[8 3 5]}}) -> [9 8 8 3 5]", "(flattenl {[1 0 2]}) -> [1 0 2]", "(flattenl {}) -> []", "(flattenl {[6] {[3 3] {[]}}}) -> [6 3 3]", "(flattenl {[6 9 2 5] {[5 5 9 6]}}) -> [6 9 2 5 5 5 9 6]", "(flattenl {[3 1 5 0 0] {[0 2] {[3 3 8 6] {[5]} {[]}}}}) -> [3 1 5 0 0 0 2 3 3 8 6 5]", "(flattenl {[9 2 6 2] {[6 9 2]}}) -> [9 2 6 2 6 9 2]", "(flattenl {[8 6 5 8 8] {[]}}) -> [8 6 5 8 8]", "(flattenl {[]}) -> []", "(flattenl {[7 5 4 2]}) -> [7 5 4 2]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.160342, "name": "flattenl", "examples": ["(flattenl {[2] {[6] {[0 3 5 3 7]}} {[2 2 8 6 4] {[4 5 4 0 3]}}}) -> [2 6 0 3 5 3 7 2 2 8 6 4 4 5 4 0 3]", "(flattenl {}) -> []", "(flattenl {[7] {[7 2 7 8] {[0 1]} {[8 8 1 1]}} {[3 1 2 4 8] {[1 8 8 0 9]} {[0 8 4 0]}}}) -> [7 7 2 7 8 0 1 8 8 1 1 3 1 2 4 8 1 8 8 0 9 0 8 4 0]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[4 5 5 8] {[5 9 5 0]} {[6]}}) -> [4 5 5 8 5 9 5 0 6]", "(flattenl {[8 1 5]}) -> [8 1 5]", "(flattenl {[8] {[4 3 6 3]} {[] {[2 0 0 4 5]} {[7 1 3 2 6]}}}) -> [8 4 3 6 3 2 0 0 4 5 7 1 3 2 6]", "(flattenl {[] {[]} {[0] {[7]} {[1 1 9 4]}}}) -> [0 7 1 1 9 4]", "(flattenl {[8] {[8 6] {[0 0 4 2]}}}) -> [8 8 6 0 0 4 2]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[2 0] {[7 6 9 0 6]} {[0 0 0]}}}) -> [2 0 7 6 9 0 6 0 0 0]", "(flattenl {}) -> []", "(flattenl {[3 4 3 8] {[] {[7] {[4 8 4]}} {[9 6 4 3 9]}} {[8 9 9]}}) -> [3 4 3 8 7 4 8 4 9 6 4 3 9 8 9 9]", "(flattenl {[2 7]}) -> [2 7]", "(flattenl {[8] {[3 2 1] {[4]} {[1 1 7 4]}}}) -> [8 3 2 1 4 1 1 7 4]", "(flattenl {[7 0 4 1] {[8 4]}}) -> [7 0 4 1 8 4]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[8]}) -> [8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.132536, "name": "flattenl", "examples": ["(flattenl {[2 7 8 7]}) -> [2 7 8 7]", "(flattenl {[1] {[2 7] {[8 7 1 8 1]} {[5 6 4 0]}}}) -> [1 2 7 8 7 1 8 1 5 6 4 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7]}) -> [7]", "(flattenl {[]}) -> []", "(flattenl {[0] {[6 9] {[1 0 9 5 3]} {[8 4 4]}} {[4 2 8]}}) -> [0 6 9 1 0 9 5 3 8 4 4 4 2 8]", "(flattenl {[4 6 9 2]}) -> [4 6 9 2]", "(flattenl {[4 8 8 4] {[]}}) -> [4 8 8 4]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {[2 3 4]}) -> [2 3 4]", "(flattenl {[] {[8 7]}}) -> [8 7]", "(flattenl {[9 6 7] {[0 0 5]} {[0 5]}}) -> [9 6 7 0 0 5 0 5]", "(flattenl {[3 5 9 2 6] {[3 7 6 8]} {[5 6 8 6]}}) -> [3 5 9 2 6 3 7 6 8 5 6 8 6]", "(flattenl {[4 7 2 1] {[9 5 7 0] {[2 1 2 6]} {[7]}}}) -> [4 7 2 1 9 5 7 0 2 1 2 6 7]", "(flattenl {[3 7 8 2 0] {[2]} {[] {[9 4 5] {[4 4 1]} {[3 7 5 1 2]}}}}) -> [3 7 8 2 0 2 9 4 5 4 4 1 3 7 5 1 2]", "(flattenl {[8 6 9]}) -> [8 6 9]", "(flattenl {}) -> []", "(flattenl {[5] {[9 5 5 6 6] {[4 7 8 4 0]}}}) -> [5 9 5 5 6 6 4 7 8 4 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 6 8] {[1 4] {[2 4 7 4 4]} {[7 6 6]}}}) -> [2 6 8 1 4 2 4 7 4 4 7 6 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.165149, "name": "flattenl", "examples": ["(flattenl {[4]}) -> [4]", "(flattenl {[3]}) -> [3]", "(flattenl {[1 1 7 8] {[6] {[1 3] {[5 2 8]} {[5 6]}} {[8 2 0]}} {[8 5 9]}}) -> [1 1 7 8 6 1 3 5 2 8 5 6 8 2 0 8 5 9]", "(flattenl {}) -> []", "(flattenl {[3]}) -> [3]", "(flattenl {[8 0 2 9 1] {[0 2 5]} {[1 7 9] {[]}}}) -> [8 0 2 9 1 0 2 5 1 7 9]", "(flattenl {[7] {[2 3 9 6] {[]} {[5] {[1 1]}}} {[5 6 2 1] {[6 5 4 1 2] {[]} {[6]}}}}) -> [7 2 3 9 6 5 1 1 5 6 2 1 6 5 4 1 2 6]", "(flattenl {}) -> []", "(flattenl {[8 3 2 1 6] {[3 2 2 4 0]} {[2 8] {[]} {[9 5]}}}) -> [8 3 2 1 6 3 2 2 4 0 2 8 9 5]", "(flattenl {[8] {[7 8]} {[3 4 5 5 5]}}) -> [8 7 8 3 4 5 5 5]", "(flattenl {[6 3 2]}) -> [6 3 2]", "(flattenl {}) -> []", "(flattenl {[0 2 7 0]}) -> [0 2 7 0]", "(flattenl {[6] {[]}}) -> [6]", "(flattenl {[2 2 2] {[3 9] {[]} {[3 4 0 9 3]}}}) -> [2 2 2 3 9 3 4 0 9 3]", "(flattenl {[7 1 9 5 2] {[3 6 7 3]} {[]}}) -> [7 1 9 5 2 3 6 7 3]", "(flattenl {}) -> []", "(flattenl {[7 4 4] {[3 1 1] {[6 2 8 4 3]}} {[]}}) -> [7 4 4 3 1 1 6 2 8 4 3]", "(flattenl {[0 4] {[]}}) -> [0 4]", "(flattenl {[9 4 0 9] {[9 3]}}) -> [9 4 0 9 9 3]", "(flattenl {}) -> []", "(flattenl {[1 3 5] {[0 5 4]} {[9 1] {[0 6 2 2 1]}}}) -> [1 3 5 0 5 4 9 1 0 6 2 2 1]", "(flattenl {[3 6 8] {[1 3 9 8 0] {[4 7 4 0]}} {[7 3] {[0]}}}) -> [3 6 8 1 3 9 8 0 4 7 4 0 7 3 0]", "(flattenl {[3 1 2 5 1] {[8 0 8 9]}}) -> [3 1 2 5 1 8 0 8 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.153581, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 2 2 3] {[2]} {[0 0 1 9] {[2]}}}) -> [5 2 2 3 2 0 0 1 9 2]", "(flattenl {}) -> []", "(flattenl {[8 9 0 8] {[7 7 4 7]}}) -> [8 9 0 8 7 7 4 7]", "(flattenl {[1 8 0 4] {[6 8 4 5 0] {[7]}} {[] {[2 1 1 0]}}}) -> [1 8 0 4 6 8 4 5 0 7 2 1 1 0]", "(flattenl {}) -> []", "(flattenl {[3 9 5 9] {[0] {[0 4] {[]} {[2 8 3 5]}}}}) -> [3 9 5 9 0 0 4 2 8 3 5]", "(flattenl {}) -> []", "(flattenl {[3 1 4] {[2 7]}}) -> [3 1 4 2 7]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {[8 8 3 5] {[9 8 8 8] {[4 1 4] {[5 5 2 1]} {[9 8 4 0 3]}} {[2 6 8] {[]}}} {[0 2] {[0 7 8 9]}}}) -> [8 8 3 5 9 8 8 8 4 1 4 5 5 2 1 9 8 4 0 3 2 6 8 0 2 0 7 8 9]", "(flattenl {[8 4 6] {[4 5 7]} {[1]}}) -> [8 4 6 4 5 7 1]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[5 1] {[7 7] {[6 6 8 7]} {[2 5]}} {[3 5]}}) -> [5 1 7 7 6 6 8 7 2 5 3 5]", "(flattenl {[7 1 5 4] {[9 2]}}) -> [7 1 5 4 9 2]", "(flattenl {}) -> []", "(flattenl {[8]}) -> [8]", "(flattenl {[1 8 3 7 9] {[8] {[3 8 0 0]}} {[6 9 2] {[1 5 3]} {[3]}}}) -> [1 8 3 7 9 8 3 8 0 0 6 9 2 1 5 3 3]", "(flattenl {[0 1]}) -> [0 1]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.172472, "name": "flattenl", "examples": ["(flattenl {[9 1]}) -> [9 1]", "(flattenl {}) -> []", "(flattenl {[3 9 0 7 1]}) -> [3 9 0 7 1]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[]} {[4 8 0 8]}}) -> [4 8 0 8]", "(flattenl {}) -> []", "(flattenl {[1 4 6]}) -> [1 4 6]", "(flattenl {[9] {[6 5 5 1]} {[1 8 6 0] {[4] {[6 8 5 8 3]}}}}) -> [9 6 5 5 1 1 8 6 0 4 6 8 5 8 3]", "(flattenl {[1 8 8]}) -> [1 8 8]", "(flattenl {}) -> []", "(flattenl {[7 6]}) -> [7 6]", "(flattenl {[8 2 8 1] {[1 1 2]} {[6 1 1] {[8 9 3 7 6]}}}) -> [8 2 8 1 1 1 2 6 1 1 8 9 3 7 6]", "(flattenl {[]}) -> []", "(flattenl {[0 4 1 8 9] {[0 6]}}) -> [0 4 1 8 9 0 6]", "(flattenl {[] {[9 8 3]}}) -> [9 8 3]", "(flattenl {[9]}) -> [9]", "(flattenl {[2 7 4 9]}) -> [2 7 4 9]", "(flattenl {[5 2 5] {[2 0 3 6]}}) -> [5 2 5 2 0 3 6]", "(flattenl {[9 3] {[7 7]}}) -> [9 3 7 7]", "(flattenl {[]}) -> []", "(flattenl {[] {[5 6] {[9] {[0 7]} {[9 6 0 0 7]}}}}) -> [5 6 9 0 7 9 6 0 0 7]", "(flattenl {[6] {[1 9 8]} {[4 1 3 1 2]}}) -> [6 1 9 8 4 1 3 1 2]", "(flattenl {[0 4 6 3 1] {[8]} {[0 8 5]}}) -> [0 4 6 3 1 8 0 8 5]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.16497, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[0 1 8 5] {[1 0] {[2 9 2 3 7] {[0 6 3 1 7]} {[4]}}}}) -> [0 1 8 5 1 0 2 9 2 3 7 0 6 3 1 7 4]", "(flattenl {[5] {[9 5 8 9]}}) -> [5 9 5 8 9]", "(flattenl {[0 3 2 0 1] {[2]}}) -> [0 3 2 0 1 2]", "(flattenl {[1]}) -> [1]", "(flattenl {[3] {[8 4 0 0]} {[] {[]} {[3] {[6 9]}}}}) -> [3 8 4 0 0 3 6 9]", "(flattenl {}) -> []", "(flattenl {[1 8 7 5 0] {[1] {[3 0 8]} {[]}}}) -> [1 8 7 5 0 1 3 0 8]", "(flattenl {[4] {[5 8]}}) -> [4 5 8]", "(flattenl {[2] {[1 2] {[4 2]}} {[4 8 3 8 9] {[3 8]} {[6 5 9 2 2]}}}) -> [2 1 2 4 2 4 8 3 8 9 3 8 6 5 9 2 2]", "(flattenl {[2] {[]}}) -> [2]", "(flattenl {}) -> []", "(flattenl {[2 5 0]}) -> [2 5 0]", "(flattenl {}) -> []", "(flattenl {[9 5] {[5 3 5 5 3] {[0] {[9]}}}}) -> [9 5 5 3 5 5 3 0 9]", "(flattenl {[] {[0 6 8 7] {[7 9 5 9] {[2]} {[]}} {[] {[]} {[3 7 1]}}}}) -> [0 6 8 7 7 9 5 9 2 3 7 1]", "(flattenl {[5 3 6] {[2 2 8 6 0] {[0 1 8]}} {[9] {[0 0 7] {[5 5 0 5 3]} {[9 9 4 3 3]}} {[7 5 1 0 2] {[7 2 1 2]} {[]}}}}) -> [5 3 6 2 2 8 6 0 0 1 8 9 0 0 7 5 5 0 5 3 9 9 4 3 3 7 5 1 0 2 7 2 1 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[9 2 0 3] {[1 5 8 7]}}) -> [9 2 0 3 1 5 8 7]", "(flattenl {[4 3 6] {[1 6 5 6 7]} {[1 5 8 7]}}) -> [4 3 6 1 6 5 6 7 1 5 8 7]", "(flattenl {[]}) -> []", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.169679, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9 4 0 8]}) -> [9 4 0 8]", "(flattenl {}) -> []", "(flattenl {[0 8 7] {[8 0] {[5 0 5]}} {[4 5] {[8 2 9 2]}}}) -> [0 8 7 8 0 5 0 5 4 5 8 2 9 2]", "(flattenl {[2 2 6] {[6 2] {[3]}} {[6] {[4 6]} {[0 0 3 9 6]}}}) -> [2 2 6 6 2 3 6 4 6 0 0 3 9 6]", "(flattenl {[0] {[0 6 0 2 3]} {[]}}) -> [0 0 6 0 2 3]", "(flattenl {}) -> []", "(flattenl {[4 2 5] {[] {[3 9 2]} {[]}} {[2] {[1 6]} {[2 8 2 2]}}}) -> [4 2 5 3 9 2 2 1 6 2 8 2 2]", "(flattenl {[5 7 7 4]}) -> [5 7 7 4]", "(flattenl {[9 7 9 7 9]}) -> [9 7 9 7 9]", "(flattenl {[9 0 3] {[0 0] {[6 1]}}}) -> [9 0 3 0 0 6 1]", "(flattenl {[1 2 2 6 5]}) -> [1 2 2 6 5]", "(flattenl {[1] {[] {[4 1 5 0]}} {[1 0 1 2 5] {[6 8 0 2 6]}}}) -> [1 4 1 5 0 1 0 1 2 5 6 8 0 2 6]", "(flattenl {[3 2] {[]} {[6 9]}}) -> [3 2 6 9]", "(flattenl {}) -> []", "(flattenl {[5 9] {[0 2 2 1] {[8 4 5 7]}} {[7 6]}}) -> [5 9 0 2 2 1 8 4 5 7 7 6]", "(flattenl {}) -> []", "(flattenl {[5 4 3] {[8 0 7 5] {[0 8 6]}}}) -> [5 4 3 8 0 7 5 0 8 6]", "(flattenl {[0 1 7 0] {[7 2 8 1 3]}}) -> [0 1 7 0 7 2 8 1 3]", "(flattenl {[5] {[6 2 7 2 2]}}) -> [5 6 2 7 2 2]", "(flattenl {[5 2] {[1 4 0]}}) -> [5 2 1 4 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.194404, "name": "flattenl", "examples": ["(flattenl {[9 3 4] {[0 4 0 5 7] {[7 0 7 5]} {[1 9 5]}} {[4 9] {[]} {[0 4 0]}}}) -> [9 3 4 0 4 0 5 7 7 0 7 5 1 9 5 4 9 0 4 0]", "(flattenl {[7 9 4] {[1 2 3] {[0 9 1]}}}) -> [7 9 4 1 2 3 0 9 1]", "(flattenl {[] {[5 2]}}) -> [5 2]", "(flattenl {[4 5 1 6]}) -> [4 5 1 6]", "(flattenl {[1] {[3] {[3]} {[] {[4 0 5 4]} {[8 1 5 5]}}}}) -> [1 3 3 4 0 5 4 8 1 5 5]", "(flattenl {[9 8 6 3 3] {[9]} {[9 5 1] {[5 1 4 0 8]} {[]}}}) -> [9 8 6 3 3 9 9 5 1 5 1 4 0 8]", "(flattenl {}) -> []", "(flattenl {[3 0 1] {[9 8 7 0 8]}}) -> [3 0 1 9 8 7 0 8]", "(flattenl {[6 2 9 6 5]}) -> [6 2 9 6 5]", "(flattenl {[7 6 4 0] {[4 8 5 6]} {[7 1]}}) -> [7 6 4 0 4 8 5 6 7 1]", "(flattenl {[3 7 2] {[]}}) -> [3 7 2]", "(flattenl {}) -> []", "(flattenl {[0] {[6 6 7 0 3]}}) -> [0 6 6 7 0 3]", "(flattenl {}) -> []", "(flattenl {[3]}) -> [3]", "(flattenl {[1 4 6 8 8]}) -> [1 4 6 8 8]", "(flattenl {[9 6 0] {[9]}}) -> [9 6 0 9]", "(flattenl {[9 6 1] {[9 7 2 0] {[3 1]}}}) -> [9 6 1 9 7 2 0 3 1]", "(flattenl {[0 9] {[9 7]} {[0 5 5 9] {[7 9 3 9]} {[8]}}}) -> [0 9 9 7 0 5 5 9 7 9 3 9 8]", "(flattenl {[5 1 5]}) -> [5 1 5]", "(flattenl {}) -> []", "(flattenl {[7] {[2 5 1 0 9] {[0] {[3 1 1]} {[3 4]}}}}) -> [7 2 5 1 0 9 0 3 1 1 3 4]", "(flattenl {[1]}) -> [1]", "(flattenl {[9 6] {[8 1 1 2 4]} {[5]}}) -> [9 6 8 1 1 2 4 5]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.161007, "name": "flattenl", "examples": ["(flattenl {[3 8] {[9]} {[0 9 2 5]}}) -> [3 8 9 0 9 2 5]", "(flattenl {[6 9 8] {[5 0 9 2 7] {[8 7]} {[8 2]}} {[4] {[4 3 6 0]} {[1 5]}}}) -> [6 9 8 5 0 9 2 7 8 7 8 2 4 4 3 6 0 1 5]", "(flattenl {[1 9 7]}) -> [1 9 7]", "(flattenl {[1 2 7 4]}) -> [1 2 7 4]", "(flattenl {[1 3] {[8 0 6 3]}}) -> [1 3 8 0 6 3]", "(flattenl {[]}) -> []", "(flattenl {[1 9 0] {[]} {[6 0]}}) -> [1 9 0 6 0]", "(flattenl {[] {[0 1 8] {[9 7 2 5]} {[4 7]}} {[] {[4 1 0 4 1]}}}) -> [0 1 8 9 7 2 5 4 7 4 1 0 4 1]", "(flattenl {[0 1 7 4 1] {[5 0 9 9] {[9 4] {[4 0 8]} {[]}} {[6 2 8] {[9 7 6]} {[7 1 0 6 0]}}}}) -> [0 1 7 4 1 5 0 9 9 9 4 4 0 8 6 2 8 9 7 6 7 1 0 6 0]", "(flattenl {}) -> []", "(flattenl {[6 1 8 5] {[]} {[9 0 0 5 8]}}) -> [6 1 8 5 9 0 0 5 8]", "(flattenl {}) -> []", "(flattenl {[0 9 1 3 5]}) -> [0 9 1 3 5]", "(flattenl {[9 6 1]}) -> [9 6 1]", "(flattenl {[8 2] {[0 1 5 3] {[8 4]}} {[]}}) -> [8 2 0 1 5 3 8 4]", "(flattenl {[]}) -> []", "(flattenl {[5 0 0 5 3]}) -> [5 0 0 5 3]", "(flattenl {[0 1 1 8]}) -> [0 1 1 8]", "(flattenl {[9 3] {[4 2]} {[3 8 4 7]}}) -> [9 3 4 2 3 8 4 7]", "(flattenl {[0] {[9]}}) -> [0 9]", "(flattenl {[] {[] {[5 5 7]} {[9 3 1]}} {[0 2 2 0 4] {[2 3 7]}}}) -> [5 5 7 9 3 1 0 2 2 0 4 2 3 7]", "(flattenl {[1 8 9] {[2]} {[6 0 7 0 9] {[8] {[6 9 3 0]}}}}) -> [1 8 9 2 6 0 7 0 9 8 6 9 3 0]", "(flattenl {[0 3]}) -> [0 3]", "(flattenl {[6] {[6 6 9 4] {[8 0 3 2]} {[2 6]}}}) -> [6 6 6 9 4 8 0 3 2 2 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.136281, "name": "flattenl", "examples": ["(flattenl {[] {[5] {[1 1 6] {[6 3]}} {[] {[6 2 8 7 6]} {[0]}}} {[3 9] {[4 6 6] {[7]} {[0 3 7]}} {[7 1]}}}) -> [5 1 1 6 6 3 6 2 8 7 6 0 3 9 4 6 6 7 0 3 7 7 1]", "(flattenl {[] {[9 3 4]} {[0 9 4] {[7 3]}}}) -> [9 3 4 0 9 4 7 3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 9 6 8 2]}) -> [7 9 6 8 2]", "(flattenl {[8 8] {[1 7 1 1]} {[0]}}) -> [8 8 1 7 1 1 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9 8 0 5] {[]} {[8 7 0 4]}}) -> [9 8 0 5 8 7 0 4]", "(flattenl {[3 9]}) -> [3 9]", "(flattenl {}) -> []", "(flattenl {[6 3 8 1] {[8 6 7 9]}}) -> [6 3 8 1 8 6 7 9]", "(flattenl {[] {[] {[3 6 3 5] {[8 6 1 3 8]}}} {[0 9 3 8 2] {[6 4] {[8 5 3]} {[7]}} {[] {[0 3 9 6]} {[1]}}}}) -> [3 6 3 5 8 6 1 3 8 0 9 3 8 2 6 4 8 5 3 7 0 3 9 6 1]", "(flattenl {[]}) -> []", "(flattenl {[0 8 9 7 4] {[5 5 4 4]}}) -> [0 8 9 7 4 5 5 4 4]", "(flattenl {[9] {[5 6 6 2]}}) -> [9 5 6 6 2]", "(flattenl {[5] {[6 8] {[4 3 8 8]}}}) -> [5 6 8 4 3 8 8]", "(flattenl {[5 1] {[4 7 2 2 7] {[0 0] {[7 9 5 6]}} {[] {[4]}}}}) -> [5 1 4 7 2 2 7 0 0 7 9 5 6 4]", "(flattenl {}) -> []", "(flattenl {[2] {[8 3]} {[2] {[9 5 2]}}}) -> [2 8 3 2 9 5 2]", "(flattenl {[]}) -> []", "(flattenl {[8 2 7 2 8] {[3 7 9 0 7]}}) -> [8 2 7 2 8 3 7 9 0 7]", "(flattenl {[7 2 3]}) -> [7 2 3]", "(flattenl {[6 8 7 8]}) -> [6 8 7 8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.127413, "name": "flattenl", "examples": ["(flattenl {[0 4 1 6 3]}) -> [0 4 1 6 3]", "(flattenl {[] {[5 4 5 3]}}) -> [5 4 5 3]", "(flattenl {}) -> []", "(flattenl {[9 3 3 5] {[0 5]} {[8 7 7]}}) -> [9 3 3 5 0 5 8 7 7]", "(flattenl {[8 7 2] {[0 9]}}) -> [8 7 2 0 9]", "(flattenl {[]}) -> []", "(flattenl {[2 3 4] {[2]} {[0] {[]} {[2]}}}) -> [2 3 4 2 0 2]", "(flattenl {[0 3] {[6]} {[2 5 8 0]}}) -> [0 3 6 2 5 8 0]", "(flattenl {[1] {[7 7]} {[3 9 1]}}) -> [1 7 7 3 9 1]", "(flattenl {[]}) -> []", "(flattenl {[6 5 5]}) -> [6 5 5]", "(flattenl {[] {[5 5 4 2 6]} {[6]}}) -> [5 5 4 2 6 6]", "(flattenl {[] {[3 2 5 1 3] {[0 8 4 2] {[]} {[0]}} {[3 6 4 9] {[9 8 7 6]} {[7 5]}}}}) -> [3 2 5 1 3 0 8 4 2 0 3 6 4 9 9 8 7 6 7 5]", "(flattenl {}) -> []", "(flattenl {[7 1 8 7]}) -> [7 1 8 7]", "(flattenl {}) -> []", "(flattenl {[9] {[7]} {[7] {[2 5 5] {[9 9]} {[1 2 7 0]}}}}) -> [9 7 7 2 5 5 9 9 1 2 7 0]", "(flattenl {[2 1 9 6 3] {[7 0 7]}}) -> [2 1 9 6 3 7 0 7]", "(flattenl {[6 5 7 3 7] {[6] {[] {[4 6]} {[6 1]}} {[1 5 3 0 8] {[3 1 7 7 3]} {[9 3 4 8]}}} {[9 3] {[0 3 6 6]}}}) -> [6 5 7 3 7 6 4 6 6 1 1 5 3 0 8 3 1 7 7 3 9 3 4 8 9 3 0 3 6 6]", "(flattenl {[6 8 0 0 2] {[5 9 0] {[] {[0]} {[4 7]}} {[6 5 2 0] {[]} {[2 7 6 7 1]}}} {[2 8 3] {[5 0 8] {[4 1 2 1]}} {[7 0] {[1 5]}}}}) -> [6 8 0 0 2 5 9 0 0 4 7 6 5 2 0 2 7 6 7 1 2 8 3 5 0 8 4 1 2 1 7 0 1 5]", "(flattenl {[0] {[1 8 7 7 2] {[] {[6 0]} {[1 5]}} {[5 5]}}}) -> [0 1 8 7 7 2 6 0 1 5 5 5]", "(flattenl {}) -> []", "(flattenl {[7 6 8]}) -> [7 6 8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.109062, "name": "flattenl", "examples": ["(flattenl {[9 9 9 8]}) -> [9 9 9 8]", "(flattenl {}) -> []", "(flattenl {[9 8 6 2] {[2 4 2 4 2]}}) -> [9 8 6 2 2 4 2 4 2]", "(flattenl {[7 0 0]}) -> [7 0 0]", "(flattenl {[0 6] {[3 3 0 8 9] {[7 2 1 7 6] {[1]}} {[3 3 1 4 2] {[1 2 3]}}} {[7 1 8]}}) -> [0 6 3 3 0 8 9 7 2 1 7 6 1 3 3 1 4 2 1 2 3 7 1 8]", "(flattenl {[2] {[] {[9 9] {[1 8 2 4 7]}}}}) -> [2 9 9 1 8 2 4 7]", "(flattenl {[4 1 9 9 3] {[7 2 8 5 8]}}) -> [4 1 9 9 3 7 2 8 5 8]", "(flattenl {[5 7 2 5] {[2 8]}}) -> [5 7 2 5 2 8]", "(flattenl {[7] {[6 5 3 9 4] {[3]}} {[4 6 1 2 1]}}) -> [7 6 5 3 9 4 3 4 6 1 2 1]", "(flattenl {[1 1 8] {[0 3 5] {[1 7 5 6 8]} {[6 1]}}}) -> [1 1 8 0 3 5 1 7 5 6 8 6 1]", "(flattenl {[8 8]}) -> [8 8]", "(flattenl {[9 0 4 9] {[6 6 3 7] {[5] {[]}} {[4 3 5] {[5]} {[5 8 1 9 5]}}} {[6 7] {[5 8] {[]} {[0]}}}}) -> [9 0 4 9 6 6 3 7 5 4 3 5 5 5 8 1 9 5 6 7 5 8 0]", "(flattenl {[5 3 4 1 2] {[5]} {[1 7 0 9]}}) -> [5 3 4 1 2 5 1 7 0 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[1 5] {[3] {[8 8 5]}} {[0]}}) -> [1 5 3 8 8 5 0]", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[0 2 1 3]}) -> [0 2 1 3]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.171468, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[1 8 1 9 1] {[2 3 8 7] {[7 7] {[6 0 5 4 2]} {[3 3 4 6 1]}} {[2] {[2 6]} {[8 9 6 2]}}}}) -> [1 8 1 9 1 2 3 8 7 7 7 6 0 5 4 2 3 3 4 6 1 2 2 6 8 9 6 2]", "(flattenl {[3 5]}) -> [3 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[]} {[8 3 4]}}) -> [8 3 4]", "(flattenl {[8 3 3 8 1] {[6 0 2 5 4] {[3 4 3 9] {[4]}} {[1 5 2] {[3 2 1 6]}}}}) -> [8 3 3 8 1 6 0 2 5 4 3 4 3 9 4 1 5 2 3 2 1 6]", "(flattenl {[4 3 0 1 6]}) -> [4 3 0 1 6]", "(flattenl {[7 5 7] {[3] {[8 3]}}}) -> [7 5 7 3 8 3]", "(flattenl {[8]}) -> [8]", "(flattenl {[5 4 1]}) -> [5 4 1]", "(flattenl {[7 7 9 4 3] {[6 9 6 4 5]}}) -> [7 7 9 4 3 6 9 6 4 5]", "(flattenl {[] {[8 7 6 2 1] {[7]}}}) -> [8 7 6 2 1 7]", "(flattenl {[8 5] {[7 3] {[3]} {[9 7] {[6 9 3 1]}}} {[9 4 2] {[] {[7]}} {[3 1 2 3] {[5 8]}}}}) -> [8 5 7 3 3 9 7 6 9 3 1 9 4 2 7 3 1 2 3 5 8]", "(flattenl {[0 1 3] {[5 5 8]}}) -> [0 1 3 5 5 8]", "(flattenl {[]}) -> []", "(flattenl {[5 3 0] {[4 3 4]}}) -> [5 3 0 4 3 4]", "(flattenl {[7 2] {[]}}) -> [7 2]", "(flattenl {[1 0] {[1 0]}}) -> [1 0 1 0]", "(flattenl {[0] {[5 4 9] {[9 0 3 8 2]} {[2]}} {[3 5]}}) -> [0 5 4 9 9 0 3 8 2 2 3 5]", "(flattenl {[] {[8 5]}}) -> [8 5]", "(flattenl {[5] {[0 8] {[]}} {[1 1 7 7]}}) -> [5 0 8 1 1 7 7]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.176093, "name": "flattenl", "examples": ["(flattenl {[2 7]}) -> [2 7]", "(flattenl {}) -> []", "(flattenl {[4 7 9 1]}) -> [4 7 9 1]", "(flattenl {[0 5] {[1 7 7 2 5]} {[6 0] {[2 1]}}}) -> [0 5 1 7 7 2 5 6 0 2 1]", "(flattenl {[7 5 0 6]}) -> [7 5 0 6]", "(flattenl {}) -> []", "(flattenl {[4 4 7 8] {[9 5 2] {[] {[0 0 7]}} {[5 9 3 2] {[5 1 6 3 9]}}} {[3 8 4 0 6]}}) -> [4 4 7 8 9 5 2 0 0 7 5 9 3 2 5 1 6 3 9 3 8 4 0 6]", "(flattenl {[6] {[5 8 3]}}) -> [6 5 8 3]", "(flattenl {[4 6 6 4] {[4 8 6]}}) -> [4 6 6 4 4 8 6]", "(flattenl {[2 1 9 1 0] {[] {[8 3 4 9]}}}) -> [2 1 9 1 0 8 3 4 9]", "(flattenl {[9 3 7 8 3] {[9]}}) -> [9 3 7 8 3 9]", "(flattenl {[3 3] {[8] {[] {[0 4]}} {[7 0 9 2]}}}) -> [3 3 8 0 4 7 0 9 2]", "(flattenl {}) -> []", "(flattenl {[3 2 7] {[6] {[8 6 7 5 6]}}}) -> [3 2 7 6 8 6 7 5 6]", "(flattenl {[2 9 1 9 6]}) -> [2 9 1 9 6]", "(flattenl {[7 9 8] {[6 9 2] {[5 9 7]}} {[8] {[6 4]} {[7 1 9 2 2]}}}) -> [7 9 8 6 9 2 5 9 7 8 6 4 7 1 9 2 2]", "(flattenl {[8 1 7 2 0] {[]}}) -> [8 1 7 2 0]", "(flattenl {[8 2 7 7] {[6 9 7] {[]}} {[2 1 3 9] {[5 1 3 0 9]}}}) -> [8 2 7 7 6 9 7 2 1 3 9 5 1 3 0 9]", "(flattenl {[1 6] {[3 3] {[4 0 1 6]} {[2 1 9 0 4] {[8 5 0]} {[3 4 1 0 9]}}} {[5 1 9 5] {[] {[6 7 9 2 9]} {[9 1 7]}} {[8 0 9 1] {[5 1 3 8]}}}}) -> [1 6 3 3 4 0 1 6 2 1 9 0 4 8 5 0 3 4 1 0 9 5 1 9 5 6 7 9 2 9 9 1 7 8 0 9 1 5 1 3 8]", "(flattenl {[] {[4 1] {[8 4 8 1]} {[1 3 3 0]}}}) -> [4 1 8 4 8 1 1 3 3 0]", "(flattenl {[3 2 5] {[4] {[5]} {[2 6] {[]}}}}) -> [3 2 5 4 5 2 6]", "(flattenl {}) -> []", "(flattenl {[5]}) -> [5]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.173804, "name": "flattenl", "examples": ["(flattenl {[5 0 8] {[8 1] {[5]} {[5 0 7 9]}}}) -> [5 0 8 8 1 5 5 0 7 9]", "(flattenl {}) -> []", "(flattenl {[9 5 2 5] {[1 9] {[8 5 9 7 8]}}}) -> [9 5 2 5 1 9 8 5 9 7 8]", "(flattenl {}) -> []", "(flattenl {[1 4 0]}) -> [1 4 0]", "(flattenl {[2 7 9 7] {[8 3 2 9 8] {[8 8 4 5 2]} {[5] {[7 1 0 7]}}}}) -> [2 7 9 7 8 3 2 9 8 8 8 4 5 2 5 7 1 0 7]", "(flattenl {[]}) -> []", "(flattenl {[7 8 1 4 7] {[]}}) -> [7 8 1 4 7]", "(flattenl {}) -> []", "(flattenl {[9]}) -> [9]", "(flattenl {[9 2 7 6] {[6 1 7 9] {[7 0 4] {[]}}}}) -> [9 2 7 6 6 1 7 9 7 0 4]", "(flattenl {[4 3 1] {[6 5 0 4] {[]} {[1]}} {[3 6 6] {[6]}}}) -> [4 3 1 6 5 0 4 1 3 6 6 6]", "(flattenl {[] {[2 8 8 7] {[0 4] {[2 9 0 3 0]}} {[1] {[1 0 4 5]} {[]}}} {[5 1] {[6 8 3 1 7]}}}) -> [2 8 8 7 0 4 2 9 0 3 0 1 1 0 4 5 5 1 6 8 3 1 7]", "(flattenl {[2 7 9]}) -> [2 7 9]", "(flattenl {[7]}) -> [7]", "(flattenl {[4 8 9 3]}) -> [4 8 9 3]", "(flattenl {[2 0 4 2]}) -> [2 0 4 2]", "(flattenl {[5 1]}) -> [5 1]", "(flattenl {[] {[3 7 2] {[6 9 8 4]} {[0 7 5]}}}) -> [3 7 2 6 9 8 4 0 7 5]", "(flattenl {[4 5 5] {[5 6]}}) -> [4 5 5 5 6]", "(flattenl {[8 8 7 8] {[1 3] {[4 3 1 2 5]} {[1 7 9 0 1]}}}) -> [8 8 7 8 1 3 4 3 1 2 5 1 7 9 0 1]", "(flattenl {[5 5 5 6] {[3 4 9 4]}}) -> [5 5 5 6 3 4 9 4]", "(flattenl {[5 9 4 0] {[0 1 6 2]} {[5 7 6 8 9]}}) -> [5 9 4 0 0 1 6 2 5 7 6 8 9]", "(flattenl {[7 4 7 2] {[8 0 7] {[]} {[]}} {[9 0 7 3] {[] {[7 0 6]} {[2]}}}}) -> [7 4 7 2 8 0 7 9 0 7 3 7 0 6 2]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.145256, "name": "flattenl", "examples": ["(flattenl {[1] {[5]}}) -> [1 5]", "(flattenl {[9 5 7 5] {[] {[9]} {[9]}}}) -> [9 5 7 5 9 9]", "(flattenl {[8]}) -> [8]", "(flattenl {[5 8 4] {[5]}}) -> [5 8 4 5]", "(flattenl {[2 1 8 1 5] {[7 3 4 0]}}) -> [2 1 8 1 5 7 3 4 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[0 6] {[8 5 2 5 0]} {[]}}) -> [0 6 8 5 2 5 0]", "(flattenl {}) -> []", "(flattenl {[6 4 0 5 1]}) -> [6 4 0 5 1]", "(flattenl {[6 1 3 5] {[5 7]} {[2 9 5 7]}}) -> [6 1 3 5 5 7 2 9 5 7]", "(flattenl {[3 0 1 5 5]}) -> [3 0 1 5 5]", "(flattenl {}) -> []", "(flattenl {[] {[0]}}) -> [0]", "(flattenl {[1 4 9]}) -> [1 4 9]", "(flattenl {}) -> []", "(flattenl {[7 1]}) -> [7 1]", "(flattenl {}) -> []", "(flattenl {[4 4 4 8]}) -> [4 4 4 8]", "(flattenl {[4] {[6 1 8 9 3]}}) -> [4 6 1 8 9 3]", "(flattenl {}) -> []", "(flattenl {[7 9 7 7 2]}) -> [7 9 7 7 2]", "(flattenl {[5 2 0 4]}) -> [5 2 0 4]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.146332, "name": "flattenl", "examples": ["(flattenl {[0 8] {[6 3 8]}}) -> [0 8 6 3 8]", "(flattenl {[4 4 7 0 5] {[7 5 7] {[9 6 4 9]} {[0]}} {[0 9 2 5] {[1 6]} {[8 5 0 9]}}}) -> [4 4 7 0 5 7 5 7 9 6 4 9 0 0 9 2 5 1 6 8 5 0 9]", "(flattenl {[5 4 7 6 8]}) -> [5 4 7 6 8]", "(flattenl {[9 6] {[]} {[7]}}) -> [9 6 7]", "(flattenl {[8 9] {[7]} {[9 5]}}) -> [8 9 7 9 5]", "(flattenl {[] {[6]} {[0 2 0 5]}}) -> [6 0 2 0 5]", "(flattenl {[4 3 8 3]}) -> [4 3 8 3]", "(flattenl {[0 4 3 1] {[1 6 0] {[3 3 5 6]}} {[4] {[1 3 0]}}}) -> [0 4 3 1 1 6 0 3 3 5 6 4 1 3 0]", "(flattenl {}) -> []", "(flattenl {[6 6 8 1 1] {[4 5 8 5]} {[]}}) -> [6 6 8 1 1 4 5 8 5]", "(flattenl {[5 3 3 2 3] {[3 7 9 6] {[]} {[4 0 8]}}}) -> [5 3 3 2 3 3 7 9 6 4 0 8]", "(flattenl {}) -> []", "(flattenl {[0 6]}) -> [0 6]", "(flattenl {}) -> []", "(flattenl {[1 9 4 8]}) -> [1 9 4 8]", "(flattenl {[]}) -> []", "(flattenl {[9 4 5] {[0 4 8 9]} {[3 4] {[6] {[6 0]} {[6]}} {[2 3 2] {[9 7 8]}}}}) -> [9 4 5 0 4 8 9 3 4 6 6 0 6 2 3 2 9 7 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[6 0 1] {[] {[4 1 8]} {[2 2 3]}} {[] {[0]} {[8]}}} {[] {[8 2 3 2] {[4 3 8 6 1]} {[0 0]}}}}) -> [6 0 1 4 1 8 2 2 3 0 8 8 2 3 2 4 3 8 6 1 0 0]", "(flattenl {[0 4 5] {[0 1] {[] {[1 7 9 2]}} {[7 7]}} {[0 4 3 9 1]}}) -> [0 4 5 0 1 1 7 9 2 7 7 0 4 3 9 1]", "(flattenl {[7 0 8] {[6 6 6 3] {[9 1]}}}) -> [7 0 8 6 6 6 3 9 1]", "(flattenl {}) -> []", "(flattenl {[5 5 9] {[]} {[7 1 1]}}) -> [5 5 9 7 1 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.132829, "name": "flattenl", "examples": ["(flattenl {[4]}) -> [4]", "(flattenl {[0 6 5] {[7 6 7 6 4] {[] {[6 3]}}}}) -> [0 6 5 7 6 7 6 4 6 3]", "(flattenl {[4 6 8 0] {[3 7 3 7] {[]}}}) -> [4 6 8 0 3 7 3 7]", "(flattenl {[] {[2 2 9]}}) -> [2 2 9]", "(flattenl {[] {[1 9 7 1 6] {[9 1]} {[1 7]}} {[3 0 9 3]}}) -> [1 9 7 1 6 9 1 1 7 3 0 9 3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[1 4 9 8 7] {[4 1] {[9 6 6 0]} {[]}} {[1] {[5 4 3]} {[6 4 4]}}}) -> [1 4 9 8 7 4 1 9 6 6 0 1 5 4 3 6 4 4]", "(flattenl {[]}) -> []", "(flattenl {[4 6 2 3]}) -> [4 6 2 3]", "(flattenl {[] {[6 8 4 5] {[6 0 1 1 6]} {[6 1 4 5 4] {[0 7 4 0 2]}}}}) -> [6 8 4 5 6 0 1 1 6 6 1 4 5 4 0 7 4 0 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[0 0 1 0 4] {[1 3 2] {[7 1 6]} {[0]}} {[] {[2 3 9 3]}}}) -> [0 0 1 0 4 1 3 2 7 1 6 0 2 3 9 3]", "(flattenl {[8 0] {[8 3 0 6 9] {[0]}} {[4 5 3] {[5 1 5] {[2]} {[8 4]}} {[2 5 5 3] {[8 3 1 5 5]}}}}) -> [8 0 8 3 0 6 9 0 4 5 3 5 1 5 2 8 4 2 5 5 3 8 3 1 5 5]", "(flattenl {[7] {[3 4 1 9]} {[5]}}) -> [7 3 4 1 9 5]", "(flattenl {[3 7 6 9]}) -> [3 7 6 9]", "(flattenl {[] {[1]}}) -> [1]", "(flattenl {[8 9] {[4 2 1] {[]} {[0 8 9] {[2]}}}}) -> [8 9 4 2 1 0 8 9 2]", "(flattenl {[2 4 0 7] {[1 8 1]} {[]}}) -> [2 4 0 7 1 8 1]", "(flattenl {[4] {[] {[9 8 3 9 0] {[4 2 4 0]} {[7]}}}}) -> [4 9 8 3 9 0 4 2 4 0 7]", "(flattenl {[1 3 4 9 1] {[2 9 5]}}) -> [1 3 4 9 1 2 9 5]", "(flattenl {[] {[] {[1 4]} {[]}}}) -> [1 4]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.176961, "name": "flattenl", "examples": ["(flattenl {[6 4 0 3 7] {[0 1 2 3]} {[0 1]}}) -> [6 4 0 3 7 0 1 2 3 0 1]", "(flattenl {[1 1] {[2 8 1]}}) -> [1 1 2 8 1]", "(flattenl {[8] {[5] {[3 8]} {[9 2 1 4]}} {[7 0] {[9 8]} {[4 3]}}}) -> [8 5 3 8 9 2 1 4 7 0 9 8 4 3]", "(flattenl {[1]}) -> [1]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[4 6] {[5 2 7]} {[7 7 9 8]}}) -> [4 6 5 2 7 7 7 9 8]", "(flattenl {[1 0 6] {[5 2 3 9 5]}}) -> [1 0 6 5 2 3 9 5]", "(flattenl {[1 1 6]}) -> [1 1 6]", "(flattenl {[2]}) -> [2]", "(flattenl {[7 0 0 9 7]}) -> [7 0 0 9 7]", "(flattenl {}) -> []", "(flattenl {[3 4 8] {[9 2 0] {[4] {[4]} {[0]}} {[6 1] {[1 0]} {[0]}}}}) -> [3 4 8 9 2 0 4 4 0 6 1 1 0 0]", "(flattenl {[] {[9 3 1]}}) -> [9 3 1]", "(flattenl {[6 3 9 5]}) -> [6 3 9 5]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[1 7] {[1 8 1 1 6]}}) -> [1 7 1 8 1 1 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 7 3 1 0] {[4 5 0 0] {[6 9 1 2 8]}} {[7 0]}}) -> [2 7 3 1 0 4 5 0 0 6 9 1 2 8 7 0]", "(flattenl {}) -> []", "(flattenl {[3 8 4 9 4] {[0 2 4] {[]}} {[6 0 0]}}) -> [3 8 4 9 4 0 2 4 6 0 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.122445, "name": "flattenl", "examples": ["(flattenl {[8 9] {[]} {[5]}}) -> [8 9 5]", "(flattenl {[1 2 8 2 3] {[3 8 5 1]} {[9 6 1 1]}}) -> [1 2 8 2 3 3 8 5 1 9 6 1 1]", "(flattenl {}) -> []", "(flattenl {[7 1]}) -> [7 1]", "(flattenl {[2 0 4 4 2] {[1 2]} {[3 8 3 5 6]}}) -> [2 0 4 4 2 1 2 3 8 3 5 6]", "(flattenl {}) -> []", "(flattenl {[4 8 5 1] {[]} {[7]}}) -> [4 8 5 1 7]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9] {[1 8 5] {[1 8 5 0]} {[6 6 3 1]}} {[4] {[3 3]} {[9]}}}) -> [9 1 8 5 1 8 5 0 6 6 3 1 4 3 3 9]", "(flattenl {[1 4] {[6 1 4 2] {[0 1 9]} {[6] {[8 1 0 5]} {[0 7 8 2 3]}}} {[8 1 7 6]}}) -> [1 4 6 1 4 2 0 1 9 6 8 1 0 5 0 7 8 2 3 8 1 7 6]", "(flattenl {[0 8] {[6] {[]} {[6 6 1 7] {[8 4 0]} {[7]}}} {[5 3 2 3 8]}}) -> [0 8 6 6 6 1 7 8 4 0 7 5 3 2 3 8]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[7 6 4 1]}) -> [7 6 4 1]", "(flattenl {[3 7 4 5 3] {[4 4] {[3 6 2 5]} {[1 1 0]}} {[8]}}) -> [3 7 4 5 3 4 4 3 6 2 5 1 1 0 8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.162784, "name": "flattenl", "examples": ["(flattenl {[9 1 7 9]}) -> [9 1 7 9]", "(flattenl {[7 4 2] {[4 1]} {[]}}) -> [7 4 2 4 1]", "(flattenl {[5 0 5 1 3] {[1 3 3 5]}}) -> [5 0 5 1 3 1 3 3 5]", "(flattenl {}) -> []", "(flattenl {[9 2 5 8] {[]} {[2 2 6 4 4]}}) -> [9 2 5 8 2 2 6 4 4]", "(flattenl {}) -> []", "(flattenl {[0] {[0 1 6]}}) -> [0 0 1 6]", "(flattenl {[8 6 9 8] {[7 7] {[0 0 7]} {[] {[8 6 9 8]} {[3 0 4 6 2]}}}}) -> [8 6 9 8 7 7 0 0 7 8 6 9 8 3 0 4 6 2]", "(flattenl {[5 8 3]}) -> [5 8 3]", "(flattenl {}) -> []", "(flattenl {[5 2 2] {[4 2 2 3]}}) -> [5 2 2 4 2 2 3]", "(flattenl {[0 5 8 2] {[7 0 7 1 1]} {[]}}) -> [0 5 8 2 7 0 7 1 1]", "(flattenl {[7] {[2 6 7 2 8] {[4 3 4] {[1 7]} {[8 3 4 4]}}}}) -> [7 2 6 7 2 8 4 3 4 1 7 8 3 4 4]", "(flattenl {[7 9] {[7 9 5 0] {[8 6] {[9 9 3 5]} {[4 6 8]}}} {[7 9 5]}}) -> [7 9 7 9 5 0 8 6 9 9 3 5 4 6 8 7 9 5]", "(flattenl {[0 5 7 6] {[7 4]} {[8 3 0] {[5 3 7 6]}}}) -> [0 5 7 6 7 4 8 3 0 5 3 7 6]", "(flattenl {}) -> []", "(flattenl {[8 6 6 6 2]}) -> [8 6 6 6 2]", "(flattenl {[2] {[6 9 7 5 1]} {[]}}) -> [2 6 9 7 5 1]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[3 1] {[]} {[0 2] {[5]}}}) -> [3 1 0 2 5]", "(flattenl {}) -> []", "(flattenl {[5 0 6]}) -> [5 0 6]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.170015, "name": "flattenl", "examples": ["(flattenl {[]}) -> []", "(flattenl {[9 1 8 6]}) -> [9 1 8 6]", "(flattenl {[5 6 1 9 1]}) -> [5 6 1 9 1]", "(flattenl {[4 0] {[0]}}) -> [4 0 0]", "(flattenl {[1 6 6 6 0]}) -> [1 6 6 6 0]", "(flattenl {[0 4 2] {[6 0 2] {[3]} {[0 5 0]}}}) -> [0 4 2 6 0 2 3 0 5 0]", "(flattenl {[7 1 5 4] {[5]} {[9 6]}}) -> [7 1 5 4 5 9 6]", "(flattenl {[9 2 1 3 7] {[]} {[7 2 8 3 3]}}) -> [9 2 1 3 7 7 2 8 3 3]", "(flattenl {}) -> []", "(flattenl {[5 5 9 3]}) -> [5 5 9 3]", "(flattenl {}) -> []", "(flattenl {[9 9 1 9]}) -> [9 9 1 9]", "(flattenl {[4 4 2 9]}) -> [4 4 2 9]", "(flattenl {[0 3 7 1]}) -> [0 3 7 1]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 9 7 3] {[6 2 1 4] {[9]}} {[] {[3 4 8]}}}) -> [2 9 7 3 6 2 1 4 9 3 4 8]", "(flattenl {[6 4 1 3] {[2 7 8 8 3]}}) -> [6 4 1 3 2 7 8 8 3]", "(flattenl {[6 2 9 0 4] {[5 4 5 9]} {[]}}) -> [6 2 9 0 4 5 4 5 9]", "(flattenl {}) -> []", "(flattenl {[1 0 3 4] {[6 7]}}) -> [1 0 3 4 6 7]", "(flattenl {[9 3 3 9]}) -> [9 3 3 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.174924, "name": "flattenl", "examples": ["(flattenl {[4 5] {[3]} {[2 3 8 0]}}) -> [4 5 3 2 3 8 0]", "(flattenl {[1 1 4 9] {[3 9 4 0 8]} {[]}}) -> [1 1 4 9 3 9 4 0 8]", "(flattenl {}) -> []", "(flattenl {[] {[1 3]}}) -> [1 3]", "(flattenl {[4 2 4 8 2] {[3 8] {[3 3 3] {[9 3 2 4]} {[3 3 3 8]}} {[1 7 8 3] {[]} {[8 2 5 6 3]}}}}) -> [4 2 4 8 2 3 8 3 3 3 9 3 2 4 3 3 3 8 1 7 8 3 8 2 5 6 3]", "(flattenl {[2 2 8 2 8] {[5 7 2]}}) -> [2 2 8 2 8 5 7 2]", "(flattenl {[8] {[3 3 7 6 5]}}) -> [8 3 3 7 6 5]", "(flattenl {[3 3 3]}) -> [3 3 3]", "(flattenl {[9 7] {[]}}) -> [9 7]", "(flattenl {[4 8 8] {[]} {[1 1 7 5 9]}}) -> [4 8 8 1 1 7 5 9]", "(flattenl {[] {[8]}}) -> [8]", "(flattenl {[4 6] {[1 8 0 8]}}) -> [4 6 1 8 0 8]", "(flattenl {[6 8 2]}) -> [6 8 2]", "(flattenl {[9 5 3 7]}) -> [9 5 3 7]", "(flattenl {[0 3] {[1 7 7 8] {[9 0 9 9] {[4 8 5]} {[7]}} {[5 0 9]}}}) -> [0 3 1 7 7 8 9 0 9 9 4 8 5 7 5 0 9]", "(flattenl {[4 3 8] {[8 8 1 8] {[3 9]}} {[1] {[5 8]} {[1 3 1]}}}) -> [4 3 8 8 8 1 8 3 9 1 5 8 1 3 1]", "(flattenl {[0 4 5] {[2 9 9]} {[9]}}) -> [0 4 5 2 9 9 9]", "(flattenl {}) -> []", "(flattenl {[0 3 6] {[3]} {[8]}}) -> [0 3 6 3 8]", "(flattenl {[9 7 3 8 1] {[9 3]}}) -> [9 7 3 8 1 9 3]", "(flattenl {}) -> []", "(flattenl {[1 9 8 3]}) -> [1 9 8 3]", "(flattenl {[2 0 8 1] {[2 8 3 4]}}) -> [2 0 8 1 2 8 3 4]", "(flattenl {[1 3 9 8] {[4]}}) -> [1 3 9 8 4]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.173093, "name": "flattenl", "examples": ["(flattenl {[1 2 4 0 8]}) -> [1 2 4 0 8]", "(flattenl {[4 6 2] {[0 4 4 5]}}) -> [4 6 2 0 4 4 5]", "(flattenl {[7 8 2 9] {[6 7 0]} {[3]}}) -> [7 8 2 9 6 7 0 3]", "(flattenl {[8 2 1 3 8] {[2 4 9 9]}}) -> [8 2 1 3 8 2 4 9 9]", "(flattenl {[6 4 7 6 5] {[2] {[2 9 0]} {[6 2]}}}) -> [6 4 7 6 5 2 2 9 0 6 2]", "(flattenl {[0 1 8 4 7] {[]}}) -> [0 1 8 4 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[0 1 2] {[]} {[1 8 4 2]}}) -> [0 1 2 1 8 4 2]", "(flattenl {[2 2 1 4]}) -> [2 2 1 4]", "(flattenl {[9 1 9] {[] {[] {[7 6 0]} {[]}}}}) -> [9 1 9 7 6 0]", "(flattenl {[0 7 4 5 7] {[5 9 7 5 2]}}) -> [0 7 4 5 7 5 9 7 5 2]", "(flattenl {[4 4 5 8 3]}) -> [4 4 5 8 3]", "(flattenl {[5 8]}) -> [5 8]", "(flattenl {}) -> []", "(flattenl {[5 1 8 7] {[]} {[9 1 6] {[3 5 8 7] {[1 9 1]} {[1]}}}}) -> [5 1 8 7 9 1 6 3 5 8 7 1 9 1 1]", "(flattenl {[0 3 0] {[0 0 7 6 3]} {[5 0 2 2] {[7 3]} {[7 7 3 5 4]}}}) -> [0 3 0 0 0 7 6 3 5 0 2 2 7 3 7 7 3 5 4]", "(flattenl {[2] {[8]} {[2 5]}}) -> [2 8 2 5]", "(flattenl {}) -> []", "(flattenl {[5 9 6 6 1]}) -> [5 9 6 6 1]", "(flattenl {[4 1 1 6]}) -> [4 1 1 6]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[4] {[0 4 1 1]} {[]}}) -> [4 0 4 1 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.137492, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[8 5] {[]} {[2 4 0]}}) -> [8 5 2 4 0]", "(flattenl {}) -> []", "(flattenl {[8] {[2 5 2 7 4] {[]} {[3 0 6 1]}} {[5] {[8 1]} {[1 6 6 7]}}}) -> [8 2 5 2 7 4 3 0 6 1 5 8 1 1 6 6 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[5 5 8 6 0]}) -> [5 5 8 6 0]", "(flattenl {[8 8 2 6] {[2 6 1 3]} {[1 3]}}) -> [8 8 2 6 2 6 1 3 1 3]", "(flattenl {}) -> []", "(flattenl {[7 6] {[]} {[0]}}) -> [7 6 0]", "(flattenl {[0 8 6] {[4 0 9 9]} {[]}}) -> [0 8 6 4 0 9 9]", "(flattenl {}) -> []", "(flattenl {[2 3 1 8 1] {[2 0 7]} {[8 2 4 4]}}) -> [2 3 1 8 1 2 0 7 8 2 4 4]", "(flattenl {[1 1 5 2 3]}) -> [1 1 5 2 3]", "(flattenl {[]}) -> []", "(flattenl {[8] {[3 8] {[5 4 4 0 0]} {[6 2]}} {[9] {[2 7]}}}) -> [8 3 8 5 4 4 0 0 6 2 9 2 7]", "(flattenl {[0 5]}) -> [0 5]", "(flattenl {[4 0 2 6] {[6 2 0 9]}}) -> [4 0 2 6 6 2 0 9]", "(flattenl {[] {[3 4 4 3]}}) -> [3 4 4 3]", "(flattenl {[] {[4 0 2 2 3] {[1 6 6]} {[]}} {[6 4 6 6 8] {[7 3 9]} {[]}}}) -> [4 0 2 2 3 1 6 6 6 4 6 6 8 7 3 9]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.142725, "name": "flattenl", "examples": ["(flattenl {[] {[] {[]} {[5 6 2 1 2]}}}) -> [5 6 2 1 2]", "(flattenl {[1 6] {[0 3 6] {[7 7]}} {[6 1 4] {[4 7 2 0 0]} {[7 0 0 9 2]}}}) -> [1 6 0 3 6 7 7 6 1 4 4 7 2 0 0 7 0 0 9 2]", "(flattenl {[5 6] {[3 4] {[2 2 4] {[5]}}} {[5 3 8 2 2]}}) -> [5 6 3 4 2 2 4 5 5 3 8 2 2]", "(flattenl {[] {[5 8 2 6] {[7 3 7 0]}}}) -> [5 8 2 6 7 3 7 0]", "(flattenl {[] {[9 3] {[4 2 9 4] {[4 1 6]}}}}) -> [9 3 4 2 9 4 4 1 6]", "(flattenl {}) -> []", "(flattenl {[0 4] {[0 5]} {[]}}) -> [0 4 0 5]", "(flattenl {[8 4 9 2 8] {[3 2 0]} {[0] {[4 3 2 9]} {[1]}}}) -> [8 4 9 2 8 3 2 0 0 4 3 2 9 1]", "(flattenl {}) -> []", "(flattenl {[0 2 7 9] {[0 7 8 2 8]} {[2] {[4 9 6] {[3 1 0]} {[2 5]}}}}) -> [0 2 7 9 0 7 8 2 8 2 4 9 6 3 1 0 2 5]", "(flattenl {}) -> []", "(flattenl {[8] {[8]} {[]}}) -> [8 8]", "(flattenl {[7] {[1]} {[9 4 6 2]}}) -> [7 1 9 4 6 2]", "(flattenl {[4 1 4] {[4 6 1]}}) -> [4 1 4 4 6 1]", "(flattenl {}) -> []", "(flattenl {[8]}) -> [8]", "(flattenl {[8 5]}) -> [8 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 3 6 2 4] {[6 0] {[4 7]} {[7] {[5 2]}}}}) -> [2 3 6 2 4 6 0 4 7 7 5 2]", "(flattenl {}) -> []", "(flattenl {[2 3 8 7] {[] {[2 4 1 1 5]} {[2 1 1]}}}) -> [2 3 8 7 2 4 1 1 5 2 1 1]", "(flattenl {[5 3 6 2]}) -> [5 3 6 2]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.127332, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[9 2]}) -> [9 2]", "(flattenl {}) -> []", "(flattenl {[9 8 3 5 7] {[9 7 0] {[8 8 0 8 2]}}}) -> [9 8 3 5 7 9 7 0 8 8 0 8 2]", "(flattenl {[9 6 6 1 1]}) -> [9 6 6 1 1]", "(flattenl {[7 8 7 6] {[5]} {[]}}) -> [7 8 7 6 5]", "(flattenl {[7 2 7 6] {[6] {[4 3] {[3]} {[]}} {[4 2] {[9 0 9 0]} {[]}}} {[4 5]}}) -> [7 2 7 6 6 4 3 3 4 2 9 0 9 0 4 5]", "(flattenl {[4] {[6 6 6]} {[7] {[4 8 3]} {[3 5 8 1 9]}}}) -> [4 6 6 6 7 4 8 3 3 5 8 1 9]", "(flattenl {[2 4 4 8] {[8 7]}}) -> [2 4 4 8 8 7]", "(flattenl {}) -> []", "(flattenl {[5 6 7 0 9] {[5 8]}}) -> [5 6 7 0 9 5 8]", "(flattenl {[8]}) -> [8]", "(flattenl {[] {[8] {[8 6]} {[8 0 5 6 8]}}}) -> [8 8 6 8 0 5 6 8]", "(flattenl {[5 4 6 7 6] {[]}}) -> [5 4 6 7 6]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[0 8 9] {[9 3]}}) -> [0 8 9 9 3]", "(flattenl {}) -> []", "(flattenl {[7 1] {[1 9 3 1] {[3 9]} {[]}}}) -> [7 1 1 9 3 1 3 9]", "(flattenl {[1] {[8 4 8] {[] {[8 3 3 0 2]} {[9 6]}}}}) -> [1 8 4 8 8 3 3 0 2 9 6]", "(flattenl {[4 9 6 3 1] {[7 0 2 2] {[0] {[4 0 0]} {[5 4]}} {[5 1] {[5 7 3 7]} {[9 1 4]}}} {[7 3 4 2 6] {[9 0 9 1] {[0]}} {[6 2 4 7 1] {[9]}}}}) -> [4 9 6 3 1 7 0 2 2 0 4 0 0 5 4 5 1 5 7 3 7 9 1 4 7 3 4 2 6 9 0 9 1 0 6 2 4 7 1 9]", "(flattenl {[1 0 1 9] {[0 9]}}) -> [1 0 1 9 0 9]", "(flattenl {[2 2 6] {[]} {[4 6 1] {[2 7]}}}) -> [2 2 6 4 6 1 2 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.153131, "name": "flattenl", "examples": ["(flattenl {[]}) -> []", "(flattenl {[0] {[1]}}) -> [0 1]", "(flattenl {[2 4] {[4 9 0]} {[3 1 7 8 8]}}) -> [2 4 4 9 0 3 1 7 8 8]", "(flattenl {[4 0 3] {[4]}}) -> [4 0 3 4]", "(flattenl {[9]}) -> [9]", "(flattenl {[1 7] {[4] {[9 7 5] {[9 4 7]}} {[9 6 4 8] {[8]} {[1 5 7 2 2]}}}}) -> [1 7 4 9 7 5 9 4 7 9 6 4 8 8 1 5 7 2 2]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 6 6 4] {[5 2]}}) -> [2 6 6 4 5 2]", "(flattenl {[] {[8 6 0 2 6]} {[1] {[] {[6]}}}}) -> [8 6 0 2 6 1 6]", "(flattenl {[] {[3 4 1] {[8 4]} {[6 9]}} {[2 5 2 0] {[8 6]}}}) -> [3 4 1 8 4 6 9 2 5 2 0 8 6]", "(flattenl {[5 0 6 4]}) -> [5 0 6 4]", "(flattenl {[1 2 2 3 1] {[]}}) -> [1 2 2 3 1]", "(flattenl {[9]}) -> [9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 0 2]}) -> [7 0 2]", "(flattenl {[5 1 1 8 9] {[2 0 2 4]} {[3]}}) -> [5 1 1 8 9 2 0 2 4 3]", "(flattenl {[1 7 7]}) -> [1 7 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[8 5 9 6 0] {[] {[8 9 1 0]}}}) -> [8 5 9 6 0 8 9 1 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.158084, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[1] {[0 4 1 6] {[5 7 4]}} {[3 0 9]}}) -> [1 0 4 1 6 5 7 4 3 0 9]", "(flattenl {[5 6] {[1 1] {[1 6 9 6 4]}}}) -> [5 6 1 1 1 6 9 6 4]", "(flattenl {[8 3]}) -> [8 3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[]} {[]}}) -> []", "(flattenl {[0 7 7 9 8] {[9 1 3 7 4] {[] {[4]} {[0 5 1 6 5]}} {[] {[6 9 7 5]}}}}) -> [0 7 7 9 8 9 1 3 7 4 4 0 5 1 6 5 6 9 7 5]", "(flattenl {[8 4 8 2 4] {[6 2 2] {[0 8 8 8]} {[8 3 2 8 8]}} {[2 4 2 4 9]}}) -> [8 4 8 2 4 6 2 2 0 8 8 8 8 3 2 8 8 2 4 2 4 9]", "(flattenl {[6 6 0] {[8 0 3 6 8]}}) -> [6 6 0 8 0 3 6 8]", "(flattenl {}) -> []", "(flattenl {[3 3 7]}) -> [3 3 7]", "(flattenl {[1 7 6]}) -> [1 7 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[6] {[9 4 5 5 9]} {[7 5 5 9]}}) -> [6 9 4 5 5 9 7 5 5 9]", "(flattenl {[7 8 9]}) -> [7 8 9]", "(flattenl {[0 4 1 0 9] {[4]} {[1]}}) -> [0 4 1 0 9 4 1]", "(flattenl {[] {[5 3 8 8 5] {[9 8 1 6 7]} {[0 9]}} {[6 6 0 5] {[2 9]} {[]}}}) -> [5 3 8 8 5 9 8 1 6 7 0 9 6 6 0 5 2 9]", "(flattenl {[2 1] {[7] {[] {[]}} {[4 0 6 6] {[3]}}} {[8 1 8 9] {[]} {[] {[8 3 5 8 8]} {[5 2 6 5 0]}}}}) -> [2 1 7 4 0 6 6 3 8 1 8 9 8 3 5 8 8 5 2 6 5 0]", "(flattenl {[3 3]}) -> [3 3]", "(flattenl {[9 9] {[5 2 1] {[2 4] {[9 3 6 0 3]} {[6 5 8 5]}}} {[] {[8 1] {[9]} {[7 4 0]}} {[] {[6]} {[5 1]}}}}) -> [9 9 5 2 1 2 4 9 3 6 0 3 6 5 8 5 8 1 9 7 4 0 6 5 1]", "(flattenl {[7] {[2]} {[6 4 8 2]}}) -> [7 2 6 4 8 2]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.113492, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[] {[8 2] {[0]}} {[4] {[0 9 3 0]} {[1 3 7]}}}) -> [8 2 0 4 0 9 3 0 1 3 7]", "(flattenl {[4 9 0 1 2]}) -> [4 9 0 1 2]", "(flattenl {[8 3 1]}) -> [8 3 1]", "(flattenl {[7 6 9] {[2 0 7] {[8 2 2 8 5]} {[3 4 9 0 4]}} {[] {[8 1 1]}}}) -> [7 6 9 2 0 7 8 2 2 8 5 3 4 9 0 4 8 1 1]", "(flattenl {[2 6] {[9 6 3 4 7]}}) -> [2 6 9 6 3 4 7]", "(flattenl {[5 2 7 1]}) -> [5 2 7 1]", "(flattenl {[7 3 6] {[9 6 8 6]}}) -> [7 3 6 9 6 8 6]", "(flattenl {[9 5] {[6] {[6 1 8 0]}} {[4 7 1 5] {[0 2 7 9]}}}) -> [9 5 6 6 1 8 0 4 7 1 5 0 2 7 9]", "(flattenl {[8 2 3] {[3 7 7]}}) -> [8 2 3 3 7 7]", "(flattenl {[5 3 8]}) -> [5 3 8]", "(flattenl {[5 9 1]}) -> [5 9 1]", "(flattenl {[2] {[7 8 4 1]} {[0 2 0 8 8]}}) -> [2 7 8 4 1 0 2 0 8 8]", "(flattenl {[1 7 1 8] {[4 1] {[2 0 8]}} {[5 9] {[6 7 6 0]} {[7 4 0]}}}) -> [1 7 1 8 4 1 2 0 8 5 9 6 7 6 0 7 4 0]", "(flattenl {[] {[2 1 8 3]} {[9]}}) -> [2 1 8 3 9]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[8 7 0 1]}) -> [8 7 0 1]", "(flattenl {[2 7 3 5] {[]}}) -> [2 7 3 5]", "(flattenl {[4 1 3] {[1 6 0]}}) -> [4 1 3 1 6 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 5 8 9 6]}) -> [5 5 8 9 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.176748, "name": "flattenl", "examples": ["(flattenl {[1] {[5 1 7 1 9] {[3 1 0 9 1] {[5 0 8 7 1]} {[0 9]}}} {[2 3 1 3 2] {[0] {[9 1 9 6 8]}}}}) -> [1 5 1 7 1 9 3 1 0 9 1 5 0 8 7 1 0 9 2 3 1 3 2 0 9 1 9 6 8]", "(flattenl {[9 5 9] {[8 9 0 5]}}) -> [9 5 9 8 9 0 5]", "(flattenl {}) -> []", "(flattenl {[7 7 3 5] {[]} {[0 3] {[6 7]} {[9 2]}}}) -> [7 7 3 5 0 3 6 7 9 2]", "(flattenl {[0] {[2 3 0 7 8]} {[] {[8 3 1 8 7]}}}) -> [0 2 3 0 7 8 8 3 1 8 7]", "(flattenl {[5] {[7 0]}}) -> [5 7 0]", "(flattenl {[3 5 6] {[8 9 8 1] {[0 8]}}}) -> [3 5 6 8 9 8 1 0 8]", "(flattenl {[] {[4 4 1 4]}}) -> [4 4 1 4]", "(flattenl {[9] {[1 7 8 1]} {[5 6 5 5 7] {[]}}}) -> [9 1 7 8 1 5 6 5 5 7]", "(flattenl {[2 0] {[] {[1 0] {[5 9]}} {[1 3] {[8 9 9 5 6]} {[7 7 5 9]}}} {[8] {[5 8] {[0 9 7]}} {[0 0 4 3 3]}}}) -> [2 0 1 0 5 9 1 3 8 9 9 5 6 7 7 5 9 8 5 8 0 9 7 0 0 4 3 3]", "(flattenl {[] {[4 1 5] {[7 4]}}}) -> [4 1 5 7 4]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[2 6 1 4 4] {[] {[9 3 7 0 5]}}}) -> [2 6 1 4 4 9 3 7 0 5]", "(flattenl {}) -> []", "(flattenl {[5 2] {[0 5 6 3 3]}}) -> [5 2 0 5 6 3 3]", "(flattenl {[5] {[5 9 0 4 0] {[] {[]} {[4]}} {[] {[8 3 0 6 8]}}} {[9 6 5] {[] {[7 8 7 4]} {[9 4 7 9 2]}} {[8 0] {[]} {[4 0 6 5]}}}}) -> [5 5 9 0 4 0 4 8 3 0 6 8 9 6 5 7 8 7 4 9 4 7 9 2 8 0 4 0 6 5]", "(flattenl {[1 3 3 0] {[3 3] {[]} {[7 0] {[]} {[7 7 2 7]}}}}) -> [1 3 3 0 3 3 7 0 7 7 2 7]", "(flattenl {[1 1 3] {[5 1] {[5 4 2]}}}) -> [1 1 3 5 1 5 4 2]", "(flattenl {[4 3] {[1 4 8 3 6] {[6 3]}}}) -> [4 3 1 4 8 3 6 6 3]", "(flattenl {[7 2]}) -> [7 2]", "(flattenl {}) -> []", "(flattenl {[9 6 7 7 8] {[]} {[7 5 6 6 7]}}) -> [9 6 7 7 8 7 5 6 6 7]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.164858, "name": "flattenl", "examples": ["(flattenl {[5 6 4 5 2] {[8 6] {[8 7 1 1] {[7 2]}} {[4 9 4 7 5] {[4]} {[]}}} {[] {[7 4 6 7]} {[3 5]}}}) -> [5 6 4 5 2 8 6 8 7 1 1 7 2 4 9 4 7 5 4 7 4 6 7 3 5]", "(flattenl {[4 0 3 9 4] {[2 6 4 4 7] {[]} {[]}}}) -> [4 0 3 9 4 2 6 4 4 7]", "(flattenl {[0 1 7]}) -> [0 1 7]", "(flattenl {[]}) -> []", "(flattenl {[1 3 4] {[7 8 9 6 3] {[6 5 0 7 2] {[5]}} {[2] {[]}}}}) -> [1 3 4 7 8 9 6 3 6 5 0 7 2 5 2]", "(flattenl {[] {[5 1 0 8] {[1 2 6 3]}}}) -> [5 1 0 8 1 2 6 3]", "(flattenl {}) -> []", "(flattenl {[4 9 2 7] {[] {[9 9 4]} {[9] {[9 0 9 5 4]} {[3 7 9 5]}}}}) -> [4 9 2 7 9 9 4 9 9 0 9 5 4 3 7 9 5]", "(flattenl {[3 5 1 9 7] {[2]} {[1 6 3 1]}}) -> [3 5 1 9 7 2 1 6 3 1]", "(flattenl {[4 8 0 3 0] {[9 3 8 0] {[3 0] {[7 1 5]} {[4 4 5 3 7]}}} {[7 8 0 8 7] {[6 0 0 4 2]}}}) -> [4 8 0 3 0 9 3 8 0 3 0 7 1 5 4 4 5 3 7 7 8 0 8 7 6 0 0 4 2]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[] {[]} {[9 2 6 2 1]}}) -> [9 2 6 2 1]", "(flattenl {[3 1 7] {[]} {[2 7 8 7]}}) -> [3 1 7 2 7 8 7]", "(flattenl {}) -> []", "(flattenl {[6] {[1 3 7]} {[0 6 8] {[]}}}) -> [6 1 3 7 0 6 8]", "(flattenl {}) -> []", "(flattenl {[1 2 1] {[3 4 0 3]} {[8 0]}}) -> [1 2 1 3 4 0 3 8 0]", "(flattenl {[7 8 4]}) -> [7 8 4]", "(flattenl {[7 0 0]}) -> [7 0 0]", "(flattenl {}) -> []", "(flattenl {[] {[1]} {[3 4 8]}}) -> [1 3 4 8]", "(flattenl {}) -> []", "(flattenl {[5 5 4]}) -> [5 5 4]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.14151, "name": "flattenl", "examples": ["(flattenl {[] {[8] {[6]} {[3 2 6 2]}} {[7 5 4 5] {[4 4 1 4 8]}}}) -> [8 6 3 2 6 2 7 5 4 5 4 4 1 4 8]", "(flattenl {}) -> []", "(flattenl {[] {[5 3] {[9 8]}}}) -> [5 3 9 8]", "(flattenl {}) -> []", "(flattenl {[1 3 3 4 9] {[9]}}) -> [1 3 3 4 9 9]", "(flattenl {[8 5 4] {[4] {[3 0]} {[]}} {[7 4 6 1]}}) -> [8 5 4 4 3 0 7 4 6 1]", "(flattenl {[0 7 1 3 9]}) -> [0 7 1 3 9]", "(flattenl {[2 9 3] {[0 4 7 3]} {[4 9 7]}}) -> [2 9 3 0 4 7 3 4 9 7]", "(flattenl {[7 4 5 1 9] {[3] {[2 2 7 1 1]} {[7 0 1 2]}}}) -> [7 4 5 1 9 3 2 2 7 1 1 7 0 1 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[1 1 7 3] {[3 0 1 8]} {[5 9] {[]}}}) -> [1 1 7 3 3 0 1 8 5 9]", "(flattenl {[6]}) -> [6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 2]}) -> [2 2]", "(flattenl {[4 8 2]}) -> [4 8 2]", "(flattenl {}) -> []", "(flattenl {[6 8 1 1] {[3] {[3]}} {[4 3 0 1]}}) -> [6 8 1 1 3 3 4 3 0 1]", "(flattenl {[] {[8]}}) -> [8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.156605, "name": "flattenl", "examples": ["(flattenl {[0 3 5 4 9] {[6 5 9] {[9 5 2 8 3]}}}) -> [0 3 5 4 9 6 5 9 9 5 2 8 3]", "(flattenl {}) -> []", "(flattenl {[4 2 7 7]}) -> [4 2 7 7]", "(flattenl {[3 6 3 0]}) -> [3 6 3 0]", "(flattenl {[6] {[5] {[2 4 0 9 9]}}}) -> [6 5 2 4 0 9 9]", "(flattenl {[] {[0 7 7 1 1]} {[8 3 0 1]}}) -> [0 7 7 1 1 8 3 0 1]", "(flattenl {}) -> []", "(flattenl {[3 7]}) -> [3 7]", "(flattenl {[3 3 2 2 2]}) -> [3 3 2 2 2]", "(flattenl {[9 1 0 4 9] {[2 9] {[]} {[2 3 4 7]}} {[6 0 7] {[8 9 4]} {[]}}}) -> [9 1 0 4 9 2 9 2 3 4 7 6 0 7 8 9 4]", "(flattenl {[]}) -> []", "(flattenl {[6 0 3 1 0]}) -> [6 0 3 1 0]", "(flattenl {[2 1 3] {[8 4 3 6] {[3 7 8 7 4] {[0]}} {[6 6 3] {[9 1 2 8 4]} {[7 4 6 5 8]}}}}) -> [2 1 3 8 4 3 6 3 7 8 7 4 0 6 6 3 9 1 2 8 4 7 4 6 5 8]", "(flattenl {[0 0 1 7 5]}) -> [0 0 1 7 5]", "(flattenl {}) -> []", "(flattenl {[4] {[3 1 1 8]}}) -> [4 3 1 1 8]", "(flattenl {[] {[0 2 6] {[8 2 0]} {[5 2 9 8 9]}} {[3 5 6 8] {[6 5]} {[3 9 3 3 4]}}}) -> [0 2 6 8 2 0 5 2 9 8 9 3 5 6 8 6 5 3 9 3 3 4]", "(flattenl {[4]}) -> [4]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9] {[7 7 2 6] {[1 4 7] {[2 5 4 6]}} {[8] {[1 3]} {[6 9]}}}}) -> [9 7 7 2 6 1 4 7 2 5 4 6 8 1 3 6 9]", "(flattenl {[3 4 0 2]}) -> [3 4 0 2]", "(flattenl {[6 2 7 0] {[6 0 1] {[9]} {[]}}}) -> [6 2 7 0 6 0 1 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.156091, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[7] {[] {[8 5]}}}) -> [7 8 5]", "(flattenl {[5 8 5 1 3]}) -> [5 8 5 1 3]", "(flattenl {[2 6 6 3 7] {[6]}}) -> [2 6 6 3 7 6]", "(flattenl {[5] {[5 6 0 5 6]}}) -> [5 5 6 0 5 6]", "(flattenl {[2 7] {[5 0 3 0 7]}}) -> [2 7 5 0 3 0 7]", "(flattenl {[7 4] {[1 0 8 8] {[]}} {[0 8]}}) -> [7 4 1 0 8 8 0 8]", "(flattenl {}) -> []", "(flattenl {[0 3] {[1 7 5 3 7]} {[0 9 7]}}) -> [0 3 1 7 5 3 7 0 9 7]", "(flattenl {}) -> []", "(flattenl {[7 5 3]}) -> [7 5 3]", "(flattenl {}) -> []", "(flattenl {[5 1 7 7 1] {[7 9 7]} {[9 3 3] {[2 4 5]}}}) -> [5 1 7 7 1 7 9 7 9 3 3 2 4 5]", "(flattenl {[3 5 4] {[4 5 2]}}) -> [3 5 4 4 5 2]", "(flattenl {}) -> []", "(flattenl {[6 3 4] {[4 3]} {[0 1 4]}}) -> [6 3 4 4 3 0 1 4]", "(flattenl {}) -> []", "(flattenl {[0 9 1 2] {[5] {[3 6 8 2 4]}} {[9 5 8 7]}}) -> [0 9 1 2 5 3 6 8 2 4 9 5 8 7]", "(flattenl {[8 6 6] {[8 5 9 2]}}) -> [8 6 6 8 5 9 2]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[7 7 9 4] {[4 7]} {[3 4 6 7 1]}}) -> [7 7 9 4 4 7 3 4 6 7 1]", "(flattenl {[6 4] {[5 7 9 3] {[8 7 7]}}}) -> [6 4 5 7 9 3 8 7 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.145401, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[3 9 7 4]}) -> [3 9 7 4]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[1 9 0] {[3 3 5]}}) -> [1 9 0 3 3 5]", "(flattenl {[9 3 6 5 6]}) -> [9 3 6 5 6]", "(flattenl {[5 1 5 8] {[5] {[4 1]}} {[] {[9 6 4 1 3]} {[4 6] {[1 6]} {[8 0 3]}}}}) -> [5 1 5 8 5 4 1 9 6 4 1 3 4 6 1 6 8 0 3]", "(flattenl {[3 7 4 4] {[] {[2]} {[6 6 2]}}}) -> [3 7 4 4 2 6 6 2]", "(flattenl {[5 6 8 6 5] {[1]}}) -> [5 6 8 6 5 1]", "(flattenl {[] {[5 9 6 8]} {[6 1 6]}}) -> [5 9 6 8 6 1 6]", "(flattenl {}) -> []", "(flattenl {[0] {[]}}) -> [0]", "(flattenl {[6 3 8] {[1 0 5 2]}}) -> [6 3 8 1 0 5 2]", "(flattenl {[2 2] {[2 8 8 6 2] {[6 1 1 5]}}}) -> [2 2 2 8 8 6 2 6 1 1 5]", "(flattenl {}) -> []", "(flattenl {[8 5 1] {[] {[2 7 6 5 3]} {[7 5]}}}) -> [8 5 1 2 7 6 5 3 7 5]", "(flattenl {}) -> []", "(flattenl {[5 7 3 8] {[1 2 1] {[0 5 4 7 9] {[]} {[1]}} {[2 2 0] {[1]} {[2 3 5 1]}}} {[7]}}) -> [5 7 3 8 1 2 1 0 5 4 7 9 1 2 2 0 1 2 3 5 1 7]", "(flattenl {[9 5 8]}) -> [9 5 8]", "(flattenl {}) -> []", "(flattenl {[5 9 9 0] {[1 5 4]}}) -> [5 9 9 0 1 5 4]", "(flattenl {[4 5 5 9 6] {[5 4 1 4 6]}}) -> [4 5 5 9 6 5 4 1 4 6]", "(flattenl {}) -> []", "(flattenl {[] {[5 2 8]}}) -> [5 2 8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.148544, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[0]}) -> [0]", "(flattenl {[6 6 8] {[] {[]} {[] {[4 4 0 7]} {[]}}} {[0] {[6 1 1 4 8] {[0 8 0 5]}} {[5 0] {[5 0 8]} {[5 9]}}}}) -> [6 6 8 4 4 0 7 0 6 1 1 4 8 0 8 0 5 5 0 5 0 8 5 9]", "(flattenl {[3 2 2]}) -> [3 2 2]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[] {[] {[0 9 8 6]}}}) -> [0 9 8 6]", "(flattenl {[5 2 6 8 2]}) -> [5 2 6 8 2]", "(flattenl {}) -> []", "(flattenl {[8 9 8] {[7] {[9 4 4 2] {[3 4 0 7]} {[6 6 0 6 0]}} {[]}}}) -> [8 9 8 7 9 4 4 2 3 4 0 7 6 6 0 6 0]", "(flattenl {[] {[8]}}) -> [8]", "(flattenl {[2 3 3] {[2 3]}}) -> [2 3 3 2 3]", "(flattenl {[6 7 2 8]}) -> [6 7 2 8]", "(flattenl {[8] {[3 6 4]}}) -> [8 3 6 4]", "(flattenl {[2]}) -> [2]", "(flattenl {[5 0 1] {[4 8 7] {[3 8 8 6 9]}}}) -> [5 0 1 4 8 7 3 8 8 6 9]", "(flattenl {[9 9 9 2 0] {[0 8 8]}}) -> [9 9 9 2 0 0 8 8]", "(flattenl {[1 1] {[1 7 2 7]}}) -> [1 1 1 7 2 7]", "(flattenl {[] {[] {[4 6] {[3 2 6]} {[2 6]}}} {[7 4 2 9 5] {[1 6 1 9]} {[0 1 8]}}}) -> [4 6 3 2 6 2 6 7 4 2 9 5 1 6 1 9 0 1 8]", "(flattenl {}) -> []", "(flattenl {[7 2] {[] {[3 2 2 3 5]} {[9 6 7 8 3] {[9 1 0]}}}}) -> [7 2 3 2 2 3 5 9 6 7 8 3 9 1 0]", "(flattenl {}) -> []", "(flattenl {[8 0] {[] {[6 2 4 0 3]} {[5 4 3 6] {[2 9 2]}}} {[3 4 8] {[5 4 2 2] {[]} {[9 6 3]}}}}) -> [8 0 6 2 4 0 3 5 4 3 6 2 9 2 3 4 8 5 4 2 2 9 6 3]", "(flattenl {[1] {[] {[6]}}}) -> [1 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.161748, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[] {[5 5] {[0 5]} {[]}} {[7 5 2 6]}}) -> [5 5 0 5 7 5 2 6]", "(flattenl {[5 2 5] {[1 2]}}) -> [5 2 5 1 2]", "(flattenl {[5]}) -> [5]", "(flattenl {[2 6 3 6] {[6 4] {[5 2 1 2 3] {[8 1 9]}} {[7 4 2] {[3 3 9 3]} {[8 6 0 9 9]}}}}) -> [2 6 3 6 6 4 5 2 1 2 3 8 1 9 7 4 2 3 3 9 3 8 6 0 9 9]", "(flattenl {[3 7]}) -> [3 7]", "(flattenl {[0 9]}) -> [0 9]", "(flattenl {}) -> []", "(flattenl {[5 1 4] {[9 2 7 8 4]}}) -> [5 1 4 9 2 7 8 4]", "(flattenl {[3 7] {[0 0] {[5 2 2]}} {[6] {[7 4 7 3 0] {[7 9 3 7]} {[5 4 1]}}}}) -> [3 7 0 0 5 2 2 6 7 4 7 3 0 7 9 3 7 5 4 1]", "(flattenl {[0 3 9 8 1] {[8]}}) -> [0 3 9 8 1 8]", "(flattenl {}) -> []", "(flattenl {[9 3 4 7 2] {[]}}) -> [9 3 4 7 2]", "(flattenl {[]}) -> []", "(flattenl {[4 3 7 9]}) -> [4 3 7 9]", "(flattenl {}) -> []", "(flattenl {[8 6] {[5 5] {[6 9 8 5 7] {[]}} {[9 2 0]}} {[8 9] {[8] {[5 5 7 3]} {[4]}}}}) -> [8 6 5 5 6 9 8 5 7 9 2 0 8 9 8 5 5 7 3 4]", "(flattenl {}) -> []", "(flattenl {[4] {[4 5 3 7 6] {[0 9 3 5 3] {[2]} {[7 1 1 9]}}}}) -> [4 4 5 3 7 6 0 9 3 5 3 2 7 1 1 9]", "(flattenl {[8 4 9 7]}) -> [8 4 9 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[4 5] {[] {[2]}}} {[5 2 7] {[9 8 0 3 9] {[5 9]} {[0 7]}}}}) -> [4 5 2 5 2 7 9 8 0 3 9 5 9 0 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.169995, "name": "flattenl", "examples": ["(flattenl {[8 8] {[4] {[3 8 0]} {[]}} {[5 2 9 7] {[9 1 6]}}}) -> [8 8 4 3 8 0 5 2 9 7 9 1 6]", "(flattenl {}) -> []", "(flattenl {[7 8] {[6 2 0] {[6 7 7 5 9]}}}) -> [7 8 6 2 0 6 7 7 5 9]", "(flattenl {[4 3 5 2 7] {[1]}}) -> [4 3 5 2 7 1]", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {[9 4] {[7 3 5 2 0]} {[1 8 2]}}) -> [9 4 7 3 5 2 0 1 8 2]", "(flattenl {[3]}) -> [3]", "(flattenl {[4 4 6 1 4]}) -> [4 4 6 1 4]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[8 0 0]}) -> [8 0 0]", "(flattenl {[9 4 8 2] {[] {[4 7 6 8 2]} {[8 8 5]}} {[0 8] {[3 0 6 1] {[]}} {[4 2 6 7]}}}) -> [9 4 8 2 4 7 6 8 2 8 8 5 0 8 3 0 6 1 4 2 6 7]", "(flattenl {[0 3 4 7]}) -> [0 3 4 7]", "(flattenl {[1 3 1]}) -> [1 3 1]", "(flattenl {[6 0 2 1 6]}) -> [6 0 2 1 6]", "(flattenl {}) -> []", "(flattenl {[1 3 8 0 7] {[]} {[4 7 5 6]}}) -> [1 3 8 0 7 4 7 5 6]", "(flattenl {[6 5 1 6] {[7 9 9 3 0] {[6 4 7 9]} {[3 4 0 7 3]}} {[8]}}) -> [6 5 1 6 7 9 9 3 0 6 4 7 9 3 4 0 7 3 8]", "(flattenl {}) -> []", "(flattenl {[7 7] {[0 7 3]} {[]}}) -> [7 7 0 7 3]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[6 7] {[9]} {[9 9 9 5]}}) -> [6 7 9 9 9 9 5]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.144152, "name": "flattenl", "examples": ["(flattenl {[1]}) -> [1]", "(flattenl {[4 4 5]}) -> [4 4 5]", "(flattenl {[9 8 8 1] {[1]}}) -> [9 8 8 1 1]", "(flattenl {[0 6] {[3 2 7] {[5 4]} {[2 1 8]}}}) -> [0 6 3 2 7 5 4 2 1 8]", "(flattenl {}) -> []", "(flattenl {[2 9 4 0 3] {[]}}) -> [2 9 4 0 3]", "(flattenl {[1 8 5 9 6] {[8 0 7] {[7 8] {[7]}} {[5 8 0 9 3] {[3]} {[6]}}}}) -> [1 8 5 9 6 8 0 7 7 8 7 5 8 0 9 3 3 6]", "(flattenl {[5 3 8] {[2 9 1] {[1 6]} {[2 7 2]}} {[5 2]}}) -> [5 3 8 2 9 1 1 6 2 7 2 5 2]", "(flattenl {[8] {[0 9 8 7 2] {[9 7 6 9]} {[6 1 9 5]}}}) -> [8 0 9 8 7 2 9 7 6 9 6 1 9 5]", "(flattenl {[5] {[]}}) -> [5]", "(flattenl {[9 2 2] {[6]}}) -> [9 2 2 6]", "(flattenl {[] {[1]} {[7 4]}}) -> [1 7 4]", "(flattenl {[4 8 4 2 4] {[8 3 9 7]} {[5 7 6]}}) -> [4 8 4 2 4 8 3 9 7 5 7 6]", "(flattenl {[2 2]}) -> [2 2]", "(flattenl {[1 7 2 0 7] {[2 2 4 7] {[4 4 2 5]}} {[0]}}) -> [1 7 2 0 7 2 2 4 7 4 4 2 5 0]", "(flattenl {[5 1 6]}) -> [5 1 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2] {[2 0 0 8]}}) -> [2 2 0 0 8]", "(flattenl {[] {[9 2 7 1 7] {[2 7 2]} {[2 3]}}}) -> [9 2 7 1 7 2 7 2 2 3]", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {[5 0] {[] {[7 0 0 5 1]}}}) -> [5 0 7 0 0 5 1]", "(flattenl {[8 8 9]}) -> [8 8 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.156245, "name": "flattenl", "examples": ["(flattenl {[5 1 3 1 5] {[9 7 7] {[9] {[5]}}} {[5 8 9] {[4 9] {[7 6]} {[1 6 1 9]}} {[] {[5 1]} {[8 4 0 6]}}}}) -> [5 1 3 1 5 9 7 7 9 5 5 8 9 4 9 7 6 1 6 1 9 5 1 8 4 0 6]", "(flattenl {[]}) -> []", "(flattenl {[6 3 3 5 9]}) -> [6 3 3 5 9]", "(flattenl {[5 1 0] {[3 5 2 7]} {[3 0 3 3]}}) -> [5 1 0 3 5 2 7 3 0 3 3]", "(flattenl {[0]}) -> [0]", "(flattenl {[6 5 0 2 8] {[0]}}) -> [6 5 0 2 8 0]", "(flattenl {[4] {[7 4]} {[6 8 7] {[6 3 4 9] {[7 8 0]} {[4 1 5 6]}}}}) -> [4 7 4 6 8 7 6 3 4 9 7 8 0 4 1 5 6]", "(flattenl {}) -> []", "(flattenl {[8 4 1] {[7 7 8 4]}}) -> [8 4 1 7 7 8 4]", "(flattenl {[8 1 4 4 2]}) -> [8 1 4 4 2]", "(flattenl {[6] {[2] {[4 1 5] {[]}} {[] {[2 4 7 1 8]}}} {[7] {[6]} {[]}}}) -> [6 2 4 1 5 2 4 7 1 8 7 6]", "(flattenl {[9 4 8 5]}) -> [9 4 8 5]", "(flattenl {[2 3 7]}) -> [2 3 7]", "(flattenl {}) -> []", "(flattenl {[8 7 5]}) -> [8 7 5]", "(flattenl {[5 9 0] {[4 8 9 0]}}) -> [5 9 0 4 8 9 0]", "(flattenl {[1 5 3 5 2] {[3] {[9 6 5 5 2]}}}) -> [1 5 3 5 2 3 9 6 5 5 2]", "(flattenl {[1 9 7 7 8] {[3] {[7]}} {[9 8 0 9 2] {[6 5]} {[4]}}}) -> [1 9 7 7 8 3 7 9 8 0 9 2 6 5 4]", "(flattenl {[0] {[0]}}) -> [0 0]", "(flattenl {}) -> []", "(flattenl {[9 0 8] {[6 5]}}) -> [9 0 8 6 5]", "(flattenl {[7 1 0 9] {[6 1 2 1 7]}}) -> [7 1 0 9 6 1 2 1 7]", "(flattenl {}) -> []", "(flattenl {[5 8 8]}) -> [5 8 8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.10656, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[6 2]} {[]}}) -> [6 2]", "(flattenl {[4 7]}) -> [4 7]", "(flattenl {[5 4] {[]}}) -> [5 4]", "(flattenl {[] {[7 7 8 2] {[2 2 3 2]}} {[7 4 3]}}) -> [7 7 8 2 2 2 3 2 7 4 3]", "(flattenl {}) -> []", "(flattenl {[9 0 9 5 2] {[4 8 1 3]} {[]}}) -> [9 0 9 5 2 4 8 1 3]", "(flattenl {[] {[7 1 5]} {[] {[3 7 0 7 2]}}}) -> [7 1 5 3 7 0 7 2]", "(flattenl {[3 7 4 2]}) -> [3 7 4 2]", "(flattenl {[1 0 1] {[3 6] {[7 3]}}}) -> [1 0 1 3 6 7 3]", "(flattenl {[]}) -> []", "(flattenl {[0 6 7]}) -> [0 6 7]", "(flattenl {[8 9 1 5]}) -> [8 9 1 5]", "(flattenl {[1 0 7] {[0] {[2]} {[]}}}) -> [1 0 7 0 2]", "(flattenl {[1] {[]} {[1 0 8 4 1]}}) -> [1 1 0 8 4 1]", "(flattenl {[0]}) -> [0]", "(flattenl {}) -> []", "(flattenl {[2]}) -> [2]", "(flattenl {[5 3 7 4] {[]} {[3 3 0 5 7]}}) -> [5 3 7 4 3 3 0 5 7]", "(flattenl {[3 0 2 3] {[7 8 7] {[0 0 1] {[1]}}}}) -> [3 0 2 3 7 8 7 0 0 1 1]", "(flattenl {[] {[]} {[7 9]}}) -> [7 9]", "(flattenl {[5 3 7] {[1 7 6 4 5] {[0 2 7 6]} {[6 8 5 8 4]}}}) -> [5 3 7 1 7 6 4 5 0 2 7 6 6 8 5 8 4]", "(flattenl {[2 3 0 0] {[] {[0]} {[5 9 0 8 6]}} {[4 3 6] {[9 9 4 4]} {[7]}}}) -> [2 3 0 0 0 5 9 0 8 6 4 3 6 9 9 4 4 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.125146, "name": "flattenl", "examples": ["(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[6 8 6 2 6]}) -> [6 8 6 2 6]", "(flattenl {[4 9 4 4]}) -> [4 9 4 4]", "(flattenl {}) -> []", "(flattenl {[9 5 9] {[] {[3 9 9]}}}) -> [9 5 9 3 9 9]", "(flattenl {[8 9 0 6]}) -> [8 9 0 6]", "(flattenl {}) -> []", "(flattenl {[5] {[] {[7 3 0 2 3] {[]} {[4 9 8 5 1]}} {[3 1]}} {[8 3 4 9] {[3] {[5 2 1 2 7]} {[6 1 7 5]}} {[9]}}}) -> [5 7 3 0 2 3 4 9 8 5 1 3 1 8 3 4 9 3 5 2 1 2 7 6 1 7 5 9]", "(flattenl {[2 8 6]}) -> [2 8 6]", "(flattenl {[] {[3] {[2 7 2 1]}}}) -> [3 2 7 2 1]", "(flattenl {[] {[]}}) -> []", "(flattenl {[3 7] {[0 7] {[3 5 6 2 4]} {[4 1 2 5]}}}) -> [3 7 0 7 3 5 6 2 4 4 1 2 5]", "(flattenl {[8 9]}) -> [8 9]", "(flattenl {[2 1] {[]} {[5 6 6 4 0]}}) -> [2 1 5 6 6 4 0]", "(flattenl {[9 8 6] {[6 1 0]}}) -> [9 8 6 6 1 0]", "(flattenl {[5 6 3] {[7 6] {[8 7 3 1 4]}} {[] {[0 4 9]}}}) -> [5 6 3 7 6 8 7 3 1 4 0 4 9]", "(flattenl {[6 9] {[7 3 5] {[1 2 8 2 6]} {[]}} {[4] {[0 5 9 8 5]} {[1]}}}) -> [6 9 7 3 5 1 2 8 2 6 4 0 5 9 8 5 1]", "(flattenl {[3 3]}) -> [3 3]", "(flattenl {[1 0 9 5 0] {[0 2 9 7 2]} {[8 1] {[8 2] {[2 7 1]}} {[2] {[5 5 3 8 6]} {[1 5 0 3]}}}}) -> [1 0 9 5 0 0 2 9 7 2 8 1 8 2 2 7 1 2 5 5 3 8 6 1 5 0 3]", "(flattenl {[] {[8 1] {[4 1]} {[7 7 8]}} {[4 6] {[1]} {[2 8 5 6 7]}}}) -> [8 1 4 1 7 7 8 4 6 1 2 8 5 6 7]", "(flattenl {[8 9 7 9] {[9 2 6 8]}}) -> [8 9 7 9 9 2 6 8]", "(flattenl {[7 7 7 6 8]}) -> [7 7 7 6 8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.14489, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[] {[1 2]}}) -> [1 2]", "(flattenl {[4 1 7] {[5 7 9 7] {[0]}}}) -> [4 1 7 5 7 9 7 0]", "(flattenl {[3] {[7 8]} {[7 2 9] {[] {[9 4 6 8]}}}}) -> [3 7 8 7 2 9 9 4 6 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3 6 5 2 7] {[5 3 6] {[6 4] {[1 9]} {[7 7 7 6]}} {[6 3 8 6 9] {[9 8 2 7]} {[]}}} {[9 1 1 0 1]}}) -> [3 6 5 2 7 5 3 6 6 4 1 9 7 7 7 6 6 3 8 6 9 9 8 2 7 9 1 1 0 1]", "(flattenl {[3 9 8 8 0] {[3 2] {[8 5]} {[9 6 0]}} {[2 9 9]}}) -> [3 9 8 8 0 3 2 8 5 9 6 0 2 9 9]", "(flattenl {[6 9 8 3 1] {[3 8] {[3 9 9 6 3]} {[2 9]}} {[3 9 3 5] {[8 2]} {[8 4 1]}}}) -> [6 9 8 3 1 3 8 3 9 9 6 3 2 9 3 9 3 5 8 2 8 4 1]", "(flattenl {[2] {[8 2 5] {[6 3 1 7 6] {[2 3 9]} {[]}}}}) -> [2 8 2 5 6 3 1 7 6 2 3 9]", "(flattenl {[3 2 7 6] {[0 9 1 5 7]} {[1 6 2]}}) -> [3 2 7 6 0 9 1 5 7 1 6 2]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 2] {[5]} {[5]}}) -> [5 2 5 5]", "(flattenl {[9]}) -> [9]", "(flattenl {[3 2] {[1]}}) -> [3 2 1]", "(flattenl {[8 4 5 0 9] {[] {[]}}}) -> [8 4 5 0 9]", "(flattenl {[2 2] {[] {[3 9 8 0 8]} {[4 9 3 9 4] {[5]} {[]}}} {[4 7 0 8 2] {[8]} {[0]}}}) -> [2 2 3 9 8 0 8 4 9 3 9 4 5 4 7 0 8 2 8 0]", "(flattenl {[9 7 2 2] {[7 6 0 9]} {[]}}) -> [9 7 2 2 7 6 0 9]", "(flattenl {[8 9 6] {[4 8 5 5]}}) -> [8 9 6 4 8 5 5]", "(flattenl {[3 4 6 5] {[4 8 7 6 2] {[7 7 5 5 1]}}}) -> [3 4 6 5 4 8 7 6 2 7 7 5 5 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.139814, "name": "flattenl", "examples": ["(flattenl {[0 6] {[6 3 9 2 3] {[4]}} {[2 7 4 2 3]}}) -> [0 6 6 3 9 2 3 4 2 7 4 2 3]", "(flattenl {[9 1 3 4 1] {[8 2 6 3 6]} {[1]}}) -> [9 1 3 4 1 8 2 6 3 6 1]", "(flattenl {[5 0 9 9] {[9 2 6 1] {[6]} {[]}} {[9 8 0 6] {[2 3]}}}) -> [5 0 9 9 9 2 6 1 6 9 8 0 6 2 3]", "(flattenl {}) -> []", "(flattenl {[9 5] {[9 8]} {[5 9 3 6 7] {[4] {[1]} {[1]}}}}) -> [9 5 9 8 5 9 3 6 7 4 1 1]", "(flattenl {[2 0 5 5 5] {[7 8] {[3 1 3 4] {[6 0 7 0]}} {[4 4]}} {[]}}) -> [2 0 5 5 5 7 8 3 1 3 4 6 0 7 0 4 4]", "(flattenl {[7 8 1 2 5]}) -> [7 8 1 2 5]", "(flattenl {[3 3 2 0 8]}) -> [3 3 2 0 8]", "(flattenl {}) -> []", "(flattenl {[] {[3 0 3]}}) -> [3 0 3]", "(flattenl {[4 3] {[9 0 1 3 5] {[6 5 5 0 7]} {[6 4 3 8 8] {[4 2 3]}}}}) -> [4 3 9 0 1 3 5 6 5 5 0 7 6 4 3 8 8 4 2 3]", "(flattenl {[] {[8 8 2]} {[7 6 5]}}) -> [8 8 2 7 6 5]", "(flattenl {}) -> []", "(flattenl {[1 3 4] {[6 3 0 8]}}) -> [1 3 4 6 3 0 8]", "(flattenl {[9] {[4 9 7 9 8] {[9 3 0 5]} {[]}} {[1 5 6 9 8]}}) -> [9 4 9 7 9 8 9 3 0 5 1 5 6 9 8]", "(flattenl {}) -> []", "(flattenl {[3] {[2]} {[4 6 2]}}) -> [3 2 4 6 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 3] {[]}}) -> [7 3]", "(flattenl {[9 0 5] {[9 8 4] {[]} {[4]}}}) -> [9 0 5 9 8 4 4]", "(flattenl {[5 8 6] {[9 2 5 5 3]} {[7 7]}}) -> [5 8 6 9 2 5 5 3 7 7]", "(flattenl {[7 4 7]}) -> [7 4 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.121593, "name": "flattenl", "examples": ["(flattenl {[1 5] {[]}}) -> [1 5]", "(flattenl {[2 1]}) -> [2 1]", "(flattenl {}) -> []", "(flattenl {[3 8] {[4 2 4]} {[4 4 0]}}) -> [3 8 4 2 4 4 4 0]", "(flattenl {[9 4] {[6] {[6 5 8]}}}) -> [9 4 6 6 5 8]", "(flattenl {[1] {[1 9 6] {[]}} {[0]}}) -> [1 1 9 6 0]", "(flattenl {[3 6 1 5]}) -> [3 6 1 5]", "(flattenl {[7 4] {[5] {[7 0]}} {[1]}}) -> [7 4 5 7 0 1]", "(flattenl {}) -> []", "(flattenl {[4 0 9] {[3 7 7 1 9] {[9 5 9 6] {[5 2 6 8 0]}} {[] {[6]}}} {[7]}}) -> [4 0 9 3 7 7 1 9 9 5 9 6 5 2 6 8 0 6 7]", "(flattenl {[2 3]}) -> [2 3]", "(flattenl {[6 5 2]}) -> [6 5 2]", "(flattenl {[4 6 1] {[4 3 6 8 5] {[3 7 8 6 7]} {[7 7 6 9]}} {[0 3 1 9]}}) -> [4 6 1 4 3 6 8 5 3 7 8 6 7 7 7 6 9 0 3 1 9]", "(flattenl {[7] {[4 3 2]} {[0]}}) -> [7 4 3 2 0]", "(flattenl {}) -> []", "(flattenl {[0 3 4 3 2] {[1 3 3]} {[8 8 7 3 8]}}) -> [0 3 4 3 2 1 3 3 8 8 7 3 8]", "(flattenl {[5 4 5] {[6] {[]}}}) -> [5 4 5 6]", "(flattenl {[1 0 1 7] {[8 3]} {[4 3 7 9]}}) -> [1 0 1 7 8 3 4 3 7 9]", "(flattenl {[5]}) -> [5]", "(flattenl {[3]}) -> [3]", "(flattenl {[2 1 4 3]}) -> [2 1 4 3]", "(flattenl {[9 0 4 3] {[] {[8 0] {[1 8 4]} {[]}} {[5 3] {[5]}}}}) -> [9 0 4 3 8 0 1 8 4 5 3 5]", "(flattenl {[9 0] {[9 7]} {[]}}) -> [9 0 9 7]", "(flattenl {[7 0] {[2 2] {[7 5 4 0 3] {[]}}}}) -> [7 0 2 2 7 5 4 0 3]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.110518, "name": "flattenl", "examples": ["(flattenl {[9 7 8]}) -> [9 7 8]", "(flattenl {[7 5 1] {[]} {[]}}) -> [7 5 1]", "(flattenl {}) -> []", "(flattenl {[5 3 1] {[] {[]} {[6]}} {[0]}}) -> [5 3 1 6 0]", "(flattenl {[3 9 0 0 3]}) -> [3 9 0 0 3]", "(flattenl {[5]}) -> [5]", "(flattenl {[] {[] {[9 1 6 1] {[3 5]} {[0]}}} {[2 0 0 7] {[0] {[]}}}}) -> [9 1 6 1 3 5 0 2 0 0 7 0]", "(flattenl {[] {[3 8 4]}}) -> [3 8 4]", "(flattenl {[2]}) -> [2]", "(flattenl {[2 1] {[5 3 0 0] {[8 1 5 7] {[]}}}}) -> [2 1 5 3 0 0 8 1 5 7]", "(flattenl {[4 3] {[2 3] {[0 9] {[9 5 1 1]} {[]}} {[3 8 3] {[4 8 9 0]}}}}) -> [4 3 2 3 0 9 9 5 1 1 3 8 3 4 8 9 0]", "(flattenl {[0 0 0] {[3]}}) -> [0 0 0 3]", "(flattenl {}) -> []", "(flattenl {[9 7 2] {[6] {[1 7 4]} {[6 0 7 8]}} {[9 5] {[0 8 3 9]}}}) -> [9 7 2 6 1 7 4 6 0 7 8 9 5 0 8 3 9]", "(flattenl {[8 0 2 7 6] {[5 7 1] {[7 5 7 3 0]}} {[6] {[4 0 7 7]}}}) -> [8 0 2 7 6 5 7 1 7 5 7 3 0 6 4 0 7 7]", "(flattenl {[] {[5 8 5 2 3]}}) -> [5 8 5 2 3]", "(flattenl {[] {[3]}}) -> [3]", "(flattenl {}) -> []", "(flattenl {[8]}) -> [8]", "(flattenl {[3 8] {[5 3 1] {[5]}}}) -> [3 8 5 3 1 5]", "(flattenl {[3 0] {[6 6 2]}}) -> [3 0 6 6 2]", "(flattenl {[2] {[9 6 1]}}) -> [2 9 6 1]", "(flattenl {[1 9 2] {[9]}}) -> [1 9 2 9]", "(flattenl {[6]}) -> [6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.153511, "name": "flattenl", "examples": ["(flattenl {[4 7]}) -> [4 7]", "(flattenl {[4]}) -> [4]", "(flattenl {}) -> []", "(flattenl {[] {[3 7 7 0]} {[0 3 7]}}) -> [3 7 7 0 0 3 7]", "(flattenl {}) -> []", "(flattenl {[6 5 3 0 5] {[2 4 5]} {[] {[5 6 0 7 6]} {[1 4 2 3]}}}) -> [6 5 3 0 5 2 4 5 5 6 0 7 6 1 4 2 3]", "(flattenl {[4]}) -> [4]", "(flattenl {[5 8 9]}) -> [5 8 9]", "(flattenl {[] {[3] {[4 3 5 9]}} {[4] {[]}}}) -> [3 4 3 5 9 4]", "(flattenl {[] {[2 4 4 0] {[9 1 5]}} {[1 8 2 4 9]}}) -> [2 4 4 0 9 1 5 1 8 2 4 9]", "(flattenl {[7 2 9]}) -> [7 2 9]", "(flattenl {[9 1 6 3 4]}) -> [9 1 6 3 4]", "(flattenl {}) -> []", "(flattenl {[7 4] {[9 6] {[8 0 0 4 3]} {[0 7 0 1]}}}) -> [7 4 9 6 8 0 0 4 3 0 7 0 1]", "(flattenl {[9] {[3] {[] {[]}} {[0 2 1] {[3 3 3 3]}}}}) -> [9 3 0 2 1 3 3 3 3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[6 4 4 5] {[4] {[4 7 5]}}}) -> [6 4 4 5 4 4 7 5]", "(flattenl {[2]}) -> [2]", "(flattenl {}) -> []", "(flattenl {[0 1]}) -> [0 1]", "(flattenl {[5 4 1 3] {[]} {[3 6 0]}}) -> [5 4 1 3 3 6 0]", "(flattenl {[] {[3 9 7] {[1 7] {[6]}} {[8]}} {[0 8 5] {[6 4 3 3] {[3 4 3]}}}}) -> [3 9 7 1 7 6 8 0 8 5 6 4 3 3 3 4 3]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.153238, "name": "flattenl", "examples": ["(flattenl {[3 8 7 9 5]}) -> [3 8 7 9 5]", "(flattenl {}) -> []", "(flattenl {[9 2 4 9] {[] {[4 0 2] {[]} {[]}} {[0 0] {[]} {[0]}}}}) -> [9 2 4 9 4 0 2 0 0 0]", "(flattenl {[] {[7]}}) -> [7]", "(flattenl {}) -> []", "(flattenl {[1 2] {[]}}) -> [1 2]", "(flattenl {}) -> []", "(flattenl {[] {[1 7 1 2]}}) -> [1 7 1 2]", "(flattenl {[0 3 7]}) -> [0 3 7]", "(flattenl {[4 7 4 5 9] {[2 8 0 1 1]}}) -> [4 7 4 5 9 2 8 0 1 1]", "(flattenl {[5 6] {[9 0] {[]} {[5 6]}} {[5 4 2 6] {[] {[]}} {[5]}}}) -> [5 6 9 0 5 6 5 4 2 6 5]", "(flattenl {[9 7 0] {[4 8 0] {[] {[1 5 2]}}} {[2] {[0 8 0 2 1]} {[8]}}}) -> [9 7 0 4 8 0 1 5 2 2 0 8 0 2 1 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[0] {[9 7] {[1]} {[8 8 9]}}}) -> [0 9 7 1 8 8 9]", "(flattenl {[1]}) -> [1]", "(flattenl {}) -> []", "(flattenl {[0 1 8 9] {[3 2 1 8 2] {[7 6 0 0 2]} {[]}}}) -> [0 1 8 9 3 2 1 8 2 7 6 0 0 2]", "(flattenl {}) -> []", "(flattenl {[1 7 3]}) -> [1 7 3]", "(flattenl {[] {[1 8 7 7] {[2 5] {[9 6 4 8 9]}} {[1 0 7] {[1 1 6]}}}}) -> [1 8 7 7 2 5 9 6 4 8 9 1 0 7 1 1 6]", "(flattenl {}) -> []", "(flattenl {[7] {[2 0]}}) -> [7 2 0]", "(flattenl {[9 2 8 1] {[3 3 8 3 7] {[5 4 7 5 0]} {[8 3 2 8]}} {[1 5 5 1] {[]}}}) -> [9 2 8 1 3 3 8 3 7 5 4 7 5 0 8 3 2 8 1 5 5 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.149991, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[8 6]}) -> [8 6]", "(flattenl {[3 8] {[9 7] {[]} {[5]}}}) -> [3 8 9 7 5]", "(flattenl {[8 9 2 3 3] {[0 2 9 5] {[] {[]} {[8 0 9 1 6]}}} {[4 7] {[5 3 9 8 4]} {[4]}}}) -> [8 9 2 3 3 0 2 9 5 8 0 9 1 6 4 7 5 3 9 8 4 4]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[7 0 8 7 2] {[9 9 5]} {[5]}}) -> [7 0 8 7 2 9 9 5 5]", "(flattenl {[6 8 4] {[]} {[]}}) -> [6 8 4]", "(flattenl {[3 3] {[8]} {[2 0 4 3 9]}}) -> [3 3 8 2 0 4 3 9]", "(flattenl {[2 1]}) -> [2 1]", "(flattenl {[4 9 7] {[3 9 6 7]} {[5 7 8 6]}}) -> [4 9 7 3 9 6 7 5 7 8 6]", "(flattenl {[4] {[6 6 0 8]} {[]}}) -> [4 6 6 0 8]", "(flattenl {[0 3 9 0] {[6] {[0] {[5 0 8 1]}} {[1 6 0] {[2 2 9]} {[]}}}}) -> [0 3 9 0 6 0 5 0 8 1 1 6 0 2 2 9]", "(flattenl {[7 0] {[3 3] {[7 6 8 7]} {[]}} {[0 4 4 6 7] {[]}}}) -> [7 0 3 3 7 6 8 7 0 4 4 6 7]", "(flattenl {[4 6 2] {[5 2]}}) -> [4 6 2 5 2]", "(flattenl {[2 0 0] {[4 3 0 4 4]} {[0 1]}}) -> [2 0 0 4 3 0 4 4 0 1]", "(flattenl {[7]}) -> [7]", "(flattenl {[6 5 8] {[0]} {[3 6 7]}}) -> [6 5 8 0 3 6 7]", "(flattenl {[2 1 6 1 6]}) -> [2 1 6 1 6]", "(flattenl {}) -> []", "(flattenl {[3 1 3 5 9] {[0 2] {[3 2 7 3 2]} {[2 6 4]}} {[] {[1 2 5 4]} {[]}}}) -> [3 1 3 5 9 0 2 3 2 7 3 2 2 6 4 1 2 5 4]", "(flattenl {[] {[2]} {[3 9]}}) -> [2 3 9]", "(flattenl {[2 2]}) -> [2 2]", "(flattenl {[9 0] {[8 7 2 4 4] {[3 3 6 4 9]} {[6]}}}) -> [9 0 8 7 2 4 4 3 3 6 4 9 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.158576, "name": "flattenl", "examples": ["(flattenl {[2 5 0 9 6]}) -> [2 5 0 9 6]", "(flattenl {[] {[]} {[]}}) -> []", "(flattenl {[4 2 8 0 5]}) -> [4 2 8 0 5]", "(flattenl {}) -> []", "(flattenl {[] {[0 4 9] {[8] {[8]} {[6 0 2]}} {[4] {[]}}} {[] {[2]} {[3 9]}}}) -> [0 4 9 8 8 6 0 2 4 2 3 9]", "(flattenl {[8 1 4 3]}) -> [8 1 4 3]", "(flattenl {[7 7 7] {[2] {[3 4 2]}}}) -> [7 7 7 2 3 4 2]", "(flattenl {[5 7 8 7] {[9 9]} {[]}}) -> [5 7 8 7 9 9]", "(flattenl {[] {[5 3 9] {[] {[5 8 4]} {[6 1]}} {[8]}} {[1 6 7 2] {[5] {[9]}} {[4 6]}}}) -> [5 3 9 5 8 4 6 1 8 1 6 7 2 5 9 4 6]", "(flattenl {[] {[3 4 9 3]} {[]}}) -> [3 4 9 3]", "(flattenl {[1 0]}) -> [1 0]", "(flattenl {}) -> []", "(flattenl {[2 7] {[4]} {[7]}}) -> [2 7 4 7]", "(flattenl {[4 3] {[2] {[3 5 2 1 0] {[8 5 7 7 7]}} {[] {[3 9 2 4 7]}}}}) -> [4 3 2 3 5 2 1 0 8 5 7 7 7 3 9 2 4 7]", "(flattenl {[0] {[0 4 3 9 0]} {[3 4 3] {[6]} {[6 9 0] {[9 2 0 9 2]}}}}) -> [0 0 4 3 9 0 3 4 3 6 6 9 0 9 2 0 9 2]", "(flattenl {[0 1 5 8 5] {[4 3 5 6 3]} {[]}}) -> [0 1 5 8 5 4 3 5 6 3]", "(flattenl {[] {[9 0]} {[]}}) -> [9 0]", "(flattenl {[6 7] {[] {[8 8 2 2 8]} {[7 2 2 6]}}}) -> [6 7 8 8 2 2 8 7 2 2 6]", "(flattenl {}) -> []", "(flattenl {[7 9]}) -> [7 9]", "(flattenl {[] {[2 6 7 6] {[6 4 7 8 3]}}}) -> [2 6 7 6 6 4 7 8 3]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[2 1] {[5 3 3 2 1]}}) -> [2 1 5 3 3 2 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.130515, "name": "flattenl", "examples": ["(flattenl {[] {[7]}}) -> [7]", "(flattenl {[3] {[8 6 6] {[] {[6 0 8 2]}} {[7]}}}) -> [3 8 6 6 6 0 8 2 7]", "(flattenl {[2] {[5]} {[5 1]}}) -> [2 5 5 1]", "(flattenl {[5]}) -> [5]", "(flattenl {[9 6 3 2 7]}) -> [9 6 3 2 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[8 4 5 8 0] {[0] {[9 5 6 3 2]} {[1 4 1]}} {[2 3 3] {[6]} {[5 7 3 5 6]}}}) -> [8 4 5 8 0 0 9 5 6 3 2 1 4 1 2 3 3 6 5 7 3 5 6]", "(flattenl {[1] {[4 1 3 2 3] {[9 7 7 5 1]}}}) -> [1 4 1 3 2 3 9 7 7 5 1]", "(flattenl {[0] {[]} {[]}}) -> [0]", "(flattenl {[4 1 3 7]}) -> [4 1 3 7]", "(flattenl {}) -> []", "(flattenl {[1 2 9 2 3] {[] {[2 4 3 0] {[5]}}} {[2 1 2] {[]}}}) -> [1 2 9 2 3 2 4 3 0 5 2 1 2]", "(flattenl {[4 8 0 3 8]}) -> [4 8 0 3 8]", "(flattenl {[3 7 1] {[9 2] {[6 4 6 6] {[]}}}}) -> [3 7 1 9 2 6 4 6 6]", "(flattenl {}) -> []", "(flattenl {[2 9] {[] {[4 6] {[8 4 8 7]} {[7 1 8 6 9]}}}}) -> [2 9 4 6 8 4 8 7 7 1 8 6 9]", "(flattenl {[7 2 4 9 4] {[9 3 8]} {[]}}) -> [7 2 4 9 4 9 3 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9 7 7 6 9] {[3 9 5 0 3] {[9 8 5] {[7 8]}}} {[1 5 2] {[2 0 1 8] {[1 2 0 7]} {[1 3 1 2]}} {[6 4 4 2 3]}}}) -> [9 7 7 6 9 3 9 5 0 3 9 8 5 7 8 1 5 2 2 0 1 8 1 2 0 7 1 3 1 2 6 4 4 2 3]", "(flattenl {[5]}) -> [5]", "(flattenl {[7 4 7] {[] {[7 3 6] {[]}} {[8] {[6 1 3 5]}}} {[0 0 6] {[] {[0 3 7 4]}} {[2]}}}) -> [7 4 7 7 3 6 8 6 1 3 5 0 0 6 0 3 7 4 2]", "(flattenl {[] {[3 3 6 8] {[7 7 5 4 2]} {[8]}} {[1 1 1 1] {[2 1 9]}}}) -> [3 3 6 8 7 7 5 4 2 8 1 1 1 1 2 1 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.159237, "name": "flattenl", "examples": ["(flattenl {[5 2]}) -> [5 2]", "(flattenl {[0 8 1] {[8 0 7 8 0] {[6 4 6 8] {[]}} {[] {[0]}}} {[3 4 9 7]}}) -> [0 8 1 8 0 7 8 0 6 4 6 8 0 3 4 9 7]", "(flattenl {[4] {[4 3 3 0 0]} {[1 8 3 8] {[9 8 9 5 6]}}}) -> [4 4 3 3 0 0 1 8 3 8 9 8 9 5 6]", "(flattenl {[2 1 4] {[8]}}) -> [2 1 4 8]", "(flattenl {[] {[4 7]} {[0 1 8 6] {[] {[1 7 9 8]}} {[5 1 0 3]}}}) -> [4 7 0 1 8 6 1 7 9 8 5 1 0 3]", "(flattenl {[0 4 6 0 4] {[3 0 9 0 8]} {[6] {[2 5 7 3 3] {[4 7]}} {[7 9 4 0 8]}}}) -> [0 4 6 0 4 3 0 9 0 8 6 2 5 7 3 3 4 7 7 9 4 0 8]", "(flattenl {[] {[1 0]} {[7]}}) -> [1 0 7]", "(flattenl {[6 6 4 5 1]}) -> [6 6 4 5 1]", "(flattenl {[2 1 2] {[2 2] {[]}}}) -> [2 1 2 2 2]", "(flattenl {}) -> []", "(flattenl {[0 0 0 2 8] {[8 3 0 7 6]}}) -> [0 0 0 2 8 8 3 0 7 6]", "(flattenl {[3 1 1]}) -> [3 1 1]", "(flattenl {}) -> []", "(flattenl {[] {[1 8 1 3]} {[2 7]}}) -> [1 8 1 3 2 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9 6 2 2] {[]} {[]}}) -> [9 6 2 2]", "(flattenl {[0] {[0 5 2 2]}}) -> [0 0 5 2 2]", "(flattenl {[6 2 8] {[9 5]} {[0 0 3 1 2]}}) -> [6 2 8 9 5 0 0 3 1 2]", "(flattenl {}) -> []", "(flattenl {[2 6 4 0 8]}) -> [2 6 4 0 8]", "(flattenl {[5 6 9 7 4] {[8 1 0 5] {[4 8 0 5 2] {[3 3]}} {[]}}}) -> [5 6 9 7 4 8 1 0 5 4 8 0 5 2 3 3]", "(flattenl {[0 9 9 8] {[4 6] {[8 0 4]} {[]}}}) -> [0 9 9 8 4 6 8 0 4]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.155722, "name": "flattenl", "examples": ["(flattenl {[9] {[6]}}) -> [9 6]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[1 7 8 7] {[8 1 3] {[3 5]} {[9]}} {[8 2 1] {[9]}}}) -> [1 7 8 7 8 1 3 3 5 9 8 2 1 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[0] {[7 9 0 0]}}) -> [0 7 9 0 0]", "(flattenl {[5 4 1 3] {[3]} {[3 1 8 8 9] {[]} {[0 6 5]}}}) -> [5 4 1 3 3 3 1 8 8 9 0 6 5]", "(flattenl {[4] {[6 1 2 3] {[8 8 2] {[6 0 2]} {[9 8 3]}} {[2] {[2 6 4 8 3]} {[9]}}}}) -> [4 6 1 2 3 8 8 2 6 0 2 9 8 3 2 2 6 4 8 3 9]", "(flattenl {[4 0 4]}) -> [4 0 4]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3] {[8 2 9] {[5 7 2 1]} {[3 4 9]}}}) -> [3 8 2 9 5 7 2 1 3 4 9]", "(flattenl {[7 6 1] {[6 1 1 6 5]} {[4 0] {[0 1 2 1 8]} {[]}}}) -> [7 6 1 6 1 1 6 5 4 0 0 1 2 1 8]", "(flattenl {[8] {[3]}}) -> [8 3]", "(flattenl {[1] {[4 6 2]} {[5 4 7 3 6]}}) -> [1 4 6 2 5 4 7 3 6]", "(flattenl {}) -> []", "(flattenl {[0 7] {[5]} {[1 1 2 0 3]}}) -> [0 7 5 1 1 2 0 3]", "(flattenl {[5 9 1 4]}) -> [5 9 1 4]", "(flattenl {[7 4] {[9 6] {[5 5 0]}} {[7]}}) -> [7 4 9 6 5 5 0 7]", "(flattenl {}) -> []", "(flattenl {[4]}) -> [4]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.144878, "name": "flattenl", "examples": ["(flattenl {[7 4 5 2] {[0 0 8 5]} {[2 2 0 0 0]}}) -> [7 4 5 2 0 0 8 5 2 2 0 0 0]", "(flattenl {[7]}) -> [7]", "(flattenl {[] {[]} {[1 6 1 7]}}) -> [1 6 1 7]", "(flattenl {[7]}) -> [7]", "(flattenl {[7]}) -> [7]", "(flattenl {}) -> []", "(flattenl {[5]}) -> [5]", "(flattenl {[5 5 7] {[6 6]}}) -> [5 5 7 6 6]", "(flattenl {}) -> []", "(flattenl {[] {[4 0]}}) -> [4 0]", "(flattenl {[] {[]} {[9 0 2 8 6]}}) -> [9 0 2 8 6]", "(flattenl {[0] {[2 4 9 1 0]} {[3 1 2 5]}}) -> [0 2 4 9 1 0 3 1 2 5]", "(flattenl {}) -> []", "(flattenl {[8 5 3 8 0] {[0 4 6]}}) -> [8 5 3 8 0 0 4 6]", "(flattenl {[0 9] {[8 1 6 1 4] {[0 6]}}}) -> [0 9 8 1 6 1 4 0 6]", "(flattenl {[0 5 9] {[1 0] {[4 5 7 6]} {[7 3 6 0 7]}} {[5 9] {[1]} {[0 2 2 4 5]}}}) -> [0 5 9 1 0 4 5 7 6 7 3 6 0 7 5 9 1 0 2 2 4 5]", "(flattenl {[0] {[0 9 9 0] {[]}}}) -> [0 0 9 9 0]", "(flattenl {[4 4 5 0 8]}) -> [4 4 5 0 8]", "(flattenl {}) -> []", "(flattenl {[6 9 4 7 7] {[0 1 1 8] {[2 9 6]}}}) -> [6 9 4 7 7 0 1 1 8 2 9 6]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[1 3 7 3 6]} {[6 5]}}) -> [1 3 7 3 6 6 5]", "(flattenl {[] {[0 4 6 9 0]} {[0 2 0 1] {[8 7 9 5] {[]}} {[6 7 6 2 0] {[2 9 2 2 0]} {[]}}}}) -> [0 4 6 9 0 0 2 0 1 8 7 9 5 6 7 6 2 0 2 9 2 2 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.140097, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[2 1] {[] {[] {[3 9 4 3]}}}}) -> [2 1 3 9 4 3]", "(flattenl {[5 1] {[]} {[8 8 3 0 2]}}) -> [5 1 8 8 3 0 2]", "(flattenl {}) -> []", "(flattenl {[7 8 7 7 0] {[1] {[9 0]}} {[4 6 5] {[]}}}) -> [7 8 7 7 0 1 9 0 4 6 5]", "(flattenl {[3] {[6 6 6 5 3]} {[3 2 2 9 4]}}) -> [3 6 6 6 5 3 3 2 2 9 4]", "(flattenl {[0 9 9 2] {[5 5 1 7 6]} {[9] {[]} {[0]}}}) -> [0 9 9 2 5 5 1 7 6 9 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[1]}) -> [1]", "(flattenl {[3 4]}) -> [3 4]", "(flattenl {[5] {[7]} {[5 6 1 5 5]}}) -> [5 7 5 6 1 5 5]", "(flattenl {[5 1 8 8]}) -> [5 1 8 8]", "(flattenl {[5 8 9] {[9]}}) -> [5 8 9 9]", "(flattenl {[5]}) -> [5]", "(flattenl {}) -> []", "(flattenl {[7 8] {[0 1 1 2 6] {[7 4 6]}}}) -> [7 8 0 1 1 2 6 7 4 6]", "(flattenl {[2 4 5] {[1 7 9 9]} {[9]}}) -> [2 4 5 1 7 9 9 9]", "(flattenl {[3]}) -> [3]", "(flattenl {}) -> []", "(flattenl {[0] {[]}}) -> [0]", "(flattenl {[8 6 7] {[0 4 4] {[]} {[1 6] {[0]} {[2 6 8]}}}}) -> [8 6 7 0 4 4 1 6 0 2 6 8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.140259, "name": "flattenl", "examples": ["(flattenl {[9]}) -> [9]", "(flattenl {[9 7] {[]} {[5 7]}}) -> [9 7 5 7]", "(flattenl {[] {[7 1 2] {[3 1 2] {[2]} {[8 0 0 7]}}} {[] {[1] {[7 5]}} {[]}}}) -> [7 1 2 3 1 2 2 8 0 0 7 1 7 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[0]}}) -> [0]", "(flattenl {}) -> []", "(flattenl {[3 7] {[8 1]}}) -> [3 7 8 1]", "(flattenl {[]}) -> []", "(flattenl {[] {[2 9] {[3 0 0]} {[4 8 6 8 7]}} {[5 1 1 2 3] {[5 7 4 4]}}}) -> [2 9 3 0 0 4 8 6 8 7 5 1 1 2 3 5 7 4 4]", "(flattenl {[9 4 3 7]}) -> [9 4 3 7]", "(flattenl {}) -> []", "(flattenl {[1 7] {[1 6 1 3] {[3 9 5 1 2] {[1 1 2 9 0]} {[9 6 4 7]}} {[5 2 0 9]}}}) -> [1 7 1 6 1 3 3 9 5 1 2 1 1 2 9 0 9 6 4 7 5 2 0 9]", "(flattenl {[3 6 0 6 1]}) -> [3 6 0 6 1]", "(flattenl {[0 4 1]}) -> [0 4 1]", "(flattenl {[7] {[] {[9 6 6 9 1]} {[5 4 8]}}}) -> [7 9 6 6 9 1 5 4 8]", "(flattenl {[7 1 3 3]}) -> [7 1 3 3]", "(flattenl {[] {[2 4]} {[1 4 7 1 5]}}) -> [2 4 1 4 7 1 5]", "(flattenl {[2 7 8 2 8]}) -> [2 7 8 2 8]", "(flattenl {[] {[7 7 8 3 8]} {[8]}}) -> [7 7 8 3 8 8]", "(flattenl {[] {[]}}) -> []", "(flattenl {}) -> []", "(flattenl {[2 5 5 2 0]}) -> [2 5 5 2 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.124817, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[5 5] {[1 4 5 1]}}) -> [5 5 1 4 5 1]", "(flattenl {[3 5]}) -> [3 5]", "(flattenl {[] {[2 1 3]}}) -> [2 1 3]", "(flattenl {[4 3 2 8]}) -> [4 3 2 8]", "(flattenl {[1 5] {[0 8 4 5] {[]} {[9] {[]}}} {[2 5] {[8 4 6 2]}}}) -> [1 5 0 8 4 5 9 2 5 8 4 6 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7] {[2 0 8 9]} {[8 0 2]}}) -> [7 2 0 8 9 8 0 2]", "(flattenl {[9 7 6 9]}) -> [9 7 6 9]", "(flattenl {}) -> []", "(flattenl {[4 0] {[5 4]} {[5 8 3]}}) -> [4 0 5 4 5 8 3]", "(flattenl {[]}) -> []", "(flattenl {[4 4 2 6]}) -> [4 4 2 6]", "(flattenl {[1] {[6]} {[]}}) -> [1 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 8 4] {[]}}) -> [5 8 4]", "(flattenl {[4 5 8 8 8] {[4 7 3] {[6 8 8 7 3] {[4]} {[4 1 2 7 6]}}}}) -> [4 5 8 8 8 4 7 3 6 8 8 7 3 4 4 1 2 7 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.153231, "name": "flattenl", "examples": ["(flattenl {[] {[7 0 9] {[4 2 9 9 3] {[1 7]}} {[6]}} {[2 1 3] {[4 1] {[2 4]} {[3 1]}}}}) -> [7 0 9 4 2 9 9 3 1 7 6 2 1 3 4 1 2 4 3 1]", "(flattenl {[4 4] {[]}}) -> [4 4]", "(flattenl {[] {[6 9]}}) -> [6 9]", "(flattenl {[] {[3]} {[]}}) -> [3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[4] {[0 0 6 7] {[7 6 0] {[3 7 2 4 2]}} {[5 1 7 1 8]}} {[0 3 1 2]}}) -> [4 0 0 6 7 7 6 0 3 7 2 4 2 5 1 7 1 8 0 3 1 2]", "(flattenl {}) -> []", "(flattenl {[5 5 8 4 7]}) -> [5 5 8 4 7]", "(flattenl {[2] {[7 4]} {[8 5 7 5]}}) -> [2 7 4 8 5 7 5]", "(flattenl {}) -> []", "(flattenl {[] {[0 7 1] {[5 2 4 4 3]}}}) -> [0 7 1 5 2 4 4 3]", "(flattenl {}) -> []", "(flattenl {[4 6] {[5 5] {[0 6]} {[1 4 2 4]}}}) -> [4 6 5 5 0 6 1 4 2 4]", "(flattenl {[] {[5 1] {[]} {[3 6 7 1]}} {[3 3 8 7] {[5 6]} {[2 9 8]}}}) -> [5 1 3 6 7 1 3 3 8 7 5 6 2 9 8]", "(flattenl {[7 6] {[3 7 9 4 6]} {[8 2 9] {[1 5 6 4 5] {[7 3 3 4 6]}} {[8 4] {[]} {[]}}}}) -> [7 6 3 7 9 4 6 8 2 9 1 5 6 4 5 7 3 3 4 6 8 4]", "(flattenl {[3] {[0 9]}}) -> [3 0 9]", "(flattenl {[8]}) -> [8]", "(flattenl {[8 1 9 8 2] {[]} {[1]}}) -> [8 1 9 8 2 1]", "(flattenl {[8 4 3 0 8]}) -> [8 4 3 0 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[4 5 1]}) -> [4 5 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.125763, "name": "flattenl", "examples": ["(flattenl {[5 2 7 2 6] {[]}}) -> [5 2 7 2 6]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[0] {[9 2 4 0]}}) -> [0 9 2 4 0]", "(flattenl {[] {[4 1 1] {[2 8 4 9]}} {[4] {[]}}}) -> [4 1 1 2 8 4 9 4]", "(flattenl {[1 1 2 9 6] {[4 9 4]}}) -> [1 1 2 9 6 4 9 4]", "(flattenl {[0 1 1]}) -> [0 1 1]", "(flattenl {[9 9 9 7 7] {[7] {[9 0 3] {[0 9 5]}} {[] {[]}}} {[] {[6]} {[3 2 4 6 9] {[5 5 0 3]}}}}) -> [9 9 9 7 7 7 9 0 3 0 9 5 6 3 2 4 6 9 5 5 0 3]", "(flattenl {[] {[6] {[3]}}}) -> [6 3]", "(flattenl {[] {[3 7 0 5 0]}}) -> [3 7 0 5 0]", "(flattenl {[]}) -> []", "(flattenl {[] {[5 4 9 7] {[8] {[2 2]} {[9]}} {[]}}}) -> [5 4 9 7 8 2 2 9]", "(flattenl {[7 5 7 0 3] {[1 8 1 9] {[7 0]} {[3 9 2 6 5] {[1 5]}}}}) -> [7 5 7 0 3 1 8 1 9 7 0 3 9 2 6 5 1 5]", "(flattenl {[4 2 5 3] {[6 4 8 9 2]} {[4 5 2]}}) -> [4 2 5 3 6 4 8 9 2 4 5 2]", "(flattenl {}) -> []", "(flattenl {[7 9 0 5 8]}) -> [7 9 0 5 8]", "(flattenl {[7] {[4 2 4 3 4] {[3 4 0 6 4] {[]} {[4 8 2 2 4]}} {[6]}}}) -> [7 4 2 4 3 4 3 4 0 6 4 4 8 2 2 4 6]", "(flattenl {[6 1 5 9 6]}) -> [6 1 5 9 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7]}) -> [7]", "(flattenl {[]}) -> []", "(flattenl {[7 2] {[9 6]} {[2 2 8]}}) -> [7 2 9 6 2 2 8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.139142, "name": "flattenl", "examples": ["(flattenl {[6]}) -> [6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[0 7 8 7]}) -> [0 7 8 7]", "(flattenl {[]}) -> []", "(flattenl {[6 9 6]}) -> [6 9 6]", "(flattenl {[6]}) -> [6]", "(flattenl {[3] {[4 7 2] {[9 8 6 0 9]} {[8 6 3 5 0]}} {[5 9 9 0 8] {[6 1]} {[8 1 4 2 4]}}}) -> [3 4 7 2 9 8 6 0 9 8 6 3 5 0 5 9 9 0 8 6 1 8 1 4 2 4]", "(flattenl {[0 4] {[]} {[2 7 5 4 1]}}) -> [0 4 2 7 5 4 1]", "(flattenl {[8 6 9 5] {[] {[6 6]}}}) -> [8 6 9 5 6 6]", "(flattenl {[7] {[3 2 1] {[5 8 5 4 1]}}}) -> [7 3 2 1 5 8 5 4 1]", "(flattenl {[7 2 7 4 3] {[5 5 8 8 0] {[6 3 7 2] {[8 2 5]}}} {[3 6 4 3 3] {[2 0] {[0 2 4 4 6]}}}}) -> [7 2 7 4 3 5 5 8 8 0 6 3 7 2 8 2 5 3 6 4 3 3 2 0 0 2 4 4 6]", "(flattenl {[9 9 0]}) -> [9 9 0]", "(flattenl {[] {[3 7 6]} {[0 2 7] {[8 0 3] {[4 0 2]}} {[8 5]}}}) -> [3 7 6 0 2 7 8 0 3 4 0 2 8 5]", "(flattenl {[5] {[7 7 8]} {[8 6 1 6]}}) -> [5 7 7 8 8 6 1 6]", "(flattenl {[5 7]}) -> [5 7]", "(flattenl {[5 1 4] {[] {[1 8 9 2 6] {[9 8 7]} {[]}} {[9]}}}) -> [5 1 4 1 8 9 2 6 9 8 7 9]", "(flattenl {[] {[8 9]}}) -> [8 9]", "(flattenl {[2]}) -> [2]", "(flattenl {[6 1 5 3 9] {[] {[0 3 4 8]} {[5 3 2]}} {[9] {[3 1 8]}}}) -> [6 1 5 3 9 0 3 4 8 5 3 2 9 3 1 8]", "(flattenl {[3 9 8]}) -> [3 9 8]", "(flattenl {[7 9 4 0 7]}) -> [7 9 4 0 7]", "(flattenl {[] {[6 9 2 0 4] {[]} {[7 2 2 1 8]}}}) -> [6 9 2 0 4 7 2 2 1 8]", "(flattenl {[5] {[6 7 8] {[9 1 8 1] {[]}} {[9 4 1 6] {[9 4 7]}}}}) -> [5 6 7 8 9 1 8 1 9 4 1 6 9 4 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.146598, "name": "flattenl", "examples": ["(flattenl {[3]}) -> [3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[8 2 7]}) -> [8 2 7]", "(flattenl {[9] {[5 6 6] {[5 3 0] {[1 2 8]} {[]}}} {[9 2 6] {[3] {[]} {[3 7]}} {[1 1 1] {[]}}}}) -> [9 5 6 6 5 3 0 1 2 8 9 2 6 3 3 7 1 1 1]", "(flattenl {[0] {[3 5]} {[1 2 7] {[2 5 9] {[7 8 0 8]}}}}) -> [0 3 5 1 2 7 2 5 9 7 8 0 8]", "(flattenl {[3 2]}) -> [3 2]", "(flattenl {[1 9 9] {[3 9] {[] {[7]} {[8 8 2]}} {[6 9] {[8 3 1 2]} {[5 1 9 4 0]}}} {[] {[] {[3 8 6 8 4]} {[4 5]}}}}) -> [1 9 9 3 9 7 8 8 2 6 9 8 3 1 2 5 1 9 4 0 3 8 6 8 4 4 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3] {[] {[]}}}) -> [3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 6 8 9 7]}) -> [7 6 8 9 7]", "(flattenl {[5 7 3] {[1]} {[7 9]}}) -> [5 7 3 1 7 9]", "(flattenl {[0 2]}) -> [0 2]", "(flattenl {[3 6] {[7 6 2 1 5]}}) -> [3 6 7 6 2 1 5]", "(flattenl {[4 5] {[] {[]} {[9 6]}}}) -> [4 5 9 6]", "(flattenl {}) -> []", "(flattenl {[5 6 7] {[]}}) -> [5 6 7]", "(flattenl {[] {[] {[] {[0]}} {[9 9 6 2] {[4 3 7 3 1]}}} {[0] {[6 5 8 4 9]} {[1] {[7]}}}}) -> [0 9 9 6 2 4 3 7 3 1 0 6 5 8 4 9 1 7]", "(flattenl {[4 3 1 3] {[5 4 0]} {[9 9 9 7] {[9 9 3]} {[0 1 0]}}}) -> [4 3 1 3 5 4 0 9 9 9 7 9 9 3 0 1 0]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.161708, "name": "flattenl", "examples": ["(flattenl {[8 3 8] {[]} {[9 2 6]}}) -> [8 3 8 9 2 6]", "(flattenl {[] {[9 3 3 1] {[2] {[3 4 7 7]}}}}) -> [9 3 3 1 2 3 4 7 7]", "(flattenl {[]}) -> []", "(flattenl {[2 3] {[]} {[]}}) -> [2 3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3] {[6]}}) -> [3 6]", "(flattenl {[0 8 0] {[0 4 6 0 7] {[3 6 0 2]} {[0 1 6 5]}} {[6] {[0 0 5 2 9]}}}) -> [0 8 0 0 4 6 0 7 3 6 0 2 0 1 6 5 6 0 0 5 2 9]", "(flattenl {[4 1 9 6] {[4] {[4 3 9 9 4] {[3 2]}}}}) -> [4 1 9 6 4 4 3 9 9 4 3 2]", "(flattenl {[9 4 9]}) -> [9 4 9]", "(flattenl {[7 1 6 4 9] {[8]}}) -> [7 1 6 4 9 8]", "(flattenl {[3 0 3 1]}) -> [3 0 3 1]", "(flattenl {[2 0 4] {[0 2 1 5 2] {[2 3 9 5] {[]}} {[8 1 8 3]}} {[0 2 5] {[0 8]} {[5]}}}) -> [2 0 4 0 2 1 5 2 2 3 9 5 8 1 8 3 0 2 5 0 8 5]", "(flattenl {[2 3]}) -> [2 3]", "(flattenl {[5 4 4]}) -> [5 4 4]", "(flattenl {[] {[3] {[6 2 7 8]}}}) -> [3 6 2 7 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9]}) -> [9]", "(flattenl {}) -> []", "(flattenl {[3 6]}) -> [3 6]", "(flattenl {[7 5 8 9 2] {[2 9 5 2] {[8 7]}}}) -> [7 5 8 9 2 2 9 5 2 8 7]", "(flattenl {}) -> []", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.140421, "name": "flattenl", "examples": ["(flattenl {[1 7] {[5]}}) -> [1 7 5]", "(flattenl {}) -> []", "(flattenl {[0 2 3 0 5] {[7 6 7 3] {[6 6 8 6]}} {[9 3 4 3 9] {[2 9]} {[7 4 3 2 2]}}}) -> [0 2 3 0 5 7 6 7 3 6 6 8 6 9 3 4 3 9 2 9 7 4 3 2 2]", "(flattenl {}) -> []", "(flattenl {[5] {[4] {[5 0 8 0] {[2 8]}}}}) -> [5 4 5 0 8 0 2 8]", "(flattenl {[4 3 1] {[0 2]} {[9] {[6 2 8 7 8]} {[7 0 3 5] {[2]} {[2 1]}}}}) -> [4 3 1 0 2 9 6 2 8 7 8 7 0 3 5 2 2 1]", "(flattenl {[] {[4]} {[0 5 1 1 8]}}) -> [4 0 5 1 1 8]", "(flattenl {}) -> []", "(flattenl {[1 0 7 6 7] {[6 6]} {[9 0 3 6 0]}}) -> [1 0 7 6 7 6 6 9 0 3 6 0]", "(flattenl {[0 2 6] {[6 4 6 9] {[4]}}}) -> [0 2 6 6 4 6 9 4]", "(flattenl {[0 5 1] {[4 7 5 9 9] {[4 1 4 4]}}}) -> [0 5 1 4 7 5 9 9 4 1 4 4]", "(flattenl {[2 2 0] {[2] {[6 9 2 9 3] {[3 2 8]}}} {[]}}) -> [2 2 0 2 6 9 2 9 3 3 2 8]", "(flattenl {[2 7 1] {[4 6 4 1] {[1]}} {[0] {[0 2 7]}}}) -> [2 7 1 4 6 4 1 1 0 0 2 7]", "(flattenl {[9] {[] {[8]} {[7 7]}}}) -> [9 8 7 7]", "(flattenl {[7 7] {[]} {[]}}) -> [7 7]", "(flattenl {[8 9 6] {[6] {[7 6 6 1 6] {[]}}}}) -> [8 9 6 6 7 6 6 1 6]", "(flattenl {[5 1 0 7]}) -> [5 1 0 7]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[] {[3 5]}}}) -> [3 5]", "(flattenl {[8 0 2 8 1] {[1] {[9 1 2] {[7 1 7]}}}}) -> [8 0 2 8 1 1 9 1 2 7 1 7]", "(flattenl {[5 5]}) -> [5 5]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.165698, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[9 0 1 5] {[1 4 9]} {[4 8]}}) -> [9 0 1 5 1 4 9 4 8]", "(flattenl {[0 1] {[]} {[6 3 7 0]}}) -> [0 1 6 3 7 0]", "(flattenl {[] {[] {[0 1 3]}}}) -> [0 1 3]", "(flattenl {[5]}) -> [5]", "(flattenl {[8]}) -> [8]", "(flattenl {[] {[]}}) -> []", "(flattenl {[] {[2 0 4 5] {[2 1 4]} {[3 5 6] {[4]} {[]}}}}) -> [2 0 4 5 2 1 4 3 5 6 4]", "(flattenl {[3 5 1 6 3] {[7]}}) -> [3 5 1 6 3 7]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[6 4 4] {[4 0 1 7 5]}}) -> [6 4 4 4 0 1 7 5]", "(flattenl {[9 5 7] {[2 3]}}) -> [9 5 7 2 3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[4 8 9 1] {[4 6] {[8 0]} {[5 9 6]}} {[6 8 6 9] {[5 3]} {[7 2 2]}}}) -> [4 8 9 1 4 6 8 0 5 9 6 6 8 6 9 5 3 7 2 2]", "(flattenl {[5 4] {[4] {[6 2 8] {[9 0 0 7]} {[9 0 5]}}} {[8 2 8 9 1]}}) -> [5 4 4 6 2 8 9 0 0 7 9 0 5 8 2 8 9 1]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3 7] {[3 5] {[5 5 5]}} {[2 3 8] {[8 2 9 7]}}}) -> [3 7 3 5 5 5 5 2 3 8 8 2 9 7]", "(flattenl {[6 8] {[] {[5 2 1 7 1] {[5]} {[5 5 6 9]}}}}) -> [6 8 5 2 1 7 1 5 5 5 6 9]", "(flattenl {[3 0 4 1] {[6 3 4] {[6 2] {[]}}} {[8 2] {[] {[2 9 4 3 5]} {[0 5]}}}}) -> [3 0 4 1 6 3 4 6 2 8 2 2 9 4 3 5 0 5]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.141523, "name": "flattenl", "examples": ["(flattenl {[] {[5]}}) -> [5]", "(flattenl {[2 1 1 4]}) -> [2 1 1 4]", "(flattenl {[9 8 0] {[7 5 7]}}) -> [9 8 0 7 5 7]", "(flattenl {[7]}) -> [7]", "(flattenl {[7 8 2] {[]}}) -> [7 8 2]", "(flattenl {[9 9 2 8 8] {[6 7]} {[1 3 3 3]}}) -> [9 9 2 8 8 6 7 1 3 3 3]", "(flattenl {[7 9] {[7 4]}}) -> [7 9 7 4]", "(flattenl {[4 2] {[2] {[7]} {[]}} {[4 6 8 9 8] {[0 3 1]}}}) -> [4 2 2 7 4 6 8 9 8 0 3 1]", "(flattenl {[4 9]}) -> [4 9]", "(flattenl {[]}) -> []", "(flattenl {[3 7 8] {[2]}}) -> [3 7 8 2]", "(flattenl {[6 9] {[] {[2 6]}}}) -> [6 9 2 6]", "(flattenl {}) -> []", "(flattenl {[7 8] {[1] {[6] {[0 7 7]} {[1 8 9 3 5]}}} {[9 9]}}) -> [7 8 1 6 0 7 7 1 8 9 3 5 9 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 5 6 3]}) -> [5 5 6 3]", "(flattenl {}) -> []", "(flattenl {[5]}) -> [5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[]} {[6 6] {[7 9] {[9]}}}}) -> [6 6 7 9 9]", "(flattenl {[0 6 3] {[9]}}) -> [0 6 3 9]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.160174, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[] {[7 9 6 2 8]}}) -> [7 9 6 2 8]", "(flattenl {[9]}) -> [9]", "(flattenl {[2 0 8 9 1]}) -> [2 0 8 9 1]", "(flattenl {}) -> []", "(flattenl {[8 9 5 0] {[9 2 1 6 6] {[7 5 4 3 6]} {[]}} {[1]}}) -> [8 9 5 0 9 2 1 6 6 7 5 4 3 6 1]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 5]}) -> [2 5]", "(flattenl {[8]}) -> [8]", "(flattenl {[6 3]}) -> [6 3]", "(flattenl {}) -> []", "(flattenl {[] {[7 4 8] {[9]} {[4 3 5 0 3]}}}) -> [7 4 8 9 4 3 5 0 3]", "(flattenl {}) -> []", "(flattenl {[3 8 3]}) -> [3 8 3]", "(flattenl {[] {[] {[3 8] {[9 1]}}} {[7 6] {[3 5 1]} {[4] {[]} {[]}}}}) -> [3 8 9 1 7 6 3 5 1 4]", "(flattenl {[0 0 2 2 2] {[]}}) -> [0 0 2 2 2]", "(flattenl {}) -> []", "(flattenl {[2] {[6 1 0]} {[5]}}) -> [2 6 1 0 5]", "(flattenl {}) -> []", "(flattenl {[] {[6 8 0]} {[3]}}) -> [6 8 0 3]", "(flattenl {}) -> []", "(flattenl {[7 3 6]}) -> [7 3 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.151473, "name": "flattenl", "examples": ["(flattenl {[] {[4 8 9 2 0]} {[0 3 4 9]}}) -> [4 8 9 2 0 0 3 4 9]", "(flattenl {[7 9 0] {[0 6 8 4 0] {[2 5 1 5 6]}}}) -> [7 9 0 0 6 8 4 0 2 5 1 5 6]", "(flattenl {}) -> []", "(flattenl {[0 9 3 5 4]}) -> [0 9 3 5 4]", "(flattenl {[2 8 9 0 7]}) -> [2 8 9 0 7]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[4 2 1 1]}) -> [4 2 1 1]", "(flattenl {[7 7 7] {[6 7 8 3 0]} {[5 7]}}) -> [7 7 7 6 7 8 3 0 5 7]", "(flattenl {[0 7 2 0 6] {[3 2] {[]}}}) -> [0 7 2 0 6 3 2]", "(flattenl {[4] {[] {[6 5 4]} {[8]}}}) -> [4 6 5 4 8]", "(flattenl {[2 4] {[]}}) -> [2 4]", "(flattenl {[] {[4 3]}}) -> [4 3]", "(flattenl {[]}) -> []", "(flattenl {[0 4 0]}) -> [0 4 0]", "(flattenl {[2 8 7 2 6] {[9 9 1 0 8] {[4 4 9 5] {[]}} {[8 3 7 6] {[]} {[2]}}} {[1 3 8 5] {[0 1 4]}}}) -> [2 8 7 2 6 9 9 1 0 8 4 4 9 5 8 3 7 6 2 1 3 8 5 0 1 4]", "(flattenl {[0 2 4] {[]} {[] {[4 8 4 9 0] {[2 3 5 3 8]}}}}) -> [0 2 4 4 8 4 9 0 2 3 5 3 8]", "(flattenl {[8 9 8] {[4 2]} {[]}}) -> [8 9 8 4 2]", "(flattenl {}) -> []", "(flattenl {[5 8 4 6] {[9 6 6 4 7] {[5 6 3 9] {[5 9 3]} {[1 9]}} {[]}} {[7] {[]}}}) -> [5 8 4 6 9 6 6 4 7 5 6 3 9 5 9 3 1 9 7]", "(flattenl {[0] {[5 6 8]}}) -> [0 5 6 8]", "(flattenl {[4]}) -> [4]", "(flattenl {[4] {[]} {[8 5 0] {[1 3 3 5]}}}) -> [4 8 5 0 1 3 3 5]", "(flattenl {[] {[6 4 1]} {[7 2] {[5 5 0] {[5 9 5 1 5]}}}}) -> [6 4 1 7 2 5 5 0 5 9 5 1 5]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.152116, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[7] {[9 4 1]} {[6 2 3]}}) -> [7 9 4 1 6 2 3]", "(flattenl {[2] {[3 0 7 3] {[5 2 4 8]}}}) -> [2 3 0 7 3 5 2 4 8]", "(flattenl {[7 6 3 9 7] {[5]} {[]}}) -> [7 6 3 9 7 5]", "(flattenl {[8 2 7 3 9] {[1]}}) -> [8 2 7 3 9 1]", "(flattenl {[2 6 9 8 3] {[6 5 9 3 6] {[6] {[7 3]}}} {[6] {[5 0] {[6 6 9]}} {[6 1 7] {[0 0 2 4]} {[3 9]}}}}) -> [2 6 9 8 3 6 5 9 3 6 6 7 3 6 5 0 6 6 9 6 1 7 0 0 2 4 3 9]", "(flattenl {[7 2] {[5 4 6 2] {[3 4] {[3 0 4 4]} {[]}}} {[7 0 5 7]}}) -> [7 2 5 4 6 2 3 4 3 0 4 4 7 0 5 7]", "(flattenl {}) -> []", "(flattenl {[6 9 8 5] {[7]}}) -> [6 9 8 5 7]", "(flattenl {}) -> []", "(flattenl {[7] {[7 0 9 2 5] {[4 0 4 0]} {[2 7 8 2 4]}} {[4]}}) -> [7 7 0 9 2 5 4 0 4 0 2 7 8 2 4 4]", "(flattenl {[0 3] {[8] {[] {[]}}}}) -> [0 3 8]", "(flattenl {[4 3 0 2 7] {[] {[1 7]} {[8]}} {[8 5 4 6 5] {[6 6]}}}) -> [4 3 0 2 7 1 7 8 8 5 4 6 5 6 6]", "(flattenl {[6 5 7]}) -> [6 5 7]", "(flattenl {[2 0 0]}) -> [2 0 0]", "(flattenl {[1 4 2] {[1 8]}}) -> [1 4 2 1 8]", "(flattenl {[6 9 6 2 5] {[8]}}) -> [6 9 6 2 5 8]", "(flattenl {[5 8 0] {[1 1 0 7] {[1 5 5 3] {[5 9 2]}}} {[1 4 9 1 4] {[0 6 8 5 0] {[0 9 7]} {[8 5 7]}}}}) -> [5 8 0 1 1 0 7 1 5 5 3 5 9 2 1 4 9 1 4 0 6 8 5 0 0 9 7 8 5 7]", "(flattenl {[]}) -> []", "(flattenl {[3] {[4 2]}}) -> [3 4 2]", "(flattenl {[0 0 4 2]}) -> [0 0 4 2]", "(flattenl {[2 9 9] {[9 6]} {[]}}) -> [2 9 9 9 6]", "(flattenl {[1] {[] {[3] {[5 1 2]} {[4 2 1 3]}}} {[7 5 3] {[7 0 7]} {[] {[2 9 5 9]}}}}) -> [1 3 5 1 2 4 2 1 3 7 5 3 7 0 7 2 9 5 9]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.166138, "name": "flattenl", "examples": ["(flattenl {[9 6 2 9] {[7] {[2 7] {[]}} {[]}}}) -> [9 6 2 9 7 2 7]", "(flattenl {[0 6 1] {[3 9 0 8 8]} {[0 5 9 3 0] {[] {[2 1]}} {[6 9 0]}}}) -> [0 6 1 3 9 0 8 8 0 5 9 3 0 2 1 6 9 0]", "(flattenl {}) -> []", "(flattenl {[1 5] {[5 4 1 2 2] {[9 7 9 6]}} {[]}}) -> [1 5 5 4 1 2 2 9 7 9 6]", "(flattenl {[2 3 5 0]}) -> [2 3 5 0]", "(flattenl {[6 1] {[2 0] {[]} {[3 8 2]}}}) -> [6 1 2 0 3 8 2]", "(flattenl {[6 5 0 2 4] {[1 7 9] {[1 1 0] {[0 3 6]} {[]}} {[0 4] {[8 7 5 9 9]} {[4 2]}}}}) -> [6 5 0 2 4 1 7 9 1 1 0 0 3 6 0 4 8 7 5 9 9 4 2]", "(flattenl {[5 2]}) -> [5 2]", "(flattenl {}) -> []", "(flattenl {[5 6 4 6] {[5]}}) -> [5 6 4 6 5]", "(flattenl {[7 4] {[]}}) -> [7 4]", "(flattenl {[2 2] {[9 4]} {[2 0 7]}}) -> [2 2 9 4 2 0 7]", "(flattenl {}) -> []", "(flattenl {[8 4 9 7]}) -> [8 4 9 7]", "(flattenl {[4] {[7 1 0] {[] {[5]} {[5 2 9]}} {[] {[9 4 9 0]} {[4]}}} {[6 5 8 9] {[0 2 6 1]} {[2]}}}) -> [4 7 1 0 5 5 2 9 9 4 9 0 4 6 5 8 9 0 2 6 1 2]", "(flattenl {[8 9] {[]}}) -> [8 9]", "(flattenl {[7] {[5]} {[]}}) -> [7 5]", "(flattenl {[9 5 3] {[2 6 9 5 4]} {[3 5 8] {[2] {[]} {[8]}} {[2]}}}) -> [9 5 3 2 6 9 5 4 3 5 8 2 8 2]", "(flattenl {[2 1] {[4 4 3 0]} {[9 3]}}) -> [2 1 4 4 3 0 9 3]", "(flattenl {[5 6 2 6] {[1 2]} {[6 3 3] {[7 0 5]} {[6 4]}}}) -> [5 6 2 6 1 2 6 3 3 7 0 5 6 4]", "(flattenl {}) -> []", "(flattenl {[0 9] {[]} {[6]}}) -> [0 9 6]", "(flattenl {[] {[5 9 1 9 7] {[]} {[4 8 7 0 6]}}}) -> [5 9 1 9 7 4 8 7 0 6]", "(flattenl {[4 7 8 8] {[7 6 1] {[4 1 3 1] {[5 4 5]}}} {[1 8] {[2 9 3 9 0] {[9 1 9 5 5]} {[3 6 1 5 7]}} {[] {[]}}}}) -> [4 7 8 8 7 6 1 4 1 3 1 5 4 5 1 8 2 9 3 9 0 9 1 9 5 5 3 6 1 5 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.148791, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[] {[5 6 0]} {[]}}) -> [5 6 0]", "(flattenl {[]}) -> []", "(flattenl {[8 5 4] {[0 8] {[8 3 5]}} {[] {[8 7]}}}) -> [8 5 4 0 8 8 3 5 8 7]", "(flattenl {[2 5 9]}) -> [2 5 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[9 6 2 0 1] {[9 8 0] {[]}} {[3 9 0 7 2]}}) -> [9 6 2 0 1 9 8 0 3 9 0 7 2]", "(flattenl {[0] {[9 2] {[2 3]} {[1]}} {[1 7 4 7 0] {[3]}}}) -> [0 9 2 2 3 1 1 7 4 7 0 3]", "(flattenl {[6]}) -> [6]", "(flattenl {[3] {[4 1 6 1]}}) -> [3 4 1 6 1]", "(flattenl {[6 5 7] {[1 1 7 1 3]} {[7 1] {[0 6 1]}}}) -> [6 5 7 1 1 7 1 3 7 1 0 6 1]", "(flattenl {[1 3] {[]}}) -> [1 3]", "(flattenl {[9]}) -> [9]", "(flattenl {[3 1 2 8 9] {[]} {[5]}}) -> [3 1 2 8 9 5]", "(flattenl {[]}) -> []", "(flattenl {[] {[8 6 1 2 3]} {[7 6 6 3 2]}}) -> [8 6 1 2 3 7 6 6 3 2]", "(flattenl {}) -> []", "(flattenl {[5 9 9]}) -> [5 9 9]", "(flattenl {[9 5 7 5] {[0 0 4] {[7 4 4]} {[2 7 8 3]}} {[0 7]}}) -> [9 5 7 5 0 0 4 7 4 4 2 7 8 3 0 7]", "(flattenl {[4 2 7] {[7]}}) -> [4 2 7 7]", "(flattenl {[5]}) -> [5]", "(flattenl {[2 0 4] {[7 8 9] {[5] {[3 7 0]} {[0 3]}}}}) -> [2 0 4 7 8 9 5 3 7 0 0 3]", "(flattenl {[6 8 0] {[8]}}) -> [6 8 0 8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.141329, "name": "flattenl", "examples": ["(flattenl {[8 6]}) -> [8 6]", "(flattenl {[1 5 6 6 0] {[2 1 6 7]} {[0 8 0]}}) -> [1 5 6 6 0 2 1 6 7 0 8 0]", "(flattenl {[5 6 7]}) -> [5 6 7]", "(flattenl {[2 3 4] {[6 5 0 8] {[1 9 7 6]}}}) -> [2 3 4 6 5 0 8 1 9 7 6]", "(flattenl {[5 1 4] {[] {[6 7 2]} {[9]}} {[0] {[6 8 9]}}}) -> [5 1 4 6 7 2 9 0 6 8 9]", "(flattenl {[6 2 9 3] {[2 6 9]}}) -> [6 2 9 3 2 6 9]", "(flattenl {[7 9 9 6 9] {[2 3 2 1]}}) -> [7 9 9 6 9 2 3 2 1]", "(flattenl {[9 5 7 3 0] {[]}}) -> [9 5 7 3 0]", "(flattenl {[] {[6]} {[0 4 5] {[6 7 4 1] {[7 4]}} {[4 0 0 5 6]}}}) -> [6 0 4 5 6 7 4 1 7 4 4 0 0 5 6]", "(flattenl {[8] {[4 0 1]} {[9 5 8 0]}}) -> [8 4 0 1 9 5 8 0]", "(flattenl {[9] {[1] {[2 6 9 7] {[1 0 3 0 8]}} {[] {[3 1]} {[1 1 7 8 7]}}}}) -> [9 1 2 6 9 7 1 0 3 0 8 3 1 1 1 7 8 7]", "(flattenl {}) -> []", "(flattenl {[2 9 0 7] {[9 3 2 5 7]}}) -> [2 9 0 7 9 3 2 5 7]", "(flattenl {[7 1 3] {[6 5 4] {[5 8 2 7]} {[8 3]}}}) -> [7 1 3 6 5 4 5 8 2 7 8 3]", "(flattenl {[] {[2 8 6 0]}}) -> [2 8 6 0]", "(flattenl {[] {[4 3]} {[9 1]}}) -> [4 3 9 1]", "(flattenl {[] {[1 6 5 0 4]}}) -> [1 6 5 0 4]", "(flattenl {}) -> []", "(flattenl {[7] {[7]}}) -> [7 7]", "(flattenl {[3 7 1 7] {[2 4 3 6 8] {[5 0 8] {[0 0 0]} {[7]}}}}) -> [3 7 1 7 2 4 3 6 8 5 0 8 0 0 0 7]", "(flattenl {[8 6 2 1]}) -> [8 6 2 1]", "(flattenl {[6] {[]}}) -> [6]", "(flattenl {[6 1 0 1 8]}) -> [6 1 0 1 8]", "(flattenl {[8 7 3] {[]} {[6 8 0 0]}}) -> [8 7 3 6 8 0 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.16427, "name": "flattenl", "examples": ["(flattenl {[6] {[7 8 5 5] {[0 6 8 2]}}}) -> [6 7 8 5 5 0 6 8 2]", "(flattenl {[9 4] {[0 3 1] {[7 7 4 7 2]} {[4 5 0 0]}}}) -> [9 4 0 3 1 7 7 4 7 2 4 5 0 0]", "(flattenl {[3]}) -> [3]", "(flattenl {[4 1 9 9] {[8 5] {[3 5 7 6 0]}} {[0 1 8 3 2]}}) -> [4 1 9 9 8 5 3 5 7 6 0 0 1 8 3 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2 0] {[]}}) -> [2 0]", "(flattenl {[6 4 3 5 0]}) -> [6 4 3 5 0]", "(flattenl {}) -> []", "(flattenl {[9 3 4] {[4 9 9]}}) -> [9 3 4 4 9 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[8 5 4 3 2]}) -> [8 5 4 3 2]", "(flattenl {[0 9] {[] {[1 2 9 8]} {[8 4 9 0 4]}}}) -> [0 9 1 2 9 8 8 4 9 0 4]", "(flattenl {}) -> []", "(flattenl {[2]}) -> [2]", "(flattenl {[5 7 9 3 3]}) -> [5 7 9 3 3]", "(flattenl {[8 8]}) -> [8 8]", "(flattenl {}) -> []", "(flattenl {[2 1 1 2 9] {[4 9 0 5 5]} {[7 7 2 7 5]}}) -> [2 1 1 2 9 4 9 0 5 5 7 7 2 7 5]", "(flattenl {[0] {[4] {[2 3 7 1 1]}}}) -> [0 4 2 3 7 1 1]", "(flattenl {[6 5 3 9 0]}) -> [6 5 3 9 0]", "(flattenl {}) -> []", "(flattenl {[1 3 8 7]}) -> [1 3 8 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.087351, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[8 7] {[]}}) -> [8 7]", "(flattenl {[4 7 4 1] {[1 3 6 0 5]}}) -> [4 7 4 1 1 3 6 0 5]", "(flattenl {[0 8 1]}) -> [0 8 1]", "(flattenl {[5]}) -> [5]", "(flattenl {[] {[1 9 9 6 3]} {[0 4 6 2] {[2 7 7]} {[3 0 2 3]}}}) -> [1 9 9 6 3 0 4 6 2 2 7 7 3 0 2 3]", "(flattenl {}) -> []", "(flattenl {[7 8 7 9 9]}) -> [7 8 7 9 9]", "(flattenl {}) -> []", "(flattenl {[6 3 5] {[3 9 3 7 7]} {[7]}}) -> [6 3 5 3 9 3 7 7 7]", "(flattenl {[]}) -> []", "(flattenl {[1 1] {[3 1]}}) -> [1 1 3 1]", "(flattenl {}) -> []", "(flattenl {[2] {[9 5 2] {[]} {[0 3]}}}) -> [2 9 5 2 0 3]", "(flattenl {}) -> []", "(flattenl {[4 7 2 4 2] {[1 1 5 2]}}) -> [4 7 2 4 2 1 1 5 2]", "(flattenl {[4 9 5 6 0] {[3]} {[1 2 9]}}) -> [4 9 5 6 0 3 1 2 9]", "(flattenl {[9 3] {[4 8 5]} {[6 9]}}) -> [9 3 4 8 5 6 9]", "(flattenl {[] {[7 4 3 2 6]}}) -> [7 4 3 2 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[5 5] {[2 6 3 2 3]} {[7 4 9 4 5]}}}) -> [5 5 2 6 3 2 3 7 4 9 4 5]", "(flattenl {[5 4 8 0 0] {[1 1] {[1 4 6 3] {[6 2 3]}} {[8 5 9]}} {[0 6 9 5 6] {[6 2 2]} {[4 4 0 4 3] {[]}}}}) -> [5 4 8 0 0 1 1 1 4 6 3 6 2 3 8 5 9 0 6 9 5 6 6 2 2 4 4 0 4 3]", "(flattenl {[9 5 7]}) -> [9 5 7]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.120527, "name": "flattenl", "examples": ["(flattenl {[2] {[] {[]} {[9]}} {[]}}) -> [2 9]", "(flattenl {[5] {[5 4 0 3 7]} {[8]}}) -> [5 5 4 0 3 7 8]", "(flattenl {[4 8 7]}) -> [4 8 7]", "(flattenl {[6 1 4 8 8]}) -> [6 1 4 8 8]", "(flattenl {[2 5 7 8] {[]}}) -> [2 5 7 8]", "(flattenl {[2]}) -> [2]", "(flattenl {[] {[8] {[7]}} {[5 1 6 0]}}) -> [8 7 5 1 6 0]", "(flattenl {[0 2] {[8]}}) -> [0 2 8]", "(flattenl {}) -> []", "(flattenl {[1 5 0 3] {[1 9 6 3 2] {[1 5 8 2 1]}} {[] {[4 7 0 0 3]} {[9 2]}}}) -> [1 5 0 3 1 9 6 3 2 1 5 8 2 1 4 7 0 0 3 9 2]", "(flattenl {[] {[1 0 6 4] {[1 4 6 1]}} {[] {[7 8] {[4 8 6 1 9]}} {[4 2 0 7 3] {[7 3 2]} {[2 9]}}}}) -> [1 0 6 4 1 4 6 1 7 8 4 8 6 1 9 4 2 0 7 3 7 3 2 2 9]", "(flattenl {}) -> []", "(flattenl {[7] {[]}}) -> [7]", "(flattenl {[0 7 2] {[6 8 6]}}) -> [0 7 2 6 8 6]", "(flattenl {[] {[1 6 8 9 0]}}) -> [1 6 8 9 0]", "(flattenl {[8 2 6 4 8] {[] {[4 9]} {[3 7 7 6]}}}) -> [8 2 6 4 8 4 9 3 7 7 6]", "(flattenl {[3 2 2 8 3] {[1 7 8 6] {[8]} {[1 5 7] {[3 3]} {[8]}}}}) -> [3 2 2 8 3 1 7 8 6 8 1 5 7 3 3 8]", "(flattenl {[1 1 9]}) -> [1 1 9]", "(flattenl {[] {[4 6 8 5 8]}}) -> [4 6 8 5 8]", "(flattenl {[9 5 6] {[8 4]} {[]}}) -> [9 5 6 8 4]", "(flattenl {[] {[3] {[2 7]}} {[5 4] {[0 9 0 5 8]} {[1 2 5 6]}}}) -> [3 2 7 5 4 0 9 0 5 8 1 2 5 6]", "(flattenl {[1]}) -> [1]", "(flattenl {[9 5 9 8 9] {[] {[3 5] {[2 9 0]}}}}) -> [9 5 9 8 9 3 5 2 9 0]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.120994, "name": "flattenl", "examples": ["(flattenl {[9] {[7 0 9 0 2]} {[3 2 6 1 6]}}) -> [9 7 0 9 0 2 3 2 6 1 6]", "(flattenl {[7 6]}) -> [7 6]", "(flattenl {[8 8 1] {[] {[4] {[1 3 3 0]}} {[6 8 9 9] {[6 9 6]}}} {[5 8 2 3] {[6 5 2] {[]}}}}) -> [8 8 1 4 1 3 3 0 6 8 9 9 6 9 6 5 8 2 3 6 5 2]", "(flattenl {[] {[9 9 4 5]}}) -> [9 9 4 5]", "(flattenl {}) -> []", "(flattenl {[9 4 0] {[5 3 7]}}) -> [9 4 0 5 3 7]", "(flattenl {}) -> []", "(flattenl {[3] {[] {[3 2 4] {[9 4]} {[4 1]}}}}) -> [3 3 2 4 9 4 4 1]", "(flattenl {[4 3] {[6 1]}}) -> [4 3 6 1]", "(flattenl {[4] {[0 2] {[1 0 7 1 7]} {[9 1 1 7 1]}}}) -> [4 0 2 1 0 7 1 7 9 1 1 7 1]", "(flattenl {[0]}) -> [0]", "(flattenl {}) -> []", "(flattenl {[7 3 8 2] {[]}}) -> [7 3 8 2]", "(flattenl {}) -> []", "(flattenl {[7 7 5 2 6] {[0 6 5]} {[] {[8]}}}) -> [7 7 5 2 6 0 6 5 8]", "(flattenl {[4 0 1 9 6] {[8 9 4]}}) -> [4 0 1 9 6 8 9 4]", "(flattenl {[] {[8 2 3 0]}}) -> [8 2 3 0]", "(flattenl {[1] {[3 9] {[7] {[2 2 4 0 2]}} {[0 6 0 4 3] {[9]} {[5]}}}}) -> [1 3 9 7 2 2 4 0 2 0 6 0 4 3 9 5]", "(flattenl {[2]}) -> [2]", "(flattenl {[2 4 8 7] {[] {[1 4 2 9 2]}} {[5 6 0 1] {[]}}}) -> [2 4 8 7 1 4 2 9 2 5 6 0 1]", "(flattenl {[3 2 9 7] {[2 8 9 3] {[2 2 1 3 2]} {[2 3] {[0 1 3 7 2]}}} {[] {[7] {[9 8 9 6 9]} {[5]}} {[4 8 9]}}}) -> [3 2 9 7 2 8 9 3 2 2 1 3 2 2 3 0 1 3 7 2 7 9 8 9 6 9 5 4 8 9]", "(flattenl {[2 1 9 0 4] {[1 6 3 9 1] {[0 0]}}}) -> [2 1 9 0 4 1 6 3 9 1 0 0]", "(flattenl {[8 2 9] {[] {[] {[3 3]}} {[5] {[1 1 4 5]} {[3]}}}}) -> [8 2 9 3 3 5 1 1 4 5 3]", "(flattenl {[3 0] {[7 7 0]} {[7 6 1]}}) -> [3 0 7 7 0 7 6 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.138433, "name": "flattenl", "examples": ["(flattenl {[7 2 6]}) -> [7 2 6]", "(flattenl {[6 7] {[8 2 1 2] {[4 4] {[2 0]} {[1]}} {[6 1] {[5 0 5 0 8]} {[5 6 0 9]}}} {[2 0] {[6 0 9 1] {[5 4]}} {[]}}}) -> [6 7 8 2 1 2 4 4 2 0 1 6 1 5 0 5 0 8 5 6 0 9 2 0 6 0 9 1 5 4]", "(flattenl {[] {[3 9 3 6] {[3 7 0] {[5]} {[2 7 7 9]}} {[3 6 5 0] {[2 6 9]} {[7]}}}}) -> [3 9 3 6 3 7 0 5 2 7 7 9 3 6 5 0 2 6 9 7]", "(flattenl {[8 1 4]}) -> [8 1 4]", "(flattenl {}) -> []", "(flattenl {[9]}) -> [9]", "(flattenl {}) -> []", "(flattenl {[9 3 9 6 2] {[1] {[0 5] {[1 5 7 1]}}} {[2 0] {[] {[6 1 7 8]} {[8 8 4]}}}}) -> [9 3 9 6 2 1 0 5 1 5 7 1 2 0 6 1 7 8 8 8 4]", "(flattenl {[] {[8 2 9 9 6]} {[7 3 2 5]}}) -> [8 2 9 9 6 7 3 2 5]", "(flattenl {[3 8] {[8 1 8] {[2 3] {[3 9 2 2]} {[3 6 4 6]}} {[8 3 8 8]}} {[9 1 3 9 2] {[7 9] {[9 2 0 3 3]} {[9]}} {[6 4 9] {[8]}}}}) -> [3 8 8 1 8 2 3 3 9 2 2 3 6 4 6 8 3 8 8 9 1 3 9 2 7 9 9 2 0 3 3 9 6 4 9 8]", "(flattenl {[0 9 8 7] {[9 8 7 3] {[8] {[]} {[5 9 9 7 8]}}} {[2] {[5 1 7 8 4] {[]} {[]}} {[7 9 5 7] {[9 2 6 3]} {[7 6]}}}}) -> [0 9 8 7 9 8 7 3 8 5 9 9 7 8 2 5 1 7 8 4 7 9 5 7 9 2 6 3 7 6]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[0 5 9]}) -> [0 5 9]", "(flattenl {[] {[8 7 8 9 9] {[0]}}}) -> [8 7 8 9 9 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 8 2 3 0]}) -> [5 8 2 3 0]", "(flattenl {}) -> []", "(flattenl {[8]}) -> [8]", "(flattenl {[8 0 0] {[7 4 6 5 5]} {[]}}) -> [8 0 0 7 4 6 5 5]", "(flattenl {[3]}) -> [3]", "(flattenl {[2 1 4] {[1 9]}}) -> [2 1 4 1 9]", "(flattenl {[4 7 1]}) -> [4 7 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.11912, "name": "flattenl", "examples": ["(flattenl {[9 9 2 6] {[2 6 2] {[8] {[6 6 4]}}}}) -> [9 9 2 6 2 6 2 8 6 6 4]", "(flattenl {[] {[3 2 7 1]}}) -> [3 2 7 1]", "(flattenl {[] {[]} {[5 1 5 0]}}) -> [5 1 5 0]", "(flattenl {[4 2 3] {[9 4]}}) -> [4 2 3 9 4]", "(flattenl {[7 8 4] {[]}}) -> [7 8 4]", "(flattenl {}) -> []", "(flattenl {[0 2 7 3 0] {[5] {[3 0]}} {[] {[1 6 8]}}}) -> [0 2 7 3 0 5 3 0 1 6 8]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[] {[0 1 6 4]} {[5 1 3] {[3 8 4]} {[5 7 6 9 4]}}}) -> [0 1 6 4 5 1 3 3 8 4 5 7 6 9 4]", "(flattenl {[2 4 6 7 3] {[0 0 8]} {[7 2 0 6 3]}}) -> [2 4 6 7 3 0 0 8 7 2 0 6 3]", "(flattenl {[]}) -> []", "(flattenl {[7] {[] {[4] {[0 6 4 3]} {[0 9]}}} {[5 1 3] {[] {[5 0 5 5]}}}}) -> [7 4 0 6 4 3 0 9 5 1 3 5 0 5 5]", "(flattenl {[3 9 9 5]}) -> [3 9 9 5]", "(flattenl {}) -> []", "(flattenl {[0 5 4] {[3 7 0] {[8 3 8 2]}} {[9 7]}}) -> [0 5 4 3 7 0 8 3 8 2 9 7]", "(flattenl {}) -> []", "(flattenl {[2 3] {[]}}) -> [2 3]", "(flattenl {[]}) -> []", "(flattenl {[] {[8 5 3 4]} {[2 8 3 6 4]}}) -> [8 5 3 4 2 8 3 6 4]", "(flattenl {[0] {[]}}) -> [0]", "(flattenl {[9 8 3 7] {[] {[5]}}}) -> [9 8 3 7 5]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.150145, "name": "flattenl", "examples": ["(flattenl {[2 7 0 8 0] {[2 8 2 7]} {[8 5 1 0 3]}}) -> [2 7 0 8 0 2 8 2 7 8 5 1 0 3]", "(flattenl {[4 8 5 4 1] {[5 5 2] {[] {[]} {[6 9 8 9 0]}}} {[4 1 6] {[1] {[]} {[]}}}}) -> [4 8 5 4 1 5 5 2 6 9 8 9 0 4 1 6 1]", "(flattenl {[3 6 4] {[]}}) -> [3 6 4]", "(flattenl {[6 7 5 4 7]}) -> [6 7 5 4 7]", "(flattenl {[0 8 9 4] {[]} {[7] {[4 3]} {[0 8 8]}}}) -> [0 8 9 4 7 4 3 0 8 8]", "(flattenl {[8 1 1 8]}) -> [8 1 1 8]", "(flattenl {}) -> []", "(flattenl {[6 6 9] {[]}}) -> [6 6 9]", "(flattenl {[6]}) -> [6]", "(flattenl {[8] {[1 6 1 1]} {[7]}}) -> [8 1 6 1 1 7]", "(flattenl {[4 3 7 2] {[] {[4 3 4 6] {[8 8]} {[4]}} {[] {[3 9 1 7]}}}}) -> [4 3 7 2 4 3 4 6 8 8 4 3 9 1 7]", "(flattenl {[2 6] {[]}}) -> [2 6]", "(flattenl {[7 0 1] {[8 5]} {[]}}) -> [7 0 1 8 5]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[6 9 0 3]}) -> [6 9 0 3]", "(flattenl {[3 6 2 4]}) -> [3 6 2 4]", "(flattenl {[2 7 9 7] {[3 3 5] {[9 1 0 6 4]} {[8 7 3 0 7] {[7 6 1]} {[8 9]}}} {[]}}) -> [2 7 9 7 3 3 5 9 1 0 6 4 8 7 3 0 7 7 6 1 8 9]", "(flattenl {[7 1 3 3 4]}) -> [7 1 3 3 4]", "(flattenl {[1 0 9 1] {[2 3 3]} {[3 0 0 7]}}) -> [1 0 9 1 2 3 3 3 0 0 7]", "(flattenl {[4 1 2 5] {[8 3 9] {[3 2 8 1 0] {[2 7]}} {[9 1 8] {[4 0 5 6]} {[2 4 3 7]}}} {[9]}}) -> [4 1 2 5 8 3 9 3 2 8 1 0 2 7 9 1 8 4 0 5 6 2 4 3 7 9]", "(flattenl {[9 9 8 2] {[7 5 6 4] {[7 8 0 5] {[8]}} {[1 5 7 9]}}}) -> [9 9 8 2 7 5 6 4 7 8 0 5 8 1 5 7 9]", "(flattenl {[] {[1 8 3 4] {[1]} {[]}} {[0 0 6 6 4] {[]}}}) -> [1 8 3 4 1 0 0 6 6 4]", "(flattenl {[1 5] {[0 7 7 2 6]}}) -> [1 5 0 7 7 2 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.159225, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[8 0 5] {[4 8 5] {[7 4 1 4]} {[4 1 5 2 4]}}}) -> [8 0 5 4 8 5 7 4 1 4 4 1 5 2 4]", "(flattenl {[0 2 7 9] {[0]}}) -> [0 2 7 9 0]", "(flattenl {[5 7 1 5]}) -> [5 7 1 5]", "(flattenl {[8 1 4] {[6 4 1 8]} {[5 8 5 0 4]}}) -> [8 1 4 6 4 1 8 5 8 5 0 4]", "(flattenl {[5 1 6 2]}) -> [5 1 6 2]", "(flattenl {[0 0 9] {[9 7 3 6 7] {[1 9 2]}}}) -> [0 0 9 9 7 3 6 7 1 9 2]", "(flattenl {[3 5 9 6]}) -> [3 5 9 6]", "(flattenl {[8 8 5 5 9] {[7 7 8]}}) -> [8 8 5 5 9 7 7 8]", "(flattenl {}) -> []", "(flattenl {[3 6 0 7] {[2 6 4 0 7]} {[5 1 5 2 2]}}) -> [3 6 0 7 2 6 4 0 7 5 1 5 2 2]", "(flattenl {}) -> []", "(flattenl {[] {[1 4 7 8]} {[1 0]}}) -> [1 4 7 8 1 0]", "(flattenl {[]}) -> []", "(flattenl {[4]}) -> [4]", "(flattenl {[] {[7 2]}}) -> [7 2]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[1 8 8 2 3] {[4 4 6 1 6] {[0 9 4] {[6 6 8]}} {[]}}}) -> [1 8 8 2 3 4 4 6 1 6 0 9 4 6 6 8]", "(flattenl {[8] {[0 3]} {[5 9 0 5 3] {[2 6]} {[3 5 6 5]}}}) -> [8 0 3 5 9 0 5 3 2 6 3 5 6 5]", "(flattenl {[] {[7 0 9 4]}}) -> [7 0 9 4]", "(flattenl {[] {[7 7] {[8 6] {[8 7 5 6]}}}}) -> [7 7 8 6 8 7 5 6]", "(flattenl {[1]}) -> [1]", "(flattenl {[0] {[1 3 1 6 7] {[] {[3]} {[1 7 7 3]}} {[0 8 8 0 1] {[8 3 5]}}} {[5 6 0]}}) -> [0 1 3 1 6 7 3 1 7 7 3 0 8 8 0 1 8 3 5 5 6 0]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.13779, "name": "flattenl", "examples": ["(flattenl {[9 5 9 3]}) -> [9 5 9 3]", "(flattenl {[]}) -> []", "(flattenl {[7 3] {[4 4 8 8 6]} {[9 3 9 6 0] {[6]} {[2 6]}}}) -> [7 3 4 4 8 8 6 9 3 9 6 0 6 2 6]", "(flattenl {[4]}) -> [4]", "(flattenl {}) -> []", "(flattenl {[2 8 6 3] {[9 7 3 7]}}) -> [2 8 6 3 9 7 3 7]", "(flattenl {[7 6 9 1] {[]}}) -> [7 6 9 1]", "(flattenl {}) -> []", "(flattenl {[] {[3 1 3 9 1]} {[6] {[0] {[0]}} {[1 9 5] {[2 0 4 5]}}}}) -> [3 1 3 9 1 6 0 0 1 9 5 2 0 4 5]", "(flattenl {[] {[6]} {[5 0 1 4 4]}}) -> [6 5 0 1 4 4]", "(flattenl {[] {[2] {[4]} {[7 6]}}}) -> [2 4 7 6]", "(flattenl {[6 0 8 2 0]}) -> [6 0 8 2 0]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[4 6 5 9 5] {[]}}) -> [4 6 5 9 5]", "(flattenl {}) -> []", "(flattenl {[3 1 2 8] {[4 6]}}) -> [3 1 2 8 4 6]", "(flattenl {[1 6 6] {[5 6]} {[0 5] {[]}}}) -> [1 6 6 5 6 0 5]", "(flattenl {[4 6] {[]} {[7 4 5 0 4]}}) -> [4 6 7 4 5 0 4]", "(flattenl {[9 3 1 8 7]}) -> [9 3 1 8 7]", "(flattenl {[9 0 1 2 4] {[4 4 4 0 0]} {[] {[5 6]}}}) -> [9 0 1 2 4 4 4 4 0 0 5 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.147649, "name": "flattenl", "examples": ["(flattenl {[7 2] {[] {[9 0 3]} {[5 6 5]}} {[] {[8 4]} {[0]}}}) -> [7 2 9 0 3 5 6 5 8 4 0]", "(flattenl {[5 1 8] {[]} {[3 4 9 5 3] {[7 7]} {[9]}}}) -> [5 1 8 3 4 9 5 3 7 7 9]", "(flattenl {[8] {[1 3 1 1 3] {[]} {[3 4 8]}} {[] {[1 0 7]}}}) -> [8 1 3 1 1 3 3 4 8 1 0 7]", "(flattenl {[]}) -> []", "(flattenl {[2 9]}) -> [2 9]", "(flattenl {[6] {[8]}}) -> [6 8]", "(flattenl {[8 3] {[] {[] {[7]} {[5 3 4 6]}}} {[] {[] {[]}}}}) -> [8 3 7 5 3 4 6]", "(flattenl {}) -> []", "(flattenl {[3 9]}) -> [3 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7] {[4 1]} {[2 2 2 6]}}) -> [7 4 1 2 2 2 6]", "(flattenl {[8 9 8 5]}) -> [8 9 8 5]", "(flattenl {[7 6] {[]}}) -> [7 6]", "(flattenl {[] {[4 5 9 3 5] {[6 9]}}}) -> [4 5 9 3 5 6 9]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[5] {[5 8 9 8 6]}}) -> [5 5 8 9 8 6]", "(flattenl {[7] {[5 7 7]} {[5] {[0]}}}) -> [7 5 7 7 5 0]", "(flattenl {[1 5 8]}) -> [1 5 8]", "(flattenl {[2 3]}) -> [2 3]", "(flattenl {[1 2 7 4] {[0] {[5 2 5]} {[7 5] {[4 7 3 7 6]}}}}) -> [1 2 7 4 0 5 2 5 7 5 4 7 3 7 6]", "(flattenl {[0 8] {[7 4 9 2 4] {[0]} {[2] {[0 8 6]} {[4 2 3]}}}}) -> [0 8 7 4 9 2 4 0 2 0 8 6 4 2 3]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.149671, "name": "flattenl", "examples": ["(flattenl {[5] {[5 1 1]}}) -> [5 5 1 1]", "(flattenl {[3 4 8 2 2]}) -> [3 4 8 2 2]", "(flattenl {[6 8 5 9] {[]}}) -> [6 8 5 9]", "(flattenl {[5 6 1 3 0] {[6 7 1]} {[0 1]}}) -> [5 6 1 3 0 6 7 1 0 1]", "(flattenl {[7]}) -> [7]", "(flattenl {[6 6] {[1 1] {[9 4 5 4]}} {[] {[]}}}) -> [6 6 1 1 9 4 5 4]", "(flattenl {}) -> []", "(flattenl {[1 8 3] {[5 9]}}) -> [1 8 3 5 9]", "(flattenl {}) -> []", "(flattenl {[1 6 4 5] {[1] {[3 7 2 9] {[3 5 9 1]}} {[3 4 2] {[]} {[]}}}}) -> [1 6 4 5 1 3 7 2 9 3 5 9 1 3 4 2]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3 7 9 7] {[4 2 7 6]}}) -> [3 7 9 7 4 2 7 6]", "(flattenl {[3 0 2 2 5]}) -> [3 0 2 2 5]", "(flattenl {[3]}) -> [3]", "(flattenl {[0 2]}) -> [0 2]", "(flattenl {[7 0 9] {[6 3 6 3]}}) -> [7 0 9 6 3 6 3]", "(flattenl {[9 3 0]}) -> [9 3 0]", "(flattenl {[1 1 7 6 8] {[8] {[8 0 2]}}}) -> [1 1 7 6 8 8 8 0 2]", "(flattenl {[9 4 8 4] {[1] {[] {[]}} {[5 0 2 6]}}}) -> [9 4 8 4 1 5 0 2 6]", "(flattenl {}) -> []", "(flattenl {[] {[9 9 9 9]} {[6 6 2]}}) -> [9 9 9 9 6 6 2]", "(flattenl {[2 7 0 1] {[9] {[5 5 2]} {[2 6 2]}}}) -> [2 7 0 1 9 5 5 2 2 6 2]", "(flattenl {[6 4 5 8]}) -> [6 4 5 8]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.130531, "name": "flattenl", "examples": ["(flattenl {[5] {[3 5 2 0]}}) -> [5 3 5 2 0]", "(flattenl {}) -> []", "(flattenl {[1 2 1 1] {[1 3 5 3 8]}}) -> [1 2 1 1 1 3 5 3 8]", "(flattenl {}) -> []", "(flattenl {[7] {[]} {[8 6] {[7]}}}) -> [7 8 6 7]", "(flattenl {[2 8 2 9]}) -> [2 8 2 9]", "(flattenl {[] {[0 2 8 9]} {[9]}}) -> [0 2 8 9 9]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[4] {[7 2 0]}}) -> [4 7 2 0]", "(flattenl {[8 9 6]}) -> [8 9 6]", "(flattenl {}) -> []", "(flattenl {[7]}) -> [7]", "(flattenl {}) -> []", "(flattenl {[6 3]}) -> [6 3]", "(flattenl {[8 3] {[6 8]}}) -> [8 3 6 8]", "(flattenl {[3 1 0] {[0 8 1]}}) -> [3 1 0 0 8 1]", "(flattenl {[6 6 7] {[6 2 9]} {[6 8]}}) -> [6 6 7 6 2 9 6 8]", "(flattenl {[] {[2 3 8 4] {[7 7 9 1 7] {[1 6]} {[6]}} {[8 3] {[5 8 2]} {[]}}}}) -> [2 3 8 4 7 7 9 1 7 1 6 6 8 3 5 8 2]", "(flattenl {[1 5 4] {[2 7]}}) -> [1 5 4 2 7]", "(flattenl {[0] {[7 2 3] {[8]}} {[6 1 4] {[]} {[5]}}}) -> [0 7 2 3 8 6 1 4 5]", "(flattenl {[0] {[6 6 1 8] {[8]} {[2 7 5 1]}} {[0 3 4 4 4] {[2 0 6] {[7 8]} {[6 9 7 7]}}}}) -> [0 6 6 1 8 8 2 7 5 1 0 3 4 4 4 2 0 6 7 8 6 9 7 7]", "(flattenl {[] {[4] {[9 9] {[1 8 4]}} {[4 0 0 9] {[2 9 9 1]} {[9 6 9 5]}}} {[5 1 5 0] {[]} {[5 1 0 2]}}}) -> [4 9 9 1 8 4 4 0 0 9 2 9 9 1 9 6 9 5 5 1 5 0 5 1 0 2]", "(flattenl {[7] {[2 6 5 9 1] {[3 5 0] {[]} {[4 8]}} {[8 6 3 7] {[5 1 5 4 0]} {[4 2 3]}}} {[1 3] {[0 1 9 2 8] {[]} {[9 6 9]}} {[3 9 4 3] {[2 4 3]} {[1]}}}}) -> [7 2 6 5 9 1 3 5 0 4 8 8 6 3 7 5 1 5 4 0 4 2 3 1 3 0 1 9 2 8 9 6 9 3 9 4 3 2 4 3 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.155759, "name": "flattenl", "examples": ["(flattenl {[6] {[9 0 7] {[9 5 7] {[2 3 7 7 6]} {[9]}} {[2] {[9 0 0 8]}}}}) -> [6 9 0 7 9 5 7 2 3 7 7 6 9 2 9 0 0 8]", "(flattenl {[8 3 2 6 8]}) -> [8 3 2 6 8]", "(flattenl {[2 3 1 6] {[2 5]}}) -> [2 3 1 6 2 5]", "(flattenl {[] {[5 3 5 1 2] {[8 6 9 1 9] {[3 6 1 9 6]} {[8]}}}}) -> [5 3 5 1 2 8 6 9 1 9 3 6 1 9 6 8]", "(flattenl {[7] {[1 5 7] {[2 5 9 5] {[0 8]}} {[6 5 3 7]}} {[8 2 1 7 9] {[6 9]} {[8 6 4 9]}}}) -> [7 1 5 7 2 5 9 5 0 8 6 5 3 7 8 2 1 7 9 6 9 8 6 4 9]", "(flattenl {[9]}) -> [9]", "(flattenl {[9 6 1 1] {[]}}) -> [9 6 1 1]", "(flattenl {[9] {[3 1] {[7 1 3]} {[5 9 1 2]}} {[7 5 7 9]}}) -> [9 3 1 7 1 3 5 9 1 2 7 5 7 9]", "(flattenl {}) -> []", "(flattenl {[1] {[]} {[4 6 5]}}) -> [1 4 6 5]", "(flattenl {[6 2 9]}) -> [6 2 9]", "(flattenl {[8 8 2 2]}) -> [8 8 2 2]", "(flattenl {[7 0 4 7 5] {[4 7 7 9 9] {[4 3 2 3] {[3 1 5]}} {[] {[3 8 0 0]}}} {[3 9]}}) -> [7 0 4 7 5 4 7 7 9 9 4 3 2 3 3 1 5 3 8 0 0 3 9]", "(flattenl {}) -> []", "(flattenl {[7 0 8 0]}) -> [7 0 8 0]", "(flattenl {}) -> []", "(flattenl {[3 0 8 4 3] {[] {[]}} {[4 8] {[8 3 2 9 3]} {[8]}}}) -> [3 0 8 4 3 4 8 8 3 2 9 3 8]", "(flattenl {[4 0 3 0] {[7 8 4 7 8] {[] {[6 3]}}} {[9 0]}}) -> [4 0 3 0 7 8 4 7 8 6 3 9 0]", "(flattenl {[6 0 1] {[5 7 0 5] {[4 1 1 1]}}}) -> [6 0 1 5 7 0 5 4 1 1 1]", "(flattenl {[2 2]}) -> [2 2]", "(flattenl {}) -> []", "(flattenl {[8 9 6 4 2] {[]}}) -> [8 9 6 4 2]", "(flattenl {[1 1] {[3 1 5 5 2] {[4 5]}} {[]}}) -> [1 1 3 1 5 5 2 4 5]", "(flattenl {[1 0 7 3]}) -> [1 0 7 3]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.147407, "name": "flattenl", "examples": ["(flattenl {[1] {[1]} {[8 4 0 3 8]}}) -> [1 1 8 4 0 3 8]", "(flattenl {}) -> []", "(flattenl {[1 3 0 8 0]}) -> [1 3 0 8 0]", "(flattenl {[9 0]}) -> [9 0]", "(flattenl {[3 2 8]}) -> [3 2 8]", "(flattenl {[3 7 9 1] {[] {[1 4 5 3] {[4 2 5]} {[0 8 8 9]}} {[6 2 6 7 7] {[6 9 8 4 9]} {[2 5 2 1 4]}}} {[9 1 8 4 3] {[7 0 0]}}}) -> [3 7 9 1 1 4 5 3 4 2 5 0 8 8 9 6 2 6 7 7 6 9 8 4 9 2 5 2 1 4 9 1 8 4 3 7 0 0]", "(flattenl {}) -> []", "(flattenl {[] {[0 6 3 2]} {[3]}}) -> [0 6 3 2 3]", "(flattenl {}) -> []", "(flattenl {[8 0]}) -> [8 0]", "(flattenl {[8 0 6 9 9] {[5] {[4 5 5 6]} {[8 8 3 0 7]}} {[6 0] {[4 8 1]}}}) -> [8 0 6 9 9 5 4 5 5 6 8 8 3 0 7 6 0 4 8 1]", "(flattenl {[3] {[0 3]} {[]}}) -> [3 0 3]", "(flattenl {}) -> []", "(flattenl {[1 7 2 3] {[8 5 6 5]}}) -> [1 7 2 3 8 5 6 5]", "(flattenl {[7 5]}) -> [7 5]", "(flattenl {[1 7]}) -> [1 7]", "(flattenl {[1 3 5] {[4 9]} {[7 7 8 4]}}) -> [1 3 5 4 9 7 7 8 4]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 4 2] {[0 4 6]}}) -> [7 4 2 0 4 6]", "(flattenl {[6 9 6] {[4]} {[9]}}) -> [6 9 6 4 9]", "(flattenl {[3 2 2 0] {[0 3] {[0 0 4 2]}}}) -> [3 2 2 0 0 3 0 0 4 2]", "(flattenl {[9 9 4 9] {[5 6 2]} {[2 1 2 2 9]}}) -> [9 9 4 9 5 6 2 2 1 2 2 9]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.143293, "name": "flattenl", "examples": ["(flattenl {[7 7 6 0 4] {[3 1 1]}}) -> [7 7 6 0 4 3 1 1]", "(flattenl {[9 7 3 9 2] {[5 7] {[2]}} {[] {[]} {[2]}}}) -> [9 7 3 9 2 5 7 2 2]", "(flattenl {[3]}) -> [3]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[2] {[9]}}) -> [2 9]", "(flattenl {}) -> []", "(flattenl {[] {[2] {[7 3 3 2 3] {[3 0 2 5]}}} {[6 3 3 1 5] {[8 4 7 6 0] {[0 5 3 7 5]}}}}) -> [2 7 3 3 2 3 3 0 2 5 6 3 3 1 5 8 4 7 6 0 0 5 3 7 5]", "(flattenl {[]}) -> []", "(flattenl {[]}) -> []", "(flattenl {[9 3 3 3]}) -> [9 3 3 3]", "(flattenl {[] {[]} {[2 8 8 8]}}) -> [2 8 8 8]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {[5 5 5 2] {[2]} {[]}}) -> [5 5 5 2 2]", "(flattenl {}) -> []", "(flattenl {[6]}) -> [6]", "(flattenl {[3]}) -> [3]", "(flattenl {[0 0] {[2 4 1 3] {[7 5 5 8 6]} {[2 3 5]}}}) -> [0 0 2 4 1 3 7 5 5 8 6 2 3 5]", "(flattenl {[0 2 7] {[6 4 3 5 2] {[1 5 1 6 2] {[3]} {[1 0 7 3]}}}}) -> [0 2 7 6 4 3 5 2 1 5 1 6 2 3 1 0 7 3]", "(flattenl {[8 9 5]}) -> [8 9 5]", "(flattenl {}) -> []", "(flattenl {[4 9 8 8]}) -> [4 9 8 8]", "(flattenl {}) -> []"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.147357, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[3 5 1 6] {[8 0]}}) -> [3 5 1 6 8 0]", "(flattenl {[8 2 7 2 7]}) -> [8 2 7 2 7]", "(flattenl {[7 2 2]}) -> [7 2 2]", "(flattenl {[0 4 2 4 3] {[7 0 7 8 7]} {[]}}) -> [0 4 2 4 3 7 0 7 8 7]", "(flattenl {[1]}) -> [1]", "(flattenl {[9 8 5 0] {[2] {[9]} {[0 3 3 1 5]}}}) -> [9 8 5 0 2 9 0 3 3 1 5]", "(flattenl {[6 1 6]}) -> [6 1 6]", "(flattenl {[9 6 1] {[4 3 2 8 0]} {[]}}) -> [9 6 1 4 3 2 8 0]", "(flattenl {}) -> []", "(flattenl {[7 1 2] {[9] {[6 5 1]}} {[4 8 2 4 7]}}) -> [7 1 2 9 6 5 1 4 8 2 4 7]", "(flattenl {[]}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[7 0 3] {[0]}}) -> [7 0 3 0]", "(flattenl {[2 1] {[7 8 1 5 9] {[3 5 3 2]}}}) -> [2 1 7 8 1 5 9 3 5 3 2]", "(flattenl {[8 9]}) -> [8 9]", "(flattenl {[5 9]}) -> [5 9]", "(flattenl {}) -> []", "(flattenl {[3 9 5] {[0 4]} {[0 5]}}) -> [3 9 5 0 4 0 5]", "(flattenl {[6 9 5 1] {[4 0] {[6]}} {[0 4 8 4] {[8]} {[8 1 4 7]}}}) -> [6 9 5 1 4 0 6 0 4 8 4 8 8 1 4 7]", "(flattenl {[] {[0 9 7 4 9]} {[5 2 0] {[5 6 3 8 9]} {[2 0 9 1]}}}) -> [0 9 7 4 9 5 2 0 5 6 3 8 9 2 0 9 1]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.155475, "name": "flattenl", "examples": ["(flattenl {[2 9]}) -> [2 9]", "(flattenl {}) -> []", "(flattenl {[6]}) -> [6]", "(flattenl {}) -> []", "(flattenl {[3 0 0] {[]} {[2] {[5] {[1 0]}}}}) -> [3 0 0 2 5 1 0]", "(flattenl {[7 5 7 5] {[7 7 0 0 7] {[6 1 7]} {[3 0 1]}}}) -> [7 5 7 5 7 7 0 0 7 6 1 7 3 0 1]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[3 2] {[0]}}) -> [3 2 0]", "(flattenl {[0 8 9]}) -> [0 8 9]", "(flattenl {[7 5 9 9] {[]} {[8]}}) -> [7 5 9 9 8]", "(flattenl {}) -> []", "(flattenl {[1 8] {[]}}) -> [1 8]", "(flattenl {[9 4] {[]} {[6]}}) -> [9 4 6]", "(flattenl {[]}) -> []", "(flattenl {[] {[9] {[0 3 7]}} {[7 1 7] {[6 3 2 4 9] {[3 5 6 0 6]}} {[6 7 9 8 4]}}}) -> [9 0 3 7 7 1 7 6 3 2 4 9 3 5 6 0 6 6 7 9 8 4]", "(flattenl {[1] {[]} {[6]}}) -> [1 6]", "(flattenl {[9 9] {[0 2 4 1] {[7 6 7 3] {[1 1 4 6 5]}}} {[2 4 2 6 9] {[8 0 8 8 7]}}}) -> [9 9 0 2 4 1 7 6 7 3 1 1 4 6 5 2 4 2 6 9 8 0 8 8 7]", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[3 3 5 4 6] {[9 3 6 3]} {[]}}) -> [3 3 5 4 6 9 3 6 3]", "(flattenl {[7 0] {[6 8 9 7] {[]}} {[2] {[8 7 9 6]}}}) -> [7 0 6 8 9 7 2 8 7 9 6]", "(flattenl {[9 7] {[9 0 8]}}) -> [9 7 9 0 8]", "(flattenl {[6 3] {[]} {[7 1 0 2 7] {[4 5] {[1 0 7]} {[2 9 5]}} {[9 2 1 9 2] {[2 5]}}}}) -> [6 3 7 1 0 2 7 4 5 1 0 7 2 9 5 9 2 1 9 2 2 5]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.082236, "name": "flattenl", "examples": ["(flattenl {[2 5 3 8]}) -> [2 5 3 8]", "(flattenl {[0 1] {[] {[7]} {[2 1 7 1]}} {[] {[0 8 7 9]}}}) -> [0 1 7 2 1 7 1 0 8 7 9]", "(flattenl {}) -> []", "(flattenl {[3] {[7]} {[5 5 0] {[1]}}}) -> [3 7 5 5 0 1]", "(flattenl {[5 8 3] {[]} {[5 4] {[]} {[]}}}) -> [5 8 3 5 4]", "(flattenl {}) -> []", "(flattenl {[2]}) -> [2]", "(flattenl {[6 9 7 4] {[9 0 9 0 7] {[3 6]}} {[6]}}) -> [6 9 7 4 9 0 9 0 7 3 6 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[5 8 1] {[2 1 9] {[0 7 9 7 2]}}}) -> [5 8 1 2 1 9 0 7 9 7 2]", "(flattenl {}) -> []", "(flattenl {[2 4 8 4 4]}) -> [2 4 8 4 4]", "(flattenl {[5 0 5] {[6 0 8 3 5]}}) -> [5 0 5 6 0 8 3 5]", "(flattenl {[9 8] {[5 6 8 6] {[2 2]}} {[8]}}) -> [9 8 5 6 8 6 2 2 8]", "(flattenl {[9 0 6 6 4]}) -> [9 0 6 6 4]", "(flattenl {[5 6 1] {[3 0 6] {[0 8 3]}}}) -> [5 6 1 3 0 6 0 8 3]", "(flattenl {}) -> []", "(flattenl {[7 3 9] {[5 8 7 3 7]}}) -> [7 3 9 5 8 7 3 7]", "(flattenl {[7 9 0 6 5]}) -> [7 9 0 6 5]", "(flattenl {[1 1]}) -> [1 1]", "(flattenl {[]}) -> []", "(flattenl {[] {[9 1 6 4 3]}}) -> [9 1 6 4 3]", "(flattenl {[3 9]}) -> [3 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.088118, "name": "flattenl", "examples": ["(flattenl {[4 8] {[6 6 9 4 1] {[5 6 3 4 8]} {[]}} {[7 2] {[7]} {[3 1 6 7]}}}) -> [4 8 6 6 9 4 1 5 6 3 4 8 7 2 7 3 1 6 7]", "(flattenl {[1 6 1 2] {[2]} {[6 0 7 5 9] {[3 4 1]} {[1 8 2 9] {[0 0 1 4]}}}}) -> [1 6 1 2 2 6 0 7 5 9 3 4 1 1 8 2 9 0 0 1 4]", "(flattenl {[8 5 7]}) -> [8 5 7]", "(flattenl {}) -> []", "(flattenl {[9 3 5 0] {[3] {[9] {[6 7]} {[]}} {[3 5 4]}}}) -> [9 3 5 0 3 9 6 7 3 5 4]", "(flattenl {}) -> []", "(flattenl {[0 7 5 0 9]}) -> [0 7 5 0 9]", "(flattenl {[6 8 0 6] {[2 7]} {[]}}) -> [6 8 0 6 2 7]", "(flattenl {[0 5 9 8 0] {[2 9 4 1 3] {[2 4 7 5]} {[0 1 8]}}}) -> [0 5 9 8 0 2 9 4 1 3 2 4 7 5 0 1 8]", "(flattenl {[7 3] {[8 1 4 6] {[5 1 2 4 8]} {[6 3 0 4]}} {[7]}}) -> [7 3 8 1 4 6 5 1 2 4 8 6 3 0 4 7]", "(flattenl {}) -> []", "(flattenl {[] {[1] {[3 9 0 4] {[5 0 8]} {[1 3]}}} {[9 6 6] {[7 8]} {[1 1 6 6] {[3 5]}}}}) -> [1 3 9 0 4 5 0 8 1 3 9 6 6 7 8 1 1 6 6 3 5]", "(flattenl {[6 6] {[1 6 9 4 0] {[5 1] {[5 6 6 8 9]} {[7]}} {[2 7 7 5] {[3 8 0]}}}}) -> [6 6 1 6 9 4 0 5 1 5 6 6 8 9 7 2 7 7 5 3 8 0]", "(flattenl {}) -> []", "(flattenl {[1 7 7 3]}) -> [1 7 7 3]", "(flattenl {[5 4] {[4] {[]}} {[9 9 3 8 4] {[]}}}) -> [5 4 4 9 9 3 8 4]", "(flattenl {}) -> []", "(flattenl {[4 7]}) -> [4 7]", "(flattenl {[5]}) -> [5]", "(flattenl {[8 7 4 4 5] {[4 0 2 5 3]} {[]}}) -> [8 7 4 4 5 4 0 2 5 3]", "(flattenl {[9 3] {[4 4 0]}}) -> [9 3 4 4 0]", "(flattenl {[4 7] {[] {[1 1 4]} {[2 0 3 9 9]}} {[1] {[4]} {[8]}}}) -> [4 7 1 1 4 2 0 3 9 9 1 4 8]", "(flattenl {[4] {[] {[]}} {[0 7 3 2]}}) -> [4 0 7 3 2]", "(flattenl {[1 1 1 3]}) -> [1 1 1 3]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.086205, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[5 5 3 4 2] {[7 0 9 6]} {[4 6]}}) -> [5 5 3 4 2 7 0 9 6 4 6]", "(flattenl {[]}) -> []", "(flattenl {[8 7 8 1] {[5] {[1 2] {[6 6]} {[3 1 6 0]}} {[8 9 1 0] {[3 4 4 5 1]}}}}) -> [8 7 8 1 5 1 2 6 6 3 1 6 0 8 9 1 0 3 4 4 5 1]", "(flattenl {}) -> []", "(flattenl {[1 8 6] {[9] {[6 7 3 0 0] {[5 7]}} {[9 6 9 5] {[7 2 8]} {[4 7]}}} {[0 5] {[1 2] {[6 6 7 0 3]} {[1 4 3 1 4]}} {[] {[9]} {[2 2 2]}}}}) -> [1 8 6 9 6 7 3 0 0 5 7 9 6 9 5 7 2 8 4 7 0 5 1 2 6 6 7 0 3 1 4 3 1 4 9 2 2 2]", "(flattenl {[3 5 3] {[] {[5 2 0] {[7 9]}}}}) -> [3 5 3 5 2 0 7 9]", "(flattenl {[] {[5 4 8 7] {[6 7 9]} {[8]}}}) -> [5 4 8 7 6 7 9 8]", "(flattenl {[3 3]}) -> [3 3]", "(flattenl {[6 5 3 7 9]}) -> [6 5 3 7 9]", "(flattenl {}) -> []", "(flattenl {[] {[7 7 7] {[8 1] {[1 8 0 9]}}}}) -> [7 7 7 8 1 1 8 0 9]", "(flattenl {[4 7 1] {[] {[] {[2 7 9 7 9]}} {[2 7 9 3] {[0]}}} {[3 3 1 6] {[3 0 9 0] {[2 8]} {[2 0 9 1]}} {[6 3] {[]} {[2 6]}}}}) -> [4 7 1 2 7 9 7 9 2 7 9 3 0 3 3 1 6 3 0 9 0 2 8 2 0 9 1 6 3 2 6]", "(flattenl {[9] {[6 4 1 7] {[4] {[4]} {[2 0 9]}}}}) -> [9 6 4 1 7 4 4 2 0 9]", "(flattenl {[2 0] {[5 5 9 4 0]}}) -> [2 0 5 5 9 4 0]", "(flattenl {[5 0 1 1 0] {[5 4]}}) -> [5 0 1 1 0 5 4]", "(flattenl {[5 3 4 3 6] {[4 2 7 9 3] {[1 7 4]}} {[4] {[5 1 4 1]}}}) -> [5 3 4 3 6 4 2 7 9 3 1 7 4 4 5 1 4 1]", "(flattenl {[2 0] {[1 4] {[2 9 9 3]} {[3]}}}) -> [2 0 1 4 2 9 9 3 3]", "(flattenl {[] {[4 6]} {[8]}}) -> [4 6 8]", "(flattenl {[9 3 1 1 1] {[6 1] {[2]} {[5] {[4]} {[4 6 0 7]}}}}) -> [9 3 1 1 1 6 1 2 5 4 4 6 0 7]", "(flattenl {[6 9] {[2 5]} {[0 0 4] {[5]}}}) -> [6 9 2 5 0 0 4 5]", "(flattenl {[2 5 1 7 3]}) -> [2 5 1 7 3]", "(flattenl {[6 6 6 3]}) -> [6 6 6 3]", "(flattenl {[0 6 9]}) -> [0 6 9]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
{"time": 0.084665, "name": "flattenl", "examples": ["(flattenl {}) -> []", "(flattenl {[9]}) -> [9]", "(flattenl {}) -> []", "(flattenl {[] {[1 3 7 6] {[]}}}) -> [1 3 7 6]", "(flattenl {}) -> []", "(flattenl {}) -> []", "(flattenl {[]}) -> []", "(flattenl {[0 5 0] {[3 3 9 3 0]} {[2 6 9 5 8] {[2 3 2] {[0 0 8 8 1]} {[5 6 1 3]}} {[0 2 6 9 2] {[3 4]} {[7 8 9]}}}}) -> [0 5 0 3 3 9 3 0 2 6 9 5 8 2 3 2 0 0 8 8 1 5 6 1 3 0 2 6 9 2 3 4 7 8 9]", "(flattenl {[2 6 0 6] {[7 4] {[1 7]} {[9 9]}} {[8 2 2 1]}}) -> [2 6 0 6 7 4 1 7 9 9 8 2 2 1]", "(flattenl {[5 1]}) -> [5 1]", "(flattenl {[]}) -> []", "(flattenl {[3]}) -> [3]", "(flattenl {}) -> []", "(flattenl {[8 4] {[5 3 4 5] {[]} {[3 7 2 4 3]}} {[]}}) -> [8 4 5 3 4 5 3 7 2 4 3]", "(flattenl {[5 9 5 0 9] {[0 3]} {[]}}) -> [5 9 5 0 9 0 3]", "(flattenl {[6 7 2] {[]}}) -> [6 7 2]", "(flattenl {[3 1 9] {[]} {[7] {[4 6 8 6 5]} {[1 2]}}}) -> [3 1 9 7 4 6 8 6 5 1 2]", "(flattenl {[6 2 5 6 1]}) -> [6 2 5 6 1]", "(flattenl {[5] {[0 3 2 9 8] {[]} {[6 2 3 3 3] {[2 2 7 0 9]}}}}) -> [5 0 3 2 9 8 6 2 3 3 3 2 2 7 0 9]", "(flattenl {[3 8 2 5]}) -> [3 8 2 5]", "(flattenl {[4 0 3 6] {[3 4]}}) -> [4 0 3 6 3 4]", "(flattenl {[1 7 4]}) -> [1 7 4]", "(flattenl {[3 9 5 2] {[2 2 0 9] {[7 5 3]} {[3 4 9 5 8]}}}) -> [3 9 5 2 2 2 0 9 7 5 3 3 4 9 5 8]", "(flattenl {[9 0 2 6]}) -> [9 0 2 6]"], "solution": "(let flattenl (let a (lambda (b) (foldt b (lambda (d c) (join (cons c d))) [])) _) _)"}
