{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.272114, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[1] {[9]} {[1 5]}}) -> {1 {9} {6}}", "(sumnodes {[0] {[2]} {[5 7 7]}}) -> {0 {2} {19}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[9 0 5]}) -> {14}", "(sumnodes {[] {[2 9]} {[1 6]}}) -> {0 {11} {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (car c)) 0)))) _) _)", "time": 0.175477, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[9 0]}) -> {9}", "(sumnodes {[3] {[]}}) -> {3 {0}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.311201, "name": "sumnodes", "examples": ["(sumnodes {[4 5] {[5 7 2]} {[3 7 0 8 8]}}) -> {9 {14} {26}}", "(sumnodes {[7 8 6 7] {[0 9 5 6]} {[5 5 8]}}) -> {28 {20} {18}}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[9 4 2 1 6] {[0]}}) -> {22 {0}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.353061, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3 7 2] {[5 6]}}) -> {12 {11}}", "(sumnodes {[4 6 5 8] {[9 5] {[5]}} {[] {[1 1] {[5 3 1 1 8]}}}}) -> {23 {14 {5}} {0 {2 {18}}}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[3 3 3 2 6]} {[8 5 0 6 3]}}) -> {0 {17} {22}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.282085, "name": "sumnodes", "examples": ["(sumnodes {[8 4] {[]}}) -> {12 {0}}", "(sumnodes {}) -> {}", "(sumnodes {[4 1 6 8 8] {[]} {[3 6 9]}}) -> {27 {0} {18}}", "(sumnodes {[0 2 4 5]}) -> {11}", "(sumnodes {[8 7 0] {[]} {[0 4 7 8 6]}}) -> {15 {0} {25}}", "(sumnodes {[] {[7 2 1] {[0]}}}) -> {0 {10 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.345601, "name": "sumnodes", "examples": ["(sumnodes {[] {[5 3 1 3 3]} {[4] {[4 1] {[0 7 4 6]}} {[8] {[4 0 4 2 0]}}}}) -> {0 {15} {4 {5 {17}} {8 {10}}}}", "(sumnodes {[4 5] {[1]}}) -> {9 {1}}", "(sumnodes {[9 3]}) -> {12}", "(sumnodes {[2 4 7 2] {[8 5 0 3 9]} {[]}}) -> {15 {25} {0}}", "(sumnodes {[4]}) -> {4}", "(sumnodes {[0] {[5]}}) -> {0 {5}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.348689, "name": "sumnodes", "examples": ["(sumnodes {[3 4 7] {[4 5 1 7]}}) -> {14 {17}}", "(sumnodes {}) -> {}", "(sumnodes {[0 6 0 1] {[8 1 1 3 1] {[0 3 5 7] {[5 0 1 0]}}}}) -> {7 {14 {15 {6}}}}", "(sumnodes {[3] {[7 5 3] {[2]} {[0 9 1 7]}} {[4] {[]}}}) -> {3 {15 {2} {17}} {4 {0}}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[]}}) -> {0 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.292732, "name": "sumnodes", "examples": ["(sumnodes {[4]}) -> {4}", "(sumnodes {}) -> {}", "(sumnodes {[6 7 7 0 4] {[] {[8 7 1 0]} {[6]}} {[]}}) -> {24 {0 {16} {6}} {0}}", "(sumnodes {[6]}) -> {6}", "(sumnodes {[8 4 9] {[8 0 2 9]} {[9 9 1] {[] {[8]}} {[0]}}}) -> {21 {19} {19 {0 {8}} {0}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.284825, "name": "sumnodes", "examples": ["(sumnodes {[2 1 4 2 4] {[]}}) -> {13 {0}}", "(sumnodes {}) -> {}", "(sumnodes {[2 0 3 5] {[8 7 5 5 1]}}) -> {10 {26}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.358739, "name": "sumnodes", "examples": ["(sumnodes {[3 6] {[2 7 8 9 1]} {[]}}) -> {9 {27} {0}}", "(sumnodes {[0 1 3] {[] {[] {[5 2 7]}}}}) -> {4 {0 {0 {14}}}}", "(sumnodes {[3 4]}) -> {7}", "(sumnodes {}) -> {}", "(sumnodes {[4 6 3 0 2]}) -> {15}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.375246, "name": "sumnodes", "examples": ["(sumnodes {[0 8 3 3 2] {[9 2 3 6]}}) -> {16 {20}}", "(sumnodes {[7 2 0 9] {[5 5] {[5 7 5]}}}) -> {18 {10 {17}}}", "(sumnodes {[] {[] {[]} {[4]}} {[6 6 4 7] {[6 1 3 5 6]}}}) -> {0 {0 {0} {4}} {23 {21}}}", "(sumnodes {}) -> {}", "(sumnodes {[1 7 0] {[]}}) -> {8 {0}}", "(sumnodes {[6] {[6 6]}}) -> {6 {12}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.344208, "name": "sumnodes", "examples": ["(sumnodes {[7 5]}) -> {12}", "(sumnodes {[3 7 3] {[0 1 7 1] {[]}} {[8 2 5 0 2]}}) -> {13 {9 {0}} {17}}", "(sumnodes {}) -> {}", "(sumnodes {[5 6 5 1 6] {[1 3 4 6]} {[2]}}) -> {23 {14} {2}}", "(sumnodes {[4] {[4 9 7 0 5]}}) -> {4 {25}}", "(sumnodes {[1]}) -> {1}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.381323, "name": "sumnodes", "examples": ["(sumnodes {[4 2 4 8]}) -> {18}", "(sumnodes {[6 7 0] {[3 0] {[9]} {[1 2 5 7] {[]}}} {[7 5 6 8]}}) -> {13 {3 {9} {15 {0}}} {26}}", "(sumnodes {[] {[6 0 9 9 7] {[9] {[6 6]} {[0 7 1]}} {[8 0 7] {[3 4 1]} {[3 6 5]}}} {[2 3 1 5 0] {[0] {[2]} {[5 8 1 6]}}}}) -> {0 {31 {9 {12} {8}} {15 {8} {14}}} {11 {0 {2} {20}}}}", "(sumnodes {[3 0 1] {[]} {[8]}}) -> {4 {0} {8}}", "(sumnodes {[4 9 8 9 5]}) -> {35}", "(sumnodes {[6 3 9 2] {[5 8 8] {[3 6 9 7 1] {[0 0 1]} {[7 4 2 1]}} {[3 2 9]}} {[7 8] {[1 1 4 6]}}}) -> {20 {21 {26 {1} {14}} {14}} {15 {12}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.419936, "name": "sumnodes", "examples": ["(sumnodes {[0]}) -> {0}", "(sumnodes {[8 9 3 4 6] {[]}}) -> {30 {0}}", "(sumnodes {[2 6 6 8] {[0 0 0 9 5]} {[]}}) -> {22 {14} {0}}", "(sumnodes {[] {[] {[7] {[6 0 9]}}}}) -> {0 {0 {7 {15}}}}", "(sumnodes {[5 7 6] {[5] {[7]}} {[7 7 1 3 5] {[]} {[9 4 4 3]}}}) -> {18 {5 {7}} {23 {0} {20}}}", "(sumnodes {[4 0 4 5] {[5 3 6]} {[]}}) -> {13 {14} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.541952, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0 5 0 1 3]}) -> {9}", "(sumnodes {}) -> {}", "(sumnodes {[3 5 5 5] {[3 2 7 4 4]} {[8 5 8 3 6]}}) -> {18 {20} {30}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.617779, "name": "sumnodes", "examples": ["(sumnodes {[7 3] {[0 9 9 9 2] {[9 9 0 0]}} {[3 9 2 6 4] {[7 4 0 0 7] {[6]}} {[6 5 4 4 2] {[9 8]}}}}) -> {10 {29 {18}} {24 {18 {6}} {21 {17}}}}", "(sumnodes {[7]}) -> {7}", "(sumnodes {}) -> {}", "(sumnodes {[0 2] {[2 0 5 5]}}) -> {2 {12}}", "(sumnodes {}) -> {}", "(sumnodes {[5 3] {[8 1 3 7 3] {[7]}}}) -> {8 {22 {7}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.282943, "name": "sumnodes", "examples": ["(sumnodes {[6] {[1 1 3 5] {[0 4 7 1]}} {[] {[0 2]}}}) -> {6 {10 {12}} {0 {2}}}", "(sumnodes {[9 6] {[0 1 1]} {[] {[5 2 7 1 5]} {[6 1]}}}) -> {15 {2} {0 {20} {7}}}", "(sumnodes {[3] {[5 1 4] {[]} {[8 8 3 3 9] {[0]} {[6]}}} {[2 2 6 4] {[1 2 1 4] {[6]} {[]}} {[4 8 8]}}}) -> {3 {10 {0} {31 {0} {6}}} {14 {8 {6} {0}} {20}}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[2 4 7]} {[5]}}) -> {0 {13} {5}}", "(sumnodes {[7 8 7 0] {[8] {[9]} {[9 0 6 5 0]}}}) -> {22 {8 {9} {20}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.282783, "name": "sumnodes", "examples": ["(sumnodes {[7 4 4] {[7 2 9 5]} {[] {[8]}}}) -> {15 {23} {0 {8}}}", "(sumnodes {[0 8 6]}) -> {14}", "(sumnodes {[6 9 8]}) -> {23}", "(sumnodes {}) -> {}", "(sumnodes {[8 3 9 4 1] {[2] {[1 1 5 8 5]} {[0 9 0 9 1]}}}) -> {25 {2 {20} {19}}}", "(sumnodes {[6 1 7 9] {[4] {[3]} {[9 9]}}}) -> {23 {4 {3} {18}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.278578, "name": "sumnodes", "examples": ["(sumnodes {[9 2 6 9 0] {[8 1 8] {[7 7 4]} {[5 8 3 1 6]}}}) -> {26 {17 {18} {23}}}", "(sumnodes {[7] {[8 8 8 7 4]} {[9] {[]} {[3]}}}) -> {7 {35} {9 {0} {3}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.295917, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0 2 5 2 4] {[5 9 7] {[3 3 4] {[0 5 6]} {[3 7]}}} {[] {[9 2 4 7] {[7 2]}}}}) -> {13 {21 {10 {11} {10}}} {0 {22 {9}}}}", "(sumnodes {[9 9 6 0]}) -> {24}", "(sumnodes {}) -> {}", "(sumnodes {[2 9] {[9]} {[] {[3 1 2 7]} {[]}}}) -> {11 {9} {0 {13} {0}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.271749, "name": "sumnodes", "examples": ["(sumnodes {[6 1] {[5 0 9 1 1] {[9 8 1]}} {[]}}) -> {7 {16 {18}} {0}}", "(sumnodes {[1 8 5 0 7]}) -> {21}", "(sumnodes {}) -> {}", "(sumnodes {[2 4]}) -> {6}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.352662, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[5 0 4] {[2 1 3] {[8 1 1 1]}} {[2] {[] {[]}}}}) -> {9 {6 {11}} {2 {0 {0}}}}", "(sumnodes {[] {[6 8 6 7 6] {[6 3 7 2] {[6 4 0 6 7]}} {[0 7 1] {[7 0 6 6 8]} {[]}}}}) -> {0 {33 {18 {23}} {8 {27} {0}}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[9 7 2 5] {[]}}) -> {23 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.358294, "name": "sumnodes", "examples": ["(sumnodes {[3] {[2]} {[3 3 7 6]}}) -> {3 {2} {19}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[2 4 8 6 1] {[4]} {[4 8 0]}} {[8] {[7 4 6]} {[4 3 5 7]}}}) -> {0 {21 {4} {12}} {8 {17} {19}}}", "(sumnodes {}) -> {}", "(sumnodes {[6 7] {[7 3]} {[]}}) -> {13 {10} {0}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.334873, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[7 4 1 5 4]}) -> {21}", "(sumnodes {}) -> {}", "(sumnodes {[0 0 8] {[4 7 8 4]} {[8]}}) -> {8 {23} {8}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[6] {[7] {[4 4]} {[1]}} {[] {[5 2 8 4 3]}}}) -> {6 {7 {8} {1}} {0 {22}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.351761, "name": "sumnodes", "examples": ["(sumnodes {[] {[3 1 8 6 6]} {[9]}}) -> {0 {24} {9}}", "(sumnodes {}) -> {}", "(sumnodes {[6 4 1 4] {[4 5 5 1]} {[2 4 5]}}) -> {15 {15} {11}}", "(sumnodes {[3 9 2 0 1] {[]} {[]}}) -> {15 {0} {0}}", "(sumnodes {[1 1 5 6 4] {[5] {[1 5 4 7]}} {[6 5 7] {[2 6 7 2]}}}) -> {17 {5 {17}} {18 {17}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.369809, "name": "sumnodes", "examples": ["(sumnodes {[7 8]}) -> {15}", "(sumnodes {}) -> {}", "(sumnodes {[7 4 4 3 6] {[]} {[]}}) -> {24 {0} {0}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[9 7 3 6]} {[4 9 4 1]}}) -> {0 {25} {18}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.366891, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[7 3 2 8 2] {[5 8 5 4 7]} {[3 3 1 8 3]}}) -> {22 {29} {18}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[6 9 1 6 0] {[] {[4 3 1 0]}} {[4 5]}}) -> {22 {0 {8}} {9}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.319792, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 0]}) -> {8}", "(sumnodes {[5 1] {[1 5 0 5 7]} {[9 4]}}) -> {6 {18} {13}}", "(sumnodes {[] {[3 0 3 0 5]} {[]}}) -> {0 {11} {0}}", "(sumnodes {[4 9 6 2 3]}) -> {24}", "(sumnodes {[4 2] {[] {[2 0]}} {[7]}}) -> {6 {0 {2}} {7}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.220675, "name": "sumnodes", "examples": ["(sumnodes {[8 8] {[3 2 0 1] {[4 6]} {[1 8 9 5 4]}} {[1 4 5 1 2]}}) -> {16 {6 {10} {27}} {13}}", "(sumnodes {[9 1 6] {[1 4]}}) -> {16 {5}}", "(sumnodes {[4] {[1 4 3]} {[4 1 3 3]}}) -> {4 {8} {11}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[9 5 5] {[7] {[]} {[5 7 6]}} {[] {[0 6 6 3]}}}}) -> {0 {19 {7 {0} {18}} {0 {15}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (car c)) 0)))) _) _)", "time": 0.142588, "name": "sumnodes", "examples": ["(sumnodes {[7 0]}) -> {7}", "(sumnodes {[2]}) -> {2}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.531949, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 0] {[8 7 0 4] {[5 3]} {[6 7]}} {[5] {[8 9 4 5 9]} {[2 3 5 1]}}}) -> {7 {19 {8} {13}} {5 {35} {11}}}", "(sumnodes {[6 2 7] {[3 5 2]}}) -> {15 {10}}", "(sumnodes {[7 6 8 3 6] {[0 0 7 0 3]} {[1]}}) -> {30 {10} {1}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.683184, "name": "sumnodes", "examples": ["(sumnodes {[5 9 8 4 4] {[7 3 2]}}) -> {30 {12}}", "(sumnodes {[4 8] {[8 2 4 0 6]} {[4 0 2 3]}}) -> {12 {20} {9}}", "(sumnodes {[6 1 0 9 4] {[3] {[2 9]} {[6 8 9 2 0]}} {[3 8 6 5 9] {[5 7]} {[9 5 3]}}}) -> {20 {3 {11} {25}} {31 {12} {17}}}", "(sumnodes {[7 3 2] {[2 7]} {[0 4 0 4]}}) -> {12 {9} {8}}", "(sumnodes {[9 1 7 4] {[1 9]} {[6 3 1]}}) -> {21 {10} {10}}", "(sumnodes {[7 8 9] {[2 7 2 8 1]}}) -> {24 {20}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.267402, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[2 2 3 2 3]}) -> {12}", "(sumnodes {[1 5 0 1]}) -> {7}", "(sumnodes {[3 3 2 6 1] {[4 8 0]}}) -> {15 {12}}", "(sumnodes {[7 3 3]}) -> {13}", "(sumnodes {[] {[2 1 3]} {[7 5 5 7 3]}}) -> {0 {6} {27}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.242809, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0 6 2 5] {[2 1] {[]} {[8 7]}}}) -> {13 {3 {0} {15}}}", "(sumnodes {[] {[6]}}) -> {0 {6}}", "(sumnodes {[5 5 5] {[9]} {[5 0]}}) -> {15 {9} {5}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.240744, "name": "sumnodes", "examples": ["(sumnodes {[1]}) -> {1}", "(sumnodes {[6 8 4] {[5]}}) -> {18 {5}}", "(sumnodes {}) -> {}", "(sumnodes {[9 9 0 7 6] {[]} {[]}}) -> {31 {0} {0}}", "(sumnodes {[2 1 1 0] {[6] {[3 1 8 1 5] {[9 4 4]} {[0]}} {[5] {[4 7]} {[0]}}} {[7 6 2] {[7]}}}) -> {4 {6 {18 {17} {0}} {5 {11} {0}}} {15 {7}}}", "(sumnodes {[] {[]}}) -> {0 {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.288416, "name": "sumnodes", "examples": ["(sumnodes {[7 0 2]}) -> {9}", "(sumnodes {[9] {[6 9 8 4]} {[5]}}) -> {9 {27} {5}}", "(sumnodes {[8]}) -> {8}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[9]}) -> {9}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.232965, "name": "sumnodes", "examples": ["(sumnodes {[4 2 0 6]}) -> {12}", "(sumnodes {[] {[2]}}) -> {0 {2}}", "(sumnodes {[] {[2] {[9 1 4 4 9] {[0 9 2 3 8]}}}}) -> {0 {2 {27 {22}}}}", "(sumnodes {}) -> {}", "(sumnodes {[3 5 5 8] {[0 5]} {[1 7 4 8 7] {[1 9] {[3 4 6 8 4]} {[1 8 3]}} {[7 0 2 2]}}}) -> {21 {5} {27 {10 {25} {12}} {11}}}", "(sumnodes {[3 9 2 0 4]}) -> {18}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.275961, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[2 0]}) -> {2}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3 9 9 2 2] {[5]} {[]}}) -> {25 {5} {0}}", "(sumnodes {[2 1 9 8] {[3 4]} {[2 0 8] {[0 4 5 1 8]}}}) -> {20 {7} {10 {18}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.291174, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 0 5 6 0] {[6 4] {[5 2 9 3 6]}} {[5 4]}}) -> {18 {10 {25}} {9}}", "(sumnodes {[] {[2 4 0]} {[3]}}) -> {0 {6} {3}}", "(sumnodes {[6 4 3]}) -> {13}", "(sumnodes {[] {[3 2 3]}}) -> {0 {8}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.30052, "name": "sumnodes", "examples": ["(sumnodes {[0 7 5] {[] {[]}} {[]}}) -> {12 {0 {0}} {0}}", "(sumnodes {}) -> {}", "(sumnodes {[0 1 4 6]}) -> {11}", "(sumnodes {[0] {[3 9]} {[]}}) -> {0 {12} {0}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.263782, "name": "sumnodes", "examples": ["(sumnodes {[] {[1] {[4 9 7 6 7]}} {[5] {[8 8 3]} {[]}}}) -> {0 {1 {33}} {5 {19} {0}}}", "(sumnodes {}) -> {}", "(sumnodes {[6 2]}) -> {8}", "(sumnodes {}) -> {}", "(sumnodes {[8 1 7 2 5] {[0 9 9 5 8]} {[4 1 4 7]}}) -> {23 {31} {16}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.493518, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[3 7 8 4 0] {[0 9 9 4 9] {[0 5 0 9] {[9 7]}}}}) -> {22 {31 {14 {16}}}}", "(sumnodes {[4 4 0 8 0]}) -> {16}", "(sumnodes {[2 4 8]}) -> {14}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.257575, "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[7 9] {[7 8 1] {[1 4 7]} {[5 8 0 5 5]}} {[7]}}) -> {16 {16 {12} {23}} {7}}", "(sumnodes {[0 5 2 7 4]}) -> {18}", "(sumnodes {[4 9 9]}) -> {22}", "(sumnodes {[2 3] {[9 9]} {[8 0 1]}}) -> {5 {18} {9}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.297724, "name": "sumnodes", "examples": ["(sumnodes {[2 4 7 7]}) -> {20}", "(sumnodes {[0 4 1 3 6] {[0 1]} {[7 0]}}) -> {14 {1} {7}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[7 5 8 0]}) -> {20}", "(sumnodes {[]}) -> {0}", "(sumnodes {[6 5] {[9 2]} {[0 2 6 3] {[]} {[9 3 3]}}}) -> {11 {11} {11 {0} {15}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.251965, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[8 9 7 4 3] {[9 4] {[9 1 8] {[6 6 3]}} {[7 6 5] {[7 9 3]}}} {[7 1 0 5]}}) -> {31 {13 {18 {15}} {18 {19}}} {13}}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.198553, "name": "sumnodes", "examples": ["(sumnodes {[] {[9]}}) -> {0 {9}}", "(sumnodes {[] {[6 8 1]} {[7 0 0 3] {[9 1 5]}}}) -> {0 {15} {10 {15}}}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}", "(sumnodes {[3 3 4 5 5] {[2 3] {[8 6 3 3]}} {[5 4 8 9] {[2 6]}}}) -> {20 {5 {20}} {26 {8}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.453385, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8] {[6 2 2 2]}}) -> {8 {12}}", "(sumnodes {[7]}) -> {7}", "(sumnodes {}) -> {}", "(sumnodes {[1 9 4 5 1] {[3 3]} {[2 3 6 7] {[4 4 3]}}}) -> {20 {6} {18 {11}}}", "(sumnodes {[5 6 5] {[9] {[7 7 7 1 5]}}}) -> {16 {9 {27}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.484809, "name": "sumnodes", "examples": ["(sumnodes {[5 2 9 6 6] {[9 6 0 5]} {[6 2 9 9]}}) -> {28 {20} {26}}", "(sumnodes {}) -> {}", "(sumnodes {[4]}) -> {4}", "(sumnodes {[3] {[9 5]} {[6 1 4 6] {[4 5 3 4]} {[3] {[9 2 9]}}}}) -> {3 {14} {17 {16} {3 {20}}}}", "(sumnodes {[0 3 6] {[0 5 7]} {[7 9] {[0]}}}) -> {9 {12} {16 {0}}}", "(sumnodes {[4 5 7 3] {[6] {[6] {[3 1 2 6]}} {[9] {[5 5 5]}}}}) -> {19 {6 {6 {12}} {9 {15}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.224589, "name": "sumnodes", "examples": ["(sumnodes {[5] {[]} {[]}}) -> {5 {0} {0}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[2 1] {[3 7]}}) -> {3 {10}}", "(sumnodes {[6 9 7 8 7]}) -> {37}", "(sumnodes {[] {[] {[9 6 6 7 0]}}}) -> {0 {0 {28}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.197651, "name": "sumnodes", "examples": ["(sumnodes {[] {[6]} {[3 4 4 0 1]}}) -> {0 {6} {12}}", "(sumnodes {[4] {[6 4 1 7 3]} {[9 6 0 6]}}) -> {4 {21} {21}}", "(sumnodes {[3 9 0] {[] {[5 3 0 9]}}}) -> {12 {0 {17}}}", "(sumnodes {[7 4 2 5] {[] {[6 9 9 2]} {[3 3 6]}} {[4 3 3] {[]} {[4 5 3]}}}) -> {18 {0 {26} {12}} {10 {0} {12}}}", "(sumnodes {[0 2 3 2] {[] {[8 1 0] {[9 7 3 5]} {[7 9 1 0]}} {[0 1] {[2 8 9 8]}}} {[1 0 0 0 0]}}) -> {7 {0 {9 {24} {17}} {1 {27}}} {1}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.306096, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[8 1 7 1 0] {[1 2]} {[3 4 8]}}) -> {17 {3} {15}}", "(sumnodes {}) -> {}", "(sumnodes {[8 3 8]}) -> {19}", "(sumnodes {[] {[7 6 5 0]} {[8 2] {[] {[1 3 7]} {[]}}}}) -> {0 {18} {10 {0 {11} {0}}}}", "(sumnodes {[2 2 6 3 0]}) -> {13}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.26082, "name": "sumnodes", "examples": ["(sumnodes {[1 7 4 9]}) -> {21}", "(sumnodes {[0 6 7 5]}) -> {18}", "(sumnodes {}) -> {}", "(sumnodes {[] {[8 0 2 9 9]}}) -> {0 {28}}", "(sumnodes {[9 4 8 3 9]}) -> {33}", "(sumnodes {[1 0 8 0 3] {[3 5 3] {[2 0 8]}}}) -> {12 {11 {10}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.228999, "name": "sumnodes", "examples": ["(sumnodes {[7 1 8 4 5] {[8 0 5 9]} {[8]}}) -> {25 {22} {8}}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[6] {[] {[6]} {[1 5 8] {[8 2 8 3]}}} {[] {[6] {[6 7 2]} {[8 8]}} {[] {[]}}}}) -> {6 {0 {6} {14 {21}}} {0 {6 {15} {16}} {0 {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.268162, "name": "sumnodes", "examples": ["(sumnodes {[6 2 6] {[6 2 4 3] {[7 2 3]}}}) -> {14 {15 {12}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[9 5] {[8 3 6 9 6] {[2 0 7 4 0]} {[]}}}) -> {14 {32 {13} {0}}}", "(sumnodes {[] {[3] {[4 4 9 5 9] {[0]}}}}) -> {0 {3 {31 {0}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.351236, "name": "sumnodes", "examples": ["(sumnodes {[7 3 2] {[0]}}) -> {12 {0}}", "(sumnodes {[3 3 6 4] {[6 4]} {[3 0 5] {[9 9 6 8]}}}) -> {16 {10} {8 {32}}}", "(sumnodes {[0 3 4 4 8] {[9 8 7 8]}}) -> {19 {32}}", "(sumnodes {[1 3 7 9 5] {[8 2 2 4 4] {[4 2 8 6 2]}} {[1 3 3 6]}}) -> {25 {20 {22}} {13}}", "(sumnodes {[] {[2 0 7]}}) -> {0 {9}}", "(sumnodes {[6] {[6 8 3 2]} {[8 1]}}) -> {6 {19} {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.372619, "name": "sumnodes", "examples": ["(sumnodes {[9 9 8 7 8]}) -> {41}", "(sumnodes {}) -> {}", "(sumnodes {[7 6 8] {[7 3 7 4 7]} {[0 8]}}) -> {21 {28} {8}}", "(sumnodes {}) -> {}", "(sumnodes {[6 9 5 6 6]}) -> {32}", "(sumnodes {[7 3 4 4 4] {[9]} {[7 2]}}) -> {22 {9} {9}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.380328, "name": "sumnodes", "examples": ["(sumnodes {[1 5]}) -> {6}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0 4]}) -> {4}", "(sumnodes {[9 4]}) -> {13}", "(sumnodes {[8] {[1]}}) -> {8 {1}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.478607, "name": "sumnodes", "examples": ["(sumnodes {[8 3 1 6] {[9 2 4]} {[1 5]}}) -> {18 {15} {6}}", "(sumnodes {[7]}) -> {7}", "(sumnodes {[9]}) -> {9}", "(sumnodes {[0 9 2 9 2]}) -> {22}", "(sumnodes {[1 1 5] {[1] {[5] {[0 9 0 2 5]}}}}) -> {7 {1 {5 {16}}}}", "(sumnodes {[9 6 9] {[8] {[6 8 1] {[6 0 5 6]}} {[0 7 1 5 8] {[2 9 6]} {[0 8 0 3]}}}}) -> {24 {8 {15 {17}} {21 {17} {11}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.210249, "name": "sumnodes", "examples": ["(sumnodes {[] {[3 5] {[7 2 4]} {[4 6 6 6]}}}) -> {0 {8 {13} {22}}}", "(sumnodes {}) -> {}", "(sumnodes {[] {[4 1] {[6] {[0 3]} {[7 5]}}}}) -> {0 {5 {6 {3} {12}}}}", "(sumnodes {[1 0 8 3] {[5 9 8]}}) -> {12 {22}}", "(sumnodes {[5 8 4 4]}) -> {21}", "(sumnodes {[4 2] {[] {[0 8 4 5 0]} {[6 8 6 4 6]}}}) -> {6 {0 {17} {30}}}"]}
{"time": "timeout", "name": "sumnodes", "examples": ["(sumnodes {[]}) -> {0}", "(sumnodes {[4 6] {[4]} {[] {[4 2 7 2 6] {[6 6]}} {[6 3 6] {[8 1]}}}}) -> {10 {4} {0 {21 {12}} {15 {9}}}}", "(sumnodes {[1 8 2 1 0] {[1]}}) -> {12 {1}}", "(sumnodes {[9 5 1]}) -> {15}", "(sumnodes {[0 8 4 6]}) -> {18}", "(sumnodes {[6 8 9] {[8 5 6 7 9]} {[]}}) -> {23 {35} {0}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.207079, "name": "sumnodes", "examples": ["(sumnodes {[2 1 1 8 1] {[0 0 0]} {[4 2]}}) -> {13 {0} {6}}", "(sumnodes {}) -> {}", "(sumnodes {[4 4 1]}) -> {9}", "(sumnodes {[7 4 7 8 2] {[0 3 7]} {[5 7 8 3 8]}}) -> {28 {10} {31}}", "(sumnodes {[8] {[1 7] {[]} {[2 7 8 8 5]}} {[] {[3 7 4] {[]}} {[2]}}}) -> {8 {8 {0} {30}} {0 {14 {0}} {2}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.243447, "name": "sumnodes", "examples": ["(sumnodes {[8 8 0 3] {[1 8]} {[3 6 2 6] {[5 0]}}}) -> {19 {9} {17 {5}}}", "(sumnodes {[] {[7 5 7] {[3 2 0]}} {[7 9 5 8 3]}}) -> {0 {19 {5}} {32}}", "(sumnodes {}) -> {}", "(sumnodes {[9 2 8 5 0] {[1 1 6 9 1]} {[1 6 9 3]}}) -> {24 {18} {19}}", "(sumnodes {[4 0 1 6 9] {[7 9 0 0 1]}}) -> {20 {17}}", "(sumnodes {[9 6 9] {[0 7] {[7 7 6 8]}}}) -> {24 {7 {28}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.281946, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[] {[4 8 6 4 9] {[3 4 2] {[6]} {[]}} {[3 2] {[4 9 8 3]}}}}) -> {0 {31 {9 {6} {0}} {5 {24}}}}", "(sumnodes {[] {[7 7 0]}}) -> {0 {14}}", "(sumnodes {[8 3 4] {[] {[0 1 7]}} {[1 9 1]}}) -> {15 {0 {8}} {11}}", "(sumnodes {[2 6 9 6 8] {[5 2 9] {[6 2 7 2 6]} {[9 6 1 7]}}}) -> {31 {16 {23} {23}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.182934, "name": "sumnodes", "examples": ["(sumnodes {[6 8 0 6 1]}) -> {21}", "(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[5 5 8 6 7]}) -> {31}", "(sumnodes {[]}) -> {0}", "(sumnodes {[1 2 0 8 3] {[4 4]} {[1 9]}}) -> {14 {8} {10}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.297088, "name": "sumnodes", "examples": ["(sumnodes {[5 1 0] {[3] {[] {[9 8 6 7 8]}} {[5 6 5]}}}) -> {6 {3 {0 {38}} {16}}}", "(sumnodes {[4 0 4]}) -> {8}", "(sumnodes {[7]}) -> {7}", "(sumnodes {[2 0 4 8 4]}) -> {18}", "(sumnodes {[3]}) -> {3}", "(sumnodes {[0 6 2] {[9 0 5 8]} {[6 2 1] {[2 8 0]}}}) -> {8 {22} {9 {10}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.214081, "name": "sumnodes", "examples": ["(sumnodes {[1 1 4 6 0] {[2 2]}}) -> {12 {4}}", "(sumnodes {}) -> {}", "(sumnodes {[7 2 7 1] {[]} {[9] {[0 9 9 0 4]} {[2 1 8 0 9]}}}) -> {17 {0} {9 {22} {20}}}", "(sumnodes {[] {[2 0 9 5]}}) -> {0 {16}}", "(sumnodes {}) -> {}", "(sumnodes {[4 1 8] {[] {[8 4 7 0]} {[3]}} {[0 4 0]}}) -> {13 {0 {19} {3}} {4}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.312698, "name": "sumnodes", "examples": ["(sumnodes {[9 1 2 4 4] {[9 0 5 1 5] {[1 5 6]}} {[] {[7 4 9 6 8]}}}) -> {20 {20 {12}} {0 {34}}}", "(sumnodes {[] {[0 5] {[6 1 6 4] {[4 9]}}} {[5 1 9 3 5] {[6 8 6] {[4 0 2 6 4]} {[]}} {[3] {[5 7]} {[0 6 1 7]}}}}) -> {0 {5 {17 {13}}} {23 {20 {16} {0}} {3 {12} {14}}}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[7 8 6 7] {[] {[6 3 6]}}}) -> {28 {0 {15}}}", "(sumnodes {[0 2] {[4 5] {[0 5 6 2 9] {[2 8 9 1 3]} {[4 8 4 7]}}}}) -> {2 {9 {22 {23} {23}}}}", "(sumnodes {[0 1] {[3 4 9 1] {[9] {[7 3 8]} {[]}}}}) -> {1 {17 {9 {18} {0}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.272426, "name": "sumnodes", "examples": ["(sumnodes {[1 2 5 8] {[6]} {[0 6 5]}}) -> {16 {6} {11}}", "(sumnodes {[1 2] {[]} {[]}}) -> {3 {0} {0}}", "(sumnodes {[] {[]}}) -> {0 {0}}", "(sumnodes {[0 2 5] {[4 9 0 9 4] {[2 4 0 2 6] {[0 2 7 9]} {[3 7 3]}} {[4 1 0 5 1] {[5 0]}}}}) -> {7 {26 {14 {18} {13}} {11 {5}}}}", "(sumnodes {[8 1 3 4 4] {[] {[0]}}}) -> {20 {0 {0}}}", "(sumnodes {[0]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.211019, "name": "sumnodes", "examples": ["(sumnodes {[5 2 9 8] {[4 6 0 3 7] {[1 7 9]}}}) -> {24 {20 {17}}}", "(sumnodes {}) -> {}", "(sumnodes {[2 3]}) -> {5}", "(sumnodes {[] {[2 4 9 1 2] {[5] {[3 9 7]} {[1 7 3 5 4]}} {[2 2 7 1 1] {[2 3 1 5 9]}}} {[2]}}) -> {0 {18 {5 {19} {20}} {13 {20}}} {2}}", "(sumnodes {[0 5 0] {[6 8]} {[1 9]}}) -> {5 {14} {10}}", "(sumnodes {[6 0 0 2 2]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.238115, "name": "sumnodes", "examples": ["(sumnodes {[3 4 8 2] {[5]} {[0 2 7 3]}}) -> {17 {5} {12}}", "(sumnodes {[5] {[]}}) -> {5 {0}}", "(sumnodes {[] {[8 2 6 7]}}) -> {0 {23}}", "(sumnodes {[9 6] {[1 6 5 7]} {[2] {[9 2 5]} {[3 1]}}}) -> {15 {19} {2 {16} {4}}}", "(sumnodes {[4]}) -> {4}", "(sumnodes {[1 9 0 0] {[2 3 4] {[2 8 1] {[1 7 5]} {[7]}}}}) -> {10 {9 {11 {13} {7}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.209073, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0]}) -> {0}", "(sumnodes {}) -> {}", "(sumnodes {[5 8]}) -> {13}", "(sumnodes {[2] {[]} {[7 3 6] {[8]}}}) -> {2 {0} {16 {8}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.267416, "name": "sumnodes", "examples": ["(sumnodes {[2 1] {[3 1] {[3 5]}} {[] {[6 4 8 5 6]} {[5] {[0]}}}}) -> {3 {4 {8}} {0 {29} {5 {0}}}}", "(sumnodes {[3] {[6 3 1 7 3] {[8 4 1 3 9] {[7 0 2 4 2]} {[7 0 3]}}}}) -> {3 {20 {25 {15} {10}}}}", "(sumnodes {[6 5 1] {[8]} {[0 2 4 9] {[7]}}}) -> {12 {8} {15 {7}}}", "(sumnodes {[3 3 8] {[4 4 8 9] {[6]}}}) -> {14 {25 {6}}}", "(sumnodes {[] {[8 5 9 7] {[6 9 3 5]}} {[] {[8 0 7 3]} {[9 0 3 7]}}}) -> {0 {29 {23}} {0 {18} {19}}}", "(sumnodes {[0 0 4 0 2]}) -> {6}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.265646, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[]}) -> {0}", "(sumnodes {[1 2 4 4]}) -> {11}", "(sumnodes {[5 0 2 2] {[0 4] {[8]} {[1 6 3 9]}} {[8 2 9] {[]}}}) -> {9 {4 {8} {19}} {19 {0}}}", "(sumnodes {[3 4 1]}) -> {8}", "(sumnodes {[9 5]}) -> {14}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.239235, "name": "sumnodes", "examples": ["(sumnodes {[2 5] {[] {[9 0 2]} {[0 9 5 1 4] {[5]}}} {[9]}}) -> {7 {0 {11} {19 {5}}} {9}}", "(sumnodes {}) -> {}", "(sumnodes {[2 5 2 1] {[2 7 9 7]}}) -> {10 {25}}", "(sumnodes {[9]}) -> {9}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.337765, "name": "sumnodes", "examples": ["(sumnodes {[8 0 2] {[0] {[5 2] {[5 4 8 1]} {[7 5 3 7 6]}}} {[4 4]}}) -> {10 {0 {7 {18} {28}}} {8}}", "(sumnodes {[6 5]}) -> {11}", "(sumnodes {[8 3 1 6]}) -> {18}", "(sumnodes {[7 5 7 7 6] {[] {[5 0 5 4] {[6]} {[1 5]}} {[1 1 1]}}}) -> {32 {0 {14 {6} {6}} {3}}}", "(sumnodes {[2 1] {[] {[]}}}) -> {3 {0 {0}}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.299905, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[6 1 7]}) -> {14}", "(sumnodes {[4 5 2 6 9]}) -> {26}", "(sumnodes {[2]}) -> {2}", "(sumnodes {[5 0 0 0] {[8 3 8 6 5] {[0 4 8 0] {[7 8 2 8 3]} {[]}} {[3 1 9]}} {[4 4 4]}}) -> {5 {30 {12 {28} {0}} {13}} {12}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.285201, "name": "sumnodes", "examples": ["(sumnodes {[6 2 6] {[0] {[0]}}}) -> {14 {0 {0}}}", "(sumnodes {[0 5 9 3]}) -> {17}", "(sumnodes {[6 6 8 4] {[4 7 5 3 0] {[6 4 1 1] {[6]} {[0 4 9]}}} {[3]}}) -> {24 {19 {12 {6} {13}}} {3}}", "(sumnodes {[0 5 4] {[] {[6 7 6 9 9] {[7]} {[1 7]}} {[] {[2 4 5 3]} {[2 9]}}} {[]}}) -> {9 {0 {37 {7} {8}} {0 {14} {11}}} {0}}", "(sumnodes {[9 0 8 0] {[3 4] {[1 1 5]}}}) -> {17 {7 {7}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.315216, "name": "sumnodes", "examples": ["(sumnodes {[9 6] {[5 3 0 3 4]} {[]}}) -> {15 {15} {0}}", "(sumnodes {[4 8 5 8]}) -> {25}", "(sumnodes {[9 3] {[]} {[]}}) -> {12 {0} {0}}", "(sumnodes {[4] {[2 9 1 0 1] {[]}} {[7]}}) -> {4 {13 {0}} {7}}", "(sumnodes {[3 4 9 3 7] {[8 9 6]} {[2]}}) -> {26 {23} {2}}", "(sumnodes {[9 8] {[9 7 0 2]}}) -> {17 {18}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.207606, "name": "sumnodes", "examples": ["(sumnodes {[8 4 5]}) -> {17}", "(sumnodes {[9 0 9 7 1] {[9 5 8 0 3]}}) -> {26 {25}}", "(sumnodes {[7 2 5 1] {[0]}}) -> {15 {0}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[] {[7 4]}}) -> {0 {11}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.24501, "name": "sumnodes", "examples": ["(sumnodes {[1 1] {[9 2 3] {[3 0]}} {[] {[5 9]}}}) -> {2 {14 {3}} {0 {14}}}", "(sumnodes {}) -> {}", "(sumnodes {[8 1 5 4 4] {[8] {[3 1 6] {[]}}} {[2] {[7]} {[0 2 5 5] {[]} {[1 2 3]}}}}) -> {22 {8 {10 {0}}} {2 {7} {12 {0} {6}}}}", "(sumnodes {[0 8 9 9] {[9] {[2 1 4]}} {[] {[0 9 6 9 4]} {[5 6 3 9] {[]}}}}) -> {26 {9 {7}} {0 {28} {23 {0}}}}", "(sumnodes {[] {[8 2 6 1 3]} {[8 4]}}) -> {0 {20} {12}}", "(sumnodes {[] {[6 6 0 6 3]}}) -> {0 {21}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.229605, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[0] {[] {[4 3 6 9 4]} {[3 4 8] {[1 3 7 9 2]}}}}) -> {0 {0 {26} {15 {22}}}}", "(sumnodes {}) -> {}", "(sumnodes {[0 4 1 4] {[7] {[1] {[5 7 4 7 5]}} {[1 9 7 5 0] {[0 3 6 8]}}}}) -> {9 {7 {1 {28}} {22 {17}}}}", "(sumnodes {[3 1 5 2 8] {[3 0 8 0]}}) -> {19 {11}}", "(sumnodes {[5 7] {[8 6 0 7]}}) -> {12 {21}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.341846, "name": "sumnodes", "examples": ["(sumnodes {[2 5 1] {[6 3 0 0 5]} {[1 5 9 8 2]}}) -> {8 {14} {25}}", "(sumnodes {[2 7]}) -> {9}", "(sumnodes {[] {[3 2] {[1 8 8 6 1]}}}) -> {0 {5 {24}}}", "(sumnodes {[5]}) -> {5}", "(sumnodes {[0 4 0]}) -> {4}", "(sumnodes {[1 4] {[6 3 5 1 1] {[5]} {[4 2 9 2]}} {[6 9 3 5 1]}}) -> {5 {16 {5} {17}} {24}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.37438, "name": "sumnodes", "examples": ["(sumnodes {[3 4 3 4] {[2 5] {[2 7 2 1 2]}}}) -> {14 {7 {14}}}", "(sumnodes {[1 9 9] {[6 4 6 2 8] {[7 9 2 8 4]} {[7 8 4]}} {[9 9 7 2]}}) -> {19 {26 {30} {19}} {27}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[2] {[0 3 1] {[8]} {[6 0 3 3] {[6 0 2 9 8]} {[8 0]}}}}) -> {2 {4 {8} {12 {25} {8}}}}", "(sumnodes {[2 7] {[0 6 7]} {[4 6 1 6] {[7 2 2]}}}) -> {9 {13} {17 {11}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.229847, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 8]}) -> {14}", "(sumnodes {[9] {[]} {[0 2 6]}}) -> {9 {0} {8}}", "(sumnodes {[8 3 6] {[]}}) -> {17 {0}}", "(sumnodes {[] {[4 4 8 6]} {[0 9 6 2 9]}}) -> {0 {22} {26}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.458006, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[7 2 8 7] {[7 7 7 5]}}) -> {24 {26}}", "(sumnodes {}) -> {}", "(sumnodes {[4 0 0 0 5]}) -> {9}", "(sumnodes {[8 5 8 3 8]}) -> {32}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.19257, "name": "sumnodes", "examples": ["(sumnodes {[9 7 3 6] {[] {[0]}}}) -> {25 {0 {0}}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[]}) -> {0}", "(sumnodes {}) -> {}", "(sumnodes {[8 1 3 3]}) -> {15}", "(sumnodes {[7 3]}) -> {10}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.462476, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[4 0 3 5] {[3 3] {[2 7 3 2 0]}}}) -> {12 {6 {14}}}", "(sumnodes {[2 0 3 1 7] {[4 7]} {[1 7 6 7]}}) -> {13 {11} {21}}", "(sumnodes {[4 1 7 6 2] {[1 8 0 9 9] {[9 7 5] {[9 4]}}} {[9 6 1 9] {[9] {[2 1 9 1]} {[3 7 4]}}}}) -> {20 {27 {21 {13}}} {25 {9 {13} {14}}}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.236557, "name": "sumnodes", "examples": ["(sumnodes {[0 6] {[1 2 8 4 5]} {[4 4 8 0 0] {[4 8] {[1 0 0 2 9]} {[8 6 6 8]}} {[6 3 1 2 3] {[]}}}}) -> {6 {20} {16 {12 {12} {28}} {15 {0}}}}", "(sumnodes {[4 5] {[0]} {[2 6 1]}}) -> {9 {0} {9}}", "(sumnodes {[8 5] {[4 6 3 9]}}) -> {13 {22}}", "(sumnodes {[0 7]}) -> {7}", "(sumnodes {}) -> {}", "(sumnodes {[9 6 6 3] {[1] {[]}}}) -> {24 {1 {0}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.197403, "name": "sumnodes", "examples": ["(sumnodes {[] {[5 0 5 7 2]}}) -> {0 {19}}", "(sumnodes {[3 8 7]}) -> {18}", "(sumnodes {[1 8 6] {[6 0 2 2 6]} {[8 3]}}) -> {15 {16} {11}}", "(sumnodes {[7 4 3] {[8 4 8]} {[1 9 1 0] {[2 3 7 7] {[2 1 1 7]}} {[8 9 1] {[]}}}}) -> {14 {20} {11 {19 {11}} {18 {0}}}}", "(sumnodes {}) -> {}", "(sumnodes {[3]}) -> {3}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.2119, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[6 1 8 4 3] {[9 1]} {[0]}}) -> {22 {10} {0}}", "(sumnodes {}) -> {}", "(sumnodes {[6 3] {[1 3]} {[1 5 0 7]}}) -> {9 {4} {13}}", "(sumnodes {[5 1] {[3 9 4 0 6]} {[]}}) -> {6 {22} {0}}", "(sumnodes {[4 9] {[] {[8 7 2 1 5] {[2 4]}}}}) -> {13 {0 {23 {6}}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.246932, "name": "sumnodes", "examples": ["(sumnodes {[7 5 2 1] {[] {[2 1 7 4 1] {[0 1]} {[7 8 8 9]}} {[] {[8 7 3 1 5]} {[7 2]}}} {[] {[1 1 6 0] {[9 4 1 0]}}}}) -> {15 {0 {15 {1} {32}} {0 {24} {9}}} {0 {8 {14}}}}", "(sumnodes {[5 3 4 6] {[6 6 3 4 9]} {[0 6 0 2 2]}}) -> {18 {28} {10}}", "(sumnodes {[9 4] {[6 7] {[6 9]} {[]}}}) -> {13 {13 {15} {0}}}", "(sumnodes {[0 1]}) -> {1}", "(sumnodes {[] {[5 5 0] {[8 6 5] {[1 4]} {[6 4 8]}} {[5 7 2 6 4] {[8 6 1 0]}}}}) -> {0 {10 {19 {5} {18}} {24 {15}}}}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.227239, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[0 8 5 2]}) -> {15}", "(sumnodes {[2 8 2] {[6 2 9 2] {[8 4] {[3 4 7 0]} {[]}}} {[3 0 7 5] {[7 0 4 7 6] {[7 9]}} {[3] {[3 3 4 7]}}}}) -> {12 {19 {12 {14} {0}}} {15 {24 {16}} {3 {17}}}}", "(sumnodes {[] {[1 8 0 8] {[4]} {[4 3]}} {[7 9 3] {[1 8 8 1]} {[4 3]}}}) -> {0 {17 {4} {7}} {19 {18} {7}}}", "(sumnodes {[4 7 8 1 4] {[7 3 1 3 7]} {[7 6 1]}}) -> {24 {21} {14}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.228163, "name": "sumnodes", "examples": ["(sumnodes {[5 5 8 4 7] {[8 6 4 0] {[2 9 0]}} {[0 7 3] {[3 5]}}}) -> {29 {18 {11}} {10 {8}}}", "(sumnodes {[4 9] {[] {[]}} {[5 0 6] {[8 5]} {[]}}}) -> {13 {0 {0}} {11 {13} {0}}}", "(sumnodes {}) -> {}", "(sumnodes {[0 2 8] {[5 0 2 6 5]} {[8]}}) -> {10 {18} {8}}", "(sumnodes {[9 7 1]}) -> {17}", "(sumnodes {}) -> {}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.213928, "name": "sumnodes", "examples": ["(sumnodes {[3 0 9 7] {[8 5 9]} {[1 4 5 6]}}) -> {19 {22} {16}}", "(sumnodes {[8 7 9]}) -> {24}", "(sumnodes {[3 9 9] {[7] {[7 5 7 8] {[0]}}} {[9 7] {[1 0 8 7 7]}}}) -> {21 {7 {27 {0}}} {16 {23}}}", "(sumnodes {[4 6 0 8] {[6 7 9]} {[1] {[2 4 2] {[]} {[8 5 5 8]}} {[4 2 8 6]}}}) -> {18 {22} {1 {8 {0} {26}} {20}}}", "(sumnodes {[1] {[2]}}) -> {1 {2}}", "(sumnodes {[9 1 4 8 2]}) -> {24}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.224502, "name": "sumnodes", "examples": ["(sumnodes {[4 6 2 2] {[9 3 3 2 0]} {[5 3 0 9]}}) -> {14 {17} {17}}", "(sumnodes {[3 5 9 2] {[] {[] {[3 1 7 2]}}} {[2 8 7] {[6] {[9 6 2]} {[]}}}}) -> {19 {0 {0 {13}}} {17 {6 {17} {0}}}}", "(sumnodes {[7 4 6 4 1] {[6 9] {[4] {[3 5 7 3]}}}}) -> {22 {15 {4 {18}}}}", "(sumnodes {}) -> {}", "(sumnodes {[0 8 8 0 3] {[]} {[8] {[4 4] {[8 3 1 1 9]} {[]}}}}) -> {19 {0} {8 {8 {22} {0}}}}", "(sumnodes {[8 9 4] {[0 2 9 7 2]} {[3 3 7]}}) -> {21 {20} {13}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.348531, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[5 8 0 0 6]}) -> {19}", "(sumnodes {}) -> {}", "(sumnodes {[0 5 2 4 2]}) -> {13}", "(sumnodes {[7 8 7 5] {[6 6 0]} {[7 2 8] {[5 6 3 6]} {[4 2 1]}}}) -> {27 {12} {17 {20} {7}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.199344, "name": "sumnodes", "examples": ["(sumnodes {}) -> {}", "(sumnodes {[] {[1 7 5 7] {[0 4]}}}) -> {0 {20 {4}}}", "(sumnodes {[9 6 9 3] {[4] {[3 3 0]}} {[8] {[0 8 9]}}}) -> {27 {4 {6}} {8 {17}}}", "(sumnodes {[3 8 6] {[] {[7 3 7 1]} {[1 8 2 3]}}}) -> {17 {0 {18} {14}}}", "(sumnodes {[8]}) -> {8}", "(sumnodes {[4 5 7 6 5] {[5] {[3 9 6]} {[6 9]}}}) -> {27 {5 {18} {15}}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.152083, "name": "sumnodes", "examples": ["(sumnodes {[] {[8 6]}}) -> {0 {14}}", "(sumnodes {[1 5 0 7 4]}) -> {17}", "(sumnodes {[6 2 2 5] {[0]} {[4 3 3]}}) -> {15 {0} {10}}", "(sumnodes {[1 3 6]}) -> {10}", "(sumnodes {[4 8 8 9] {[0 7 9 4 2]}}) -> {29 {22}}", "(sumnodes {[]}) -> {0}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.253889, "name": "sumnodes", "examples": ["(sumnodes {[8] {[8 0 2 8 6]}}) -> {8 {24}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[4 0 9 3]}) -> {16}", "(sumnodes {[] {[8 4 2 0 6] {[9 5 2 9 7]}}}) -> {0 {20 {32}}}", "(sumnodes {[]}) -> {0}", "(sumnodes {[7 6] {[1 5 8 4 2]}}) -> {13 {20}}"]}
{"solution": "(let sumnodes (let a (lambda (b) (mapt b (lambda (c) (foldl c (lambda (e d) (+ e d)) 0)))) _) _)", "time": 0.19923, "name": "sumnodes", "examples": ["(sumnodes {[5 2] {[2 3]}}) -> {7 {5}}", "(sumnodes {}) -> {}", "(sumnodes {}) -> {}", "(sumnodes {[7 7 6 2] {[4 6 1 6]} {[1]}}) -> {22 {17} {1}}", "(sumnodes {[6 9 5 1] {[4 6 3]} {[0 5 1 1 9]}}) -> {21 {13} {16}}", "(sumnodes {}) -> {}"]}
