{"time": 6.859958, "examples": ["(replacet {} 6 1) -> {}", "(replacet {[8 1 0]} 3 2) -> {[8 1 0]}", "(replacet {[1 0 6 4]} 4 7) -> {[1 0 6 7]}", "(replacet {[0 3 7] {[5]}} 4 0) -> {[0 3 7] {[5]}}", "(replacet {[8 1] {[7 1 8 5]} {[]}} 5 0) -> {[8 1] {[7 1 8 0]} {[]}}", "(replacet {[0 2 7 4]} 0 9) -> {[9 2 7 4]}", "(replacet {} 0 9) -> {}", "(replacet {[3 3 2 5] {[2 9 4 9 6] {[9 1 5 5]}}} 5 6) -> {[3 3 2 6] {[2 9 4 9 6] {[9 1 6 6]}}}", "(replacet {[3 2]} 6 9) -> {[3 2]}", "(replacet {[3 8 8 8 1] {[]} {[9 0]}} 1 9) -> {[3 8 8 8 9] {[]} {[9 0]}}", "(replacet {} 1 2) -> {}", "(replacet {} 3 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.775522, "examples": ["(replacet {} 3 2) -> {}", "(replacet {[8]} 7 3) -> {[8]}", "(replacet {[7 7 0] {[5 7] {[] {[1 2 1 1 7]} {[5 5 7 0]}}} {[]}} 1 6) -> {[7 7 0] {[5 7] {[] {[6 2 6 6 7]} {[5 5 7 0]}}} {[]}}", "(replacet {[1]} 5 0) -> {[1]}", "(replacet {[7] {[6 5 1 6] {[8 1]}}} 1 9) -> {[7] {[6 5 9 6] {[8 9]}}}", "(replacet {[4 5] {[3 5 5]}} 9 0) -> {[4 5] {[3 5 5]}}", "(replacet {[] {[6 8 6 6] {[4 1 6 3 4] {[4 7 2]} {[8 8 5]}} {[8 4]}} {[6] {[] {[2 8]} {[]}} {[5 1 5 2] {[8 4 7 8 9]}}}} 4 3) -> {[] {[6 8 6 6] {[3 1 6 3 3] {[3 7 2]} {[8 8 5]}} {[8 3]}} {[6] {[] {[2 8]} {[]}} {[5 1 5 2] {[8 3 7 8 9]}}}}", "(replacet {} 3 2) -> {}", "(replacet {[1 3 5] {[9 7 1]} {[8 3 0 9 5] {[] {[3 7 4 0 4]}} {[5 9 3 2 3]}}} 6 5) -> {[1 3 5] {[9 7 1]} {[8 3 0 9 5] {[] {[3 7 4 0 4]}} {[5 9 3 2 3]}}}", "(replacet {[5 7 5] {[6 5]}} 0 2) -> {[5 7 5] {[6 5]}}", "(replacet {} 8 9) -> {}", "(replacet {[2 5 1]} 6 6) -> {[2 5 1]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.002634, "examples": ["(replacet {} 6 3) -> {}", "(replacet {[9 8 5 6 9] {[5 8 4]}} 0 6) -> {[9 8 5 6 9] {[5 8 4]}}", "(replacet {[7 5 0]} 9 5) -> {[7 5 0]}", "(replacet {} 1 7) -> {}", "(replacet {[3 2 9 3]} 9 6) -> {[3 2 6 3]}", "(replacet {} 8 1) -> {}", "(replacet {[0 1] {[9 0 5]} {[]}} 3 5) -> {[0 1] {[9 0 5]} {[]}}", "(replacet {[1 7 5] {[0 0 7] {[] {[4 0 7]}} {[7 2 1 3] {[2 8 8 9 3]} {[8 6 9 7]}}} {[1 7] {[5] {[6]} {[1 8 6 9 5]}}}} 4 8) -> {[1 7 5] {[0 0 7] {[] {[8 0 7]}} {[7 2 1 3] {[2 8 8 9 3]} {[8 6 9 7]}}} {[1 7] {[5] {[6]} {[1 8 6 9 5]}}}}", "(replacet {[5] {[0 6]} {[1 3] {[8 5 5 5] {[]}} {[6 3 8]}}} 2 5) -> {[5] {[0 6]} {[1 3] {[8 5 5 5] {[]}} {[6 3 8]}}}", "(replacet {[6 5 0 2 0] {[2]} {[0 0 4] {[9 0 2 0 0] {[8 4 8 7]}} {[] {[4 1 3 8 4]} {[8]}}}} 1 7) -> {[6 5 0 2 0] {[2]} {[0 0 4] {[9 0 2 0 0] {[8 4 8 7]}} {[] {[4 7 3 8 4]} {[8]}}}}", "(replacet {[7 8 0 3] {[9 4 7 3] {[]} {[9 4]}}} 7 4) -> {[4 8 0 3] {[9 4 4 3] {[]} {[9 4]}}}", "(replacet {[] {[6 0] {[1 3 4 0]}} {[9 0 9]}} 2 3) -> {[] {[6 0] {[1 3 4 0]}} {[9 0 9]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.191877, "examples": ["(replacet {} 1 2) -> {}", "(replacet {[8] {[9 8 4 5]}} 3 7) -> {[8] {[9 8 4 5]}}", "(replacet {[5]} 6 0) -> {[5]}", "(replacet {[] {[0 0 8 7 6]}} 1 8) -> {[] {[0 0 8 7 6]}}", "(replacet {[8 7 5 9] {[2 5 6 8 5]} {[6] {[5 2]} {[2 6]}}} 3 2) -> {[8 7 5 9] {[2 5 6 8 5]} {[6] {[5 2]} {[2 6]}}}", "(replacet {[2] {[9 8 0 0] {[3 4 4 1] {[0 7]}}} {[2]}} 9 4) -> {[2] {[4 8 0 0] {[3 4 4 1] {[0 7]}}} {[2]}}", "(replacet {[7 0]} 2 2) -> {[7 0]}", "(replacet {} 5 1) -> {}", "(replacet {[4 0 4 9 1] {[]} {[0 3 4 5] {[]} {[7]}}} 6 2) -> {[4 0 4 9 1] {[]} {[0 3 4 5] {[]} {[7]}}}", "(replacet {[4 6] {[] {[7 7] {[2 8 6 9 9]}} {[] {[]}}} {[]}} 5 9) -> {[4 6] {[] {[7 7] {[2 8 6 9 9]}} {[] {[]}}} {[]}}", "(replacet {[9 0 2 7] {[2 2 8 3]} {[2 3 0 5 3]}} 6 8) -> {[9 0 2 7] {[2 2 8 3]} {[2 3 0 5 3]}}", "(replacet {[4 8 5 9 0] {[]}} 6 8) -> {[4 8 5 9 0] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.476293, "examples": ["(replacet {} 1 9) -> {}", "(replacet {} 6 8) -> {}", "(replacet {} 9 4) -> {}", "(replacet {[]} 7 4) -> {[]}", "(replacet {[8 2 0 4]} 7 8) -> {[8 2 0 4]}", "(replacet {[2 3 6 5 9]} 1 7) -> {[2 3 6 5 9]}", "(replacet {[8 8 5 4] {[8 6 2 2 7] {[] {[8 7 6 8 2]}} {[1 1 9 4] {[]} {[9 7]}}}} 4 4) -> {[8 8 5 4] {[8 6 2 2 7] {[] {[8 7 6 8 2]}} {[1 1 9 4] {[]} {[9 7]}}}}", "(replacet {[1 0] {[9 8 7 6]}} 2 2) -> {[1 0] {[9 8 7 6]}}", "(replacet {[4 4] {[0 2 3 4]}} 0 6) -> {[4 4] {[6 2 3 4]}}", "(replacet {[7]} 1 8) -> {[7]}", "(replacet {[6 2 2 0 7] {[4] {[4 9 5 8]}} {[1 7 5 3 8] {[8 1 0] {[8 5 5 4]} {[2 3 5 1 5]}}}} 1 8) -> {[6 2 2 0 7] {[4] {[4 9 5 8]}} {[8 7 5 3 8] {[8 8 0] {[8 5 5 4]} {[2 3 5 8 5]}}}}", "(replacet {[2 2 5 9 9]} 6 2) -> {[2 2 5 9 9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.761716, "examples": ["(replacet {} 0 4) -> {}", "(replacet {} 7 6) -> {}", "(replacet {[0]} 9 5) -> {[0]}", "(replacet {} 2 0) -> {}", "(replacet {[7 6 5 2 7]} 7 4) -> {[4 6 5 2 4]}", "(replacet {[4] {[4 7 7 6 2] {[1 2 2] {[0 5]} {[]}}}} 9 4) -> {[4] {[4 7 7 6 2] {[1 2 2] {[0 5]} {[]}}}}", "(replacet {[6 7 3 6] {[6 8 7] {[] {[6 5 4 9 3]} {[]}} {[8 7 4 7] {[0 0 2 7 4]} {[4 5 7]}}} {[8 7 3 2]}} 4 8) -> {[6 7 3 6] {[6 8 7] {[] {[6 5 8 9 3]} {[]}} {[8 7 8 7] {[0 0 2 7 8]} {[8 5 7]}}} {[8 7 3 2]}}", "(replacet {[8 9 7 5]} 6 8) -> {[8 9 7 5]}", "(replacet {} 4 9) -> {}", "(replacet {[0 6] {[4 5]}} 0 8) -> {[8 6] {[4 5]}}", "(replacet {[6 3 0 9 8] {[] {[] {[3 2 0 7]}}} {[] {[3 9 6]}}} 1 1) -> {[6 3 0 9 8] {[] {[] {[3 2 0 7]}}} {[] {[3 9 6]}}}", "(replacet {} 5 4) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.838202, "examples": ["(replacet {} 7 3) -> {}", "(replacet {[] {[3 0 7] {[8 1]}} {[3 0 2 7] {[2 7]}}} 6 5) -> {[] {[3 0 7] {[8 1]}} {[3 0 2 7] {[2 7]}}}", "(replacet {[0 3 3 9 3]} 2 5) -> {[0 3 3 9 3]}", "(replacet {[7 9 0]} 5 8) -> {[7 9 0]}", "(replacet {[2] {[8]}} 6 6) -> {[2] {[8]}}", "(replacet {[9 2]} 9 5) -> {[5 2]}", "(replacet {[0 2 5 6]} 5 6) -> {[0 2 6 6]}", "(replacet {[1 4 3]} 7 4) -> {[1 4 3]}", "(replacet {[2 0 7 4 8]} 9 4) -> {[2 0 7 4 8]}", "(replacet {[] {[]} {[1 2 7] {[2 1 5] {[]} {[8 0]}} {[2 5 1 7 4]}}} 3 2) -> {[] {[]} {[1 2 7] {[2 1 5] {[]} {[8 0]}} {[2 5 1 7 4]}}}", "(replacet {} 0 2) -> {}", "(replacet {[2 0 1 3 2]} 0 5) -> {[2 5 1 3 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.143339, "examples": ["(replacet {} 8 0) -> {}", "(replacet {[]} 4 4) -> {[]}", "(replacet {[7 5] {[8 0 6 4 8]}} 2 3) -> {[7 5] {[8 0 6 4 8]}}", "(replacet {[2 0] {[]} {[]}} 8 0) -> {[2 0] {[]} {[]}}", "(replacet {[7 7 5 8] {[6] {[2 7 5]} {[]}} {[]}} 6 4) -> {[7 7 5 8] {[4] {[2 7 5]} {[]}} {[]}}", "(replacet {[] {[5]} {[9 1]}} 3 6) -> {[] {[5]} {[9 1]}}", "(replacet {[8 0 8 8]} 7 5) -> {[8 0 8 8]}", "(replacet {} 4 9) -> {}", "(replacet {} 9 9) -> {}", "(replacet {[2 9 6 1] {[3 7 4 7 3] {[2 4 4]}}} 7 1) -> {[2 9 6 1] {[3 1 4 1 3] {[2 4 4]}}}", "(replacet {} 0 1) -> {}", "(replacet {[0 9 5 1 2]} 4 3) -> {[0 9 5 1 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.328363, "examples": ["(replacet {} 1 4) -> {}", "(replacet {} 0 5) -> {}", "(replacet {[]} 1 3) -> {[]}", "(replacet {[0 2 4 0 4] {[5 9 0 2]} {[5]}} 2 7) -> {[0 7 4 0 4] {[5 9 0 7]} {[5]}}", "(replacet {} 9 4) -> {}", "(replacet {[7] {[]}} 1 7) -> {[7] {[]}}", "(replacet {} 8 6) -> {}", "(replacet {[6 1 0] {[2 6 4]}} 3 8) -> {[6 1 0] {[2 6 4]}}", "(replacet {[1 2 7 0 6] {[0 4 7 2 4]} {[8 5 1 6]}} 0 8) -> {[1 2 7 8 6] {[8 4 7 2 4]} {[8 5 1 6]}}", "(replacet {[7 4 4 2 2] {[]}} 4 0) -> {[7 0 0 2 2] {[]}}", "(replacet {[4 6 1 6]} 7 6) -> {[4 6 1 6]}", "(replacet {[9 3 1] {[] {[8 0 2 3 8]}} {[5] {[4 1 4]}}} 1 4) -> {[9 3 4] {[] {[8 0 2 3 8]}} {[5] {[4 4 4]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.553402, "examples": ["(replacet {} 9 7) -> {}", "(replacet {[7 0 1 2]} 4 3) -> {[7 0 1 2]}", "(replacet {[5]} 3 0) -> {[5]}", "(replacet {[] {[2 7 5 8 2] {[3 3]} {[3 4 8 7]}}} 2 4) -> {[] {[4 7 5 8 4] {[3 3]} {[3 4 8 7]}}}", "(replacet {} 2 7) -> {}", "(replacet {[0 9 7 5 5]} 5 2) -> {[0 9 7 2 2]}", "(replacet {[]} 0 6) -> {[]}", "(replacet {[] {[3 3 0]} {[3 2] {[7 0 6 6] {[9]}}}} 1 7) -> {[] {[3 3 0]} {[3 2] {[7 0 6 6] {[9]}}}}", "(replacet {} 7 2) -> {}", "(replacet {} 9 9) -> {}", "(replacet {[7 2 9 7] {[1 6 0]}} 5 0) -> {[7 2 9 7] {[1 6 0]}}", "(replacet {[4 0 2 6 3] {[2]} {[2 3]}} 9 3) -> {[4 0 2 6 3] {[2]} {[2 3]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.61035, "examples": ["(replacet {} 8 6) -> {}", "(replacet {[8 7 9 0 9] {[8 1 0 3 3]}} 3 9) -> {[8 7 9 0 9] {[8 1 0 9 9]}}", "(replacet {[0 6 9] {[0 3 1 0] {[]} {[9 1 1]}} {[6] {[1 6]}}} 6 8) -> {[0 8 9] {[0 3 1 0] {[]} {[9 1 1]}} {[8] {[1 8]}}}", "(replacet {} 2 9) -> {}", "(replacet {[]} 0 3) -> {[]}", "(replacet {} 7 0) -> {}", "(replacet {[6 5 0]} 8 0) -> {[6 5 0]}", "(replacet {[7 1 2]} 8 6) -> {[7 1 2]}", "(replacet {} 9 8) -> {}", "(replacet {[] {[]}} 7 7) -> {[] {[]}}", "(replacet {[1 3 4 3 3] {[] {[]}}} 9 4) -> {[1 3 4 3 3] {[] {[]}}}", "(replacet {} 2 6) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.800213, "examples": ["(replacet {} 7 9) -> {}", "(replacet {[8 7 7 5] {[5 4 9 0]}} 4 9) -> {[8 7 7 5] {[5 9 9 0]}}", "(replacet {[] {[7 9 7 5 2]}} 6 6) -> {[] {[7 9 7 5 2]}}", "(replacet {[2 7 1 7 3] {[1 0 0]}} 9 4) -> {[2 7 1 7 3] {[1 0 0]}}", "(replacet {[3] {[]}} 1 0) -> {[3] {[]}}", "(replacet {[5]} 2 9) -> {[5]}", "(replacet {[] {[0] {[9 8 7 9 2]}} {[2 2] {[6 6]}}} 9 8) -> {[] {[0] {[8 8 7 8 2]}} {[2 2] {[6 6]}}}", "(replacet {[]} 3 5) -> {[]}", "(replacet {[3 3] {[] {[2 0 8 8]}}} 5 4) -> {[3 3] {[] {[2 0 8 8]}}}", "(replacet {} 3 4) -> {}", "(replacet {[7] {[6 7 5]}} 6 4) -> {[7] {[4 7 5]}}", "(replacet {} 0 9) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.114037, "examples": ["(replacet {} 8 2) -> {}", "(replacet {} 0 6) -> {}", "(replacet {[2 0 9 7]} 3 2) -> {[2 0 9 7]}", "(replacet {[] {[9 6 5] {[]} {[3 7]}}} 1 8) -> {[] {[9 6 5] {[]} {[3 7]}}}", "(replacet {[1 0 2 5 4] {[3 5]} {[7 1 0 4 3] {[2 3 2 4]}}} 1 8) -> {[8 0 2 5 4] {[3 5]} {[7 8 0 4 3] {[2 3 2 4]}}}", "(replacet {[3] {[1 2 3 9]}} 5 0) -> {[3] {[1 2 3 9]}}", "(replacet {[1 8 1 0] {[6] {[1] {[2 1]} {[0 1 7 1]}} {[3 2] {[0 4 7]}}}} 7 6) -> {[1 8 1 0] {[6] {[1] {[2 1]} {[0 1 6 1]}} {[3 2] {[0 4 6]}}}}", "(replacet {} 1 3) -> {}", "(replacet {[7 4 3] {[5] {[6 9 3 8 9]}} {[4 6] {[6] {[]} {[4]}} {[8] {[6]}}}} 9 8) -> {[7 4 3] {[5] {[6 8 3 8 8]}} {[4 6] {[6] {[]} {[4]}} {[8] {[6]}}}}", "(replacet {[8 6 7] {[]}} 1 4) -> {[8 6 7] {[]}}", "(replacet {[9 3 6 6]} 5 2) -> {[9 3 6 6]}", "(replacet {[7 6 3 1]} 7 1) -> {[1 6 3 1]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.354843, "examples": ["(replacet {} 5 5) -> {}", "(replacet {[3 1 6 6] {[8 4 8 1]} {[] {[9 5 6 9]}}} 2 3) -> {[3 1 6 6] {[8 4 8 1]} {[] {[9 5 6 9]}}}", "(replacet {[2] {[9 9 7]}} 7 9) -> {[2] {[9 9 9]}}", "(replacet {[2 8 9 3 1] {[5]} {[0]}} 2 5) -> {[5 8 9 3 1] {[5]} {[0]}}", "(replacet {[] {[7]}} 7 2) -> {[] {[2]}}", "(replacet {} 4 4) -> {}", "(replacet {[7 6 6 2] {[4 2]}} 5 3) -> {[7 6 6 2] {[4 2]}}", "(replacet {[3 5 6 0] {[6 2]}} 5 1) -> {[3 1 6 0] {[6 2]}}", "(replacet {[1 7 2 2 4] {[2 6 8 2] {[7 3 7 5 0]} {[8 5 2 2]}} {[1 5]}} 1 1) -> {[1 7 2 2 4] {[2 6 8 2] {[7 3 7 5 0]} {[8 5 2 2]}} {[1 5]}}", "(replacet {[]} 7 2) -> {[]}", "(replacet {[9 0 1 9 1] {[4] {[9 4 3]} {[9 8 1 0 0]}} {[] {[]} {[1 0]}}} 3 8) -> {[9 0 1 9 1] {[4] {[9 4 8]} {[9 8 1 0 0]}} {[] {[]} {[1 0]}}}", "(replacet {} 5 4) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.591103, "examples": ["(replacet {} 4 9) -> {}", "(replacet {} 7 0) -> {}", "(replacet {[] {[8 7 1] {[1 3 4 1] {[1 9 1]} {[9]}}}} 1 0) -> {[] {[8 7 0] {[0 3 4 0] {[0 9 0]} {[9]}}}}", "(replacet {[7 9 5] {[]} {[]}} 1 7) -> {[7 9 5] {[]} {[]}}", "(replacet {[6 7] {[3]} {[1 6]}} 7 7) -> {[6 7] {[3]} {[1 6]}}", "(replacet {[0 6 9 6 1] {[6 2 7]} {[0 4 8 0]}} 5 9) -> {[0 6 9 6 1] {[6 2 7]} {[0 4 8 0]}}", "(replacet {[7 1]} 4 8) -> {[7 1]}", "(replacet {[0 9]} 8 6) -> {[0 9]}", "(replacet {} 1 6) -> {}", "(replacet {[2 0 2 4 7] {[2 9] {[3 6 7 6]}} {[6 4 5]}} 4 8) -> {[2 0 2 8 7] {[2 9] {[3 6 7 6]}} {[6 8 5]}}", "(replacet {[] {[7 6 8 2 3]}} 6 6) -> {[] {[7 6 8 2 3]}}", "(replacet {} 2 5) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.134853, "examples": ["(replacet {} 6 1) -> {}", "(replacet {[9 7 6]} 2 2) -> {[9 7 6]}", "(replacet {[0 3 7 7 3]} 4 7) -> {[0 3 7 7 3]}", "(replacet {[8 0 1 5 8] {[4 5 7] {[]}}} 4 7) -> {[8 0 1 5 8] {[7 5 7] {[]}}}", "(replacet {[2 5 2] {[1 9 3 7] {[7 7 0 3]}}} 0 1) -> {[2 5 2] {[1 9 3 7] {[7 7 1 3]}}}", "(replacet {[5 4 5 3] {[] {[7]}}} 4 8) -> {[5 8 5 3] {[] {[7]}}}", "(replacet {[1 2 4 2] {[]}} 9 6) -> {[1 2 4 2] {[]}}", "(replacet {[2]} 3 4) -> {[2]}", "(replacet {[9 1 1 2] {[2 6 8 1 9] {[6 3]}} {[0 3 8 3 9] {[6 3 5]}}} 4 8) -> {[9 1 1 2] {[2 6 8 1 9] {[6 3]}} {[0 3 8 3 9] {[6 3 5]}}}", "(replacet {[7 0 7 5] {[] {[9]} {[8 6 7]}} {[1 6 8 3]}} 9 9) -> {[7 0 7 5] {[] {[9]} {[8 6 7]}} {[1 6 8 3]}}", "(replacet {} 4 4) -> {}", "(replacet {} 2 3) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 16.349373, "examples": ["(replacet {} 5 6) -> {}", "(replacet {[1 0 4 5] {[3 3 9]} {[9] {[3 2] {[6 0 2]} {[5 5]}} {[3 9 7] {[4]} {[6 6]}}}} 0 5) -> {[1 5 4 5] {[3 3 9]} {[9] {[3 2] {[6 5 2]} {[5 5]}} {[3 9 7] {[4]} {[6 6]}}}}", "(replacet {[2 2 5 4 5] {[2 8 2] {[8 2 4]}}} 0 7) -> {[2 2 5 4 5] {[2 8 2] {[8 2 4]}}}", "(replacet {[2 8 9 8] {[] {[] {[5 2 2 6 1]} {[5 8 4 7 9]}}} {[0 6]}} 6 8) -> {[2 8 9 8] {[] {[] {[5 2 2 8 1]} {[5 8 4 7 9]}}} {[0 8]}}", "(replacet {[]} 6 5) -> {[]}", "(replacet {[7 9 3] {[2 8 0 0 5] {[9 0 3 0 2] {[7 8]}} {[] {[7]}}}} 7 2) -> {[2 9 3] {[2 8 0 0 5] {[9 0 3 0 2] {[2 8]}} {[] {[2]}}}}", "(replacet {[8] {[4 0 1] {[4 0 5]} {[8 9 4 0]}}} 9 2) -> {[8] {[4 0 1] {[4 0 5]} {[8 2 4 0]}}}", "(replacet {[] {[6] {[6 8 1 0]} {[]}} {[3 3] {[5 2 6]} {[4]}}} 3 8) -> {[] {[6] {[6 8 1 0]} {[]}} {[8 8] {[5 2 6]} {[4]}}}", "(replacet {} 1 1) -> {}", "(replacet {[1 8 2 7 5]} 2 7) -> {[1 8 7 7 5]}", "(replacet {[3 9 6 3 4] {[2 4] {[3 0 0 7]} {[1 1 2 4]}}} 8 2) -> {[3 9 6 3 4] {[2 4] {[3 0 0 7]} {[1 1 2 4]}}}", "(replacet {[0 7]} 5 2) -> {[0 7]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.899878, "examples": ["(replacet {} 9 9) -> {}", "(replacet {[0 7 4] {[5]}} 2 8) -> {[0 7 4] {[5]}}", "(replacet {[1 3 7 8] {[5 8]} {[2 6 6 5 2]}} 4 2) -> {[1 3 7 8] {[5 8]} {[2 6 6 5 2]}}", "(replacet {[8 9 7 3]} 1 2) -> {[8 9 7 3]}", "(replacet {[9 9] {[]} {[]}} 9 6) -> {[6 6] {[]} {[]}}", "(replacet {[2 0]} 5 9) -> {[2 0]}", "(replacet {[4 5 3 4 4] {[7 0] {[] {[8 9 6 5 1]} {[1 2 0]}}} {[2 2]}} 1 2) -> {[4 5 3 4 4] {[7 0] {[] {[8 9 6 5 2]} {[2 2 0]}}} {[2 2]}}", "(replacet {[0 6] {[2 0]} {[5 0]}} 8 6) -> {[0 6] {[2 0]} {[5 0]}}", "(replacet {} 2 5) -> {}", "(replacet {[6] {[8 1 4 6 1] {[7 2 3 1 1] {[5 8 7]}}} {[3 3 0] {[3 1]}}} 0 8) -> {[6] {[8 1 4 6 1] {[7 2 3 1 1] {[5 8 7]}}} {[3 3 8] {[3 1]}}}", "(replacet {[2] {[1 8 9 1]} {[1 0 4]}} 6 4) -> {[2] {[1 8 9 1]} {[1 0 4]}}", "(replacet {} 7 1) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.467361, "examples": ["(replacet {} 6 4) -> {}", "(replacet {[9 7 4 5 1]} 4 2) -> {[9 7 2 5 1]}", "(replacet {[0 3]} 3 0) -> {[0 0]}", "(replacet {[5 9] {[] {[2 4 8 7 3] {[7 1 5 7 4]} {[3 7 9 3]}}}} 7 9) -> {[5 9] {[] {[2 4 8 9 3] {[9 1 5 9 4]} {[3 9 9 3]}}}}", "(replacet {[2 6 1 3] {[4 7]} {[4 2 2 5] {[8 6 3 2 9]} {[8 8 8 2]}}} 8 6) -> {[2 6 1 3] {[4 7]} {[4 2 2 5] {[6 6 3 2 9]} {[6 6 6 2]}}}", "(replacet {} 0 3) -> {}", "(replacet {[7] {[6]}} 2 4) -> {[7] {[6]}}", "(replacet {[0]} 3 3) -> {[0]}", "(replacet {[8] {[9 5 3] {[9 7] {[7]} {[9 6]}}}} 7 7) -> {[8] {[9 5 3] {[9 7] {[7]} {[9 6]}}}}", "(replacet {[] {[0 7 7 5]}} 2 6) -> {[] {[0 7 7 5]}}", "(replacet {[1]} 9 2) -> {[1]}", "(replacet {[0 1 5] {[9 8 4 5 3] {[5 2]}} {[7 3] {[8 8]}}} 1 2) -> {[0 2 5] {[9 8 4 5 3] {[5 2]}} {[7 3] {[8 8]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.954974, "examples": ["(replacet {} 5 2) -> {}", "(replacet {} 5 3) -> {}", "(replacet {[0 3]} 1 9) -> {[0 3]}", "(replacet {[9 8 4 3 5] {[7]} {[0 3 0]}} 5 0) -> {[9 8 4 3 0] {[7]} {[0 3 0]}}", "(replacet {} 7 6) -> {}", "(replacet {} 7 4) -> {}", "(replacet {[5 0 8]} 8 9) -> {[5 0 9]}", "(replacet {[] {[]}} 9 7) -> {[] {[]}}", "(replacet {[]} 9 4) -> {[]}", "(replacet {[5 5] {[]} {[8 2 8 7]}} 5 2) -> {[2 2] {[]} {[8 2 8 7]}}", "(replacet {} 3 8) -> {}", "(replacet {} 2 3) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.815655, "examples": ["(replacet {} 5 8) -> {}", "(replacet {[3] {[9] {[0 4 4 3]} {[0 9 7 8 1]}} {[3 1 1 3]}} 1 8) -> {[3] {[9] {[0 4 4 3]} {[0 9 7 8 8]}} {[3 8 8 3]}}", "(replacet {[4 5 9 3]} 5 1) -> {[4 1 9 3]}", "(replacet {[] {[0 1 7 5 1]} {[9 1 6 5]}} 6 3) -> {[] {[0 1 7 5 1]} {[9 1 3 5]}}", "(replacet {[4] {[3 9 2 9 5]}} 2 6) -> {[4] {[3 9 6 9 5]}}", "(replacet {[] {[] {[7 6]} {[6 9 8 2 7]}} {[] {[6 4 3 9 3]}}} 4 1) -> {[] {[] {[7 6]} {[6 9 8 2 7]}} {[] {[6 1 3 9 3]}}}", "(replacet {[2 7] {[8 1]}} 5 4) -> {[2 7] {[8 1]}}", "(replacet {[9 8 4 7]} 9 1) -> {[1 8 4 7]}", "(replacet {[6 7 1 3 3] {[2 0] {[4 8 8 1 6] {[7 8 6 2]}} {[]}} {[4] {[0] {[]}} {[0] {[1]} {[7 1]}}}} 8 5) -> {[6 7 1 3 3] {[2 0] {[4 5 5 1 6] {[7 5 6 2]}} {[]}} {[4] {[0] {[]}} {[0] {[1]} {[7 1]}}}}", "(replacet {[4 8 2 9] {[6] {[6 1]}}} 4 6) -> {[6 8 2 9] {[6] {[6 1]}}}", "(replacet {[3 1 8]} 2 0) -> {[3 1 8]}", "(replacet {[0 9 0 3] {[1 2 4 3 3]}} 8 2) -> {[0 9 0 3] {[1 2 4 3 3]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.612868, "examples": ["(replacet {} 3 1) -> {}", "(replacet {} 6 1) -> {}", "(replacet {[4] {[2 6]} {[] {[7 2]} {[]}}} 5 5) -> {[4] {[2 6]} {[] {[7 2]} {[]}}}", "(replacet {} 8 9) -> {}", "(replacet {[7] {[1]} {[] {[2]} {[3 6]}}} 2 2) -> {[7] {[1]} {[] {[2]} {[3 6]}}}", "(replacet {[0 8 1 9 8]} 5 8) -> {[0 8 1 9 8]}", "(replacet {} 3 3) -> {}", "(replacet {[] {[8 8 3]} {[3 2 0 0 7]}} 8 9) -> {[] {[9 9 3]} {[3 2 0 0 7]}}", "(replacet {[1 2 6 1 3] {[6] {[8 5]} {[]}}} 6 0) -> {[1 2 0 1 3] {[0] {[8 5]} {[]}}}", "(replacet {[6 0 1 0]} 1 2) -> {[6 0 2 0]}", "(replacet {[]} 8 1) -> {[]}", "(replacet {[7 6 8 3] {[0 2 2] {[]}}} 9 5) -> {[7 6 8 3] {[0 2 2] {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.98793, "examples": ["(replacet {} 0 3) -> {}", "(replacet {[1 8] {[3 3] {[4 8 2] {[9 2 5 6 4]} {[]}} {[8 8 4 7 9]}}} 7 7) -> {[1 8] {[3 3] {[4 8 2] {[9 2 5 6 4]} {[]}} {[8 8 4 7 9]}}}", "(replacet {[8] {[1 5 3 7 2]}} 6 0) -> {[8] {[1 5 3 7 2]}}", "(replacet {} 0 4) -> {}", "(replacet {[1 1] {[1 0 7] {[5 6 6]} {[0 7 0 5 4]}}} 6 7) -> {[1 1] {[1 0 7] {[5 7 7]} {[0 7 0 5 4]}}}", "(replacet {[]} 2 9) -> {[]}", "(replacet {[] {[] {[2 5 8 0 8] {[]} {[8 5 0 6]}}}} 3 2) -> {[] {[] {[2 5 8 0 8] {[]} {[8 5 0 6]}}}}", "(replacet {[6 8 8 5 3] {[2 1 6]} {[7 7 7]}} 5 4) -> {[6 8 8 4 3] {[2 1 6]} {[7 7 7]}}", "(replacet {[4 7] {[] {[4 6 2]} {[5]}} {[5 4 5 5 1]}} 8 3) -> {[4 7] {[] {[4 6 2]} {[5]}} {[5 4 5 5 1]}}", "(replacet {[6 0 3 0]} 8 1) -> {[6 0 3 0]}", "(replacet {[9 3] {[9 2 6 7 0] {[8 2]}} {[5 4 9] {[8 6 4] {[4 3 2 8]}}}} 6 2) -> {[9 3] {[9 2 2 7 0] {[8 2]}} {[5 4 9] {[8 2 4] {[4 3 2 8]}}}}", "(replacet {} 1 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.016726, "examples": ["(replacet {} 1 0) -> {}", "(replacet {[6 3 4 3 5]} 1 2) -> {[6 3 4 3 5]}", "(replacet {} 6 1) -> {}", "(replacet {[6]} 0 3) -> {[6]}", "(replacet {[3] {[2 5]} {[3 7 6 4]}} 0 3) -> {[3] {[2 5]} {[3 7 6 4]}}", "(replacet {[] {[6 2 4 3] {[7 2]}} {[4 2 9 1 7] {[]} {[5 5]}}} 8 7) -> {[] {[6 2 4 3] {[7 2]}} {[4 2 9 1 7] {[]} {[5 5]}}}", "(replacet {[6] {[5]}} 0 7) -> {[6] {[5]}}", "(replacet {[6] {[]} {[8 6 6 6] {[5 6 5]} {[]}}} 5 7) -> {[6] {[]} {[8 6 6 6] {[7 6 7]} {[]}}}", "(replacet {[6 8] {[6 3 2] {[9] {[2 3 0 7 4]}}} {[2 5 7 5 8] {[8 2 2] {[0 2 8 7 6]} {[8 8 0 5]}} {[0 8] {[]} {[5 2 9 4 1]}}}} 5 8) -> {[6 8] {[6 3 2] {[9] {[2 3 0 7 4]}}} {[2 8 7 8 8] {[8 2 2] {[0 2 8 7 6]} {[8 8 0 8]}} {[0 8] {[]} {[8 2 9 4 1]}}}}", "(replacet {[1 9 3] {[]}} 9 7) -> {[1 7 3] {[]}}", "(replacet {[9 7 4 2 6] {[5 6 2 4]} {[7 2 6]}} 8 5) -> {[9 7 4 2 6] {[5 6 2 4]} {[7 2 6]}}", "(replacet {[8 6 1]} 6 9) -> {[8 9 1]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.039555, "examples": ["(replacet {} 9 5) -> {}", "(replacet {[7] {[1 2 5 2 0]} {[4 2] {[]} {[7 3 3]}}} 6 4) -> {[7] {[1 2 5 2 0]} {[4 2] {[]} {[7 3 3]}}}", "(replacet {} 6 3) -> {}", "(replacet {[6 1 0 5] {[0 3 0]}} 6 8) -> {[8 1 0 5] {[0 3 0]}}", "(replacet {} 4 6) -> {}", "(replacet {[3 3 1 0] {[0 3] {[]}} {[2 4 3 1] {[0 5 9]}}} 9 9) -> {[3 3 1 0] {[0 3] {[]}} {[2 4 3 1] {[0 5 9]}}}", "(replacet {} 2 4) -> {}", "(replacet {} 3 7) -> {}", "(replacet {[9 3 9] {[2 4 0]}} 2 8) -> {[9 3 9] {[8 4 0]}}", "(replacet {[] {[8 8 9] {[] {[4 9 9 7]} {[1 5 2 7 4]}}}} 9 3) -> {[] {[8 8 3] {[] {[4 3 3 7]} {[1 5 2 7 4]}}}}", "(replacet {[1]} 7 5) -> {[1]}", "(replacet {[3 5 3 5 1] {[6]}} 0 4) -> {[3 5 3 5 1] {[6]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.726156, "examples": ["(replacet {} 0 3) -> {}", "(replacet {[] {[6 6 5] {[1]} {[0 6 2 4]}}} 9 9) -> {[] {[6 6 5] {[1]} {[0 6 2 4]}}}", "(replacet {[0 5 8 1 2] {[3]} {[7 1]}} 7 7) -> {[0 5 8 1 2] {[3]} {[7 1]}}", "(replacet {} 7 7) -> {}", "(replacet {} 6 3) -> {}", "(replacet {[] {[6]} {[3 5]}} 5 3) -> {[] {[6]} {[3 3]}}", "(replacet {[6 0 6 0] {[]} {[9 2 7]}} 7 9) -> {[6 0 6 0] {[]} {[9 2 9]}}", "(replacet {[8] {[1 8 1]} {[7 1 0]}} 9 6) -> {[8] {[1 8 1]} {[7 1 0]}}", "(replacet {[8 4 4] {[]} {[3 4 5]}} 3 3) -> {[8 4 4] {[]} {[3 4 5]}}", "(replacet {[] {[9 3 5 7]}} 7 2) -> {[] {[9 3 5 2]}}", "(replacet {[5 1] {[3]} {[] {[] {[]}}}} 9 3) -> {[5 1] {[3]} {[] {[] {[]}}}}", "(replacet {[7 0 9 9]} 4 6) -> {[7 0 9 9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.268082, "examples": ["(replacet {} 1 0) -> {}", "(replacet {} 3 1) -> {}", "(replacet {[1 7 7 9 0] {[9 7 1 4 6]} {[8 8 6]}} 9 4) -> {[1 7 7 4 0] {[4 7 1 4 6]} {[8 8 6]}}", "(replacet {[4 0] {[3 0 5 5] {[0 8 7]} {[8 4 2 9] {[9 6 7 7 7]} {[7]}}}} 3 2) -> {[4 0] {[2 0 5 5] {[0 8 7]} {[8 4 2 9] {[9 6 7 7 7]} {[7]}}}}", "(replacet {[0 1 4]} 2 4) -> {[0 1 4]}", "(replacet {[7 2 2] {[3 0 4]}} 0 4) -> {[7 2 2] {[3 4 4]}}", "(replacet {[0 7 2] {[] {[1 7 3]} {[5 6]}}} 7 2) -> {[0 2 2] {[] {[1 2 3]} {[5 6]}}}", "(replacet {} 6 7) -> {}", "(replacet {[5 3 7 5] {[1 7 6] {[1 1] {[]} {[5]}} {[5 9] {[6 3 2 3]}}} {[] {[3] {[]}}}} 4 0) -> {[5 3 7 5] {[1 7 6] {[1 1] {[]} {[5]}} {[5 9] {[6 3 2 3]}}} {[] {[3] {[]}}}}", "(replacet {[5] {[8 1] {[5 2 1]}} {[5 9] {[6 4 4]}}} 1 0) -> {[5] {[8 0] {[5 2 0]}} {[5 9] {[6 4 4]}}}", "(replacet {[4 6 5] {[1 1 1] {[4 4 3 1]} {[6 1 9 0 8]}}} 9 1) -> {[4 6 5] {[1 1 1] {[4 4 3 1]} {[6 1 1 0 8]}}}", "(replacet {} 2 5) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.826729, "examples": ["(replacet {} 2 0) -> {}", "(replacet {[8 7 4] {[6] {[5 9 5] {[4 2]} {[0 3 0]}} {[2 8 1 1] {[9 7 7 7]} {[2 2 8 3 9]}}} {[1 2] {[9]}}} 7 6) -> {[8 6 4] {[6] {[5 9 5] {[4 2]} {[0 3 0]}} {[2 8 1 1] {[9 6 6 6]} {[2 2 8 3 9]}}} {[1 2] {[9]}}}", "(replacet {[6]} 3 3) -> {[6]}", "(replacet {[8 9 2 3]} 9 3) -> {[8 3 2 3]}", "(replacet {[4 3 7 9 7] {[2 3 8 5 3] {[4] {[3 7]}}} {[]}} 0 4) -> {[4 3 7 9 7] {[2 3 8 5 3] {[4] {[3 7]}}} {[]}}", "(replacet {} 7 3) -> {}", "(replacet {[7 4] {[9 4 2] {[5 9 8 3 0] {[]}}}} 1 4) -> {[7 4] {[9 4 2] {[5 9 8 3 0] {[]}}}}", "(replacet {[2 8]} 3 2) -> {[2 8]}", "(replacet {} 0 5) -> {}", "(replacet {[4 3]} 7 1) -> {[4 3]}", "(replacet {[] {[] {[1 8 5]}} {[] {[6 7]} {[] {[5 8 9]} {[9 8 4 9 3]}}}} 9 2) -> {[] {[] {[1 8 5]}} {[] {[6 7]} {[] {[5 8 2]} {[2 8 4 2 3]}}}}", "(replacet {[7 3 6]} 2 9) -> {[7 3 6]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.275264, "examples": ["(replacet {} 1 7) -> {}", "(replacet {[] {[] {[7 7 4] {[7 9 2]}}}} 9 5) -> {[] {[] {[7 7 4] {[7 5 2]}}}}", "(replacet {} 1 2) -> {}", "(replacet {} 5 5) -> {}", "(replacet {} 8 4) -> {}", "(replacet {[9 2 2] {[4 9 9 9]}} 8 4) -> {[9 2 2] {[4 9 9 9]}}", "(replacet {[1 7 8 3] {[] {[4] {[9 6]} {[0 3 6 9 8]}}} {[8 7 6 7] {[9]} {[0 8] {[1 7 5]}}}} 2 4) -> {[1 7 8 3] {[] {[4] {[9 6]} {[0 3 6 9 8]}}} {[8 7 6 7] {[9]} {[0 8] {[1 7 5]}}}}", "(replacet {[9 5 3 7]} 9 4) -> {[4 5 3 7]}", "(replacet {[6 4 4 4] {[1 6]}} 5 9) -> {[6 4 4 4] {[1 6]}}", "(replacet {[8 3 9]} 2 0) -> {[8 3 9]}", "(replacet {} 6 3) -> {}", "(replacet {[5 7 2]} 5 5) -> {[5 7 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.997181, "examples": ["(replacet {} 0 1) -> {}", "(replacet {} 2 5) -> {}", "(replacet {[7 6 3 8 7] {[6] {[6 5]} {[6]}} {[0 5 1 3 2] {[6 9]} {[0 2 0]}}} 3 5) -> {[7 6 5 8 7] {[6] {[6 5]} {[6]}} {[0 5 1 5 2] {[6 9]} {[0 2 0]}}}", "(replacet {[5 3] {[] {[]} {[]}} {[1 1 7 2] {[7 0 9 2]}}} 6 7) -> {[5 3] {[] {[]} {[]}} {[1 1 7 2] {[7 0 9 2]}}}", "(replacet {} 3 4) -> {}", "(replacet {[9 8 5]} 2 3) -> {[9 8 5]}", "(replacet {[4 2 5 2] {[9 6]} {[8 2 6 5 1]}} 1 4) -> {[4 2 5 2] {[9 6]} {[8 2 6 5 4]}}", "(replacet {[6 5 3]} 8 8) -> {[6 5 3]}", "(replacet {[6]} 0 5) -> {[6]}", "(replacet {[1 1]} 6 9) -> {[1 1]}", "(replacet {[2 7 1] {[2 8 9]} {[5 0 8 4]}} 0 3) -> {[2 7 1] {[2 8 9]} {[5 3 8 4]}}", "(replacet {} 6 5) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 18.883883, "examples": ["(replacet {} 9 3) -> {}", "(replacet {[6] {[1] {[]} {[2]}} {[7 1 0] {[0 4 4] {[9 9 4 7 3]} {[5 4 8 0 0]}} {[4] {[7 8 9 9]} {[]}}}} 2 1) -> {[6] {[1] {[]} {[1]}} {[7 1 0] {[0 4 4] {[9 9 4 7 3]} {[5 4 8 0 0]}} {[4] {[7 8 9 9]} {[]}}}}", "(replacet {[6 7] {[7 4 9 9]}} 3 8) -> {[6 7] {[7 4 9 9]}}", "(replacet {[2 4 2 3 8] {[8 1 3 9 6]}} 9 6) -> {[2 4 2 3 8] {[8 1 3 6 6]}}", "(replacet {} 3 5) -> {}", "(replacet {} 9 9) -> {}", "(replacet {[1 3 4 7 3] {[0 0 2 3]}} 4 1) -> {[1 3 1 7 3] {[0 0 2 3]}}", "(replacet {[0 2] {[7] {[3 3]} {[]}}} 1 5) -> {[0 2] {[7] {[3 3]} {[]}}}", "(replacet {[9 1 1 8 9] {[3 9 1 5 2]}} 2 3) -> {[9 1 1 8 9] {[3 9 1 5 3]}}", "(replacet {} 8 1) -> {}", "(replacet {[5 2 3 6]} 0 4) -> {[5 2 3 6]}", "(replacet {[] {[6 3 2]}} 6 9) -> {[] {[9 3 2]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.001805, "examples": ["(replacet {} 1 8) -> {}", "(replacet {[9] {[8] {[5 6 5 6 9]}} {[0] {[0 6 2]} {[7 5 7]}}} 6 6) -> {[9] {[8] {[5 6 5 6 9]}} {[0] {[0 6 2]} {[7 5 7]}}}", "(replacet {[6 4 0 5 2] {[7] {[5 0 9 6 6] {[2 9]}}}} 4 6) -> {[6 6 0 5 2] {[7] {[5 0 9 6 6] {[2 9]}}}}", "(replacet {[0 2 9 3 4] {[6 7 1 7]} {[2] {[1]} {[6]}}} 2 3) -> {[0 3 9 3 4] {[6 7 1 7]} {[3] {[1]} {[6]}}}", "(replacet {[7 1 7 1] {[] {[]}} {[0 9 0] {[5 3]}}} 2 4) -> {[7 1 7 1] {[] {[]}} {[0 9 0] {[5 3]}}}", "(replacet {[2 5 5 6]} 8 0) -> {[2 5 5 6]}", "(replacet {[9 0 4 9 6] {[] {[8 7]} {[2 0 7 7]}}} 5 5) -> {[9 0 4 9 6] {[] {[8 7]} {[2 0 7 7]}}}", "(replacet {[7 5 7 3]} 7 7) -> {[7 5 7 3]}", "(replacet {[9 2 9 2 1] {[5 6 0 2 7]}} 3 0) -> {[9 2 9 2 1] {[5 6 0 2 7]}}", "(replacet {[]} 5 4) -> {[]}", "(replacet {[1 9 5 5 5] {[4]}} 6 2) -> {[1 9 5 5 5] {[4]}}", "(replacet {[] {[9 5 2 5 2] {[]}} {[2 5] {[2 0 0 9]} {[9 3 3]}}} 9 9) -> {[] {[9 5 2 5 2] {[]}} {[2 5] {[2 0 0 9]} {[9 3 3]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.849561, "examples": ["(replacet {} 5 6) -> {}", "(replacet {[3]} 3 5) -> {[5]}", "(replacet {[5 1 8] {[5 2 6 7]} {[8 5 1 7 7]}} 0 5) -> {[5 1 8] {[5 2 6 7]} {[8 5 1 7 7]}}", "(replacet {[6 2 5 1 5] {[3 2]} {[4]}} 2 4) -> {[6 4 5 1 5] {[3 4]} {[4]}}", "(replacet {[]} 2 6) -> {[]}", "(replacet {[0 7] {[6] {[1 0]}}} 3 3) -> {[0 7] {[6] {[1 0]}}}", "(replacet {[0 3 2 0]} 5 4) -> {[0 3 2 0]}", "(replacet {} 1 7) -> {}", "(replacet {} 0 8) -> {}", "(replacet {[]} 3 1) -> {[]}", "(replacet {[0 2]} 5 1) -> {[0 2]}", "(replacet {[1 8 4 8 8] {[4 2 2]}} 5 4) -> {[1 8 4 8 8] {[4 2 2]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.632971, "examples": ["(replacet {} 5 1) -> {}", "(replacet {[]} 7 8) -> {[]}", "(replacet {[] {[7]} {[8 2 6 9]}} 8 8) -> {[] {[7]} {[8 2 6 9]}}", "(replacet {[6 8 0 9] {[7 3]}} 2 3) -> {[6 8 0 9] {[7 3]}}", "(replacet {} 4 0) -> {}", "(replacet {[6]} 6 7) -> {[7]}", "(replacet {} 8 2) -> {}", "(replacet {[9 6 5 2] {[5] {[5 9 8 5]}} {[5 7 9 6 8] {[0]}}} 4 8) -> {[9 6 5 2] {[5] {[5 9 8 5]}} {[5 7 9 6 8] {[0]}}}", "(replacet {} 6 2) -> {}", "(replacet {} 2 5) -> {}", "(replacet {[8 8 8] {[9 6 5] {[4 9]}} {[5] {[5 0] {[5 7 7 9]}}}} 1 6) -> {[8 8 8] {[9 6 5] {[4 9]}} {[5] {[5 0] {[5 7 7 9]}}}}", "(replacet {[3] {[2]} {[9 8 6]}} 4 8) -> {[3] {[2]} {[9 8 6]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.764373, "examples": ["(replacet {} 1 9) -> {}", "(replacet {[8 5 3] {[8 1]} {[] {[5 2 0 8]}}} 7 2) -> {[8 5 3] {[8 1]} {[] {[5 2 0 8]}}}", "(replacet {[2 0] {[9 1]} {[6 6 0 3]}} 5 9) -> {[2 0] {[9 1]} {[6 6 0 3]}}", "(replacet {[8 8 4 2 9]} 9 2) -> {[8 8 4 2 2]}", "(replacet {[4]} 8 4) -> {[4]}", "(replacet {[7 8] {[5 7] {[2]} {[2 3 3]}} {[] {[]} {[8] {[]} {[5]}}}} 8 4) -> {[7 4] {[5 7] {[2]} {[2 3 3]}} {[] {[]} {[4] {[]} {[5]}}}}", "(replacet {} 2 9) -> {}", "(replacet {} 6 7) -> {}", "(replacet {[] {[5 8 5 3]} {[] {[9 8 3]}}} 9 6) -> {[] {[5 8 5 3]} {[] {[6 8 3]}}}", "(replacet {[] {[4 4 5 0 6]} {[]}} 3 3) -> {[] {[4 4 5 0 6]} {[]}}", "(replacet {[]} 1 5) -> {[]}", "(replacet {[8 1 7] {[9 7 7] {[0 1] {[6]}} {[9] {[1 5 9]} {[3 5]}}}} 4 9) -> {[8 1 7] {[9 7 7] {[0 1] {[6]}} {[9] {[1 5 9]} {[3 5]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 0.001242, "examples": ["(replacet {} 7 9) -> {}", "(replacet {[6 9] {[]} {[] {[4 2 3 7] {[7]} {[3 9 0]}} {[0 3 9]}}} 1 1) -> {[6 9] {[]} {[] {[4 2 3 7] {[7]} {[3 9 0]}} {[0 3 9]}}}", "(replacet {[6]} 8 9) -> {[6]}", "(replacet {[]} 4 8) -> {[]}", "(replacet {} 0 1) -> {}", "(replacet {} 0 4) -> {}", "(replacet {} 1 2) -> {}", "(replacet {[9 0 0] {[1 6 9 8] {[8 1 9 8]}}} 7 7) -> {[9 0 0] {[1 6 9 8] {[8 1 9 8]}}}", "(replacet {} 9 7) -> {}", "(replacet {[8 9] {[4 0 6]}} 3 8) -> {[8 9] {[4 0 6]}}", "(replacet {[]} 1 8) -> {[]}", "(replacet {[4 6 0]} 9 2) -> {[4 6 0]}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 8.74883, "examples": ["(replacet {} 2 8) -> {}", "(replacet {[7 2 4] {[]}} 9 2) -> {[7 2 4] {[]}}", "(replacet {} 4 4) -> {}", "(replacet {[] {[3 3]} {[5 7 8]}} 1 2) -> {[] {[3 3]} {[5 7 8]}}", "(replacet {} 1 4) -> {}", "(replacet {} 9 0) -> {}", "(replacet {} 7 3) -> {}", "(replacet {[] {[5 9 7]}} 8 3) -> {[] {[5 9 7]}}", "(replacet {[7 8 9 5]} 2 5) -> {[7 8 9 5]}", "(replacet {} 9 6) -> {}", "(replacet {[0 4 7 1] {[5] {[] {[3 9 8 2 8]} {[0 7 1 8]}}} {[0] {[9] {[3 8]}} {[] {[0 7 7]} {[9]}}}} 3 4) -> {[0 4 7 1] {[5] {[] {[4 9 8 2 8]} {[0 7 1 8]}}} {[0] {[9] {[4 8]}} {[] {[0 7 7]} {[9]}}}}", "(replacet {[4 2]} 7 9) -> {[4 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.949127, "examples": ["(replacet {} 8 0) -> {}", "(replacet {[6] {[]}} 8 8) -> {[6] {[]}}", "(replacet {[5] {[6 4 8] {[4 6 5]}} {[4 7] {[]} {[9] {[7]} {[0 7]}}}} 3 1) -> {[5] {[6 4 8] {[4 6 5]}} {[4 7] {[]} {[9] {[7]} {[0 7]}}}}", "(replacet {[5] {[0 1]} {[9]}} 6 6) -> {[5] {[0 1]} {[9]}}", "(replacet {} 7 8) -> {}", "(replacet {[9 2 9 4 4] {[6 3 5]} {[9 1 7 1 1]}} 4 2) -> {[9 2 9 2 2] {[6 3 5]} {[9 1 7 1 1]}}", "(replacet {} 1 5) -> {}", "(replacet {} 8 8) -> {}", "(replacet {[4 4 5 5]} 2 5) -> {[4 4 5 5]}", "(replacet {} 9 2) -> {}", "(replacet {[5 1 1]} 3 5) -> {[5 1 1]}", "(replacet {} 0 5) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.415109, "examples": ["(replacet {} 1 6) -> {}", "(replacet {[7] {[7 7 3]} {[8 4]}} 9 2) -> {[7] {[7 7 3]} {[8 4]}}", "(replacet {} 3 0) -> {}", "(replacet {[9] {[2]} {[]}} 6 2) -> {[9] {[2]} {[]}}", "(replacet {} 1 9) -> {}", "(replacet {[]} 8 9) -> {[]}", "(replacet {[9]} 2 8) -> {[9]}", "(replacet {[4] {[]} {[5 7 6 0]}} 8 9) -> {[4] {[]} {[5 7 6 0]}}", "(replacet {[0 6 7] {[3 0 1 5 8]}} 1 3) -> {[0 6 7] {[3 0 3 5 8]}}", "(replacet {[0]} 1 0) -> {[0]}", "(replacet {[6 0 1] {[2 3 7]} {[2 6 9 8 0]}} 4 7) -> {[6 0 1] {[2 3 7]} {[2 6 9 8 0]}}", "(replacet {[1 4] {[2] {[7]} {[0 9]}} {[4 5 8 7]}} 8 6) -> {[1 4] {[2] {[7]} {[0 9]}} {[4 5 6 7]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.136198, "examples": ["(replacet {} 2 2) -> {}", "(replacet {[6] {[2 3 7 7 5]} {[4]}} 6 5) -> {[5] {[2 3 7 7 5]} {[4]}}", "(replacet {} 2 8) -> {}", "(replacet {[0 8] {[1 0 3 6 8]} {[2]}} 8 9) -> {[0 9] {[1 0 3 6 9]} {[2]}}", "(replacet {[6 2 8 2 4] {[9 9 2 3 7] {[3 4 8]}}} 5 9) -> {[6 2 8 2 4] {[9 9 2 3 7] {[3 4 8]}}}", "(replacet {[3 5 9] {[6 6 7 6]}} 1 6) -> {[3 5 9] {[6 6 7 6]}}", "(replacet {[1 1] {[]} {[]}} 5 1) -> {[1 1] {[]} {[]}}", "(replacet {[2 9]} 0 4) -> {[2 9]}", "(replacet {[2 9] {[1 2 5 5 9]} {[8 4 9 6 5]}} 3 1) -> {[2 9] {[1 2 5 5 9]} {[8 4 9 6 5]}}", "(replacet {[7 1]} 5 4) -> {[7 1]}", "(replacet {[1 7 3 2] {[7 4] {[5 0 2]} {[5 3 7 5 6]}} {[0 6 9 3]}} 9 2) -> {[1 7 3 2] {[7 4] {[5 0 2]} {[5 3 7 5 6]}} {[0 6 2 3]}}", "(replacet {[2 9 1]} 4 9) -> {[2 9 1]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.782915, "examples": ["(replacet {} 1 6) -> {}", "(replacet {} 4 1) -> {}", "(replacet {[8 3 7]} 8 1) -> {[1 3 7]}", "(replacet {} 9 7) -> {}", "(replacet {} 1 5) -> {}", "(replacet {} 8 8) -> {}", "(replacet {[9]} 6 6) -> {[9]}", "(replacet {[8 6 8]} 8 5) -> {[5 6 5]}", "(replacet {[7 8 2]} 3 0) -> {[7 8 2]}", "(replacet {[7] {[4 9 0 5 5]}} 5 3) -> {[7] {[4 9 0 3 3]}}", "(replacet {[5] {[3 2 5 3] {[6 1 9]}} {[1 9 8 8]}} 3 2) -> {[5] {[2 2 5 2] {[6 1 9]}} {[1 9 8 8]}}", "(replacet {[3] {[0 7]} {[3 2 2 1]}} 0 3) -> {[3] {[3 7]} {[3 2 2 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.119059, "examples": ["(replacet {} 7 1) -> {}", "(replacet {[4 0 6] {[2 6 3 3 5] {[2]} {[]}} {[2 2 4 3 3]}} 0 0) -> {[4 0 6] {[2 6 3 3 5] {[2]} {[]}} {[2 2 4 3 3]}}", "(replacet {[3 3 7 2 4]} 3 5) -> {[5 5 7 2 4]}", "(replacet {} 9 5) -> {}", "(replacet {[7 2] {[4 4]}} 4 1) -> {[7 2] {[1 1]}}", "(replacet {[7 3] {[]}} 6 1) -> {[7 3] {[]}}", "(replacet {[] {[1] {[0]}} {[0 6] {[3 5 1 6]} {[5 4 6]}}} 4 9) -> {[] {[1] {[0]}} {[0 6] {[3 5 1 6]} {[5 9 6]}}}", "(replacet {[0 5] {[3 3 3 3]}} 5 9) -> {[0 9] {[3 3 3 3]}}", "(replacet {[]} 4 7) -> {[]}", "(replacet {[6 4] {[6 6]} {[]}} 0 5) -> {[6 4] {[6 6]} {[]}}", "(replacet {[4 4 3 8]} 3 5) -> {[4 4 5 8]}", "(replacet {[4 4] {[7 6 5 6] {[9 2 0 7]} {[]}} {[2] {[7 5 9]} {[]}}} 2 0) -> {[4 4] {[7 6 5 6] {[9 0 0 7]} {[]}} {[0] {[7 5 9]} {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.679706, "examples": ["(replacet {} 8 1) -> {}", "(replacet {[5] {[8 0 9]} {[6 3 3 5]}} 9 0) -> {[5] {[8 0 0]} {[6 3 3 5]}}", "(replacet {[3 7 5] {[1 5]} {[9 3] {[]} {[4 6]}}} 5 9) -> {[3 7 9] {[1 9]} {[9 3] {[]} {[4 6]}}}", "(replacet {[2] {[2 1 1 8] {[]}}} 2 0) -> {[0] {[0 1 1 8] {[]}}}", "(replacet {[8]} 4 4) -> {[8]}", "(replacet {} 5 0) -> {}", "(replacet {[7]} 8 5) -> {[7]}", "(replacet {} 1 7) -> {}", "(replacet {[5 7 0 1 5] {[2 5 4 5]}} 2 0) -> {[5 7 0 1 5] {[0 5 4 5]}}", "(replacet {[2 6] {[2]}} 6 1) -> {[2 1] {[2]}}", "(replacet {[7 3]} 5 4) -> {[7 3]}", "(replacet {} 5 1) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.787178, "examples": ["(replacet {} 6 5) -> {}", "(replacet {[1 5 2 4 1]} 0 6) -> {[1 5 2 4 1]}", "(replacet {[1] {[] {[3 4 9 8 1]} {[8 7 1 4]}} {[0 8 3 9] {[7 9 1 9 1]} {[0 2 6 0]}}} 9 0) -> {[1] {[] {[3 4 0 8 1]} {[8 7 1 4]}} {[0 8 3 0] {[7 0 1 0 1]} {[0 2 6 0]}}}", "(replacet {[7 9 7 2]} 2 3) -> {[7 9 7 3]}", "(replacet {[] {[] {[] {[0 3 4 9 3]} {[1 0 4 4]}} {[8 8 5 3] {[6]} {[1]}}} {[0 3 0 9] {[4 2 9]}}} 0 5) -> {[] {[] {[] {[5 3 4 9 3]} {[1 5 4 4]}} {[8 8 5 3] {[6]} {[1]}}} {[5 3 5 9] {[4 2 9]}}}", "(replacet {} 7 7) -> {}", "(replacet {[] {[4 3 1] {[6]}} {[6]}} 9 3) -> {[] {[4 3 1] {[6]}} {[6]}}", "(replacet {[7 1 7 2 5]} 2 6) -> {[7 1 7 6 5]}", "(replacet {[0 3 8] {[]}} 5 6) -> {[0 3 8] {[]}}", "(replacet {[0 0 2] {[9] {[1 2 1 3 5]}} {[3 5 4 8]}} 8 5) -> {[0 0 2] {[9] {[1 2 1 3 5]}} {[3 5 4 5]}}", "(replacet {} 2 0) -> {}", "(replacet {[] {[7 7 6 2] {[] {[]} {[9 0]}}} {[4 4 5 9] {[]} {[]}}} 7 2) -> {[] {[2 2 6 2] {[] {[]} {[9 0]}}} {[4 4 5 9] {[]} {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.29698, "examples": ["(replacet {} 1 5) -> {}", "(replacet {} 5 6) -> {}", "(replacet {[1 8 0]} 6 4) -> {[1 8 0]}", "(replacet {[1 1 0 3 6] {[7]} {[4 2 6 1]}} 7 1) -> {[1 1 0 3 6] {[1]} {[4 2 6 1]}}", "(replacet {[9 5] {[9]}} 1 4) -> {[9 5] {[9]}}", "(replacet {[5 4]} 0 7) -> {[5 4]}", "(replacet {[6] {[1 8] {[5 0]}} {[8 5 6 1] {[3 9]}}} 3 6) -> {[6] {[1 8] {[5 0]}} {[8 5 6 1] {[6 9]}}}", "(replacet {[3] {[1 9 3 8]} {[5 7] {[6 0]}}} 7 2) -> {[3] {[1 9 3 8]} {[5 2] {[6 0]}}}", "(replacet {[0] {[1 2 3 8]}} 9 4) -> {[0] {[1 2 3 8]}}", "(replacet {[6 5]} 1 1) -> {[6 5]}", "(replacet {[7 3 0] {[6 5] {[3 2 8 6 6]}}} 9 6) -> {[7 3 0] {[6 5] {[3 2 8 6 6]}}}", "(replacet {[9 0 5 5 0]} 8 9) -> {[9 0 5 5 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 19.773145, "examples": ["(replacet {} 0 4) -> {}", "(replacet {[5 0 5 9 8] {[4 6] {[6 0 1 2 4]} {[6 2 7]}} {[5 6] {[6 7 3 1]}}} 1 1) -> {[5 0 5 9 8] {[4 6] {[6 0 1 2 4]} {[6 2 7]}} {[5 6] {[6 7 3 1]}}}", "(replacet {[1 2 0 5 4] {[8 7 7 9 0]}} 2 5) -> {[1 5 0 5 4] {[8 7 7 9 0]}}", "(replacet {} 6 4) -> {}", "(replacet {[4 7 0 6 4] {[8 1 0 8 9]} {[7 0 5]}} 5 2) -> {[4 7 0 6 4] {[8 1 0 8 9]} {[7 0 2]}}", "(replacet {[9]} 8 7) -> {[9]}", "(replacet {[5 8 6]} 1 7) -> {[5 8 6]}", "(replacet {[7 1 3] {[4 7 6] {[2 1 8 8]}}} 5 2) -> {[7 1 3] {[4 7 6] {[2 1 8 8]}}}", "(replacet {[0 8] {[0 0 5] {[8 5 0]} {[8 7 1 9]}}} 5 0) -> {[0 8] {[0 0 0] {[8 0 0]} {[8 7 1 9]}}}", "(replacet {[1]} 7 0) -> {[1]}", "(replacet {[4]} 1 3) -> {[4]}", "(replacet {[7 0 7]} 4 1) -> {[7 0 7]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 19.84679, "examples": ["(replacet {} 4 4) -> {}", "(replacet {} 3 2) -> {}", "(replacet {[9 3 5 4] {[8 8 9 6 7] {[] {[2]} {[]}} {[9 2 0]}} {[4 0] {[1] {[6 2 5 9 7]}}}} 2 2) -> {[9 3 5 4] {[8 8 9 6 7] {[] {[2]} {[]}} {[9 2 0]}} {[4 0] {[1] {[6 2 5 9 7]}}}}", "(replacet {[0 5 7 8] {[1 5 4]} {[2 6]}} 4 2) -> {[0 5 7 8] {[1 5 2]} {[2 6]}}", "(replacet {[0 7 3 5 7] {[9]}} 7 4) -> {[0 4 3 5 4] {[9]}}", "(replacet {} 7 3) -> {}", "(replacet {[] {[2] {[] {[4 2 4 8 9]} {[]}} {[3 2]}} {[1 2 6 3] {[9 4 9 6 1] {[5]}} {[0]}}} 3 1) -> {[] {[2] {[] {[4 2 4 8 9]} {[]}} {[1 2]}} {[1 2 6 1] {[9 4 9 6 1] {[5]}} {[0]}}}", "(replacet {[7] {[5 2 0]} {[3 1 7 6 6]}} 1 5) -> {[7] {[5 2 0]} {[3 5 7 6 6]}}", "(replacet {} 8 6) -> {}", "(replacet {[9 6 5 6]} 4 4) -> {[9 6 5 6]}", "(replacet {} 3 2) -> {}", "(replacet {} 9 2) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.584317, "examples": ["(replacet {} 9 4) -> {}", "(replacet {[5 0 0] {[1 8 2 4 8]}} 7 7) -> {[5 0 0] {[1 8 2 4 8]}}", "(replacet {[6 6 1]} 4 0) -> {[6 6 1]}", "(replacet {[]} 4 6) -> {[]}", "(replacet {[9 2] {[3 7]}} 6 8) -> {[9 2] {[3 7]}}", "(replacet {} 4 5) -> {}", "(replacet {[4] {[7 9 6 4]}} 4 7) -> {[7] {[7 9 6 7]}}", "(replacet {[] {[0 2 7] {[6 9 1 8]} {[9 6 3 3]}}} 3 6) -> {[] {[0 2 7] {[6 9 1 8]} {[9 6 6 6]}}}", "(replacet {[6 4 7 6]} 8 2) -> {[6 4 7 6]}", "(replacet {[9] {[8 2]} {[2 9 2] {[1 4 6]}}} 8 7) -> {[9] {[7 2]} {[2 9 2] {[1 4 6]}}}", "(replacet {[9 1 6]} 2 0) -> {[9 1 6]}", "(replacet {[]} 7 8) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.299435, "examples": ["(replacet {} 3 8) -> {}", "(replacet {[0 1 8 4] {[5 5 4]}} 8 7) -> {[0 1 7 4] {[5 5 4]}}", "(replacet {} 9 3) -> {}", "(replacet {[]} 2 8) -> {[]}", "(replacet {[2 8] {[]} {[6 3 5]}} 0 5) -> {[2 8] {[]} {[6 3 5]}}", "(replacet {} 5 0) -> {}", "(replacet {} 2 0) -> {}", "(replacet {[] {[9 8]} {[3 6 0 1]}} 7 6) -> {[] {[9 8]} {[3 6 0 1]}}", "(replacet {[5 1 4]} 3 1) -> {[5 1 4]}", "(replacet {[6 1 7] {[4 3]}} 9 2) -> {[6 1 7] {[4 3]}}", "(replacet {[2] {[6 0 8]} {[1 8]}} 1 7) -> {[2] {[6 0 8]} {[7 8]}}", "(replacet {[] {[]} {[4 2 7 4 9]}} 7 3) -> {[] {[]} {[4 2 3 4 9]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.106937, "examples": ["(replacet {} 8 5) -> {}", "(replacet {[7]} 4 0) -> {[7]}", "(replacet {[2 8 2 3] {[9 4 0 3 1] {[3 1]} {[3]}} {[7 9 2 0] {[]} {[6 9]}}} 1 7) -> {[2 8 2 3] {[9 4 0 3 7] {[3 7]} {[3]}} {[7 9 2 0] {[]} {[6 9]}}}", "(replacet {} 0 8) -> {}", "(replacet {[8 7 7 7] {[4] {[3]}} {[0 3 9 7] {[2 8 0 8] {[1]}}}} 9 0) -> {[8 7 7 7] {[4] {[3]}} {[0 3 0 7] {[2 8 0 8] {[1]}}}}", "(replacet {[] {[]} {[2] {[5 1 7 0 6]}}} 4 4) -> {[] {[]} {[2] {[5 1 7 0 6]}}}", "(replacet {[]} 0 7) -> {[]}", "(replacet {[3]} 9 1) -> {[3]}", "(replacet {[2]} 5 9) -> {[2]}", "(replacet {[1 1] {[2 7 2]} {[]}} 0 9) -> {[1 1] {[2 7 2]} {[]}}", "(replacet {[3 4 8] {[4 5 9 0] {[2 9 9 4 6]} {[8 7 8 5]}} {[3 3 4 8] {[2]} {[5]}}} 7 7) -> {[3 4 8] {[4 5 9 0] {[2 9 9 4 6]} {[8 7 8 5]}} {[3 3 4 8] {[2]} {[5]}}}", "(replacet {} 4 4) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.733549, "examples": ["(replacet {} 0 7) -> {}", "(replacet {[7 7] {[]}} 6 3) -> {[7 7] {[]}}", "(replacet {[4 9 1 8] {[7 5 0] {[4 9 1 6 9]} {[1 9]}}} 8 6) -> {[4 9 1 6] {[7 5 0] {[4 9 1 6 9]} {[1 9]}}}", "(replacet {[5 0] {[7]} {[9]}} 4 2) -> {[5 0] {[7]} {[9]}}", "(replacet {[3 8 9 5]} 8 8) -> {[3 8 9 5]}", "(replacet {} 3 2) -> {}", "(replacet {[1]} 7 6) -> {[1]}", "(replacet {[7] {[4 5 0 4] {[7 9 2 8 2]}}} 4 2) -> {[7] {[2 5 0 2] {[7 9 2 8 2]}}}", "(replacet {[9 5 3 6] {[9 2 3] {[9 0]}}} 8 6) -> {[9 5 3 6] {[9 2 3] {[9 0]}}}", "(replacet {[9 6 9] {[8 0 7 2]} {[] {[5 6 3 2 3]}}} 5 2) -> {[9 6 9] {[8 0 7 2]} {[] {[2 6 3 2 3]}}}", "(replacet {} 9 6) -> {}", "(replacet {} 3 9) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.621511, "examples": ["(replacet {} 9 7) -> {}", "(replacet {[7 0] {[9 2 9] {[3 4]} {[9 1 7]}} {[4 7 7 6 8] {[1 1 9]}}} 0 1) -> {[7 1] {[9 2 9] {[3 4]} {[9 1 7]}} {[4 7 7 6 8] {[1 1 9]}}}", "(replacet {[2 4 8 9] {[6 7 6 1]} {[7 5 4]}} 9 0) -> {[2 4 8 0] {[6 7 6 1]} {[7 5 4]}}", "(replacet {[5 5 3 3] {[]} {[6 1]}} 1 7) -> {[5 5 3 3] {[]} {[6 7]}}", "(replacet {[3 6] {[2]} {[1 0 3]}} 6 8) -> {[3 8] {[2]} {[1 0 3]}}", "(replacet {[3 1 1 2] {[1 3 0] {[] {[5 6 6]} {[9 9 1 2]}} {[6 1 4 0] {[0 2 1 7]}}} {[8 2 5] {[6 4]} {[6] {[2 0]} {[2 7]}}}} 3 9) -> {[9 1 1 2] {[1 9 0] {[] {[5 6 6]} {[9 9 1 2]}} {[6 1 4 0] {[0 2 1 7]}}} {[8 2 5] {[6 4]} {[6] {[2 0]} {[2 7]}}}}", "(replacet {[] {[7 3]}} 9 4) -> {[] {[7 3]}}", "(replacet {[8 8] {[] {[0 8 2 7]}}} 4 9) -> {[8 8] {[] {[0 8 2 7]}}}", "(replacet {} 3 3) -> {}", "(replacet {[1 9 9 3 8] {[0 3 7 0]}} 0 4) -> {[1 9 9 3 8] {[4 3 7 4]}}", "(replacet {[2]} 8 0) -> {[2]}", "(replacet {[6 9] {[3 8 4]} {[1 9]}} 3 0) -> {[6 9] {[0 8 4]} {[1 9]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.304686, "examples": ["(replacet {} 7 9) -> {}", "(replacet {[8] {[8 7] {[6 8 9 4] {[4]} {[2 2]}}} {[1]}} 3 3) -> {[8] {[8 7] {[6 8 9 4] {[4]} {[2 2]}}} {[1]}}", "(replacet {} 1 7) -> {}", "(replacet {[4 6 0 7] {[1 4 8]}} 4 9) -> {[9 6 0 7] {[1 9 8]}}", "(replacet {[1 3 5] {[3 4 5 4]} {[4 8]}} 1 3) -> {[3 3 5] {[3 4 5 4]} {[4 8]}}", "(replacet {[4 0 1] {[3 0 5 7 5] {[7 0]} {[6 4 5 1 8]}}} 7 0) -> {[4 0 1] {[3 0 5 0 5] {[0 0]} {[6 4 5 1 8]}}}", "(replacet {[1] {[4 8 7 8]} {[8 0 0 0 4]}} 1 3) -> {[3] {[4 8 7 8]} {[8 0 0 0 4]}}", "(replacet {[1 1 3] {[8 2 3 3] {[1 0 7 5 3]}}} 7 1) -> {[1 1 3] {[8 2 3 3] {[1 0 1 5 3]}}}", "(replacet {[3 0 5] {[5 5 7]}} 3 4) -> {[4 0 5] {[5 5 7]}}", "(replacet {} 0 8) -> {}", "(replacet {[8 4 0 8 6] {[] {[]} {[3 9 9 0]}}} 4 7) -> {[8 7 0 8 6] {[] {[]} {[3 9 9 0]}}}", "(replacet {[2 5 8 5 2] {[]}} 6 0) -> {[2 5 8 5 2] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.5681, "examples": ["(replacet {} 3 7) -> {}", "(replacet {[] {[0 0 7] {[8 5]}}} 7 0) -> {[] {[0 0 0] {[8 5]}}}", "(replacet {[8 5]} 5 9) -> {[8 9]}", "(replacet {[0 9] {[1 7 1 9] {[3 7]}}} 2 6) -> {[0 9] {[1 7 1 9] {[3 7]}}}", "(replacet {} 7 8) -> {}", "(replacet {} 5 9) -> {}", "(replacet {[6 0 9] {[1 1 4 4]} {[9 7]}} 6 5) -> {[5 0 9] {[1 1 4 4]} {[9 7]}}", "(replacet {[1]} 4 7) -> {[1]}", "(replacet {[] {[9 8 9]} {[]}} 4 9) -> {[] {[9 8 9]} {[]}}", "(replacet {[9 7] {[7 9 5] {[4 2]} {[0 0 2]}} {[2 5 0 5 6]}} 5 6) -> {[9 7] {[7 9 6] {[4 2]} {[0 0 2]}} {[2 6 0 6 6]}}", "(replacet {[6 5]} 5 1) -> {[6 1]}", "(replacet {[4 0]} 3 1) -> {[4 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.158778, "examples": ["(replacet {} 0 0) -> {}", "(replacet {[4 5 5 9] {[4 4 2] {[4 0 3 2 5] {[6 8 4 9]}}}} 0 7) -> {[4 5 5 9] {[4 4 2] {[4 7 3 2 5] {[6 8 4 9]}}}}", "(replacet {} 9 4) -> {}", "(replacet {[5 8 3] {[2 0 2 7 0] {[2 0] {[]} {[0 2]}} {[2 2 8] {[3 7]} {[6 4 7 5]}}}} 7 9) -> {[5 8 3] {[2 0 2 9 0] {[2 0] {[]} {[0 2]}} {[2 2 8] {[3 9]} {[6 4 9 5]}}}}", "(replacet {[7 8 8 8 0] {[0 6 2]} {[]}} 8 9) -> {[7 9 9 9 0] {[0 6 2]} {[]}}", "(replacet {[5 5 9 6] {[0 6 4 1 2]}} 0 8) -> {[5 5 9 6] {[8 6 4 1 2]}}", "(replacet {[0 6 1 5 6]} 1 4) -> {[0 6 4 5 6]}", "(replacet {[7] {[] {[7 6 1] {[7 8]}}} {[5 9 3 2 4] {[9 4] {[5 0 0 3]}} {[8 6] {[5 8]} {[7 2 4 5]}}}} 4 0) -> {[7] {[] {[7 6 1] {[7 8]}}} {[5 9 3 2 0] {[9 0] {[5 0 0 3]}} {[8 6] {[5 8]} {[7 2 0 5]}}}}", "(replacet {[6 2 6 2 2] {[]}} 7 1) -> {[6 2 6 2 2] {[]}}", "(replacet {[]} 8 2) -> {[]}", "(replacet {} 3 8) -> {}", "(replacet {[6 3 8 6 1] {[4 3 9 1]}} 6 3) -> {[3 3 8 3 1] {[4 3 9 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.309596, "examples": ["(replacet {} 6 2) -> {}", "(replacet {} 6 2) -> {}", "(replacet {[3 2 9 6 0]} 5 4) -> {[3 2 9 6 0]}", "(replacet {} 2 5) -> {}", "(replacet {[7 1 1 0 7] {[6 1 5 1]} {[9 6] {[2]} {[]}}} 3 4) -> {[7 1 1 0 7] {[6 1 5 1]} {[9 6] {[2]} {[]}}}", "(replacet {[4] {[] {[2 3 6]}} {[6] {[1 2]} {[9]}}} 0 8) -> {[4] {[] {[2 3 6]}} {[6] {[1 2]} {[9]}}}", "(replacet {[] {[7 9 5 7]}} 1 8) -> {[] {[7 9 5 7]}}", "(replacet {[6]} 3 3) -> {[6]}", "(replacet {[7 2 2 5 7] {[4] {[6]}} {[]}} 5 0) -> {[7 2 2 0 7] {[4] {[6]}} {[]}}", "(replacet {} 4 3) -> {}", "(replacet {[0 7 4 4 3]} 9 6) -> {[0 7 4 4 3]}", "(replacet {[]} 3 1) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.095189, "examples": ["(replacet {} 5 0) -> {}", "(replacet {[9 1] {[6 5 3 7]}} 1 1) -> {[9 1] {[6 5 3 7]}}", "(replacet {[2] {[5] {[] {[7]} {[1 2 4]}} {[] {[5 7]}}}} 7 3) -> {[2] {[5] {[] {[3]} {[1 2 4]}} {[] {[5 3]}}}}", "(replacet {[] {[8 8 5]} {[7 0 5 0]}} 6 0) -> {[] {[8 8 5]} {[7 0 5 0]}}", "(replacet {[6 2] {[6]}} 3 9) -> {[6 2] {[6]}}", "(replacet {} 2 2) -> {}", "(replacet {[9 4] {[4 0 1 3 9] {[4]} {[] {[]}}}} 0 8) -> {[9 4] {[4 8 1 3 9] {[4]} {[] {[]}}}}", "(replacet {[6] {[3 6 1 8 0] {[2 6 1] {[9 4 1 3]}} {[] {[2 5 2 3 0]}}} {[6 7 9 4] {[] {[0 9 9]} {[4 8 3 3]}} {[1 7 9] {[1 1 4 2 4]} {[]}}}} 8 9) -> {[6] {[3 6 1 9 0] {[2 6 1] {[9 4 1 3]}} {[] {[2 5 2 3 0]}}} {[6 7 9 4] {[] {[0 9 9]} {[4 9 3 3]}} {[1 7 9] {[1 1 4 2 4]} {[]}}}}", "(replacet {[3 9]} 1 3) -> {[3 9]}", "(replacet {} 4 6) -> {}", "(replacet {[9 4 8 0]} 2 9) -> {[9 4 8 0]}", "(replacet {} 3 9) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.532205, "examples": ["(replacet {} 1 4) -> {}", "(replacet {[4]} 0 3) -> {[4]}", "(replacet {[7 0]} 6 0) -> {[7 0]}", "(replacet {[4 1 6] {[3 5 1]} {[5 4 8 3 7] {[] {[9 4 8 4]}} {[6] {[7 2 8 8]} {[]}}}} 0 2) -> {[4 1 6] {[3 5 1]} {[5 4 8 3 7] {[] {[9 4 8 4]}} {[6] {[7 2 8 8]} {[]}}}}", "(replacet {[5 2 3 5 5] {[4 4 7 2 4]} {[2 7 4 0 9] {[7 8]} {[] {[3 5 8 9]} {[4 5]}}}} 9 3) -> {[5 2 3 5 5] {[4 4 7 2 4]} {[2 7 4 0 3] {[7 8]} {[] {[3 5 8 3]} {[4 5]}}}}", "(replacet {[2]} 9 0) -> {[2]}", "(replacet {} 5 9) -> {}", "(replacet {[7 8 8] {[]}} 3 7) -> {[7 8 8] {[]}}", "(replacet {[4 3 1 1 9]} 6 7) -> {[4 3 1 1 9]}", "(replacet {[7 4 0 7]} 0 0) -> {[7 4 0 7]}", "(replacet {[0 3 4 1 3]} 3 5) -> {[0 5 4 1 5]}", "(replacet {[1 1 4 0 0] {[] {[8 1 5 5 3] {[5 5 6 1]}} {[1 7 3 1 5] {[9 8 2 3 8]}}} {[9]}} 3 3) -> {[1 1 4 0 0] {[] {[8 1 5 5 3] {[5 5 6 1]}} {[1 7 3 1 5] {[9 8 2 3 8]}}} {[9]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.914542, "examples": ["(replacet {} 0 7) -> {}", "(replacet {[1] {[8 5 3] {[2]} {[9]}} {[9 1 2 9]}} 0 8) -> {[1] {[8 5 3] {[2]} {[9]}} {[9 1 2 9]}}", "(replacet {} 5 9) -> {}", "(replacet {[8] {[8 0 4 5 9] {[7 3 4 1]} {[] {[5 1 2 5 2]} {[8]}}} {[3 5 5 4] {[8 7 6 4] {[]}}}} 3 8) -> {[8] {[8 0 4 5 9] {[7 8 4 1]} {[] {[5 1 2 5 2]} {[8]}}} {[8 5 5 4] {[8 7 6 4] {[]}}}}", "(replacet {} 8 4) -> {}", "(replacet {[2]} 3 8) -> {[2]}", "(replacet {[7]} 7 9) -> {[9]}", "(replacet {[7 7 5 0]} 6 0) -> {[7 7 5 0]}", "(replacet {[]} 0 8) -> {[]}", "(replacet {[3 2 0 0 2] {[6] {[9 3 8 5 3]} {[5]}}} 1 4) -> {[3 2 0 0 2] {[6] {[9 3 8 5 3]} {[5]}}}", "(replacet {[5 6 4] {[3 4 9 6]}} 5 7) -> {[7 6 4] {[3 4 9 6]}}", "(replacet {[2 5 0 6 1] {[6 7 9] {[]}}} 9 4) -> {[2 5 0 6 1] {[6 7 4] {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.74971, "examples": ["(replacet {} 5 7) -> {}", "(replacet {[] {[] {[9 9]}}} 8 2) -> {[] {[] {[9 9]}}}", "(replacet {} 0 0) -> {}", "(replacet {[5]} 8 6) -> {[5]}", "(replacet {[3 4 3 4 2]} 7 3) -> {[3 4 3 4 2]}", "(replacet {[6 9 3] {[9 7 4 3 1]}} 3 3) -> {[6 9 3] {[9 7 4 3 1]}}", "(replacet {} 6 8) -> {}", "(replacet {[3 7]} 9 6) -> {[3 7]}", "(replacet {[4] {[2 0 9 1]} {[7 8 7 0 6]}} 8 2) -> {[4] {[2 0 9 1]} {[7 2 7 0 6]}}", "(replacet {} 7 6) -> {}", "(replacet {[6 1] {[1 8 4 2 5] {[5] {[]}}} {[4 3]}} 9 5) -> {[6 1] {[1 8 4 2 5] {[5] {[]}}} {[4 3]}}", "(replacet {} 7 3) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.693664, "examples": ["(replacet {} 9 3) -> {}", "(replacet {[8 3 5 9] {[7 9 2]} {[] {[6 1 9 4 9] {[6]}}}} 2 2) -> {[8 3 5 9] {[7 9 2]} {[] {[6 1 9 4 9] {[6]}}}}", "(replacet {} 0 7) -> {}", "(replacet {[6 6 6 7 5]} 5 9) -> {[6 6 6 7 9]}", "(replacet {[6 2]} 7 7) -> {[6 2]}", "(replacet {} 2 0) -> {}", "(replacet {[0] {[2]}} 8 3) -> {[0] {[2]}}", "(replacet {[3] {[]}} 0 1) -> {[3] {[]}}", "(replacet {[0] {[0 6]}} 6 0) -> {[0] {[0 0]}}", "(replacet {[6 9 6 4] {[9 3] {[]}}} 4 5) -> {[6 9 6 5] {[9 3] {[]}}}", "(replacet {} 1 3) -> {}", "(replacet {[8 6 7 5]} 5 2) -> {[8 6 7 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.184396, "examples": ["(replacet {} 0 3) -> {}", "(replacet {} 3 4) -> {}", "(replacet {[1] {[] {[4 0]} {[9 0 7]}}} 4 0) -> {[1] {[] {[0 0]} {[9 0 7]}}}", "(replacet {[3 7] {[3]}} 3 7) -> {[7 7] {[7]}}", "(replacet {[7 0]} 0 8) -> {[7 8]}", "(replacet {[3 5 1 5 3] {[7 0 9 8 9]}} 1 8) -> {[3 5 8 5 3] {[7 0 9 8 9]}}", "(replacet {} 1 4) -> {}", "(replacet {[] {[5]} {[2 0 9 3]}} 8 5) -> {[] {[5]} {[2 0 9 3]}}", "(replacet {[] {[]}} 7 9) -> {[] {[]}}", "(replacet {[] {[]}} 0 2) -> {[] {[]}}", "(replacet {} 9 6) -> {}", "(replacet {} 4 2) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.114836, "examples": ["(replacet {} 7 0) -> {}", "(replacet {[3 5 9 5] {[]}} 9 7) -> {[3 5 7 5] {[]}}", "(replacet {[6 8 8 6 9]} 3 8) -> {[6 8 8 6 9]}", "(replacet {} 2 3) -> {}", "(replacet {} 2 7) -> {}", "(replacet {[] {[7 9] {[]}} {[3 5]}} 7 8) -> {[] {[8 9] {[]}} {[3 5]}}", "(replacet {[9 6 9 2] {[7 2 7]} {[7 7 0 3]}} 3 4) -> {[9 6 9 2] {[7 2 7]} {[7 7 0 4]}}", "(replacet {[3]} 0 4) -> {[3]}", "(replacet {} 1 4) -> {}", "(replacet {[5 9 7 5 8] {[3 7 9] {[0 3 6 9 7] {[4 1 3]} {[0 5]}}} {[3 0 9 4] {[8 0 8]}}} 0 8) -> {[5 9 7 5 8] {[3 7 9] {[8 3 6 9 7] {[4 1 3]} {[8 5]}}} {[3 8 9 4] {[8 8 8]}}}", "(replacet {} 9 7) -> {}", "(replacet {[] {[]}} 7 5) -> {[] {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.002442, "examples": ["(replacet {} 4 6) -> {}", "(replacet {[0 7] {[] {[8 2 7 1 6]}}} 4 6) -> {[0 7] {[] {[8 2 7 1 6]}}}", "(replacet {[6 0 7] {[3 6 3 4] {[3]}}} 7 6) -> {[6 0 6] {[3 6 3 4] {[3]}}}", "(replacet {} 5 7) -> {}", "(replacet {[] {[9 6]}} 5 4) -> {[] {[9 6]}}", "(replacet {} 5 6) -> {}", "(replacet {[] {[7 9 6 0 9] {[5 5 1 4]}}} 2 2) -> {[] {[7 9 6 0 9] {[5 5 1 4]}}}", "(replacet {[5 2 9 5]} 5 2) -> {[2 2 9 2]}", "(replacet {[]} 1 2) -> {[]}", "(replacet {[8 0 2]} 8 5) -> {[5 0 2]}", "(replacet {[8 6 7]} 2 9) -> {[8 6 7]}", "(replacet {[1 7 9]} 7 4) -> {[1 4 9]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 15.930369, "examples": ["(replacet {} 2 0) -> {}", "(replacet {[7 1 0 3 8] {[3 2 5 8] {[8 8 4 6] {[7]}} {[5 1 1] {[]}}}} 1 1) -> {[7 1 0 3 8] {[3 2 5 8] {[8 8 4 6] {[7]}} {[5 1 1] {[]}}}}", "(replacet {} 6 6) -> {}", "(replacet {[3 5]} 1 8) -> {[3 5]}", "(replacet {[5 0 7] {[9 9 1 9] {[6 5]}} {[0 0] {[1 2 4] {[5 8 8 0 7]} {[]}}}} 2 1) -> {[5 0 7] {[9 9 1 9] {[6 5]}} {[0 0] {[1 1 4] {[5 8 8 0 7]} {[]}}}}", "(replacet {[5 7] {[4 9] {[5]}}} 9 0) -> {[5 7] {[4 0] {[5]}}}", "(replacet {[2 4] {[7]} {[0 6]}} 4 5) -> {[2 5] {[7]} {[0 6]}}", "(replacet {[6 7 5]} 4 9) -> {[6 7 5]}", "(replacet {[4 5 5 3]} 5 5) -> {[4 5 5 3]}", "(replacet {} 0 2) -> {}", "(replacet {[5] {[5 3 2 0] {[6 3 4 8 0]}}} 2 6) -> {[5] {[5 3 6 0] {[6 3 4 8 0]}}}", "(replacet {} 0 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.956673, "examples": ["(replacet {} 6 4) -> {}", "(replacet {[] {[5] {[1 3 2]}} {[2 5 8 6]}} 2 3) -> {[] {[5] {[1 3 3]}} {[3 5 8 6]}}", "(replacet {[5]} 8 5) -> {[5]}", "(replacet {} 8 0) -> {}", "(replacet {[7 8 3]} 7 0) -> {[0 8 3]}", "(replacet {[6 0 5] {[] {[7 3 5 3 5] {[2 7 7 1 8]} {[8 8 4 3 1]}} {[4] {[6 5]}}} {[] {[7] {[4 7 4 3 2]} {[1 6 0 3 9]}} {[8 2] {[7]} {[1 6 9 4 6]}}}} 6 2) -> {[2 0 5] {[] {[7 3 5 3 5] {[2 7 7 1 8]} {[8 8 4 3 1]}} {[4] {[2 5]}}} {[] {[7] {[4 7 4 3 2]} {[1 2 0 3 9]}} {[8 2] {[7]} {[1 2 9 4 2]}}}}", "(replacet {[4 8 3 0] {[]} {[4 6]}} 9 5) -> {[4 8 3 0] {[]} {[4 6]}}", "(replacet {[1]} 4 8) -> {[1]}", "(replacet {[] {[] {[]}} {[4 3 3 0] {[0 2]} {[1]}}} 9 1) -> {[] {[] {[]}} {[4 3 3 0] {[0 2]} {[1]}}}", "(replacet {[7 8 2 0 2]} 0 7) -> {[7 8 2 7 2]}", "(replacet {[8 0 2 5 7]} 7 5) -> {[8 0 2 5 5]}", "(replacet {[8 6 8 6 7] {[6 0] {[0 5 9 7 8] {[2]}} {[] {[8 9 8]} {[8 2 9 6 1]}}} {[2]}} 2 8) -> {[8 6 8 6 7] {[6 0] {[0 5 9 7 8] {[8]}} {[] {[8 9 8]} {[8 8 9 6 1]}}} {[8]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 0.000767, "examples": ["(replacet {} 2 0) -> {}", "(replacet {[6] {[]} {[3 3]}} 9 1) -> {[6] {[]} {[3 3]}}", "(replacet {} 4 0) -> {}", "(replacet {[] {[2 1 2 3]}} 5 4) -> {[] {[2 1 2 3]}}", "(replacet {[] {[5 9 7]}} 3 9) -> {[] {[5 9 7]}}", "(replacet {[3 6 0 5 3] {[3 7 9 4]} {[1 0]}} 8 3) -> {[3 6 0 5 3] {[3 7 9 4]} {[1 0]}}", "(replacet {[2 7 8 4] {[7 5 7 0 0]}} 1 6) -> {[2 7 8 4] {[7 5 7 0 0]}}", "(replacet {} 5 4) -> {}", "(replacet {[0 0] {[]} {[0 1 8]}} 6 3) -> {[0 0] {[]} {[0 1 8]}}", "(replacet {[]} 4 5) -> {[]}", "(replacet {} 7 5) -> {}", "(replacet {[8] {[9 7 9]}} 0 1) -> {[8] {[9 7 9]}}"], "solution": "(let replacet (let a (lambda (d c b) d) _) _)", "name": "replacet"}
{"time": 11.434828, "examples": ["(replacet {} 3 2) -> {}", "(replacet {[3 9 2 2] {[9 3 6 8]}} 0 1) -> {[3 9 2 2] {[9 3 6 8]}}", "(replacet {[5 5] {[0 8 4]} {[]}} 2 1) -> {[5 5] {[0 8 4]} {[]}}", "(replacet {[6 5 0]} 3 0) -> {[6 5 0]}", "(replacet {} 6 2) -> {}", "(replacet {} 1 2) -> {}", "(replacet {} 8 4) -> {}", "(replacet {[3 7 8 0] {[5] {[]}}} 6 5) -> {[3 7 8 0] {[5] {[]}}}", "(replacet {[4] {[6 7 3 0 8]}} 9 9) -> {[4] {[6 7 3 0 8]}}", "(replacet {[9 7 6 2] {[1 0 7 7 7]} {[3 8]}} 0 7) -> {[9 7 6 2] {[1 7 7 7 7]} {[3 8]}}", "(replacet {[4 1 0]} 2 5) -> {[4 1 0]}", "(replacet {[]} 6 4) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.576303, "examples": ["(replacet {} 2 9) -> {}", "(replacet {} 5 4) -> {}", "(replacet {[5] {[1 3]}} 8 8) -> {[5] {[1 3]}}", "(replacet {[9 0 2 2] {[5 7 7 1 4]} {[2 7 3 6 8]}} 1 6) -> {[9 0 2 2] {[5 7 7 6 4]} {[2 7 3 6 8]}}", "(replacet {[4 8 3 7]} 3 1) -> {[4 8 1 7]}", "(replacet {[2 6 3] {[]}} 1 4) -> {[2 6 3] {[]}}", "(replacet {[2 3 7 8 5]} 9 5) -> {[2 3 7 8 5]}", "(replacet {} 4 2) -> {}", "(replacet {[5 9 1 4] {[1 9 3] {[5 6 3 6]} {[1]}} {[6 1 3] {[8 4 9]} {[3 3 0 4 5]}}} 7 9) -> {[5 9 1 4] {[1 9 3] {[5 6 3 6]} {[1]}} {[6 1 3] {[8 4 9]} {[3 3 0 4 5]}}}", "(replacet {} 4 3) -> {}", "(replacet {[7] {[9 5 3 4 7]} {[4 9 5 2 4]}} 4 3) -> {[7] {[9 5 3 3 7]} {[3 9 5 2 3]}}", "(replacet {[1 3 1]} 3 1) -> {[1 1 1]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 13.163326, "examples": ["(replacet {} 6 7) -> {}", "(replacet {} 1 2) -> {}", "(replacet {[3 6] {[6 9 6 6 0]}} 4 7) -> {[3 6] {[6 9 6 6 0]}}", "(replacet {[] {[9 9 9 0 7] {[6] {[]}} {[1] {[6 6]} {[]}}}} 4 9) -> {[] {[9 9 9 0 7] {[6] {[]}} {[1] {[6 6]} {[]}}}}", "(replacet {[3 9 9] {[]}} 6 2) -> {[3 9 9] {[]}}", "(replacet {[6 1] {[1 6 0 0] {[1]} {[8] {[]}}} {[8 9] {[3 5 6 4 2] {[7]} {[1 4]}} {[8] {[3]}}}} 3 0) -> {[6 1] {[1 6 0 0] {[1]} {[8] {[]}}} {[8 9] {[0 5 6 4 2] {[7]} {[1 4]}} {[8] {[0]}}}}", "(replacet {[7 1 8 9] {[3 2 0 2 4]}} 1 0) -> {[7 0 8 9] {[3 2 0 2 4]}}", "(replacet {[]} 5 2) -> {[]}", "(replacet {[9 6] {[]} {[1 9 1 0]}} 4 0) -> {[9 6] {[]} {[1 9 1 0]}}", "(replacet {[9 5] {[6 3] {[2 9 8] {[7]}}}} 8 6) -> {[9 5] {[6 3] {[2 9 6] {[7]}}}}", "(replacet {[2 0 7] {[3 3 7 2 9]} {[] {[4 2 6 8]}}} 2 6) -> {[6 0 7] {[3 3 7 6 9]} {[] {[4 6 6 8]}}}", "(replacet {} 4 2) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 12.183151, "examples": ["(replacet {} 9 2) -> {}", "(replacet {} 2 9) -> {}", "(replacet {[1 1 7 9 0] {[6 8]} {[5 3 6 3 0] {[8 9 3 4]}}} 6 4) -> {[1 1 7 9 0] {[4 8]} {[5 3 4 3 0] {[8 9 3 4]}}}", "(replacet {} 1 1) -> {}", "(replacet {[]} 9 1) -> {[]}", "(replacet {[]} 3 5) -> {[]}", "(replacet {[4 6]} 9 7) -> {[4 6]}", "(replacet {[8 2 8 0 1]} 9 3) -> {[8 2 8 0 1]}", "(replacet {[8 9 5 8 4] {[0]} {[4 6 0 3 8]}} 8 7) -> {[7 9 5 7 4] {[0]} {[4 6 0 3 7]}}", "(replacet {[1 8] {[5 1 7] {[9 9 3]}}} 2 7) -> {[1 8] {[5 1 7] {[9 9 3]}}}", "(replacet {[7 6 5 7]} 5 4) -> {[7 6 4 7]}", "(replacet {} 0 7) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.774114, "examples": ["(replacet {} 6 5) -> {}", "(replacet {[2 0 6 4] {[4 2 8] {[8 1]}}} 9 1) -> {[2 0 6 4] {[4 2 8] {[8 1]}}}", "(replacet {} 9 2) -> {}", "(replacet {} 3 2) -> {}", "(replacet {[6 8 7 5 2]} 3 6) -> {[6 8 7 5 2]}", "(replacet {[] {[3 7 2 7] {[3 8 9]}}} 5 5) -> {[] {[3 7 2 7] {[3 8 9]}}}", "(replacet {[6 0] {[8]}} 4 3) -> {[6 0] {[8]}}", "(replacet {} 8 2) -> {}", "(replacet {[9 2 4 8] {[]} {[3 3 2 5]}} 1 5) -> {[9 2 4 8] {[]} {[3 3 2 5]}}", "(replacet {[8] {[7 1 4]}} 4 6) -> {[8] {[7 1 6]}}", "(replacet {} 3 4) -> {}", "(replacet {} 2 1) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 16.086637, "examples": ["(replacet {} 7 4) -> {}", "(replacet {[1 3 6 4] {[2] {[6 8 2] {[7 6]} {[0 6 2 3 6]}}}} 7 7) -> {[1 3 6 4] {[2] {[6 8 2] {[7 6]} {[0 6 2 3 6]}}}}", "(replacet {} 7 1) -> {}", "(replacet {[8 5 5 5 0]} 6 2) -> {[8 5 5 5 0]}", "(replacet {} 4 3) -> {}", "(replacet {} 7 4) -> {}", "(replacet {} 9 2) -> {}", "(replacet {[1 9 5 6] {[7 5 4 6 6] {[8 7 2 2 7]} {[]}}} 7 1) -> {[1 9 5 6] {[1 5 4 6 6] {[8 1 2 2 1]} {[]}}}", "(replacet {} 8 1) -> {}", "(replacet {} 1 8) -> {}", "(replacet {[]} 1 2) -> {[]}", "(replacet {[]} 4 8) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.11382, "examples": ["(replacet {} 3 2) -> {}", "(replacet {[0]} 2 5) -> {[0]}", "(replacet {[0 7 8] {[]} {[4 2 1 1]}} 4 8) -> {[0 7 8] {[]} {[8 2 1 1]}}", "(replacet {[] {[4 0 3 5 2] {[4 8] {[0 0]}}} {[3]}} 3 0) -> {[] {[4 0 0 5 2] {[4 8] {[0 0]}}} {[0]}}", "(replacet {[1 4 7 7 3] {[1 4 3 6]} {[0 7 4 9 3]}} 5 2) -> {[1 4 7 7 3] {[1 4 3 6]} {[0 7 4 9 3]}}", "(replacet {[6 7 2 0] {[0 9 4 8 6] {[1 6 6 8]} {[]}} {[9 8] {[5]} {[2 8 1 8]}}} 4 3) -> {[6 7 2 0] {[0 9 3 8 6] {[1 6 6 8]} {[]}} {[9 8] {[5]} {[2 8 1 8]}}}", "(replacet {[7 4 2 1 9]} 2 8) -> {[7 4 8 1 9]}", "(replacet {[0 2]} 8 6) -> {[0 2]}", "(replacet {[7 7 3 6 5] {[2 2 3 3] {[3 3 7 5]}} {[8 4] {[0 7 8 5]} {[5 2 6 8]}}} 6 4) -> {[7 7 3 4 5] {[2 2 3 3] {[3 3 7 5]}} {[8 4] {[0 7 8 5]} {[5 2 4 8]}}}", "(replacet {[]} 6 4) -> {[]}", "(replacet {[5 2 9 4] {[6 4] {[6]}} {[5] {[]} {[2 3 3 4 8]}}} 7 2) -> {[5 2 9 4] {[6 4] {[6]}} {[5] {[]} {[2 3 3 4 8]}}}", "(replacet {} 7 8) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.56057, "examples": ["(replacet {} 2 2) -> {}", "(replacet {} 4 6) -> {}", "(replacet {[1] {[7 5 1 7]} {[8 4]}} 0 2) -> {[1] {[7 5 1 7]} {[8 4]}}", "(replacet {[5] {[]}} 9 1) -> {[5] {[]}}", "(replacet {[7]} 9 8) -> {[7]}", "(replacet {[9 4] {[4 5 5] {[2 4 1 6 9] {[3 0 0 5 1]}} {[8 0 2 3]}}} 0 6) -> {[9 4] {[4 5 5] {[2 4 1 6 9] {[3 6 6 5 1]}} {[8 6 2 3]}}}", "(replacet {[8]} 2 3) -> {[8]}", "(replacet {[8 5 3] {[2 4 2 4 8] {[0 8]} {[7 4]}}} 8 8) -> {[8 5 3] {[2 4 2 4 8] {[0 8]} {[7 4]}}}", "(replacet {[5] {[5 8]}} 0 3) -> {[5] {[5 8]}}", "(replacet {[4] {[0 3 9 1 2] {[4]}} {[7 8 5 7 3] {[6 9 3 0 4]}}} 9 1) -> {[4] {[0 3 1 1 2] {[4]}} {[7 8 5 7 3] {[6 1 3 0 4]}}}", "(replacet {} 9 8) -> {}", "(replacet {[] {[8 6]} {[]}} 8 1) -> {[] {[1 6]} {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.149039, "examples": ["(replacet {} 2 9) -> {}", "(replacet {[3 9 3]} 8 8) -> {[3 9 3]}", "(replacet {} 9 1) -> {}", "(replacet {[5] {[9 7 1 1] {[]}}} 1 7) -> {[5] {[9 7 7 7] {[]}}}", "(replacet {[7 0 0 2 7] {[6 1] {[0] {[]} {[3]}}} {[]}} 0 9) -> {[7 9 9 2 7] {[6 1] {[9] {[]} {[3]}}} {[]}}", "(replacet {[5 8 1 3] {[8]} {[6 9]}} 4 9) -> {[5 8 1 3] {[8]} {[6 9]}}", "(replacet {[7 7 4] {[1 6 3]}} 3 2) -> {[7 7 4] {[1 6 2]}}", "(replacet {[4]} 9 0) -> {[4]}", "(replacet {[] {[5 7 8] {[6 4 0 3]}} {[9 4]}} 6 5) -> {[] {[5 7 8] {[5 4 0 3]}} {[9 4]}}", "(replacet {} 5 1) -> {}", "(replacet {[1 3] {[5 7 8 4] {[8] {[]} {[3]}}}} 9 6) -> {[1 3] {[5 7 8 4] {[8] {[]} {[3]}}}}", "(replacet {[]} 4 5) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.907582, "examples": ["(replacet {} 9 3) -> {}", "(replacet {[9 3 1 5]} 9 4) -> {[4 3 1 5]}", "(replacet {} 1 8) -> {}", "(replacet {[1 3] {[3 2 2 7]}} 5 7) -> {[1 3] {[3 2 2 7]}}", "(replacet {[] {[5 9 4 4]}} 5 6) -> {[] {[6 9 4 4]}}", "(replacet {[8 1 3 3 0] {[9 4 5 6 2] {[4 3 9 7 9]} {[5 0 0 6 3]}} {[]}} 8 4) -> {[4 1 3 3 0] {[9 4 5 6 2] {[4 3 9 7 9]} {[5 0 0 6 3]}} {[]}}", "(replacet {[] {[9 7 8 8]} {[7 0 2] {[3 5 1 2 5]}}} 5 8) -> {[] {[9 7 8 8]} {[7 0 2] {[3 8 1 2 8]}}}", "(replacet {[5 3 2 7 9] {[3 8 6 7 1]}} 6 6) -> {[5 3 2 7 9] {[3 8 6 7 1]}}", "(replacet {[] {[6 9 0]}} 8 2) -> {[] {[6 9 0]}}", "(replacet {[6 2]} 9 4) -> {[6 2]}", "(replacet {[9 1] {[]} {[1 0 4]}} 9 6) -> {[6 1] {[]} {[1 0 4]}}", "(replacet {} 3 5) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.819319, "examples": ["(replacet {} 3 8) -> {}", "(replacet {[5 3 1]} 6 6) -> {[5 3 1]}", "(replacet {[6 5 6 6 5]} 7 7) -> {[6 5 6 6 5]}", "(replacet {} 4 8) -> {}", "(replacet {[9 1] {[] {[2 5 1 7 4]} {[9 9 0 0 4] {[8 7 2 8 5]}}}} 3 3) -> {[9 1] {[] {[2 5 1 7 4]} {[9 9 0 0 4] {[8 7 2 8 5]}}}}", "(replacet {} 1 5) -> {}", "(replacet {[6 0 7] {[] {[6 4 6 8 7]}} {[] {[]}}} 6 9) -> {[9 0 7] {[] {[9 4 9 8 7]}} {[] {[]}}}", "(replacet {[3 7 2 1]} 1 1) -> {[3 7 2 1]}", "(replacet {[4 3] {[9] {[3 2 6 1]} {[]}} {[4 1 8 3]}} 8 9) -> {[4 3] {[9] {[3 2 6 1]} {[]}} {[4 1 9 3]}}", "(replacet {[7 5 6] {[2 4]}} 5 9) -> {[7 9 6] {[2 4]}}", "(replacet {[2 0 0] {[5 2 2]} {[8 1 0]}} 8 4) -> {[2 0 0] {[5 2 2]} {[4 1 0]}}", "(replacet {} 4 3) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.231345, "examples": ["(replacet {} 8 3) -> {}", "(replacet {[6 5 7 9]} 4 6) -> {[6 5 7 9]}", "(replacet {[0] {[3]} {[]}} 0 1) -> {[1] {[3]} {[]}}", "(replacet {} 9 6) -> {}", "(replacet {[8] {[7 6 2]}} 1 5) -> {[8] {[7 6 2]}}", "(replacet {[6] {[1 2 2 0 9] {[1 3 5 4 5]} {[9 0 5]}}} 8 9) -> {[6] {[1 2 2 0 9] {[1 3 5 4 5]} {[9 0 5]}}}", "(replacet {} 7 4) -> {}", "(replacet {[2 0] {[]} {[]}} 1 4) -> {[2 0] {[]} {[]}}", "(replacet {[7 8 3 0 6]} 8 8) -> {[7 8 3 0 6]}", "(replacet {} 7 2) -> {}", "(replacet {[0 9 8 3 6] {[4 5 6]} {[2 6 9 1]}} 3 5) -> {[0 9 8 5 6] {[4 5 6]} {[2 6 9 1]}}", "(replacet {[]} 7 5) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 17.393842, "examples": ["(replacet {} 3 0) -> {}", "(replacet {} 5 8) -> {}", "(replacet {} 4 0) -> {}", "(replacet {} 5 8) -> {}", "(replacet {[1 9 4 7 8] {[3 0 3]} {[9 9] {[9] {[]}} {[3 8 9 4] {[9 2 4 1]} {[6]}}}} 2 2) -> {[1 9 4 7 8] {[3 0 3]} {[9 9] {[9] {[]}} {[3 8 9 4] {[9 2 4 1]} {[6]}}}}", "(replacet {[] {[2 7]} {[3 1 4 3 7]}} 9 2) -> {[] {[2 7]} {[3 1 4 3 7]}}", "(replacet {[5 4] {[6] {[]} {[2 0 2 8]}}} 7 7) -> {[5 4] {[6] {[]} {[2 0 2 8]}}}", "(replacet {} 1 5) -> {}", "(replacet {} 6 7) -> {}", "(replacet {[3 6 4 9]} 2 1) -> {[3 6 4 9]}", "(replacet {} 8 5) -> {}", "(replacet {[6] {[]} {[6 7] {[1 1 8 4 1]}}} 4 6) -> {[6] {[]} {[6 7] {[1 1 8 6 1]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.022774, "examples": ["(replacet {} 1 0) -> {}", "(replacet {} 2 0) -> {}", "(replacet {} 6 7) -> {}", "(replacet {[]} 6 9) -> {[]}", "(replacet {[1 5 9 0]} 8 9) -> {[1 5 9 0]}", "(replacet {} 3 8) -> {}", "(replacet {[7 1 4]} 7 4) -> {[4 1 4]}", "(replacet {} 8 7) -> {}", "(replacet {[6 1 2 1] {[]} {[4 5] {[8 4]} {[0 6 0 2]}}} 9 5) -> {[6 1 2 1] {[]} {[4 5] {[8 4]} {[0 6 0 2]}}}", "(replacet {[1] {[2 1 2 6 3] {[4 6 6] {[9]} {[0 1 4 2]}}}} 3 6) -> {[1] {[2 1 2 6 6] {[4 6 6] {[9]} {[0 1 4 2]}}}}", "(replacet {[9 3 9 5] {[9]} {[7 0 7 2]}} 1 2) -> {[9 3 9 5] {[9]} {[7 0 7 2]}}", "(replacet {[1 7 0 0 8] {[9 5]}} 9 0) -> {[1 7 0 0 8] {[0 5]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.139587, "examples": ["(replacet {} 7 9) -> {}", "(replacet {[2 9] {[8]}} 7 9) -> {[2 9] {[8]}}", "(replacet {[0 2 4]} 2 2) -> {[0 2 4]}", "(replacet {} 5 9) -> {}", "(replacet {[] {[2 9 6]} {[1]}} 4 7) -> {[] {[2 9 6]} {[1]}}", "(replacet {[9 7 0]} 5 8) -> {[9 7 0]}", "(replacet {} 6 0) -> {}", "(replacet {} 4 0) -> {}", "(replacet {} 5 5) -> {}", "(replacet {[1 6 6 1 7] {[8]} {[]}} 6 9) -> {[1 9 9 1 7] {[8]} {[]}}", "(replacet {} 9 5) -> {}", "(replacet {[2 8 5 2] {[]} {[2 8]}} 1 7) -> {[2 8 5 2] {[]} {[2 8]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.379089, "examples": ["(replacet {} 2 5) -> {}", "(replacet {[9 0 2 0]} 7 7) -> {[9 0 2 0]}", "(replacet {[6 8 8 1] {[6 2 9 1 5]}} 0 6) -> {[6 8 8 1] {[6 2 9 1 5]}}", "(replacet {} 8 0) -> {}", "(replacet {[]} 3 3) -> {[]}", "(replacet {[4 2 4 4 2] {[3 6] {[8 0 3 6] {[3 5]} {[9 8 9 7 5]}} {[]}}} 7 8) -> {[4 2 4 4 2] {[3 6] {[8 0 3 6] {[3 5]} {[9 8 9 8 5]}} {[]}}}", "(replacet {} 5 4) -> {}", "(replacet {[3 9 4 6] {[4 5]}} 3 6) -> {[6 9 4 6] {[4 5]}}", "(replacet {[4 7 0 9 4]} 4 2) -> {[2 7 0 9 2]}", "(replacet {[1 9 4 9] {[] {[6 0]}} {[6 1 8 0] {[]} {[0 8 8 7]}}} 0 3) -> {[1 9 4 9] {[] {[6 3]}} {[6 1 8 3] {[]} {[3 8 8 7]}}}", "(replacet {[5 4 6]} 0 2) -> {[5 4 6]}", "(replacet {[2 7]} 5 1) -> {[2 7]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.926842, "examples": ["(replacet {} 5 1) -> {}", "(replacet {} 3 6) -> {}", "(replacet {[2 2] {[8 4 6 9 0]}} 2 7) -> {[7 7] {[8 4 6 9 0]}}", "(replacet {[7 8]} 9 8) -> {[7 8]}", "(replacet {[] {[7 9 4 7 2] {[8 6 9 9 1] {[0]} {[]}} {[] {[]}}} {[7 5 3 4 0] {[]}}} 5 8) -> {[] {[7 9 4 7 2] {[8 6 9 9 1] {[0]} {[]}} {[] {[]}}} {[7 8 3 4 0] {[]}}}", "(replacet {} 6 4) -> {}", "(replacet {[1 9] {[0 2 1]}} 7 1) -> {[1 9] {[0 2 1]}}", "(replacet {[6 9 9 8] {[8 5 6] {[1]}}} 5 3) -> {[6 9 9 8] {[8 3 6] {[1]}}}", "(replacet {[8 0] {[3]} {[5 7 2 7 1]}} 1 5) -> {[8 0] {[3]} {[5 7 2 7 5]}}", "(replacet {[9 4 8 6 4]} 1 7) -> {[9 4 8 6 4]}", "(replacet {} 0 9) -> {}", "(replacet {[] {[] {[]}}} 8 5) -> {[] {[] {[]}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.286828, "examples": ["(replacet {} 6 4) -> {}", "(replacet {[]} 8 8) -> {[]}", "(replacet {[4 9 7 0] {[]}} 0 7) -> {[4 9 7 7] {[]}}", "(replacet {[9 7 4 5]} 0 6) -> {[9 7 4 5]}", "(replacet {[7 0 5] {[3 0 4 0] {[0 5 7 8] {[]}}}} 2 5) -> {[7 0 5] {[3 0 4 0] {[0 5 7 8] {[]}}}}", "(replacet {[6 6 9 4] {[6 0 7] {[6]}}} 5 8) -> {[6 6 9 4] {[6 0 7] {[6]}}}", "(replacet {[1 5]} 7 3) -> {[1 5]}", "(replacet {[0 9 4] {[5 2 9 8] {[2 6] {[2 2 6 8 4]} {[3 4 3]}} {[8]}} {[8 2 2] {[6 7 9 5] {[9 5]} {[7 3 4 2 2]}} {[9 0] {[0]} {[9]}}}} 2 1) -> {[0 9 4] {[5 1 9 8] {[1 6] {[1 1 6 8 4]} {[3 4 3]}} {[8]}} {[8 1 1] {[6 7 9 5] {[9 5]} {[7 3 4 1 1]}} {[9 0] {[0]} {[9]}}}}", "(replacet {} 6 9) -> {}", "(replacet {[] {[9 0 2 9 2]}} 2 5) -> {[] {[9 0 5 9 5]}}", "(replacet {[3 9] {[1]}} 4 2) -> {[3 9] {[1]}}", "(replacet {[6 5] {[7 9 3 9]} {[5 5 7 8 5]}} 1 9) -> {[6 5] {[7 9 3 9]} {[5 5 7 8 5]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 10.002145, "examples": ["(replacet {} 7 6) -> {}", "(replacet {} 7 4) -> {}", "(replacet {[2]} 6 0) -> {[2]}", "(replacet {[3 7 3]} 9 6) -> {[3 7 3]}", "(replacet {[]} 9 4) -> {[]}", "(replacet {} 8 1) -> {}", "(replacet {} 9 5) -> {}", "(replacet {[8 5 4]} 3 0) -> {[8 5 4]}", "(replacet {[1 3] {[2 6 0 4]} {[5]}} 4 0) -> {[1 3] {[2 6 0 0]} {[5]}}", "(replacet {[2 3 2] {[2 7 5 1] {[2 2 3]} {[4 8 9]}}} 1 7) -> {[2 3 2] {[2 7 5 7] {[2 2 3]} {[4 8 9]}}}", "(replacet {[5 0 5 5 8] {[3 6 2 0 2] {[5] {[]}}} {[3 9 3] {[5]} {[] {[]} {[8 5 6 7 5]}}}} 3 6) -> {[5 0 5 5 8] {[6 6 2 0 2] {[5] {[]}}} {[6 9 6] {[5]} {[] {[]} {[8 5 6 7 5]}}}}", "(replacet {[6]} 1 4) -> {[6]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.700175, "examples": ["(replacet {} 3 7) -> {}", "(replacet {[0 4 8] {[8]} {[8 2]}} 7 8) -> {[0 4 8] {[8]} {[8 2]}}", "(replacet {[] {[3 3] {[]}}} 0 7) -> {[] {[3 3] {[]}}}", "(replacet {[0 3] {[8 9 0 6 2] {[8 5 0 4 6]} {[4 4]}}} 5 7) -> {[0 3] {[8 9 0 6 2] {[8 7 0 4 6]} {[4 4]}}}", "(replacet {[4 4 7 0 8] {[]} {[1 7]}} 2 0) -> {[4 4 7 0 8] {[]} {[1 7]}}", "(replacet {[2 4] {[0 6 3]}} 6 6) -> {[2 4] {[0 6 3]}}", "(replacet {[8 8 8 9 8] {[9 3 8] {[7 8] {[3 4 6 8 4]}}} {[9 7]}} 2 1) -> {[8 8 8 9 8] {[9 3 8] {[7 8] {[3 4 6 8 4]}}} {[9 7]}}", "(replacet {[3 1 5 5]} 8 9) -> {[3 1 5 5]}", "(replacet {[2 8]} 6 7) -> {[2 8]}", "(replacet {[7 1 2] {[1 9 2] {[8 3 7 1 5]} {[3 4 7 8]}} {[7] {[]}}} 1 6) -> {[7 6 2] {[6 9 2] {[8 3 7 6 5]} {[3 4 7 8]}} {[7] {[]}}}", "(replacet {[7 3 4 3 4] {[8 6 9]} {[]}} 6 3) -> {[7 3 4 3 4] {[8 3 9]} {[]}}", "(replacet {[5 0 0]} 1 4) -> {[5 0 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.06058, "examples": ["(replacet {} 7 0) -> {}", "(replacet {} 8 2) -> {}", "(replacet {[5 4] {[2 6 8 3] {[4 5 7 2 8]}}} 5 2) -> {[2 4] {[2 6 8 3] {[4 2 7 2 8]}}}", "(replacet {[8 0 8 5] {[7] {[9 6] {[]} {[7]}} {[8 0 2 3] {[1 5 0 0]}}}} 2 9) -> {[8 0 8 5] {[7] {[9 6] {[]} {[7]}} {[8 0 9 3] {[1 5 0 0]}}}}", "(replacet {[1 5] {[2 7 2 1 5] {[4 7]}}} 9 3) -> {[1 5] {[2 7 2 1 5] {[4 7]}}}", "(replacet {[9 1 3 5] {[]} {[5] {[4 7 8 7] {[6 0]} {[3 9]}}}} 6 2) -> {[9 1 3 5] {[]} {[5] {[4 7 8 7] {[2 0]} {[3 9]}}}}", "(replacet {[6 1 8 1] {[7]} {[] {[0 0 5 0 9] {[3]} {[6 8 1 9 2]}} {[1]}}} 5 3) -> {[6 1 8 1] {[7]} {[] {[0 0 3 0 9] {[3]} {[6 8 1 9 2]}} {[1]}}}", "(replacet {[0 6 6 0 0] {[]}} 2 4) -> {[0 6 6 0 0] {[]}}", "(replacet {} 6 2) -> {}", "(replacet {[1 4 3] {[9 7 1 9 3] {[0 8 2 7 6] {[6 7 8 6 1]}}}} 8 6) -> {[1 4 3] {[9 7 1 9 3] {[0 6 2 7 6] {[6 7 6 6 1]}}}}", "(replacet {[5] {[2 4 6 7 2]}} 2 7) -> {[5] {[7 4 6 7 7]}}", "(replacet {[] {[7]} {[8 1]}} 0 5) -> {[] {[7]} {[8 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.136565, "examples": ["(replacet {} 7 1) -> {}", "(replacet {[] {[9]} {[4 3 5 1]}} 5 8) -> {[] {[9]} {[4 3 8 1]}}", "(replacet {[2 6] {[1 4 4 2 6]}} 6 1) -> {[2 1] {[1 4 4 2 1]}}", "(replacet {[9 8 5 4 3] {[0 8 7 8] {[5 8]} {[6] {[8]} {[8 1 8 7]}}}} 4 7) -> {[9 8 5 7 3] {[0 8 7 8] {[5 8]} {[6] {[8]} {[8 1 8 7]}}}}", "(replacet {[7 9 3 0 0] {[8 7 7] {[8 2 2 3 2]}} {[5 8 0] {[6]} {[]}}} 5 2) -> {[7 9 3 0 0] {[8 7 7] {[8 2 2 3 2]}} {[2 8 0] {[6]} {[]}}}", "(replacet {[8 9 2 8 5] {[3] {[3 4 0 9]}} {[4 3 7 7]}} 0 8) -> {[8 9 2 8 5] {[3] {[3 4 8 9]}} {[4 3 7 7]}}", "(replacet {} 4 3) -> {}", "(replacet {} 1 3) -> {}", "(replacet {[3 6 2] {[0 7]} {[9]}} 7 3) -> {[3 6 2] {[0 3]} {[9]}}", "(replacet {[9 2 9] {[1 8 3 9 1] {[5 3 8 3]} {[0 7]}} {[0 3 4 2] {[]}}} 0 5) -> {[9 2 9] {[1 8 3 9 1] {[5 3 8 3]} {[5 7]}} {[5 3 4 2] {[]}}}", "(replacet {[9 3] {[3] {[7 7] {[]}} {[] {[7 8 8 9]} {[9 3 7]}}} {[6] {[3 1 6 2] {[8 0]}}}} 0 7) -> {[9 3] {[3] {[7 7] {[]}} {[] {[7 8 8 9]} {[9 3 7]}}} {[6] {[3 1 6 2] {[8 7]}}}}", "(replacet {[] {[3]}} 7 4) -> {[] {[3]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.88949, "examples": ["(replacet {} 5 1) -> {}", "(replacet {} 3 3) -> {}", "(replacet {[9] {[3 6] {[7 6 0]}} {[4 5 2]}} 0 3) -> {[9] {[3 6] {[7 6 3]}} {[4 5 2]}}", "(replacet {[]} 1 9) -> {[]}", "(replacet {[] {[]}} 5 0) -> {[] {[]}}", "(replacet {} 3 5) -> {}", "(replacet {[6] {[0 2 8]}} 0 8) -> {[6] {[8 2 8]}}", "(replacet {[6] {[4 0 7 5]} {[1]}} 8 0) -> {[6] {[4 0 7 5]} {[1]}}", "(replacet {[7] {[2]}} 0 7) -> {[7] {[2]}}", "(replacet {[] {[1 5 8] {[]} {[1 3 9 6]}}} 4 2) -> {[] {[1 5 8] {[]} {[1 3 9 6]}}}", "(replacet {[9 9 8] {[]}} 6 1) -> {[9 9 8] {[]}}", "(replacet {} 9 0) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.854145, "examples": ["(replacet {} 9 4) -> {}", "(replacet {[2]} 2 3) -> {[3]}", "(replacet {[] {[2 4] {[4 8]}} {[] {[]}}} 7 8) -> {[] {[2 4] {[4 8]}} {[] {[]}}}", "(replacet {[8 5] {[4]} {[]}} 6 4) -> {[8 5] {[4]} {[]}}", "(replacet {} 4 4) -> {}", "(replacet {[3 6 8 3 4]} 2 6) -> {[3 6 8 3 4]}", "(replacet {[1] {[6]}} 2 5) -> {[1] {[6]}}", "(replacet {[2 2]} 1 4) -> {[2 2]}", "(replacet {[3 9 8 2] {[]} {[6]}} 2 5) -> {[3 9 8 5] {[]} {[6]}}", "(replacet {[5 4 0 2 4] {[2 3 1 8]} {[7 4] {[]}}} 2 7) -> {[5 4 0 7 4] {[7 3 1 8]} {[7 4] {[]}}}", "(replacet {[6] {[8 1 1] {[3 2 2 2 1] {[3]} {[]}} {[8] {[7 6]}}} {[3] {[7 6] {[2]} {[7 5 9 6]}}}} 0 4) -> {[6] {[8 1 1] {[3 2 2 2 1] {[3]} {[]}} {[8] {[7 6]}}} {[3] {[7 6] {[2]} {[7 5 9 6]}}}}", "(replacet {[6 1 5 2] {[2 7] {[4 0 2]} {[4 1 7 9 7] {[2]} {[3 0 0]}}} {[]}} 0 1) -> {[6 1 5 2] {[2 7] {[4 1 2]} {[4 1 7 9 7] {[2]} {[3 1 1]}}} {[]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.546486, "examples": ["(replacet {} 7 2) -> {}", "(replacet {} 5 5) -> {}", "(replacet {[3 6] {[9 7 4]} {[0 6 8 8]}} 2 6) -> {[3 6] {[9 7 4]} {[0 6 8 8]}}", "(replacet {} 3 6) -> {}", "(replacet {[0 5 5 3 0]} 9 8) -> {[0 5 5 3 0]}", "(replacet {} 4 2) -> {}", "(replacet {[4 4 1]} 6 8) -> {[4 4 1]}", "(replacet {} 7 6) -> {}", "(replacet {[6 8 1]} 6 6) -> {[6 8 1]}", "(replacet {[0 1 5 5 9] {[7 8]}} 9 4) -> {[0 1 5 5 4] {[7 8]}}", "(replacet {[]} 3 9) -> {[]}", "(replacet {[1 9 3 5] {[4 7 7 5] {[2 8 9 0 1] {[]} {[3 6]}} {[] {[0 6]} {[5 3 8 3 0]}}} {[] {[4 8 1 6 7] {[3 4 5 2]}}}} 8 6) -> {[1 9 3 5] {[4 7 7 5] {[2 6 9 0 1] {[]} {[3 6]}} {[] {[0 6]} {[5 3 6 3 0]}}} {[] {[4 6 1 6 7] {[3 4 5 2]}}}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.449559, "examples": ["(replacet {} 5 9) -> {}", "(replacet {[6 5 4]} 3 1) -> {[6 5 4]}", "(replacet {[7] {[6]} {[]}} 7 6) -> {[6] {[6]} {[]}}", "(replacet {[3 0] {[]}} 7 7) -> {[3 0] {[]}}", "(replacet {[3 9 5 3 9] {[2]} {[4 5 3 8]}} 5 3) -> {[3 9 3 3 9] {[2]} {[4 3 3 8]}}", "(replacet {[1 4 7]} 4 3) -> {[1 3 7]}", "(replacet {[3 5]} 2 0) -> {[3 5]}", "(replacet {[0] {[3 5 8 0 0]}} 3 0) -> {[0] {[0 5 8 0 0]}}", "(replacet {[]} 7 1) -> {[]}", "(replacet {} 6 8) -> {}", "(replacet {[7 3 7 7 8] {[8 0]}} 8 9) -> {[7 3 7 7 9] {[9 0]}}", "(replacet {} 2 1) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.192198, "examples": ["(replacet {} 5 6) -> {}", "(replacet {[8 9 9] {[6 1 4 5 7] {[9]}}} 8 8) -> {[8 9 9] {[6 1 4 5 7] {[9]}}}", "(replacet {[] {[8 4 7 2] {[3 2 7 3 3]}} {[9 7 2 9]}} 4 0) -> {[] {[8 0 7 2] {[3 2 7 3 3]}} {[9 7 2 9]}}", "(replacet {} 5 1) -> {}", "(replacet {[5 6] {[6 5 2 7 0] {[6 5]} {[3]}} {[3 9 0 3] {[6 2]} {[2]}}} 4 0) -> {[5 6] {[6 5 2 7 0] {[6 5]} {[3]}} {[3 9 0 3] {[6 2]} {[2]}}}", "(replacet {[] {[8 4]} {[]}} 4 3) -> {[] {[8 3]} {[]}}", "(replacet {} 9 3) -> {}", "(replacet {[3 0 4] {[7 3] {[9 3 1]}} {[] {[3 1]} {[8 2 5 6]}}} 4 2) -> {[3 0 2] {[7 3] {[9 3 1]}} {[] {[3 1]} {[8 2 5 6]}}}", "(replacet {} 4 9) -> {}", "(replacet {} 7 1) -> {}", "(replacet {[8 1 7]} 4 5) -> {[8 1 7]}", "(replacet {[1 7] {[1 6] {[]} {[3]}} {[5 7 8]}} 3 3) -> {[1 7] {[1 6] {[]} {[3]}} {[5 7 8]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 9.095359, "examples": ["(replacet {} 7 2) -> {}", "(replacet {[3 8 6 7]} 1 4) -> {[3 8 6 7]}", "(replacet {[] {[4]}} 2 2) -> {[] {[4]}}", "(replacet {[1 6 6 0] {[0 9 0]} {[]}} 4 1) -> {[1 6 6 0] {[0 9 0]} {[]}}", "(replacet {[2] {[1 3] {[0 0]}}} 7 9) -> {[2] {[1 3] {[0 0]}}}", "(replacet {} 9 0) -> {}", "(replacet {[3 0 1 9 8]} 0 9) -> {[3 9 1 9 8]}", "(replacet {} 1 6) -> {}", "(replacet {} 7 4) -> {}", "(replacet {[3 9 9] {[7 6 4]}} 7 3) -> {[3 9 9] {[3 6 4]}}", "(replacet {[] {[1] {[4 7 0 5]}} {[8 6 4 7] {[5 3 6 1 3]}}} 6 9) -> {[] {[1] {[4 7 0 5]}} {[8 9 4 7] {[5 3 9 1 3]}}}", "(replacet {[7] {[0 9 3 1 5]} {[4]}} 6 7) -> {[7] {[0 9 3 1 5]} {[4]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.883933, "examples": ["(replacet {} 7 0) -> {}", "(replacet {[] {[7]} {[5]}} 7 1) -> {[] {[1]} {[5]}}", "(replacet {[2 3] {[9 6 1 3 2] {[4]}} {[9 2 3]}} 1 4) -> {[2 3] {[9 6 4 3 2] {[4]}} {[9 2 3]}}", "(replacet {[5 3 5] {[]} {[9 5 9 3]}} 3 7) -> {[5 7 5] {[]} {[9 5 9 7]}}", "(replacet {[0]} 0 9) -> {[9]}", "(replacet {} 6 4) -> {}", "(replacet {[7 0 7]} 2 6) -> {[7 0 7]}", "(replacet {[1 5 6 2 1] {[4 0]} {[5 8 9] {[8 9 5 8 2]} {[7 1 8 6 9]}}} 6 4) -> {[1 5 4 2 1] {[4 0]} {[5 8 9] {[8 9 5 8 2]} {[7 1 8 4 9]}}}", "(replacet {[2 5 0 6 3]} 9 3) -> {[2 5 0 6 3]}", "(replacet {[1 8] {[1 3]} {[6 7 0] {[4 0 9] {[]} {[6 9 3 6 1]}} {[9 9 8] {[6]} {[7 8 2 8]}}}} 9 5) -> {[1 8] {[1 3]} {[6 7 0] {[4 0 5] {[]} {[6 5 3 6 1]}} {[5 5 8] {[6]} {[7 8 2 8]}}}}", "(replacet {[9] {[8 8 8]}} 8 2) -> {[9] {[2 2 2]}}", "(replacet {} 9 6) -> {}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 11.662521, "examples": ["(replacet {} 8 4) -> {}", "(replacet {[0 1 2 5 9] {[2 3] {[7]} {[5 2] {[8 6 4]} {[1 3]}}}} 1 9) -> {[0 9 2 5 9] {[2 3] {[7]} {[5 2] {[8 6 4]} {[9 3]}}}}", "(replacet {[7 5 7] {[4 4 7 3]} {[]}} 3 7) -> {[7 5 7] {[4 4 7 7]} {[]}}", "(replacet {[4 5 6 3 1]} 6 8) -> {[4 5 8 3 1]}", "(replacet {[] {[] {[6 5 6]}}} 2 3) -> {[] {[] {[6 5 6]}}}", "(replacet {[3] {[3 5 9 2]}} 0 8) -> {[3] {[3 5 9 2]}}", "(replacet {[0 7]} 9 1) -> {[0 7]}", "(replacet {[3 1 1] {[1] {[2 9 3 2]}} {[0 0] {[8 4]}}} 7 0) -> {[3 1 1] {[1] {[2 9 3 2]}} {[0 0] {[8 4]}}}", "(replacet {[0] {[3 1 0 3 9]}} 0 3) -> {[3] {[3 1 3 3 9]}}", "(replacet {[] {[8]} {[] {[] {[6]}}}} 3 5) -> {[] {[8]} {[] {[] {[6]}}}}", "(replacet {[0 5 3]} 1 3) -> {[0 5 3]}", "(replacet {[8 1 3 7]} 7 0) -> {[8 1 3 0]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 8.563103, "examples": ["(replacet {} 7 0) -> {}", "(replacet {[4 3]} 1 7) -> {[4 3]}", "(replacet {[9 7 7 8] {[6 7 9 7 3] {[] {[2 9 8 7]}} {[0 7 9 0]}} {[3 8]}} 7 3) -> {[9 3 3 8] {[6 3 9 3 3] {[] {[2 9 8 3]}} {[0 3 9 0]}} {[3 8]}}", "(replacet {[3 3 2 8] {[9 0 3 1]}} 6 8) -> {[3 3 2 8] {[9 0 3 1]}}", "(replacet {[9 0] {[7 8 3 2 0] {[4 1 2 6 0]} {[]}}} 9 9) -> {[9 0] {[7 8 3 2 0] {[4 1 2 6 0]} {[]}}}", "(replacet {[] {[3 6] {[7] {[4 7 4 9]}} {[9 9 2 4] {[7]} {[]}}} {[] {[7] {[0]}}}} 6 2) -> {[] {[3 2] {[7] {[4 7 4 9]}} {[9 9 2 4] {[7]} {[]}}} {[] {[7] {[0]}}}}", "(replacet {[6 4 9] {[3 6 7]}} 8 7) -> {[6 4 9] {[3 6 7]}}", "(replacet {[9 2 1 1 6] {[2 2] {[8]} {[6 8]}}} 4 6) -> {[9 2 1 1 6] {[2 2] {[8]} {[6 8]}}}", "(replacet {} 5 8) -> {}", "(replacet {} 6 4) -> {}", "(replacet {[0 5 6 9 7] {[]}} 8 8) -> {[0 5 6 9 7] {[]}}", "(replacet {[7 9 2]} 4 2) -> {[7 9 2]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 6.39236, "examples": ["(replacet {} 9 3) -> {}", "(replacet {[9 7 0 1] {[0 3 1 5 0]} {[5 6 1 1 5]}} 6 2) -> {[9 7 0 1] {[0 3 1 5 0]} {[5 2 1 1 5]}}", "(replacet {[5 2]} 9 4) -> {[5 2]}", "(replacet {} 1 0) -> {}", "(replacet {[5 8 3] {[7] {[]} {[9 0 1 4 6] {[3 5 7 7]} {[8 0]}}} {[5 8 9 6] {[3 6] {[2 0 9 2]} {[]}} {[8 8 1 3] {[2 6 4 7]} {[4 1 7 6]}}}} 1 8) -> {[5 8 3] {[7] {[]} {[9 0 8 4 6] {[3 5 7 7]} {[8 0]}}} {[5 8 9 6] {[3 6] {[2 0 9 2]} {[]}} {[8 8 8 3] {[2 6 4 7]} {[4 8 7 6]}}}}", "(replacet {[]} 9 4) -> {[]}", "(replacet {[0 6 3 9] {[5]}} 0 0) -> {[0 6 3 9] {[5]}}", "(replacet {[6]} 0 9) -> {[6]}", "(replacet {} 1 1) -> {}", "(replacet {[]} 9 7) -> {[]}", "(replacet {[4]} 3 7) -> {[4]}", "(replacet {[]} 7 7) -> {[]}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
{"time": 7.602034, "examples": ["(replacet {} 2 6) -> {}", "(replacet {} 5 8) -> {}", "(replacet {} 6 5) -> {}", "(replacet {[9 8] {[] {[2 0 6 4] {[]}} {[5 3 1] {[0 4 1 5]} {[9 7 3]}}} {[8] {[4 3] {[3 3]}}}} 4 6) -> {[9 8] {[] {[2 0 6 6] {[]}} {[5 3 1] {[0 6 1 5]} {[9 7 3]}}} {[8] {[6 3] {[3 3]}}}}", "(replacet {[0] {[] {[4 4 0 6 2]}}} 8 1) -> {[0] {[] {[4 4 0 6 2]}}}", "(replacet {} 9 0) -> {}", "(replacet {} 9 7) -> {}", "(replacet {[7 6 9 8 7]} 6 4) -> {[7 4 9 8 7]}", "(replacet {} 8 7) -> {}", "(replacet {[] {[7 4 5 9 6] {[] {[1 5]} {[]}} {[7]}}} 5 6) -> {[] {[7 4 6 9 6] {[] {[1 6]} {[]}} {[7]}}}", "(replacet {[8 2 3 0 1] {[] {[3 9 2 8 3] {[6 6 7 2]} {[1 4 7]}} {[5 0 4 7 5] {[7 5]} {[]}}}} 1 4) -> {[8 2 3 0 4] {[] {[3 9 2 8 3] {[6 6 7 2]} {[4 4 7]}} {[5 0 4 7 5] {[7 5]} {[]}}}}", "(replacet {[0 8 8] {[8]} {[8 1]}} 8 3) -> {[0 3 3] {[3]} {[3 1]}}"], "solution": "(let replacet (let a (lambda (d c b) (mapt d (lambda (e) (map e (lambda (f) (if (= c f) b f)))))) _) _)", "name": "replacet"}
