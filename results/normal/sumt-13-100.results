{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.036546, "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {3}) -> 3", "(sumt {9 {5} {6}}) -> 20", "(sumt {}) -> 0", "(sumt {0 {0} {5 {0 {9} {5}} {4 {3} {0}}}}) -> 26", "(sumt {0 {5 {6} {4}}}) -> 15", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {7 {0 {3} {7}} {6 {0}}}) -> 23", "(sumt {}) -> 0", "(sumt {7 {6} {2 {6}}}) -> 21"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.1745, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {0 {8 {5}} {3 {3}}}) -> 19", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {0 {5} {1}}) -> 6", "(sumt {1 {2 {0 {3}}} {4 {4 {8} {3}} {1}}}) -> 26", "(sumt {9 {8 {6} {7}} {5 {7}}}) -> 42", "(sumt {}) -> 0", "(sumt {0 {8} {6}}) -> 14", "(sumt {3 {8}}) -> 11"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.125952, "examples": ["(sumt {}) -> 0", "(sumt {2 {3} {5}}) -> 10", "(sumt {7}) -> 7", "(sumt {1}) -> 1", "(sumt {7}) -> 7", "(sumt {4 {1} {3}}) -> 8", "(sumt {2 {9}}) -> 11", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {2} {0 {4 {0}}}}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.209716, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {8 {6} {2}}}) -> 23", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {1 {2}}) -> 3", "(sumt {5 {5 {0} {1 {0} {5}}}}) -> 16", "(sumt {}) -> 0", "(sumt {6 {1 {3}} {4 {0} {8}}}) -> 22", "(sumt {7 {7}}) -> 14", "(sumt {3}) -> 3", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.270668, "examples": ["(sumt {}) -> 0", "(sumt {1 {1 {3 {7} {0}} {5}}}) -> 17", "(sumt {}) -> 0", "(sumt {7 {9}}) -> 16", "(sumt {1}) -> 1", "(sumt {9 {3}}) -> 12", "(sumt {3 {8 {7} {1}}}) -> 19", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.20862, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {7}) -> 7", "(sumt {8 {3 {5}}}) -> 16", "(sumt {5 {5 {3 {5}}}}) -> 18", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {1 {7} {6}}) -> 14", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.318915, "examples": ["(sumt {}) -> 0", "(sumt {7 {4 {8 {5}} {3 {9}}} {2 {4 {0} {2}} {3}}}) -> 47", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {1}) -> 1", "(sumt {1 {9}}) -> 10", "(sumt {4 {9}}) -> 13", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.405267, "examples": ["(sumt {}) -> 0", "(sumt {2 {0 {9} {1}}}) -> 12", "(sumt {}) -> 0", "(sumt {6 {6}}) -> 12", "(sumt {7 {8 {7}}}) -> 22", "(sumt {7}) -> 7", "(sumt {1}) -> 1", "(sumt {2}) -> 2", "(sumt {7 {5} {1 {4} {8}}}) -> 25", "(sumt {2 {7} {0}}) -> 9", "(sumt {1}) -> 1", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.411711, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {6}) -> 6", "(sumt {2}) -> 2", "(sumt {2 {2} {3}}) -> 7", "(sumt {9}) -> 9", "(sumt {2 {8} {0}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.330786, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {4 {2} {4}}) -> 10", "(sumt {0 {1 {3}} {3}}) -> 7", "(sumt {}) -> 0", "(sumt {1 {9} {9}}) -> 19", "(sumt {}) -> 0", "(sumt {7 {5 {5 {7} {3}}} {5 {9 {6} {2}}}}) -> 49", "(sumt {5 {3 {3} {4 {3}}} {0 {5 {2}}}}) -> 25", "(sumt {9 {5 {9}} {9 {8 {8} {5}} {9 {5} {1}}}}) -> 68", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.451687, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {8} {4}}) -> 13", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {6 {7}}) -> 13", "(sumt {2}) -> 2", "(sumt {0 {8 {5 {8}} {9 {1} {5}}}}) -> 36", "(sumt {2 {6 {0}} {9 {4 {5}}}}) -> 26", "(sumt {3}) -> 3", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.480372, "examples": ["(sumt {}) -> 0", "(sumt {2 {1} {0 {6 {7}}}}) -> 16", "(sumt {3 {2}}) -> 5", "(sumt {4 {6 {9 {7} {6}}} {8}}) -> 40", "(sumt {5}) -> 5", "(sumt {0 {5 {9 {8} {7}}} {3}}) -> 32", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {7 {6}}) -> 13", "(sumt {3 {0} {4 {7 {8}} {1}}}) -> 23", "(sumt {}) -> 0", "(sumt {2 {9} {2}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.465572, "examples": ["(sumt {}) -> 0", "(sumt {0 {3 {2}} {3 {6}}}) -> 14", "(sumt {4 {1} {0}}) -> 5", "(sumt {4 {2}}) -> 6", "(sumt {}) -> 0", "(sumt {2 {0 {4 {7} {8}} {8 {0} {8}}}}) -> 37", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {7 {8}}) -> 15", "(sumt {5 {6}}) -> 11"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.461436, "examples": ["(sumt {}) -> 0", "(sumt {4 {1 {6 {8}} {7 {1} {3}}}}) -> 30", "(sumt {0}) -> 0", "(sumt {9 {2} {7}}) -> 18", "(sumt {3 {4 {8 {3}} {1 {7} {5}}}}) -> 31", "(sumt {9}) -> 9", "(sumt {3}) -> 3", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {8 {5}} {9 {1} {4}}}) -> 27", "(sumt {3 {4 {8}} {2}}) -> 17"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.3843, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {9}}) -> 10", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {4 {0} {7}}) -> 11", "(sumt {9 {2} {8 {3}}}) -> 22", "(sumt {5 {8} {4}}) -> 17", "(sumt {}) -> 0", "(sumt {4 {7}}) -> 11", "(sumt {7}) -> 7", "(sumt {5 {9 {4 {9}}} {2}}) -> 29"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.463278, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {3}}) -> 10", "(sumt {2 {1} {4}}) -> 7", "(sumt {2 {1 {5}}}) -> 8", "(sumt {4 {0 {1} {9}} {1 {3} {6}}}) -> 24", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {4 {4}}) -> 8", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {9 {9 {6}} {6}}) -> 30"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.092259, "examples": ["(sumt {}) -> 0", "(sumt {9 {7} {4}}) -> 20", "(sumt {7 {8}}) -> 15", "(sumt {2}) -> 2", "(sumt {5}) -> 5", "(sumt {7 {7}}) -> 14", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {8 {4} {2}}) -> 14", "(sumt {5 {2}}) -> 7", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.840013, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {2 {9 {0}}}) -> 11", "(sumt {}) -> 0", "(sumt {9 {0 {2} {5}} {3}}) -> 19", "(sumt {7 {9}}) -> 16", "(sumt {0 {7}}) -> 7", "(sumt {5 {3 {9 {7}} {0}}}) -> 24", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {0 {3 {1}} {1}}) -> 5", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.895955, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {2 {7}}) -> 9", "(sumt {6 {7} {7}}) -> 20", "(sumt {}) -> 0", "(sumt {3 {9} {6}}) -> 18", "(sumt {6 {6} {5}}) -> 17", "(sumt {4 {3 {9} {7}} {1 {6}}}) -> 30", "(sumt {7 {4}}) -> 11", "(sumt {3}) -> 3", "(sumt {9 {9} {2 {0}}}) -> 20", "(sumt {4 {8 {0 {9}} {3 {4} {0}}}}) -> 28"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.215336, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {2 {9}}}) -> 11", "(sumt {6 {0}}) -> 6", "(sumt {8 {0 {9 {2} {9}}}}) -> 28", "(sumt {9 {0}}) -> 9", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {2 {4}}) -> 6", "(sumt {1 {2}}) -> 3", "(sumt {8}) -> 8", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.101139, "examples": ["(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {9}) -> 9", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {3 {2 {1}}}) -> 6", "(sumt {}) -> 0", "(sumt {0 {0 {2}} {9 {9}}}) -> 20", "(sumt {7}) -> 7", "(sumt {2 {5 {3 {6} {8}}}}) -> 24", "(sumt {0}) -> 0", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.197194, "examples": ["(sumt {}) -> 0", "(sumt {0 {8 {7 {7} {6}} {3 {5}}} {1 {4 {6} {4}}}}) -> 51", "(sumt {1 {5 {8 {4}}} {6 {9 {8} {3}} {0}}}) -> 44", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {1 {9} {1 {3} {9}}}}) -> 27", "(sumt {7 {3 {5}} {6 {6 {6}} {2 {6} {9}}}}) -> 50", "(sumt {2 {0} {0 {1}}}) -> 3", "(sumt {}) -> 0", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.180747, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {9 {8 {3} {7 {0}}}}) -> 27", "(sumt {7}) -> 7", "(sumt {8}) -> 8", "(sumt {6 {7} {4}}) -> 17", "(sumt {0 {3} {3}}) -> 6", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.947783, "examples": ["(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {9}) -> 9", "(sumt {2}) -> 2", "(sumt {5 {5 {9 {2} {0}} {8}}}) -> 29", "(sumt {5}) -> 5", "(sumt {4 {3 {3} {4}}}) -> 14", "(sumt {2 {3}}) -> 5", "(sumt {8 {4 {2}} {4 {7 {1} {6}}}}) -> 32", "(sumt {0 {5} {4}}) -> 9", "(sumt {}) -> 0", "(sumt {0 {7} {0}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.983446, "examples": ["(sumt {}) -> 0", "(sumt {9 {1 {0}} {1 {9} {8}}}) -> 28", "(sumt {1 {6}}) -> 7", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {8}}) -> 13", "(sumt {}) -> 0", "(sumt {8 {8 {5 {2} {0}}} {0 {4 {2}} {5 {7} {4}}}}) -> 45", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {0}) -> 0", "(sumt {7}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.065548, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {8 {7}} {1 {7 {1}} {5 {3} {7}}}}) -> 47", "(sumt {6 {0} {4}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {9 {8 {1} {9}}} {6 {6}}}) -> 46", "(sumt {3 {4}}) -> 7", "(sumt {}) -> 0", "(sumt {8 {6}}) -> 14", "(sumt {9 {8 {2} {5}} {6 {8} {7}}}) -> 45", "(sumt {6 {1}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.02191, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {5 {2} {3}}) -> 10", "(sumt {}) -> 0", "(sumt {4 {5}}) -> 9", "(sumt {1 {2} {9}}) -> 12", "(sumt {8}) -> 8", "(sumt {7 {7 {6}} {7 {3} {2}}}) -> 32", "(sumt {1}) -> 1", "(sumt {4 {3 {0 {4}}} {1 {2 {7}}}}) -> 21"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.175124, "examples": ["(sumt {}) -> 0", "(sumt {9 {5 {9} {0}}}) -> 23", "(sumt {5 {4}}) -> 9", "(sumt {1}) -> 1", "(sumt {4}) -> 4", "(sumt {4 {9}}) -> 13", "(sumt {9}) -> 9", "(sumt {9}) -> 9", "(sumt {6 {8} {4}}) -> 18", "(sumt {4 {9 {2} {5}}}) -> 20", "(sumt {2 {1 {5}}}) -> 8", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.130377, "examples": ["(sumt {}) -> 0", "(sumt {5 {9}}) -> 14", "(sumt {7 {3}}) -> 10", "(sumt {3 {9 {3}}}) -> 15", "(sumt {2 {2 {2 {8}}} {3}}) -> 17", "(sumt {7 {3} {5}}) -> 15", "(sumt {}) -> 0", "(sumt {2 {0 {2 {3} {1}}} {0}}) -> 8", "(sumt {8}) -> 8", "(sumt {6}) -> 6", "(sumt {7 {6}}) -> 13", "(sumt {2 {5} {0}}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.25199, "examples": ["(sumt {}) -> 0", "(sumt {1 {1 {2}} {1}}) -> 5", "(sumt {5 {8} {4 {1}}}) -> 18", "(sumt {}) -> 0", "(sumt {5 {2} {9}}) -> 16", "(sumt {}) -> 0", "(sumt {2 {2}}) -> 4", "(sumt {6}) -> 6", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {2 {5 {5}} {7 {8}}}) -> 27", "(sumt {9}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.159287, "examples": ["(sumt {}) -> 0", "(sumt {8 {7} {7}}) -> 22", "(sumt {2}) -> 2", "(sumt {3 {7} {8}}) -> 18", "(sumt {6}) -> 6", "(sumt {8}) -> 8", "(sumt {6 {8} {0}}) -> 14", "(sumt {0 {1 {7}} {3 {9} {3}}}) -> 23", "(sumt {}) -> 0", "(sumt {8 {8} {3}}) -> 19", "(sumt {2}) -> 2", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.195349, "examples": ["(sumt {}) -> 0", "(sumt {7 {3} {7}}) -> 17", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {2 {7 {3}}}) -> 12", "(sumt {9 {4} {7 {8 {2} {4}} {7 {2}}}}) -> 43", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {1}) -> 1", "(sumt {8 {8 {4 {4} {0}}}}) -> 24", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.034321, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {6 {3} {3 {8}}}) -> 20", "(sumt {3 {9 {9} {5}}}) -> 26", "(sumt {4 {4} {6 {8} {6}}}) -> 28", "(sumt {}) -> 0", "(sumt {4 {1 {0}} {0}}) -> 5", "(sumt {}) -> 0", "(sumt {1 {7 {9 {0} {7}} {9}}}) -> 33", "(sumt {3}) -> 3", "(sumt {9 {2 {6} {9}} {3 {8} {5}}}) -> 42"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.959282, "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {7 {6} {2}}) -> 15", "(sumt {}) -> 0", "(sumt {4 {6} {7}}) -> 17", "(sumt {0 {9}}) -> 9", "(sumt {}) -> 0", "(sumt {5 {1} {5}}) -> 11", "(sumt {9 {7 {7} {8}}}) -> 31", "(sumt {4}) -> 4", "(sumt {2 {0}}) -> 2", "(sumt {1}) -> 1"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.039899, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {1 {7}}) -> 8", "(sumt {4 {0 {0}}}) -> 4", "(sumt {0 {4 {9} {3}}}) -> 16", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {1 {6}}) -> 7", "(sumt {9 {3} {8 {8}}}) -> 28", "(sumt {}) -> 0", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.100314, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {7 {5 {8}}}) -> 20", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {1 {6 {2 {1}}}}) -> 10", "(sumt {5 {6 {7} {4}} {1}}) -> 23", "(sumt {0 {8 {3 {3} {1}}}}) -> 15", "(sumt {5 {1 {2 {2} {7}} {5 {1}}} {8}}) -> 31"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.935978, "examples": ["(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {1}) -> 1", "(sumt {6 {9} {0}}) -> 15", "(sumt {2}) -> 2", "(sumt {1 {4} {7}}) -> 12", "(sumt {2 {0}}) -> 2", "(sumt {1}) -> 1", "(sumt {5}) -> 5", "(sumt {2}) -> 2", "(sumt {4 {7} {3}}) -> 14", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.036656, "examples": ["(sumt {}) -> 0", "(sumt {8 {2}}) -> 10", "(sumt {9 {8} {0}}) -> 17", "(sumt {1 {6} {0}}) -> 7", "(sumt {0 {6} {7}}) -> 13", "(sumt {0}) -> 0", "(sumt {0}) -> 0", "(sumt {5 {6 {9 {5}} {4 {3}}}}) -> 32", "(sumt {0 {9 {2 {3}}}}) -> 14", "(sumt {9}) -> 9", "(sumt {1 {3 {6}} {6 {2} {5}}}) -> 23", "(sumt {1 {5} {6}}) -> 12"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.059859, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {5}}) -> 13", "(sumt {}) -> 0", "(sumt {1 {3 {7}}}) -> 11", "(sumt {}) -> 0", "(sumt {2 {6} {2}}) -> 10", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8 {1 {8 {9} {5}} {1}} {5 {9}}}) -> 46", "(sumt {7}) -> 7", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.03111, "examples": ["(sumt {}) -> 0", "(sumt {9 {0} {4}}) -> 13", "(sumt {2 {3 {9} {6}}}) -> 20", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {1 {0} {5 {3} {5}}}}) -> 18", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {2}) -> 2", "(sumt {2 {5 {0}}}) -> 7", "(sumt {}) -> 0", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.042438, "examples": ["(sumt {}) -> 0", "(sumt {0 {3}}) -> 3", "(sumt {1 {0} {9 {3 {8}}}}) -> 21", "(sumt {4 {0} {5 {7} {4}}}) -> 20", "(sumt {2 {1}}) -> 3", "(sumt {5 {0}}) -> 5", "(sumt {7 {5 {2 {2}}}}) -> 16", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {7 {8}} {5}}) -> 20", "(sumt {1}) -> 1", "(sumt {9 {0 {3 {8}}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.128252, "examples": ["(sumt {}) -> 0", "(sumt {3 {5 {2} {8}}}) -> 18", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {6 {1 {1} {1}} {1 {5} {4}}}}) -> 25", "(sumt {8}) -> 8", "(sumt {0 {1} {9}}) -> 10", "(sumt {3 {2} {8 {7 {5}} {3 {9}}}}) -> 37", "(sumt {}) -> 0", "(sumt {1 {0} {0}}) -> 1", "(sumt {3 {2}}) -> 5", "(sumt {2 {3 {8} {5}} {7 {1}}}) -> 26"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.029676, "examples": ["(sumt {}) -> 0", "(sumt {7 {1}}) -> 8", "(sumt {9}) -> 9", "(sumt {5 {7}}) -> 12", "(sumt {9}) -> 9", "(sumt {2 {3} {5 {6}}}) -> 16", "(sumt {0}) -> 0", "(sumt {5}) -> 5", "(sumt {6 {2}}) -> 8", "(sumt {6 {2 {5}}}) -> 13", "(sumt {}) -> 0", "(sumt {2 {7 {7}}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.094362, "examples": ["(sumt {}) -> 0", "(sumt {4 {2 {5 {1}} {2 {9}}}}) -> 23", "(sumt {0 {4} {5}}) -> 9", "(sumt {8}) -> 8", "(sumt {8}) -> 8", "(sumt {3 {6}}) -> 9", "(sumt {4 {0 {3 {0}} {6 {6} {7}}} {4 {1 {3}}}}) -> 34", "(sumt {}) -> 0", "(sumt {4 {4 {5} {5}} {5}}) -> 23", "(sumt {3}) -> 3", "(sumt {1 {1}}) -> 2", "(sumt {1 {2}}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.021599, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {4} {6}}) -> 14", "(sumt {1 {3}}) -> 4", "(sumt {2}) -> 2", "(sumt {1 {9 {7} {8}}}) -> 25", "(sumt {9 {2 {8 {4}} {3 {5} {4}}} {1 {7 {4}}}}) -> 47", "(sumt {9 {8}}) -> 17", "(sumt {6 {1} {7}}) -> 14", "(sumt {3}) -> 3", "(sumt {4 {4 {7 {9} {3}} {9 {3}}}}) -> 39", "(sumt {4 {0 {9 {3} {3}} {6 {5}}}}) -> 30"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.990592, "examples": ["(sumt {}) -> 0", "(sumt {0 {6}}) -> 6", "(sumt {2 {1 {4}} {0 {3}}}) -> 10", "(sumt {8 {1 {5} {3}}}) -> 17", "(sumt {4 {6} {5}}) -> 15", "(sumt {8 {3}}) -> 11", "(sumt {9 {2} {2 {2 {3} {2}} {5}}}) -> 25", "(sumt {9 {8 {5}} {2}}) -> 24", "(sumt {9 {8 {5} {4 {2} {7}}} {8 {5 {9} {2}}}}) -> 59", "(sumt {5 {6}}) -> 11", "(sumt {}) -> 0", "(sumt {4 {6}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.999446, "examples": ["(sumt {}) -> 0", "(sumt {4 {8} {1}}) -> 13", "(sumt {6}) -> 6", "(sumt {9 {1 {1}}}) -> 11", "(sumt {}) -> 0", "(sumt {8 {9 {6}}}) -> 23", "(sumt {8 {8}}) -> 16", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {4 {2 {9} {5}} {3}} {0 {7}}}) -> 39", "(sumt {5}) -> 5", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.076883, "examples": ["(sumt {}) -> 0", "(sumt {0 {1 {2} {0}}}) -> 3", "(sumt {8 {5} {2}}) -> 15", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {1}}) -> 1", "(sumt {8 {9 {2}} {6 {6}}}) -> 31", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {3 {6 {3}}}}) -> 21", "(sumt {}) -> 0", "(sumt {7 {7 {3} {2}}}) -> 19"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.942804, "examples": ["(sumt {}) -> 0", "(sumt {1 {8 {9} {3}}}) -> 21", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {7 {6} {7 {9}}}) -> 29", "(sumt {4 {2} {7 {3}}}) -> 16", "(sumt {2 {7 {8} {6 {6} {8}}} {5 {3 {3}} {8 {9}}}}) -> 65", "(sumt {3 {6}}) -> 9", "(sumt {0}) -> 0", "(sumt {7 {2 {2}} {8 {7} {0}}}) -> 26", "(sumt {1}) -> 1", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.914792, "examples": ["(sumt {}) -> 0", "(sumt {8 {6 {5}}}) -> 19", "(sumt {0}) -> 0", "(sumt {1 {6}}) -> 7", "(sumt {5 {5 {2 {4} {9}} {3 {9}}}}) -> 37", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {7}) -> 7", "(sumt {0 {2} {7 {5}}}) -> 14", "(sumt {1 {4 {5 {2}}}}) -> 12", "(sumt {9 {5}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.903527, "examples": ["(sumt {}) -> 0", "(sumt {3 {0}}) -> 3", "(sumt {3}) -> 3", "(sumt {5 {3 {8 {5} {7}}}}) -> 28", "(sumt {8 {0 {2 {0}}}}) -> 10", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {0 {0} {1}} {1 {5}}}) -> 12", "(sumt {9}) -> 9", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.943029, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {6}}) -> 7", "(sumt {1 {6}}) -> 7", "(sumt {5 {5}}) -> 10", "(sumt {5 {5 {6 {3}}}}) -> 19", "(sumt {}) -> 0", "(sumt {2 {3 {5}} {6 {6 {3} {4}}}}) -> 29", "(sumt {1 {5 {3 {0}}}}) -> 9", "(sumt {}) -> 0", "(sumt {1 {7}}) -> 8", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.035452, "examples": ["(sumt {}) -> 0", "(sumt {3 {2}}) -> 5", "(sumt {9 {8} {0}}) -> 17", "(sumt {1}) -> 1", "(sumt {7 {2} {9}}) -> 18", "(sumt {1 {1}}) -> 2", "(sumt {}) -> 0", "(sumt {6 {2} {3 {5}}}) -> 16", "(sumt {4 {2 {6}} {4 {0} {1}}}) -> 17", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {8} {3}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.827618, "examples": ["(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {2}}) -> 7", "(sumt {4 {5 {4 {1}}} {0 {6 {3} {1}} {5}}}) -> 29", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.142861, "examples": ["(sumt {}) -> 0", "(sumt {8 {0} {9 {5} {2}}}) -> 24", "(sumt {9 {5 {7} {1}}}) -> 22", "(sumt {1 {4 {0 {1}}} {6}}) -> 12", "(sumt {1}) -> 1", "(sumt {4 {6 {6}}}) -> 16", "(sumt {1 {5} {8}}) -> 14", "(sumt {2}) -> 2", "(sumt {5}) -> 5", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {9 {2 {3} {2 {9} {0}}} {8 {0 {7}} {4 {9} {3}}}}) -> 56"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.78452, "examples": ["(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {8 {1 {5} {1}} {3}}) -> 18", "(sumt {8 {2} {1}}) -> 11", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {1 {1}}) -> 2", "(sumt {4}) -> 4", "(sumt {5 {9 {2} {9}} {1 {0} {6}}}) -> 32", "(sumt {0 {7 {9} {0}} {1}}) -> 17", "(sumt {7 {5 {8} {6}} {7 {5}}}) -> 38"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.104347, "examples": ["(sumt {}) -> 0", "(sumt {1 {4}}) -> 5", "(sumt {8}) -> 8", "(sumt {7}) -> 7", "(sumt {4 {1 {4 {2}} {7}} {2 {3} {1 {3}}}}) -> 27", "(sumt {7 {6 {2 {6} {4}} {9 {0}}}}) -> 34", "(sumt {5}) -> 5", "(sumt {3 {4}}) -> 7", "(sumt {3 {0 {3}} {3 {1} {4}}}) -> 14", "(sumt {}) -> 0", "(sumt {9 {7} {4 {3} {7}}}) -> 30", "(sumt {9 {1 {3}}}) -> 13"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.871358, "examples": ["(sumt {}) -> 0", "(sumt {0 {2} {0}}) -> 2", "(sumt {7 {2 {7} {1}} {3 {7} {1}}}) -> 28", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {9} {5}}) -> 20", "(sumt {0 {1 {8}} {5}}) -> 14", "(sumt {}) -> 0", "(sumt {7 {6 {8} {2 {6}}} {7 {9 {5} {7}}}}) -> 57", "(sumt {4 {7 {6 {2} {9}}}}) -> 28"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.189598, "examples": ["(sumt {}) -> 0", "(sumt {7 {8 {2} {5}} {1 {4} {9}}}) -> 36", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3 {4}}) -> 7", "(sumt {0}) -> 0", "(sumt {0}) -> 0", "(sumt {6 {4}}) -> 10", "(sumt {2 {6} {0}}) -> 8", "(sumt {1 {8 {7} {5 {3}}}}) -> 24", "(sumt {5 {8 {7} {5}} {7}}) -> 32", "(sumt {4 {7 {9}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.154747, "examples": ["(sumt {}) -> 0", "(sumt {4 {8 {0}}}) -> 12", "(sumt {}) -> 0", "(sumt {4 {8} {9}}) -> 21", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {3 {9 {2}} {1 {1} {7}}} {6 {1 {8}} {7}}}) -> 52", "(sumt {0 {4}}) -> 4", "(sumt {0 {8}}) -> 8", "(sumt {1 {2}}) -> 3", "(sumt {0 {9 {9} {5}}}) -> 23", "(sumt {9}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.280172, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9 {7 {8} {3 {0}}}}) -> 27", "(sumt {6}) -> 6", "(sumt {8}) -> 8", "(sumt {3 {3 {3}} {5 {3} {4}}}) -> 21", "(sumt {2 {6 {7 {3}} {3}}}) -> 21", "(sumt {1 {5 {8} {7}}}) -> 21", "(sumt {1}) -> 1", "(sumt {7 {8}}) -> 15", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.201795, "examples": ["(sumt {}) -> 0", "(sumt {0 {6 {6}}}) -> 12", "(sumt {2 {4 {2} {5 {8}}} {4 {1} {6}}}) -> 32", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {6 {7}} {7 {9}}}) -> 30", "(sumt {}) -> 0", "(sumt {1 {9} {0 {8} {1}}}) -> 19", "(sumt {3}) -> 3", "(sumt {4 {5}}) -> 9", "(sumt {}) -> 0", "(sumt {8 {0}}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.177357, "examples": ["(sumt {}) -> 0", "(sumt {8 {1 {7}} {7 {6}}}) -> 29", "(sumt {}) -> 0", "(sumt {8 {7} {3 {3 {3} {2}} {7}}}) -> 33", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {0 {2} {6}}) -> 8", "(sumt {4 {8 {5}} {9 {4}}}) -> 30", "(sumt {5 {9}}) -> 14", "(sumt {9 {3} {1}}) -> 13", "(sumt {6}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.331148, "examples": ["(sumt {}) -> 0", "(sumt {9 {2 {2} {3}} {5}}) -> 21", "(sumt {1}) -> 1", "(sumt {7 {4} {1}}) -> 12", "(sumt {5}) -> 5", "(sumt {9 {3}}) -> 12", "(sumt {7 {1} {2}}) -> 10", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {7 {3}}) -> 10", "(sumt {5 {4} {1}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.871422, "examples": ["(sumt {}) -> 0", "(sumt {7 {5 {3} {0}}}) -> 15", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {6 {2}}) -> 8", "(sumt {8 {3}}) -> 11", "(sumt {2}) -> 2", "(sumt {1 {2} {7}}) -> 10", "(sumt {4 {9}}) -> 13", "(sumt {1}) -> 1", "(sumt {2 {0} {8 {0}}}) -> 10", "(sumt {9}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.907638, "examples": ["(sumt {}) -> 0", "(sumt {4 {2} {6 {9}}}) -> 21", "(sumt {8}) -> 8", "(sumt {3 {5 {3} {8}} {6 {8}}}) -> 33", "(sumt {6 {4} {6}}) -> 16", "(sumt {7 {7}}) -> 14", "(sumt {}) -> 0", "(sumt {4 {6 {8} {0}}}) -> 18", "(sumt {9 {6}}) -> 15", "(sumt {4 {2} {8 {3} {7}}}) -> 24", "(sumt {6}) -> 6", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.925795, "examples": ["(sumt {}) -> 0", "(sumt {2 {8 {3} {6}} {2 {3 {3}}}}) -> 27", "(sumt {0 {3 {5}}}) -> 8", "(sumt {}) -> 0", "(sumt {9 {2 {3}} {8 {4} {4}}}) -> 30", "(sumt {3 {0 {5 {5}}} {1 {9 {8} {1}}}}) -> 32", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {2 {7 {5 {1}} {5 {6}}} {3 {8}}}) -> 37", "(sumt {}) -> 0", "(sumt {8 {1 {2 {3} {7}}}}) -> 21"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.85237, "examples": ["(sumt {}) -> 0", "(sumt {2 {4}}) -> 6", "(sumt {3 {3 {7}} {1 {7}}}) -> 21", "(sumt {6 {3}}) -> 9", "(sumt {}) -> 0", "(sumt {4 {1} {6}}) -> 11", "(sumt {3}) -> 3", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {3}) -> 3", "(sumt {0 {2 {4 {2} {5}} {3}}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.912809, "examples": ["(sumt {}) -> 0", "(sumt {9 {9} {5}}) -> 23", "(sumt {2 {9}}) -> 11", "(sumt {2}) -> 2", "(sumt {3}) -> 3", "(sumt {9 {5 {0}}}) -> 14", "(sumt {0 {4} {8}}) -> 12", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {2 {2} {0}}) -> 4", "(sumt {0 {8 {2}}}) -> 10", "(sumt {5 {5 {2}} {1 {8} {8}}}) -> 29"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.103051, "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {7}) -> 7", "(sumt {0 {9}}) -> 9", "(sumt {0 {1}}) -> 1", "(sumt {3}) -> 3", "(sumt {1 {8}}) -> 9", "(sumt {1 {8 {8} {3}}}) -> 20", "(sumt {3 {0 {5 {5} {8}} {3 {7}}} {0 {6 {3} {4}}}}) -> 44", "(sumt {8 {4 {1}}}) -> 13", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.755114, "examples": ["(sumt {}) -> 0", "(sumt {3 {6}}) -> 9", "(sumt {2 {0 {1} {4}}}) -> 7", "(sumt {2}) -> 2", "(sumt {7}) -> 7", "(sumt {0}) -> 0", "(sumt {2 {6}}) -> 8", "(sumt {1 {2} {2}}) -> 5", "(sumt {5}) -> 5", "(sumt {4 {5}}) -> 9", "(sumt {3 {6 {4} {5}} {8}}) -> 26", "(sumt {1 {0 {8} {5}}}) -> 14"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.134966, "examples": ["(sumt {}) -> 0", "(sumt {2 {5} {3}}) -> 10", "(sumt {0 {1} {0 {5 {7} {6}} {6}}}) -> 25", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8}) -> 8"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.984594, "examples": ["(sumt {}) -> 0", "(sumt {4 {0 {4}}}) -> 8", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {0 {2} {7}}) -> 9", "(sumt {4 {6 {7} {8}}}) -> 25", "(sumt {4 {8 {6} {3}} {8 {5} {1}}}) -> 35", "(sumt {1}) -> 1", "(sumt {1 {1} {2}}) -> 4"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.240141, "examples": ["(sumt {}) -> 0", "(sumt {2 {0}}) -> 2", "(sumt {3 {0 {6}} {8}}) -> 17", "(sumt {}) -> 0", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {8 {4 {6}}}) -> 18", "(sumt {2 {8 {5 {1}}}}) -> 16", "(sumt {0}) -> 0", "(sumt {9}) -> 9", "(sumt {5}) -> 5", "(sumt {2 {3 {3 {1}}}}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.194901, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {8}) -> 8", "(sumt {1}) -> 1", "(sumt {7 {5 {6 {3} {3}} {9}}}) -> 33", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {6 {6}}) -> 12", "(sumt {2 {6}}) -> 8", "(sumt {7 {1 {9 {0} {9}} {6 {1}}}}) -> 33"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.296628, "examples": ["(sumt {}) -> 0", "(sumt {4 {9} {2 {5 {3} {0}}}}) -> 23", "(sumt {5 {2 {7}} {2}}) -> 16", "(sumt {8 {4}}) -> 12", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {0 {2}}}) -> 7", "(sumt {}) -> 0", "(sumt {4 {8}}) -> 12", "(sumt {5 {2 {9} {4}} {8 {7}}}) -> 35", "(sumt {8 {2}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.228355, "examples": ["(sumt {}) -> 0", "(sumt {8 {1} {1 {1}}}) -> 11", "(sumt {6 {8 {7} {0}} {2 {6 {9}} {4}}}) -> 42", "(sumt {2 {8} {7}}) -> 17", "(sumt {8 {7 {2} {8}}}) -> 25", "(sumt {1}) -> 1", "(sumt {4}) -> 4", "(sumt {1 {4} {1 {7}}}) -> 13", "(sumt {0 {9 {4 {7}}}}) -> 20", "(sumt {4 {4}}) -> 8", "(sumt {1 {7}}) -> 8", "(sumt {8 {5 {2} {6}} {6 {0} {9}}}) -> 36"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.343693, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {7 {6}}}) -> 20", "(sumt {8 {3}}) -> 11", "(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {0 {5} {4}}) -> 9", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {7}) -> 7", "(sumt {5}) -> 5", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.178738, "examples": ["(sumt {}) -> 0", "(sumt {1 {9}}) -> 10", "(sumt {0 {8} {2}}) -> 10", "(sumt {}) -> 0", "(sumt {4 {3} {8 {6}}}) -> 21", "(sumt {4 {7}}) -> 11", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {1 {5}}) -> 6", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {0 {9 {1 {2} {4}}}}) -> 16"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ c e)) c)) 0)) _) _)", "time": 0.826785, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {0} {8}}) -> 12", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {6 {5}}) -> 11", "(sumt {}) -> 0", "(sumt {1 {5}}) -> 6", "(sumt {5}) -> 5", "(sumt {5}) -> 5", "(sumt {8}) -> 8", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.889266, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5 {5 {2}}}) -> 12", "(sumt {5}) -> 5", "(sumt {4 {2}}) -> 6", "(sumt {7 {3}}) -> 10", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {6 {1}}) -> 7", "(sumt {5 {7} {6}}) -> 18", "(sumt {6 {2 {7}}}) -> 15", "(sumt {8 {2 {7} {7}} {7 {0} {4}}}) -> 35"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.887323, "examples": ["(sumt {}) -> 0", "(sumt {8 {8 {1} {0}} {3 {2}}}) -> 22", "(sumt {5 {2 {5} {9 {9} {3}}}}) -> 33", "(sumt {2 {5 {2} {2}}}) -> 11", "(sumt {3 {4} {0 {1}}}) -> 8", "(sumt {9 {0} {4 {9}}}) -> 22", "(sumt {1 {8} {7}}) -> 16", "(sumt {1}) -> 1", "(sumt {3 {6 {4} {8 {5}}} {5 {7 {3} {5}}}}) -> 46", "(sumt {7}) -> 7", "(sumt {5 {6 {4 {0} {3}}}}) -> 18", "(sumt {3}) -> 3"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.929158, "examples": ["(sumt {}) -> 0", "(sumt {5 {8} {6 {2 {5} {7}} {4}}}) -> 37", "(sumt {9 {7}}) -> 16", "(sumt {}) -> 0", "(sumt {1 {3} {7}}) -> 11", "(sumt {8 {4} {0}}) -> 12", "(sumt {3 {7}}) -> 10", "(sumt {3}) -> 3", "(sumt {5 {6} {6}}) -> 17", "(sumt {2}) -> 2", "(sumt {8 {2 {1 {7} {4}}}}) -> 22", "(sumt {5}) -> 5"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.331425, "examples": ["(sumt {}) -> 0", "(sumt {3 {1 {6 {6} {9}}}}) -> 25", "(sumt {6 {6 {8}} {1}}) -> 21", "(sumt {}) -> 0", "(sumt {6 {6 {2 {3}}}}) -> 17", "(sumt {8}) -> 8", "(sumt {9 {7} {2}}) -> 18", "(sumt {4 {4 {8}} {4}}) -> 20", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {5}) -> 5", "(sumt {4 {5} {1}}) -> 10"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.971062, "examples": ["(sumt {}) -> 0", "(sumt {8 {0}}) -> 8", "(sumt {7 {9}}) -> 16", "(sumt {5 {4}}) -> 9", "(sumt {5 {9}}) -> 14", "(sumt {3 {1 {0}}}) -> 4", "(sumt {}) -> 0", "(sumt {6 {6 {8 {4}}}}) -> 24", "(sumt {0 {0 {6} {0}}}) -> 6", "(sumt {7}) -> 7", "(sumt {5 {1 {7} {3}} {0}}) -> 16", "(sumt {0 {5} {6}}) -> 11"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.885575, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {4 {2}}) -> 6", "(sumt {2 {9}}) -> 11", "(sumt {5 {0 {3} {1}}}) -> 9", "(sumt {4 {5 {9} {9}} {6}}) -> 33", "(sumt {}) -> 0", "(sumt {4 {2} {4}}) -> 10", "(sumt {4}) -> 4", "(sumt {2 {5 {9} {7}}}) -> 23", "(sumt {1}) -> 1", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.068428, "examples": ["(sumt {}) -> 0", "(sumt {8 {0 {0}} {9 {5}}}) -> 22", "(sumt {4}) -> 4", "(sumt {7 {6} {4}}) -> 17", "(sumt {5 {7 {4} {6}} {8}}) -> 30", "(sumt {7 {8 {3}}}) -> 18", "(sumt {1 {3 {9 {8}} {5 {0}}} {0}}) -> 26", "(sumt {6}) -> 6", "(sumt {3 {9 {7} {6}} {7 {0} {0}}}) -> 32", "(sumt {}) -> 0", "(sumt {1 {5}}) -> 6", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.219015, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {7 {9} {1}}) -> 17", "(sumt {9 {9} {9}}) -> 27", "(sumt {3}) -> 3", "(sumt {6}) -> 6", "(sumt {9 {5}}) -> 14", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {6 {0}}) -> 6", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 1.073678, "examples": ["(sumt {}) -> 0", "(sumt {1 {0 {7} {5}} {1 {8}}}) -> 22", "(sumt {2 {1}}) -> 3", "(sumt {1 {9} {8 {1 {0}} {1 {6}}}}) -> 26", "(sumt {4 {1 {9}}}) -> 14", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0 {9 {6}} {3 {9} {1}}}) -> 28", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.832907, "examples": ["(sumt {}) -> 0", "(sumt {8 {6} {7}}) -> 21", "(sumt {2}) -> 2", "(sumt {5}) -> 5", "(sumt {4 {9} {2}}) -> 15", "(sumt {8 {6} {6}}) -> 20", "(sumt {1}) -> 1", "(sumt {}) -> 0", "(sumt {5 {0} {9}}) -> 14", "(sumt {3 {5} {5 {9 {4} {3}}}}) -> 29", "(sumt {}) -> 0", "(sumt {9 {9}}) -> 18"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.769378, "examples": ["(sumt {}) -> 0", "(sumt {9 {2} {1}}) -> 12", "(sumt {9}) -> 9", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4 {3}}) -> 7", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {2}) -> 2", "(sumt {}) -> 0", "(sumt {7 {5 {2 {5} {1}} {6 {3}}}}) -> 29"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.811986, "examples": ["(sumt {}) -> 0", "(sumt {2 {8} {1}}) -> 11", "(sumt {}) -> 0", "(sumt {5 {9} {0 {9 {1} {4}}}}) -> 28", "(sumt {5 {6} {0}}) -> 11", "(sumt {6 {4} {8}}) -> 18", "(sumt {5}) -> 5", "(sumt {6 {8}}) -> 14", "(sumt {1 {8}}) -> 9", "(sumt {4 {5}}) -> 9", "(sumt {4 {2 {0} {5}}}) -> 11", "(sumt {7}) -> 7"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.721977, "examples": ["(sumt {}) -> 0", "(sumt {8 {7}}) -> 15", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {9}) -> 9", "(sumt {2 {3 {8}} {9 {7} {9}}}) -> 38", "(sumt {2 {0} {9}}) -> 11", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {2}) -> 2", "(sumt {2 {4}}) -> 6"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.832315, "examples": ["(sumt {}) -> 0", "(sumt {0 {8 {2}} {9 {4} {2}}}) -> 25", "(sumt {4}) -> 4", "(sumt {1 {3 {3}} {6}}) -> 13", "(sumt {7 {6}}) -> 13", "(sumt {8 {2}}) -> 10", "(sumt {4}) -> 4", "(sumt {9 {5 {2 {1}} {8}} {4 {0}}}) -> 29", "(sumt {9 {6}}) -> 15", "(sumt {1 {5 {7 {9}}} {3 {0 {1} {2}}}}) -> 28", "(sumt {8 {0} {6}}) -> 14", "(sumt {0 {9 {6}}}) -> 15"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.724685, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {0}) -> 0", "(sumt {1 {0}}) -> 1", "(sumt {7}) -> 7", "(sumt {}) -> 0", "(sumt {9 {2 {3}}}) -> 14", "(sumt {5 {3} {4 {6 {2}} {2 {4}}}}) -> 26", "(sumt {}) -> 0", "(sumt {6}) -> 6", "(sumt {}) -> 0", "(sumt {0}) -> 0"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.563934, "examples": ["(sumt {}) -> 0", "(sumt {1}) -> 1", "(sumt {9 {2 {1}}}) -> 12", "(sumt {6}) -> 6", "(sumt {7}) -> 7", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {5 {8 {2} {7}} {9}}) -> 31", "(sumt {3}) -> 3", "(sumt {9}) -> 9", "(sumt {5}) -> 5", "(sumt {9}) -> 9"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.540869, "examples": ["(sumt {}) -> 0", "(sumt {9 {1 {2}}}) -> 12", "(sumt {}) -> 0", "(sumt {7 {4}}) -> 11", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {0 {6} {9}}) -> 15", "(sumt {6 {0 {6 {7} {5}} {0 {4} {1}}}}) -> 29", "(sumt {8 {8 {4}}}) -> 20", "(sumt {2}) -> 2"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.478663, "examples": ["(sumt {}) -> 0", "(sumt {8}) -> 8", "(sumt {4 {7} {3 {9 {5} {0}} {7 {8} {7}}}}) -> 50", "(sumt {8 {7} {4}}) -> 19", "(sumt {9}) -> 9", "(sumt {8 {3 {6}} {8 {9} {1}}}) -> 35", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {4}) -> 4", "(sumt {4 {0 {7}} {0 {9}}}) -> 20"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.447534, "examples": ["(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {5}) -> 5", "(sumt {8}) -> 8", "(sumt {6}) -> 6", "(sumt {7}) -> 7", "(sumt {6 {0}}) -> 6", "(sumt {}) -> 0", "(sumt {5 {6}}) -> 11", "(sumt {8 {1 {6} {5}} {8 {9} {3}}}) -> 40"]}
{"name": "sumt", "solution": "(let sumt (let a (lambda (b) (foldt b (lambda (d c) (foldl d (lambda (f e) (+ f e)) c)) 0)) _) _)", "time": 0.577251, "examples": ["(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {}) -> 0", "(sumt {3}) -> 3", "(sumt {9 {1}}) -> 10", "(sumt {6 {9}}) -> 15", "(sumt {8 {9} {9}}) -> 26", "(sumt {3 {8} {4}}) -> 15", "(sumt {}) -> 0", "(sumt {4 {1}}) -> 5", "(sumt {5 {4} {8}}) -> 17", "(sumt {9}) -> 9"]}
